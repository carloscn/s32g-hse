/*
** ###################################################################
**     Processor:           S32G274A
**     Reference manual:    S32G274A RM Rev.1 Draft P
**     Version:             rev. 1.1
**     Build:               b190920
**
**     Abstract:
**         Peripheral Access Layer for S32G274A
**
**     Copyright 1997-2016 Freescale Semiconductor, Inc.
**     Copyright 2016-2019 NXP
**
**     NXP Confidential. This software is owned or controlled by NXP and may only be
**     used strictly in accordance with the applicable license terms. By expressly
**     accepting such terms or by downloading, installing, activating and/or otherwise
**     using the software, you are agreeing that you have read, and that you agree to
**     comply with and are bound by, such license terms. If you do not agree to be
**     bound by the applicable license terms, then you may not retain, install,
**     activate or otherwise use the software. The production use license in
**     Section 2.3 is expressly granted for this software.
**
**     http:                 www.nxp.com
**     mail:                 support@nxp.com
**
**     Revisions:
**     - rev. 1.0 Taru Shree 30-July-19  1)Initial release based on
**                                       RM Rev.1 Draft O.
**
**     - rev. 1.1 Taru Shree 20-Sep-19   1)Initial release based on
**                                       RM Rev.1 Draft P.
**                                       2)CTU-
**                                       -Array name is changed
**                                       from CLR_C__CLR_B__CLR_A to CLR_A
**                                       -Register names are changed
**                                        from CLR_A, CLR_B and CLR_C
**                                        to A, B and C respectively.
**                                       3)FLEXRXAY-
**                                       -Alternate group names are changed
**                                        from TI2CR0_REL_TI2CR0_ABS to TI2CR0.
**                                        from TI2CR1_REL_TI2CR1_ABS to TI2CR1.
**                                       -Register names are changed
**                                        from TI2CRx_ABS to ABS.
**                                        from TI2CRx_REL to REL.
**                                       4)MU- Base Addresses are changed
**                                       -MU1__MUB: 0x40210000 to 0x40211000
**                                       -MU2__MUB: 0x40210000 to 0x40212000
**                                       -MU3__MUB: 0x40210000 to 0x40213000
**                                       5)SEMA42-
**                                       -Register names are changed
**                                        from RSTGT_R to R.
**                                        from RSTGT_W to W.
**                                       6)SPI-
**                                       -Alternate group names are changed
**                                        from CTAR_CTAR_SLAVE to MODE.
**                                        from PUSHR_SLAVE_PUSHR to PUSHR.
**                                       7)REG_PROT-
**                                        Number of SLBR registers are changed.
**                                       8)License is updated.
**
** ###################################################################
*/

/*!
 * @file S32G274A.h
 * @version 1.0
 * @date 2019-04-17
 * @brief Peripheral Access Layer for S32G274A
 *
 * This file contains register definitions and macros for easy access to their
 * bit fields.
 *
 * This file assumes LITTLE endian system.
 */

/**
* @page misra_violations MISRA-C:2012 violations
*
* @section [global]
* Violates MISRA 2012 Advisory Rule 2.3, local typedef not referenced
* The SoC header defines typedef for all modules.
*
* @section [global]
* Violates MISRA 2012 Advisory Rule 2.5, local macro not referenced
* The SoC header defines macros for all modules and registers.
*
* @section [global]
* Violates MISRA 2012 Advisory Directive 4.9, Function-like macro
* These are generated macros used for accessing the bit-fields from registers.
*
* @section [global]
* Violates MISRA 2012 Required Rule 5.1, identifier clash
* The supported compilers use more than 31 significant characters for identifiers.
*
* @section [global]
* Violates MISRA 2012 Required Rule 5.2, identifier clash
* The supported compilers use more than 31 significant characters for identifiers.
*
* @section [global]
* Violates MISRA 2012 Required Rule 5.4, identifier clash
* The supported compilers use more than 31 significant characters for identifiers.
*
* @section [global]
* Violates MISRA 2012 Required Rule 5.5, identifier clash
* The supported compilers use more than 31 significant characters for identifiers.
*
* @section [global]
* Violates MISRA 2012 Required Rule 21.1, defined macro '__I' is reserved to the compiler
* This type qualifier is needed to ensure correct I/O access and addressing.
*/


/* ----------------------------------------------------------------------------
   -- MCU activation
   ---------------------------------------------------------------------------- */

/* Prevention from multiple including the same memory map */
#if !defined(S32G274A_H_)  /* Check if memory map has not been already included */
#define S32G274A_H_
#define MCU_S32G274A

/* Check if another memory map has not been also included */
#if (defined(MCU_ACTIVE))
  #error S32G274A memory map: There is already included another memory map. Only one memory map can be included.
#endif /* (defined(MCU_ACTIVE)) */
#define MCU_ACTIVE

#include <stdint.h>

/** Memory map major version (memory maps with equal major version number are
 * compatible) */
#define MCU_MEM_MAP_VERSION 0x0100U
/** Memory map minor version */
#define MCU_MEM_MAP_VERSION_MINOR 0x0000U

/* ----------------------------------------------------------------------------
   -- Generic macros
   ---------------------------------------------------------------------------- */

/* IO definitions (access restrictions to peripheral registers) */
/**
*   IO Type Qualifiers are used
*   \li to specify the access to peripheral variables.
*   \li for automatic generation of peripheral register debug information.
*/
#ifndef __IO
#ifdef __cplusplus
  #define   __I     volatile             /*!< Defines 'read only' permissions                 */
#else
  #define   __I     volatile const       /*!< Defines 'read only' permissions                 */
#endif
#define     __O     volatile             /*!< Defines 'write only' permissions                */
#define     __IO    volatile             /*!< Defines 'read / write' permissions              */
#endif


/**
* @brief 32 bits memory read macro.
*/
#if !defined(REG_READ32)
  #define REG_READ32(address)               (*(volatile uint32_t*)(address))
#endif

/**
* @brief 32 bits memory write macro.
*/
#if !defined(REG_WRITE32)
  #define REG_WRITE32(address, value)       ((*(volatile uint32_t*)(address))= (uint32_t)(value))
#endif

/**
* @brief 32 bits bits setting macro.
*/
#if !defined(REG_BIT_SET32)
  #define REG_BIT_SET32(address, mask)      ((*(volatile uint32_t*)(address))|= (uint32_t)(mask))
#endif

/**
* @brief 32 bits bits clearing macro.
*/
#if !defined(REG_BIT_CLEAR32)
  #define REG_BIT_CLEAR32(address, mask)    ((*(volatile uint32_t*)(address))&= ((uint32_t)~((uint32_t)(mask))))
#endif

/**
* @brief 32 bit clear bits and set with new value
* @note It is user's responsability to make sure that value has only "mask" bits set - (value&~mask)==0
*/
#if !defined(REG_RMW32)
  #define REG_RMW32(address, mask, value)   (REG_WRITE32((address), ((REG_READ32(address)& ((uint32_t)~((uint32_t)(mask))))| ((uint32_t)(value)))))
#endif


/* ----------------------------------------------------------------------------
   -- Interrupt vector numbers
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup Interrupt_vector_numbers Interrupt vector numbers
 * @{
 */

/** Interrupt Number Definitions */
#define NUMBER_OF_INT_VECTORS 230                /**< Number of interrupts in the Vector table */

typedef enum {
  /* Auxiliary constants */
  NotAvail_IRQn                = -128,             /**< Not available device specific interrupt */

  /* Core interrupts */
  NonMaskableInt_IRQn          = -14,              /**< Non Maskable Interrupt */
  HardFault_IRQn               = -13,              /**< Cortex-M7 SV Hard Fault Interrupt */
  MemoryManagement_IRQn        = -12,              /**< Cortex-M7 Memory Management Interrupt */
  BusFault_IRQn                = -11,              /**< Cortex-M7 Bus Fault Interrupt */
  UsageFault_IRQn              = -10,              /**< Cortex-M7 Usage Fault Interrupt */
  SVCall_IRQn                  = -5,               /**< Cortex-M7 SV Call Interrupt */
  DebugMonitor_IRQn            = -4,               /**< Cortex-M7 Debug Monitor Interrupt */
  PendSV_IRQn                  = -2,               /**< Cortex-M7 Pend SV Interrupt */
  SysTick_IRQn                 = -1,               /**< Cortex-M7 System Tick Interrupt */

  /* Device specific interrupts */
  PCIE1_MSI_IRQn               = 0u,               /**< PCIe_1 MSI interrupt to M7/A53 */
  INT0_IRQn                    = 1u,               /**< Software generated CPU interrupt to A53 core - interrupt#0 */
  INT1_IRQn                    = 2u,               /**< Software generated CPU interrupt to A53 core - interrupt#1 */
  INT2_IRQn                    = 3u,               /**< Software generated CPU interrupt to A53 core - interrupt#2 */
  PCIE0_MSI_IRQn               = 4u,               /**< PCIe_0 MSI interrupt to M7/A53 */
  CTI0_IRQn                    = 5u,               /**< M7-only: CTI interrupt[0] */
  CTI1_IRQn                    = 6u,               /**< M7-only: CTI interrupt[1] */
  MCM_IRQn                     = 7u,               /**< Cortex M7 interrupt for FPU events and TCM errors */
  DMA0_0_15_IRQn               = 8u,               /**< eDMA0 - DMA interrupt CH0-15 */
  DMA0_16_31_IRQn              = 9u,               /**< eDMA0 - DMA interrupt CH16-31 */
  DMA0_ERR0_31_IRQn            = 10u,              /**< eDMA0 - DMA error interrupt */
  DMA1_0_15_IRQn               = 11u,              /**< eDMA1 - DMA interrupt  CH0-15 */
  DMA1_16_31_IRQn              = 12u,              /**< eDMA1 - DMA interrupt CH0-15 */
  DMA1_ERR0_31_IRQn            = 13u,              /**< eDMA1 - DMA error interrupt */
  SWT0_IRQn                    = 14u,              /**< Watchdog timer interrupt */
  SWT1_IRQn                    = 15u,              /**< Watchdog timer interrupt */
  SWT2_IRQn                    = 16u,              /**< Watchdog timer interrupt */
  SWT3_IRQn                    = 17u,              /**< Watchdog timer interrupt */
  SWT4_IRQn                    = 18u,              /**< Watchdog timer interrupt */
  SWT5_IRQn                    = 19u,              /**< Watchdog timer interrupt */
  SWT6_IRQn                    = 20u,              /**< Watchdog timer interrupt */
  SWT7_IRQn                    = 21u,              /**< Watchdog timer interrupt */
  STM0_IRQn                    = 24u,              /**< STM0 interrupt channel request 0, 1, 2, 3 */
  STM1_IRQn                    = 25u,              /**< STM1 interrupt channel request 0, 1, 2, 3 */
  STM2_IRQn                    = 26u,              /**< STM2 interrupt channel request 0, 1, 2, 3 */
  STM3_IRQn                    = 27u,              /**< STM3 interrupt channel request 0, 1, 2, 3 */
  STM4_IRQn                    = 28u,              /**< STM4 interrupt channel request 0, 1, 2, 3 */
  STM5_IRQn                    = 29u,              /**< STM5 interrupt channel request 0, 1, 2, 3 */
  STM6_IRQn                    = 30u,              /**< STM6 interrupt channel request 0, 1, 2, 3 */
  STM7_IRQn                    = 31u,              /**< STM7 interrupt channel request 0, 1, 2, 3 */
  QUADSPI_ORED_IRQ             = 32u,              /**< QSPI Ored interrupt via OTC */
  QUADSPI_FLASHA_IRQ           = 33u,              /**< Flash A Error interrupt via OTC */
  QUADSPI_FLASHB_IRQ           = 34u,              /**< Flash B Error interrupt via OTC */
  STCU2_IRQn                   = 35u,              /**< LBIST + MBIST IRQ */
  USDHC_IRQn                   = 36u,              /**< uSDHC Interrupt */
  CAN0_ORED_IRQn               = 37u,              /**< CAN0 OR'ed [Bus Off OR Transmit Warning OR Receive Warning] */
  CAN0_ERR_IRQn                = 38u,              /**< CAN0 Interrupt indicating that errors were detected on the CAN bus */
  CAN0_ORED_0_7_MB_IRQn        = 39u,              /**< CAN0 OR'ed Message buffer (0-7) */
  CAN0_ORED_8_127_MB_IRQn      = 40u,              /**< CAN0 OR'ed Message buffer (8-127) */
  CAN1_ORED_IRQn               = 41u,              /**< CAN1 OR'ed [Bus Off OR Transmit Warning OR Receive Warning] */
  CAN1_ERR_IRQn                = 42u,              /**< CAN1 Interrupt indicating that errors were detected on the CAN bus */
  CAN1_ORED_0_7_MB_IRQn        = 43u,              /**< CAN1 OR'ed Message buffer (0-7) */
  CAN1_ORED_8_127_MB_IRQn      = 44u,              /**< CAN1 OR'ed Message buffer (8-127) */
  CAN2_ORED_IRQn               = 45u,              /**< CAN2 OR'ed [Bus Off OR Transmit Warning OR Receive Warning] */
  CAN2_ERR_IRQn                = 46u,              /**< CAN2 Interrupt indicating that errors were detected on the CAN bus */
  CAN2_ORED_0_7_MB_IRQn        = 47u,              /**< CAN2 OR'ed Message buffer (0-7) */
  CAN2_ORED_8_127_MB_IRQn      = 48u,              /**< CAN2 OR'ed Message buffer (8-127) */
  CAN3_ORED_IRQn               = 49u,              /**< CAN3 OR'ed [Bus Off OR Transmit Warning OR Receive Warning] */
  CAN3_ERR_IRQn                = 50u,              /**< CAN3 Interrupt indicating that errors were detected on the CAN bus */
  CAN3_ORED_0_7_MB_IRQn        = 51u,              /**< CAN3 OR'ed Message buffer (0-7) */
  CAN3_ORED_8_127_MB_IRQn      = 52u,              /**< CAN3 OR'ed Message buffer (8-127) */
  PIT0_IRQn                    = 53u,              /**< OR'ed Interrupt for Channel 0, 1, 2, 3, 4, 5, 6 */
  PIT1_IRQn                    = 54u,              /**< OR'ed Interrupt for Channel 0, 1, 2, 3, 4, 5 */
  FTM0_IRQn                    = 55u,              /**< OR'ed Interrupt for Channel 0, 1, 2, 3, 4, 5, Overflow, Reload */
  FTM1_IRQn                    = 56u,              /**< OR'ed Interrupt for Channel 0, 1, 2, 3, 4, 5, Overflow, Reload */
  GMAC0_Common_IRQn            = 57u,              /**< Common Interrupt */
  GMAC0_CH0_TX_IRQn            = 58u,              /**< Channel0 TX Interrupt */
  GMAC0_CH0_RX_IRQn            = 59u,              /**< Channel0 RX Interrupt */
  GMAC0_CH1_TX_IRQn            = 60u,              /**< Channel1 TX Interrupt */
  GMAC0_CH1_RX_IRQn            = 61u,              /**< Channel1 RX Interrupt */
  GMAC0_CH2_TX_IRQn            = 62u,              /**< Channel2 TX Interrupt */
  GMAC0_CH2_RX_IRQn            = 63u,              /**< Channel2 RX Interrupt */
  GMAC0_CH3_TX_IRQn            = 64u,              /**< Channel3 TX Interrupt */
  GMAC0_CH3_RX_IRQn            = 65u,              /**< Channel3 RX Interrupt */
  GMAC0_CH4_TX_IRQn            = 66u,              /**< Channel4 TX Interrupt */
  GMAC0_CH4_RX_IRQn            = 67u,              /**< Channel4 RX Interrupt */
  SARADC0_IRQn                 = 70u,              /**< EOC + ERR + Watchdog Interrupt */
  SARADC1_IRQn                 = 71u,              /**< EOC + ERR + Watchdog Interrupt */
  FLEXRAY0_NCERR_IRQn          = 72u,              /**< LRAM & DRAM Non-Corrected Error interrupt */
  FLEXRAY0_CERR_IRQn           = 73u,              /**< LRAM & DRAM Corrected Error interrupt */
  FLEXRAY0_CH0_RX_FIFO_IRQn    = 74u,              /**< Receive FIFO channel A not empty interrupt */
  FLEXRAY0_CH1_RX_FIFO_IRQn    = 75u,              /**< Receive FIFO channel B not empty interrupt */
  FLEXRAY0_WKUP_IRQn           = 76u,              /**< Wakeup interrupt */
  FLEXRAY0_STATUS_IRQn         = 77u,              /**< Combined protocol status and error interrupt */
  FLEXRAY0_CMBERR_IRQn         = 78u,              /**< Combined CHI error interrupt */
  FLEXRAY0_TX_BUFF_IRQn        = 79u,              /**< Combined transmit message buffer interrupt */
  FLEXRAY0_RX_BUFF_IRQn        = 80u,              /**< Combined receive message buffer interrupt */
  FLEXRAY0_MODULE_IRQn         = 81u,              /**< Combined module interrupt */
  LINFLEXD0_IRQn               = 82u,              /**< Internal all interrupt request */
  LINFLEXD1_IRQn               = 83u,              /**< Internal all interrupt request */
  LINFLEXD2_IRQn               = 84u,              /**< Internal all interrupt request */
  SPI0_IRQn                    = 85u,              /**< OR'ed DSPI Global Interrupt */
  SPI1_IRQn                    = 86u,              /**< OR'ed DSPI Global Interrupt */
  SPI2_IRQn                    = 87u,              /**< OR'ed DSPI Global Interrupt */
  SPI3_IRQn                    = 88u,              /**< OR'ed DSPI Global Interrupt */
  SPI4_IRQn                    = 89u,              /**< OR'ed DSPI Global Interrupt */
  SPI5_IRQn                    = 90u,              /**< OR'ed DSPI Global Interrupt */
  I2C0_IRQn                    = 92u,              /**< Interrupt Request */
  I2C1_IRQn                    = 93u,              /**< Interrupt Request */
  I2C2_IRQn                    = 94u,              /**< Interrupt Request */
  I2C3_IRQn                    = 95u,              /**< Interrupt Request */
  I2C4_IRQn                    = 96u,              /**< Interrupt Request */
  MC_RGM_IRQn                  = 98u,              /**< Interrupt Request to System */
  FCCU_ALARM_IRQn              = 100u,             /**< Interrupt request (ALARM state) */
  FCCU_MISC_IRQn               = 101u,             /**< Interrupt request (miscellaneous conditions) */
  SBSW_IRQn                    = 102u,             /**< Interrupt triggered by writing to the TMWDP CONFG_ADDR Register */
  HSE_MU0_TX_IRQn              = 103u,             /**< Ored tx interrupt to MU-0 */
  HSE_MU0_RX_IRQn              = 104u,             /**< Ored rx interrupt to MU-0 */
  HSE_MU0_ORED_IRQn            = 105u,             /**< ORed general purpose interrupt request to MU-0 */
  HSE_MU1_TX_IRQn              = 106u,             /**< Ored tx interrupt to MU-1 */
  HSE_MU1_RX_IRQn              = 107u,             /**< Ored rx interrupt to MU-1 */
  HSE_MU1_ORED_IRQn            = 108u,             /**< ORed general purpose interrupt request to MU-1 */
  HSE_MU2_TX_IRQn              = 109u,             /**< Ored tx interrupt to MU-2 */
  HSE_MU2_RX_IRQn              = 110u,             /**< Ored rx interrupt to MU-2 */
  HSE_MU2_ORED_IRQn            = 111u,             /**< ORed general purpose interrupt request to MU-2 */
  HSE_MU3_TX_IRQn              = 112u,             /**< Ored tx interrupt to MU-3 */
  HSE_MU3_RX_IRQn              = 113u,             /**< Ored rx interrupt to MU-3 */
  HSE_MU3_ORED_IRQn            = 114u,             /**< ORed general purpose interrupt request to MU-3 */
  DDR0_SCRUB_IRQn              = 115u,             /**< Scrubber interrupt indicating one full address range sweep */
  DDR0_PHY_IRQn                = 116u,             /**< PHY address decoding error inside DDR SS, PHY interrupt */
  CTU_FIFO_IRQn                = 117u,             /**< FIFO0 | FIFO1 | FIFO2 | FIFO3 Full or Empty or Overflow or Overrun */
  CTU_TRIG_IRQn                = 118u,             /**< Master reload, Trigger 0-7, ADC cmd */
  CTU_ERR_IRQn                 = 119u,             /**< Error interrupt */
  TMU_IRQn                     = 120u,             /**< Level sensitive temperature alarm interrupt | Level sensitive critical temperature alarm interrupt */
  RTC0_IRQn                    = 121u,             /**< RTCF or ROVRF interrupt to be serviced by the system controller | APIF interrupt to be serviced by the system controller */
  OTC_INT0_SLOT0_IRQn          = 135u,             /**< OTC Interrupt 0 OS_SLOT_0 via platform */
  OTC_INT1_SLOT0_IRQn          = 136u,             /**< OTC Interrupt 1 OS_SLOT_0 via platform */
  OTC_INT0_SLOT1_IRQn          = 137u,             /**< OTC Interrupt 0 OS_SLOT_1 via platform */
  OTC_INT1_SLOT1_IRQn          = 138u,             /**< OTC Interrupt 1 OS_SLOT_1 via platform */
  OTC_INT0_SLOT2_IRQn          = 139u,             /**< OTC Interrupt 0 OS_SLOT_2 via platform */
  OTC_INT1_SLOT2_IRQn          = 140u,             /**< OTC Interrupt 1 OS_SLOT_2 via platform */
  OTC_INT0_SLOT3_IRQn          = 141u,             /**< OTC Interrupt 0 OS_SLOT_3 via platform */
  OTC_INT1_SLOT3_IRQn          = 142u,             /**< OTC Interrupt 1 OS_SLOT_3 via platform */
  OTC_INT0_SLOT4_IRQn          = 143u,             /**< OTC Interrupt 0 OS_SLOT_4 via platform */
  OTC_INT1_SLOT4_IRQn          = 144u,             /**< OTC Interrupt 1 OS_SLOT_4 via platform */
  OTC_CTRL_NOTIF_IRQn          = 145u,             /**< OTC controller notification interrupt via platform */
  OTC_CTRL_ERR_IRQn            = 146u,             /**< OTC controller error interrupt via platform */
  OTC_SOFT_NOTIF_IRQn          = 147u,             /**< OTC software notification interrupt via platform */
  OTC_REG_ERR_IRQn             = 148u,             /**< OTC register access error interrupt via platform */
  OTC_AUTH_REQ_IRQn            = 149u,             /**< OTC authentication request interrupt via platform */
  OTC_CRIT_ERR_IRQn            = 150u,             /**< OTC critical error interrupt via platform */
  JDC_IRQn                     = 155u,             /**< Indicates data ready to be read from JIN_IPS register or new data can be written to JOUT_IPS register when asserted */
  LLCE0_INT0_IRQn              = 170u,             /**< Host Interrupt from Core0 */
  LLCE0_INT1_IRQn              = 171u,             /**< Host Interrupt from Core1 */
  LLCE0_INT2_IRQn              = 172u,             /**< Host Interrupt from Core2 */
  LLCE0_INT3_IRQn              = 173u,             /**< Host Interrupt from Core3 */
  LLCE0_ICSR14_IRQn            = 174u,             /**< FIFO ICSR14 */
  LLCE0_ICSR15_IRQn            = 175u,             /**< FIFO ICSR15 */
  LLCE0_ICSR16_IRQn            = 176u,             /**< FIFO ICSR16 */
  LLCE0_ICSR17_IRQn            = 177u,             /**< FIFO ICSR17 */
  LLCE0_ICSR18_IRQn            = 178u,             /**< FIFO ICSR18 */
  LLCE0_ICSR19_IRQn            = 179u,             /**< FIFO ICSR19 */
  LLCE0_ICSR20_IRQn            = 180u,             /**< FIFO ICSR20 */
  LLCE0_ICSR21_IRQn            = 181u,             /**< FIFO ICSR21 */
  LLCE0_ICSR22_IRQn            = 182u,             /**< FIFO ICSR22 */
  LLCE0_ICSR23_IRQn            = 183u,             /**< FIFO ICSR23 */
  LLCE0_ICSR24_IRQn            = 184u,             /**< FIFO ICSR24 */
  LLCE0_ICSR25_IRQn            = 185u,             /**< FIFO ICSR25 */
  LLCE0_ICSR26_IRQn            = 186u,             /**< FIFO ICSR26 */
  LLCE0_ICSR27_IRQn            = 187u,             /**< FIFO ICSR27 */
  STM_TS_CH_REQ_IRQn           = 204u,             /**< Interrupt Channel Request 0,1,2,3 */
  SIUL1_ORED_IRQn              = 210u,             /**< Logical OR of all pin interrupts */
  USB0_OTG_CORE_IRQn           = 211u,             /**< OTG CORE Interrupt */
  USB0_OTG_WKP_IRQn            = 212u,             /**< OTG Wakeup Interrupt */
  WKPU_GRP_IRQn                = 213u              /**< interrupts from pad group 0,1,2,3 */
} IRQn_Type;

/*!
 * @}
 */ /* end of group Interrupt_vector_numbers */


/* ----------------------------------------------------------------------------
   -- Cortex M7 Core Configuration
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup Cortex_Core_Configuration Cortex M7 Core Configuration
 * @{
 */

#define __MPU_PRESENT                  1         /**< Defines if an MPU is present or not */
#define __ICACHE_PRESENT               1         /**< Defines if an ICACHE is present or not */
#define __DCACHE_PRESENT               1         /**< Defines if an DCACHE is present or not */
#define __DTCM_PRESENT                 1         /**< Defines if an DTCM is present or not */
#define __NVIC_PRIO_BITS               4         /**< Number of priority bits implemented in the NVIC */
#define __Vendor_SysTickConfig         0         /**< Vendor specific implementation of SysTickConfig is defined */
#define __FPU_PRESENT                  1         /**< Defines if an FPU is present or not */

/*!
 * @}
 */ /* end of group Cortex_Core_Configuration */


/* ----------------------------------------------------------------------------
   -- Device Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup Peripheral_access_layer Device Peripheral Access Layer
 * @{
 */


/* ----------------------------------------------------------------------------
   -- S32_NVIC Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup S32_NVIC_Peripheral_Access_Layer S32_NVIC Peripheral Access Layer
 * @{
 */


/** S32_NVIC - Size of Registers Arrays */
#define S32_NVIC_ISER_COUNT                      8u
#define S32_NVIC_ICER_COUNT                      8u
#define S32_NVIC_ISPR_COUNT                      8u
#define S32_NVIC_ICPR_COUNT                      8u
#define S32_NVIC_IABR_COUNT                      8u
#define S32_NVIC_IP_COUNT                        240u

/** S32_NVIC - Register Layout Typedef */
typedef struct {
       uint8_t RESERVED_0[4];
  __I  uint32_t ICTR;                              /**< Interrupt Control Type Register, offset: 0x4 */
       uint8_t RESERVED_1[248];
  __IO uint32_t ISER[S32_NVIC_ISER_COUNT];         /**< Interrupt Set Enable Register n, array offset: 0x100, array step: 0x4 */
       uint8_t RESERVED_2[96];
  __IO uint32_t ICER[S32_NVIC_ICER_COUNT];         /**< Interrupt Clear Enable Register n, array offset: 0x180, array step: 0x4 */
       uint8_t RESERVED_3[96];
  __IO uint32_t ISPR[S32_NVIC_ISPR_COUNT];         /**< Interrupt Set Pending Register n, array offset: 0x200, array step: 0x4 */
       uint8_t RESERVED_4[96];
  __IO uint32_t ICPR[S32_NVIC_ICPR_COUNT];         /**< Interrupt Clear Pending Register n, array offset: 0x280, array step: 0x4 */
       uint8_t RESERVED_5[96];
  __IO uint32_t IABR[S32_NVIC_IABR_COUNT];         /**< Interrupt Active bit Register n, array offset: 0x300, array step: 0x4 */
       uint8_t RESERVED_6[224];
  __IO uint8_t IP[S32_NVIC_IP_COUNT];              /**< Interrupt Priority Register n, array offset: 0x400, array step: 0x1 */
       uint8_t RESERVED_7[2576];
  __O  uint32_t STIR;                              /**< Software Trigger Interrupt Register, offset: 0xF00 */
} S32_NVIC_Type, *S32_NVIC_MemMapPtr;

 /** Number of instances of the S32_NVIC module. */
#define S32_NVIC_INSTANCE_COUNT                  (1u)


/* S32_NVIC - Peripheral instance base addresses */
/** Peripheral S32_NVIC base address */
#define S32_NVIC_BASE                            (0xE000E000u)
/** Peripheral S32_NVIC base pointer */
#define S32_NVIC                                 ((S32_NVIC_Type *)S32_NVIC_BASE)
/** Array initializer of S32_NVIC peripheral base addresses */
#define S32_NVIC_BASE_ADDRS                      { S32_NVIC_BASE }
/** Array initializer of S32_NVIC peripheral base pointers */
#define S32_NVIC_BASE_PTRS                       { S32_NVIC }

/* ----------------------------------------------------------------------------
   -- S32_NVIC Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup S32_NVIC_Register_Masks S32_NVIC Register Masks
 * @{
 */

/* ICTR Bit Fields */
#define S32_NVIC_ICTR_ICTR_MASK                  0xFFFFFFFFu
#define S32_NVIC_ICTR_ICTR_SHIFT                 0u
#define S32_NVIC_ICTR_ICTR_WIDTH                 32u
#define S32_NVIC_ICTR_ICTR(x)                    (((uint32_t)(((uint32_t)(x))<<S32_NVIC_ICTR_ICTR_SHIFT))&S32_NVIC_ICTR_ICTR_MASK)
/* ISER Bit Fields */
#define S32_NVIC_ISER_SETENA_MASK                0xFFFFFFFFu
#define S32_NVIC_ISER_SETENA_SHIFT               0u
#define S32_NVIC_ISER_SETENA_WIDTH               32u
#define S32_NVIC_ISER_SETENA(x)                  (((uint32_t)(((uint32_t)(x))<<S32_NVIC_ISER_SETENA_SHIFT))&S32_NVIC_ISER_SETENA_MASK)
/* ICER Bit Fields */
#define S32_NVIC_ICER_CLRENA_MASK                0xFFFFFFFFu
#define S32_NVIC_ICER_CLRENA_SHIFT               0u
#define S32_NVIC_ICER_CLRENA_WIDTH               32u
#define S32_NVIC_ICER_CLRENA(x)                  (((uint32_t)(((uint32_t)(x))<<S32_NVIC_ICER_CLRENA_SHIFT))&S32_NVIC_ICER_CLRENA_MASK)
/* ISPR Bit Fields */
#define S32_NVIC_ISPR_SETPEND_MASK               0xFFFFFFFFu
#define S32_NVIC_ISPR_SETPEND_SHIFT              0u
#define S32_NVIC_ISPR_SETPEND_WIDTH              32u
#define S32_NVIC_ISPR_SETPEND(x)                 (((uint32_t)(((uint32_t)(x))<<S32_NVIC_ISPR_SETPEND_SHIFT))&S32_NVIC_ISPR_SETPEND_MASK)
/* ICPR Bit Fields */
#define S32_NVIC_ICPR_CLRPEND_MASK               0xFFFFFFFFu
#define S32_NVIC_ICPR_CLRPEND_SHIFT              0u
#define S32_NVIC_ICPR_CLRPEND_WIDTH              32u
#define S32_NVIC_ICPR_CLRPEND(x)                 (((uint32_t)(((uint32_t)(x))<<S32_NVIC_ICPR_CLRPEND_SHIFT))&S32_NVIC_ICPR_CLRPEND_MASK)
/* IABR Bit Fields */
#define S32_NVIC_IABR_ACTIVE_MASK                0xFFFFFFFFu
#define S32_NVIC_IABR_ACTIVE_SHIFT               0u
#define S32_NVIC_IABR_ACTIVE_WIDTH               32u
#define S32_NVIC_IABR_ACTIVE(x)                  (((uint32_t)(((uint32_t)(x))<<S32_NVIC_IABR_ACTIVE_SHIFT))&S32_NVIC_IABR_ACTIVE_MASK)
/* IP Bit Fields */
#define S32_NVIC_IP_PRI0_MASK                    0xFFu
#define S32_NVIC_IP_PRI0_SHIFT                   0u
#define S32_NVIC_IP_PRI0_WIDTH                   8u
#define S32_NVIC_IP_PRI0(x)                      (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI0_SHIFT))&S32_NVIC_IP_PRI0_MASK)
#define S32_NVIC_IP_PRI1_MASK                    0xFFu
#define S32_NVIC_IP_PRI1_SHIFT                   0u
#define S32_NVIC_IP_PRI1_WIDTH                   8u
#define S32_NVIC_IP_PRI1(x)                      (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI1_SHIFT))&S32_NVIC_IP_PRI1_MASK)
#define S32_NVIC_IP_PRI2_MASK                    0xFFu
#define S32_NVIC_IP_PRI2_SHIFT                   0u
#define S32_NVIC_IP_PRI2_WIDTH                   8u
#define S32_NVIC_IP_PRI2(x)                      (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI2_SHIFT))&S32_NVIC_IP_PRI2_MASK)
#define S32_NVIC_IP_PRI3_MASK                    0xFFu
#define S32_NVIC_IP_PRI3_SHIFT                   0u
#define S32_NVIC_IP_PRI3_WIDTH                   8u
#define S32_NVIC_IP_PRI3(x)                      (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI3_SHIFT))&S32_NVIC_IP_PRI3_MASK)
#define S32_NVIC_IP_PRI4_MASK                    0xFFu
#define S32_NVIC_IP_PRI4_SHIFT                   0u
#define S32_NVIC_IP_PRI4_WIDTH                   8u
#define S32_NVIC_IP_PRI4(x)                      (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI4_SHIFT))&S32_NVIC_IP_PRI4_MASK)
#define S32_NVIC_IP_PRI5_MASK                    0xFFu
#define S32_NVIC_IP_PRI5_SHIFT                   0u
#define S32_NVIC_IP_PRI5_WIDTH                   8u
#define S32_NVIC_IP_PRI5(x)                      (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI5_SHIFT))&S32_NVIC_IP_PRI5_MASK)
#define S32_NVIC_IP_PRI6_MASK                    0xFFu
#define S32_NVIC_IP_PRI6_SHIFT                   0u
#define S32_NVIC_IP_PRI6_WIDTH                   8u
#define S32_NVIC_IP_PRI6(x)                      (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI6_SHIFT))&S32_NVIC_IP_PRI6_MASK)
#define S32_NVIC_IP_PRI7_MASK                    0xFFu
#define S32_NVIC_IP_PRI7_SHIFT                   0u
#define S32_NVIC_IP_PRI7_WIDTH                   8u
#define S32_NVIC_IP_PRI7(x)                      (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI7_SHIFT))&S32_NVIC_IP_PRI7_MASK)
#define S32_NVIC_IP_PRI8_MASK                    0xFFu
#define S32_NVIC_IP_PRI8_SHIFT                   0u
#define S32_NVIC_IP_PRI8_WIDTH                   8u
#define S32_NVIC_IP_PRI8(x)                      (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI8_SHIFT))&S32_NVIC_IP_PRI8_MASK)
#define S32_NVIC_IP_PRI9_MASK                    0xFFu
#define S32_NVIC_IP_PRI9_SHIFT                   0u
#define S32_NVIC_IP_PRI9_WIDTH                   8u
#define S32_NVIC_IP_PRI9(x)                      (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI9_SHIFT))&S32_NVIC_IP_PRI9_MASK)
#define S32_NVIC_IP_PRI10_MASK                   0xFFu
#define S32_NVIC_IP_PRI10_SHIFT                  0u
#define S32_NVIC_IP_PRI10_WIDTH                  8u
#define S32_NVIC_IP_PRI10(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI10_SHIFT))&S32_NVIC_IP_PRI10_MASK)
#define S32_NVIC_IP_PRI11_MASK                   0xFFu
#define S32_NVIC_IP_PRI11_SHIFT                  0u
#define S32_NVIC_IP_PRI11_WIDTH                  8u
#define S32_NVIC_IP_PRI11(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI11_SHIFT))&S32_NVIC_IP_PRI11_MASK)
#define S32_NVIC_IP_PRI12_MASK                   0xFFu
#define S32_NVIC_IP_PRI12_SHIFT                  0u
#define S32_NVIC_IP_PRI12_WIDTH                  8u
#define S32_NVIC_IP_PRI12(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI12_SHIFT))&S32_NVIC_IP_PRI12_MASK)
#define S32_NVIC_IP_PRI13_MASK                   0xFFu
#define S32_NVIC_IP_PRI13_SHIFT                  0u
#define S32_NVIC_IP_PRI13_WIDTH                  8u
#define S32_NVIC_IP_PRI13(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI13_SHIFT))&S32_NVIC_IP_PRI13_MASK)
#define S32_NVIC_IP_PRI14_MASK                   0xFFu
#define S32_NVIC_IP_PRI14_SHIFT                  0u
#define S32_NVIC_IP_PRI14_WIDTH                  8u
#define S32_NVIC_IP_PRI14(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI14_SHIFT))&S32_NVIC_IP_PRI14_MASK)
#define S32_NVIC_IP_PRI15_MASK                   0xFFu
#define S32_NVIC_IP_PRI15_SHIFT                  0u
#define S32_NVIC_IP_PRI15_WIDTH                  8u
#define S32_NVIC_IP_PRI15(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI15_SHIFT))&S32_NVIC_IP_PRI15_MASK)
#define S32_NVIC_IP_PRI16_MASK                   0xFFu
#define S32_NVIC_IP_PRI16_SHIFT                  0u
#define S32_NVIC_IP_PRI16_WIDTH                  8u
#define S32_NVIC_IP_PRI16(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI16_SHIFT))&S32_NVIC_IP_PRI16_MASK)
#define S32_NVIC_IP_PRI17_MASK                   0xFFu
#define S32_NVIC_IP_PRI17_SHIFT                  0u
#define S32_NVIC_IP_PRI17_WIDTH                  8u
#define S32_NVIC_IP_PRI17(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI17_SHIFT))&S32_NVIC_IP_PRI17_MASK)
#define S32_NVIC_IP_PRI18_MASK                   0xFFu
#define S32_NVIC_IP_PRI18_SHIFT                  0u
#define S32_NVIC_IP_PRI18_WIDTH                  8u
#define S32_NVIC_IP_PRI18(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI18_SHIFT))&S32_NVIC_IP_PRI18_MASK)
#define S32_NVIC_IP_PRI19_MASK                   0xFFu
#define S32_NVIC_IP_PRI19_SHIFT                  0u
#define S32_NVIC_IP_PRI19_WIDTH                  8u
#define S32_NVIC_IP_PRI19(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI19_SHIFT))&S32_NVIC_IP_PRI19_MASK)
#define S32_NVIC_IP_PRI20_MASK                   0xFFu
#define S32_NVIC_IP_PRI20_SHIFT                  0u
#define S32_NVIC_IP_PRI20_WIDTH                  8u
#define S32_NVIC_IP_PRI20(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI20_SHIFT))&S32_NVIC_IP_PRI20_MASK)
#define S32_NVIC_IP_PRI21_MASK                   0xFFu
#define S32_NVIC_IP_PRI21_SHIFT                  0u
#define S32_NVIC_IP_PRI21_WIDTH                  8u
#define S32_NVIC_IP_PRI21(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI21_SHIFT))&S32_NVIC_IP_PRI21_MASK)
#define S32_NVIC_IP_PRI22_MASK                   0xFFu
#define S32_NVIC_IP_PRI22_SHIFT                  0u
#define S32_NVIC_IP_PRI22_WIDTH                  8u
#define S32_NVIC_IP_PRI22(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI22_SHIFT))&S32_NVIC_IP_PRI22_MASK)
#define S32_NVIC_IP_PRI23_MASK                   0xFFu
#define S32_NVIC_IP_PRI23_SHIFT                  0u
#define S32_NVIC_IP_PRI23_WIDTH                  8u
#define S32_NVIC_IP_PRI23(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI23_SHIFT))&S32_NVIC_IP_PRI23_MASK)
#define S32_NVIC_IP_PRI24_MASK                   0xFFu
#define S32_NVIC_IP_PRI24_SHIFT                  0u
#define S32_NVIC_IP_PRI24_WIDTH                  8u
#define S32_NVIC_IP_PRI24(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI24_SHIFT))&S32_NVIC_IP_PRI24_MASK)
#define S32_NVIC_IP_PRI25_MASK                   0xFFu
#define S32_NVIC_IP_PRI25_SHIFT                  0u
#define S32_NVIC_IP_PRI25_WIDTH                  8u
#define S32_NVIC_IP_PRI25(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI25_SHIFT))&S32_NVIC_IP_PRI25_MASK)
#define S32_NVIC_IP_PRI26_MASK                   0xFFu
#define S32_NVIC_IP_PRI26_SHIFT                  0u
#define S32_NVIC_IP_PRI26_WIDTH                  8u
#define S32_NVIC_IP_PRI26(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI26_SHIFT))&S32_NVIC_IP_PRI26_MASK)
#define S32_NVIC_IP_PRI27_MASK                   0xFFu
#define S32_NVIC_IP_PRI27_SHIFT                  0u
#define S32_NVIC_IP_PRI27_WIDTH                  8u
#define S32_NVIC_IP_PRI27(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI27_SHIFT))&S32_NVIC_IP_PRI27_MASK)
#define S32_NVIC_IP_PRI28_MASK                   0xFFu
#define S32_NVIC_IP_PRI28_SHIFT                  0u
#define S32_NVIC_IP_PRI28_WIDTH                  8u
#define S32_NVIC_IP_PRI28(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI28_SHIFT))&S32_NVIC_IP_PRI28_MASK)
#define S32_NVIC_IP_PRI29_MASK                   0xFFu
#define S32_NVIC_IP_PRI29_SHIFT                  0u
#define S32_NVIC_IP_PRI29_WIDTH                  8u
#define S32_NVIC_IP_PRI29(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI29_SHIFT))&S32_NVIC_IP_PRI29_MASK)
#define S32_NVIC_IP_PRI30_MASK                   0xFFu
#define S32_NVIC_IP_PRI30_SHIFT                  0u
#define S32_NVIC_IP_PRI30_WIDTH                  8u
#define S32_NVIC_IP_PRI30(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI30_SHIFT))&S32_NVIC_IP_PRI30_MASK)
#define S32_NVIC_IP_PRI31_MASK                   0xFFu
#define S32_NVIC_IP_PRI31_SHIFT                  0u
#define S32_NVIC_IP_PRI31_WIDTH                  8u
#define S32_NVIC_IP_PRI31(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI31_SHIFT))&S32_NVIC_IP_PRI31_MASK)
#define S32_NVIC_IP_PRI32_MASK                   0xFFu
#define S32_NVIC_IP_PRI32_SHIFT                  0u
#define S32_NVIC_IP_PRI32_WIDTH                  8u
#define S32_NVIC_IP_PRI32(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI32_SHIFT))&S32_NVIC_IP_PRI32_MASK)
#define S32_NVIC_IP_PRI33_MASK                   0xFFu
#define S32_NVIC_IP_PRI33_SHIFT                  0u
#define S32_NVIC_IP_PRI33_WIDTH                  8u
#define S32_NVIC_IP_PRI33(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI33_SHIFT))&S32_NVIC_IP_PRI33_MASK)
#define S32_NVIC_IP_PRI34_MASK                   0xFFu
#define S32_NVIC_IP_PRI34_SHIFT                  0u
#define S32_NVIC_IP_PRI34_WIDTH                  8u
#define S32_NVIC_IP_PRI34(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI34_SHIFT))&S32_NVIC_IP_PRI34_MASK)
#define S32_NVIC_IP_PRI35_MASK                   0xFFu
#define S32_NVIC_IP_PRI35_SHIFT                  0u
#define S32_NVIC_IP_PRI35_WIDTH                  8u
#define S32_NVIC_IP_PRI35(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI35_SHIFT))&S32_NVIC_IP_PRI35_MASK)
#define S32_NVIC_IP_PRI36_MASK                   0xFFu
#define S32_NVIC_IP_PRI36_SHIFT                  0u
#define S32_NVIC_IP_PRI36_WIDTH                  8u
#define S32_NVIC_IP_PRI36(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI36_SHIFT))&S32_NVIC_IP_PRI36_MASK)
#define S32_NVIC_IP_PRI37_MASK                   0xFFu
#define S32_NVIC_IP_PRI37_SHIFT                  0u
#define S32_NVIC_IP_PRI37_WIDTH                  8u
#define S32_NVIC_IP_PRI37(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI37_SHIFT))&S32_NVIC_IP_PRI37_MASK)
#define S32_NVIC_IP_PRI38_MASK                   0xFFu
#define S32_NVIC_IP_PRI38_SHIFT                  0u
#define S32_NVIC_IP_PRI38_WIDTH                  8u
#define S32_NVIC_IP_PRI38(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI38_SHIFT))&S32_NVIC_IP_PRI38_MASK)
#define S32_NVIC_IP_PRI39_MASK                   0xFFu
#define S32_NVIC_IP_PRI39_SHIFT                  0u
#define S32_NVIC_IP_PRI39_WIDTH                  8u
#define S32_NVIC_IP_PRI39(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI39_SHIFT))&S32_NVIC_IP_PRI39_MASK)
#define S32_NVIC_IP_PRI40_MASK                   0xFFu
#define S32_NVIC_IP_PRI40_SHIFT                  0u
#define S32_NVIC_IP_PRI40_WIDTH                  8u
#define S32_NVIC_IP_PRI40(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI40_SHIFT))&S32_NVIC_IP_PRI40_MASK)
#define S32_NVIC_IP_PRI41_MASK                   0xFFu
#define S32_NVIC_IP_PRI41_SHIFT                  0u
#define S32_NVIC_IP_PRI41_WIDTH                  8u
#define S32_NVIC_IP_PRI41(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI41_SHIFT))&S32_NVIC_IP_PRI41_MASK)
#define S32_NVIC_IP_PRI42_MASK                   0xFFu
#define S32_NVIC_IP_PRI42_SHIFT                  0u
#define S32_NVIC_IP_PRI42_WIDTH                  8u
#define S32_NVIC_IP_PRI42(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI42_SHIFT))&S32_NVIC_IP_PRI42_MASK)
#define S32_NVIC_IP_PRI43_MASK                   0xFFu
#define S32_NVIC_IP_PRI43_SHIFT                  0u
#define S32_NVIC_IP_PRI43_WIDTH                  8u
#define S32_NVIC_IP_PRI43(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI43_SHIFT))&S32_NVIC_IP_PRI43_MASK)
#define S32_NVIC_IP_PRI44_MASK                   0xFFu
#define S32_NVIC_IP_PRI44_SHIFT                  0u
#define S32_NVIC_IP_PRI44_WIDTH                  8u
#define S32_NVIC_IP_PRI44(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI44_SHIFT))&S32_NVIC_IP_PRI44_MASK)
#define S32_NVIC_IP_PRI45_MASK                   0xFFu
#define S32_NVIC_IP_PRI45_SHIFT                  0u
#define S32_NVIC_IP_PRI45_WIDTH                  8u
#define S32_NVIC_IP_PRI45(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI45_SHIFT))&S32_NVIC_IP_PRI45_MASK)
#define S32_NVIC_IP_PRI46_MASK                   0xFFu
#define S32_NVIC_IP_PRI46_SHIFT                  0u
#define S32_NVIC_IP_PRI46_WIDTH                  8u
#define S32_NVIC_IP_PRI46(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI46_SHIFT))&S32_NVIC_IP_PRI46_MASK)
#define S32_NVIC_IP_PRI47_MASK                   0xFFu
#define S32_NVIC_IP_PRI47_SHIFT                  0u
#define S32_NVIC_IP_PRI47_WIDTH                  8u
#define S32_NVIC_IP_PRI47(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI47_SHIFT))&S32_NVIC_IP_PRI47_MASK)
#define S32_NVIC_IP_PRI48_MASK                   0xFFu
#define S32_NVIC_IP_PRI48_SHIFT                  0u
#define S32_NVIC_IP_PRI48_WIDTH                  8u
#define S32_NVIC_IP_PRI48(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI48_SHIFT))&S32_NVIC_IP_PRI48_MASK)
#define S32_NVIC_IP_PRI49_MASK                   0xFFu
#define S32_NVIC_IP_PRI49_SHIFT                  0u
#define S32_NVIC_IP_PRI49_WIDTH                  8u
#define S32_NVIC_IP_PRI49(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI49_SHIFT))&S32_NVIC_IP_PRI49_MASK)
#define S32_NVIC_IP_PRI50_MASK                   0xFFu
#define S32_NVIC_IP_PRI50_SHIFT                  0u
#define S32_NVIC_IP_PRI50_WIDTH                  8u
#define S32_NVIC_IP_PRI50(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI50_SHIFT))&S32_NVIC_IP_PRI50_MASK)
#define S32_NVIC_IP_PRI51_MASK                   0xFFu
#define S32_NVIC_IP_PRI51_SHIFT                  0u
#define S32_NVIC_IP_PRI51_WIDTH                  8u
#define S32_NVIC_IP_PRI51(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI51_SHIFT))&S32_NVIC_IP_PRI51_MASK)
#define S32_NVIC_IP_PRI52_MASK                   0xFFu
#define S32_NVIC_IP_PRI52_SHIFT                  0u
#define S32_NVIC_IP_PRI52_WIDTH                  8u
#define S32_NVIC_IP_PRI52(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI52_SHIFT))&S32_NVIC_IP_PRI52_MASK)
#define S32_NVIC_IP_PRI53_MASK                   0xFFu
#define S32_NVIC_IP_PRI53_SHIFT                  0u
#define S32_NVIC_IP_PRI53_WIDTH                  8u
#define S32_NVIC_IP_PRI53(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI53_SHIFT))&S32_NVIC_IP_PRI53_MASK)
#define S32_NVIC_IP_PRI54_MASK                   0xFFu
#define S32_NVIC_IP_PRI54_SHIFT                  0u
#define S32_NVIC_IP_PRI54_WIDTH                  8u
#define S32_NVIC_IP_PRI54(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI54_SHIFT))&S32_NVIC_IP_PRI54_MASK)
#define S32_NVIC_IP_PRI55_MASK                   0xFFu
#define S32_NVIC_IP_PRI55_SHIFT                  0u
#define S32_NVIC_IP_PRI55_WIDTH                  8u
#define S32_NVIC_IP_PRI55(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI55_SHIFT))&S32_NVIC_IP_PRI55_MASK)
#define S32_NVIC_IP_PRI56_MASK                   0xFFu
#define S32_NVIC_IP_PRI56_SHIFT                  0u
#define S32_NVIC_IP_PRI56_WIDTH                  8u
#define S32_NVIC_IP_PRI56(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI56_SHIFT))&S32_NVIC_IP_PRI56_MASK)
#define S32_NVIC_IP_PRI57_MASK                   0xFFu
#define S32_NVIC_IP_PRI57_SHIFT                  0u
#define S32_NVIC_IP_PRI57_WIDTH                  8u
#define S32_NVIC_IP_PRI57(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI57_SHIFT))&S32_NVIC_IP_PRI57_MASK)
#define S32_NVIC_IP_PRI58_MASK                   0xFFu
#define S32_NVIC_IP_PRI58_SHIFT                  0u
#define S32_NVIC_IP_PRI58_WIDTH                  8u
#define S32_NVIC_IP_PRI58(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI58_SHIFT))&S32_NVIC_IP_PRI58_MASK)
#define S32_NVIC_IP_PRI59_MASK                   0xFFu
#define S32_NVIC_IP_PRI59_SHIFT                  0u
#define S32_NVIC_IP_PRI59_WIDTH                  8u
#define S32_NVIC_IP_PRI59(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI59_SHIFT))&S32_NVIC_IP_PRI59_MASK)
#define S32_NVIC_IP_PRI60_MASK                   0xFFu
#define S32_NVIC_IP_PRI60_SHIFT                  0u
#define S32_NVIC_IP_PRI60_WIDTH                  8u
#define S32_NVIC_IP_PRI60(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI60_SHIFT))&S32_NVIC_IP_PRI60_MASK)
#define S32_NVIC_IP_PRI61_MASK                   0xFFu
#define S32_NVIC_IP_PRI61_SHIFT                  0u
#define S32_NVIC_IP_PRI61_WIDTH                  8u
#define S32_NVIC_IP_PRI61(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI61_SHIFT))&S32_NVIC_IP_PRI61_MASK)
#define S32_NVIC_IP_PRI62_MASK                   0xFFu
#define S32_NVIC_IP_PRI62_SHIFT                  0u
#define S32_NVIC_IP_PRI62_WIDTH                  8u
#define S32_NVIC_IP_PRI62(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI62_SHIFT))&S32_NVIC_IP_PRI62_MASK)
#define S32_NVIC_IP_PRI63_MASK                   0xFFu
#define S32_NVIC_IP_PRI63_SHIFT                  0u
#define S32_NVIC_IP_PRI63_WIDTH                  8u
#define S32_NVIC_IP_PRI63(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI63_SHIFT))&S32_NVIC_IP_PRI63_MASK)
#define S32_NVIC_IP_PRI64_MASK                   0xFFu
#define S32_NVIC_IP_PRI64_SHIFT                  0u
#define S32_NVIC_IP_PRI64_WIDTH                  8u
#define S32_NVIC_IP_PRI64(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI64_SHIFT))&S32_NVIC_IP_PRI64_MASK)
#define S32_NVIC_IP_PRI65_MASK                   0xFFu
#define S32_NVIC_IP_PRI65_SHIFT                  0u
#define S32_NVIC_IP_PRI65_WIDTH                  8u
#define S32_NVIC_IP_PRI65(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI65_SHIFT))&S32_NVIC_IP_PRI65_MASK)
#define S32_NVIC_IP_PRI66_MASK                   0xFFu
#define S32_NVIC_IP_PRI66_SHIFT                  0u
#define S32_NVIC_IP_PRI66_WIDTH                  8u
#define S32_NVIC_IP_PRI66(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI66_SHIFT))&S32_NVIC_IP_PRI66_MASK)
#define S32_NVIC_IP_PRI67_MASK                   0xFFu
#define S32_NVIC_IP_PRI67_SHIFT                  0u
#define S32_NVIC_IP_PRI67_WIDTH                  8u
#define S32_NVIC_IP_PRI67(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI67_SHIFT))&S32_NVIC_IP_PRI67_MASK)
#define S32_NVIC_IP_PRI68_MASK                   0xFFu
#define S32_NVIC_IP_PRI68_SHIFT                  0u
#define S32_NVIC_IP_PRI68_WIDTH                  8u
#define S32_NVIC_IP_PRI68(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI68_SHIFT))&S32_NVIC_IP_PRI68_MASK)
#define S32_NVIC_IP_PRI69_MASK                   0xFFu
#define S32_NVIC_IP_PRI69_SHIFT                  0u
#define S32_NVIC_IP_PRI69_WIDTH                  8u
#define S32_NVIC_IP_PRI69(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI69_SHIFT))&S32_NVIC_IP_PRI69_MASK)
#define S32_NVIC_IP_PRI70_MASK                   0xFFu
#define S32_NVIC_IP_PRI70_SHIFT                  0u
#define S32_NVIC_IP_PRI70_WIDTH                  8u
#define S32_NVIC_IP_PRI70(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI70_SHIFT))&S32_NVIC_IP_PRI70_MASK)
#define S32_NVIC_IP_PRI71_MASK                   0xFFu
#define S32_NVIC_IP_PRI71_SHIFT                  0u
#define S32_NVIC_IP_PRI71_WIDTH                  8u
#define S32_NVIC_IP_PRI71(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI71_SHIFT))&S32_NVIC_IP_PRI71_MASK)
#define S32_NVIC_IP_PRI72_MASK                   0xFFu
#define S32_NVIC_IP_PRI72_SHIFT                  0u
#define S32_NVIC_IP_PRI72_WIDTH                  8u
#define S32_NVIC_IP_PRI72(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI72_SHIFT))&S32_NVIC_IP_PRI72_MASK)
#define S32_NVIC_IP_PRI73_MASK                   0xFFu
#define S32_NVIC_IP_PRI73_SHIFT                  0u
#define S32_NVIC_IP_PRI73_WIDTH                  8u
#define S32_NVIC_IP_PRI73(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI73_SHIFT))&S32_NVIC_IP_PRI73_MASK)
#define S32_NVIC_IP_PRI74_MASK                   0xFFu
#define S32_NVIC_IP_PRI74_SHIFT                  0u
#define S32_NVIC_IP_PRI74_WIDTH                  8u
#define S32_NVIC_IP_PRI74(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI74_SHIFT))&S32_NVIC_IP_PRI74_MASK)
#define S32_NVIC_IP_PRI75_MASK                   0xFFu
#define S32_NVIC_IP_PRI75_SHIFT                  0u
#define S32_NVIC_IP_PRI75_WIDTH                  8u
#define S32_NVIC_IP_PRI75(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI75_SHIFT))&S32_NVIC_IP_PRI75_MASK)
#define S32_NVIC_IP_PRI76_MASK                   0xFFu
#define S32_NVIC_IP_PRI76_SHIFT                  0u
#define S32_NVIC_IP_PRI76_WIDTH                  8u
#define S32_NVIC_IP_PRI76(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI76_SHIFT))&S32_NVIC_IP_PRI76_MASK)
#define S32_NVIC_IP_PRI77_MASK                   0xFFu
#define S32_NVIC_IP_PRI77_SHIFT                  0u
#define S32_NVIC_IP_PRI77_WIDTH                  8u
#define S32_NVIC_IP_PRI77(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI77_SHIFT))&S32_NVIC_IP_PRI77_MASK)
#define S32_NVIC_IP_PRI78_MASK                   0xFFu
#define S32_NVIC_IP_PRI78_SHIFT                  0u
#define S32_NVIC_IP_PRI78_WIDTH                  8u
#define S32_NVIC_IP_PRI78(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI78_SHIFT))&S32_NVIC_IP_PRI78_MASK)
#define S32_NVIC_IP_PRI79_MASK                   0xFFu
#define S32_NVIC_IP_PRI79_SHIFT                  0u
#define S32_NVIC_IP_PRI79_WIDTH                  8u
#define S32_NVIC_IP_PRI79(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI79_SHIFT))&S32_NVIC_IP_PRI79_MASK)
#define S32_NVIC_IP_PRI80_MASK                   0xFFu
#define S32_NVIC_IP_PRI80_SHIFT                  0u
#define S32_NVIC_IP_PRI80_WIDTH                  8u
#define S32_NVIC_IP_PRI80(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI80_SHIFT))&S32_NVIC_IP_PRI80_MASK)
#define S32_NVIC_IP_PRI81_MASK                   0xFFu
#define S32_NVIC_IP_PRI81_SHIFT                  0u
#define S32_NVIC_IP_PRI81_WIDTH                  8u
#define S32_NVIC_IP_PRI81(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI81_SHIFT))&S32_NVIC_IP_PRI81_MASK)
#define S32_NVIC_IP_PRI82_MASK                   0xFFu
#define S32_NVIC_IP_PRI82_SHIFT                  0u
#define S32_NVIC_IP_PRI82_WIDTH                  8u
#define S32_NVIC_IP_PRI82(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI82_SHIFT))&S32_NVIC_IP_PRI82_MASK)
#define S32_NVIC_IP_PRI83_MASK                   0xFFu
#define S32_NVIC_IP_PRI83_SHIFT                  0u
#define S32_NVIC_IP_PRI83_WIDTH                  8u
#define S32_NVIC_IP_PRI83(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI83_SHIFT))&S32_NVIC_IP_PRI83_MASK)
#define S32_NVIC_IP_PRI84_MASK                   0xFFu
#define S32_NVIC_IP_PRI84_SHIFT                  0u
#define S32_NVIC_IP_PRI84_WIDTH                  8u
#define S32_NVIC_IP_PRI84(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI84_SHIFT))&S32_NVIC_IP_PRI84_MASK)
#define S32_NVIC_IP_PRI85_MASK                   0xFFu
#define S32_NVIC_IP_PRI85_SHIFT                  0u
#define S32_NVIC_IP_PRI85_WIDTH                  8u
#define S32_NVIC_IP_PRI85(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI85_SHIFT))&S32_NVIC_IP_PRI85_MASK)
#define S32_NVIC_IP_PRI86_MASK                   0xFFu
#define S32_NVIC_IP_PRI86_SHIFT                  0u
#define S32_NVIC_IP_PRI86_WIDTH                  8u
#define S32_NVIC_IP_PRI86(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI86_SHIFT))&S32_NVIC_IP_PRI86_MASK)
#define S32_NVIC_IP_PRI87_MASK                   0xFFu
#define S32_NVIC_IP_PRI87_SHIFT                  0u
#define S32_NVIC_IP_PRI87_WIDTH                  8u
#define S32_NVIC_IP_PRI87(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI87_SHIFT))&S32_NVIC_IP_PRI87_MASK)
#define S32_NVIC_IP_PRI88_MASK                   0xFFu
#define S32_NVIC_IP_PRI88_SHIFT                  0u
#define S32_NVIC_IP_PRI88_WIDTH                  8u
#define S32_NVIC_IP_PRI88(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI88_SHIFT))&S32_NVIC_IP_PRI88_MASK)
#define S32_NVIC_IP_PRI89_MASK                   0xFFu
#define S32_NVIC_IP_PRI89_SHIFT                  0u
#define S32_NVIC_IP_PRI89_WIDTH                  8u
#define S32_NVIC_IP_PRI89(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI89_SHIFT))&S32_NVIC_IP_PRI89_MASK)
#define S32_NVIC_IP_PRI90_MASK                   0xFFu
#define S32_NVIC_IP_PRI90_SHIFT                  0u
#define S32_NVIC_IP_PRI90_WIDTH                  8u
#define S32_NVIC_IP_PRI90(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI90_SHIFT))&S32_NVIC_IP_PRI90_MASK)
#define S32_NVIC_IP_PRI91_MASK                   0xFFu
#define S32_NVIC_IP_PRI91_SHIFT                  0u
#define S32_NVIC_IP_PRI91_WIDTH                  8u
#define S32_NVIC_IP_PRI91(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI91_SHIFT))&S32_NVIC_IP_PRI91_MASK)
#define S32_NVIC_IP_PRI92_MASK                   0xFFu
#define S32_NVIC_IP_PRI92_SHIFT                  0u
#define S32_NVIC_IP_PRI92_WIDTH                  8u
#define S32_NVIC_IP_PRI92(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI92_SHIFT))&S32_NVIC_IP_PRI92_MASK)
#define S32_NVIC_IP_PRI93_MASK                   0xFFu
#define S32_NVIC_IP_PRI93_SHIFT                  0u
#define S32_NVIC_IP_PRI93_WIDTH                  8u
#define S32_NVIC_IP_PRI93(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI93_SHIFT))&S32_NVIC_IP_PRI93_MASK)
#define S32_NVIC_IP_PRI94_MASK                   0xFFu
#define S32_NVIC_IP_PRI94_SHIFT                  0u
#define S32_NVIC_IP_PRI94_WIDTH                  8u
#define S32_NVIC_IP_PRI94(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI94_SHIFT))&S32_NVIC_IP_PRI94_MASK)
#define S32_NVIC_IP_PRI95_MASK                   0xFFu
#define S32_NVIC_IP_PRI95_SHIFT                  0u
#define S32_NVIC_IP_PRI95_WIDTH                  8u
#define S32_NVIC_IP_PRI95(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI95_SHIFT))&S32_NVIC_IP_PRI95_MASK)
#define S32_NVIC_IP_PRI96_MASK                   0xFFu
#define S32_NVIC_IP_PRI96_SHIFT                  0u
#define S32_NVIC_IP_PRI96_WIDTH                  8u
#define S32_NVIC_IP_PRI96(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI96_SHIFT))&S32_NVIC_IP_PRI96_MASK)
#define S32_NVIC_IP_PRI97_MASK                   0xFFu
#define S32_NVIC_IP_PRI97_SHIFT                  0u
#define S32_NVIC_IP_PRI97_WIDTH                  8u
#define S32_NVIC_IP_PRI97(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI97_SHIFT))&S32_NVIC_IP_PRI97_MASK)
#define S32_NVIC_IP_PRI98_MASK                   0xFFu
#define S32_NVIC_IP_PRI98_SHIFT                  0u
#define S32_NVIC_IP_PRI98_WIDTH                  8u
#define S32_NVIC_IP_PRI98(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI98_SHIFT))&S32_NVIC_IP_PRI98_MASK)
#define S32_NVIC_IP_PRI99_MASK                   0xFFu
#define S32_NVIC_IP_PRI99_SHIFT                  0u
#define S32_NVIC_IP_PRI99_WIDTH                  8u
#define S32_NVIC_IP_PRI99(x)                     (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI99_SHIFT))&S32_NVIC_IP_PRI99_MASK)
#define S32_NVIC_IP_PRI100_MASK                  0xFFu
#define S32_NVIC_IP_PRI100_SHIFT                 0u
#define S32_NVIC_IP_PRI100_WIDTH                 8u
#define S32_NVIC_IP_PRI100(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI100_SHIFT))&S32_NVIC_IP_PRI100_MASK)
#define S32_NVIC_IP_PRI101_MASK                  0xFFu
#define S32_NVIC_IP_PRI101_SHIFT                 0u
#define S32_NVIC_IP_PRI101_WIDTH                 8u
#define S32_NVIC_IP_PRI101(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI101_SHIFT))&S32_NVIC_IP_PRI101_MASK)
#define S32_NVIC_IP_PRI102_MASK                  0xFFu
#define S32_NVIC_IP_PRI102_SHIFT                 0u
#define S32_NVIC_IP_PRI102_WIDTH                 8u
#define S32_NVIC_IP_PRI102(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI102_SHIFT))&S32_NVIC_IP_PRI102_MASK)
#define S32_NVIC_IP_PRI103_MASK                  0xFFu
#define S32_NVIC_IP_PRI103_SHIFT                 0u
#define S32_NVIC_IP_PRI103_WIDTH                 8u
#define S32_NVIC_IP_PRI103(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI103_SHIFT))&S32_NVIC_IP_PRI103_MASK)
#define S32_NVIC_IP_PRI104_MASK                  0xFFu
#define S32_NVIC_IP_PRI104_SHIFT                 0u
#define S32_NVIC_IP_PRI104_WIDTH                 8u
#define S32_NVIC_IP_PRI104(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI104_SHIFT))&S32_NVIC_IP_PRI104_MASK)
#define S32_NVIC_IP_PRI105_MASK                  0xFFu
#define S32_NVIC_IP_PRI105_SHIFT                 0u
#define S32_NVIC_IP_PRI105_WIDTH                 8u
#define S32_NVIC_IP_PRI105(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI105_SHIFT))&S32_NVIC_IP_PRI105_MASK)
#define S32_NVIC_IP_PRI106_MASK                  0xFFu
#define S32_NVIC_IP_PRI106_SHIFT                 0u
#define S32_NVIC_IP_PRI106_WIDTH                 8u
#define S32_NVIC_IP_PRI106(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI106_SHIFT))&S32_NVIC_IP_PRI106_MASK)
#define S32_NVIC_IP_PRI107_MASK                  0xFFu
#define S32_NVIC_IP_PRI107_SHIFT                 0u
#define S32_NVIC_IP_PRI107_WIDTH                 8u
#define S32_NVIC_IP_PRI107(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI107_SHIFT))&S32_NVIC_IP_PRI107_MASK)
#define S32_NVIC_IP_PRI108_MASK                  0xFFu
#define S32_NVIC_IP_PRI108_SHIFT                 0u
#define S32_NVIC_IP_PRI108_WIDTH                 8u
#define S32_NVIC_IP_PRI108(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI108_SHIFT))&S32_NVIC_IP_PRI108_MASK)
#define S32_NVIC_IP_PRI109_MASK                  0xFFu
#define S32_NVIC_IP_PRI109_SHIFT                 0u
#define S32_NVIC_IP_PRI109_WIDTH                 8u
#define S32_NVIC_IP_PRI109(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI109_SHIFT))&S32_NVIC_IP_PRI109_MASK)
#define S32_NVIC_IP_PRI110_MASK                  0xFFu
#define S32_NVIC_IP_PRI110_SHIFT                 0u
#define S32_NVIC_IP_PRI110_WIDTH                 8u
#define S32_NVIC_IP_PRI110(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI110_SHIFT))&S32_NVIC_IP_PRI110_MASK)
#define S32_NVIC_IP_PRI111_MASK                  0xFFu
#define S32_NVIC_IP_PRI111_SHIFT                 0u
#define S32_NVIC_IP_PRI111_WIDTH                 8u
#define S32_NVIC_IP_PRI111(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI111_SHIFT))&S32_NVIC_IP_PRI111_MASK)
#define S32_NVIC_IP_PRI112_MASK                  0xFFu
#define S32_NVIC_IP_PRI112_SHIFT                 0u
#define S32_NVIC_IP_PRI112_WIDTH                 8u
#define S32_NVIC_IP_PRI112(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI112_SHIFT))&S32_NVIC_IP_PRI112_MASK)
#define S32_NVIC_IP_PRI113_MASK                  0xFFu
#define S32_NVIC_IP_PRI113_SHIFT                 0u
#define S32_NVIC_IP_PRI113_WIDTH                 8u
#define S32_NVIC_IP_PRI113(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI113_SHIFT))&S32_NVIC_IP_PRI113_MASK)
#define S32_NVIC_IP_PRI114_MASK                  0xFFu
#define S32_NVIC_IP_PRI114_SHIFT                 0u
#define S32_NVIC_IP_PRI114_WIDTH                 8u
#define S32_NVIC_IP_PRI114(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI114_SHIFT))&S32_NVIC_IP_PRI114_MASK)
#define S32_NVIC_IP_PRI115_MASK                  0xFFu
#define S32_NVIC_IP_PRI115_SHIFT                 0u
#define S32_NVIC_IP_PRI115_WIDTH                 8u
#define S32_NVIC_IP_PRI115(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI115_SHIFT))&S32_NVIC_IP_PRI115_MASK)
#define S32_NVIC_IP_PRI116_MASK                  0xFFu
#define S32_NVIC_IP_PRI116_SHIFT                 0u
#define S32_NVIC_IP_PRI116_WIDTH                 8u
#define S32_NVIC_IP_PRI116(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI116_SHIFT))&S32_NVIC_IP_PRI116_MASK)
#define S32_NVIC_IP_PRI117_MASK                  0xFFu
#define S32_NVIC_IP_PRI117_SHIFT                 0u
#define S32_NVIC_IP_PRI117_WIDTH                 8u
#define S32_NVIC_IP_PRI117(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI117_SHIFT))&S32_NVIC_IP_PRI117_MASK)
#define S32_NVIC_IP_PRI118_MASK                  0xFFu
#define S32_NVIC_IP_PRI118_SHIFT                 0u
#define S32_NVIC_IP_PRI118_WIDTH                 8u
#define S32_NVIC_IP_PRI118(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI118_SHIFT))&S32_NVIC_IP_PRI118_MASK)
#define S32_NVIC_IP_PRI119_MASK                  0xFFu
#define S32_NVIC_IP_PRI119_SHIFT                 0u
#define S32_NVIC_IP_PRI119_WIDTH                 8u
#define S32_NVIC_IP_PRI119(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI119_SHIFT))&S32_NVIC_IP_PRI119_MASK)
#define S32_NVIC_IP_PRI120_MASK                  0xFFu
#define S32_NVIC_IP_PRI120_SHIFT                 0u
#define S32_NVIC_IP_PRI120_WIDTH                 8u
#define S32_NVIC_IP_PRI120(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI120_SHIFT))&S32_NVIC_IP_PRI120_MASK)
#define S32_NVIC_IP_PRI121_MASK                  0xFFu
#define S32_NVIC_IP_PRI121_SHIFT                 0u
#define S32_NVIC_IP_PRI121_WIDTH                 8u
#define S32_NVIC_IP_PRI121(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI121_SHIFT))&S32_NVIC_IP_PRI121_MASK)
#define S32_NVIC_IP_PRI122_MASK                  0xFFu
#define S32_NVIC_IP_PRI122_SHIFT                 0u
#define S32_NVIC_IP_PRI122_WIDTH                 8u
#define S32_NVIC_IP_PRI122(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI122_SHIFT))&S32_NVIC_IP_PRI122_MASK)
#define S32_NVIC_IP_PRI123_MASK                  0xFFu
#define S32_NVIC_IP_PRI123_SHIFT                 0u
#define S32_NVIC_IP_PRI123_WIDTH                 8u
#define S32_NVIC_IP_PRI123(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI123_SHIFT))&S32_NVIC_IP_PRI123_MASK)
#define S32_NVIC_IP_PRI124_MASK                  0xFFu
#define S32_NVIC_IP_PRI124_SHIFT                 0u
#define S32_NVIC_IP_PRI124_WIDTH                 8u
#define S32_NVIC_IP_PRI124(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI124_SHIFT))&S32_NVIC_IP_PRI124_MASK)
#define S32_NVIC_IP_PRI125_MASK                  0xFFu
#define S32_NVIC_IP_PRI125_SHIFT                 0u
#define S32_NVIC_IP_PRI125_WIDTH                 8u
#define S32_NVIC_IP_PRI125(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI125_SHIFT))&S32_NVIC_IP_PRI125_MASK)
#define S32_NVIC_IP_PRI126_MASK                  0xFFu
#define S32_NVIC_IP_PRI126_SHIFT                 0u
#define S32_NVIC_IP_PRI126_WIDTH                 8u
#define S32_NVIC_IP_PRI126(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI126_SHIFT))&S32_NVIC_IP_PRI126_MASK)
#define S32_NVIC_IP_PRI127_MASK                  0xFFu
#define S32_NVIC_IP_PRI127_SHIFT                 0u
#define S32_NVIC_IP_PRI127_WIDTH                 8u
#define S32_NVIC_IP_PRI127(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI127_SHIFT))&S32_NVIC_IP_PRI127_MASK)
#define S32_NVIC_IP_PRI128_MASK                  0xFFu
#define S32_NVIC_IP_PRI128_SHIFT                 0u
#define S32_NVIC_IP_PRI128_WIDTH                 8u
#define S32_NVIC_IP_PRI128(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI128_SHIFT))&S32_NVIC_IP_PRI128_MASK)
#define S32_NVIC_IP_PRI129_MASK                  0xFFu
#define S32_NVIC_IP_PRI129_SHIFT                 0u
#define S32_NVIC_IP_PRI129_WIDTH                 8u
#define S32_NVIC_IP_PRI129(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI129_SHIFT))&S32_NVIC_IP_PRI129_MASK)
#define S32_NVIC_IP_PRI130_MASK                  0xFFu
#define S32_NVIC_IP_PRI130_SHIFT                 0u
#define S32_NVIC_IP_PRI130_WIDTH                 8u
#define S32_NVIC_IP_PRI130(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI130_SHIFT))&S32_NVIC_IP_PRI130_MASK)
#define S32_NVIC_IP_PRI131_MASK                  0xFFu
#define S32_NVIC_IP_PRI131_SHIFT                 0u
#define S32_NVIC_IP_PRI131_WIDTH                 8u
#define S32_NVIC_IP_PRI131(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI131_SHIFT))&S32_NVIC_IP_PRI131_MASK)
#define S32_NVIC_IP_PRI132_MASK                  0xFFu
#define S32_NVIC_IP_PRI132_SHIFT                 0u
#define S32_NVIC_IP_PRI132_WIDTH                 8u
#define S32_NVIC_IP_PRI132(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI132_SHIFT))&S32_NVIC_IP_PRI132_MASK)
#define S32_NVIC_IP_PRI133_MASK                  0xFFu
#define S32_NVIC_IP_PRI133_SHIFT                 0u
#define S32_NVIC_IP_PRI133_WIDTH                 8u
#define S32_NVIC_IP_PRI133(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI133_SHIFT))&S32_NVIC_IP_PRI133_MASK)
#define S32_NVIC_IP_PRI134_MASK                  0xFFu
#define S32_NVIC_IP_PRI134_SHIFT                 0u
#define S32_NVIC_IP_PRI134_WIDTH                 8u
#define S32_NVIC_IP_PRI134(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI134_SHIFT))&S32_NVIC_IP_PRI134_MASK)
#define S32_NVIC_IP_PRI135_MASK                  0xFFu
#define S32_NVIC_IP_PRI135_SHIFT                 0u
#define S32_NVIC_IP_PRI135_WIDTH                 8u
#define S32_NVIC_IP_PRI135(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI135_SHIFT))&S32_NVIC_IP_PRI135_MASK)
#define S32_NVIC_IP_PRI136_MASK                  0xFFu
#define S32_NVIC_IP_PRI136_SHIFT                 0u
#define S32_NVIC_IP_PRI136_WIDTH                 8u
#define S32_NVIC_IP_PRI136(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI136_SHIFT))&S32_NVIC_IP_PRI136_MASK)
#define S32_NVIC_IP_PRI137_MASK                  0xFFu
#define S32_NVIC_IP_PRI137_SHIFT                 0u
#define S32_NVIC_IP_PRI137_WIDTH                 8u
#define S32_NVIC_IP_PRI137(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI137_SHIFT))&S32_NVIC_IP_PRI137_MASK)
#define S32_NVIC_IP_PRI138_MASK                  0xFFu
#define S32_NVIC_IP_PRI138_SHIFT                 0u
#define S32_NVIC_IP_PRI138_WIDTH                 8u
#define S32_NVIC_IP_PRI138(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI138_SHIFT))&S32_NVIC_IP_PRI138_MASK)
#define S32_NVIC_IP_PRI139_MASK                  0xFFu
#define S32_NVIC_IP_PRI139_SHIFT                 0u
#define S32_NVIC_IP_PRI139_WIDTH                 8u
#define S32_NVIC_IP_PRI139(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI139_SHIFT))&S32_NVIC_IP_PRI139_MASK)
#define S32_NVIC_IP_PRI140_MASK                  0xFFu
#define S32_NVIC_IP_PRI140_SHIFT                 0u
#define S32_NVIC_IP_PRI140_WIDTH                 8u
#define S32_NVIC_IP_PRI140(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI140_SHIFT))&S32_NVIC_IP_PRI140_MASK)
#define S32_NVIC_IP_PRI141_MASK                  0xFFu
#define S32_NVIC_IP_PRI141_SHIFT                 0u
#define S32_NVIC_IP_PRI141_WIDTH                 8u
#define S32_NVIC_IP_PRI141(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI141_SHIFT))&S32_NVIC_IP_PRI141_MASK)
#define S32_NVIC_IP_PRI142_MASK                  0xFFu
#define S32_NVIC_IP_PRI142_SHIFT                 0u
#define S32_NVIC_IP_PRI142_WIDTH                 8u
#define S32_NVIC_IP_PRI142(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI142_SHIFT))&S32_NVIC_IP_PRI142_MASK)
#define S32_NVIC_IP_PRI143_MASK                  0xFFu
#define S32_NVIC_IP_PRI143_SHIFT                 0u
#define S32_NVIC_IP_PRI143_WIDTH                 8u
#define S32_NVIC_IP_PRI143(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI143_SHIFT))&S32_NVIC_IP_PRI143_MASK)
#define S32_NVIC_IP_PRI144_MASK                  0xFFu
#define S32_NVIC_IP_PRI144_SHIFT                 0u
#define S32_NVIC_IP_PRI144_WIDTH                 8u
#define S32_NVIC_IP_PRI144(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI144_SHIFT))&S32_NVIC_IP_PRI144_MASK)
#define S32_NVIC_IP_PRI145_MASK                  0xFFu
#define S32_NVIC_IP_PRI145_SHIFT                 0u
#define S32_NVIC_IP_PRI145_WIDTH                 8u
#define S32_NVIC_IP_PRI145(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI145_SHIFT))&S32_NVIC_IP_PRI145_MASK)
#define S32_NVIC_IP_PRI146_MASK                  0xFFu
#define S32_NVIC_IP_PRI146_SHIFT                 0u
#define S32_NVIC_IP_PRI146_WIDTH                 8u
#define S32_NVIC_IP_PRI146(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI146_SHIFT))&S32_NVIC_IP_PRI146_MASK)
#define S32_NVIC_IP_PRI147_MASK                  0xFFu
#define S32_NVIC_IP_PRI147_SHIFT                 0u
#define S32_NVIC_IP_PRI147_WIDTH                 8u
#define S32_NVIC_IP_PRI147(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI147_SHIFT))&S32_NVIC_IP_PRI147_MASK)
#define S32_NVIC_IP_PRI148_MASK                  0xFFu
#define S32_NVIC_IP_PRI148_SHIFT                 0u
#define S32_NVIC_IP_PRI148_WIDTH                 8u
#define S32_NVIC_IP_PRI148(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI148_SHIFT))&S32_NVIC_IP_PRI148_MASK)
#define S32_NVIC_IP_PRI149_MASK                  0xFFu
#define S32_NVIC_IP_PRI149_SHIFT                 0u
#define S32_NVIC_IP_PRI149_WIDTH                 8u
#define S32_NVIC_IP_PRI149(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI149_SHIFT))&S32_NVIC_IP_PRI149_MASK)
#define S32_NVIC_IP_PRI150_MASK                  0xFFu
#define S32_NVIC_IP_PRI150_SHIFT                 0u
#define S32_NVIC_IP_PRI150_WIDTH                 8u
#define S32_NVIC_IP_PRI150(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI150_SHIFT))&S32_NVIC_IP_PRI150_MASK)
#define S32_NVIC_IP_PRI151_MASK                  0xFFu
#define S32_NVIC_IP_PRI151_SHIFT                 0u
#define S32_NVIC_IP_PRI151_WIDTH                 8u
#define S32_NVIC_IP_PRI151(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI151_SHIFT))&S32_NVIC_IP_PRI151_MASK)
#define S32_NVIC_IP_PRI152_MASK                  0xFFu
#define S32_NVIC_IP_PRI152_SHIFT                 0u
#define S32_NVIC_IP_PRI152_WIDTH                 8u
#define S32_NVIC_IP_PRI152(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI152_SHIFT))&S32_NVIC_IP_PRI152_MASK)
#define S32_NVIC_IP_PRI153_MASK                  0xFFu
#define S32_NVIC_IP_PRI153_SHIFT                 0u
#define S32_NVIC_IP_PRI153_WIDTH                 8u
#define S32_NVIC_IP_PRI153(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI153_SHIFT))&S32_NVIC_IP_PRI153_MASK)
#define S32_NVIC_IP_PRI154_MASK                  0xFFu
#define S32_NVIC_IP_PRI154_SHIFT                 0u
#define S32_NVIC_IP_PRI154_WIDTH                 8u
#define S32_NVIC_IP_PRI154(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI154_SHIFT))&S32_NVIC_IP_PRI154_MASK)
#define S32_NVIC_IP_PRI155_MASK                  0xFFu
#define S32_NVIC_IP_PRI155_SHIFT                 0u
#define S32_NVIC_IP_PRI155_WIDTH                 8u
#define S32_NVIC_IP_PRI155(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI155_SHIFT))&S32_NVIC_IP_PRI155_MASK)
#define S32_NVIC_IP_PRI156_MASK                  0xFFu
#define S32_NVIC_IP_PRI156_SHIFT                 0u
#define S32_NVIC_IP_PRI156_WIDTH                 8u
#define S32_NVIC_IP_PRI156(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI156_SHIFT))&S32_NVIC_IP_PRI156_MASK)
#define S32_NVIC_IP_PRI157_MASK                  0xFFu
#define S32_NVIC_IP_PRI157_SHIFT                 0u
#define S32_NVIC_IP_PRI157_WIDTH                 8u
#define S32_NVIC_IP_PRI157(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI157_SHIFT))&S32_NVIC_IP_PRI157_MASK)
#define S32_NVIC_IP_PRI158_MASK                  0xFFu
#define S32_NVIC_IP_PRI158_SHIFT                 0u
#define S32_NVIC_IP_PRI158_WIDTH                 8u
#define S32_NVIC_IP_PRI158(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI158_SHIFT))&S32_NVIC_IP_PRI158_MASK)
#define S32_NVIC_IP_PRI159_MASK                  0xFFu
#define S32_NVIC_IP_PRI159_SHIFT                 0u
#define S32_NVIC_IP_PRI159_WIDTH                 8u
#define S32_NVIC_IP_PRI159(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI159_SHIFT))&S32_NVIC_IP_PRI159_MASK)
#define S32_NVIC_IP_PRI160_MASK                  0xFFu
#define S32_NVIC_IP_PRI160_SHIFT                 0u
#define S32_NVIC_IP_PRI160_WIDTH                 8u
#define S32_NVIC_IP_PRI160(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI160_SHIFT))&S32_NVIC_IP_PRI160_MASK)
#define S32_NVIC_IP_PRI161_MASK                  0xFFu
#define S32_NVIC_IP_PRI161_SHIFT                 0u
#define S32_NVIC_IP_PRI161_WIDTH                 8u
#define S32_NVIC_IP_PRI161(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI161_SHIFT))&S32_NVIC_IP_PRI161_MASK)
#define S32_NVIC_IP_PRI162_MASK                  0xFFu
#define S32_NVIC_IP_PRI162_SHIFT                 0u
#define S32_NVIC_IP_PRI162_WIDTH                 8u
#define S32_NVIC_IP_PRI162(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI162_SHIFT))&S32_NVIC_IP_PRI162_MASK)
#define S32_NVIC_IP_PRI163_MASK                  0xFFu
#define S32_NVIC_IP_PRI163_SHIFT                 0u
#define S32_NVIC_IP_PRI163_WIDTH                 8u
#define S32_NVIC_IP_PRI163(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI163_SHIFT))&S32_NVIC_IP_PRI163_MASK)
#define S32_NVIC_IP_PRI164_MASK                  0xFFu
#define S32_NVIC_IP_PRI164_SHIFT                 0u
#define S32_NVIC_IP_PRI164_WIDTH                 8u
#define S32_NVIC_IP_PRI164(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI164_SHIFT))&S32_NVIC_IP_PRI164_MASK)
#define S32_NVIC_IP_PRI165_MASK                  0xFFu
#define S32_NVIC_IP_PRI165_SHIFT                 0u
#define S32_NVIC_IP_PRI165_WIDTH                 8u
#define S32_NVIC_IP_PRI165(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI165_SHIFT))&S32_NVIC_IP_PRI165_MASK)
#define S32_NVIC_IP_PRI166_MASK                  0xFFu
#define S32_NVIC_IP_PRI166_SHIFT                 0u
#define S32_NVIC_IP_PRI166_WIDTH                 8u
#define S32_NVIC_IP_PRI166(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI166_SHIFT))&S32_NVIC_IP_PRI166_MASK)
#define S32_NVIC_IP_PRI167_MASK                  0xFFu
#define S32_NVIC_IP_PRI167_SHIFT                 0u
#define S32_NVIC_IP_PRI167_WIDTH                 8u
#define S32_NVIC_IP_PRI167(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI167_SHIFT))&S32_NVIC_IP_PRI167_MASK)
#define S32_NVIC_IP_PRI168_MASK                  0xFFu
#define S32_NVIC_IP_PRI168_SHIFT                 0u
#define S32_NVIC_IP_PRI168_WIDTH                 8u
#define S32_NVIC_IP_PRI168(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI168_SHIFT))&S32_NVIC_IP_PRI168_MASK)
#define S32_NVIC_IP_PRI169_MASK                  0xFFu
#define S32_NVIC_IP_PRI169_SHIFT                 0u
#define S32_NVIC_IP_PRI169_WIDTH                 8u
#define S32_NVIC_IP_PRI169(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI169_SHIFT))&S32_NVIC_IP_PRI169_MASK)
#define S32_NVIC_IP_PRI170_MASK                  0xFFu
#define S32_NVIC_IP_PRI170_SHIFT                 0u
#define S32_NVIC_IP_PRI170_WIDTH                 8u
#define S32_NVIC_IP_PRI170(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI170_SHIFT))&S32_NVIC_IP_PRI170_MASK)
#define S32_NVIC_IP_PRI171_MASK                  0xFFu
#define S32_NVIC_IP_PRI171_SHIFT                 0u
#define S32_NVIC_IP_PRI171_WIDTH                 8u
#define S32_NVIC_IP_PRI171(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI171_SHIFT))&S32_NVIC_IP_PRI171_MASK)
#define S32_NVIC_IP_PRI172_MASK                  0xFFu
#define S32_NVIC_IP_PRI172_SHIFT                 0u
#define S32_NVIC_IP_PRI172_WIDTH                 8u
#define S32_NVIC_IP_PRI172(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI172_SHIFT))&S32_NVIC_IP_PRI172_MASK)
#define S32_NVIC_IP_PRI173_MASK                  0xFFu
#define S32_NVIC_IP_PRI173_SHIFT                 0u
#define S32_NVIC_IP_PRI173_WIDTH                 8u
#define S32_NVIC_IP_PRI173(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI173_SHIFT))&S32_NVIC_IP_PRI173_MASK)
#define S32_NVIC_IP_PRI174_MASK                  0xFFu
#define S32_NVIC_IP_PRI174_SHIFT                 0u
#define S32_NVIC_IP_PRI174_WIDTH                 8u
#define S32_NVIC_IP_PRI174(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI174_SHIFT))&S32_NVIC_IP_PRI174_MASK)
#define S32_NVIC_IP_PRI175_MASK                  0xFFu
#define S32_NVIC_IP_PRI175_SHIFT                 0u
#define S32_NVIC_IP_PRI175_WIDTH                 8u
#define S32_NVIC_IP_PRI175(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI175_SHIFT))&S32_NVIC_IP_PRI175_MASK)
#define S32_NVIC_IP_PRI176_MASK                  0xFFu
#define S32_NVIC_IP_PRI176_SHIFT                 0u
#define S32_NVIC_IP_PRI176_WIDTH                 8u
#define S32_NVIC_IP_PRI176(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI176_SHIFT))&S32_NVIC_IP_PRI176_MASK)
#define S32_NVIC_IP_PRI177_MASK                  0xFFu
#define S32_NVIC_IP_PRI177_SHIFT                 0u
#define S32_NVIC_IP_PRI177_WIDTH                 8u
#define S32_NVIC_IP_PRI177(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI177_SHIFT))&S32_NVIC_IP_PRI177_MASK)
#define S32_NVIC_IP_PRI178_MASK                  0xFFu
#define S32_NVIC_IP_PRI178_SHIFT                 0u
#define S32_NVIC_IP_PRI178_WIDTH                 8u
#define S32_NVIC_IP_PRI178(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI178_SHIFT))&S32_NVIC_IP_PRI178_MASK)
#define S32_NVIC_IP_PRI179_MASK                  0xFFu
#define S32_NVIC_IP_PRI179_SHIFT                 0u
#define S32_NVIC_IP_PRI179_WIDTH                 8u
#define S32_NVIC_IP_PRI179(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI179_SHIFT))&S32_NVIC_IP_PRI179_MASK)
#define S32_NVIC_IP_PRI180_MASK                  0xFFu
#define S32_NVIC_IP_PRI180_SHIFT                 0u
#define S32_NVIC_IP_PRI180_WIDTH                 8u
#define S32_NVIC_IP_PRI180(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI180_SHIFT))&S32_NVIC_IP_PRI180_MASK)
#define S32_NVIC_IP_PRI181_MASK                  0xFFu
#define S32_NVIC_IP_PRI181_SHIFT                 0u
#define S32_NVIC_IP_PRI181_WIDTH                 8u
#define S32_NVIC_IP_PRI181(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI181_SHIFT))&S32_NVIC_IP_PRI181_MASK)
#define S32_NVIC_IP_PRI182_MASK                  0xFFu
#define S32_NVIC_IP_PRI182_SHIFT                 0u
#define S32_NVIC_IP_PRI182_WIDTH                 8u
#define S32_NVIC_IP_PRI182(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI182_SHIFT))&S32_NVIC_IP_PRI182_MASK)
#define S32_NVIC_IP_PRI183_MASK                  0xFFu
#define S32_NVIC_IP_PRI183_SHIFT                 0u
#define S32_NVIC_IP_PRI183_WIDTH                 8u
#define S32_NVIC_IP_PRI183(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI183_SHIFT))&S32_NVIC_IP_PRI183_MASK)
#define S32_NVIC_IP_PRI184_MASK                  0xFFu
#define S32_NVIC_IP_PRI184_SHIFT                 0u
#define S32_NVIC_IP_PRI184_WIDTH                 8u
#define S32_NVIC_IP_PRI184(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI184_SHIFT))&S32_NVIC_IP_PRI184_MASK)
#define S32_NVIC_IP_PRI185_MASK                  0xFFu
#define S32_NVIC_IP_PRI185_SHIFT                 0u
#define S32_NVIC_IP_PRI185_WIDTH                 8u
#define S32_NVIC_IP_PRI185(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI185_SHIFT))&S32_NVIC_IP_PRI185_MASK)
#define S32_NVIC_IP_PRI186_MASK                  0xFFu
#define S32_NVIC_IP_PRI186_SHIFT                 0u
#define S32_NVIC_IP_PRI186_WIDTH                 8u
#define S32_NVIC_IP_PRI186(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI186_SHIFT))&S32_NVIC_IP_PRI186_MASK)
#define S32_NVIC_IP_PRI187_MASK                  0xFFu
#define S32_NVIC_IP_PRI187_SHIFT                 0u
#define S32_NVIC_IP_PRI187_WIDTH                 8u
#define S32_NVIC_IP_PRI187(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI187_SHIFT))&S32_NVIC_IP_PRI187_MASK)
#define S32_NVIC_IP_PRI188_MASK                  0xFFu
#define S32_NVIC_IP_PRI188_SHIFT                 0u
#define S32_NVIC_IP_PRI188_WIDTH                 8u
#define S32_NVIC_IP_PRI188(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI188_SHIFT))&S32_NVIC_IP_PRI188_MASK)
#define S32_NVIC_IP_PRI189_MASK                  0xFFu
#define S32_NVIC_IP_PRI189_SHIFT                 0u
#define S32_NVIC_IP_PRI189_WIDTH                 8u
#define S32_NVIC_IP_PRI189(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI189_SHIFT))&S32_NVIC_IP_PRI189_MASK)
#define S32_NVIC_IP_PRI190_MASK                  0xFFu
#define S32_NVIC_IP_PRI190_SHIFT                 0u
#define S32_NVIC_IP_PRI190_WIDTH                 8u
#define S32_NVIC_IP_PRI190(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI190_SHIFT))&S32_NVIC_IP_PRI190_MASK)
#define S32_NVIC_IP_PRI191_MASK                  0xFFu
#define S32_NVIC_IP_PRI191_SHIFT                 0u
#define S32_NVIC_IP_PRI191_WIDTH                 8u
#define S32_NVIC_IP_PRI191(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI191_SHIFT))&S32_NVIC_IP_PRI191_MASK)
#define S32_NVIC_IP_PRI192_MASK                  0xFFu
#define S32_NVIC_IP_PRI192_SHIFT                 0u
#define S32_NVIC_IP_PRI192_WIDTH                 8u
#define S32_NVIC_IP_PRI192(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI192_SHIFT))&S32_NVIC_IP_PRI192_MASK)
#define S32_NVIC_IP_PRI193_MASK                  0xFFu
#define S32_NVIC_IP_PRI193_SHIFT                 0u
#define S32_NVIC_IP_PRI193_WIDTH                 8u
#define S32_NVIC_IP_PRI193(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI193_SHIFT))&S32_NVIC_IP_PRI193_MASK)
#define S32_NVIC_IP_PRI194_MASK                  0xFFu
#define S32_NVIC_IP_PRI194_SHIFT                 0u
#define S32_NVIC_IP_PRI194_WIDTH                 8u
#define S32_NVIC_IP_PRI194(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI194_SHIFT))&S32_NVIC_IP_PRI194_MASK)
#define S32_NVIC_IP_PRI195_MASK                  0xFFu
#define S32_NVIC_IP_PRI195_SHIFT                 0u
#define S32_NVIC_IP_PRI195_WIDTH                 8u
#define S32_NVIC_IP_PRI195(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI195_SHIFT))&S32_NVIC_IP_PRI195_MASK)
#define S32_NVIC_IP_PRI196_MASK                  0xFFu
#define S32_NVIC_IP_PRI196_SHIFT                 0u
#define S32_NVIC_IP_PRI196_WIDTH                 8u
#define S32_NVIC_IP_PRI196(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI196_SHIFT))&S32_NVIC_IP_PRI196_MASK)
#define S32_NVIC_IP_PRI197_MASK                  0xFFu
#define S32_NVIC_IP_PRI197_SHIFT                 0u
#define S32_NVIC_IP_PRI197_WIDTH                 8u
#define S32_NVIC_IP_PRI197(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI197_SHIFT))&S32_NVIC_IP_PRI197_MASK)
#define S32_NVIC_IP_PRI198_MASK                  0xFFu
#define S32_NVIC_IP_PRI198_SHIFT                 0u
#define S32_NVIC_IP_PRI198_WIDTH                 8u
#define S32_NVIC_IP_PRI198(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI198_SHIFT))&S32_NVIC_IP_PRI198_MASK)
#define S32_NVIC_IP_PRI199_MASK                  0xFFu
#define S32_NVIC_IP_PRI199_SHIFT                 0u
#define S32_NVIC_IP_PRI199_WIDTH                 8u
#define S32_NVIC_IP_PRI199(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI199_SHIFT))&S32_NVIC_IP_PRI199_MASK)
#define S32_NVIC_IP_PRI200_MASK                  0xFFu
#define S32_NVIC_IP_PRI200_SHIFT                 0u
#define S32_NVIC_IP_PRI200_WIDTH                 8u
#define S32_NVIC_IP_PRI200(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI200_SHIFT))&S32_NVIC_IP_PRI200_MASK)
#define S32_NVIC_IP_PRI201_MASK                  0xFFu
#define S32_NVIC_IP_PRI201_SHIFT                 0u
#define S32_NVIC_IP_PRI201_WIDTH                 8u
#define S32_NVIC_IP_PRI201(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI201_SHIFT))&S32_NVIC_IP_PRI201_MASK)
#define S32_NVIC_IP_PRI202_MASK                  0xFFu
#define S32_NVIC_IP_PRI202_SHIFT                 0u
#define S32_NVIC_IP_PRI202_WIDTH                 8u
#define S32_NVIC_IP_PRI202(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI202_SHIFT))&S32_NVIC_IP_PRI202_MASK)
#define S32_NVIC_IP_PRI203_MASK                  0xFFu
#define S32_NVIC_IP_PRI203_SHIFT                 0u
#define S32_NVIC_IP_PRI203_WIDTH                 8u
#define S32_NVIC_IP_PRI203(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI203_SHIFT))&S32_NVIC_IP_PRI203_MASK)
#define S32_NVIC_IP_PRI204_MASK                  0xFFu
#define S32_NVIC_IP_PRI204_SHIFT                 0u
#define S32_NVIC_IP_PRI204_WIDTH                 8u
#define S32_NVIC_IP_PRI204(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI204_SHIFT))&S32_NVIC_IP_PRI204_MASK)
#define S32_NVIC_IP_PRI205_MASK                  0xFFu
#define S32_NVIC_IP_PRI205_SHIFT                 0u
#define S32_NVIC_IP_PRI205_WIDTH                 8u
#define S32_NVIC_IP_PRI205(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI205_SHIFT))&S32_NVIC_IP_PRI205_MASK)
#define S32_NVIC_IP_PRI206_MASK                  0xFFu
#define S32_NVIC_IP_PRI206_SHIFT                 0u
#define S32_NVIC_IP_PRI206_WIDTH                 8u
#define S32_NVIC_IP_PRI206(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI206_SHIFT))&S32_NVIC_IP_PRI206_MASK)
#define S32_NVIC_IP_PRI207_MASK                  0xFFu
#define S32_NVIC_IP_PRI207_SHIFT                 0u
#define S32_NVIC_IP_PRI207_WIDTH                 8u
#define S32_NVIC_IP_PRI207(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI207_SHIFT))&S32_NVIC_IP_PRI207_MASK)
#define S32_NVIC_IP_PRI208_MASK                  0xFFu
#define S32_NVIC_IP_PRI208_SHIFT                 0u
#define S32_NVIC_IP_PRI208_WIDTH                 8u
#define S32_NVIC_IP_PRI208(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI208_SHIFT))&S32_NVIC_IP_PRI208_MASK)
#define S32_NVIC_IP_PRI209_MASK                  0xFFu
#define S32_NVIC_IP_PRI209_SHIFT                 0u
#define S32_NVIC_IP_PRI209_WIDTH                 8u
#define S32_NVIC_IP_PRI209(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI209_SHIFT))&S32_NVIC_IP_PRI209_MASK)
#define S32_NVIC_IP_PRI210_MASK                  0xFFu
#define S32_NVIC_IP_PRI210_SHIFT                 0u
#define S32_NVIC_IP_PRI210_WIDTH                 8u
#define S32_NVIC_IP_PRI210(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI210_SHIFT))&S32_NVIC_IP_PRI210_MASK)
#define S32_NVIC_IP_PRI211_MASK                  0xFFu
#define S32_NVIC_IP_PRI211_SHIFT                 0u
#define S32_NVIC_IP_PRI211_WIDTH                 8u
#define S32_NVIC_IP_PRI211(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI211_SHIFT))&S32_NVIC_IP_PRI211_MASK)
#define S32_NVIC_IP_PRI212_MASK                  0xFFu
#define S32_NVIC_IP_PRI212_SHIFT                 0u
#define S32_NVIC_IP_PRI212_WIDTH                 8u
#define S32_NVIC_IP_PRI212(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI212_SHIFT))&S32_NVIC_IP_PRI212_MASK)
#define S32_NVIC_IP_PRI213_MASK                  0xFFu
#define S32_NVIC_IP_PRI213_SHIFT                 0u
#define S32_NVIC_IP_PRI213_WIDTH                 8u
#define S32_NVIC_IP_PRI213(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI213_SHIFT))&S32_NVIC_IP_PRI213_MASK)
#define S32_NVIC_IP_PRI214_MASK                  0xFFu
#define S32_NVIC_IP_PRI214_SHIFT                 0u
#define S32_NVIC_IP_PRI214_WIDTH                 8u
#define S32_NVIC_IP_PRI214(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI214_SHIFT))&S32_NVIC_IP_PRI214_MASK)
#define S32_NVIC_IP_PRI215_MASK                  0xFFu
#define S32_NVIC_IP_PRI215_SHIFT                 0u
#define S32_NVIC_IP_PRI215_WIDTH                 8u
#define S32_NVIC_IP_PRI215(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI215_SHIFT))&S32_NVIC_IP_PRI215_MASK)
#define S32_NVIC_IP_PRI216_MASK                  0xFFu
#define S32_NVIC_IP_PRI216_SHIFT                 0u
#define S32_NVIC_IP_PRI216_WIDTH                 8u
#define S32_NVIC_IP_PRI216(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI216_SHIFT))&S32_NVIC_IP_PRI216_MASK)
#define S32_NVIC_IP_PRI217_MASK                  0xFFu
#define S32_NVIC_IP_PRI217_SHIFT                 0u
#define S32_NVIC_IP_PRI217_WIDTH                 8u
#define S32_NVIC_IP_PRI217(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI217_SHIFT))&S32_NVIC_IP_PRI217_MASK)
#define S32_NVIC_IP_PRI218_MASK                  0xFFu
#define S32_NVIC_IP_PRI218_SHIFT                 0u
#define S32_NVIC_IP_PRI218_WIDTH                 8u
#define S32_NVIC_IP_PRI218(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI218_SHIFT))&S32_NVIC_IP_PRI218_MASK)
#define S32_NVIC_IP_PRI219_MASK                  0xFFu
#define S32_NVIC_IP_PRI219_SHIFT                 0u
#define S32_NVIC_IP_PRI219_WIDTH                 8u
#define S32_NVIC_IP_PRI219(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI219_SHIFT))&S32_NVIC_IP_PRI219_MASK)
#define S32_NVIC_IP_PRI220_MASK                  0xFFu
#define S32_NVIC_IP_PRI220_SHIFT                 0u
#define S32_NVIC_IP_PRI220_WIDTH                 8u
#define S32_NVIC_IP_PRI220(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI220_SHIFT))&S32_NVIC_IP_PRI220_MASK)
#define S32_NVIC_IP_PRI221_MASK                  0xFFu
#define S32_NVIC_IP_PRI221_SHIFT                 0u
#define S32_NVIC_IP_PRI221_WIDTH                 8u
#define S32_NVIC_IP_PRI221(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI221_SHIFT))&S32_NVIC_IP_PRI221_MASK)
#define S32_NVIC_IP_PRI222_MASK                  0xFFu
#define S32_NVIC_IP_PRI222_SHIFT                 0u
#define S32_NVIC_IP_PRI222_WIDTH                 8u
#define S32_NVIC_IP_PRI222(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI222_SHIFT))&S32_NVIC_IP_PRI222_MASK)
#define S32_NVIC_IP_PRI223_MASK                  0xFFu
#define S32_NVIC_IP_PRI223_SHIFT                 0u
#define S32_NVIC_IP_PRI223_WIDTH                 8u
#define S32_NVIC_IP_PRI223(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI223_SHIFT))&S32_NVIC_IP_PRI223_MASK)
#define S32_NVIC_IP_PRI224_MASK                  0xFFu
#define S32_NVIC_IP_PRI224_SHIFT                 0u
#define S32_NVIC_IP_PRI224_WIDTH                 8u
#define S32_NVIC_IP_PRI224(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI224_SHIFT))&S32_NVIC_IP_PRI224_MASK)
#define S32_NVIC_IP_PRI225_MASK                  0xFFu
#define S32_NVIC_IP_PRI225_SHIFT                 0u
#define S32_NVIC_IP_PRI225_WIDTH                 8u
#define S32_NVIC_IP_PRI225(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI225_SHIFT))&S32_NVIC_IP_PRI225_MASK)
#define S32_NVIC_IP_PRI226_MASK                  0xFFu
#define S32_NVIC_IP_PRI226_SHIFT                 0u
#define S32_NVIC_IP_PRI226_WIDTH                 8u
#define S32_NVIC_IP_PRI226(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI226_SHIFT))&S32_NVIC_IP_PRI226_MASK)
#define S32_NVIC_IP_PRI227_MASK                  0xFFu
#define S32_NVIC_IP_PRI227_SHIFT                 0u
#define S32_NVIC_IP_PRI227_WIDTH                 8u
#define S32_NVIC_IP_PRI227(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI227_SHIFT))&S32_NVIC_IP_PRI227_MASK)
#define S32_NVIC_IP_PRI228_MASK                  0xFFu
#define S32_NVIC_IP_PRI228_SHIFT                 0u
#define S32_NVIC_IP_PRI228_WIDTH                 8u
#define S32_NVIC_IP_PRI228(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI228_SHIFT))&S32_NVIC_IP_PRI228_MASK)
#define S32_NVIC_IP_PRI229_MASK                  0xFFu
#define S32_NVIC_IP_PRI229_SHIFT                 0u
#define S32_NVIC_IP_PRI229_WIDTH                 8u
#define S32_NVIC_IP_PRI229(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI229_SHIFT))&S32_NVIC_IP_PRI229_MASK)
#define S32_NVIC_IP_PRI230_MASK                  0xFFu
#define S32_NVIC_IP_PRI230_SHIFT                 0u
#define S32_NVIC_IP_PRI230_WIDTH                 8u
#define S32_NVIC_IP_PRI230(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI230_SHIFT))&S32_NVIC_IP_PRI230_MASK)
#define S32_NVIC_IP_PRI231_MASK                  0xFFu
#define S32_NVIC_IP_PRI231_SHIFT                 0u
#define S32_NVIC_IP_PRI231_WIDTH                 8u
#define S32_NVIC_IP_PRI231(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI231_SHIFT))&S32_NVIC_IP_PRI231_MASK)
#define S32_NVIC_IP_PRI232_MASK                  0xFFu
#define S32_NVIC_IP_PRI232_SHIFT                 0u
#define S32_NVIC_IP_PRI232_WIDTH                 8u
#define S32_NVIC_IP_PRI232(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI232_SHIFT))&S32_NVIC_IP_PRI232_MASK)
#define S32_NVIC_IP_PRI233_MASK                  0xFFu
#define S32_NVIC_IP_PRI233_SHIFT                 0u
#define S32_NVIC_IP_PRI233_WIDTH                 8u
#define S32_NVIC_IP_PRI233(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI233_SHIFT))&S32_NVIC_IP_PRI233_MASK)
#define S32_NVIC_IP_PRI234_MASK                  0xFFu
#define S32_NVIC_IP_PRI234_SHIFT                 0u
#define S32_NVIC_IP_PRI234_WIDTH                 8u
#define S32_NVIC_IP_PRI234(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI234_SHIFT))&S32_NVIC_IP_PRI234_MASK)
#define S32_NVIC_IP_PRI235_MASK                  0xFFu
#define S32_NVIC_IP_PRI235_SHIFT                 0u
#define S32_NVIC_IP_PRI235_WIDTH                 8u
#define S32_NVIC_IP_PRI235(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI235_SHIFT))&S32_NVIC_IP_PRI235_MASK)
#define S32_NVIC_IP_PRI236_MASK                  0xFFu
#define S32_NVIC_IP_PRI236_SHIFT                 0u
#define S32_NVIC_IP_PRI236_WIDTH                 8u
#define S32_NVIC_IP_PRI236(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI236_SHIFT))&S32_NVIC_IP_PRI236_MASK)
#define S32_NVIC_IP_PRI237_MASK                  0xFFu
#define S32_NVIC_IP_PRI237_SHIFT                 0u
#define S32_NVIC_IP_PRI237_WIDTH                 8u
#define S32_NVIC_IP_PRI237(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI237_SHIFT))&S32_NVIC_IP_PRI237_MASK)
#define S32_NVIC_IP_PRI238_MASK                  0xFFu
#define S32_NVIC_IP_PRI238_SHIFT                 0u
#define S32_NVIC_IP_PRI238_WIDTH                 8u
#define S32_NVIC_IP_PRI238(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI238_SHIFT))&S32_NVIC_IP_PRI238_MASK)
#define S32_NVIC_IP_PRI239_MASK                  0xFFu
#define S32_NVIC_IP_PRI239_SHIFT                 0u
#define S32_NVIC_IP_PRI239_WIDTH                 8u
#define S32_NVIC_IP_PRI239(x)                    (((uint8_t)(((uint8_t)(x))<<S32_NVIC_IP_PRI239_SHIFT))&S32_NVIC_IP_PRI239_MASK)
/* STIR Bit Fields */
#define S32_NVIC_STIR_INTID_MASK                 0x1FFu
#define S32_NVIC_STIR_INTID_SHIFT                0u
#define S32_NVIC_STIR_INTID_WIDTH                9u
#define S32_NVIC_STIR_INTID(x)                   (((uint32_t)(((uint32_t)(x))<<S32_NVIC_STIR_INTID_SHIFT))&S32_NVIC_STIR_INTID_MASK)

/*!
 * @}
 */ /* end of group S32_NVIC_Register_Masks */


/*!
 * @}
 */ /* end of group S32_NVIC_Peripheral_Access_Layer */

/* ----------------------------------------------------------------------------
   -- S32_SCB Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup S32_SCB_Peripheral_Access_Layer S32_SCB Peripheral Access Layer
 * @{
 */


/** S32_SCB - Size of Registers Arrays */
#define S32_SCB_ID_MMFR_COUNT                    4u
#define S32_SCB_ID_ISAR_COUNT                    5u
#define S32_SCB_PID_COUNT                        8u
#define S32_SCB_CID_COUNT                        4u

/** S32_SCB - Register Layout Typedef */
typedef struct {
       uint8_t RESERVED_0[8];
  __IO uint32_t ACTLR;                             /**< Auxiliary Control Register, offset: 0x8 */
       uint8_t RESERVED_1[3316];
  __I  uint32_t CPUID;                             /**< CPUID Base Register, offset: 0xD00 */
  __IO uint32_t ICSR;                              /**< Interrupt Control and State Register, offset: 0xD04 */
  __IO uint32_t VTOR;                              /**< Vector Table Offset Register, offset: 0xD08 */
  __IO uint32_t AIRCR;                             /**< Application Interrupt and Reset Control Register, offset: 0xD0C */
  __IO uint32_t SCR;                               /**< System Control Register, offset: 0xD10 */
  __IO uint32_t CCR;                               /**< Configuration and Control Register, offset: 0xD14 */
  __IO uint32_t SHPR1;                             /**< System Handler Priority Register 1, offset: 0xD18 */
  __IO uint32_t SHPR2;                             /**< System Handler Priority Register 2, offset: 0xD1C */
  __IO uint32_t SHPR3;                             /**< System Handler Priority Register 3, offset: 0xD20 */
  __IO uint32_t SHCSR;                             /**< System Handler Control and State Register, offset: 0xD24 */
  __IO uint32_t CFSR;                              /**< Configurable Fault Status Registers, offset: 0xD28 */
  __IO uint32_t HFSR;                              /**< HardFault Status Register, offset: 0xD2C */
  __IO uint32_t DFSR;                              /**< Debug Fault Status Register, offset: 0xD30 */
  __IO uint32_t MMFAR;                             /**< Memanage Fault Address Register, offset: 0xD34 */
  __IO uint32_t BFAR;                              /**< BusFault Address Registerd, offset: 0xD38 */
  __IO uint32_t AFSR;                              /**< Auxiliary Fault Status Register, offset: 0xD3C */
  __I  uint32_t ID_PFR0;                           /**< Processor Feature Register 0, offset: 0xD40 */
  __I  uint32_t ID_PFR1;                           /**< Processor Feature Register 1, offset: 0xD44 */
  __I  uint32_t ID_DFR0;                           /**< Debug Feature Register 0, offset: 0xD48 */
  __I  uint32_t ID_AFR0;                           /**< Auxiliary Feature Register 0, offset: 0xD4C */
  __I  uint32_t ID_MMFR[S32_SCB_ID_MMFR_COUNT];    /**< Memory Model Feature Register 0..Memory Model Feature Register 3, array offset: 0xD50, array step: 0x4 */
  __I  uint32_t ID_ISAR[S32_SCB_ID_ISAR_COUNT];    /**< Instruction Set Attributes Register 0..Instruction Set Attributes Register 4, array offset: 0xD60, array step: 0x4 */
       uint8_t RESERVED_2[4];
  __I  uint32_t CLIDR;                             /**< Cache Level ID Register, offset: 0xD78 */
  __I  uint32_t CTR;                               /**< Cache Type Register, offset: 0xD7C */
  __I  uint32_t CCSIDR;                            /**< Cache Size ID Register, offset: 0xD80 */
  __IO uint32_t CSSELR;                            /**< Cache Size Selection Register, offset: 0xD84 */
  __IO uint32_t CPACR;                             /**< Coprocessor Access Control Register, offset: 0xD88 */
       uint8_t RESERVED_3[372];
  __O  uint32_t STIR;                              /**< Software Triggered Interrupt Register, offset: 0xF00 */
       uint8_t RESERVED_4[48];
  __IO uint32_t FPCCR;                             /**< Floating-point Context Control Register, offset: 0xF34 */
  __IO uint32_t FPCAR;                             /**< Floating-point Context Address Register, offset: 0xF38 */
  __IO uint32_t FPDSCR;                            /**< Floating-point Default Status Control Register, offset: 0xF3C */
       uint8_t RESERVED_5[16];
  __O  uint32_t ICIALLU;                           /**< Instruction cache invalidate all to Point of Unification (PoU), offset: 0xF50 */
       uint8_t RESERVED_6[4];
  __O  uint32_t ICIMVAU;                           /**< Instruction cache invalidate by address to PoU, offset: 0xF58 */
  __O  uint32_t DCIMVAC;                           /**< Data cache invalidate by address to Point of Coherency (PoC), offset: 0xF5C */
  __O  uint32_t DCISW;                             /**< Data cache invalidate by set/way, offset: 0xF60 */
  __O  uint32_t DCCMVAU;                           /**< Data cache by address to PoU, offset: 0xF64 */
  __O  uint32_t DCCMVAC;                           /**< Data cache clean by address to PoC, offset: 0xF68 */
  __O  uint32_t DCCSW;                             /**< Data cache clean by set/way, offset: 0xF6C */
  __O  uint32_t DCCIMVAC;                          /**< Data cache clean and invalidate by address to PoC, offset: 0xF70 */
  __O  uint32_t DCCISW;                            /**< Data cache clean and invalidate by set/way, offset: 0xF74 */
  __I  uint32_t BPIALL;                            /**< Not implemented - RAZ/WI, offset: 0xF78 */
       uint8_t RESERVED_7[20];
  __IO uint32_t ITCMCR;                            /**< Instruction Tightly-Coupled Memory Control Register, offset: 0xF90 */
  __IO uint32_t DTCMCR;                            /**< Data Tightly-Coupled Memory Control Register, offset: 0xF94 */
  __IO uint32_t AHBPCR;                            /**< AHBP control register, offset: 0xF98 */
  __IO uint32_t CACR;                              /**< L1 Cache Control Register, offset: 0xF9C */
  __IO uint32_t AHBSCR;                            /**< AHB Slave Control Register, offset: 0xFA0 */
       uint8_t RESERVED_8[4];
  __IO uint32_t ABFSR;                             /**< Asynchronous Bus Fault Status Register, offset: 0xFA8 */
       uint8_t RESERVED_9[4];
  __IO uint32_t IEBR0;                             /**< Instruction Error bank Register 0, offset: 0xFB0 */
  __IO uint32_t IEBR1h;                            /**< Instruction Error bank Register 1, offset: 0xFB4 */
  __IO uint32_t DEBR0h;                            /**< Data Error bank Register 0, offset: 0xFB8 */
  __IO uint32_t DEBR1h;                            /**< Data Error bank Register 1, offset: 0xFBC */
       uint8_t RESERVED_10[16];
  __I  uint32_t PID[S32_SCB_PID_COUNT];            /**< Peripheral identification register 0..Peripheral identification register 7, array offset: 0xFD0, array step: 0x4 */
  __I  uint32_t CID[S32_SCB_CID_COUNT];            /**< Component identification register 0..Component identification register 3, array offset: 0xFF0, array step: 0x4 */
} S32_SCB_Type, *S32_SCB_MemMapPtr;

 /** Number of instances of the S32_SCB module. */
#define S32_SCB_INSTANCE_COUNT                   (1u)


/* S32_SCB - Peripheral instance base addresses */
/** Peripheral S32_SCB base address */
#define S32_SCB_BASE                             (0xE000E000u)
/** Peripheral S32_SCB base pointer */
#define S32_SCB                                  ((S32_SCB_Type *)S32_SCB_BASE)
/** Array initializer of S32_SCB peripheral base addresses */
#define S32_SCB_BASE_ADDRS                       { S32_SCB_BASE }
/** Array initializer of S32_SCB peripheral base pointers */
#define S32_SCB_BASE_PTRS                        { S32_SCB }

/* ----------------------------------------------------------------------------
   -- S32_SCB Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup S32_SCB_Register_Masks S32_SCB Register Masks
 * @{
 */

/* ACTLR Bit Fields */
#define S32_SCB_ACTLR_ACTLR_MASK                 0xFFFFFFFFu
#define S32_SCB_ACTLR_ACTLR_SHIFT                0u
#define S32_SCB_ACTLR_ACTLR_WIDTH                32u
#define S32_SCB_ACTLR_ACTLR(x)                   (((uint32_t)(((uint32_t)(x))<<S32_SCB_ACTLR_ACTLR_SHIFT))&S32_SCB_ACTLR_ACTLR_MASK)
/* CPUID Bit Fields */
#define S32_SCB_CPUID_REVISION_MASK              0xFu
#define S32_SCB_CPUID_REVISION_SHIFT             0u
#define S32_SCB_CPUID_REVISION_WIDTH             4u
#define S32_SCB_CPUID_REVISION(x)                (((uint32_t)(((uint32_t)(x))<<S32_SCB_CPUID_REVISION_SHIFT))&S32_SCB_CPUID_REVISION_MASK)
#define S32_SCB_CPUID_PARTNO_MASK                0xFFF0u
#define S32_SCB_CPUID_PARTNO_SHIFT               4u
#define S32_SCB_CPUID_PARTNO_WIDTH               12u
#define S32_SCB_CPUID_PARTNO(x)                  (((uint32_t)(((uint32_t)(x))<<S32_SCB_CPUID_PARTNO_SHIFT))&S32_SCB_CPUID_PARTNO_MASK)
#define S32_SCB_CPUID_VARIANT_MASK               0xF00000u
#define S32_SCB_CPUID_VARIANT_SHIFT              20u
#define S32_SCB_CPUID_VARIANT_WIDTH              4u
#define S32_SCB_CPUID_VARIANT(x)                 (((uint32_t)(((uint32_t)(x))<<S32_SCB_CPUID_VARIANT_SHIFT))&S32_SCB_CPUID_VARIANT_MASK)
#define S32_SCB_CPUID_IMPLEMENTER_MASK           0xFF000000u
#define S32_SCB_CPUID_IMPLEMENTER_SHIFT          24u
#define S32_SCB_CPUID_IMPLEMENTER_WIDTH          8u
#define S32_SCB_CPUID_IMPLEMENTER(x)             (((uint32_t)(((uint32_t)(x))<<S32_SCB_CPUID_IMPLEMENTER_SHIFT))&S32_SCB_CPUID_IMPLEMENTER_MASK)
/* ICSR Bit Fields */
#define S32_SCB_ICSR_VECTACTIVE_MASK             0x1FFu
#define S32_SCB_ICSR_VECTACTIVE_SHIFT            0u
#define S32_SCB_ICSR_VECTACTIVE_WIDTH            9u
#define S32_SCB_ICSR_VECTACTIVE(x)               (((uint32_t)(((uint32_t)(x))<<S32_SCB_ICSR_VECTACTIVE_SHIFT))&S32_SCB_ICSR_VECTACTIVE_MASK)
#define S32_SCB_ICSR_RETTOBASE_MASK              0x800u
#define S32_SCB_ICSR_RETTOBASE_SHIFT             11u
#define S32_SCB_ICSR_RETTOBASE_WIDTH             1u
#define S32_SCB_ICSR_RETTOBASE(x)                (((uint32_t)(((uint32_t)(x))<<S32_SCB_ICSR_RETTOBASE_SHIFT))&S32_SCB_ICSR_RETTOBASE_MASK)
#define S32_SCB_ICSR_VECTPENDING_MASK            0x3F000u
#define S32_SCB_ICSR_VECTPENDING_SHIFT           12u
#define S32_SCB_ICSR_VECTPENDING_WIDTH           6u
#define S32_SCB_ICSR_VECTPENDING(x)              (((uint32_t)(((uint32_t)(x))<<S32_SCB_ICSR_VECTPENDING_SHIFT))&S32_SCB_ICSR_VECTPENDING_MASK)
#define S32_SCB_ICSR_ISRPENDING_MASK             0x400000u
#define S32_SCB_ICSR_ISRPENDING_SHIFT            22u
#define S32_SCB_ICSR_ISRPENDING_WIDTH            1u
#define S32_SCB_ICSR_ISRPENDING(x)               (((uint32_t)(((uint32_t)(x))<<S32_SCB_ICSR_ISRPENDING_SHIFT))&S32_SCB_ICSR_ISRPENDING_MASK)
#define S32_SCB_ICSR_ISRPREEMPT_MASK             0x800000u
#define S32_SCB_ICSR_ISRPREEMPT_SHIFT            23u
#define S32_SCB_ICSR_ISRPREEMPT_WIDTH            1u
#define S32_SCB_ICSR_ISRPREEMPT(x)               (((uint32_t)(((uint32_t)(x))<<S32_SCB_ICSR_ISRPREEMPT_SHIFT))&S32_SCB_ICSR_ISRPREEMPT_MASK)
#define S32_SCB_ICSR_PENDSTCLR_MASK              0x2000000u
#define S32_SCB_ICSR_PENDSTCLR_SHIFT             25u
#define S32_SCB_ICSR_PENDSTCLR_WIDTH             1u
#define S32_SCB_ICSR_PENDSTCLR(x)                (((uint32_t)(((uint32_t)(x))<<S32_SCB_ICSR_PENDSTCLR_SHIFT))&S32_SCB_ICSR_PENDSTCLR_MASK)
#define S32_SCB_ICSR_PENDSTSET_MASK              0x4000000u
#define S32_SCB_ICSR_PENDSTSET_SHIFT             26u
#define S32_SCB_ICSR_PENDSTSET_WIDTH             1u
#define S32_SCB_ICSR_PENDSTSET(x)                (((uint32_t)(((uint32_t)(x))<<S32_SCB_ICSR_PENDSTSET_SHIFT))&S32_SCB_ICSR_PENDSTSET_MASK)
#define S32_SCB_ICSR_PENDSVCLR_MASK              0x8000000u
#define S32_SCB_ICSR_PENDSVCLR_SHIFT             27u
#define S32_SCB_ICSR_PENDSVCLR_WIDTH             1u
#define S32_SCB_ICSR_PENDSVCLR(x)                (((uint32_t)(((uint32_t)(x))<<S32_SCB_ICSR_PENDSVCLR_SHIFT))&S32_SCB_ICSR_PENDSVCLR_MASK)
#define S32_SCB_ICSR_PENDSVSET_MASK              0x10000000u
#define S32_SCB_ICSR_PENDSVSET_SHIFT             28u
#define S32_SCB_ICSR_PENDSVSET_WIDTH             1u
#define S32_SCB_ICSR_PENDSVSET(x)                (((uint32_t)(((uint32_t)(x))<<S32_SCB_ICSR_PENDSVSET_SHIFT))&S32_SCB_ICSR_PENDSVSET_MASK)
#define S32_SCB_ICSR_NMIPENDSET_MASK             0x80000000u
#define S32_SCB_ICSR_NMIPENDSET_SHIFT            31u
#define S32_SCB_ICSR_NMIPENDSET_WIDTH            1u
#define S32_SCB_ICSR_NMIPENDSET(x)               (((uint32_t)(((uint32_t)(x))<<S32_SCB_ICSR_NMIPENDSET_SHIFT))&S32_SCB_ICSR_NMIPENDSET_MASK)
/* VTOR Bit Fields */
#define S32_SCB_VTOR_TBLOFF_MASK                 0xFFFFFF80u
#define S32_SCB_VTOR_TBLOFF_SHIFT                7u
#define S32_SCB_VTOR_TBLOFF_WIDTH                25u
#define S32_SCB_VTOR_TBLOFF(x)                   (((uint32_t)(((uint32_t)(x))<<S32_SCB_VTOR_TBLOFF_SHIFT))&S32_SCB_VTOR_TBLOFF_MASK)
/* AIRCR Bit Fields */
#define S32_SCB_AIRCR_AIRCR_MASK                 0xFFFFFFFFu
#define S32_SCB_AIRCR_AIRCR_SHIFT                0u
#define S32_SCB_AIRCR_AIRCR_WIDTH                32u
#define S32_SCB_AIRCR_AIRCR(x)                   (((uint32_t)(((uint32_t)(x))<<S32_SCB_AIRCR_AIRCR_SHIFT))&S32_SCB_AIRCR_AIRCR_MASK)
/* SCR Bit Fields */
#define S32_SCB_SCR_SCR_MASK                     0xFFFFFFFFu
#define S32_SCB_SCR_SCR_SHIFT                    0u
#define S32_SCB_SCR_SCR_WIDTH                    32u
#define S32_SCB_SCR_SCR(x)                       (((uint32_t)(((uint32_t)(x))<<S32_SCB_SCR_SCR_SHIFT))&S32_SCB_SCR_SCR_MASK)
/* CCR Bit Fields */
#define S32_SCB_CCR_CCR_MASK                     0xFFFFFFFFu
#define S32_SCB_CCR_CCR_SHIFT                    0u
#define S32_SCB_CCR_CCR_WIDTH                    32u
#define S32_SCB_CCR_CCR(x)                       (((uint32_t)(((uint32_t)(x))<<S32_SCB_CCR_CCR_SHIFT))&S32_SCB_CCR_CCR_MASK)
/* SHPR1 Bit Fields */
#define S32_SCB_SHPR1_SHPR1_MASK                 0xFFFFFFFFu
#define S32_SCB_SHPR1_SHPR1_SHIFT                0u
#define S32_SCB_SHPR1_SHPR1_WIDTH                32u
#define S32_SCB_SHPR1_SHPR1(x)                   (((uint32_t)(((uint32_t)(x))<<S32_SCB_SHPR1_SHPR1_SHIFT))&S32_SCB_SHPR1_SHPR1_MASK)
/* SHPR2 Bit Fields */
#define S32_SCB_SHPR2_SHPR2_MASK                 0xFFFFFFFFu
#define S32_SCB_SHPR2_SHPR2_SHIFT                0u
#define S32_SCB_SHPR2_SHPR2_WIDTH                32u
#define S32_SCB_SHPR2_SHPR2(x)                   (((uint32_t)(((uint32_t)(x))<<S32_SCB_SHPR2_SHPR2_SHIFT))&S32_SCB_SHPR2_SHPR2_MASK)
/* SHPR3 Bit Fields */
#define S32_SCB_SHPR3_SHPR3_MASK                 0xFFFFFFFFu
#define S32_SCB_SHPR3_SHPR3_SHIFT                0u
#define S32_SCB_SHPR3_SHPR3_WIDTH                32u
#define S32_SCB_SHPR3_SHPR3(x)                   (((uint32_t)(((uint32_t)(x))<<S32_SCB_SHPR3_SHPR3_SHIFT))&S32_SCB_SHPR3_SHPR3_MASK)
/* SHCSR Bit Fields */
#define S32_SCB_SHCSR_MEMFAULTACT_MASK           0x1u
#define S32_SCB_SHCSR_MEMFAULTACT_SHIFT          0u
#define S32_SCB_SHCSR_MEMFAULTACT_WIDTH          1u
#define S32_SCB_SHCSR_MEMFAULTACT(x)             (((uint32_t)(((uint32_t)(x))<<S32_SCB_SHCSR_MEMFAULTACT_SHIFT))&S32_SCB_SHCSR_MEMFAULTACT_MASK)
#define S32_SCB_SHCSR_BUSFAULTACT_MASK           0x2u
#define S32_SCB_SHCSR_BUSFAULTACT_SHIFT          1u
#define S32_SCB_SHCSR_BUSFAULTACT_WIDTH          1u
#define S32_SCB_SHCSR_BUSFAULTACT(x)             (((uint32_t)(((uint32_t)(x))<<S32_SCB_SHCSR_BUSFAULTACT_SHIFT))&S32_SCB_SHCSR_BUSFAULTACT_MASK)
#define S32_SCB_SHCSR_USGFAULTACT_MASK           0x8u
#define S32_SCB_SHCSR_USGFAULTACT_SHIFT          3u
#define S32_SCB_SHCSR_USGFAULTACT_WIDTH          1u
#define S32_SCB_SHCSR_USGFAULTACT(x)             (((uint32_t)(((uint32_t)(x))<<S32_SCB_SHCSR_USGFAULTACT_SHIFT))&S32_SCB_SHCSR_USGFAULTACT_MASK)
#define S32_SCB_SHCSR_SVCALLACT_MASK             0x80u
#define S32_SCB_SHCSR_SVCALLACT_SHIFT            7u
#define S32_SCB_SHCSR_SVCALLACT_WIDTH            1u
#define S32_SCB_SHCSR_SVCALLACT(x)               (((uint32_t)(((uint32_t)(x))<<S32_SCB_SHCSR_SVCALLACT_SHIFT))&S32_SCB_SHCSR_SVCALLACT_MASK)
#define S32_SCB_SHCSR_MONITORACT_MASK            0x100u
#define S32_SCB_SHCSR_MONITORACT_SHIFT           8u
#define S32_SCB_SHCSR_MONITORACT_WIDTH           1u
#define S32_SCB_SHCSR_MONITORACT(x)              (((uint32_t)(((uint32_t)(x))<<S32_SCB_SHCSR_MONITORACT_SHIFT))&S32_SCB_SHCSR_MONITORACT_MASK)
#define S32_SCB_SHCSR_PENDSVACT_MASK             0x400u
#define S32_SCB_SHCSR_PENDSVACT_SHIFT            10u
#define S32_SCB_SHCSR_PENDSVACT_WIDTH            1u
#define S32_SCB_SHCSR_PENDSVACT(x)               (((uint32_t)(((uint32_t)(x))<<S32_SCB_SHCSR_PENDSVACT_SHIFT))&S32_SCB_SHCSR_PENDSVACT_MASK)
#define S32_SCB_SHCSR_SYSTICKACT_MASK            0x800u
#define S32_SCB_SHCSR_SYSTICKACT_SHIFT           11u
#define S32_SCB_SHCSR_SYSTICKACT_WIDTH           1u
#define S32_SCB_SHCSR_SYSTICKACT(x)              (((uint32_t)(((uint32_t)(x))<<S32_SCB_SHCSR_SYSTICKACT_SHIFT))&S32_SCB_SHCSR_SYSTICKACT_MASK)
#define S32_SCB_SHCSR_USGFAULTPENDED_MASK        0x1000u
#define S32_SCB_SHCSR_USGFAULTPENDED_SHIFT       12u
#define S32_SCB_SHCSR_USGFAULTPENDED_WIDTH       1u
#define S32_SCB_SHCSR_USGFAULTPENDED(x)          (((uint32_t)(((uint32_t)(x))<<S32_SCB_SHCSR_USGFAULTPENDED_SHIFT))&S32_SCB_SHCSR_USGFAULTPENDED_MASK)
#define S32_SCB_SHCSR_MEMFAULTPENDED_MASK        0x2000u
#define S32_SCB_SHCSR_MEMFAULTPENDED_SHIFT       13u
#define S32_SCB_SHCSR_MEMFAULTPENDED_WIDTH       1u
#define S32_SCB_SHCSR_MEMFAULTPENDED(x)          (((uint32_t)(((uint32_t)(x))<<S32_SCB_SHCSR_MEMFAULTPENDED_SHIFT))&S32_SCB_SHCSR_MEMFAULTPENDED_MASK)
#define S32_SCB_SHCSR_BUSFAULTPENDED_MASK        0x4000u
#define S32_SCB_SHCSR_BUSFAULTPENDED_SHIFT       14u
#define S32_SCB_SHCSR_BUSFAULTPENDED_WIDTH       1u
#define S32_SCB_SHCSR_BUSFAULTPENDED(x)          (((uint32_t)(((uint32_t)(x))<<S32_SCB_SHCSR_BUSFAULTPENDED_SHIFT))&S32_SCB_SHCSR_BUSFAULTPENDED_MASK)
#define S32_SCB_SHCSR_SVCALLPENDED_MASK          0x8000u
#define S32_SCB_SHCSR_SVCALLPENDED_SHIFT         15u
#define S32_SCB_SHCSR_SVCALLPENDED_WIDTH         1u
#define S32_SCB_SHCSR_SVCALLPENDED(x)            (((uint32_t)(((uint32_t)(x))<<S32_SCB_SHCSR_SVCALLPENDED_SHIFT))&S32_SCB_SHCSR_SVCALLPENDED_MASK)
#define S32_SCB_SHCSR_MEMFAULTENA_MASK           0x10000u
#define S32_SCB_SHCSR_MEMFAULTENA_SHIFT          16u
#define S32_SCB_SHCSR_MEMFAULTENA_WIDTH          1u
#define S32_SCB_SHCSR_MEMFAULTENA(x)             (((uint32_t)(((uint32_t)(x))<<S32_SCB_SHCSR_MEMFAULTENA_SHIFT))&S32_SCB_SHCSR_MEMFAULTENA_MASK)
#define S32_SCB_SHCSR_BUSFAULTENA_MASK           0x20000u
#define S32_SCB_SHCSR_BUSFAULTENA_SHIFT          17u
#define S32_SCB_SHCSR_BUSFAULTENA_WIDTH          1u
#define S32_SCB_SHCSR_BUSFAULTENA(x)             (((uint32_t)(((uint32_t)(x))<<S32_SCB_SHCSR_BUSFAULTENA_SHIFT))&S32_SCB_SHCSR_BUSFAULTENA_MASK)
#define S32_SCB_SHCSR_USGFAULTENA_MASK           0x40000u
#define S32_SCB_SHCSR_USGFAULTENA_SHIFT          18u
#define S32_SCB_SHCSR_USGFAULTENA_WIDTH          1u
#define S32_SCB_SHCSR_USGFAULTENA(x)             (((uint32_t)(((uint32_t)(x))<<S32_SCB_SHCSR_USGFAULTENA_SHIFT))&S32_SCB_SHCSR_USGFAULTENA_MASK)
/* CFSR Bit Fields */
#define S32_SCB_CFSR_MMFSR_IACCVIOL_MASK         0x1u
#define S32_SCB_CFSR_MMFSR_IACCVIOL_SHIFT        0u
#define S32_SCB_CFSR_MMFSR_IACCVIOL_WIDTH        1u
#define S32_SCB_CFSR_MMFSR_IACCVIOL(x)           (((uint32_t)(((uint32_t)(x))<<S32_SCB_CFSR_MMFSR_IACCVIOL_SHIFT))&S32_SCB_CFSR_MMFSR_IACCVIOL_MASK)
#define S32_SCB_CFSR_MMFSR_DACCVIOL_MASK         0x2u
#define S32_SCB_CFSR_MMFSR_DACCVIOL_SHIFT        1u
#define S32_SCB_CFSR_MMFSR_DACCVIOL_WIDTH        1u
#define S32_SCB_CFSR_MMFSR_DACCVIOL(x)           (((uint32_t)(((uint32_t)(x))<<S32_SCB_CFSR_MMFSR_DACCVIOL_SHIFT))&S32_SCB_CFSR_MMFSR_DACCVIOL_MASK)
#define S32_SCB_CFSR_MMFSR_MUNSTKERR_MASK        0x8u
#define S32_SCB_CFSR_MMFSR_MUNSTKERR_SHIFT       3u
#define S32_SCB_CFSR_MMFSR_MUNSTKERR_WIDTH       1u
#define S32_SCB_CFSR_MMFSR_MUNSTKERR(x)          (((uint32_t)(((uint32_t)(x))<<S32_SCB_CFSR_MMFSR_MUNSTKERR_SHIFT))&S32_SCB_CFSR_MMFSR_MUNSTKERR_MASK)
#define S32_SCB_CFSR_MMFSR_MSTKERR_MASK          0x10u
#define S32_SCB_CFSR_MMFSR_MSTKERR_SHIFT         4u
#define S32_SCB_CFSR_MMFSR_MSTKERR_WIDTH         1u
#define S32_SCB_CFSR_MMFSR_MSTKERR(x)            (((uint32_t)(((uint32_t)(x))<<S32_SCB_CFSR_MMFSR_MSTKERR_SHIFT))&S32_SCB_CFSR_MMFSR_MSTKERR_MASK)
#define S32_SCB_CFSR_MMFSR_MLSPERR_MASK          0x20u
#define S32_SCB_CFSR_MMFSR_MLSPERR_SHIFT         5u
#define S32_SCB_CFSR_MMFSR_MLSPERR_WIDTH         1u
#define S32_SCB_CFSR_MMFSR_MLSPERR(x)            (((uint32_t)(((uint32_t)(x))<<S32_SCB_CFSR_MMFSR_MLSPERR_SHIFT))&S32_SCB_CFSR_MMFSR_MLSPERR_MASK)
#define S32_SCB_CFSR_MMFSR_MMARVALID_MASK        0x80u
#define S32_SCB_CFSR_MMFSR_MMARVALID_SHIFT       7u
#define S32_SCB_CFSR_MMFSR_MMARVALID_WIDTH       1u
#define S32_SCB_CFSR_MMFSR_MMARVALID(x)          (((uint32_t)(((uint32_t)(x))<<S32_SCB_CFSR_MMFSR_MMARVALID_SHIFT))&S32_SCB_CFSR_MMFSR_MMARVALID_MASK)
#define S32_SCB_CFSR_BFSR_IBUSERR_MASK           0x100u
#define S32_SCB_CFSR_BFSR_IBUSERR_SHIFT          8u
#define S32_SCB_CFSR_BFSR_IBUSERR_WIDTH          1u
#define S32_SCB_CFSR_BFSR_IBUSERR(x)             (((uint32_t)(((uint32_t)(x))<<S32_SCB_CFSR_BFSR_IBUSERR_SHIFT))&S32_SCB_CFSR_BFSR_IBUSERR_MASK)
#define S32_SCB_CFSR_BFSR_PRECISERR_MASK         0x200u
#define S32_SCB_CFSR_BFSR_PRECISERR_SHIFT        9u
#define S32_SCB_CFSR_BFSR_PRECISERR_WIDTH        1u
#define S32_SCB_CFSR_BFSR_PRECISERR(x)           (((uint32_t)(((uint32_t)(x))<<S32_SCB_CFSR_BFSR_PRECISERR_SHIFT))&S32_SCB_CFSR_BFSR_PRECISERR_MASK)
#define S32_SCB_CFSR_BFSR_IMPRECISERR_MASK       0x400u
#define S32_SCB_CFSR_BFSR_IMPRECISERR_SHIFT      10u
#define S32_SCB_CFSR_BFSR_IMPRECISERR_WIDTH      1u
#define S32_SCB_CFSR_BFSR_IMPRECISERR(x)         (((uint32_t)(((uint32_t)(x))<<S32_SCB_CFSR_BFSR_IMPRECISERR_SHIFT))&S32_SCB_CFSR_BFSR_IMPRECISERR_MASK)
#define S32_SCB_CFSR_BFSR_UNSTKERR_MASK          0x800u
#define S32_SCB_CFSR_BFSR_UNSTKERR_SHIFT         11u
#define S32_SCB_CFSR_BFSR_UNSTKERR_WIDTH         1u
#define S32_SCB_CFSR_BFSR_UNSTKERR(x)            (((uint32_t)(((uint32_t)(x))<<S32_SCB_CFSR_BFSR_UNSTKERR_SHIFT))&S32_SCB_CFSR_BFSR_UNSTKERR_MASK)
#define S32_SCB_CFSR_BFSR_STKERR_MASK            0x1000u
#define S32_SCB_CFSR_BFSR_STKERR_SHIFT           12u
#define S32_SCB_CFSR_BFSR_STKERR_WIDTH           1u
#define S32_SCB_CFSR_BFSR_STKERR(x)              (((uint32_t)(((uint32_t)(x))<<S32_SCB_CFSR_BFSR_STKERR_SHIFT))&S32_SCB_CFSR_BFSR_STKERR_MASK)
#define S32_SCB_CFSR_BFSR_LSPERR_MASK            0x2000u
#define S32_SCB_CFSR_BFSR_LSPERR_SHIFT           13u
#define S32_SCB_CFSR_BFSR_LSPERR_WIDTH           1u
#define S32_SCB_CFSR_BFSR_LSPERR(x)              (((uint32_t)(((uint32_t)(x))<<S32_SCB_CFSR_BFSR_LSPERR_SHIFT))&S32_SCB_CFSR_BFSR_LSPERR_MASK)
#define S32_SCB_CFSR_BFSR_BFARVALID_MASK         0x8000u
#define S32_SCB_CFSR_BFSR_BFARVALID_SHIFT        15u
#define S32_SCB_CFSR_BFSR_BFARVALID_WIDTH        1u
#define S32_SCB_CFSR_BFSR_BFARVALID(x)           (((uint32_t)(((uint32_t)(x))<<S32_SCB_CFSR_BFSR_BFARVALID_SHIFT))&S32_SCB_CFSR_BFSR_BFARVALID_MASK)
#define S32_SCB_CFSR_UFSR_UNDEFINSTR_MASK        0x10000u
#define S32_SCB_CFSR_UFSR_UNDEFINSTR_SHIFT       16u
#define S32_SCB_CFSR_UFSR_UNDEFINSTR_WIDTH       1u
#define S32_SCB_CFSR_UFSR_UNDEFINSTR(x)          (((uint32_t)(((uint32_t)(x))<<S32_SCB_CFSR_UFSR_UNDEFINSTR_SHIFT))&S32_SCB_CFSR_UFSR_UNDEFINSTR_MASK)
#define S32_SCB_CFSR_UFSR_INVSTATE_MASK          0x20000u
#define S32_SCB_CFSR_UFSR_INVSTATE_SHIFT         17u
#define S32_SCB_CFSR_UFSR_INVSTATE_WIDTH         1u
#define S32_SCB_CFSR_UFSR_INVSTATE(x)            (((uint32_t)(((uint32_t)(x))<<S32_SCB_CFSR_UFSR_INVSTATE_SHIFT))&S32_SCB_CFSR_UFSR_INVSTATE_MASK)
#define S32_SCB_CFSR_UFSR_INVPC_MASK             0x40000u
#define S32_SCB_CFSR_UFSR_INVPC_SHIFT            18u
#define S32_SCB_CFSR_UFSR_INVPC_WIDTH            1u
#define S32_SCB_CFSR_UFSR_INVPC(x)               (((uint32_t)(((uint32_t)(x))<<S32_SCB_CFSR_UFSR_INVPC_SHIFT))&S32_SCB_CFSR_UFSR_INVPC_MASK)
#define S32_SCB_CFSR_UFSR_NOCP_MASK              0x80000u
#define S32_SCB_CFSR_UFSR_NOCP_SHIFT             19u
#define S32_SCB_CFSR_UFSR_NOCP_WIDTH             1u
#define S32_SCB_CFSR_UFSR_NOCP(x)                (((uint32_t)(((uint32_t)(x))<<S32_SCB_CFSR_UFSR_NOCP_SHIFT))&S32_SCB_CFSR_UFSR_NOCP_MASK)
#define S32_SCB_CFSR_UFSR_UNALIGNED_MASK         0x1000000u
#define S32_SCB_CFSR_UFSR_UNALIGNED_SHIFT        24u
#define S32_SCB_CFSR_UFSR_UNALIGNED_WIDTH        1u
#define S32_SCB_CFSR_UFSR_UNALIGNED(x)           (((uint32_t)(((uint32_t)(x))<<S32_SCB_CFSR_UFSR_UNALIGNED_SHIFT))&S32_SCB_CFSR_UFSR_UNALIGNED_MASK)
#define S32_SCB_CFSR_UFSR_DIVBYZERO_MASK         0x2000000u
#define S32_SCB_CFSR_UFSR_DIVBYZERO_SHIFT        25u
#define S32_SCB_CFSR_UFSR_DIVBYZERO_WIDTH        1u
#define S32_SCB_CFSR_UFSR_DIVBYZERO(x)           (((uint32_t)(((uint32_t)(x))<<S32_SCB_CFSR_UFSR_DIVBYZERO_SHIFT))&S32_SCB_CFSR_UFSR_DIVBYZERO_MASK)
/* HFSR Bit Fields */
#define S32_SCB_HFSR_HFSR_MASK                   0xFFFFFFFFu
#define S32_SCB_HFSR_HFSR_SHIFT                  0u
#define S32_SCB_HFSR_HFSR_WIDTH                  32u
#define S32_SCB_HFSR_HFSR(x)                     (((uint32_t)(((uint32_t)(x))<<S32_SCB_HFSR_HFSR_SHIFT))&S32_SCB_HFSR_HFSR_MASK)
/* DFSR Bit Fields */
#define S32_SCB_DFSR_DFSR_MASK                   0xFFFFFFFFu
#define S32_SCB_DFSR_DFSR_SHIFT                  0u
#define S32_SCB_DFSR_DFSR_WIDTH                  32u
#define S32_SCB_DFSR_DFSR(x)                     (((uint32_t)(((uint32_t)(x))<<S32_SCB_DFSR_DFSR_SHIFT))&S32_SCB_DFSR_DFSR_MASK)
/* MMFAR Bit Fields */
#define S32_SCB_MMFAR_MMFAR_MASK                 0xFFFFFFFFu
#define S32_SCB_MMFAR_MMFAR_SHIFT                0u
#define S32_SCB_MMFAR_MMFAR_WIDTH                32u
#define S32_SCB_MMFAR_MMFAR(x)                   (((uint32_t)(((uint32_t)(x))<<S32_SCB_MMFAR_MMFAR_SHIFT))&S32_SCB_MMFAR_MMFAR_MASK)
/* BFAR Bit Fields */
#define S32_SCB_BFAR_BFAR_MASK                   0xFFFFFFFFu
#define S32_SCB_BFAR_BFAR_SHIFT                  0u
#define S32_SCB_BFAR_BFAR_WIDTH                  32u
#define S32_SCB_BFAR_BFAR(x)                     (((uint32_t)(((uint32_t)(x))<<S32_SCB_BFAR_BFAR_SHIFT))&S32_SCB_BFAR_BFAR_MASK)
/* AFSR Bit Fields */
#define S32_SCB_AFSR_AFSR_MASK                   0xFFFFFFFFu
#define S32_SCB_AFSR_AFSR_SHIFT                  0u
#define S32_SCB_AFSR_AFSR_WIDTH                  32u
#define S32_SCB_AFSR_AFSR(x)                     (((uint32_t)(((uint32_t)(x))<<S32_SCB_AFSR_AFSR_SHIFT))&S32_SCB_AFSR_AFSR_MASK)
/* ID_PFR0 Bit Fields */
#define S32_SCB_ID_PFR0_ID_PFR0_MASK             0xFFFFFFFFu
#define S32_SCB_ID_PFR0_ID_PFR0_SHIFT            0u
#define S32_SCB_ID_PFR0_ID_PFR0_WIDTH            32u
#define S32_SCB_ID_PFR0_ID_PFR0(x)               (((uint32_t)(((uint32_t)(x))<<S32_SCB_ID_PFR0_ID_PFR0_SHIFT))&S32_SCB_ID_PFR0_ID_PFR0_MASK)
/* ID_PFR1 Bit Fields */
#define S32_SCB_ID_PFR1_ID_PFR1_MASK             0xFFFFFFFFu
#define S32_SCB_ID_PFR1_ID_PFR1_SHIFT            0u
#define S32_SCB_ID_PFR1_ID_PFR1_WIDTH            32u
#define S32_SCB_ID_PFR1_ID_PFR1(x)               (((uint32_t)(((uint32_t)(x))<<S32_SCB_ID_PFR1_ID_PFR1_SHIFT))&S32_SCB_ID_PFR1_ID_PFR1_MASK)
/* ID_DFR0 Bit Fields */
#define S32_SCB_ID_DFR0_ID_DFR0_MASK             0xFFFFFFFFu
#define S32_SCB_ID_DFR0_ID_DFR0_SHIFT            0u
#define S32_SCB_ID_DFR0_ID_DFR0_WIDTH            32u
#define S32_SCB_ID_DFR0_ID_DFR0(x)               (((uint32_t)(((uint32_t)(x))<<S32_SCB_ID_DFR0_ID_DFR0_SHIFT))&S32_SCB_ID_DFR0_ID_DFR0_MASK)
/* ID_AFR0 Bit Fields */
#define S32_SCB_ID_AFR0_ID_AFR0_MASK             0xFFFFFFFFu
#define S32_SCB_ID_AFR0_ID_AFR0_SHIFT            0u
#define S32_SCB_ID_AFR0_ID_AFR0_WIDTH            32u
#define S32_SCB_ID_AFR0_ID_AFR0(x)               (((uint32_t)(((uint32_t)(x))<<S32_SCB_ID_AFR0_ID_AFR0_SHIFT))&S32_SCB_ID_AFR0_ID_AFR0_MASK)
/* ID_MMFR Bit Fields */
#define S32_SCB_ID_MMFR_ID_MMFR0_MASK            0xFFFFFFFFu
#define S32_SCB_ID_MMFR_ID_MMFR0_SHIFT           0u
#define S32_SCB_ID_MMFR_ID_MMFR0_WIDTH           32u
#define S32_SCB_ID_MMFR_ID_MMFR0(x)              (((uint32_t)(((uint32_t)(x))<<S32_SCB_ID_MMFR_ID_MMFR0_SHIFT))&S32_SCB_ID_MMFR_ID_MMFR0_MASK)
#define S32_SCB_ID_MMFR_ID_MMFR1_MASK            0xFFFFFFFFu
#define S32_SCB_ID_MMFR_ID_MMFR1_SHIFT           0u
#define S32_SCB_ID_MMFR_ID_MMFR1_WIDTH           32u
#define S32_SCB_ID_MMFR_ID_MMFR1(x)              (((uint32_t)(((uint32_t)(x))<<S32_SCB_ID_MMFR_ID_MMFR1_SHIFT))&S32_SCB_ID_MMFR_ID_MMFR1_MASK)
#define S32_SCB_ID_MMFR_ID_MMFR2_MASK            0xFFFFFFFFu
#define S32_SCB_ID_MMFR_ID_MMFR2_SHIFT           0u
#define S32_SCB_ID_MMFR_ID_MMFR2_WIDTH           32u
#define S32_SCB_ID_MMFR_ID_MMFR2(x)              (((uint32_t)(((uint32_t)(x))<<S32_SCB_ID_MMFR_ID_MMFR2_SHIFT))&S32_SCB_ID_MMFR_ID_MMFR2_MASK)
#define S32_SCB_ID_MMFR_ID_MMFR3_MASK            0xFFFFFFFFu
#define S32_SCB_ID_MMFR_ID_MMFR3_SHIFT           0u
#define S32_SCB_ID_MMFR_ID_MMFR3_WIDTH           32u
#define S32_SCB_ID_MMFR_ID_MMFR3(x)              (((uint32_t)(((uint32_t)(x))<<S32_SCB_ID_MMFR_ID_MMFR3_SHIFT))&S32_SCB_ID_MMFR_ID_MMFR3_MASK)
/* ID_ISAR Bit Fields */
#define S32_SCB_ID_ISAR_ID_ISAR0_MASK            0xFFFFFFFFu
#define S32_SCB_ID_ISAR_ID_ISAR0_SHIFT           0u
#define S32_SCB_ID_ISAR_ID_ISAR0_WIDTH           32u
#define S32_SCB_ID_ISAR_ID_ISAR0(x)              (((uint32_t)(((uint32_t)(x))<<S32_SCB_ID_ISAR_ID_ISAR0_SHIFT))&S32_SCB_ID_ISAR_ID_ISAR0_MASK)
#define S32_SCB_ID_ISAR_ID_ISAR1_MASK            0xFFFFFFFFu
#define S32_SCB_ID_ISAR_ID_ISAR1_SHIFT           0u
#define S32_SCB_ID_ISAR_ID_ISAR1_WIDTH           32u
#define S32_SCB_ID_ISAR_ID_ISAR1(x)              (((uint32_t)(((uint32_t)(x))<<S32_SCB_ID_ISAR_ID_ISAR1_SHIFT))&S32_SCB_ID_ISAR_ID_ISAR1_MASK)
#define S32_SCB_ID_ISAR_ID_ISAR2_MASK            0xFFFFFFFFu
#define S32_SCB_ID_ISAR_ID_ISAR2_SHIFT           0u
#define S32_SCB_ID_ISAR_ID_ISAR2_WIDTH           32u
#define S32_SCB_ID_ISAR_ID_ISAR2(x)              (((uint32_t)(((uint32_t)(x))<<S32_SCB_ID_ISAR_ID_ISAR2_SHIFT))&S32_SCB_ID_ISAR_ID_ISAR2_MASK)
#define S32_SCB_ID_ISAR_ID_ISAR3_MASK            0xFFFFFFFFu
#define S32_SCB_ID_ISAR_ID_ISAR3_SHIFT           0u
#define S32_SCB_ID_ISAR_ID_ISAR3_WIDTH           32u
#define S32_SCB_ID_ISAR_ID_ISAR3(x)              (((uint32_t)(((uint32_t)(x))<<S32_SCB_ID_ISAR_ID_ISAR3_SHIFT))&S32_SCB_ID_ISAR_ID_ISAR3_MASK)
#define S32_SCB_ID_ISAR_ID_ISAR4_MASK            0xFFFFFFFFu
#define S32_SCB_ID_ISAR_ID_ISAR4_SHIFT           0u
#define S32_SCB_ID_ISAR_ID_ISAR4_WIDTH           32u
#define S32_SCB_ID_ISAR_ID_ISAR4(x)              (((uint32_t)(((uint32_t)(x))<<S32_SCB_ID_ISAR_ID_ISAR4_SHIFT))&S32_SCB_ID_ISAR_ID_ISAR4_MASK)
/* CLIDR Bit Fields */
#define S32_SCB_CLIDR_CLIDR_MASK                 0xFFFFFFFFu
#define S32_SCB_CLIDR_CLIDR_SHIFT                0u
#define S32_SCB_CLIDR_CLIDR_WIDTH                32u
#define S32_SCB_CLIDR_CLIDR(x)                   (((uint32_t)(((uint32_t)(x))<<S32_SCB_CLIDR_CLIDR_SHIFT))&S32_SCB_CLIDR_CLIDR_MASK)
/* CTR Bit Fields */
#define S32_SCB_CTR_CTR_MASK                     0xFFFFFFFFu
#define S32_SCB_CTR_CTR_SHIFT                    0u
#define S32_SCB_CTR_CTR_WIDTH                    32u
#define S32_SCB_CTR_CTR(x)                       (((uint32_t)(((uint32_t)(x))<<S32_SCB_CTR_CTR_SHIFT))&S32_SCB_CTR_CTR_MASK)
/* CCSIDR Bit Fields */
#define S32_SCB_CCSIDR_CCSIDR_MASK               0xFFFFFFFFu
#define S32_SCB_CCSIDR_CCSIDR_SHIFT              0u
#define S32_SCB_CCSIDR_CCSIDR_WIDTH              32u
#define S32_SCB_CCSIDR_CCSIDR(x)                 (((uint32_t)(((uint32_t)(x))<<S32_SCB_CCSIDR_CCSIDR_SHIFT))&S32_SCB_CCSIDR_CCSIDR_MASK)
/* CSSELR Bit Fields */
#define S32_SCB_CSSELR_CSSELR_MASK               0xFFFFFFFFu
#define S32_SCB_CSSELR_CSSELR_SHIFT              0u
#define S32_SCB_CSSELR_CSSELR_WIDTH              32u
#define S32_SCB_CSSELR_CSSELR(x)                 (((uint32_t)(((uint32_t)(x))<<S32_SCB_CSSELR_CSSELR_SHIFT))&S32_SCB_CSSELR_CSSELR_MASK)
/* STIR Bit Fields */
#define S32_SCB_STIR_STIR_MASK                   0xFFFFFFFFu
#define S32_SCB_STIR_STIR_SHIFT                  0u
#define S32_SCB_STIR_STIR_WIDTH                  32u
#define S32_SCB_STIR_STIR(x)                     (((uint32_t)(((uint32_t)(x))<<S32_SCB_STIR_STIR_SHIFT))&S32_SCB_STIR_STIR_MASK)
/* FPCCR Bit Fields */
#define S32_SCB_FPCCR_FPCCR_MASK                 0xFFFFFFFFu
#define S32_SCB_FPCCR_FPCCR_SHIFT                0u
#define S32_SCB_FPCCR_FPCCR_WIDTH                32u
#define S32_SCB_FPCCR_FPCCR(x)                   (((uint32_t)(((uint32_t)(x))<<S32_SCB_FPCCR_FPCCR_SHIFT))&S32_SCB_FPCCR_FPCCR_MASK)
/* FPCAR Bit Fields */
#define S32_SCB_FPCAR_FPCAR_MASK                 0xFFFFFFFFu
#define S32_SCB_FPCAR_FPCAR_SHIFT                0u
#define S32_SCB_FPCAR_FPCAR_WIDTH                32u
#define S32_SCB_FPCAR_FPCAR(x)                   (((uint32_t)(((uint32_t)(x))<<S32_SCB_FPCAR_FPCAR_SHIFT))&S32_SCB_FPCAR_FPCAR_MASK)
/* FPDSCR Bit Fields */
#define S32_SCB_FPDSCR_FPDSCR_MASK               0xFFFFFFFFu
#define S32_SCB_FPDSCR_FPDSCR_SHIFT              0u
#define S32_SCB_FPDSCR_FPDSCR_WIDTH              32u
#define S32_SCB_FPDSCR_FPDSCR(x)                 (((uint32_t)(((uint32_t)(x))<<S32_SCB_FPDSCR_FPDSCR_SHIFT))&S32_SCB_FPDSCR_FPDSCR_MASK)
/* ICIALLU Bit Fields */
#define S32_SCB_ICIALLU_ICIALLU_MASK             0xFFFFFFFFu
#define S32_SCB_ICIALLU_ICIALLU_SHIFT            0u
#define S32_SCB_ICIALLU_ICIALLU_WIDTH            32u
#define S32_SCB_ICIALLU_ICIALLU(x)               (((uint32_t)(((uint32_t)(x))<<S32_SCB_ICIALLU_ICIALLU_SHIFT))&S32_SCB_ICIALLU_ICIALLU_MASK)
/* ICIMVAU Bit Fields */
#define S32_SCB_ICIMVAU_ICIMVAU_MASK             0xFFFFFFFFu
#define S32_SCB_ICIMVAU_ICIMVAU_SHIFT            0u
#define S32_SCB_ICIMVAU_ICIMVAU_WIDTH            32u
#define S32_SCB_ICIMVAU_ICIMVAU(x)               (((uint32_t)(((uint32_t)(x))<<S32_SCB_ICIMVAU_ICIMVAU_SHIFT))&S32_SCB_ICIMVAU_ICIMVAU_MASK)
/* DCIMVAC Bit Fields */
#define S32_SCB_DCIMVAC_DCIMVAC_MASK             0xFFFFFFFFu
#define S32_SCB_DCIMVAC_DCIMVAC_SHIFT            0u
#define S32_SCB_DCIMVAC_DCIMVAC_WIDTH            32u
#define S32_SCB_DCIMVAC_DCIMVAC(x)               (((uint32_t)(((uint32_t)(x))<<S32_SCB_DCIMVAC_DCIMVAC_SHIFT))&S32_SCB_DCIMVAC_DCIMVAC_MASK)
/* DCISW Bit Fields */
#define S32_SCB_DCISW_DCISW_MASK                 0xFFFFFFFFu
#define S32_SCB_DCISW_DCISW_SHIFT                0u
#define S32_SCB_DCISW_DCISW_WIDTH                32u
#define S32_SCB_DCISW_DCISW(x)                   (((uint32_t)(((uint32_t)(x))<<S32_SCB_DCISW_DCISW_SHIFT))&S32_SCB_DCISW_DCISW_MASK)
/* DCCMVAU Bit Fields */
#define S32_SCB_DCCMVAU_DCCMVAU_MASK             0xFFFFFFFFu
#define S32_SCB_DCCMVAU_DCCMVAU_SHIFT            0u
#define S32_SCB_DCCMVAU_DCCMVAU_WIDTH            32u
#define S32_SCB_DCCMVAU_DCCMVAU(x)               (((uint32_t)(((uint32_t)(x))<<S32_SCB_DCCMVAU_DCCMVAU_SHIFT))&S32_SCB_DCCMVAU_DCCMVAU_MASK)
/* DCCMVAC Bit Fields */
#define S32_SCB_DCCMVAC_DCCMVAC_MASK             0xFFFFFFFFu
#define S32_SCB_DCCMVAC_DCCMVAC_SHIFT            0u
#define S32_SCB_DCCMVAC_DCCMVAC_WIDTH            32u
#define S32_SCB_DCCMVAC_DCCMVAC(x)               (((uint32_t)(((uint32_t)(x))<<S32_SCB_DCCMVAC_DCCMVAC_SHIFT))&S32_SCB_DCCMVAC_DCCMVAC_MASK)
/* DCCSW Bit Fields */
#define S32_SCB_DCCSW_DCCSW_MASK                 0xFFFFFFFFu
#define S32_SCB_DCCSW_DCCSW_SHIFT                0u
#define S32_SCB_DCCSW_DCCSW_WIDTH                32u
#define S32_SCB_DCCSW_DCCSW(x)                   (((uint32_t)(((uint32_t)(x))<<S32_SCB_DCCSW_DCCSW_SHIFT))&S32_SCB_DCCSW_DCCSW_MASK)
/* DCCIMVAC Bit Fields */
#define S32_SCB_DCCIMVAC_DCCIMVAC_MASK           0xFFFFFFFFu
#define S32_SCB_DCCIMVAC_DCCIMVAC_SHIFT          0u
#define S32_SCB_DCCIMVAC_DCCIMVAC_WIDTH          32u
#define S32_SCB_DCCIMVAC_DCCIMVAC(x)             (((uint32_t)(((uint32_t)(x))<<S32_SCB_DCCIMVAC_DCCIMVAC_SHIFT))&S32_SCB_DCCIMVAC_DCCIMVAC_MASK)
/* DCCISW Bit Fields */
#define S32_SCB_DCCISW_DCCISW_MASK               0xFFFFFFFFu
#define S32_SCB_DCCISW_DCCISW_SHIFT              0u
#define S32_SCB_DCCISW_DCCISW_WIDTH              32u
#define S32_SCB_DCCISW_DCCISW(x)                 (((uint32_t)(((uint32_t)(x))<<S32_SCB_DCCISW_DCCISW_SHIFT))&S32_SCB_DCCISW_DCCISW_MASK)
/* BPIALL Bit Fields */
#define S32_SCB_BPIALL_BPIALL_MASK               0xFFFFFFFFu
#define S32_SCB_BPIALL_BPIALL_SHIFT              0u
#define S32_SCB_BPIALL_BPIALL_WIDTH              32u
#define S32_SCB_BPIALL_BPIALL(x)                 (((uint32_t)(((uint32_t)(x))<<S32_SCB_BPIALL_BPIALL_SHIFT))&S32_SCB_BPIALL_BPIALL_MASK)
/* ITCMCR Bit Fields */
#define S32_SCB_ITCMCR_ITCMCR_MASK               0xFFFFFFFFu
#define S32_SCB_ITCMCR_ITCMCR_SHIFT              0u
#define S32_SCB_ITCMCR_ITCMCR_WIDTH              32u
#define S32_SCB_ITCMCR_ITCMCR(x)                 (((uint32_t)(((uint32_t)(x))<<S32_SCB_ITCMCR_ITCMCR_SHIFT))&S32_SCB_ITCMCR_ITCMCR_MASK)
/* DTCMCR Bit Fields */
#define S32_SCB_DTCMCR_DTCMCR_MASK               0xFFFFFFFFu
#define S32_SCB_DTCMCR_DTCMCR_SHIFT              0u
#define S32_SCB_DTCMCR_DTCMCR_WIDTH              32u
#define S32_SCB_DTCMCR_DTCMCR(x)                 (((uint32_t)(((uint32_t)(x))<<S32_SCB_DTCMCR_DTCMCR_SHIFT))&S32_SCB_DTCMCR_DTCMCR_MASK)
/* AHBPCR Bit Fields */
#define S32_SCB_AHBPCR_AHBPCR_MASK               0xFFFFFFFFu
#define S32_SCB_AHBPCR_AHBPCR_SHIFT              0u
#define S32_SCB_AHBPCR_AHBPCR_WIDTH              32u
#define S32_SCB_AHBPCR_AHBPCR(x)                 (((uint32_t)(((uint32_t)(x))<<S32_SCB_AHBPCR_AHBPCR_SHIFT))&S32_SCB_AHBPCR_AHBPCR_MASK)
/* CACR Bit Fields */
#define S32_SCB_CACR_CACR_MASK                   0xFFFFFFFFu
#define S32_SCB_CACR_CACR_SHIFT                  0u
#define S32_SCB_CACR_CACR_WIDTH                  32u
#define S32_SCB_CACR_CACR(x)                     (((uint32_t)(((uint32_t)(x))<<S32_SCB_CACR_CACR_SHIFT))&S32_SCB_CACR_CACR_MASK)
/* AHBSCR Bit Fields */
#define S32_SCB_AHBSCR_AHBSCR_MASK               0xFFFFFFFFu
#define S32_SCB_AHBSCR_AHBSCR_SHIFT              0u
#define S32_SCB_AHBSCR_AHBSCR_WIDTH              32u
#define S32_SCB_AHBSCR_AHBSCR(x)                 (((uint32_t)(((uint32_t)(x))<<S32_SCB_AHBSCR_AHBSCR_SHIFT))&S32_SCB_AHBSCR_AHBSCR_MASK)
/* ABFSR Bit Fields */
#define S32_SCB_ABFSR_ABFSR_MASK                 0xFFFFFFFFu
#define S32_SCB_ABFSR_ABFSR_SHIFT                0u
#define S32_SCB_ABFSR_ABFSR_WIDTH                32u
#define S32_SCB_ABFSR_ABFSR(x)                   (((uint32_t)(((uint32_t)(x))<<S32_SCB_ABFSR_ABFSR_SHIFT))&S32_SCB_ABFSR_ABFSR_MASK)
/* IEBR0 Bit Fields */
#define S32_SCB_IEBR0_IEBR0_MASK                 0xFFFFFFFFu
#define S32_SCB_IEBR0_IEBR0_SHIFT                0u
#define S32_SCB_IEBR0_IEBR0_WIDTH                32u
#define S32_SCB_IEBR0_IEBR0(x)                   (((uint32_t)(((uint32_t)(x))<<S32_SCB_IEBR0_IEBR0_SHIFT))&S32_SCB_IEBR0_IEBR0_MASK)
/* IEBR1h Bit Fields */
#define S32_SCB_IEBR1h_IEBR1h_MASK               0xFFFFFFFFu
#define S32_SCB_IEBR1h_IEBR1h_SHIFT              0u
#define S32_SCB_IEBR1h_IEBR1h_WIDTH              32u
#define S32_SCB_IEBR1h_IEBR1h(x)                 (((uint32_t)(((uint32_t)(x))<<S32_SCB_IEBR1h_IEBR1h_SHIFT))&S32_SCB_IEBR1h_IEBR1h_MASK)
/* DEBR0h Bit Fields */
#define S32_SCB_DEBR0h_DEBR0h_MASK               0xFFFFFFFFu
#define S32_SCB_DEBR0h_DEBR0h_SHIFT              0u
#define S32_SCB_DEBR0h_DEBR0h_WIDTH              32u
#define S32_SCB_DEBR0h_DEBR0h(x)                 (((uint32_t)(((uint32_t)(x))<<S32_SCB_DEBR0h_DEBR0h_SHIFT))&S32_SCB_DEBR0h_DEBR0h_MASK)
/* DEBR1h Bit Fields */
#define S32_SCB_DEBR1h_DEBR1h_MASK               0xFFFFFFFFu
#define S32_SCB_DEBR1h_DEBR1h_SHIFT              0u
#define S32_SCB_DEBR1h_DEBR1h_WIDTH              32u
#define S32_SCB_DEBR1h_DEBR1h(x)                 (((uint32_t)(((uint32_t)(x))<<S32_SCB_DEBR1h_DEBR1h_SHIFT))&S32_SCB_DEBR1h_DEBR1h_MASK)
/* PID Bit Fields */
#define S32_SCB_PID_PID0_MASK                    0xFFFFFFFFu
#define S32_SCB_PID_PID0_SHIFT                   0u
#define S32_SCB_PID_PID0_WIDTH                   32u
#define S32_SCB_PID_PID0(x)                      (((uint32_t)(((uint32_t)(x))<<S32_SCB_PID_PID0_SHIFT))&S32_SCB_PID_PID0_MASK)
#define S32_SCB_PID_PID1_MASK                    0xFFFFFFFFu
#define S32_SCB_PID_PID1_SHIFT                   0u
#define S32_SCB_PID_PID1_WIDTH                   32u
#define S32_SCB_PID_PID1(x)                      (((uint32_t)(((uint32_t)(x))<<S32_SCB_PID_PID1_SHIFT))&S32_SCB_PID_PID1_MASK)
#define S32_SCB_PID_PID2_MASK                    0xFFFFFFFFu
#define S32_SCB_PID_PID2_SHIFT                   0u
#define S32_SCB_PID_PID2_WIDTH                   32u
#define S32_SCB_PID_PID2(x)                      (((uint32_t)(((uint32_t)(x))<<S32_SCB_PID_PID2_SHIFT))&S32_SCB_PID_PID2_MASK)
#define S32_SCB_PID_PID3_MASK                    0xFFFFFFFFu
#define S32_SCB_PID_PID3_SHIFT                   0u
#define S32_SCB_PID_PID3_WIDTH                   32u
#define S32_SCB_PID_PID3(x)                      (((uint32_t)(((uint32_t)(x))<<S32_SCB_PID_PID3_SHIFT))&S32_SCB_PID_PID3_MASK)
#define S32_SCB_PID_PID4_MASK                    0xFFFFFFFFu
#define S32_SCB_PID_PID4_SHIFT                   0u
#define S32_SCB_PID_PID4_WIDTH                   32u
#define S32_SCB_PID_PID4(x)                      (((uint32_t)(((uint32_t)(x))<<S32_SCB_PID_PID4_SHIFT))&S32_SCB_PID_PID4_MASK)
#define S32_SCB_PID_PID5_MASK                    0xFFFFFFFFu
#define S32_SCB_PID_PID5_SHIFT                   0u
#define S32_SCB_PID_PID5_WIDTH                   32u
#define S32_SCB_PID_PID5(x)                      (((uint32_t)(((uint32_t)(x))<<S32_SCB_PID_PID5_SHIFT))&S32_SCB_PID_PID5_MASK)
#define S32_SCB_PID_PID6_MASK                    0xFFFFFFFFu
#define S32_SCB_PID_PID6_SHIFT                   0u
#define S32_SCB_PID_PID6_WIDTH                   32u
#define S32_SCB_PID_PID6(x)                      (((uint32_t)(((uint32_t)(x))<<S32_SCB_PID_PID6_SHIFT))&S32_SCB_PID_PID6_MASK)
#define S32_SCB_PID_PID7_MASK                    0xFFFFFFFFu
#define S32_SCB_PID_PID7_SHIFT                   0u
#define S32_SCB_PID_PID7_WIDTH                   32u
#define S32_SCB_PID_PID7(x)                      (((uint32_t)(((uint32_t)(x))<<S32_SCB_PID_PID7_SHIFT))&S32_SCB_PID_PID7_MASK)
/* CID Bit Fields */
#define S32_SCB_CID_CID0_MASK                    0xFFFFFFFFu
#define S32_SCB_CID_CID0_SHIFT                   0u
#define S32_SCB_CID_CID0_WIDTH                   32u
#define S32_SCB_CID_CID0(x)                      (((uint32_t)(((uint32_t)(x))<<S32_SCB_CID_CID0_SHIFT))&S32_SCB_CID_CID0_MASK)
#define S32_SCB_CID_CID1_MASK                    0xFFFFFFFFu
#define S32_SCB_CID_CID1_SHIFT                   0u
#define S32_SCB_CID_CID1_WIDTH                   32u
#define S32_SCB_CID_CID1(x)                      (((uint32_t)(((uint32_t)(x))<<S32_SCB_CID_CID1_SHIFT))&S32_SCB_CID_CID1_MASK)
#define S32_SCB_CID_CID2_MASK                    0xFFFFFFFFu
#define S32_SCB_CID_CID2_SHIFT                   0u
#define S32_SCB_CID_CID2_WIDTH                   32u
#define S32_SCB_CID_CID2(x)                      (((uint32_t)(((uint32_t)(x))<<S32_SCB_CID_CID2_SHIFT))&S32_SCB_CID_CID2_MASK)
#define S32_SCB_CID_CID3_MASK                    0xFFFFFFFFu
#define S32_SCB_CID_CID3_SHIFT                   0u
#define S32_SCB_CID_CID3_WIDTH                   32u
#define S32_SCB_CID_CID3(x)                      (((uint32_t)(((uint32_t)(x))<<S32_SCB_CID_CID3_SHIFT))&S32_SCB_CID_CID3_MASK)

/*!
 * @}
 */ /* end of group S32_SCB_Register_Masks */

/*!
 * @}
 */ /* end of group S32_SCB_Peripheral_Access_Layer */

/* ----------------------------------------------------------------------------
   -- S32_SysTick Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup S32_SysTick_Peripheral_Access_Layer S32_SysTick Peripheral Access Layer
 * @{
 */


/** S32_SysTick - Size of Registers Arrays */

/** S32_SysTick - Register Layout Typedef */
typedef struct {
  __IO uint32_t CSR;                               /**< SysTick Control and Status Register, offset: 0x0 */
  __IO uint32_t RVR;                               /**< SysTick Reload Value Register, offset: 0x4 */
  __IO uint32_t CVR;                               /**< SysTick Current Value Register, offset: 0x8 */
  __I  uint32_t CALIB;                             /**< SysTick Calibration Value Register, offset: 0xC */
} S32_SysTick_Type, *S32_SysTick_MemMapPtr;

 /** Number of instances of the S32_SysTick module. */
#define S32_SysTick_INSTANCE_COUNT               (1u)


/* S32_SysTick - Peripheral instance base addresses */
/** Peripheral S32_SysTick base address */
#define S32_SysTick_BASE                         (0xE000E010u)
/** Peripheral S32_SysTick base pointer */
#define S32_SysTick                              ((S32_SysTick_Type *)S32_SysTick_BASE)
/** Array initializer of S32_SysTick peripheral base addresses */
#define S32_SysTick_BASE_ADDRS                   { S32_SysTick_BASE }
/** Array initializer of S32_SysTick peripheral base pointers */
#define S32_SysTick_BASE_PTRS                    { S32_SysTick }
 /** Number of interrupt vector arrays for the S32_SysTick module. */
#define S32_SysTick_IRQS_ARR_COUNT               (1u)
 /** Number of interrupt channels for the S32_SysTick module. */
#define S32_SysTick_IRQS_CH_COUNT                (1u)
/** Interrupt vectors for the S32_SysTick peripheral type */
#define S32_SysTick_IRQS                         { SysTick_IRQn }

/* ----------------------------------------------------------------------------
   -- S32_SysTick Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup S32_SysTick_Register_Masks S32_SysTick Register Masks
 * @{
 */

/* CSR Bit Fields */
#define S32_SysTick_CSR_ENABLE_MASK              0x1u
#define S32_SysTick_CSR_ENABLE_SHIFT             0u
#define S32_SysTick_CSR_ENABLE_WIDTH             1u
#define S32_SysTick_CSR_ENABLE(x)                (((uint32_t)(((uint32_t)(x))<<S32_SysTick_CSR_ENABLE_SHIFT))&S32_SysTick_CSR_ENABLE_MASK)
#define S32_SysTick_CSR_TICKINT_MASK             0x2u
#define S32_SysTick_CSR_TICKINT_SHIFT            1u
#define S32_SysTick_CSR_TICKINT_WIDTH            1u
#define S32_SysTick_CSR_TICKINT(x)               (((uint32_t)(((uint32_t)(x))<<S32_SysTick_CSR_TICKINT_SHIFT))&S32_SysTick_CSR_TICKINT_MASK)
#define S32_SysTick_CSR_CLKSOURCE_MASK           0x4u
#define S32_SysTick_CSR_CLKSOURCE_SHIFT          2u
#define S32_SysTick_CSR_CLKSOURCE_WIDTH          1u
#define S32_SysTick_CSR_CLKSOURCE(x)             (((uint32_t)(((uint32_t)(x))<<S32_SysTick_CSR_CLKSOURCE_SHIFT))&S32_SysTick_CSR_CLKSOURCE_MASK)
#define S32_SysTick_CSR_COUNTFLAG_MASK           0x10000u
#define S32_SysTick_CSR_COUNTFLAG_SHIFT          16u
#define S32_SysTick_CSR_COUNTFLAG_WIDTH          1u
#define S32_SysTick_CSR_COUNTFLAG(x)             (((uint32_t)(((uint32_t)(x))<<S32_SysTick_CSR_COUNTFLAG_SHIFT))&S32_SysTick_CSR_COUNTFLAG_MASK)
/* RVR Bit Fields */
#define S32_SysTick_RVR_RELOAD_MASK              0xFFFFFFu
#define S32_SysTick_RVR_RELOAD_SHIFT             0u
#define S32_SysTick_RVR_RELOAD_WIDTH             24u
#define S32_SysTick_RVR_RELOAD(x)                (((uint32_t)(((uint32_t)(x))<<S32_SysTick_RVR_RELOAD_SHIFT))&S32_SysTick_RVR_RELOAD_MASK)
/* CVR Bit Fields */
#define S32_SysTick_CVR_CURRENT_MASK             0xFFFFFFu
#define S32_SysTick_CVR_CURRENT_SHIFT            0u
#define S32_SysTick_CVR_CURRENT_WIDTH            24u
#define S32_SysTick_CVR_CURRENT(x)               (((uint32_t)(((uint32_t)(x))<<S32_SysTick_CVR_CURRENT_SHIFT))&S32_SysTick_CVR_CURRENT_MASK)
/* CALIB Bit Fields */
#define S32_SysTick_CALIB_TENMS_MASK             0xFFFFFFu
#define S32_SysTick_CALIB_TENMS_SHIFT            0u
#define S32_SysTick_CALIB_TENMS_WIDTH            24u
#define S32_SysTick_CALIB_TENMS(x)               (((uint32_t)(((uint32_t)(x))<<S32_SysTick_CALIB_TENMS_SHIFT))&S32_SysTick_CALIB_TENMS_MASK)
#define S32_SysTick_CALIB_SKEW_MASK              0x40000000u
#define S32_SysTick_CALIB_SKEW_SHIFT             30u
#define S32_SysTick_CALIB_SKEW_WIDTH             1u
#define S32_SysTick_CALIB_SKEW(x)                (((uint32_t)(((uint32_t)(x))<<S32_SysTick_CALIB_SKEW_SHIFT))&S32_SysTick_CALIB_SKEW_MASK)
#define S32_SysTick_CALIB_NOREF_MASK             0x80000000u
#define S32_SysTick_CALIB_NOREF_SHIFT            31u
#define S32_SysTick_CALIB_NOREF_WIDTH            1u
#define S32_SysTick_CALIB_NOREF(x)               (((uint32_t)(((uint32_t)(x))<<S32_SysTick_CALIB_NOREF_SHIFT))&S32_SysTick_CALIB_NOREF_MASK)

/*!
 * @}
 */ /* end of group S32_SysTick_Register_Masks */


/*!
 * @}
 */ /* end of group S32_SysTick_Peripheral_Access_Layer */

/* ----------------------------------------------------------------------------
   -- A53_GPR Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup A53_GPR_Peripheral_Access_Layer A53_GPR Peripheral Access Layer
 * @{
 */

/** A53_GPR - Register Layout Typedef */
typedef struct {
  __IO uint32_t GPR00;                             /**< GPR00, offset: 0x0 */
  __IO uint32_t GPR01;                             /**< GPR01, offset: 0x4 */
  uint8_t RESERVED_0[16];
  __IO uint32_t GPR06;                             /**< GPR06, offset: 0x18 */
  __IO uint32_t GPR07;                             /**< GPR07, offset: 0x1C */
  __I  uint32_t GPR08;                             /**< GPR08, offset: 0x20 */
  __IO uint32_t GPR09;                             /**< GPR09, offset: 0x24 */
  __I  uint32_t GPR10;                             /**< GPR10, offset: 0x28 */
  __I  uint32_t GPR11;                             /**< GPR11, offset: 0x2C */
  __I  uint32_t GPR12;                             /**< GPR12, offset: 0x30 */
  __I  uint32_t GPR13;                             /**< GPR13, offset: 0x34 */
  __I  uint32_t GPR14;                             /**< GPR14, offset: 0x38 */
  __I  uint32_t GPR15;                             /**< GPR15, offset: 0x3C */
  __I  uint32_t GPR16;                             /**< GPR16, offset: 0x40 */
  __I  uint32_t GPR17;                             /**< GPR17, offset: 0x44 */
  __I  uint32_t GPR18;                             /**< GPR18, offset: 0x48 */
  __I  uint32_t GPR19;                             /**< GPR19, offset: 0x4C */
  __I  uint32_t GPR20;                             /**< GPR20, offset: 0x50 */
  __I  uint32_t GPR21;                             /**< GPR21, offset: 0x54 */
} A53_GPR_Type, *A53_GPR_MemMapPtr;

/** Number of instances of the A53_GPR module. */
#define A53_GPR_INSTANCE_COUNT                   (1u)

/* A53_GPR - Peripheral instance base addresses */
/** Peripheral A53_GPR base address */
#define A53_GPR_BASE                             (0x4007C400u)
/** Peripheral A53_GPR base pointer */
#define A53_GPR                                  ((A53_GPR_Type *)A53_GPR_BASE)
/** Array initializer of A53_GPR peripheral base addresses */
#define A53_GPR_BASE_ADDRS                       { A53_GPR_BASE }
/** Array initializer of A53_GPR peripheral base pointers */
#define A53_GPR_BASE_PTRS                        { A53_GPR }

/* ----------------------------------------------------------------------------
   -- A53_GPR Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup A53_GPR_Register_Masks A53_GPR Register Masks
 * @{
 */

/*! @name GPR00 - GPR00 */
/*! @{ */
#define A53_GPR_GPR00_CA53_0_CORE0_AA64nAA32_MASK (0x1U)
#define A53_GPR_GPR00_CA53_0_CORE0_AA64nAA32_SHIFT (0U)
#define A53_GPR_GPR00_CA53_0_CORE0_AA64nAA32_WIDTH (1U)
#define A53_GPR_GPR00_CA53_0_CORE0_AA64nAA32(x)  (((uint32_t)(((uint32_t)(x)) << A53_GPR_GPR00_CA53_0_CORE0_AA64nAA32_SHIFT)) & A53_GPR_GPR00_CA53_0_CORE0_AA64nAA32_MASK)
#define A53_GPR_GPR00_CA53_0_CORE1_AA64nAA32_MASK (0x2U)
#define A53_GPR_GPR00_CA53_0_CORE1_AA64nAA32_SHIFT (1U)
#define A53_GPR_GPR00_CA53_0_CORE1_AA64nAA32_WIDTH (1U)
#define A53_GPR_GPR00_CA53_0_CORE1_AA64nAA32(x)  (((uint32_t)(((uint32_t)(x)) << A53_GPR_GPR00_CA53_0_CORE1_AA64nAA32_SHIFT)) & A53_GPR_GPR00_CA53_0_CORE1_AA64nAA32_MASK)
#define A53_GPR_GPR00_CA53_1_CORE0_AA64nAA32_MASK (0x4U)
#define A53_GPR_GPR00_CA53_1_CORE0_AA64nAA32_SHIFT (2U)
#define A53_GPR_GPR00_CA53_1_CORE0_AA64nAA32_WIDTH (1U)
#define A53_GPR_GPR00_CA53_1_CORE0_AA64nAA32(x)  (((uint32_t)(((uint32_t)(x)) << A53_GPR_GPR00_CA53_1_CORE0_AA64nAA32_SHIFT)) & A53_GPR_GPR00_CA53_1_CORE0_AA64nAA32_MASK)
#define A53_GPR_GPR00_CA53_1_CORE1_AA64nAA32_MASK (0x8U)
#define A53_GPR_GPR00_CA53_1_CORE1_AA64nAA32_SHIFT (3U)
#define A53_GPR_GPR00_CA53_1_CORE1_AA64nAA32_WIDTH (1U)
#define A53_GPR_GPR00_CA53_1_CORE1_AA64nAA32(x)  (((uint32_t)(((uint32_t)(x)) << A53_GPR_GPR00_CA53_1_CORE1_AA64nAA32_SHIFT)) & A53_GPR_GPR00_CA53_1_CORE1_AA64nAA32_MASK)
#define A53_GPR_GPR00_CA53_0_BROADCASTCACHEMAINT_MASK (0x10U)
#define A53_GPR_GPR00_CA53_0_BROADCASTCACHEMAINT_SHIFT (4U)
#define A53_GPR_GPR00_CA53_0_BROADCASTCACHEMAINT_WIDTH (1U)
#define A53_GPR_GPR00_CA53_0_BROADCASTCACHEMAINT(x) (((uint32_t)(((uint32_t)(x)) << A53_GPR_GPR00_CA53_0_BROADCASTCACHEMAINT_SHIFT)) & A53_GPR_GPR00_CA53_0_BROADCASTCACHEMAINT_MASK)
#define A53_GPR_GPR00_CA53_0_BROADCASTINNER_MASK (0x20U)
#define A53_GPR_GPR00_CA53_0_BROADCASTINNER_SHIFT (5U)
#define A53_GPR_GPR00_CA53_0_BROADCASTINNER_WIDTH (1U)
#define A53_GPR_GPR00_CA53_0_BROADCASTINNER(x)   (((uint32_t)(((uint32_t)(x)) << A53_GPR_GPR00_CA53_0_BROADCASTINNER_SHIFT)) & A53_GPR_GPR00_CA53_0_BROADCASTINNER_MASK)
#define A53_GPR_GPR00_CA53_0_BROADCASTOUTER_MASK (0x40U)
#define A53_GPR_GPR00_CA53_0_BROADCASTOUTER_SHIFT (6U)
#define A53_GPR_GPR00_CA53_0_BROADCASTOUTER_WIDTH (1U)
#define A53_GPR_GPR00_CA53_0_BROADCASTOUTER(x)   (((uint32_t)(((uint32_t)(x)) << A53_GPR_GPR00_CA53_0_BROADCASTOUTER_SHIFT)) & A53_GPR_GPR00_CA53_0_BROADCASTOUTER_MASK)
#define A53_GPR_GPR00_CA53_1_BROADCASTCACHEMAINT_MASK (0x80U)
#define A53_GPR_GPR00_CA53_1_BROADCASTCACHEMAINT_SHIFT (7U)
#define A53_GPR_GPR00_CA53_1_BROADCASTCACHEMAINT_WIDTH (1U)
#define A53_GPR_GPR00_CA53_1_BROADCASTCACHEMAINT(x) (((uint32_t)(((uint32_t)(x)) << A53_GPR_GPR00_CA53_1_BROADCASTCACHEMAINT_SHIFT)) & A53_GPR_GPR00_CA53_1_BROADCASTCACHEMAINT_MASK)
#define A53_GPR_GPR00_CA53_1_BROADCASTINNER_MASK (0x100U)
#define A53_GPR_GPR00_CA53_1_BROADCASTINNER_SHIFT (8U)
#define A53_GPR_GPR00_CA53_1_BROADCASTINNER_WIDTH (1U)
#define A53_GPR_GPR00_CA53_1_BROADCASTINNER(x)   (((uint32_t)(((uint32_t)(x)) << A53_GPR_GPR00_CA53_1_BROADCASTINNER_SHIFT)) & A53_GPR_GPR00_CA53_1_BROADCASTINNER_MASK)
#define A53_GPR_GPR00_CA53_1_BROADCASTOUTER_MASK (0x200U)
#define A53_GPR_GPR00_CA53_1_BROADCASTOUTER_SHIFT (9U)
#define A53_GPR_GPR00_CA53_1_BROADCASTOUTER_WIDTH (1U)
#define A53_GPR_GPR00_CA53_1_BROADCASTOUTER(x)   (((uint32_t)(((uint32_t)(x)) << A53_GPR_GPR00_CA53_1_BROADCASTOUTER_SHIFT)) & A53_GPR_GPR00_CA53_1_BROADCASTOUTER_MASK)
#define A53_GPR_GPR00_CA53_0_CORE0_CFGEND_MASK   (0x400U)
#define A53_GPR_GPR00_CA53_0_CORE0_CFGEND_SHIFT  (10U)
#define A53_GPR_GPR00_CA53_0_CORE0_CFGEND_WIDTH  (1U)
#define A53_GPR_GPR00_CA53_0_CORE0_CFGEND(x)     (((uint32_t)(((uint32_t)(x)) << A53_GPR_GPR00_CA53_0_CORE0_CFGEND_SHIFT)) & A53_GPR_GPR00_CA53_0_CORE0_CFGEND_MASK)
#define A53_GPR_GPR00_CA53_0_CORE1_CFGEND_MASK   (0x800U)
#define A53_GPR_GPR00_CA53_0_CORE1_CFGEND_SHIFT  (11U)
#define A53_GPR_GPR00_CA53_0_CORE1_CFGEND_WIDTH  (1U)
#define A53_GPR_GPR00_CA53_0_CORE1_CFGEND(x)     (((uint32_t)(((uint32_t)(x)) << A53_GPR_GPR00_CA53_0_CORE1_CFGEND_SHIFT)) & A53_GPR_GPR00_CA53_0_CORE1_CFGEND_MASK)
#define A53_GPR_GPR00_CA53_0_CORE0_CFGTE_MASK    (0x1000U)
#define A53_GPR_GPR00_CA53_0_CORE0_CFGTE_SHIFT   (12U)
#define A53_GPR_GPR00_CA53_0_CORE0_CFGTE_WIDTH   (1U)
#define A53_GPR_GPR00_CA53_0_CORE0_CFGTE(x)      (((uint32_t)(((uint32_t)(x)) << A53_GPR_GPR00_CA53_0_CORE0_CFGTE_SHIFT)) & A53_GPR_GPR00_CA53_0_CORE0_CFGTE_MASK)
#define A53_GPR_GPR00_CA53_0_CORE1_CFGTE_MASK    (0x2000U)
#define A53_GPR_GPR00_CA53_0_CORE1_CFGTE_SHIFT   (13U)
#define A53_GPR_GPR00_CA53_0_CORE1_CFGTE_WIDTH   (1U)
#define A53_GPR_GPR00_CA53_0_CORE1_CFGTE(x)      (((uint32_t)(((uint32_t)(x)) << A53_GPR_GPR00_CA53_0_CORE1_CFGTE_SHIFT)) & A53_GPR_GPR00_CA53_0_CORE1_CFGTE_MASK)
#define A53_GPR_GPR00_CA53_1_CORE0_CFGEND_MASK   (0x4000U)
#define A53_GPR_GPR00_CA53_1_CORE0_CFGEND_SHIFT  (14U)
#define A53_GPR_GPR00_CA53_1_CORE0_CFGEND_WIDTH  (1U)
#define A53_GPR_GPR00_CA53_1_CORE0_CFGEND(x)     (((uint32_t)(((uint32_t)(x)) << A53_GPR_GPR00_CA53_1_CORE0_CFGEND_SHIFT)) & A53_GPR_GPR00_CA53_1_CORE0_CFGEND_MASK)
#define A53_GPR_GPR00_CA53_1_CORE1_CFGEND_MASK   (0x8000U)
#define A53_GPR_GPR00_CA53_1_CORE1_CFGEND_SHIFT  (15U)
#define A53_GPR_GPR00_CA53_1_CORE1_CFGEND_WIDTH  (1U)
#define A53_GPR_GPR00_CA53_1_CORE1_CFGEND(x)     (((uint32_t)(((uint32_t)(x)) << A53_GPR_GPR00_CA53_1_CORE1_CFGEND_SHIFT)) & A53_GPR_GPR00_CA53_1_CORE1_CFGEND_MASK)
#define A53_GPR_GPR00_CA53_1_CORE0_CFGTE_MASK    (0x10000U)
#define A53_GPR_GPR00_CA53_1_CORE0_CFGTE_SHIFT   (16U)
#define A53_GPR_GPR00_CA53_1_CORE0_CFGTE_WIDTH   (1U)
#define A53_GPR_GPR00_CA53_1_CORE0_CFGTE(x)      (((uint32_t)(((uint32_t)(x)) << A53_GPR_GPR00_CA53_1_CORE0_CFGTE_SHIFT)) & A53_GPR_GPR00_CA53_1_CORE0_CFGTE_MASK)
#define A53_GPR_GPR00_CA53_1_CORE1_CFGTE_MASK    (0x20000U)
#define A53_GPR_GPR00_CA53_1_CORE1_CFGTE_SHIFT   (17U)
#define A53_GPR_GPR00_CA53_1_CORE1_CFGTE_WIDTH   (1U)
#define A53_GPR_GPR00_CA53_1_CORE1_CFGTE(x)      (((uint32_t)(((uint32_t)(x)) << A53_GPR_GPR00_CA53_1_CORE1_CFGTE_SHIFT)) & A53_GPR_GPR00_CA53_1_CORE1_CFGTE_MASK)
#define A53_GPR_GPR00_CA53_0_CORE0_VINITHI_MASK  (0x40000U)
#define A53_GPR_GPR00_CA53_0_CORE0_VINITHI_SHIFT (18U)
#define A53_GPR_GPR00_CA53_0_CORE0_VINITHI_WIDTH (1U)
#define A53_GPR_GPR00_CA53_0_CORE0_VINITHI(x)    (((uint32_t)(((uint32_t)(x)) << A53_GPR_GPR00_CA53_0_CORE0_VINITHI_SHIFT)) & A53_GPR_GPR00_CA53_0_CORE0_VINITHI_MASK)
#define A53_GPR_GPR00_CA53_0_CORE1_VINITHI_MASK  (0x80000U)
#define A53_GPR_GPR00_CA53_0_CORE1_VINITHI_SHIFT (19U)
#define A53_GPR_GPR00_CA53_0_CORE1_VINITHI_WIDTH (1U)
#define A53_GPR_GPR00_CA53_0_CORE1_VINITHI(x)    (((uint32_t)(((uint32_t)(x)) << A53_GPR_GPR00_CA53_0_CORE1_VINITHI_SHIFT)) & A53_GPR_GPR00_CA53_0_CORE1_VINITHI_MASK)
#define A53_GPR_GPR00_CA53_1_CORE0_VINITHI_MASK  (0x100000U)
#define A53_GPR_GPR00_CA53_1_CORE0_VINITHI_SHIFT (20U)
#define A53_GPR_GPR00_CA53_1_CORE0_VINITHI_WIDTH (1U)
#define A53_GPR_GPR00_CA53_1_CORE0_VINITHI(x)    (((uint32_t)(((uint32_t)(x)) << A53_GPR_GPR00_CA53_1_CORE0_VINITHI_SHIFT)) & A53_GPR_GPR00_CA53_1_CORE0_VINITHI_MASK)
#define A53_GPR_GPR00_CA53_1_CORE1_VINITHI_MASK  (0x200000U)
#define A53_GPR_GPR00_CA53_1_CORE1_VINITHI_SHIFT (21U)
#define A53_GPR_GPR00_CA53_1_CORE1_VINITHI_WIDTH (1U)
#define A53_GPR_GPR00_CA53_1_CORE1_VINITHI(x)    (((uint32_t)(((uint32_t)(x)) << A53_GPR_GPR00_CA53_1_CORE1_VINITHI_SHIFT)) & A53_GPR_GPR00_CA53_1_CORE1_VINITHI_MASK)
#define A53_GPR_GPR00_CA53_COUNTER_CLK_DIV_VAL_MASK (0x7000000U)
#define A53_GPR_GPR00_CA53_COUNTER_CLK_DIV_VAL_SHIFT (24U)
#define A53_GPR_GPR00_CA53_COUNTER_CLK_DIV_VAL_WIDTH (3U)
#define A53_GPR_GPR00_CA53_COUNTER_CLK_DIV_VAL(x) (((uint32_t)(((uint32_t)(x)) << A53_GPR_GPR00_CA53_COUNTER_CLK_DIV_VAL_SHIFT)) & A53_GPR_GPR00_CA53_COUNTER_CLK_DIV_VAL_MASK)
/*! @} */

/*! @name GPR01 - GPR01 */
/*! @{ */
#define A53_GPR_GPR01_WFE_EVT_CA53_CLUSTER0_MASK (0x1U)
#define A53_GPR_GPR01_WFE_EVT_CA53_CLUSTER0_SHIFT (0U)
#define A53_GPR_GPR01_WFE_EVT_CA53_CLUSTER0_WIDTH (1U)
#define A53_GPR_GPR01_WFE_EVT_CA53_CLUSTER0(x)   (((uint32_t)(((uint32_t)(x)) << A53_GPR_GPR01_WFE_EVT_CA53_CLUSTER0_SHIFT)) & A53_GPR_GPR01_WFE_EVT_CA53_CLUSTER0_MASK)
#define A53_GPR_GPR01_WFE_EVT_CA53_CLUSTER1_MASK (0x2U)
#define A53_GPR_GPR01_WFE_EVT_CA53_CLUSTER1_SHIFT (1U)
#define A53_GPR_GPR01_WFE_EVT_CA53_CLUSTER1_WIDTH (1U)
#define A53_GPR_GPR01_WFE_EVT_CA53_CLUSTER1(x)   (((uint32_t)(((uint32_t)(x)) << A53_GPR_GPR01_WFE_EVT_CA53_CLUSTER1_SHIFT)) & A53_GPR_GPR01_WFE_EVT_CA53_CLUSTER1_MASK)
#define A53_GPR_GPR01_CLUSTER0_CG_EN_MASK        (0x100U)
#define A53_GPR_GPR01_CLUSTER0_CG_EN_SHIFT       (8U)
#define A53_GPR_GPR01_CLUSTER0_CG_EN_WIDTH       (1U)
#define A53_GPR_GPR01_CLUSTER0_CG_EN(x)          (((uint32_t)(((uint32_t)(x)) << A53_GPR_GPR01_CLUSTER0_CG_EN_SHIFT)) & A53_GPR_GPR01_CLUSTER0_CG_EN_MASK)
#define A53_GPR_GPR01_CLUSTER1_CG_EN_MASK        (0x200U)
#define A53_GPR_GPR01_CLUSTER1_CG_EN_SHIFT       (9U)
#define A53_GPR_GPR01_CLUSTER1_CG_EN_WIDTH       (1U)
#define A53_GPR_GPR01_CLUSTER1_CG_EN(x)          (((uint32_t)(((uint32_t)(x)) << A53_GPR_GPR01_CLUSTER1_CG_EN_SHIFT)) & A53_GPR_GPR01_CLUSTER1_CG_EN_MASK)
#define A53_GPR_GPR01_CA53_0_CORE0_CP15SDISABLE_MASK (0x1000000U)
#define A53_GPR_GPR01_CA53_0_CORE0_CP15SDISABLE_SHIFT (24U)
#define A53_GPR_GPR01_CA53_0_CORE0_CP15SDISABLE_WIDTH (1U)
#define A53_GPR_GPR01_CA53_0_CORE0_CP15SDISABLE(x) (((uint32_t)(((uint32_t)(x)) << A53_GPR_GPR01_CA53_0_CORE0_CP15SDISABLE_SHIFT)) & A53_GPR_GPR01_CA53_0_CORE0_CP15SDISABLE_MASK)
#define A53_GPR_GPR01_CA53_0_CORE1_CP15SDISABLE_MASK (0x2000000U)
#define A53_GPR_GPR01_CA53_0_CORE1_CP15SDISABLE_SHIFT (25U)
#define A53_GPR_GPR01_CA53_0_CORE1_CP15SDISABLE_WIDTH (1U)
#define A53_GPR_GPR01_CA53_0_CORE1_CP15SDISABLE(x) (((uint32_t)(((uint32_t)(x)) << A53_GPR_GPR01_CA53_0_CORE1_CP15SDISABLE_SHIFT)) & A53_GPR_GPR01_CA53_0_CORE1_CP15SDISABLE_MASK)
#define A53_GPR_GPR01_CA53_1_CORE0_CP15SDISABLE_MASK (0x4000000U)
#define A53_GPR_GPR01_CA53_1_CORE0_CP15SDISABLE_SHIFT (26U)
#define A53_GPR_GPR01_CA53_1_CORE0_CP15SDISABLE_WIDTH (1U)
#define A53_GPR_GPR01_CA53_1_CORE0_CP15SDISABLE(x) (((uint32_t)(((uint32_t)(x)) << A53_GPR_GPR01_CA53_1_CORE0_CP15SDISABLE_SHIFT)) & A53_GPR_GPR01_CA53_1_CORE0_CP15SDISABLE_MASK)
#define A53_GPR_GPR01_CA53_1_CORE1_CP15SDISABLE_MASK (0x8000000U)
#define A53_GPR_GPR01_CA53_1_CORE1_CP15SDISABLE_SHIFT (27U)
#define A53_GPR_GPR01_CA53_1_CORE1_CP15SDISABLE_WIDTH (1U)
#define A53_GPR_GPR01_CA53_1_CORE1_CP15SDISABLE(x) (((uint32_t)(((uint32_t)(x)) << A53_GPR_GPR01_CA53_1_CORE1_CP15SDISABLE_SHIFT)) & A53_GPR_GPR01_CA53_1_CORE1_CP15SDISABLE_MASK)
/*! @} */

/*! @name GPR06 - GPR06 */
/*! @{ */
#define A53_GPR_GPR06_CA53_LOCKSTEP_EN_MASK      (0x1U)
#define A53_GPR_GPR06_CA53_LOCKSTEP_EN_SHIFT     (0U)
#define A53_GPR_GPR06_CA53_LOCKSTEP_EN_WIDTH     (1U)
#define A53_GPR_GPR06_CA53_LOCKSTEP_EN(x)        (((uint32_t)(((uint32_t)(x)) << A53_GPR_GPR06_CA53_LOCKSTEP_EN_SHIFT)) & A53_GPR_GPR06_CA53_LOCKSTEP_EN_MASK)
#define A53_GPR_GPR06_GIC500_LOCKSTEP_EN_MASK    (0x6U)
#define A53_GPR_GPR06_GIC500_LOCKSTEP_EN_SHIFT   (1U)
#define A53_GPR_GPR06_GIC500_LOCKSTEP_EN_WIDTH   (2U)
#define A53_GPR_GPR06_GIC500_LOCKSTEP_EN(x)      (((uint32_t)(((uint32_t)(x)) << A53_GPR_GPR06_GIC500_LOCKSTEP_EN_SHIFT)) & A53_GPR_GPR06_GIC500_LOCKSTEP_EN_MASK)
/*! @} */

/*! @name GPR07 - GPR07 */
/*! @{ */
#define A53_GPR_GPR07_CA53_0_CLUSTERIDAFF1_MASK  (0xFFU)
#define A53_GPR_GPR07_CA53_0_CLUSTERIDAFF1_SHIFT (0U)
#define A53_GPR_GPR07_CA53_0_CLUSTERIDAFF1_WIDTH (8U)
#define A53_GPR_GPR07_CA53_0_CLUSTERIDAFF1(x)    (((uint32_t)(((uint32_t)(x)) << A53_GPR_GPR07_CA53_0_CLUSTERIDAFF1_SHIFT)) & A53_GPR_GPR07_CA53_0_CLUSTERIDAFF1_MASK)
#define A53_GPR_GPR07_CA53_0_CLUSTERIDAFF2_MASK  (0xFF00U)
#define A53_GPR_GPR07_CA53_0_CLUSTERIDAFF2_SHIFT (8U)
#define A53_GPR_GPR07_CA53_0_CLUSTERIDAFF2_WIDTH (8U)
#define A53_GPR_GPR07_CA53_0_CLUSTERIDAFF2(x)    (((uint32_t)(((uint32_t)(x)) << A53_GPR_GPR07_CA53_0_CLUSTERIDAFF2_SHIFT)) & A53_GPR_GPR07_CA53_0_CLUSTERIDAFF2_MASK)
#define A53_GPR_GPR07_CA53_1_CLUSTERIDAFF1_MASK  (0xFF0000U)
#define A53_GPR_GPR07_CA53_1_CLUSTERIDAFF1_SHIFT (16U)
#define A53_GPR_GPR07_CA53_1_CLUSTERIDAFF1_WIDTH (8U)
#define A53_GPR_GPR07_CA53_1_CLUSTERIDAFF1(x)    (((uint32_t)(((uint32_t)(x)) << A53_GPR_GPR07_CA53_1_CLUSTERIDAFF1_SHIFT)) & A53_GPR_GPR07_CA53_1_CLUSTERIDAFF1_MASK)
#define A53_GPR_GPR07_CA53_1_CLUSTERIDAFF2_MASK  (0xFF000000U)
#define A53_GPR_GPR07_CA53_1_CLUSTERIDAFF2_SHIFT (24U)
#define A53_GPR_GPR07_CA53_1_CLUSTERIDAFF2_WIDTH (8U)
#define A53_GPR_GPR07_CA53_1_CLUSTERIDAFF2(x)    (((uint32_t)(((uint32_t)(x)) << A53_GPR_GPR07_CA53_1_CLUSTERIDAFF2_SHIFT)) & A53_GPR_GPR07_CA53_1_CLUSTERIDAFF2_MASK)
/*! @} */

/*! @name GPR08 - GPR08 */
/*! @{ */
#define A53_GPR_GPR08_CA53_0_CORE0_WARM_RESET_STATUS_MASK (0x1U)
#define A53_GPR_GPR08_CA53_0_CORE0_WARM_RESET_STATUS_SHIFT (0U)
#define A53_GPR_GPR08_CA53_0_CORE0_WARM_RESET_STATUS_WIDTH (1U)
#define A53_GPR_GPR08_CA53_0_CORE0_WARM_RESET_STATUS(x) (((uint32_t)(((uint32_t)(x)) << A53_GPR_GPR08_CA53_0_CORE0_WARM_RESET_STATUS_SHIFT)) & A53_GPR_GPR08_CA53_0_CORE0_WARM_RESET_STATUS_MASK)
#define A53_GPR_GPR08_CA53_0_CORE1_WARM_RESET_STATUS_MASK (0x2U)
#define A53_GPR_GPR08_CA53_0_CORE1_WARM_RESET_STATUS_SHIFT (1U)
#define A53_GPR_GPR08_CA53_0_CORE1_WARM_RESET_STATUS_WIDTH (1U)
#define A53_GPR_GPR08_CA53_0_CORE1_WARM_RESET_STATUS(x) (((uint32_t)(((uint32_t)(x)) << A53_GPR_GPR08_CA53_0_CORE1_WARM_RESET_STATUS_SHIFT)) & A53_GPR_GPR08_CA53_0_CORE1_WARM_RESET_STATUS_MASK)
#define A53_GPR_GPR08_CA53_1_CORE0_WARM_RESET_STATUS_MASK (0x4U)
#define A53_GPR_GPR08_CA53_1_CORE0_WARM_RESET_STATUS_SHIFT (2U)
#define A53_GPR_GPR08_CA53_1_CORE0_WARM_RESET_STATUS_WIDTH (1U)
#define A53_GPR_GPR08_CA53_1_CORE0_WARM_RESET_STATUS(x) (((uint32_t)(((uint32_t)(x)) << A53_GPR_GPR08_CA53_1_CORE0_WARM_RESET_STATUS_SHIFT)) & A53_GPR_GPR08_CA53_1_CORE0_WARM_RESET_STATUS_MASK)
#define A53_GPR_GPR08_CA53_1_CORE1_WARM_RESET_STATUS_MASK (0x8U)
#define A53_GPR_GPR08_CA53_1_CORE1_WARM_RESET_STATUS_SHIFT (3U)
#define A53_GPR_GPR08_CA53_1_CORE1_WARM_RESET_STATUS_WIDTH (1U)
#define A53_GPR_GPR08_CA53_1_CORE1_WARM_RESET_STATUS(x) (((uint32_t)(((uint32_t)(x)) << A53_GPR_GPR08_CA53_1_CORE1_WARM_RESET_STATUS_SHIFT)) & A53_GPR_GPR08_CA53_1_CORE1_WARM_RESET_STATUS_MASK)
#define A53_GPR_GPR08_CLUSTER0_STANDBYWFIL2_STATUS_MASK (0x100U)
#define A53_GPR_GPR08_CLUSTER0_STANDBYWFIL2_STATUS_SHIFT (8U)
#define A53_GPR_GPR08_CLUSTER0_STANDBYWFIL2_STATUS_WIDTH (1U)
#define A53_GPR_GPR08_CLUSTER0_STANDBYWFIL2_STATUS(x) (((uint32_t)(((uint32_t)(x)) << A53_GPR_GPR08_CLUSTER0_STANDBYWFIL2_STATUS_SHIFT)) & A53_GPR_GPR08_CLUSTER0_STANDBYWFIL2_STATUS_MASK)
#define A53_GPR_GPR08_CLUSTER1_STANDBYWFIL2_STATUS_MASK (0x200U)
#define A53_GPR_GPR08_CLUSTER1_STANDBYWFIL2_STATUS_SHIFT (9U)
#define A53_GPR_GPR08_CLUSTER1_STANDBYWFIL2_STATUS_WIDTH (1U)
#define A53_GPR_GPR08_CLUSTER1_STANDBYWFIL2_STATUS(x) (((uint32_t)(((uint32_t)(x)) << A53_GPR_GPR08_CLUSTER1_STANDBYWFIL2_STATUS_SHIFT)) & A53_GPR_GPR08_CLUSTER1_STANDBYWFIL2_STATUS_MASK)
#define A53_GPR_GPR08_CA53_0_CORE0_STANDBYWFE_STATUS_MASK (0x10000U)
#define A53_GPR_GPR08_CA53_0_CORE0_STANDBYWFE_STATUS_SHIFT (16U)
#define A53_GPR_GPR08_CA53_0_CORE0_STANDBYWFE_STATUS_WIDTH (1U)
#define A53_GPR_GPR08_CA53_0_CORE0_STANDBYWFE_STATUS(x) (((uint32_t)(((uint32_t)(x)) << A53_GPR_GPR08_CA53_0_CORE0_STANDBYWFE_STATUS_SHIFT)) & A53_GPR_GPR08_CA53_0_CORE0_STANDBYWFE_STATUS_MASK)
#define A53_GPR_GPR08_CA53_0_CORE1_STANDBYWFE_STATUS_MASK (0x20000U)
#define A53_GPR_GPR08_CA53_0_CORE1_STANDBYWFE_STATUS_SHIFT (17U)
#define A53_GPR_GPR08_CA53_0_CORE1_STANDBYWFE_STATUS_WIDTH (1U)
#define A53_GPR_GPR08_CA53_0_CORE1_STANDBYWFE_STATUS(x) (((uint32_t)(((uint32_t)(x)) << A53_GPR_GPR08_CA53_0_CORE1_STANDBYWFE_STATUS_SHIFT)) & A53_GPR_GPR08_CA53_0_CORE1_STANDBYWFE_STATUS_MASK)
#define A53_GPR_GPR08_CA53_1_CORE0_STANDBYWFE_STATUS_MASK (0x40000U)
#define A53_GPR_GPR08_CA53_1_CORE0_STANDBYWFE_STATUS_SHIFT (18U)
#define A53_GPR_GPR08_CA53_1_CORE0_STANDBYWFE_STATUS_WIDTH (1U)
#define A53_GPR_GPR08_CA53_1_CORE0_STANDBYWFE_STATUS(x) (((uint32_t)(((uint32_t)(x)) << A53_GPR_GPR08_CA53_1_CORE0_STANDBYWFE_STATUS_SHIFT)) & A53_GPR_GPR08_CA53_1_CORE0_STANDBYWFE_STATUS_MASK)
#define A53_GPR_GPR08_CA53_1_CORE1_STANDBYWFE_STATUS_MASK (0x80000U)
#define A53_GPR_GPR08_CA53_1_CORE1_STANDBYWFE_STATUS_SHIFT (19U)
#define A53_GPR_GPR08_CA53_1_CORE1_STANDBYWFE_STATUS_WIDTH (1U)
#define A53_GPR_GPR08_CA53_1_CORE1_STANDBYWFE_STATUS(x) (((uint32_t)(((uint32_t)(x)) << A53_GPR_GPR08_CA53_1_CORE1_STANDBYWFE_STATUS_SHIFT)) & A53_GPR_GPR08_CA53_1_CORE1_STANDBYWFE_STATUS_MASK)
#define A53_GPR_GPR08_CA53_0_CORE0_STANDBYWFI_STATUS_MASK (0x1000000U)
#define A53_GPR_GPR08_CA53_0_CORE0_STANDBYWFI_STATUS_SHIFT (24U)
#define A53_GPR_GPR08_CA53_0_CORE0_STANDBYWFI_STATUS_WIDTH (1U)
#define A53_GPR_GPR08_CA53_0_CORE0_STANDBYWFI_STATUS(x) (((uint32_t)(((uint32_t)(x)) << A53_GPR_GPR08_CA53_0_CORE0_STANDBYWFI_STATUS_SHIFT)) & A53_GPR_GPR08_CA53_0_CORE0_STANDBYWFI_STATUS_MASK)
#define A53_GPR_GPR08_CA53_0_CORE1_STANDBYWFI_STATUS_MASK (0x2000000U)
#define A53_GPR_GPR08_CA53_0_CORE1_STANDBYWFI_STATUS_SHIFT (25U)
#define A53_GPR_GPR08_CA53_0_CORE1_STANDBYWFI_STATUS_WIDTH (1U)
#define A53_GPR_GPR08_CA53_0_CORE1_STANDBYWFI_STATUS(x) (((uint32_t)(((uint32_t)(x)) << A53_GPR_GPR08_CA53_0_CORE1_STANDBYWFI_STATUS_SHIFT)) & A53_GPR_GPR08_CA53_0_CORE1_STANDBYWFI_STATUS_MASK)
#define A53_GPR_GPR08_CA53_1_CORE0_STANDBYWFI_STATUS_MASK (0x4000000U)
#define A53_GPR_GPR08_CA53_1_CORE0_STANDBYWFI_STATUS_SHIFT (26U)
#define A53_GPR_GPR08_CA53_1_CORE0_STANDBYWFI_STATUS_WIDTH (1U)
#define A53_GPR_GPR08_CA53_1_CORE0_STANDBYWFI_STATUS(x) (((uint32_t)(((uint32_t)(x)) << A53_GPR_GPR08_CA53_1_CORE0_STANDBYWFI_STATUS_SHIFT)) & A53_GPR_GPR08_CA53_1_CORE0_STANDBYWFI_STATUS_MASK)
#define A53_GPR_GPR08_CA53_1_CORE1_STANDBYWFI_STATUS_MASK (0x8000000U)
#define A53_GPR_GPR08_CA53_1_CORE1_STANDBYWFI_STATUS_SHIFT (27U)
#define A53_GPR_GPR08_CA53_1_CORE1_STANDBYWFI_STATUS_WIDTH (1U)
#define A53_GPR_GPR08_CA53_1_CORE1_STANDBYWFI_STATUS(x) (((uint32_t)(((uint32_t)(x)) << A53_GPR_GPR08_CA53_1_CORE1_STANDBYWFI_STATUS_SHIFT)) & A53_GPR_GPR08_CA53_1_CORE1_STANDBYWFI_STATUS_MASK)
/*! @} */

/*! @name GPR09 - GPR09 */
/*! @{ */
#define A53_GPR_GPR09_CA53_0_CORE0_RVBARADDR_39_32_MASK (0xFFU)
#define A53_GPR_GPR09_CA53_0_CORE0_RVBARADDR_39_32_SHIFT (0U)
#define A53_GPR_GPR09_CA53_0_CORE0_RVBARADDR_39_32_WIDTH (8U)
#define A53_GPR_GPR09_CA53_0_CORE0_RVBARADDR_39_32(x) (((uint32_t)(((uint32_t)(x)) << A53_GPR_GPR09_CA53_0_CORE0_RVBARADDR_39_32_SHIFT)) & A53_GPR_GPR09_CA53_0_CORE0_RVBARADDR_39_32_MASK)
#define A53_GPR_GPR09_CA53_0_CORE1_RVBARADDR_39_32_MASK (0xFF00U)
#define A53_GPR_GPR09_CA53_0_CORE1_RVBARADDR_39_32_SHIFT (8U)
#define A53_GPR_GPR09_CA53_0_CORE1_RVBARADDR_39_32_WIDTH (8U)
#define A53_GPR_GPR09_CA53_0_CORE1_RVBARADDR_39_32(x) (((uint32_t)(((uint32_t)(x)) << A53_GPR_GPR09_CA53_0_CORE1_RVBARADDR_39_32_SHIFT)) & A53_GPR_GPR09_CA53_0_CORE1_RVBARADDR_39_32_MASK)
#define A53_GPR_GPR09_CA53_1_CORE0_RVBARADDR_39_32_MASK (0xFF0000U)
#define A53_GPR_GPR09_CA53_1_CORE0_RVBARADDR_39_32_SHIFT (16U)
#define A53_GPR_GPR09_CA53_1_CORE0_RVBARADDR_39_32_WIDTH (8U)
#define A53_GPR_GPR09_CA53_1_CORE0_RVBARADDR_39_32(x) (((uint32_t)(((uint32_t)(x)) << A53_GPR_GPR09_CA53_1_CORE0_RVBARADDR_39_32_SHIFT)) & A53_GPR_GPR09_CA53_1_CORE0_RVBARADDR_39_32_MASK)
#define A53_GPR_GPR09_CA53_1_CORE1_RVBARADDR_39_32_MASK (0xFF000000U)
#define A53_GPR_GPR09_CA53_1_CORE1_RVBARADDR_39_32_SHIFT (24U)
#define A53_GPR_GPR09_CA53_1_CORE1_RVBARADDR_39_32_WIDTH (8U)
#define A53_GPR_GPR09_CA53_1_CORE1_RVBARADDR_39_32(x) (((uint32_t)(((uint32_t)(x)) << A53_GPR_GPR09_CA53_1_CORE1_RVBARADDR_39_32_SHIFT)) & A53_GPR_GPR09_CA53_1_CORE1_RVBARADDR_39_32_MASK)
/*! @} */

/*! @name GPR10 - GPR10 */
/*! @{ */
#define A53_GPR_GPR10_CA53_0_CORE0_CPUMERRSR_HIGH_BITS_MASK (0xFFFFFFFFU)
#define A53_GPR_GPR10_CA53_0_CORE0_CPUMERRSR_HIGH_BITS_SHIFT (0U)
#define A53_GPR_GPR10_CA53_0_CORE0_CPUMERRSR_HIGH_BITS_WIDTH (32U)
#define A53_GPR_GPR10_CA53_0_CORE0_CPUMERRSR_HIGH_BITS(x) (((uint32_t)(((uint32_t)(x)) << A53_GPR_GPR10_CA53_0_CORE0_CPUMERRSR_HIGH_BITS_SHIFT)) & A53_GPR_GPR10_CA53_0_CORE0_CPUMERRSR_HIGH_BITS_MASK)
/*! @} */

/*! @name GPR11 - GPR11 */
/*! @{ */
#define A53_GPR_GPR11_CA53_0_CORE0_CPUMERRSR_LOW_BITS_MASK (0xFFFFFFFFU)
#define A53_GPR_GPR11_CA53_0_CORE0_CPUMERRSR_LOW_BITS_SHIFT (0U)
#define A53_GPR_GPR11_CA53_0_CORE0_CPUMERRSR_LOW_BITS_WIDTH (32U)
#define A53_GPR_GPR11_CA53_0_CORE0_CPUMERRSR_LOW_BITS(x) (((uint32_t)(((uint32_t)(x)) << A53_GPR_GPR11_CA53_0_CORE0_CPUMERRSR_LOW_BITS_SHIFT)) & A53_GPR_GPR11_CA53_0_CORE0_CPUMERRSR_LOW_BITS_MASK)
/*! @} */

/*! @name GPR12 - GPR12 */
/*! @{ */
#define A53_GPR_GPR12_CA53_0_CORE1_CPUMERRSR_HIGH_BITS_MASK (0xFFFFFFFFU)
#define A53_GPR_GPR12_CA53_0_CORE1_CPUMERRSR_HIGH_BITS_SHIFT (0U)
#define A53_GPR_GPR12_CA53_0_CORE1_CPUMERRSR_HIGH_BITS_WIDTH (32U)
#define A53_GPR_GPR12_CA53_0_CORE1_CPUMERRSR_HIGH_BITS(x) (((uint32_t)(((uint32_t)(x)) << A53_GPR_GPR12_CA53_0_CORE1_CPUMERRSR_HIGH_BITS_SHIFT)) & A53_GPR_GPR12_CA53_0_CORE1_CPUMERRSR_HIGH_BITS_MASK)
/*! @} */

/*! @name GPR13 - GPR13 */
/*! @{ */
#define A53_GPR_GPR13_CA53_0_CORE1_CPUMERRSR_LOW_BITS_MASK (0xFFFFFFFFU)
#define A53_GPR_GPR13_CA53_0_CORE1_CPUMERRSR_LOW_BITS_SHIFT (0U)
#define A53_GPR_GPR13_CA53_0_CORE1_CPUMERRSR_LOW_BITS_WIDTH (32U)
#define A53_GPR_GPR13_CA53_0_CORE1_CPUMERRSR_LOW_BITS(x) (((uint32_t)(((uint32_t)(x)) << A53_GPR_GPR13_CA53_0_CORE1_CPUMERRSR_LOW_BITS_SHIFT)) & A53_GPR_GPR13_CA53_0_CORE1_CPUMERRSR_LOW_BITS_MASK)
/*! @} */

/*! @name GPR14 - GPR14 */
/*! @{ */
#define A53_GPR_GPR14_CA53_1_CORE0_CPUMERRSR_HIGH_BITS_MASK (0xFFFFFFFFU)
#define A53_GPR_GPR14_CA53_1_CORE0_CPUMERRSR_HIGH_BITS_SHIFT (0U)
#define A53_GPR_GPR14_CA53_1_CORE0_CPUMERRSR_HIGH_BITS_WIDTH (32U)
#define A53_GPR_GPR14_CA53_1_CORE0_CPUMERRSR_HIGH_BITS(x) (((uint32_t)(((uint32_t)(x)) << A53_GPR_GPR14_CA53_1_CORE0_CPUMERRSR_HIGH_BITS_SHIFT)) & A53_GPR_GPR14_CA53_1_CORE0_CPUMERRSR_HIGH_BITS_MASK)
/*! @} */

/*! @name GPR15 - GPR15 */
/*! @{ */
#define A53_GPR_GPR15_CA53_1_CORE0_CPUMERRSR_LOW_BITS_MASK (0xFFFFFFFFU)
#define A53_GPR_GPR15_CA53_1_CORE0_CPUMERRSR_LOW_BITS_SHIFT (0U)
#define A53_GPR_GPR15_CA53_1_CORE0_CPUMERRSR_LOW_BITS_WIDTH (32U)
#define A53_GPR_GPR15_CA53_1_CORE0_CPUMERRSR_LOW_BITS(x) (((uint32_t)(((uint32_t)(x)) << A53_GPR_GPR15_CA53_1_CORE0_CPUMERRSR_LOW_BITS_SHIFT)) & A53_GPR_GPR15_CA53_1_CORE0_CPUMERRSR_LOW_BITS_MASK)
/*! @} */

/*! @name GPR16 - GPR16 */
/*! @{ */
#define A53_GPR_GPR16_CA53_1_CORE1_CPUMERRSR_HIGH_BITS_MASK (0xFFFFFFFFU)
#define A53_GPR_GPR16_CA53_1_CORE1_CPUMERRSR_HIGH_BITS_SHIFT (0U)
#define A53_GPR_GPR16_CA53_1_CORE1_CPUMERRSR_HIGH_BITS_WIDTH (32U)
#define A53_GPR_GPR16_CA53_1_CORE1_CPUMERRSR_HIGH_BITS(x) (((uint32_t)(((uint32_t)(x)) << A53_GPR_GPR16_CA53_1_CORE1_CPUMERRSR_HIGH_BITS_SHIFT)) & A53_GPR_GPR16_CA53_1_CORE1_CPUMERRSR_HIGH_BITS_MASK)
/*! @} */

/*! @name GPR17 - GPR17 */
/*! @{ */
#define A53_GPR_GPR17_CA53_1_CORE1_CPUMERRSR_LOW_BITS_MASK (0xFFFFFFFFU)
#define A53_GPR_GPR17_CA53_1_CORE1_CPUMERRSR_LOW_BITS_SHIFT (0U)
#define A53_GPR_GPR17_CA53_1_CORE1_CPUMERRSR_LOW_BITS_WIDTH (32U)
#define A53_GPR_GPR17_CA53_1_CORE1_CPUMERRSR_LOW_BITS(x) (((uint32_t)(((uint32_t)(x)) << A53_GPR_GPR17_CA53_1_CORE1_CPUMERRSR_LOW_BITS_SHIFT)) & A53_GPR_GPR17_CA53_1_CORE1_CPUMERRSR_LOW_BITS_MASK)
/*! @} */

/*! @name GPR18 - GPR18 */
/*! @{ */
#define A53_GPR_GPR18_CA53_0_L2MERRSR_HIGH_BITS_MASK (0xFFFFFFFFU)
#define A53_GPR_GPR18_CA53_0_L2MERRSR_HIGH_BITS_SHIFT (0U)
#define A53_GPR_GPR18_CA53_0_L2MERRSR_HIGH_BITS_WIDTH (32U)
#define A53_GPR_GPR18_CA53_0_L2MERRSR_HIGH_BITS(x) (((uint32_t)(((uint32_t)(x)) << A53_GPR_GPR18_CA53_0_L2MERRSR_HIGH_BITS_SHIFT)) & A53_GPR_GPR18_CA53_0_L2MERRSR_HIGH_BITS_MASK)
/*! @} */

/*! @name GPR19 - GPR19 */
/*! @{ */
#define A53_GPR_GPR19_CA53_0_L2MERRSR_LOW_BITS_MASK (0xFFFFFFFFU)
#define A53_GPR_GPR19_CA53_0_L2MERRSR_LOW_BITS_SHIFT (0U)
#define A53_GPR_GPR19_CA53_0_L2MERRSR_LOW_BITS_WIDTH (32U)
#define A53_GPR_GPR19_CA53_0_L2MERRSR_LOW_BITS(x) (((uint32_t)(((uint32_t)(x)) << A53_GPR_GPR19_CA53_0_L2MERRSR_LOW_BITS_SHIFT)) & A53_GPR_GPR19_CA53_0_L2MERRSR_LOW_BITS_MASK)
/*! @} */

/*! @name GPR20 - GPR20 */
/*! @{ */
#define A53_GPR_GPR20_CA53_1_L2MERRSR_HIGH_BITS_MASK (0xFFFFFFFFU)
#define A53_GPR_GPR20_CA53_1_L2MERRSR_HIGH_BITS_SHIFT (0U)
#define A53_GPR_GPR20_CA53_1_L2MERRSR_HIGH_BITS_WIDTH (32U)
#define A53_GPR_GPR20_CA53_1_L2MERRSR_HIGH_BITS(x) (((uint32_t)(((uint32_t)(x)) << A53_GPR_GPR20_CA53_1_L2MERRSR_HIGH_BITS_SHIFT)) & A53_GPR_GPR20_CA53_1_L2MERRSR_HIGH_BITS_MASK)
/*! @} */

/*! @name GPR21 - GPR21 */
/*! @{ */
#define A53_GPR_GPR21_CA53_1_L2MERRSR_LOW_BITS_MASK (0xFFFFFFFFU)
#define A53_GPR_GPR21_CA53_1_L2MERRSR_LOW_BITS_SHIFT (0U)
#define A53_GPR_GPR21_CA53_1_L2MERRSR_LOW_BITS_WIDTH (32U)
#define A53_GPR_GPR21_CA53_1_L2MERRSR_LOW_BITS(x) (((uint32_t)(((uint32_t)(x)) << A53_GPR_GPR21_CA53_1_L2MERRSR_LOW_BITS_SHIFT)) & A53_GPR_GPR21_CA53_1_L2MERRSR_LOW_BITS_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group A53_GPR_Register_Masks */


/*!
 * @}
 */ /* end of group A53_GPR_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- ADC Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup ADC_Peripheral_Access_Layer ADC Peripheral Access Layer
 * @{
 */

/** ADC - Size of Registers Arrays */
#define ADC_CDR_COUNT                            48u
#define ADC_CEOCFR_COUNT                         2u
#define ADC_CIMR_COUNT                           2u
#define ADC_DMAR_COUNT                           2u
#define ADC_PSR_COUNT                            2u
#define ADC_CTR_COUNT                            2u
#define ADC_NCMR_COUNT                           2u
#define ADC_JCMR_COUNT                           2u
#define ADC_CWENR_COUNT                          2u
#define ADC_AWORR_COUNT                          2u

/** ADC - Register Layout Typedef */
typedef struct {
  __IO uint32_t MCR;                                    /**< Main Configuration Register, offset: 0x0 */
  __IO uint32_t MSR;                                    /**< Main Status Register, offset: 0x4 */
  uint8_t RESERVED_0[8];
  __IO uint32_t ISR;                                    /**< Interrupt Status Register, offset: 0x10 */
  __IO uint32_t CEOCFR[ADC_CEOCFR_COUNT];               /**< Channel Pending register 0..Channel Pending register 1, array offset: 0x14, array step: 0x4 */
  uint8_t RESERVED_1[4];
  __IO uint32_t IMR;                                    /**< Interrupt Mask Register, offset: 0x20 */
  __IO uint32_t CIMR[ADC_CIMR_COUNT];                   /**< Channel Interrupt Mask Register 0..Channel Interrupt Mask Register 1, array offset: 0x24, array step: 0x4 */
  uint8_t RESERVED_2[4];
  __IO uint32_t WTISR;                                  /**< Watchdog Threshold Interrupt Status Register, offset: 0x30 */
  __IO uint32_t WTIMR;                                  /**< Watchdog Threshold Interrupt Mask Register, offset: 0x34 */
  uint8_t RESERVED_3[8];
  __IO uint32_t DMAE;                                   /**< DMAE Register, offset: 0x40 */
  __IO uint32_t DMAR[ADC_DMAR_COUNT];                   /**< DMA Channel Select Register 0..DMA Channel Select Register 1, array offset: 0x44, array step: 0x4 */
  uint8_t RESERVED_4[20];
  __IO uint32_t THRHLR0;                                /**< Analog Watchdog Threshold Register 0, offset: 0x60 */
  __IO uint32_t THRHLR1;                                /**< Analog Watchdog Threshold Register 1, offset: 0x64 */
  __IO uint32_t THRHLR2;                                /**< Analog Watchdog Threshold Register 2, offset: 0x68 */
  __IO uint32_t THRHLR3;                                /**< Analog Watchdog Threshold Register 2, offset: 0x6C */
  uint8_t RESERVED_5[16];
  __IO uint32_t PSCR;                                   /**< Presampling Control Register, offset: 0x80 */
  __IO uint32_t PSR[ADC_PSR_COUNT];                     /**< Presampling register 0..Presampling register 1, array offset: 0x84, array step: 0x4 */
  uint8_t RESERVED_6[8];
  __IO uint32_t CTR[ADC_CTR_COUNT];                     /**< Conversion Timing Register 0..Conversion Timing Register 1, array offset: 0x94, array step: 0x4 */
  uint8_t RESERVED_7[8];
  __IO uint32_t NCMR[ADC_NCMR_COUNT];                   /**< Normal Conversion Mask Register 0..Normal Conversion Mask Register 1, array offset: 0xA4, array step: 0x4 */
  uint8_t RESERVED_8[8];
  __IO uint32_t JCMR[ADC_JCMR_COUNT];                   /**< Injected Conversion Mask Register 0..Injected Conversion Mask Register 1, array offset: 0xB4, array step: 0x4 */
  uint8_t RESERVED_9[4];
  __IO uint32_t USROFSGN;                               /**< User OFFSET and Gain Register, offset: 0xC0 */
  uint8_t RESERVED_10[4];
  __IO uint32_t PDEDR;                                  /**< Power Down Exit Delay Register, offset: 0xC8 */
  uint8_t RESERVED_11[52];
  __IO uint32_t CDR[ADC_CDR_COUNT];                     /**< Channel Data Register n, array offset: 0x100, array step: 0x4 */
  uint8_t RESERVED_12[192];
  __IO uint32_t THRHLR4;                                /**< Analog Watchdog Threshold Register 4, offset: 0x280 */
  __IO uint32_t THRHLR5;                                /**< Analog Watchdog Threshold Register 5, offset: 0x284 */
  __IO uint32_t THRHLR6;                                /**< Analog Watchdog Threshold Register 6, offset: 0x288 */
  __IO uint32_t THRHLR7;                                /**< Analog Watchdog Threshold Register 7, offset: 0x28C */
  uint8_t RESERVED_13[32];
  __IO uint32_t CWSELR0;                                /**< Channel Watchdog Select Register 0, offset: 0x2B0 */
  uint8_t RESERVED_14[12];
  __IO uint32_t CWSELR4;                                /**< Channel Watchdog Select Register 4, offset: 0x2C0 */
  __IO uint32_t CWSELR5;                                /**< Channel Watchdog Select Register 5  offset: 0x2C4 */
  uint8_t RESERVED_15[24];
  __IO uint32_t CWENR[ADC_CWENR_COUNT];                 /**< Channel Watchdog Enable Register 0..Channel Watchdog Enable Register 1, array offset: 0x2E0, array step: 0x4 */
  uint8_t RESERVED_16[8];
  __IO uint32_t AWORR[ADC_AWORR_COUNT];                 /**< Analog Watchdog Out of Range Register 0..Analog Watchdog Out of Range Register 1, array offset: 0x2F0, array step: 0x4 */
  uint8_t RESERVED_17[72];
  __IO uint32_t STCR1;                                  /**< Self-Test Configuration Register 1, offset: 0x340 */
  __IO uint32_t STCR2;                                  /**< Self-Test Configuration Register 2, offset: 0x344 */
  __IO uint32_t STCR3;                                  /**< Self-Test Configuration Register 3, offset: 0x348 */
  __IO uint32_t STBRR;                                  /**< Self-Test Baud Rate Register, offset: 0x34C */
  __IO uint32_t STSR1;                                  /**< Self-Test Status Register 1, offset: 0x350 */
  __IO uint32_t STSR2;                                  /**< Self-Test Status Register 2, offset: 0x354 */
  __IO uint32_t STSR3;                                  /**< Self-Test Status Register 3, offset: 0x358 */
  __IO uint32_t STSR4;                                  /**< Self-Test Status Register 4, offset: 0x35C */
  uint8_t RESERVED_18[16];
  __IO uint32_t STDR1;                                  /**< Self-Test Data Register 1, offset: 0x370 */
  __IO uint32_t STDR2;                                  /**< Self-Test Data Register 2, offset: 0x374 */
  uint8_t RESERVED_19[8];
  __IO uint32_t STAW0R;                                 /**< Self-Test Analog Watchdog Register, offset: 0x380 */
  __IO uint32_t STAW1AR;                                /**< Self-Test Analog Watchdog Register, offset: 0x384 */
  __IO uint32_t STAW1BR;                                /**< Self-Test Analog Watchdog Register 1B, offset: 0x388 */
  __IO uint32_t STAW2R;                                 /**< Self-Test Analog Watchdog Register 2, offset: 0x38C */
  __IO uint32_t STAW3R;                                 /**< Self-Test Analog Watchdog Register 3, offset: 0x390 */
  __IO uint32_t STAW4R;                                 /**< Self-Test Analog Watchdog Register 4, offset: 0x394 */
  __IO uint32_t STAW5R;                                 /**< Self-Test Analog Watchdog Register 5, offset: 0x398 */
  __IO uint32_t CALSTAT;                                /**< Calibration Status register, offset: 0x39C */
} ADC_Type, *ADC_MemMapPtr;

/** Number of instances of the ADC module. */
#define ADC_INSTANCE_COUNT                       (2u)

/* ADC - Peripheral instance base addresses */
/** Peripheral ADC_0 base address */
#define ADC_0_BASE                               (0x401F8000u)
/** Peripheral ADC_0 base pointer */
#define ADC_0                                    ((ADC_Type *)ADC_0_BASE)
/** Peripheral ADC_1 base address */
#define ADC_1_BASE                               (0x402E8000u)
/** Peripheral ADC_1 base pointer */
#define ADC_1                                    ((ADC_Type *)ADC_1_BASE)
/** Array initializer of ADC peripheral base addresses */
#define ADC_BASE_ADDRS                           { ADC_0_BASE, ADC_1_BASE }
/** Array initializer of ADC peripheral base pointers */
#define ADC_BASE_PTRS                            { ADC_0, ADC_1 }

/* ----------------------------------------------------------------------------
   -- ADC Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup ADC_Register_Masks ADC Register Masks
 * @{
 */

/*! @name MCR - Main Configuration Register */
/*! @{ */
#define ADC_MCR_PWDN_MASK                        (0x1U)
#define ADC_MCR_PWDN_SHIFT                       (0U)
#define ADC_MCR_PWDN_WIDTH                       (1U)
#define ADC_MCR_PWDN(x)                          (((uint32_t)(((uint32_t)(x)) << ADC_MCR_PWDN_SHIFT)) & ADC_MCR_PWDN_MASK)
#define ADC_MCR_ACKO_MASK                        (0x20U)
#define ADC_MCR_ACKO_SHIFT                       (5U)
#define ADC_MCR_ACKO_WIDTH                       (1U)
#define ADC_MCR_ACKO(x)                          (((uint32_t)(((uint32_t)(x)) << ADC_MCR_ACKO_SHIFT)) & ADC_MCR_ACKO_MASK)
#define ADC_MCR_ABORT_MASK                       (0x40U)
#define ADC_MCR_ABORT_SHIFT                      (6U)
#define ADC_MCR_ABORT_WIDTH                      (1U)
#define ADC_MCR_ABORT(x)                         (((uint32_t)(((uint32_t)(x)) << ADC_MCR_ABORT_SHIFT)) & ADC_MCR_ABORT_MASK)
#define ADC_MCR_ABORTCHAIN_MASK                  (0x80U)
#define ADC_MCR_ABORTCHAIN_SHIFT                 (7U)
#define ADC_MCR_ABORTCHAIN_WIDTH                 (1U)
#define ADC_MCR_ABORTCHAIN(x)                    (((uint32_t)(((uint32_t)(x)) << ADC_MCR_ABORTCHAIN_SHIFT)) & ADC_MCR_ABORTCHAIN_MASK)
#define ADC_MCR_ADCLKSEL_MASK                    (0x100U)
#define ADC_MCR_ADCLKSEL_SHIFT                   (8U)
#define ADC_MCR_ADCLKSEL_WIDTH                   (1U)
#define ADC_MCR_ADCLKSEL(x)                      (((uint32_t)(((uint32_t)(x)) << ADC_MCR_ADCLKSEL_SHIFT)) & ADC_MCR_ADCLKSEL_MASK)
#define ADC_MCR_TSAMP_MASK                       (0x600U)
#define ADC_MCR_TSAMP_SHIFT                      (9U)
#define ADC_MCR_TSAMP_WIDTH                      (2U)
#define ADC_MCR_TSAMP(x)                         (((uint32_t)(((uint32_t)(x)) << ADC_MCR_TSAMP_SHIFT)) & ADC_MCR_TSAMP_MASK)
#define ADC_MCR_NRSMPL_MASK                      (0x1800U)
#define ADC_MCR_NRSMPL_SHIFT                     (11U)
#define ADC_MCR_NRSMPL_WIDTH                     (2U)
#define ADC_MCR_NRSMPL(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_MCR_NRSMPL_SHIFT)) & ADC_MCR_NRSMPL_MASK)
#define ADC_MCR_AVGEN_MASK                       (0x2000U)
#define ADC_MCR_AVGEN_SHIFT                      (13U)
#define ADC_MCR_AVGEN_WIDTH                      (1U)
#define ADC_MCR_AVGEN(x)                         (((uint32_t)(((uint32_t)(x)) << ADC_MCR_AVGEN_SHIFT)) & ADC_MCR_AVGEN_MASK)
#define ADC_MCR_CALSTART_MASK                    (0x4000U)
#define ADC_MCR_CALSTART_SHIFT                   (14U)
#define ADC_MCR_CALSTART_WIDTH                   (1U)
#define ADC_MCR_CALSTART(x)                      (((uint32_t)(((uint32_t)(x)) << ADC_MCR_CALSTART_SHIFT)) & ADC_MCR_CALSTART_MASK)
#define ADC_MCR_STCL_MASK                        (0x8000U)
#define ADC_MCR_STCL_SHIFT                       (15U)
#define ADC_MCR_STCL_WIDTH                       (1U)
#define ADC_MCR_STCL(x)                          (((uint32_t)(((uint32_t)(x)) << ADC_MCR_STCL_SHIFT)) & ADC_MCR_STCL_MASK)
#define ADC_MCR_CTU_MODE_MASK                    (0x10000U)
#define ADC_MCR_CTU_MODE_SHIFT                   (16U)
#define ADC_MCR_CTU_MODE_WIDTH                   (1U)
#define ADC_MCR_CTU_MODE(x)                      (((uint32_t)(((uint32_t)(x)) << ADC_MCR_CTU_MODE_SHIFT)) & ADC_MCR_CTU_MODE_MASK)
#define ADC_MCR_CTUEN_MASK                       (0x20000U)
#define ADC_MCR_CTUEN_SHIFT                      (17U)
#define ADC_MCR_CTUEN_WIDTH                      (1U)
#define ADC_MCR_CTUEN(x)                         (((uint32_t)(((uint32_t)(x)) << ADC_MCR_CTUEN_SHIFT)) & ADC_MCR_CTUEN_MASK)
#define ADC_MCR_JSTART_MASK                      (0x100000U)
#define ADC_MCR_JSTART_SHIFT                     (20U)
#define ADC_MCR_JSTART_WIDTH                     (1U)
#define ADC_MCR_JSTART(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_MCR_JSTART_SHIFT)) & ADC_MCR_JSTART_MASK)
#define ADC_MCR_JEDGE_MASK                       (0x200000U)
#define ADC_MCR_JEDGE_SHIFT                      (21U)
#define ADC_MCR_JEDGE_WIDTH                      (1U)
#define ADC_MCR_JEDGE(x)                         (((uint32_t)(((uint32_t)(x)) << ADC_MCR_JEDGE_SHIFT)) & ADC_MCR_JEDGE_MASK)
#define ADC_MCR_JTRGEN_MASK                      (0x400000U)
#define ADC_MCR_JTRGEN_SHIFT                     (22U)
#define ADC_MCR_JTRGEN_WIDTH                     (1U)
#define ADC_MCR_JTRGEN(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_MCR_JTRGEN_SHIFT)) & ADC_MCR_JTRGEN_MASK)
#define ADC_MCR_NSTART_MASK                      (0x1000000U)
#define ADC_MCR_NSTART_SHIFT                     (24U)
#define ADC_MCR_NSTART_WIDTH                     (1U)
#define ADC_MCR_NSTART(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_MCR_NSTART_SHIFT)) & ADC_MCR_NSTART_MASK)
#define ADC_MCR_XSTRTEN_MASK                     (0x2000000U)
#define ADC_MCR_XSTRTEN_SHIFT                    (25U)
#define ADC_MCR_XSTRTEN_WIDTH                    (1U)
#define ADC_MCR_XSTRTEN(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_MCR_XSTRTEN_SHIFT)) & ADC_MCR_XSTRTEN_MASK)
#define ADC_MCR_EDGE_MASK                        (0x4000000U)
#define ADC_MCR_EDGE_SHIFT                       (26U)
#define ADC_MCR_EDGE_WIDTH                       (1U)
#define ADC_MCR_EDGE(x)                          (((uint32_t)(((uint32_t)(x)) << ADC_MCR_EDGE_SHIFT)) & ADC_MCR_EDGE_MASK)
#define ADC_MCR_TRGEN_MASK                       (0x8000000U)
#define ADC_MCR_TRGEN_SHIFT                      (27U)
#define ADC_MCR_TRGEN_WIDTH                      (1U)
#define ADC_MCR_TRGEN(x)                         (((uint32_t)(((uint32_t)(x)) << ADC_MCR_TRGEN_SHIFT)) & ADC_MCR_TRGEN_MASK)
#define ADC_MCR_MODE_MASK                        (0x20000000U)
#define ADC_MCR_MODE_SHIFT                       (29U)
#define ADC_MCR_MODE_WIDTH                       (1U)
#define ADC_MCR_MODE(x)                          (((uint32_t)(((uint32_t)(x)) << ADC_MCR_MODE_SHIFT)) & ADC_MCR_MODE_MASK)
#define ADC_MCR_WLSIDE_MASK                      (0x40000000U)
#define ADC_MCR_WLSIDE_SHIFT                     (30U)
#define ADC_MCR_WLSIDE_WIDTH                     (1U)
#define ADC_MCR_WLSIDE(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_MCR_WLSIDE_SHIFT)) & ADC_MCR_WLSIDE_MASK)
#define ADC_MCR_OWREN_MASK                       (0x80000000U)
#define ADC_MCR_OWREN_SHIFT                      (31U)
#define ADC_MCR_OWREN_WIDTH                      (1U)
#define ADC_MCR_OWREN(x)                         (((uint32_t)(((uint32_t)(x)) << ADC_MCR_OWREN_SHIFT)) & ADC_MCR_OWREN_MASK)
/*! @} */

/*! @name MSR - Main Status Register */
/*! @{ */
#define ADC_MSR_ADCSTATUS_MASK                   (0x7U)
#define ADC_MSR_ADCSTATUS_SHIFT                  (0U)
#define ADC_MSR_ADCSTATUS_WIDTH                  (3U)
#define ADC_MSR_ADCSTATUS(x)                     (((uint32_t)(((uint32_t)(x)) << ADC_MSR_ADCSTATUS_SHIFT)) & ADC_MSR_ADCSTATUS_MASK)
#define ADC_MSR_ACKO_MASK                        (0x20U)
#define ADC_MSR_ACKO_SHIFT                       (5U)
#define ADC_MSR_ACKO_WIDTH                       (1U)
#define ADC_MSR_ACKO(x)                          (((uint32_t)(((uint32_t)(x)) << ADC_MSR_ACKO_SHIFT)) & ADC_MSR_ACKO_MASK)
#define ADC_MSR_CHADDR_MASK                      (0xFE00U)
#define ADC_MSR_CHADDR_SHIFT                     (9U)
#define ADC_MSR_CHADDR_WIDTH                     (7U)
#define ADC_MSR_CHADDR(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_MSR_CHADDR_SHIFT)) & ADC_MSR_CHADDR_MASK)
#define ADC_MSR_CTUSTART_MASK                    (0x10000U)
#define ADC_MSR_CTUSTART_SHIFT                   (16U)
#define ADC_MSR_CTUSTART_WIDTH                   (1U)
#define ADC_MSR_CTUSTART(x)                      (((uint32_t)(((uint32_t)(x)) << ADC_MSR_CTUSTART_SHIFT)) & ADC_MSR_CTUSTART_MASK)
#define ADC_MSR_SELF_TEST_S_MASK                 (0x40000U)
#define ADC_MSR_SELF_TEST_S_SHIFT                (18U)
#define ADC_MSR_SELF_TEST_S_WIDTH                (1U)
#define ADC_MSR_SELF_TEST_S(x)                   (((uint32_t)(((uint32_t)(x)) << ADC_MSR_SELF_TEST_S_SHIFT)) & ADC_MSR_SELF_TEST_S_MASK)
#define ADC_MSR_JSTART_MASK                      (0x100000U)
#define ADC_MSR_JSTART_SHIFT                     (20U)
#define ADC_MSR_JSTART_WIDTH                     (1U)
#define ADC_MSR_JSTART(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_MSR_JSTART_SHIFT)) & ADC_MSR_JSTART_MASK)
#define ADC_MSR_JABORT_MASK                      (0x800000U)
#define ADC_MSR_JABORT_SHIFT                     (23U)
#define ADC_MSR_JABORT_WIDTH                     (1U)
#define ADC_MSR_JABORT(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_MSR_JABORT_SHIFT)) & ADC_MSR_JABORT_MASK)
#define ADC_MSR_NSTART_MASK                      (0x1000000U)
#define ADC_MSR_NSTART_SHIFT                     (24U)
#define ADC_MSR_NSTART_WIDTH                     (1U)
#define ADC_MSR_NSTART(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_MSR_NSTART_SHIFT)) & ADC_MSR_NSTART_MASK)
#define ADC_MSR_CALBUSY_MASK                     (0x20000000U)
#define ADC_MSR_CALBUSY_SHIFT                    (29U)
#define ADC_MSR_CALBUSY_WIDTH                    (1U)
#define ADC_MSR_CALBUSY(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_MSR_CALBUSY_SHIFT)) & ADC_MSR_CALBUSY_MASK)
#define ADC_MSR_CALFAIL_MASK                     (0x40000000U)
#define ADC_MSR_CALFAIL_SHIFT                    (30U)
#define ADC_MSR_CALFAIL_WIDTH                    (1U)
#define ADC_MSR_CALFAIL(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_MSR_CALFAIL_SHIFT)) & ADC_MSR_CALFAIL_MASK)
#define ADC_MSR_CALIBRTD_MASK                    (0x80000000U)
#define ADC_MSR_CALIBRTD_SHIFT                   (31U)
#define ADC_MSR_CALIBRTD_WIDTH                   (1U)
#define ADC_MSR_CALIBRTD(x)                      (((uint32_t)(((uint32_t)(x)) << ADC_MSR_CALIBRTD_SHIFT)) & ADC_MSR_CALIBRTD_MASK)
/*! @} */

/*! @name ISR - Interrupt Status Register */
/*! @{ */
#define ADC_ISR_ECH_MASK                         (0x1U)
#define ADC_ISR_ECH_SHIFT                        (0U)
#define ADC_ISR_ECH_WIDTH                        (1U)
#define ADC_ISR_ECH(x)                           (((uint32_t)(((uint32_t)(x)) << ADC_ISR_ECH_SHIFT)) & ADC_ISR_ECH_MASK)
#define ADC_ISR_EOC_MASK                         (0x2U)
#define ADC_ISR_EOC_SHIFT                        (1U)
#define ADC_ISR_EOC_WIDTH                        (1U)
#define ADC_ISR_EOC(x)                           (((uint32_t)(((uint32_t)(x)) << ADC_ISR_EOC_SHIFT)) & ADC_ISR_EOC_MASK)
#define ADC_ISR_JECH_MASK                        (0x4U)
#define ADC_ISR_JECH_SHIFT                       (2U)
#define ADC_ISR_JECH_WIDTH                       (1U)
#define ADC_ISR_JECH(x)                          (((uint32_t)(((uint32_t)(x)) << ADC_ISR_JECH_SHIFT)) & ADC_ISR_JECH_MASK)
#define ADC_ISR_JEOC_MASK                        (0x8U)
#define ADC_ISR_JEOC_SHIFT                       (3U)
#define ADC_ISR_JEOC_WIDTH                       (1U)
#define ADC_ISR_JEOC(x)                          (((uint32_t)(((uint32_t)(x)) << ADC_ISR_JEOC_SHIFT)) & ADC_ISR_JEOC_MASK)
#define ADC_ISR_EOCTU_MASK                       (0x10U)
#define ADC_ISR_EOCTU_SHIFT                      (4U)
#define ADC_ISR_EOCTU_WIDTH                      (1U)
#define ADC_ISR_EOCTU(x)                         (((uint32_t)(((uint32_t)(x)) << ADC_ISR_EOCTU_SHIFT)) & ADC_ISR_EOCTU_MASK)
/*! @} */

/*! @name CEOCFR0 - Channel Pending Register */
/*! @{ */
#define ADC_CEOCFR_EOC_CH0_MASK                 (0x1U)
#define ADC_CEOCFR_EOC_CH0_SHIFT                (0U)
#define ADC_CEOCFR_EOC_CH0_WIDTH                (1U)
#define ADC_CEOCFR_EOC_CH0(x)                   (((uint32_t)(((uint32_t)(x)) << ADC_CEOCFR_EOC_CH0_SHIFT)) & ADC_CEOCFR_EOC_CH0_MASK)
#define ADC_CEOCFR_EOC_CH1_MASK                 (0x2U)
#define ADC_CEOCFR_EOC_CH1_SHIFT                (1U)
#define ADC_CEOCFR_EOC_CH1_WIDTH                (1U)
#define ADC_CEOCFR_EOC_CH1(x)                   (((uint32_t)(((uint32_t)(x)) << ADC_CEOCFR_EOC_CH1_SHIFT)) & ADC_CEOCFR_EOC_CH1_MASK)
#define ADC_CEOCFR_EOC_CH2_MASK                 (0x4U)
#define ADC_CEOCFR_EOC_CH2_SHIFT                (2U)
#define ADC_CEOCFR_EOC_CH2_WIDTH                (1U)
#define ADC_CEOCFR_EOC_CH2(x)                   (((uint32_t)(((uint32_t)(x)) << ADC_CEOCFR_EOC_CH2_SHIFT)) & ADC_CEOCFR_EOC_CH2_MASK)
#define ADC_CEOCFR_EOC_CH3_MASK                 (0x8U)
#define ADC_CEOCFR_EOC_CH3_SHIFT                (3U)
#define ADC_CEOCFR_EOC_CH3_WIDTH                (1U)
#define ADC_CEOCFR_EOC_CH3(x)                   (((uint32_t)(((uint32_t)(x)) << ADC_CEOCFR_EOC_CH3_SHIFT)) & ADC_CEOCFR_EOC_CH3_MASK)
#define ADC_CEOCFR_EOC_CH4_MASK                 (0x10U)
#define ADC_CEOCFR_EOC_CH4_SHIFT                (4U)
#define ADC_CEOCFR_EOC_CH4_WIDTH                (1U)
#define ADC_CEOCFR_EOC_CH4(x)                   (((uint32_t)(((uint32_t)(x)) << ADC_CEOCFR_EOC_CH4_SHIFT)) & ADC_CEOCFR_EOC_CH4_MASK)
#define ADC_CEOCFR_EOC_CH5_MASK                 (0x20U)
#define ADC_CEOCFR_EOC_CH5_SHIFT                (5U)
#define ADC_CEOCFR_EOC_CH5_WIDTH                (1U)
#define ADC_CEOCFR_EOC_CH5(x)                   (((uint32_t)(((uint32_t)(x)) << ADC_CEOCFR_EOC_CH5_SHIFT)) & ADC_CEOCFR_EOC_CH5_MASK)
#define ADC_CEOCFR_EOC_CH6_MASK                 (0x40U)
#define ADC_CEOCFR_EOC_CH6_SHIFT                (6U)
#define ADC_CEOCFR_EOC_CH6_WIDTH                (1U)
#define ADC_CEOCFR_EOC_CH6(x)                   (((uint32_t)(((uint32_t)(x)) << ADC_CEOCFR_EOC_CH6_SHIFT)) & ADC_CEOCFR_EOC_CH6_MASK)
#define ADC_CEOCFR_EOC_CH7_MASK                 (0x80U)
#define ADC_CEOCFR_EOC_CH7_SHIFT                (7U)
#define ADC_CEOCFR_EOC_CH7_WIDTH                (1U)
#define ADC_CEOCFR_EOC_CH7(x)                   (((uint32_t)(((uint32_t)(x)) << ADC_CEOCFR_EOC_CH7_SHIFT)) & ADC_CEOCFR_EOC_CH7_MASK)
#define ADC_CEOCFR_EOC_CH32_MASK                (0x1U)
#define ADC_CEOCFR_EOC_CH32_SHIFT               (0U)
#define ADC_CEOCFR_EOC_CH32_WIDTH               (1U)
#define ADC_CEOCFR_EOC_CH32(x)                  (((uint32_t)(((uint32_t)(x)) << ADC_CEOCFR_EOC_CH32_SHIFT)) & ADC_CEOCFR_EOC_CH32_MASK)
#define ADC_CEOCFR_EOC_CH33_MASK                (0x2U)
#define ADC_CEOCFR_EOC_CH33_SHIFT               (1U)
#define ADC_CEOCFR_EOC_CH33_WIDTH               (1U)
#define ADC_CEOCFR_EOC_CH33(x)                  (((uint32_t)(((uint32_t)(x)) << ADC_CEOCFR_EOC_CH33_SHIFT)) & ADC_CEOCFR_EOC_CH33_MASK)
#define ADC_CEOCFR_EOC_CH34_MASK                (0x4U)
#define ADC_CEOCFR_EOC_CH34_SHIFT               (2U)
#define ADC_CEOCFR_EOC_CH34_WIDTH               (1U)
#define ADC_CEOCFR_EOC_CH34(x)                  (((uint32_t)(((uint32_t)(x)) << ADC_CEOCFR_EOC_CH34_SHIFT)) & ADC_CEOCFR_EOC_CH34_MASK)
#define ADC_CEOCFR_EOC_CH35_MASK                (0x8U)
#define ADC_CEOCFR_EOC_CH35_SHIFT               (3U)
#define ADC_CEOCFR_EOC_CH35_WIDTH               (1U)
#define ADC_CEOCFR_EOC_CH35(x)                  (((uint32_t)(((uint32_t)(x)) << ADC_CEOCFR_EOC_CH35_SHIFT)) & ADC_CEOCFR_EOC_CH35_MASK)
#define ADC_CEOCFR_EOC_CH36_MASK                (0x10U)
#define ADC_CEOCFR_EOC_CH36_SHIFT               (4U)
#define ADC_CEOCFR_EOC_CH36_WIDTH               (1U)
#define ADC_CEOCFR_EOC_CH36(x)                  (((uint32_t)(((uint32_t)(x)) << ADC_CEOCFR_EOC_CH36_SHIFT)) & ADC_CEOCFR_EOC_CH36_MASK)
#define ADC_CEOCFR_EOC_CH37_MASK                (0x20U)
#define ADC_CEOCFR_EOC_CH37_SHIFT               (5U)
#define ADC_CEOCFR_EOC_CH37_WIDTH               (1U)
#define ADC_CEOCFR_EOC_CH37(x)                  (((uint32_t)(((uint32_t)(x)) << ADC_CEOCFR_EOC_CH37_SHIFT)) & ADC_CEOCFR_EOC_CH37_MASK)
#define ADC_CEOCFR_EOC_CH38_MASK                (0x40U)
#define ADC_CEOCFR_EOC_CH38_SHIFT               (6U)
#define ADC_CEOCFR_EOC_CH38_WIDTH               (1U)
#define ADC_CEOCFR_EOC_CH38(x)                  (((uint32_t)(((uint32_t)(x)) << ADC_CEOCFR_EOC_CH38_SHIFT)) & ADC_CEOCFR_EOC_CH38_MASK)
#define ADC_CEOCFR_EOC_CH39_MASK                (0x80U)
#define ADC_CEOCFR_EOC_CH39_SHIFT               (7U)
#define ADC_CEOCFR_EOC_CH39_WIDTH               (1U)
#define ADC_CEOCFR_EOC_CH39(x)                  (((uint32_t)(((uint32_t)(x)) << ADC_CEOCFR_EOC_CH39_SHIFT)) & ADC_CEOCFR_EOC_CH39_MASK)
#define ADC_CEOCFR_EOC_CH40_MASK                (0x100U)
#define ADC_CEOCFR_EOC_CH40_SHIFT               (8U)
#define ADC_CEOCFR_EOC_CH40_WIDTH               (1U)
#define ADC_CEOCFR_EOC_CH40(x)                  (((uint32_t)(((uint32_t)(x)) << ADC_CEOCFR_EOC_CH40_SHIFT)) & ADC_CEOCFR_EOC_CH40_MASK)
#define ADC_CEOCFR_EOC_CH41_MASK                (0x200U)
#define ADC_CEOCFR_EOC_CH41_SHIFT               (9U)
#define ADC_CEOCFR_EOC_CH41_WIDTH               (1U)
#define ADC_CEOCFR_EOC_CH41(x)                  (((uint32_t)(((uint32_t)(x)) << ADC_CEOCFR_EOC_CH41_SHIFT)) & ADC_CEOCFR_EOC_CH41_MASK)
#define ADC_CEOCFR_EOC_CH42_MASK                (0x400U)
#define ADC_CEOCFR_EOC_CH42_SHIFT               (10U)
#define ADC_CEOCFR_EOC_CH42_WIDTH               (1U)
#define ADC_CEOCFR_EOC_CH42(x)                  (((uint32_t)(((uint32_t)(x)) << ADC_CEOCFR_EOC_CH42_SHIFT)) & ADC_CEOCFR_EOC_CH42_MASK)
#define ADC_CEOCFR_EOC_CH43_MASK                (0x800U)
#define ADC_CEOCFR_EOC_CH43_SHIFT               (11U)
#define ADC_CEOCFR_EOC_CH43_WIDTH               (1U)
#define ADC_CEOCFR_EOC_CH43(x)                  (((uint32_t)(((uint32_t)(x)) << ADC_CEOCFR_EOC_CH43_SHIFT)) & ADC_CEOCFR_EOC_CH43_MASK)
#define ADC_CEOCFR_EOC_CH44_MASK                (0x1000U)
#define ADC_CEOCFR_EOC_CH44_SHIFT               (12U)
#define ADC_CEOCFR_EOC_CH44_WIDTH               (1U)
#define ADC_CEOCFR_EOC_CH44(x)                  (((uint32_t)(((uint32_t)(x)) << ADC_CEOCFR_EOC_CH44_SHIFT)) & ADC_CEOCFR_EOC_CH44_MASK)
#define ADC_CEOCFR_EOC_CH45_MASK                (0x2000U)
#define ADC_CEOCFR_EOC_CH45_SHIFT               (13U)
#define ADC_CEOCFR_EOC_CH45_WIDTH               (1U)
#define ADC_CEOCFR_EOC_CH45(x)                  (((uint32_t)(((uint32_t)(x)) << ADC_CEOCFR_EOC_CH45_SHIFT)) & ADC_CEOCFR_EOC_CH45_MASK)
#define ADC_CEOCFR_EOC_CH46_MASK                (0x4000U)
#define ADC_CEOCFR_EOC_CH46_SHIFT               (14U)
#define ADC_CEOCFR_EOC_CH46_WIDTH               (1U)
#define ADC_CEOCFR_EOC_CH46(x)                  (((uint32_t)(((uint32_t)(x)) << ADC_CEOCFR_EOC_CH46_SHIFT)) & ADC_CEOCFR_EOC_CH46_MASK)
#define ADC_CEOCFR_EOC_CH47_MASK                (0x8000U)
#define ADC_CEOCFR_EOC_CH47_SHIFT               (15U)
#define ADC_CEOCFR_EOC_CH47_WIDTH               (1U)
#define ADC_CEOCFR_EOC_CH47(x)                  (((uint32_t)(((uint32_t)(x)) << ADC_CEOCFR_EOC_CH47_SHIFT)) & ADC_CEOCFR_EOC_CH47_MASK)
/*! @} */

/*! @name IMR - Interrupt Mask Register */
/*! @{ */
#define ADC_IMR_MSKECH_MASK                      (0x1U)
#define ADC_IMR_MSKECH_SHIFT                     (0U)
#define ADC_IMR_MSKECH_WIDTH                     (1U)
#define ADC_IMR_MSKECH(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_IMR_MSKECH_SHIFT)) & ADC_IMR_MSKECH_MASK)
#define ADC_IMR_MSKEOC_MASK                      (0x2U)
#define ADC_IMR_MSKEOC_SHIFT                     (1U)
#define ADC_IMR_MSKEOC_WIDTH                     (1U)
#define ADC_IMR_MSKEOC(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_IMR_MSKEOC_SHIFT)) & ADC_IMR_MSKEOC_MASK)
#define ADC_IMR_MSKJECH_MASK                     (0x4U)
#define ADC_IMR_MSKJECH_SHIFT                    (2U)
#define ADC_IMR_MSKJECH_WIDTH                    (1U)
#define ADC_IMR_MSKJECH(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_IMR_MSKJECH_SHIFT)) & ADC_IMR_MSKJECH_MASK)
#define ADC_IMR_MSKJEOC_MASK                     (0x8U)
#define ADC_IMR_MSKJEOC_SHIFT                    (3U)
#define ADC_IMR_MSKJEOC_WIDTH                    (1U)
#define ADC_IMR_MSKJEOC(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_IMR_MSKJEOC_SHIFT)) & ADC_IMR_MSKJEOC_MASK)
#define ADC_IMR_MSKEOCTU_MASK                    (0x10U)
#define ADC_IMR_MSKEOCTU_SHIFT                   (4U)
#define ADC_IMR_MSKEOCTU_WIDTH                   (1U)
#define ADC_IMR_MSKEOCTU(x)                      (((uint32_t)(((uint32_t)(x)) << ADC_IMR_MSKEOCTU_SHIFT)) & ADC_IMR_MSKEOCTU_MASK)
/*! @} */

/*! @name CIMR0 - Channel Interrupt Mask Register 0 */
/*! @{ */
#define ADC_CIMR_CIM0_MASK                      (0x1U)
#define ADC_CIMR_CIM0_SHIFT                     (0U)
#define ADC_CIMR_CIM0_WIDTH                     (1U)
#define ADC_CIMR_CIM0(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_CIMR_CIM0_SHIFT)) & ADC_CIMR_CIM0_MASK)
#define ADC_CIMR_CIM1_MASK                      (0x2U)
#define ADC_CIMR_CIM1_SHIFT                     (1U)
#define ADC_CIMR_CIM1_WIDTH                     (1U)
#define ADC_CIMR_CIM1(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_CIMR_CIM1_SHIFT)) & ADC_CIMR_CIM1_MASK)
#define ADC_CIMR_CIM2_MASK                      (0x4U)
#define ADC_CIMR_CIM2_SHIFT                     (2U)
#define ADC_CIMR_CIM2_WIDTH                     (1U)
#define ADC_CIMR_CIM2(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_CIMR_CIM2_SHIFT)) & ADC_CIMR_CIM2_MASK)
#define ADC_CIMR_CIM3_MASK                      (0x8U)
#define ADC_CIMR_CIM3_SHIFT                     (3U)
#define ADC_CIMR_CIM3_WIDTH                     (1U)
#define ADC_CIMR_CIM3(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_CIMR_CIM3_SHIFT)) & ADC_CIMR_CIM3_MASK)
#define ADC_CIMR_CIM4_MASK                      (0x10U)
#define ADC_CIMR_CIM4_SHIFT                     (4U)
#define ADC_CIMR_CIM4_WIDTH                     (1U)
#define ADC_CIMR_CIM4(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_CIMR_CIM4_SHIFT)) & ADC_CIMR_CIM4_MASK)
#define ADC_CIMR_CIM5_MASK                      (0x20U)
#define ADC_CIMR_CIM5_SHIFT                     (5U)
#define ADC_CIMR_CIM5_WIDTH                     (1U)
#define ADC_CIMR_CIM5(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_CIMR_CIM5_SHIFT)) & ADC_CIMR_CIM5_MASK)
#define ADC_CIMR_CIM6_MASK                      (0x40U)
#define ADC_CIMR_CIM6_SHIFT                     (6U)
#define ADC_CIMR_CIM6_WIDTH                     (1U)
#define ADC_CIMR_CIM6(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_CIMR_CIM6_SHIFT)) & ADC_CIMR_CIM6_MASK)
#define ADC_CIMR_CIM7_MASK                      (0x80U)
#define ADC_CIMR_CIM7_SHIFT                     (7U)
#define ADC_CIMR_CIM7_WIDTH                     (1U)
#define ADC_CIMR_CIM7(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_CIMR_CIM7_SHIFT)) & ADC_CIMR_CIM7_MASK)
#define ADC_CIMR_CIM32_MASK                     (0x1U)
#define ADC_CIMR_CIM32_SHIFT                    (0U)
#define ADC_CIMR_CIM32_WIDTH                    (1U)
#define ADC_CIMR_CIM32(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_CIMR_CIM32_SHIFT)) & ADC_CIMR_CIM32_MASK)
#define ADC_CIMR_CIM33_MASK                     (0x2U)
#define ADC_CIMR_CIM33_SHIFT                    (1U)
#define ADC_CIMR_CIM33_WIDTH                    (1U)
#define ADC_CIMR_CIM33(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_CIMR_CIM33_SHIFT)) & ADC_CIMR_CIM33_MASK)
#define ADC_CIMR_CIM34_MASK                     (0x4U)
#define ADC_CIMR_CIM34_SHIFT                    (2U)
#define ADC_CIMR_CIM34_WIDTH                    (1U)
#define ADC_CIMR_CIM34(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_CIMR_CIM34_SHIFT)) & ADC_CIMR_CIM34_MASK)
#define ADC_CIMR_CIM35_MASK                     (0x8U)
#define ADC_CIMR_CIM35_SHIFT                    (3U)
#define ADC_CIMR_CIM35_WIDTH                    (1U)
#define ADC_CIMR_CIM35(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_CIMR_CIM35_SHIFT)) & ADC_CIMR_CIM35_MASK)
#define ADC_CIMR_CIM36_MASK                     (0x10U)
#define ADC_CIMR_CIM36_SHIFT                    (4U)
#define ADC_CIMR_CIM36_WIDTH                    (1U)
#define ADC_CIMR_CIM36(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_CIMR_CIM36_SHIFT)) & ADC_CIMR_CIM36_MASK)
#define ADC_CIMR_CIM37_MASK                     (0x20U)
#define ADC_CIMR_CIM37_SHIFT                    (5U)
#define ADC_CIMR_CIM37_WIDTH                    (1U)
#define ADC_CIMR_CIM37(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_CIMR_CIM37_SHIFT)) & ADC_CIMR_CIM37_MASK)
#define ADC_CIMR_CIM38_MASK                     (0x40U)
#define ADC_CIMR_CIM38_SHIFT                    (6U)
#define ADC_CIMR_CIM38_WIDTH                    (1U)
#define ADC_CIMR_CIM38(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_CIMR_CIM38_SHIFT)) & ADC_CIMR_CIM38_MASK)
#define ADC_CIMR_CIM39_MASK                     (0x80U)
#define ADC_CIMR_CIM39_SHIFT                    (7U)
#define ADC_CIMR_CIM39_WIDTH                    (1U)
#define ADC_CIMR_CIM39(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_CIMR_CIM39_SHIFT)) & ADC_CIMR_CIM39_MASK)
#define ADC_CIMR_CIM40_MASK                     (0x100U)
#define ADC_CIMR_CIM40_SHIFT                    (8U)
#define ADC_CIMR_CIM40_WIDTH                    (1U)
#define ADC_CIMR_CIM40(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_CIMR_CIM40_SHIFT)) & ADC_CIMR_CIM40_MASK)
#define ADC_CIMR_CIM41_MASK                     (0x200U)
#define ADC_CIMR_CIM41_SHIFT                    (9U)
#define ADC_CIMR_CIM41_WIDTH                    (1U)
#define ADC_CIMR_CIM41(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_CIMR_CIM41_SHIFT)) & ADC_CIMR_CIM41_MASK)
#define ADC_CIMR_CIM42_MASK                     (0x400U)
#define ADC_CIMR_CIM42_SHIFT                    (10U)
#define ADC_CIMR_CIM42_WIDTH                    (1U)
#define ADC_CIMR_CIM42(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_CIMR_CIM42_SHIFT)) & ADC_CIMR_CIM42_MASK)
#define ADC_CIMR_CIM43_MASK                     (0x800U)
#define ADC_CIMR_CIM43_SHIFT                    (11U)
#define ADC_CIMR_CIM43_WIDTH                    (1U)
#define ADC_CIMR_CIM43(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_CIMR_CIM43_SHIFT)) & ADC_CIMR_CIM43_MASK)
#define ADC_CIMR_CIM44_MASK                     (0x1000U)
#define ADC_CIMR_CIM44_SHIFT                    (12U)
#define ADC_CIMR_CIM44_WIDTH                    (1U)
#define ADC_CIMR_CIM44(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_CIMR_CIM44_SHIFT)) & ADC_CIMR_CIM44_MASK)
#define ADC_CIMR_CIM45_MASK                     (0x2000U)
#define ADC_CIMR_CIM45_SHIFT                    (13U)
#define ADC_CIMR_CIM45_WIDTH                    (1U)
#define ADC_CIMR_CIM45(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_CIMR_CIM45_SHIFT)) & ADC_CIMR_CIM45_MASK)
#define ADC_CIMR_CIM46_MASK                     (0x4000U)
#define ADC_CIMR_CIM46_SHIFT                    (14U)
#define ADC_CIMR_CIM46_WIDTH                    (1U)
#define ADC_CIMR_CIM46(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_CIMR_CIM46_SHIFT)) & ADC_CIMR_CIM46_MASK)
#define ADC_CIMR_CIM47_MASK                     (0x8000U)
#define ADC_CIMR_CIM47_SHIFT                    (15U)
#define ADC_CIMR_CIM47_WIDTH                    (1U)
#define ADC_CIMR_CIM47(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_CIMR_CIM47_SHIFT)) & ADC_CIMR_CIM47_MASK)
/*! @} */

/*! @name WTISR - Watchdog Threshold Interrupt Status Register */
/*! @{ */
#define ADC_WTISR_WDG0L_MASK                     (0x1U)
#define ADC_WTISR_WDG0L_SHIFT                    (0U)
#define ADC_WTISR_WDG0L_WIDTH                    (1U)
#define ADC_WTISR_WDG0L(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_WTISR_WDG0L_SHIFT)) & ADC_WTISR_WDG0L_MASK)
#define ADC_WTISR_WDG0H_MASK                     (0x2U)
#define ADC_WTISR_WDG0H_SHIFT                    (1U)
#define ADC_WTISR_WDG0H_WIDTH                    (1U)
#define ADC_WTISR_WDG0H(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_WTISR_WDG0H_SHIFT)) & ADC_WTISR_WDG0H_MASK)
#define ADC_WTISR_WDG1L_MASK                     (0x4U)
#define ADC_WTISR_WDG1L_SHIFT                    (2U)
#define ADC_WTISR_WDG1L_WIDTH                    (1U)
#define ADC_WTISR_WDG1L(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_WTISR_WDG1L_SHIFT)) & ADC_WTISR_WDG1L_MASK)
#define ADC_WTISR_WDG1H_MASK                     (0x8U)
#define ADC_WTISR_WDG1H_SHIFT                    (3U)
#define ADC_WTISR_WDG1H_WIDTH                    (1U)
#define ADC_WTISR_WDG1H(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_WTISR_WDG1H_SHIFT)) & ADC_WTISR_WDG1H_MASK)
#define ADC_WTISR_WDG2L_MASK                     (0x10U)
#define ADC_WTISR_WDG2L_SHIFT                    (4U)
#define ADC_WTISR_WDG2L_WIDTH                    (1U)
#define ADC_WTISR_WDG2L(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_WTISR_WDG2L_SHIFT)) & ADC_WTISR_WDG2L_MASK)
#define ADC_WTISR_WDG2H_MASK                     (0x20U)
#define ADC_WTISR_WDG2H_SHIFT                    (5U)
#define ADC_WTISR_WDG2H_WIDTH                    (1U)
#define ADC_WTISR_WDG2H(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_WTISR_WDG2H_SHIFT)) & ADC_WTISR_WDG2H_MASK)
#define ADC_WTISR_WDG3L_MASK                     (0x40U)
#define ADC_WTISR_WDG3L_SHIFT                    (6U)
#define ADC_WTISR_WDG3L_WIDTH                    (1U)
#define ADC_WTISR_WDG3L(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_WTISR_WDG3L_SHIFT)) & ADC_WTISR_WDG3L_MASK)
#define ADC_WTISR_WDG3H_MASK                     (0x80U)
#define ADC_WTISR_WDG3H_SHIFT                    (7U)
#define ADC_WTISR_WDG3H_WIDTH                    (1U)
#define ADC_WTISR_WDG3H(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_WTISR_WDG3H_SHIFT)) & ADC_WTISR_WDG3H_MASK)
#define ADC_WTISR_WDG4L_MASK                     (0x100U)
#define ADC_WTISR_WDG4L_SHIFT                    (8U)
#define ADC_WTISR_WDG4L_WIDTH                    (1U)
#define ADC_WTISR_WDG4L(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_WTISR_WDG4L_SHIFT)) & ADC_WTISR_WDG4L_MASK)
#define ADC_WTISR_WDG4H_MASK                     (0x200U)
#define ADC_WTISR_WDG4H_SHIFT                    (9U)
#define ADC_WTISR_WDG4H_WIDTH                    (1U)
#define ADC_WTISR_WDG4H(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_WTISR_WDG4H_SHIFT)) & ADC_WTISR_WDG4H_MASK)
#define ADC_WTISR_WDG5L_MASK                     (0x400U)
#define ADC_WTISR_WDG5L_SHIFT                    (10U)
#define ADC_WTISR_WDG5L_WIDTH                    (1U)
#define ADC_WTISR_WDG5L(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_WTISR_WDG5L_SHIFT)) & ADC_WTISR_WDG5L_MASK)
#define ADC_WTISR_WDG5H_MASK                     (0x800U)
#define ADC_WTISR_WDG5H_SHIFT                    (11U)
#define ADC_WTISR_WDG5H_WIDTH                    (1U)
#define ADC_WTISR_WDG5H(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_WTISR_WDG5H_SHIFT)) & ADC_WTISR_WDG5H_MASK)
#define ADC_WTISR_WDG6L_MASK                     (0x1000U)
#define ADC_WTISR_WDG6L_SHIFT                    (12U)
#define ADC_WTISR_WDG6L_WIDTH                    (1U)
#define ADC_WTISR_WDG6L(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_WTISR_WDG6L_SHIFT)) & ADC_WTISR_WDG6L_MASK)
#define ADC_WTISR_WDG6H_MASK                     (0x2000U)
#define ADC_WTISR_WDG6H_SHIFT                    (13U)
#define ADC_WTISR_WDG6H_WIDTH                    (1U)
#define ADC_WTISR_WDG6H(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_WTISR_WDG6H_SHIFT)) & ADC_WTISR_WDG6H_MASK)
#define ADC_WTISR_WDG7L_MASK                     (0x4000U)
#define ADC_WTISR_WDG7L_SHIFT                    (14U)
#define ADC_WTISR_WDG7L_WIDTH                    (1U)
#define ADC_WTISR_WDG7L(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_WTISR_WDG7L_SHIFT)) & ADC_WTISR_WDG7L_MASK)
#define ADC_WTISR_WDG7H_MASK                     (0x8000U)
#define ADC_WTISR_WDG7H_SHIFT                    (15U)
#define ADC_WTISR_WDG7H_WIDTH                    (1U)
#define ADC_WTISR_WDG7H(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_WTISR_WDG7H_SHIFT)) & ADC_WTISR_WDG7H_MASK)
/*! @} */

/*! @name WTIMR - Watchdog Threshold Interrupt Mask Register */
/*! @{ */
#define ADC_WTIMR_MSKWDG0L_MASK                  (0x1U)
#define ADC_WTIMR_MSKWDG0L_SHIFT                 (0U)
#define ADC_WTIMR_MSKWDG0L_WIDTH                 (1U)
#define ADC_WTIMR_MSKWDG0L(x)                    (((uint32_t)(((uint32_t)(x)) << ADC_WTIMR_MSKWDG0L_SHIFT)) & ADC_WTIMR_MSKWDG0L_MASK)
#define ADC_WTIMR_MSKWDG0H_MASK                  (0x2U)
#define ADC_WTIMR_MSKWDG0H_SHIFT                 (1U)
#define ADC_WTIMR_MSKWDG0H_WIDTH                 (1U)
#define ADC_WTIMR_MSKWDG0H(x)                    (((uint32_t)(((uint32_t)(x)) << ADC_WTIMR_MSKWDG0H_SHIFT)) & ADC_WTIMR_MSKWDG0H_MASK)
#define ADC_WTIMR_MSKWDG1L_MASK                  (0x4U)
#define ADC_WTIMR_MSKWDG1L_SHIFT                 (2U)
#define ADC_WTIMR_MSKWDG1L_WIDTH                 (1U)
#define ADC_WTIMR_MSKWDG1L(x)                    (((uint32_t)(((uint32_t)(x)) << ADC_WTIMR_MSKWDG1L_SHIFT)) & ADC_WTIMR_MSKWDG1L_MASK)
#define ADC_WTIMR_MSKWDG1H_MASK                  (0x8U)
#define ADC_WTIMR_MSKWDG1H_SHIFT                 (3U)
#define ADC_WTIMR_MSKWDG1H_WIDTH                 (1U)
#define ADC_WTIMR_MSKWDG1H(x)                    (((uint32_t)(((uint32_t)(x)) << ADC_WTIMR_MSKWDG1H_SHIFT)) & ADC_WTIMR_MSKWDG1H_MASK)
#define ADC_WTIMR_MSKWDG2L_MASK                  (0x10U)
#define ADC_WTIMR_MSKWDG2L_SHIFT                 (4U)
#define ADC_WTIMR_MSKWDG2L_WIDTH                 (1U)
#define ADC_WTIMR_MSKWDG2L(x)                    (((uint32_t)(((uint32_t)(x)) << ADC_WTIMR_MSKWDG2L_SHIFT)) & ADC_WTIMR_MSKWDG2L_MASK)
#define ADC_WTIMR_MSKWDG2H_MASK                  (0x20U)
#define ADC_WTIMR_MSKWDG2H_SHIFT                 (5U)
#define ADC_WTIMR_MSKWDG2H_WIDTH                 (1U)
#define ADC_WTIMR_MSKWDG2H(x)                    (((uint32_t)(((uint32_t)(x)) << ADC_WTIMR_MSKWDG2H_SHIFT)) & ADC_WTIMR_MSKWDG2H_MASK)
#define ADC_WTIMR_MSKWDG3L_MASK                  (0x40U)
#define ADC_WTIMR_MSKWDG3L_SHIFT                 (6U)
#define ADC_WTIMR_MSKWDG3L_WIDTH                 (1U)
#define ADC_WTIMR_MSKWDG3L(x)                    (((uint32_t)(((uint32_t)(x)) << ADC_WTIMR_MSKWDG3L_SHIFT)) & ADC_WTIMR_MSKWDG3L_MASK)
#define ADC_WTIMR_MSKWDG3H_MASK                  (0x80U)
#define ADC_WTIMR_MSKWDG3H_SHIFT                 (7U)
#define ADC_WTIMR_MSKWDG3H_WIDTH                 (1U)
#define ADC_WTIMR_MSKWDG3H(x)                    (((uint32_t)(((uint32_t)(x)) << ADC_WTIMR_MSKWDG3H_SHIFT)) & ADC_WTIMR_MSKWDG3H_MASK)
#define ADC_WTIMR_MSKWDG4L_MASK                  (0x100U)
#define ADC_WTIMR_MSKWDG4L_SHIFT                 (8U)
#define ADC_WTIMR_MSKWDG4L_WIDTH                 (1U)
#define ADC_WTIMR_MSKWDG4L(x)                    (((uint32_t)(((uint32_t)(x)) << ADC_WTIMR_MSKWDG4L_SHIFT)) & ADC_WTIMR_MSKWDG4L_MASK)
#define ADC_WTIMR_MSKWDG4H_MASK                  (0x200U)
#define ADC_WTIMR_MSKWDG4H_SHIFT                 (9U)
#define ADC_WTIMR_MSKWDG4H_WIDTH                 (1U)
#define ADC_WTIMR_MSKWDG4H(x)                    (((uint32_t)(((uint32_t)(x)) << ADC_WTIMR_MSKWDG4H_SHIFT)) & ADC_WTIMR_MSKWDG4H_MASK)
#define ADC_WTIMR_MSKWDG5L_MASK                  (0x400U)
#define ADC_WTIMR_MSKWDG5L_SHIFT                 (10U)
#define ADC_WTIMR_MSKWDG5L_WIDTH                 (1U)
#define ADC_WTIMR_MSKWDG5L(x)                    (((uint32_t)(((uint32_t)(x)) << ADC_WTIMR_MSKWDG5L_SHIFT)) & ADC_WTIMR_MSKWDG5L_MASK)
#define ADC_WTIMR_MSKWDG5H_MASK                  (0x800U)
#define ADC_WTIMR_MSKWDG5H_SHIFT                 (11U)
#define ADC_WTIMR_MSKWDG5H_WIDTH                 (1U)
#define ADC_WTIMR_MSKWDG5H(x)                    (((uint32_t)(((uint32_t)(x)) << ADC_WTIMR_MSKWDG5H_SHIFT)) & ADC_WTIMR_MSKWDG5H_MASK)
#define ADC_WTIMR_MSKWDG6L_MASK                  (0x1000U)
#define ADC_WTIMR_MSKWDG6L_SHIFT                 (12U)
#define ADC_WTIMR_MSKWDG6L_WIDTH                 (1U)
#define ADC_WTIMR_MSKWDG6L(x)                    (((uint32_t)(((uint32_t)(x)) << ADC_WTIMR_MSKWDG6L_SHIFT)) & ADC_WTIMR_MSKWDG6L_MASK)
#define ADC_WTIMR_MSKWDG6H_MASK                  (0x2000U)
#define ADC_WTIMR_MSKWDG6H_SHIFT                 (13U)
#define ADC_WTIMR_MSKWDG6H_WIDTH                 (1U)
#define ADC_WTIMR_MSKWDG6H(x)                    (((uint32_t)(((uint32_t)(x)) << ADC_WTIMR_MSKWDG6H_SHIFT)) & ADC_WTIMR_MSKWDG6H_MASK)
#define ADC_WTIMR_MSKWDG7L_MASK                  (0x4000U)
#define ADC_WTIMR_MSKWDG7L_SHIFT                 (14U)
#define ADC_WTIMR_MSKWDG7L_WIDTH                 (1U)
#define ADC_WTIMR_MSKWDG7L(x)                    (((uint32_t)(((uint32_t)(x)) << ADC_WTIMR_MSKWDG7L_SHIFT)) & ADC_WTIMR_MSKWDG7L_MASK)
#define ADC_WTIMR_MSKWDG7H_MASK                  (0x8000U)
#define ADC_WTIMR_MSKWDG7H_SHIFT                 (15U)
#define ADC_WTIMR_MSKWDG7H_WIDTH                 (1U)
#define ADC_WTIMR_MSKWDG7H(x)                    (((uint32_t)(((uint32_t)(x)) << ADC_WTIMR_MSKWDG7H_SHIFT)) & ADC_WTIMR_MSKWDG7H_MASK)
/*! @} */

/*! @name DMAE - DMAE Register */
/*! @{ */
#define ADC_DMAE_DMAEN_MASK                      (0x1U)
#define ADC_DMAE_DMAEN_SHIFT                     (0U)
#define ADC_DMAE_DMAEN_WIDTH                     (1U)
#define ADC_DMAE_DMAEN(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_DMAE_DMAEN_SHIFT)) & ADC_DMAE_DMAEN_MASK)
#define ADC_DMAE_DCLR_MASK                       (0x2U)
#define ADC_DMAE_DCLR_SHIFT                      (1U)
#define ADC_DMAE_DCLR_WIDTH                      (1U)
#define ADC_DMAE_DCLR(x)                         (((uint32_t)(((uint32_t)(x)) << ADC_DMAE_DCLR_SHIFT)) & ADC_DMAE_DCLR_MASK)
/*! @} */

/*! @name DMAR - DMA Register */
/*! @{ */
#define ADC_DMAR_DMA0_MASK                      (0x1U)
#define ADC_DMAR_DMA0_SHIFT                     (0U)
#define ADC_DMAR_DMA0_WIDTH                     (1U)
#define ADC_DMAR_DMA0(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_DMAR_DMA0_SHIFT)) & ADC_DMAR_DMA0_MASK)
#define ADC_DMAR_DMA1_MASK                      (0x2U)
#define ADC_DMAR_DMA1_SHIFT                     (1U)
#define ADC_DMAR_DMA1_WIDTH                     (1U)
#define ADC_DMAR_DMA1(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_DMAR_DMA1_SHIFT)) & ADC_DMAR_DMA1_MASK)
#define ADC_DMAR_DMA2_MASK                      (0x4U)
#define ADC_DMAR_DMA2_SHIFT                     (2U)
#define ADC_DMAR_DMA2_WIDTH                     (1U)
#define ADC_DMAR_DMA2(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_DMAR_DMA2_SHIFT)) & ADC_DMAR_DMA2_MASK)
#define ADC_DMAR_DMA3_MASK                      (0x8U)
#define ADC_DMAR_DMA3_SHIFT                     (3U)
#define ADC_DMAR_DMA3_WIDTH                     (1U)
#define ADC_DMAR_DMA3(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_DMAR_DMA3_SHIFT)) & ADC_DMAR_DMA3_MASK)
#define ADC_DMAR_DMA4_MASK                      (0x10U)
#define ADC_DMAR_DMA4_SHIFT                     (4U)
#define ADC_DMAR_DMA4_WIDTH                     (1U)
#define ADC_DMAR_DMA4(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_DMAR_DMA4_SHIFT)) & ADC_DMAR_DMA4_MASK)
#define ADC_DMAR_DMA5_MASK                      (0x20U)
#define ADC_DMAR_DMA5_SHIFT                     (5U)
#define ADC_DMAR_DMA5_WIDTH                     (1U)
#define ADC_DMAR_DMA5(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_DMAR_DMA5_SHIFT)) & ADC_DMAR_DMA5_MASK)
#define ADC_DMAR_DMA6_MASK                      (0x40U)
#define ADC_DMAR_DMA6_SHIFT                     (6U)
#define ADC_DMAR_DMA6_WIDTH                     (1U)
#define ADC_DMAR_DMA6(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_DMAR_DMA6_SHIFT)) & ADC_DMAR_DMA6_MASK)
#define ADC_DMAR_DMA7_MASK                      (0x80U)
#define ADC_DMAR_DMA7_SHIFT                     (7U)
#define ADC_DMAR_DMA7_WIDTH                     (1U)
#define ADC_DMAR_DMA7(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_DMAR_DMA7_SHIFT)) & ADC_DMAR_DMA7_MASK)
#define ADC_DMAR_DMA32_MASK                     (0x1U)
#define ADC_DMAR_DMA32_SHIFT                    (0U)
#define ADC_DMAR_DMA32_WIDTH                    (1U)
#define ADC_DMAR_DMA32(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_DMAR_DMA32_SHIFT)) & ADC_DMAR_DMA32_MASK)
#define ADC_DMAR_DMA33_MASK                     (0x2U)
#define ADC_DMAR_DMA33_SHIFT                    (1U)
#define ADC_DMAR_DMA33_WIDTH                    (1U)
#define ADC_DMAR_DMA33(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_DMAR_DMA33_SHIFT)) & ADC_DMAR_DMA33_MASK)
#define ADC_DMAR_DMA34_MASK                     (0x4U)
#define ADC_DMAR_DMA34_SHIFT                    (2U)
#define ADC_DMAR_DMA34_WIDTH                    (1U)
#define ADC_DMAR_DMA34(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_DMAR_DMA34_SHIFT)) & ADC_DMAR_DMA34_MASK)
#define ADC_DMAR_DMA35_MASK                     (0x8U)
#define ADC_DMAR_DMA35_SHIFT                    (3U)
#define ADC_DMAR_DMA35_WIDTH                    (1U)
#define ADC_DMAR_DMA35(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_DMAR_DMA35_SHIFT)) & ADC_DMAR_DMA35_MASK)
#define ADC_DMAR_DMA36_MASK                     (0x10U)
#define ADC_DMAR_DMA36_SHIFT                    (4U)
#define ADC_DMAR_DMA36_WIDTH                    (1U)
#define ADC_DMAR_DMA36(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_DMAR_DMA36_SHIFT)) & ADC_DMAR_DMA36_MASK)
#define ADC_DMAR_DMA37_MASK                     (0x20U)
#define ADC_DMAR_DMA37_SHIFT                    (5U)
#define ADC_DMAR_DMA37_WIDTH                    (1U)
#define ADC_DMAR_DMA37(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_DMAR_DMA37_SHIFT)) & ADC_DMAR_DMA37_MASK)
#define ADC_DMAR_DMA38_MASK                     (0x40U)
#define ADC_DMAR_DMA38_SHIFT                    (6U)
#define ADC_DMAR_DMA38_WIDTH                    (1U)
#define ADC_DMAR_DMA38(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_DMAR_DMA38_SHIFT)) & ADC_DMAR_DMA38_MASK)
#define ADC_DMAR_DMA39_MASK                     (0x80U)
#define ADC_DMAR_DMA39_SHIFT                    (7U)
#define ADC_DMAR_DMA39_WIDTH                    (1U)
#define ADC_DMAR_DMA39(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_DMAR_DMA39_SHIFT)) & ADC_DMAR_DMA39_MASK)
#define ADC_DMAR_DMA40_MASK                     (0x100U)
#define ADC_DMAR_DMA40_SHIFT                    (8U)
#define ADC_DMAR_DMA40_WIDTH                    (1U)
#define ADC_DMAR_DMA40(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_DMAR_DMA40_SHIFT)) & ADC_DMAR_DMA40_MASK)
#define ADC_DMAR_DMA41_MASK                     (0x200U)
#define ADC_DMAR_DMA41_SHIFT                    (9U)
#define ADC_DMAR_DMA41_WIDTH                    (1U)
#define ADC_DMAR_DMA41(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_DMAR_DMA41_SHIFT)) & ADC_DMAR_DMA41_MASK)
#define ADC_DMAR_DMA42_MASK                     (0x400U)
#define ADC_DMAR_DMA42_SHIFT                    (10U)
#define ADC_DMAR_DMA42_WIDTH                    (1U)
#define ADC_DMAR_DMA42(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_DMAR_DMA42_SHIFT)) & ADC_DMAR_DMA42_MASK)
#define ADC_DMAR_DMA43_MASK                     (0x800U)
#define ADC_DMAR_DMA43_SHIFT                    (11U)
#define ADC_DMAR_DMA43_WIDTH                    (1U)
#define ADC_DMAR_DMA43(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_DMAR_DMA43_SHIFT)) & ADC_DMAR_DMA43_MASK)
#define ADC_DMAR_DMA44_MASK                     (0x1000U)
#define ADC_DMAR_DMA44_SHIFT                    (12U)
#define ADC_DMAR_DMA44_WIDTH                    (1U)
#define ADC_DMAR_DMA44(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_DMAR_DMA44_SHIFT)) & ADC_DMAR_DMA44_MASK)
#define ADC_DMAR_DMA45_MASK                     (0x2000U)
#define ADC_DMAR_DMA45_SHIFT                    (13U)
#define ADC_DMAR_DMA45_WIDTH                    (1U)
#define ADC_DMAR_DMA45(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_DMAR_DMA45_SHIFT)) & ADC_DMAR_DMA45_MASK)
#define ADC_DMAR_DMA46_MASK                     (0x4000U)
#define ADC_DMAR_DMA46_SHIFT                    (14U)
#define ADC_DMAR_DMA46_WIDTH                    (1U)
#define ADC_DMAR_DMA46(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_DMAR_DMA46_SHIFT)) & ADC_DMAR_DMA46_MASK)
#define ADC_DMAR_DMA47_MASK                     (0x8000U)
#define ADC_DMAR_DMA47_SHIFT                    (15U)
#define ADC_DMAR_DMA47_WIDTH                    (1U)
#define ADC_DMAR_DMA47(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_DMAR_DMA47_SHIFT)) & ADC_DMAR_DMA47_MASK)
/*! @} */

/*! @name THRHLR0 - Analog Watchdog Threshold Register 0 */
/*! @{ */
#define ADC_THRHLR0_THRL_MASK                    (0xFFFU)
#define ADC_THRHLR0_THRL_SHIFT                   (0U)
#define ADC_THRHLR0_THRL_WIDTH                   (12U)
#define ADC_THRHLR0_THRL(x)                      (((uint32_t)(((uint32_t)(x)) << ADC_THRHLR0_THRL_SHIFT)) & ADC_THRHLR0_THRL_MASK)
#define ADC_THRHLR0_THRH_MASK                    (0xFFF0000U)
#define ADC_THRHLR0_THRH_SHIFT                   (16U)
#define ADC_THRHLR0_THRH_WIDTH                   (12U)
#define ADC_THRHLR0_THRH(x)                      (((uint32_t)(((uint32_t)(x)) << ADC_THRHLR0_THRH_SHIFT)) & ADC_THRHLR0_THRH_MASK)
/*! @} */

/*! @name THRHLR1 - Analog Watchdog Threshold Register 1 */
/*! @{ */
#define ADC_THRHLR1_THRL_MASK                    (0xFFFU)
#define ADC_THRHLR1_THRL_SHIFT                   (0U)
#define ADC_THRHLR1_THRL_WIDTH                   (12U)
#define ADC_THRHLR1_THRL(x)                      (((uint32_t)(((uint32_t)(x)) << ADC_THRHLR1_THRL_SHIFT)) & ADC_THRHLR1_THRL_MASK)
#define ADC_THRHLR1_THRH_MASK                    (0xFFF0000U)
#define ADC_THRHLR1_THRH_SHIFT                   (16U)
#define ADC_THRHLR1_THRH_WIDTH                   (12U)
#define ADC_THRHLR1_THRH(x)                      (((uint32_t)(((uint32_t)(x)) << ADC_THRHLR1_THRH_SHIFT)) & ADC_THRHLR1_THRH_MASK)
/*! @} */

/*! @name THRHLR2 - Analog Watchdog Threshold Register 2 */
/*! @{ */
#define ADC_THRHLR2_THRL_MASK                    (0xFFFU)
#define ADC_THRHLR2_THRL_SHIFT                   (0U)
#define ADC_THRHLR2_THRL_WIDTH                   (12U)
#define ADC_THRHLR2_THRL(x)                      (((uint32_t)(((uint32_t)(x)) << ADC_THRHLR2_THRL_SHIFT)) & ADC_THRHLR2_THRL_MASK)
#define ADC_THRHLR2_THRH_MASK                    (0xFFF0000U)
#define ADC_THRHLR2_THRH_SHIFT                   (16U)
#define ADC_THRHLR2_THRH_WIDTH                   (12U)
#define ADC_THRHLR2_THRH(x)                      (((uint32_t)(((uint32_t)(x)) << ADC_THRHLR2_THRH_SHIFT)) & ADC_THRHLR2_THRH_MASK)
/*! @} */

/*! @name THRHLR3 - Analog Watchdog Threshold Register 2 */
/*! @{ */
#define ADC_THRHLR3_THRL_MASK                    (0xFFFU)
#define ADC_THRHLR3_THRL_SHIFT                   (0U)
#define ADC_THRHLR3_THRL_WIDTH                   (12U)
#define ADC_THRHLR3_THRL(x)                      (((uint32_t)(((uint32_t)(x)) << ADC_THRHLR3_THRL_SHIFT)) & ADC_THRHLR3_THRL_MASK)
#define ADC_THRHLR3_THRH_MASK                    (0xFFF0000U)
#define ADC_THRHLR3_THRH_SHIFT                   (16U)
#define ADC_THRHLR3_THRH_WIDTH                   (12U)
#define ADC_THRHLR3_THRH(x)                      (((uint32_t)(((uint32_t)(x)) << ADC_THRHLR3_THRH_SHIFT)) & ADC_THRHLR3_THRH_MASK)
/*! @} */

/*! @name PSCR - Presampling Control Register */
/*! @{ */
#define ADC_PSCR_PRECONV_MASK                    (0x1U)
#define ADC_PSCR_PRECONV_SHIFT                   (0U)
#define ADC_PSCR_PRECONV_WIDTH                   (1U)
#define ADC_PSCR_PRECONV(x)                      (((uint32_t)(((uint32_t)(x)) << ADC_PSCR_PRECONV_SHIFT)) & ADC_PSCR_PRECONV_MASK)
#define ADC_PSCR_PREVAL0_MASK                    (0x6U)
#define ADC_PSCR_PREVAL0_SHIFT                   (1U)
#define ADC_PSCR_PREVAL0_WIDTH                   (2U)
#define ADC_PSCR_PREVAL0(x)                      (((uint32_t)(((uint32_t)(x)) << ADC_PSCR_PREVAL0_SHIFT)) & ADC_PSCR_PREVAL0_MASK)
#define ADC_PSCR_PREVAL1_MASK                    (0x18U)
#define ADC_PSCR_PREVAL1_SHIFT                   (3U)
#define ADC_PSCR_PREVAL1_WIDTH                   (2U)
#define ADC_PSCR_PREVAL1(x)                      (((uint32_t)(((uint32_t)(x)) << ADC_PSCR_PREVAL1_SHIFT)) & ADC_PSCR_PREVAL1_MASK)
/*! @} */

/*! @name PSR - Presampling Register */
/*! @{ */
#define ADC_PSR_PRES0_MASK                      (0x1U)
#define ADC_PSR_PRES0_SHIFT                     (0U)
#define ADC_PSR_PRES0_WIDTH                     (1U)
#define ADC_PSR_PRES0(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_PSR_PRES0_SHIFT)) & ADC_PSR_PRES0_MASK)
#define ADC_PSR_PRES1_MASK                      (0x2U)
#define ADC_PSR_PRES1_SHIFT                     (1U)
#define ADC_PSR_PRES1_WIDTH                     (1U)
#define ADC_PSR_PRES1(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_PSR_PRES1_SHIFT)) & ADC_PSR_PRES1_MASK)
#define ADC_PSR_PRES2_MASK                      (0x4U)
#define ADC_PSR_PRES2_SHIFT                     (2U)
#define ADC_PSR_PRES2_WIDTH                     (1U)
#define ADC_PSR_PRES2(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_PSR_PRES2_SHIFT)) & ADC_PSR_PRES2_MASK)
#define ADC_PSR_PRES3_MASK                      (0x8U)
#define ADC_PSR_PRES3_SHIFT                     (3U)
#define ADC_PSR_PRES3_WIDTH                     (1U)
#define ADC_PSR_PRES3(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_PSR_PRES3_SHIFT)) & ADC_PSR_PRES3_MASK)
#define ADC_PSR_PRES4_MASK                      (0x10U)
#define ADC_PSR_PRES4_SHIFT                     (4U)
#define ADC_PSR_PRES4_WIDTH                     (1U)
#define ADC_PSR_PRES4(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_PSR_PRES4_SHIFT)) & ADC_PSR_PRES4_MASK)
#define ADC_PSR_PRES5_MASK                      (0x20U)
#define ADC_PSR_PRES5_SHIFT                     (5U)
#define ADC_PSR_PRES5_WIDTH                     (1U)
#define ADC_PSR_PRES5(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_PSR_PRES5_SHIFT)) & ADC_PSR_PRES5_MASK)
#define ADC_PSR_PRES6_MASK                      (0x40U)
#define ADC_PSR_PRES6_SHIFT                     (6U)
#define ADC_PSR_PRES6_WIDTH                     (1U)
#define ADC_PSR_PRES6(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_PSR_PRES6_SHIFT)) & ADC_PSR_PRES6_MASK)
#define ADC_PSR_PRES7_MASK                      (0x80U)
#define ADC_PSR_PRES7_SHIFT                     (7U)
#define ADC_PSR_PRES7_WIDTH                     (1U)
#define ADC_PSR_PRES7(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_PSR_PRES7_SHIFT)) & ADC_PSR_PRES7_MASK)
#define ADC_PSR_PRES32_MASK                     (0x1U)
#define ADC_PSR_PRES32_SHIFT                    (0U)
#define ADC_PSR_PRES32_WIDTH                    (1U)
#define ADC_PSR_PRES32(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_PSR_PRES32_SHIFT)) & ADC_PSR_PRES32_MASK)
#define ADC_PSR_PRES33_MASK                     (0x2U)
#define ADC_PSR_PRES33_SHIFT                    (1U)
#define ADC_PSR_PRES33_WIDTH                    (1U)
#define ADC_PSR_PRES33(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_PSR_PRES33_SHIFT)) & ADC_PSR_PRES33_MASK)
#define ADC_PSR_PRES34_MASK                     (0x4U)
#define ADC_PSR_PRES34_SHIFT                    (2U)
#define ADC_PSR_PRES34_WIDTH                    (1U)
#define ADC_PSR_PRES34(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_PSR_PRES34_SHIFT)) & ADC_PSR_PRES34_MASK)
#define ADC_PSR_PRES35_MASK                     (0x8U)
#define ADC_PSR_PRES35_SHIFT                    (3U)
#define ADC_PSR_PRES35_WIDTH                    (1U)
#define ADC_PSR_PRES35(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_PSR_PRES35_SHIFT)) & ADC_PSR_PRES35_MASK)
#define ADC_PSR_PRES36_MASK                     (0x10U)
#define ADC_PSR_PRES36_SHIFT                    (4U)
#define ADC_PSR_PRES36_WIDTH                    (1U)
#define ADC_PSR_PRES36(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_PSR_PRES36_SHIFT)) & ADC_PSR_PRES36_MASK)
#define ADC_PSR_PRES37_MASK                     (0x20U)
#define ADC_PSR_PRES37_SHIFT                    (5U)
#define ADC_PSR_PRES37_WIDTH                    (1U)
#define ADC_PSR_PRES37(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_PSR_PRES37_SHIFT)) & ADC_PSR_PRES37_MASK)
#define ADC_PSR_PRES38_MASK                     (0x40U)
#define ADC_PSR_PRES38_SHIFT                    (6U)
#define ADC_PSR_PRES38_WIDTH                    (1U)
#define ADC_PSR_PRES38(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_PSR_PRES38_SHIFT)) & ADC_PSR_PRES38_MASK)
#define ADC_PSR_PRES39_MASK                     (0x80U)
#define ADC_PSR_PRES39_SHIFT                    (7U)
#define ADC_PSR_PRES39_WIDTH                    (1U)
#define ADC_PSR_PRES39(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_PSR_PRES39_SHIFT)) & ADC_PSR_PRES39_MASK)
#define ADC_PSR_PRES40_MASK                     (0x100U)
#define ADC_PSR_PRES40_SHIFT                    (8U)
#define ADC_PSR_PRES40_WIDTH                    (1U)
#define ADC_PSR_PRES40(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_PSR_PRES40_SHIFT)) & ADC_PSR_PRES40_MASK)
#define ADC_PSR_PRES41_MASK                     (0x200U)
#define ADC_PSR_PRES41_SHIFT                    (9U)
#define ADC_PSR_PRES41_WIDTH                    (1U)
#define ADC_PSR_PRES41(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_PSR_PRES41_SHIFT)) & ADC_PSR_PRES41_MASK)
#define ADC_PSR_PRES42_MASK                     (0x400U)
#define ADC_PSR_PRES42_SHIFT                    (10U)
#define ADC_PSR_PRES42_WIDTH                    (1U)
#define ADC_PSR_PRES42(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_PSR_PRES42_SHIFT)) & ADC_PSR_PRES42_MASK)
#define ADC_PSR_PRES43_MASK                     (0x800U)
#define ADC_PSR_PRES43_SHIFT                    (11U)
#define ADC_PSR_PRES43_WIDTH                    (1U)
#define ADC_PSR_PRES43(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_PSR_PRES43_SHIFT)) & ADC_PSR_PRES43_MASK)
#define ADC_PSR_PRES44_MASK                     (0x1000U)
#define ADC_PSR_PRES44_SHIFT                    (12U)
#define ADC_PSR_PRES44_WIDTH                    (1U)
#define ADC_PSR_PRES44(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_PSR_PRES44_SHIFT)) & ADC_PSR_PRES44_MASK)
#define ADC_PSR_PRES45_MASK                     (0x2000U)
#define ADC_PSR_PRES45_SHIFT                    (13U)
#define ADC_PSR_PRES45_WIDTH                    (1U)
#define ADC_PSR_PRES45(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_PSR_PRES45_SHIFT)) & ADC_PSR_PRES45_MASK)
#define ADC_PSR_PRES46_MASK                     (0x4000U)
#define ADC_PSR_PRES46_SHIFT                    (14U)
#define ADC_PSR_PRES46_WIDTH                    (1U)
#define ADC_PSR_PRES46(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_PSR_PRES46_SHIFT)) & ADC_PSR_PRES46_MASK)
#define ADC_PSR_PRES47_MASK                     (0x8000U)
#define ADC_PSR_PRES47_SHIFT                    (15U)
#define ADC_PSR_PRES47_WIDTH                    (1U)
#define ADC_PSR_PRES47(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_PSR_PRES47_SHIFT)) & ADC_PSR_PRES47_MASK)
/*! @} */

/*! @name CTR0 - Conversion Timing Register 0 */
/*! @{ */
#define ADC_CTR_INPSAMP_MASK                    (0xFFU)
#define ADC_CTR_INPSAMP_SHIFT                   (0U)
#define ADC_CTR_INPSAMP_WIDTH                   (8U)
#define ADC_CTR_INPSAMP(x)                      (((uint32_t)(((uint32_t)(x)) << ADC_CTR_INPSAMP_SHIFT)) & ADC_CTR_INPSAMP_MASK)
/*! @} */

/*! @name CTR1 - Conversion Timing Register 1 */
/*! @{ */
#define ADC_CTR1_TSENSOR_SEL_MASK                (0x1U)
#define ADC_CTR1_TSENSOR_SEL_SHIFT               (0U)
#define ADC_CTR1_TSENSOR_SEL_WIDTH               (1U)
#define ADC_CTR1_TSENSOR_SEL(x)                  (((uint32_t)(((uint32_t)(x)) << ADC_CTR1_TSENSOR_SEL_SHIFT)) & ADC_CTR1_TSENSOR_SEL_MASK)
#define ADC_CTR1_INPSAMP_MASK                    (0xFEU)
#define ADC_CTR1_INPSAMP_SHIFT                   (1U)
#define ADC_CTR1_INPSAMP_WIDTH                   (7U)
#define ADC_CTR1_INPSAMP(x)                      (((uint32_t)(((uint32_t)(x)) << ADC_CTR1_INPSAMP_SHIFT)) & ADC_CTR1_INPSAMP_MASK)
/*! @} */

/*! @name NCMR - Normal Conversion Mask Register */
/*! @{ */
#define ADC_NCMR_CH0_MASK                       (0x1U)
#define ADC_NCMR_CH0_SHIFT                      (0U)
#define ADC_NCMR_CH0_WIDTH                      (1U)
#define ADC_NCMR_CH0(x)                         (((uint32_t)(((uint32_t)(x)) << ADC_NCMR_CH0_SHIFT)) & ADC_NCMR_CH0_MASK)
#define ADC_NCMR_CH1_MASK                       (0x2U)
#define ADC_NCMR_CH1_SHIFT                      (1U)
#define ADC_NCMR_CH1_WIDTH                      (1U)
#define ADC_NCMR_CH1(x)                         (((uint32_t)(((uint32_t)(x)) << ADC_NCMR_CH1_SHIFT)) & ADC_NCMR_CH1_MASK)
#define ADC_NCMR_CH2_MASK                       (0x4U)
#define ADC_NCMR_CH2_SHIFT                      (2U)
#define ADC_NCMR_CH2_WIDTH                      (1U)
#define ADC_NCMR_CH2(x)                         (((uint32_t)(((uint32_t)(x)) << ADC_NCMR_CH2_SHIFT)) & ADC_NCMR_CH2_MASK)
#define ADC_NCMR_CH3_MASK                       (0x8U)
#define ADC_NCMR_CH3_SHIFT                      (3U)
#define ADC_NCMR_CH3_WIDTH                      (1U)
#define ADC_NCMR_CH3(x)                         (((uint32_t)(((uint32_t)(x)) << ADC_NCMR_CH3_SHIFT)) & ADC_NCMR_CH3_MASK)
#define ADC_NCMR_CH4_MASK                       (0x10U)
#define ADC_NCMR_CH4_SHIFT                      (4U)
#define ADC_NCMR_CH4_WIDTH                      (1U)
#define ADC_NCMR_CH4(x)                         (((uint32_t)(((uint32_t)(x)) << ADC_NCMR_CH4_SHIFT)) & ADC_NCMR_CH4_MASK)
#define ADC_NCMR_CH5_MASK                       (0x20U)
#define ADC_NCMR_CH5_SHIFT                      (5U)
#define ADC_NCMR_CH5_WIDTH                      (1U)
#define ADC_NCMR_CH5(x)                         (((uint32_t)(((uint32_t)(x)) << ADC_NCMR_CH5_SHIFT)) & ADC_NCMR_CH5_MASK)
#define ADC_NCMR_CH6_MASK                       (0x40U)
#define ADC_NCMR_CH6_SHIFT                      (6U)
#define ADC_NCMR_CH6_WIDTH                      (1U)
#define ADC_NCMR_CH6(x)                         (((uint32_t)(((uint32_t)(x)) << ADC_NCMR_CH6_SHIFT)) & ADC_NCMR_CH6_MASK)
#define ADC_NCMR_CH7_MASK                       (0x80U)
#define ADC_NCMR_CH7_SHIFT                      (7U)
#define ADC_NCMR_CH7_WIDTH                      (1U)
#define ADC_NCMR_CH7(x)                         (((uint32_t)(((uint32_t)(x)) << ADC_NCMR_CH7_SHIFT)) & ADC_NCMR_CH7_MASK)
#define ADC_NCMR_CH32_MASK                      (0x1U)
#define ADC_NCMR_CH32_SHIFT                     (0U)
#define ADC_NCMR_CH32_WIDTH                     (1U)
#define ADC_NCMR_CH32(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_NCMR_CH32_SHIFT)) & ADC_NCMR_CH32_MASK)
#define ADC_NCMR_CH33_MASK                      (0x2U)
#define ADC_NCMR_CH33_SHIFT                     (1U)
#define ADC_NCMR_CH33_WIDTH                     (1U)
#define ADC_NCMR_CH33(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_NCMR_CH33_SHIFT)) & ADC_NCMR_CH33_MASK)
#define ADC_NCMR_CH34_MASK                      (0x4U)
#define ADC_NCMR_CH34_SHIFT                     (2U)
#define ADC_NCMR_CH34_WIDTH                     (1U)
#define ADC_NCMR_CH34(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_NCMR_CH34_SHIFT)) & ADC_NCMR_CH34_MASK)
#define ADC_NCMR_CH35_MASK                      (0x8U)
#define ADC_NCMR_CH35_SHIFT                     (3U)
#define ADC_NCMR_CH35_WIDTH                     (1U)
#define ADC_NCMR_CH35(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_NCMR_CH35_SHIFT)) & ADC_NCMR_CH35_MASK)
#define ADC_NCMR_CH36_MASK                      (0x10U)
#define ADC_NCMR_CH36_SHIFT                     (4U)
#define ADC_NCMR_CH36_WIDTH                     (1U)
#define ADC_NCMR_CH36(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_NCMR_CH36_SHIFT)) & ADC_NCMR_CH36_MASK)
#define ADC_NCMR_CH37_MASK                      (0x20U)
#define ADC_NCMR_CH37_SHIFT                     (5U)
#define ADC_NCMR_CH37_WIDTH                     (1U)
#define ADC_NCMR_CH37(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_NCMR_CH37_SHIFT)) & ADC_NCMR_CH37_MASK)
#define ADC_NCMR_CH38_MASK                      (0x40U)
#define ADC_NCMR_CH38_SHIFT                     (6U)
#define ADC_NCMR_CH38_WIDTH                     (1U)
#define ADC_NCMR_CH38(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_NCMR_CH38_SHIFT)) & ADC_NCMR_CH38_MASK)
#define ADC_NCMR_CH39_MASK                      (0x80U)
#define ADC_NCMR_CH39_SHIFT                     (7U)
#define ADC_NCMR_CH39_WIDTH                     (1U)
#define ADC_NCMR_CH39(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_NCMR_CH39_SHIFT)) & ADC_NCMR_CH39_MASK)
#define ADC_NCMR_CH40_MASK                      (0x100U)
#define ADC_NCMR_CH40_SHIFT                     (8U)
#define ADC_NCMR_CH40_WIDTH                     (1U)
#define ADC_NCMR_CH40(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_NCMR_CH40_SHIFT)) & ADC_NCMR_CH40_MASK)
#define ADC_NCMR_CH41_MASK                      (0x200U)
#define ADC_NCMR_CH41_SHIFT                     (9U)
#define ADC_NCMR_CH41_WIDTH                     (1U)
#define ADC_NCMR_CH41(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_NCMR_CH41_SHIFT)) & ADC_NCMR_CH41_MASK)
#define ADC_NCMR_CH42_MASK                      (0x400U)
#define ADC_NCMR_CH42_SHIFT                     (10U)
#define ADC_NCMR_CH42_WIDTH                     (1U)
#define ADC_NCMR_CH42(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_NCMR_CH42_SHIFT)) & ADC_NCMR_CH42_MASK)
#define ADC_NCMR_CH43_MASK                      (0x800U)
#define ADC_NCMR_CH43_SHIFT                     (11U)
#define ADC_NCMR_CH43_WIDTH                     (1U)
#define ADC_NCMR_CH43(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_NCMR_CH43_SHIFT)) & ADC_NCMR_CH43_MASK)
#define ADC_NCMR_CH44_MASK                      (0x1000U)
#define ADC_NCMR_CH44_SHIFT                     (12U)
#define ADC_NCMR_CH44_WIDTH                     (1U)
#define ADC_NCMR_CH44(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_NCMR_CH44_SHIFT)) & ADC_NCMR_CH44_MASK)
#define ADC_NCMR_CH45_MASK                      (0x2000U)
#define ADC_NCMR_CH45_SHIFT                     (13U)
#define ADC_NCMR_CH45_WIDTH                     (1U)
#define ADC_NCMR_CH45(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_NCMR_CH45_SHIFT)) & ADC_NCMR_CH45_MASK)
#define ADC_NCMR_CH46_MASK                      (0x4000U)
#define ADC_NCMR_CH46_SHIFT                     (14U)
#define ADC_NCMR_CH46_WIDTH                     (1U)
#define ADC_NCMR_CH46(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_NCMR_CH46_SHIFT)) & ADC_NCMR_CH46_MASK)
#define ADC_NCMR_CH47_MASK                      (0x8000U)
#define ADC_NCMR_CH47_SHIFT                     (15U)
#define ADC_NCMR_CH47_WIDTH                     (1U)
#define ADC_NCMR_CH47(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_NCMR_CH47_SHIFT)) & ADC_NCMR_CH47_MASK)
/*! @} */

/*! @name JCMR - Injected Conversion Mask Register */
/*! @{ */
#define ADC_JCMR_CH0_MASK                       (0x1U)
#define ADC_JCMR_CH0_SHIFT                      (0U)
#define ADC_JCMR_CH0_WIDTH                      (1U)
#define ADC_JCMR_CH0(x)                         (((uint32_t)(((uint32_t)(x)) << ADC_JCMR_CH0_SHIFT)) & ADC_JCMR_CH0_MASK)
#define ADC_JCMR_CH1_MASK                       (0x2U)
#define ADC_JCMR_CH1_SHIFT                      (1U)
#define ADC_JCMR_CH1_WIDTH                      (1U)
#define ADC_JCMR_CH1(x)                         (((uint32_t)(((uint32_t)(x)) << ADC_JCMR_CH1_SHIFT)) & ADC_JCMR_CH1_MASK)
#define ADC_JCMR_CH2_MASK                       (0x4U)
#define ADC_JCMR_CH2_SHIFT                      (2U)
#define ADC_JCMR_CH2_WIDTH                      (1U)
#define ADC_JCMR_CH2(x)                         (((uint32_t)(((uint32_t)(x)) << ADC_JCMR_CH2_SHIFT)) & ADC_JCMR_CH2_MASK)
#define ADC_JCMR_CH3_MASK                       (0x8U)
#define ADC_JCMR_CH3_SHIFT                      (3U)
#define ADC_JCMR_CH3_WIDTH                      (1U)
#define ADC_JCMR_CH3(x)                         (((uint32_t)(((uint32_t)(x)) << ADC_JCMR_CH3_SHIFT)) & ADC_JCMR_CH3_MASK)
#define ADC_JCMR_CH4_MASK                       (0x10U)
#define ADC_JCMR_CH4_SHIFT                      (4U)
#define ADC_JCMR_CH4_WIDTH                      (1U)
#define ADC_JCMR_CH4(x)                         (((uint32_t)(((uint32_t)(x)) << ADC_JCMR_CH4_SHIFT)) & ADC_JCMR_CH4_MASK)
#define ADC_JCMR_CH5_MASK                       (0x20U)
#define ADC_JCMR_CH5_SHIFT                      (5U)
#define ADC_JCMR_CH5_WIDTH                      (1U)
#define ADC_JCMR_CH5(x)                         (((uint32_t)(((uint32_t)(x)) << ADC_JCMR_CH5_SHIFT)) & ADC_JCMR_CH5_MASK)
#define ADC_JCMR_CH6_MASK                       (0x40U)
#define ADC_JCMR_CH6_SHIFT                      (6U)
#define ADC_JCMR_CH6_WIDTH                      (1U)
#define ADC_JCMR_CH6(x)                         (((uint32_t)(((uint32_t)(x)) << ADC_JCMR_CH6_SHIFT)) & ADC_JCMR_CH6_MASK)
#define ADC_JCMR_CH7_MASK                       (0x80U)
#define ADC_JCMR_CH7_SHIFT                      (7U)
#define ADC_JCMR_CH7_WIDTH                      (1U)
#define ADC_JCMR_CH7(x)                         (((uint32_t)(((uint32_t)(x)) << ADC_JCMR_CH7_SHIFT)) & ADC_JCMR_CH7_MASK)
#define ADC_JCMR_CH32_MASK                      (0x1U)
#define ADC_JCMR_CH32_SHIFT                     (0U)
#define ADC_JCMR_CH32_WIDTH                     (1U)
#define ADC_JCMR_CH32(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_JCMR_CH32_SHIFT)) & ADC_JCMR_CH32_MASK)
#define ADC_JCMR_CH33_MASK                      (0x2U)
#define ADC_JCMR_CH33_SHIFT                     (1U)
#define ADC_JCMR_CH33_WIDTH                     (1U)
#define ADC_JCMR_CH33(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_JCMR_CH33_SHIFT)) & ADC_JCMR_CH33_MASK)
#define ADC_JCMR_CH34_MASK                      (0x4U)
#define ADC_JCMR_CH34_SHIFT                     (2U)
#define ADC_JCMR_CH34_WIDTH                     (1U)
#define ADC_JCMR_CH34(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_JCMR_CH34_SHIFT)) & ADC_JCMR_CH34_MASK)
#define ADC_JCMR_CH35_MASK                      (0x8U)
#define ADC_JCMR_CH35_SHIFT                     (3U)
#define ADC_JCMR_CH35_WIDTH                     (1U)
#define ADC_JCMR_CH35(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_JCMR_CH35_SHIFT)) & ADC_JCMR_CH35_MASK)
#define ADC_JCMR_CH36_MASK                      (0x10U)
#define ADC_JCMR_CH36_SHIFT                     (4U)
#define ADC_JCMR_CH36_WIDTH                     (1U)
#define ADC_JCMR_CH36(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_JCMR_CH36_SHIFT)) & ADC_JCMR_CH36_MASK)
#define ADC_JCMR_CH37_MASK                      (0x20U)
#define ADC_JCMR_CH37_SHIFT                     (5U)
#define ADC_JCMR_CH37_WIDTH                     (1U)
#define ADC_JCMR_CH37(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_JCMR_CH37_SHIFT)) & ADC_JCMR_CH37_MASK)
#define ADC_JCMR_CH38_MASK                      (0x40U)
#define ADC_JCMR_CH38_SHIFT                     (6U)
#define ADC_JCMR_CH38_WIDTH                     (1U)
#define ADC_JCMR_CH38(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_JCMR_CH38_SHIFT)) & ADC_JCMR_CH38_MASK)
#define ADC_JCMR_CH39_MASK                      (0x80U)
#define ADC_JCMR_CH39_SHIFT                     (7U)
#define ADC_JCMR_CH39_WIDTH                     (1U)
#define ADC_JCMR_CH39(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_JCMR_CH39_SHIFT)) & ADC_JCMR_CH39_MASK)
#define ADC_JCMR_CH40_MASK                      (0x100U)
#define ADC_JCMR_CH40_SHIFT                     (8U)
#define ADC_JCMR_CH40_WIDTH                     (1U)
#define ADC_JCMR_CH40(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_JCMR_CH40_SHIFT)) & ADC_JCMR_CH40_MASK)
#define ADC_JCMR_CH41_MASK                      (0x200U)
#define ADC_JCMR_CH41_SHIFT                     (9U)
#define ADC_JCMR_CH41_WIDTH                     (1U)
#define ADC_JCMR_CH41(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_JCMR_CH41_SHIFT)) & ADC_JCMR_CH41_MASK)
#define ADC_JCMR_CH42_MASK                      (0x400U)
#define ADC_JCMR_CH42_SHIFT                     (10U)
#define ADC_JCMR_CH42_WIDTH                     (1U)
#define ADC_JCMR_CH42(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_JCMR_CH42_SHIFT)) & ADC_JCMR_CH42_MASK)
#define ADC_JCMR_CH43_MASK                      (0x800U)
#define ADC_JCMR_CH43_SHIFT                     (11U)
#define ADC_JCMR_CH43_WIDTH                     (1U)
#define ADC_JCMR_CH43(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_JCMR_CH43_SHIFT)) & ADC_JCMR_CH43_MASK)
#define ADC_JCMR_CH44_MASK                      (0x1000U)
#define ADC_JCMR_CH44_SHIFT                     (12U)
#define ADC_JCMR_CH44_WIDTH                     (1U)
#define ADC_JCMR_CH44(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_JCMR_CH44_SHIFT)) & ADC_JCMR_CH44_MASK)
#define ADC_JCMR_CH45_MASK                      (0x2000U)
#define ADC_JCMR_CH45_SHIFT                     (13U)
#define ADC_JCMR_CH45_WIDTH                     (1U)
#define ADC_JCMR_CH45(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_JCMR_CH45_SHIFT)) & ADC_JCMR_CH45_MASK)
#define ADC_JCMR_CH46_MASK                      (0x4000U)
#define ADC_JCMR_CH46_SHIFT                     (14U)
#define ADC_JCMR_CH46_WIDTH                     (1U)
#define ADC_JCMR_CH46(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_JCMR_CH46_SHIFT)) & ADC_JCMR_CH46_MASK)
#define ADC_JCMR_CH47_MASK                      (0x8000U)
#define ADC_JCMR_CH47_SHIFT                     (15U)
#define ADC_JCMR_CH47_WIDTH                     (1U)
#define ADC_JCMR_CH47(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_JCMR_CH47_SHIFT)) & ADC_JCMR_CH47_MASK)
/*! @} */

/*! @name USROFSGN - User OFFSET and Gain Register */
/*! @{ */
#define ADC_USROFSGN_OFFSUSER_MASK               (0xFFU)
#define ADC_USROFSGN_OFFSUSER_SHIFT              (0U)
#define ADC_USROFSGN_OFFSUSER_WIDTH              (8U)
#define ADC_USROFSGN_OFFSUSER(x)                 (((uint32_t)(((uint32_t)(x)) << ADC_USROFSGN_OFFSUSER_SHIFT)) & ADC_USROFSGN_OFFSUSER_MASK)
#define ADC_USROFSGN_GAINUSER_MASK               (0x3FF0000U)
#define ADC_USROFSGN_GAINUSER_SHIFT              (16U)
#define ADC_USROFSGN_GAINUSER_WIDTH              (10U)
#define ADC_USROFSGN_GAINUSER(x)                 (((uint32_t)(((uint32_t)(x)) << ADC_USROFSGN_GAINUSER_SHIFT)) & ADC_USROFSGN_GAINUSER_MASK)
/*! @} */

/*! @name PDEDR - Power Down Exit Delay Register */
/*! @{ */
#define ADC_PDEDR_PDED_MASK                      (0xFFU)
#define ADC_PDEDR_PDED_SHIFT                     (0U)
#define ADC_PDEDR_PDED_WIDTH                     (8U)
#define ADC_PDEDR_PDED(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_PDEDR_PDED_SHIFT)) & ADC_PDEDR_PDED_MASK)
/*! @} */

/*! @name CDR - Channel n Data Register */
/*! @{ */
#define ADC_CDR_CDATA_MASK                      (0xFFFFU)
#define ADC_CDR_CDATA_SHIFT                     (0U)
#define ADC_CDR_CDATA_WIDTH                     (16U)
#define ADC_CDR_CDATA(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_CDR_CDATA_SHIFT)) & ADC_CDR_CDATA_MASK)
#define ADC_CDR_RESULT_MASK                     (0x30000U)
#define ADC_CDR_RESULT_SHIFT                    (16U)
#define ADC_CDR_RESULT_WIDTH                    (2U)
#define ADC_CDR_RESULT(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_CDR_RESULT_SHIFT)) & ADC_CDR_RESULT_MASK)
#define ADC_CDR_OVERW_MASK                      (0x40000U)
#define ADC_CDR_OVERW_SHIFT                     (18U)
#define ADC_CDR_OVERW_WIDTH                     (1U)
#define ADC_CDR_OVERW(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_CDR_OVERW_SHIFT)) & ADC_CDR_OVERW_MASK)
#define ADC_CDR_VALID_MASK                      (0x80000U)
#define ADC_CDR_VALID_SHIFT                     (19U)
#define ADC_CDR_VALID_WIDTH                     (1U)
#define ADC_CDR_VALID(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_CDR_VALID_SHIFT)) & ADC_CDR_VALID_MASK)
/*! @} */

/*! @name THRHLR4 - Analog Watchdog Threshold Register 4 */
/*! @{ */
#define ADC_THRHLR4_THRL_MASK                    (0xFFFU)
#define ADC_THRHLR4_THRL_SHIFT                   (0U)
#define ADC_THRHLR4_THRL_WIDTH                   (12U)
#define ADC_THRHLR4_THRL(x)                      (((uint32_t)(((uint32_t)(x)) << ADC_THRHLR4_THRL_SHIFT)) & ADC_THRHLR4_THRL_MASK)
#define ADC_THRHLR4_THRH_MASK                    (0xFFF0000U)
#define ADC_THRHLR4_THRH_SHIFT                   (16U)
#define ADC_THRHLR4_THRH_WIDTH                   (12U)
#define ADC_THRHLR4_THRH(x)                      (((uint32_t)(((uint32_t)(x)) << ADC_THRHLR4_THRH_SHIFT)) & ADC_THRHLR4_THRH_MASK)
/*! @} */

/*! @name THRHLR5 - Analog Watchdog Threshold Register 5 */
/*! @{ */
#define ADC_THRHLR5_THRL_MASK                    (0xFFFU)
#define ADC_THRHLR5_THRL_SHIFT                   (0U)
#define ADC_THRHLR5_THRL_WIDTH                   (12U)
#define ADC_THRHLR5_THRL(x)                      (((uint32_t)(((uint32_t)(x)) << ADC_THRHLR5_THRL_SHIFT)) & ADC_THRHLR5_THRL_MASK)
#define ADC_THRHLR5_THRH_MASK                    (0xFFF0000U)
#define ADC_THRHLR5_THRH_SHIFT                   (16U)
#define ADC_THRHLR5_THRH_WIDTH                   (12U)
#define ADC_THRHLR5_THRH(x)                      (((uint32_t)(((uint32_t)(x)) << ADC_THRHLR5_THRH_SHIFT)) & ADC_THRHLR5_THRH_MASK)
/*! @} */

/*! @name THRHLR6 - Analog Watchdog Threshold Register 6 */
/*! @{ */
#define ADC_THRHLR6_THRL_MASK                    (0xFFFU)
#define ADC_THRHLR6_THRL_SHIFT                   (0U)
#define ADC_THRHLR6_THRL_WIDTH                   (12U)
#define ADC_THRHLR6_THRL(x)                      (((uint32_t)(((uint32_t)(x)) << ADC_THRHLR6_THRL_SHIFT)) & ADC_THRHLR6_THRL_MASK)
#define ADC_THRHLR6_THRH_MASK                    (0xFFF0000U)
#define ADC_THRHLR6_THRH_SHIFT                   (16U)
#define ADC_THRHLR6_THRH_WIDTH                   (12U)
#define ADC_THRHLR6_THRH(x)                      (((uint32_t)(((uint32_t)(x)) << ADC_THRHLR6_THRH_SHIFT)) & ADC_THRHLR6_THRH_MASK)
/*! @} */

/*! @name THRHLR7 - Analog Watchdog Threshold Register 7 */
/*! @{ */
#define ADC_THRHLR7_THRL_MASK                    (0xFFFU)
#define ADC_THRHLR7_THRL_SHIFT                   (0U)
#define ADC_THRHLR7_THRL_WIDTH                   (12U)
#define ADC_THRHLR7_THRL(x)                      (((uint32_t)(((uint32_t)(x)) << ADC_THRHLR7_THRL_SHIFT)) & ADC_THRHLR7_THRL_MASK)
#define ADC_THRHLR7_THRH_MASK                    (0xFFF0000U)
#define ADC_THRHLR7_THRH_SHIFT                   (16U)
#define ADC_THRHLR7_THRH_WIDTH                   (12U)
#define ADC_THRHLR7_THRH(x)                      (((uint32_t)(((uint32_t)(x)) << ADC_THRHLR7_THRH_SHIFT)) & ADC_THRHLR7_THRH_MASK)
/*! @} */

/*! @name CWSELR0 - Channel Watchdog Select Register 0 */
/*! @{ */
#define ADC_CWSELR0_WSEL_CH0_MASK                (0x7U)
#define ADC_CWSELR0_WSEL_CH0_SHIFT               (0U)
#define ADC_CWSELR0_WSEL_CH0_WIDTH               (3U)
#define ADC_CWSELR0_WSEL_CH0(x)                  (((uint32_t)(((uint32_t)(x)) << ADC_CWSELR0_WSEL_CH0_SHIFT)) & ADC_CWSELR0_WSEL_CH0_MASK)
#define ADC_CWSELR0_WSEL_CH1_MASK                (0x70U)
#define ADC_CWSELR0_WSEL_CH1_SHIFT               (4U)
#define ADC_CWSELR0_WSEL_CH1_WIDTH               (3U)
#define ADC_CWSELR0_WSEL_CH1(x)                  (((uint32_t)(((uint32_t)(x)) << ADC_CWSELR0_WSEL_CH1_SHIFT)) & ADC_CWSELR0_WSEL_CH1_MASK)
#define ADC_CWSELR0_WSEL_CH2_MASK                (0x700U)
#define ADC_CWSELR0_WSEL_CH2_SHIFT               (8U)
#define ADC_CWSELR0_WSEL_CH2_WIDTH               (3U)
#define ADC_CWSELR0_WSEL_CH2(x)                  (((uint32_t)(((uint32_t)(x)) << ADC_CWSELR0_WSEL_CH2_SHIFT)) & ADC_CWSELR0_WSEL_CH2_MASK)
#define ADC_CWSELR0_WSEL_CH3_MASK                (0x7000U)
#define ADC_CWSELR0_WSEL_CH3_SHIFT               (12U)
#define ADC_CWSELR0_WSEL_CH3_WIDTH               (3U)
#define ADC_CWSELR0_WSEL_CH3(x)                  (((uint32_t)(((uint32_t)(x)) << ADC_CWSELR0_WSEL_CH3_SHIFT)) & ADC_CWSELR0_WSEL_CH3_MASK)
#define ADC_CWSELR0_WSEL_CH4_MASK                (0x70000U)
#define ADC_CWSELR0_WSEL_CH4_SHIFT               (16U)
#define ADC_CWSELR0_WSEL_CH4_WIDTH               (3U)
#define ADC_CWSELR0_WSEL_CH4(x)                  (((uint32_t)(((uint32_t)(x)) << ADC_CWSELR0_WSEL_CH4_SHIFT)) & ADC_CWSELR0_WSEL_CH4_MASK)
#define ADC_CWSELR0_WSEL_CH5_MASK                (0x700000U)
#define ADC_CWSELR0_WSEL_CH5_SHIFT               (20U)
#define ADC_CWSELR0_WSEL_CH5_WIDTH               (3U)
#define ADC_CWSELR0_WSEL_CH5(x)                  (((uint32_t)(((uint32_t)(x)) << ADC_CWSELR0_WSEL_CH5_SHIFT)) & ADC_CWSELR0_WSEL_CH5_MASK)
#define ADC_CWSELR0_WSEL_CH6_MASK                (0x7000000U)
#define ADC_CWSELR0_WSEL_CH6_SHIFT               (24U)
#define ADC_CWSELR0_WSEL_CH6_WIDTH               (3U)
#define ADC_CWSELR0_WSEL_CH6(x)                  (((uint32_t)(((uint32_t)(x)) << ADC_CWSELR0_WSEL_CH6_SHIFT)) & ADC_CWSELR0_WSEL_CH6_MASK)
#define ADC_CWSELR0_WSEL_CH7_MASK                (0x70000000U)
#define ADC_CWSELR0_WSEL_CH7_SHIFT               (28U)
#define ADC_CWSELR0_WSEL_CH7_WIDTH               (3U)
#define ADC_CWSELR0_WSEL_CH7(x)                  (((uint32_t)(((uint32_t)(x)) << ADC_CWSELR0_WSEL_CH7_SHIFT)) & ADC_CWSELR0_WSEL_CH7_MASK)
/*! @} */

/*! @name CWSELR4 - Channel Watchdog Select Register 4 */
/*! @{ */
#define ADC_CWSELR4_WSEL_CH32_MASK               (0x7U)
#define ADC_CWSELR4_WSEL_CH32_SHIFT              (0U)
#define ADC_CWSELR4_WSEL_CH32_WIDTH              (3U)
#define ADC_CWSELR4_WSEL_CH32(x)                 (((uint32_t)(((uint32_t)(x)) << ADC_CWSELR4_WSEL_CH32_SHIFT)) & ADC_CWSELR4_WSEL_CH32_MASK)
#define ADC_CWSELR4_WSEL_CH33_MASK               (0x70U)
#define ADC_CWSELR4_WSEL_CH33_SHIFT              (4U)
#define ADC_CWSELR4_WSEL_CH33_WIDTH              (3U)
#define ADC_CWSELR4_WSEL_CH33(x)                 (((uint32_t)(((uint32_t)(x)) << ADC_CWSELR4_WSEL_CH33_SHIFT)) & ADC_CWSELR4_WSEL_CH33_MASK)
#define ADC_CWSELR4_WSEL_CH34_MASK               (0x700U)
#define ADC_CWSELR4_WSEL_CH34_SHIFT              (8U)
#define ADC_CWSELR4_WSEL_CH34_WIDTH              (3U)
#define ADC_CWSELR4_WSEL_CH34(x)                 (((uint32_t)(((uint32_t)(x)) << ADC_CWSELR4_WSEL_CH34_SHIFT)) & ADC_CWSELR4_WSEL_CH34_MASK)
#define ADC_CWSELR4_WSEL_CH35_MASK               (0x7000U)
#define ADC_CWSELR4_WSEL_CH35_SHIFT              (12U)
#define ADC_CWSELR4_WSEL_CH35_WIDTH              (3U)
#define ADC_CWSELR4_WSEL_CH35(x)                 (((uint32_t)(((uint32_t)(x)) << ADC_CWSELR4_WSEL_CH35_SHIFT)) & ADC_CWSELR4_WSEL_CH35_MASK)
#define ADC_CWSELR4_WSEL_CH36_MASK               (0x70000U)
#define ADC_CWSELR4_WSEL_CH36_SHIFT              (16U)
#define ADC_CWSELR4_WSEL_CH36_WIDTH              (3U)
#define ADC_CWSELR4_WSEL_CH36(x)                 (((uint32_t)(((uint32_t)(x)) << ADC_CWSELR4_WSEL_CH36_SHIFT)) & ADC_CWSELR4_WSEL_CH36_MASK)
#define ADC_CWSELR4_WSEL_CH37_MASK               (0x700000U)
#define ADC_CWSELR4_WSEL_CH37_SHIFT              (20U)
#define ADC_CWSELR4_WSEL_CH37_WIDTH              (3U)
#define ADC_CWSELR4_WSEL_CH37(x)                 (((uint32_t)(((uint32_t)(x)) << ADC_CWSELR4_WSEL_CH37_SHIFT)) & ADC_CWSELR4_WSEL_CH37_MASK)
#define ADC_CWSELR4_WSEL_CH38_MASK               (0x7000000U)
#define ADC_CWSELR4_WSEL_CH38_SHIFT              (24U)
#define ADC_CWSELR4_WSEL_CH38_WIDTH              (3U)
#define ADC_CWSELR4_WSEL_CH38(x)                 (((uint32_t)(((uint32_t)(x)) << ADC_CWSELR4_WSEL_CH38_SHIFT)) & ADC_CWSELR4_WSEL_CH38_MASK)
#define ADC_CWSELR4_WSEL_CH39_MASK               (0x70000000U)
#define ADC_CWSELR4_WSEL_CH39_SHIFT              (28U)
#define ADC_CWSELR4_WSEL_CH39_WIDTH              (3U)
#define ADC_CWSELR4_WSEL_CH39(x)                 (((uint32_t)(((uint32_t)(x)) << ADC_CWSELR4_WSEL_CH39_SHIFT)) & ADC_CWSELR4_WSEL_CH39_MASK)
/*! @} */

/*! @name CWSELR5 - Channel Watchdog Select Register 5 */
/*! @{ */
#define ADC_CWSELR5_WSEL_CH40_MASK               (0x7U)
#define ADC_CWSELR5_WSEL_CH40_SHIFT              (0U)
#define ADC_CWSELR5_WSEL_CH40_WIDTH              (3U)
#define ADC_CWSELR5_WSEL_CH40(x)                 (((uint32_t)(((uint32_t)(x)) << ADC_CWSELR5_WSEL_CH40_SHIFT)) & ADC_CWSELR5_WSEL_CH40_MASK)
#define ADC_CWSELR5_WSEL_CH41_MASK               (0x70U)
#define ADC_CWSELR5_WSEL_CH41_SHIFT              (4U)
#define ADC_CWSELR5_WSEL_CH41_WIDTH              (3U)
#define ADC_CWSELR5_WSEL_CH41(x)                 (((uint32_t)(((uint32_t)(x)) << ADC_CWSELR5_WSEL_CH41_SHIFT)) & ADC_CWSELR5_WSEL_CH41_MASK)
#define ADC_CWSELR5_WSEL_CH42_MASK               (0x700U)
#define ADC_CWSELR5_WSEL_CH42_SHIFT              (8U)
#define ADC_CWSELR5_WSEL_CH42_WIDTH              (3U)
#define ADC_CWSELR5_WSEL_CH42(x)                 (((uint32_t)(((uint32_t)(x)) << ADC_CWSELR5_WSEL_CH42_SHIFT)) & ADC_CWSELR5_WSEL_CH42_MASK)
#define ADC_CWSELR5_WSEL_CH43_MASK               (0x7000U)
#define ADC_CWSELR5_WSEL_CH43_SHIFT              (12U)
#define ADC_CWSELR5_WSEL_CH43_WIDTH              (3U)
#define ADC_CWSELR5_WSEL_CH43(x)                 (((uint32_t)(((uint32_t)(x)) << ADC_CWSELR5_WSEL_CH43_SHIFT)) & ADC_CWSELR5_WSEL_CH43_MASK)
#define ADC_CWSELR5_WSEL_CH44_MASK               (0x70000U)
#define ADC_CWSELR5_WSEL_CH44_SHIFT              (16U)
#define ADC_CWSELR5_WSEL_CH44_WIDTH              (3U)
#define ADC_CWSELR5_WSEL_CH44(x)                 (((uint32_t)(((uint32_t)(x)) << ADC_CWSELR5_WSEL_CH44_SHIFT)) & ADC_CWSELR5_WSEL_CH44_MASK)
#define ADC_CWSELR5_WSEL_CH45_MASK               (0x700000U)
#define ADC_CWSELR5_WSEL_CH45_SHIFT              (20U)
#define ADC_CWSELR5_WSEL_CH45_WIDTH              (3U)
#define ADC_CWSELR5_WSEL_CH45(x)                 (((uint32_t)(((uint32_t)(x)) << ADC_CWSELR5_WSEL_CH45_SHIFT)) & ADC_CWSELR5_WSEL_CH45_MASK)
#define ADC_CWSELR5_WSEL_CH46_MASK               (0x7000000U)
#define ADC_CWSELR5_WSEL_CH46_SHIFT              (24U)
#define ADC_CWSELR5_WSEL_CH46_WIDTH              (3U)
#define ADC_CWSELR5_WSEL_CH46(x)                 (((uint32_t)(((uint32_t)(x)) << ADC_CWSELR5_WSEL_CH46_SHIFT)) & ADC_CWSELR5_WSEL_CH46_MASK)
#define ADC_CWSELR5_WSEL_CH47_MASK               (0x70000000U)
#define ADC_CWSELR5_WSEL_CH47_SHIFT              (28U)
#define ADC_CWSELR5_WSEL_CH47_WIDTH              (3U)
#define ADC_CWSELR5_WSEL_CH47(x)                 (((uint32_t)(((uint32_t)(x)) << ADC_CWSELR5_WSEL_CH47_SHIFT)) & ADC_CWSELR5_WSEL_CH47_MASK)
/*! @} */

/*! @name CWENR - Channel Watchdog Enable Register */
/*! @{ */
#define ADC_CWENR_CWEN0_MASK                    (0x1U)
#define ADC_CWENR_CWEN0_SHIFT                   (0U)
#define ADC_CWENR_CWEN0_WIDTH                   (1U)
#define ADC_CWENR_CWEN0(x)                      (((uint32_t)(((uint32_t)(x)) << ADC_CWENR_CWEN0_SHIFT)) & ADC_CWENR_CWEN0_MASK)
#define ADC_CWENR_CWEN1_MASK                    (0x2U)
#define ADC_CWENR_CWEN1_SHIFT                   (1U)
#define ADC_CWENR_CWEN1_WIDTH                   (1U)
#define ADC_CWENR_CWEN1(x)                      (((uint32_t)(((uint32_t)(x)) << ADC_CWENR_CWEN1_SHIFT)) & ADC_CWENR_CWEN1_MASK)
#define ADC_CWENR_CWEN2_MASK                    (0x4U)
#define ADC_CWENR_CWEN2_SHIFT                   (2U)
#define ADC_CWENR_CWEN2_WIDTH                   (1U)
#define ADC_CWENR_CWEN2(x)                      (((uint32_t)(((uint32_t)(x)) << ADC_CWENR_CWEN2_SHIFT)) & ADC_CWENR_CWEN2_MASK)
#define ADC_CWENR_CWEN3_MASK                    (0x8U)
#define ADC_CWENR_CWEN3_SHIFT                   (3U)
#define ADC_CWENR_CWEN3_WIDTH                   (1U)
#define ADC_CWENR_CWEN3(x)                      (((uint32_t)(((uint32_t)(x)) << ADC_CWENR_CWEN3_SHIFT)) & ADC_CWENR_CWEN3_MASK)
#define ADC_CWENR_CWEN4_MASK                    (0x10U)
#define ADC_CWENR_CWEN4_SHIFT                   (4U)
#define ADC_CWENR_CWEN4_WIDTH                   (1U)
#define ADC_CWENR_CWEN4(x)                      (((uint32_t)(((uint32_t)(x)) << ADC_CWENR_CWEN4_SHIFT)) & ADC_CWENR_CWEN4_MASK)
#define ADC_CWENR_CWEN5_MASK                    (0x20U)
#define ADC_CWENR_CWEN5_SHIFT                   (5U)
#define ADC_CWENR_CWEN5_WIDTH                   (1U)
#define ADC_CWENR_CWEN5(x)                      (((uint32_t)(((uint32_t)(x)) << ADC_CWENR_CWEN5_SHIFT)) & ADC_CWENR_CWEN5_MASK)
#define ADC_CWENR_CWEN6_MASK                    (0x40U)
#define ADC_CWENR_CWEN6_SHIFT                   (6U)
#define ADC_CWENR_CWEN6_WIDTH                   (1U)
#define ADC_CWENR_CWEN6(x)                      (((uint32_t)(((uint32_t)(x)) << ADC_CWENR_CWEN6_SHIFT)) & ADC_CWENR_CWEN6_MASK)
#define ADC_CWENR_CWEN7_MASK                    (0x80U)
#define ADC_CWENR_CWEN7_SHIFT                   (7U)
#define ADC_CWENR_CWEN7_WIDTH                   (1U)
#define ADC_CWENR_CWEN7(x)                      (((uint32_t)(((uint32_t)(x)) << ADC_CWENR_CWEN7_SHIFT)) & ADC_CWENR_CWEN7_MASK)
#define ADC_CWENR_CWEN32_MASK                   (0x1U)
#define ADC_CWENR_CWEN32_SHIFT                  (0U)
#define ADC_CWENR_CWEN32_WIDTH                  (1U)
#define ADC_CWENR_CWEN32(x)                     (((uint32_t)(((uint32_t)(x)) << ADC_CWENR_CWEN32_SHIFT)) & ADC_CWENR_CWEN32_MASK)
#define ADC_CWENR_CWEN33_MASK                   (0x2U)
#define ADC_CWENR_CWEN33_SHIFT                  (1U)
#define ADC_CWENR_CWEN33_WIDTH                  (1U)
#define ADC_CWENR_CWEN33(x)                     (((uint32_t)(((uint32_t)(x)) << ADC_CWENR_CWEN33_SHIFT)) & ADC_CWENR_CWEN33_MASK)
#define ADC_CWENR_CWEN34_MASK                   (0x4U)
#define ADC_CWENR_CWEN34_SHIFT                  (2U)
#define ADC_CWENR_CWEN34_WIDTH                  (1U)
#define ADC_CWENR_CWEN34(x)                     (((uint32_t)(((uint32_t)(x)) << ADC_CWENR_CWEN34_SHIFT)) & ADC_CWENR_CWEN34_MASK)
#define ADC_CWENR_CWEN35_MASK                   (0x8U)
#define ADC_CWENR_CWEN35_SHIFT                  (3U)
#define ADC_CWENR_CWEN35_WIDTH                  (1U)
#define ADC_CWENR_CWEN35(x)                     (((uint32_t)(((uint32_t)(x)) << ADC_CWENR_CWEN35_SHIFT)) & ADC_CWENR_CWEN35_MASK)
#define ADC_CWENR_CWEN36_MASK                   (0x10U)
#define ADC_CWENR_CWEN36_SHIFT                  (4U)
#define ADC_CWENR_CWEN36_WIDTH                  (1U)
#define ADC_CWENR_CWEN36(x)                     (((uint32_t)(((uint32_t)(x)) << ADC_CWENR_CWEN36_SHIFT)) & ADC_CWENR_CWEN36_MASK)
#define ADC_CWENR_CWEN37_MASK                   (0x20U)
#define ADC_CWENR_CWEN37_SHIFT                  (5U)
#define ADC_CWENR_CWEN37_WIDTH                  (1U)
#define ADC_CWENR_CWEN37(x)                     (((uint32_t)(((uint32_t)(x)) << ADC_CWENR_CWEN37_SHIFT)) & ADC_CWENR_CWEN37_MASK)
#define ADC_CWENR_CWEN38_MASK                   (0x40U)
#define ADC_CWENR_CWEN38_SHIFT                  (6U)
#define ADC_CWENR_CWEN38_WIDTH                  (1U)
#define ADC_CWENR_CWEN38(x)                     (((uint32_t)(((uint32_t)(x)) << ADC_CWENR_CWEN38_SHIFT)) & ADC_CWENR_CWEN38_MASK)
#define ADC_CWENR_CWEN39_MASK                   (0x80U)
#define ADC_CWENR_CWEN39_SHIFT                  (7U)
#define ADC_CWENR_CWEN39_WIDTH                  (1U)
#define ADC_CWENR_CWEN39(x)                     (((uint32_t)(((uint32_t)(x)) << ADC_CWENR_CWEN39_SHIFT)) & ADC_CWENR_CWEN39_MASK)
#define ADC_CWENR_CWEN40_MASK                   (0x100U)
#define ADC_CWENR_CWEN40_SHIFT                  (8U)
#define ADC_CWENR_CWEN40_WIDTH                  (1U)
#define ADC_CWENR_CWEN40(x)                     (((uint32_t)(((uint32_t)(x)) << ADC_CWENR_CWEN40_SHIFT)) & ADC_CWENR_CWEN40_MASK)
#define ADC_CWENR_CWEN41_MASK                   (0x200U)
#define ADC_CWENR_CWEN41_SHIFT                  (9U)
#define ADC_CWENR_CWEN41_WIDTH                  (1U)
#define ADC_CWENR_CWEN41(x)                     (((uint32_t)(((uint32_t)(x)) << ADC_CWENR_CWEN41_SHIFT)) & ADC_CWENR_CWEN41_MASK)
#define ADC_CWENR_CWEN42_MASK                   (0x400U)
#define ADC_CWENR_CWEN42_SHIFT                  (10U)
#define ADC_CWENR_CWEN42_WIDTH                  (1U)
#define ADC_CWENR_CWEN42(x)                     (((uint32_t)(((uint32_t)(x)) << ADC_CWENR_CWEN42_SHIFT)) & ADC_CWENR_CWEN42_MASK)
#define ADC_CWENR_CWEN43_MASK                   (0x800U)
#define ADC_CWENR_CWEN43_SHIFT                  (11U)
#define ADC_CWENR_CWEN43_WIDTH                  (1U)
#define ADC_CWENR_CWEN43(x)                     (((uint32_t)(((uint32_t)(x)) << ADC_CWENR_CWEN43_SHIFT)) & ADC_CWENR_CWEN43_MASK)
#define ADC_CWENR_CWEN44_MASK                   (0x1000U)
#define ADC_CWENR_CWEN44_SHIFT                  (12U)
#define ADC_CWENR_CWEN44_WIDTH                  (1U)
#define ADC_CWENR_CWEN44(x)                     (((uint32_t)(((uint32_t)(x)) << ADC_CWENR_CWEN44_SHIFT)) & ADC_CWENR_CWEN44_MASK)
#define ADC_CWENR_CWEN45_MASK                   (0x2000U)
#define ADC_CWENR_CWEN45_SHIFT                  (13U)
#define ADC_CWENR_CWEN45_WIDTH                  (1U)
#define ADC_CWENR_CWEN45(x)                     (((uint32_t)(((uint32_t)(x)) << ADC_CWENR_CWEN45_SHIFT)) & ADC_CWENR_CWEN45_MASK)
#define ADC_CWENR_CWEN46_MASK                   (0x4000U)
#define ADC_CWENR_CWEN46_SHIFT                  (14U)
#define ADC_CWENR_CWEN46_WIDTH                  (1U)
#define ADC_CWENR_CWEN46(x)                     (((uint32_t)(((uint32_t)(x)) << ADC_CWENR_CWEN46_SHIFT)) & ADC_CWENR_CWEN46_MASK)
#define ADC_CWENR_CWEN47_MASK                   (0x8000U)
#define ADC_CWENR_CWEN47_SHIFT                  (15U)
#define ADC_CWENR_CWEN47_WIDTH                  (1U)
#define ADC_CWENR_CWEN47(x)                     (((uint32_t)(((uint32_t)(x)) << ADC_CWENR_CWEN47_SHIFT)) & ADC_CWENR_CWEN47_MASK)
/*! @} */

/*! @name AWORR - Analog Watchdog Out of Range Register */
/*! @{ */
#define ADC_AWORR_AWOR_CH0_MASK                 (0x1U)
#define ADC_AWORR_AWOR_CH0_SHIFT                (0U)
#define ADC_AWORR_AWOR_CH0_WIDTH                (1U)
#define ADC_AWORR_AWOR_CH0(x)                   (((uint32_t)(((uint32_t)(x)) << ADC_AWORR_AWOR_CH0_SHIFT)) & ADC_AWORR_AWOR_CH0_MASK)
#define ADC_AWORR_AWOR_CH1_MASK                 (0x2U)
#define ADC_AWORR_AWOR_CH1_SHIFT                (1U)
#define ADC_AWORR_AWOR_CH1_WIDTH                (1U)
#define ADC_AWORR_AWOR_CH1(x)                   (((uint32_t)(((uint32_t)(x)) << ADC_AWORR_AWOR_CH1_SHIFT)) & ADC_AWORR_AWOR_CH1_MASK)
#define ADC_AWORR_AWOR_CH2_MASK                 (0x4U)
#define ADC_AWORR_AWOR_CH2_SHIFT                (2U)
#define ADC_AWORR_AWOR_CH2_WIDTH                (1U)
#define ADC_AWORR_AWOR_CH2(x)                   (((uint32_t)(((uint32_t)(x)) << ADC_AWORR_AWOR_CH2_SHIFT)) & ADC_AWORR_AWOR_CH2_MASK)
#define ADC_AWORR_AWOR_CH3_MASK                 (0x8U)
#define ADC_AWORR_AWOR_CH3_SHIFT                (3U)
#define ADC_AWORR_AWOR_CH3_WIDTH                (1U)
#define ADC_AWORR_AWOR_CH3(x)                   (((uint32_t)(((uint32_t)(x)) << ADC_AWORR_AWOR_CH3_SHIFT)) & ADC_AWORR_AWOR_CH3_MASK)
#define ADC_AWORR_AWOR_CH4_MASK                 (0x10U)
#define ADC_AWORR_AWOR_CH4_SHIFT                (4U)
#define ADC_AWORR_AWOR_CH4_WIDTH                (1U)
#define ADC_AWORR_AWOR_CH4(x)                   (((uint32_t)(((uint32_t)(x)) << ADC_AWORR_AWOR_CH4_SHIFT)) & ADC_AWORR_AWOR_CH4_MASK)
#define ADC_AWORR_AWOR_CH5_MASK                 (0x20U)
#define ADC_AWORR_AWOR_CH5_SHIFT                (5U)
#define ADC_AWORR_AWOR_CH5_WIDTH                (1U)
#define ADC_AWORR_AWOR_CH5(x)                   (((uint32_t)(((uint32_t)(x)) << ADC_AWORR_AWOR_CH5_SHIFT)) & ADC_AWORR_AWOR_CH5_MASK)
#define ADC_AWORR_AWOR_CH6_MASK                 (0x40U)
#define ADC_AWORR_AWOR_CH6_SHIFT                (6U)
#define ADC_AWORR_AWOR_CH6_WIDTH                (1U)
#define ADC_AWORR_AWOR_CH6(x)                   (((uint32_t)(((uint32_t)(x)) << ADC_AWORR_AWOR_CH6_SHIFT)) & ADC_AWORR_AWOR_CH6_MASK)
#define ADC_AWORR_AWOR_CH7_MASK                 (0x80U)
#define ADC_AWORR_AWOR_CH7_SHIFT                (7U)
#define ADC_AWORR_AWOR_CH7_WIDTH                (1U)
#define ADC_AWORR_AWOR_CH7(x)                   (((uint32_t)(((uint32_t)(x)) << ADC_AWORR_AWOR_CH7_SHIFT)) & ADC_AWORR_AWOR_CH7_MASK)
#define ADC_AWORR_AWOR_CH32_MASK                (0x1U)
#define ADC_AWORR_AWOR_CH32_SHIFT               (0U)
#define ADC_AWORR_AWOR_CH32_WIDTH               (1U)
#define ADC_AWORR_AWOR_CH32(x)                  (((uint32_t)(((uint32_t)(x)) << ADC_AWORR_AWOR_CH32_SHIFT)) & ADC_AWORR_AWOR_CH32_MASK)
#define ADC_AWORR_AWOR_CH33_MASK                (0x2U)
#define ADC_AWORR_AWOR_CH33_SHIFT               (1U)
#define ADC_AWORR_AWOR_CH33_WIDTH               (1U)
#define ADC_AWORR_AWOR_CH33(x)                  (((uint32_t)(((uint32_t)(x)) << ADC_AWORR_AWOR_CH33_SHIFT)) & ADC_AWORR_AWOR_CH33_MASK)
#define ADC_AWORR_AWOR_CH34_MASK                (0x4U)
#define ADC_AWORR_AWOR_CH34_SHIFT               (2U)
#define ADC_AWORR_AWOR_CH34_WIDTH               (1U)
#define ADC_AWORR_AWOR_CH34(x)                  (((uint32_t)(((uint32_t)(x)) << ADC_AWORR_AWOR_CH34_SHIFT)) & ADC_AWORR_AWOR_CH34_MASK)
#define ADC_AWORR_AWOR_CH35_MASK                (0x8U)
#define ADC_AWORR_AWOR_CH35_SHIFT               (3U)
#define ADC_AWORR_AWOR_CH35_WIDTH               (1U)
#define ADC_AWORR_AWOR_CH35(x)                  (((uint32_t)(((uint32_t)(x)) << ADC_AWORR_AWOR_CH35_SHIFT)) & ADC_AWORR_AWOR_CH35_MASK)
#define ADC_AWORR_AWOR_CH36_MASK                (0x10U)
#define ADC_AWORR_AWOR_CH36_SHIFT               (4U)
#define ADC_AWORR_AWOR_CH36_WIDTH               (1U)
#define ADC_AWORR_AWOR_CH36(x)                  (((uint32_t)(((uint32_t)(x)) << ADC_AWORR_AWOR_CH36_SHIFT)) & ADC_AWORR_AWOR_CH36_MASK)
#define ADC_AWORR_AWOR_CH37_MASK                (0x20U)
#define ADC_AWORR_AWOR_CH37_SHIFT               (5U)
#define ADC_AWORR_AWOR_CH37_WIDTH               (1U)
#define ADC_AWORR_AWOR_CH37(x)                  (((uint32_t)(((uint32_t)(x)) << ADC_AWORR_AWOR_CH37_SHIFT)) & ADC_AWORR_AWOR_CH37_MASK)
#define ADC_AWORR_AWOR_CH38_MASK                (0x40U)
#define ADC_AWORR_AWOR_CH38_SHIFT               (6U)
#define ADC_AWORR_AWOR_CH38_WIDTH               (1U)
#define ADC_AWORR_AWOR_CH38(x)                  (((uint32_t)(((uint32_t)(x)) << ADC_AWORR_AWOR_CH38_SHIFT)) & ADC_AWORR_AWOR_CH38_MASK)
#define ADC_AWORR_AWOR_CH39_MASK                (0x80U)
#define ADC_AWORR_AWOR_CH39_SHIFT               (7U)
#define ADC_AWORR_AWOR_CH39_WIDTH               (1U)
#define ADC_AWORR_AWOR_CH39(x)                  (((uint32_t)(((uint32_t)(x)) << ADC_AWORR_AWOR_CH39_SHIFT)) & ADC_AWORR_AWOR_CH39_MASK)
#define ADC_AWORR_AWOR_CH40_MASK                (0x100U)
#define ADC_AWORR_AWOR_CH40_SHIFT               (8U)
#define ADC_AWORR_AWOR_CH40_WIDTH               (1U)
#define ADC_AWORR_AWOR_CH40(x)                  (((uint32_t)(((uint32_t)(x)) << ADC_AWORR_AWOR_CH40_SHIFT)) & ADC_AWORR_AWOR_CH40_MASK)
#define ADC_AWORR_AWOR_CH41_MASK                (0x200U)
#define ADC_AWORR_AWOR_CH41_SHIFT               (9U)
#define ADC_AWORR_AWOR_CH41_WIDTH               (1U)
#define ADC_AWORR_AWOR_CH41(x)                  (((uint32_t)(((uint32_t)(x)) << ADC_AWORR_AWOR_CH41_SHIFT)) & ADC_AWORR_AWOR_CH41_MASK)
#define ADC_AWORR_AWOR_CH42_MASK                (0x400U)
#define ADC_AWORR_AWOR_CH42_SHIFT               (10U)
#define ADC_AWORR_AWOR_CH42_WIDTH               (1U)
#define ADC_AWORR_AWOR_CH42(x)                  (((uint32_t)(((uint32_t)(x)) << ADC_AWORR_AWOR_CH42_SHIFT)) & ADC_AWORR_AWOR_CH42_MASK)
#define ADC_AWORR_AWOR_CH43_MASK                (0x800U)
#define ADC_AWORR_AWOR_CH43_SHIFT               (11U)
#define ADC_AWORR_AWOR_CH43_WIDTH               (1U)
#define ADC_AWORR_AWOR_CH43(x)                  (((uint32_t)(((uint32_t)(x)) << ADC_AWORR_AWOR_CH43_SHIFT)) & ADC_AWORR_AWOR_CH43_MASK)
#define ADC_AWORR_AWOR_CH44_MASK                (0x1000U)
#define ADC_AWORR_AWOR_CH44_SHIFT               (12U)
#define ADC_AWORR_AWOR_CH44_WIDTH               (1U)
#define ADC_AWORR_AWOR_CH44(x)                  (((uint32_t)(((uint32_t)(x)) << ADC_AWORR_AWOR_CH44_SHIFT)) & ADC_AWORR_AWOR_CH44_MASK)
#define ADC_AWORR_AWOR_CH45_MASK                (0x2000U)
#define ADC_AWORR_AWOR_CH45_SHIFT               (13U)
#define ADC_AWORR_AWOR_CH45_WIDTH               (1U)
#define ADC_AWORR_AWOR_CH45(x)                  (((uint32_t)(((uint32_t)(x)) << ADC_AWORR_AWOR_CH45_SHIFT)) & ADC_AWORR_AWOR_CH45_MASK)
#define ADC_AWORR_AWOR_CH46_MASK                (0x4000U)
#define ADC_AWORR_AWOR_CH46_SHIFT               (14U)
#define ADC_AWORR_AWOR_CH46_WIDTH               (1U)
#define ADC_AWORR_AWOR_CH46(x)                  (((uint32_t)(((uint32_t)(x)) << ADC_AWORR_AWOR_CH46_SHIFT)) & ADC_AWORR_AWOR_CH46_MASK)
#define ADC_AWORR_AWOR_CH47_MASK                (0x8000U)
#define ADC_AWORR_AWOR_CH47_SHIFT               (15U)
#define ADC_AWORR_AWOR_CH47_WIDTH               (1U)
#define ADC_AWORR_AWOR_CH47(x)                  (((uint32_t)(((uint32_t)(x)) << ADC_AWORR_AWOR_CH47_SHIFT)) & ADC_AWORR_AWOR_CH47_MASK)
/*! @} */

/*! @name STCR1 - Self-Test Configuration Register 1 */
/*! @{ */
#define ADC_STCR1_INPSAMP_S_MASK                 (0xFF00U)
#define ADC_STCR1_INPSAMP_S_SHIFT                (8U)
#define ADC_STCR1_INPSAMP_S_WIDTH                (8U)
#define ADC_STCR1_INPSAMP_S(x)                   (((uint32_t)(((uint32_t)(x)) << ADC_STCR1_INPSAMP_S_SHIFT)) & ADC_STCR1_INPSAMP_S_MASK)
#define ADC_STCR1_INPSAMP_C_MASK                 (0xFF000000U)
#define ADC_STCR1_INPSAMP_C_SHIFT                (24U)
#define ADC_STCR1_INPSAMP_C_WIDTH                (8U)
#define ADC_STCR1_INPSAMP_C(x)                   (((uint32_t)(((uint32_t)(x)) << ADC_STCR1_INPSAMP_C_SHIFT)) & ADC_STCR1_INPSAMP_C_MASK)
/*! @} */

/*! @name STCR2 - Self-Test Configuration Register 2 */
/*! @{ */
#define ADC_STCR2_FMA_S_MASK                     (0x1U)
#define ADC_STCR2_FMA_S_SHIFT                    (0U)
#define ADC_STCR2_FMA_S_WIDTH                    (1U)
#define ADC_STCR2_FMA_S(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_STCR2_FMA_S_SHIFT)) & ADC_STCR2_FMA_S_MASK)
#define ADC_STCR2_FMA_C_MASK                     (0x4U)
#define ADC_STCR2_FMA_C_SHIFT                    (2U)
#define ADC_STCR2_FMA_C_WIDTH                    (1U)
#define ADC_STCR2_FMA_C(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_STCR2_FMA_C_SHIFT)) & ADC_STCR2_FMA_C_MASK)
#define ADC_STCR2_FMA_WDTERR_MASK                (0x8U)
#define ADC_STCR2_FMA_WDTERR_SHIFT               (3U)
#define ADC_STCR2_FMA_WDTERR_WIDTH               (1U)
#define ADC_STCR2_FMA_WDTERR(x)                  (((uint32_t)(((uint32_t)(x)) << ADC_STCR2_FMA_WDTERR_SHIFT)) & ADC_STCR2_FMA_WDTERR_MASK)
#define ADC_STCR2_FMA_WDSERR_MASK                (0x10U)
#define ADC_STCR2_FMA_WDSERR_SHIFT               (4U)
#define ADC_STCR2_FMA_WDSERR_WIDTH               (1U)
#define ADC_STCR2_FMA_WDSERR(x)                  (((uint32_t)(((uint32_t)(x)) << ADC_STCR2_FMA_WDSERR_SHIFT)) & ADC_STCR2_FMA_WDSERR_MASK)
#define ADC_STCR2_EN_MASK                        (0x80U)
#define ADC_STCR2_EN_SHIFT                       (7U)
#define ADC_STCR2_EN_WIDTH                       (1U)
#define ADC_STCR2_EN(x)                          (((uint32_t)(((uint32_t)(x)) << ADC_STCR2_EN_SHIFT)) & ADC_STCR2_EN_MASK)
#define ADC_STCR2_MSKERR_S0_MASK                 (0x800U)
#define ADC_STCR2_MSKERR_S0_SHIFT                (11U)
#define ADC_STCR2_MSKERR_S0_WIDTH                (1U)
#define ADC_STCR2_MSKERR_S0(x)                   (((uint32_t)(((uint32_t)(x)) << ADC_STCR2_MSKERR_S0_SHIFT)) & ADC_STCR2_MSKERR_S0_MASK)
#define ADC_STCR2_MSKERR_S1_MASK                 (0x1000U)
#define ADC_STCR2_MSKERR_S1_SHIFT                (12U)
#define ADC_STCR2_MSKERR_S1_WIDTH                (1U)
#define ADC_STCR2_MSKERR_S1(x)                   (((uint32_t)(((uint32_t)(x)) << ADC_STCR2_MSKERR_S1_SHIFT)) & ADC_STCR2_MSKERR_S1_MASK)
#define ADC_STCR2_MSKERR_S2_MASK                 (0x2000U)
#define ADC_STCR2_MSKERR_S2_SHIFT                (13U)
#define ADC_STCR2_MSKERR_S2_WIDTH                (1U)
#define ADC_STCR2_MSKERR_S2(x)                   (((uint32_t)(((uint32_t)(x)) << ADC_STCR2_MSKERR_S2_SHIFT)) & ADC_STCR2_MSKERR_S2_MASK)
#define ADC_STCR2_MSKERR_C_MASK                  (0x8000U)
#define ADC_STCR2_MSKERR_C_SHIFT                 (15U)
#define ADC_STCR2_MSKERR_C_WIDTH                 (1U)
#define ADC_STCR2_MSKERR_C(x)                    (((uint32_t)(((uint32_t)(x)) << ADC_STCR2_MSKERR_C_SHIFT)) & ADC_STCR2_MSKERR_C_MASK)
#define ADC_STCR2_MSKWDG_EOA_S_MASK              (0x10000U)
#define ADC_STCR2_MSKWDG_EOA_S_SHIFT             (16U)
#define ADC_STCR2_MSKWDG_EOA_S_WIDTH             (1U)
#define ADC_STCR2_MSKWDG_EOA_S(x)                (((uint32_t)(((uint32_t)(x)) << ADC_STCR2_MSKWDG_EOA_S_SHIFT)) & ADC_STCR2_MSKWDG_EOA_S_MASK)
#define ADC_STCR2_MSKWDG_EOA_C_MASK              (0x40000U)
#define ADC_STCR2_MSKWDG_EOA_C_SHIFT             (18U)
#define ADC_STCR2_MSKWDG_EOA_C_WIDTH             (1U)
#define ADC_STCR2_MSKWDG_EOA_C(x)                (((uint32_t)(((uint32_t)(x)) << ADC_STCR2_MSKWDG_EOA_C_SHIFT)) & ADC_STCR2_MSKWDG_EOA_C_MASK)
#define ADC_STCR2_MSKST_EOC_MASK                 (0x800000U)
#define ADC_STCR2_MSKST_EOC_SHIFT                (23U)
#define ADC_STCR2_MSKST_EOC_WIDTH                (1U)
#define ADC_STCR2_MSKST_EOC(x)                   (((uint32_t)(((uint32_t)(x)) << ADC_STCR2_MSKST_EOC_SHIFT)) & ADC_STCR2_MSKST_EOC_MASK)
#define ADC_STCR2_MSKWDTERR_MASK                 (0x2000000U)
#define ADC_STCR2_MSKWDTERR_SHIFT                (25U)
#define ADC_STCR2_MSKWDTERR_WIDTH                (1U)
#define ADC_STCR2_MSKWDTERR(x)                   (((uint32_t)(((uint32_t)(x)) << ADC_STCR2_MSKWDTERR_SHIFT)) & ADC_STCR2_MSKWDTERR_MASK)
#define ADC_STCR2_SERR_MASK                      (0x4000000U)
#define ADC_STCR2_SERR_SHIFT                     (26U)
#define ADC_STCR2_SERR_WIDTH                     (1U)
#define ADC_STCR2_SERR(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_STCR2_SERR_SHIFT)) & ADC_STCR2_SERR_MASK)
#define ADC_STCR2_MSKWDSERR_MASK                 (0x8000000U)
#define ADC_STCR2_MSKWDSERR_SHIFT                (27U)
#define ADC_STCR2_MSKWDSERR_WIDTH                (1U)
#define ADC_STCR2_MSKWDSERR(x)                   (((uint32_t)(((uint32_t)(x)) << ADC_STCR2_MSKWDSERR_SHIFT)) & ADC_STCR2_MSKWDSERR_MASK)
/*! @} */

/*! @name STCR3 - Self-Test Configuration Register 3 */
/*! @{ */
#define ADC_STCR3_MSTEP_MASK                     (0x1FU)
#define ADC_STCR3_MSTEP_SHIFT                    (0U)
#define ADC_STCR3_MSTEP_WIDTH                    (5U)
#define ADC_STCR3_MSTEP(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_STCR3_MSTEP_SHIFT)) & ADC_STCR3_MSTEP_MASK)
#define ADC_STCR3_ALG_MASK                       (0x300U)
#define ADC_STCR3_ALG_SHIFT                      (8U)
#define ADC_STCR3_ALG_WIDTH                      (2U)
#define ADC_STCR3_ALG(x)                         (((uint32_t)(((uint32_t)(x)) << ADC_STCR3_ALG_SHIFT)) & ADC_STCR3_ALG_MASK)
/*! @} */

/*! @name STBRR - Self-Test Baud Rate Register */
/*! @{ */
#define ADC_STBRR_BR_MASK                        (0xFFU)
#define ADC_STBRR_BR_SHIFT                       (0U)
#define ADC_STBRR_BR_WIDTH                       (8U)
#define ADC_STBRR_BR(x)                          (((uint32_t)(((uint32_t)(x)) << ADC_STBRR_BR_SHIFT)) & ADC_STBRR_BR_MASK)
#define ADC_STBRR_WDT_MASK                       (0x70000U)
#define ADC_STBRR_WDT_SHIFT                      (16U)
#define ADC_STBRR_WDT_WIDTH                      (3U)
#define ADC_STBRR_WDT(x)                         (((uint32_t)(((uint32_t)(x)) << ADC_STBRR_WDT_SHIFT)) & ADC_STBRR_WDT_MASK)
/*! @} */

/*! @name STSR1 - Self-Test Status Register 1 */
/*! @{ */
#define ADC_STSR1_STEP_C_MASK                    (0x3E0U)
#define ADC_STSR1_STEP_C_SHIFT                   (5U)
#define ADC_STSR1_STEP_C_WIDTH                   (5U)
#define ADC_STSR1_STEP_C(x)                      (((uint32_t)(((uint32_t)(x)) << ADC_STSR1_STEP_C_SHIFT)) & ADC_STSR1_STEP_C_MASK)
#define ADC_STSR1_ERR_S0_MASK                    (0x800U)
#define ADC_STSR1_ERR_S0_SHIFT                   (11U)
#define ADC_STSR1_ERR_S0_WIDTH                   (1U)
#define ADC_STSR1_ERR_S0(x)                      (((uint32_t)(((uint32_t)(x)) << ADC_STSR1_ERR_S0_SHIFT)) & ADC_STSR1_ERR_S0_MASK)
#define ADC_STSR1_ERR_S1_MASK                    (0x1000U)
#define ADC_STSR1_ERR_S1_SHIFT                   (12U)
#define ADC_STSR1_ERR_S1_WIDTH                   (1U)
#define ADC_STSR1_ERR_S1(x)                      (((uint32_t)(((uint32_t)(x)) << ADC_STSR1_ERR_S1_SHIFT)) & ADC_STSR1_ERR_S1_MASK)
#define ADC_STSR1_ERR_S2_MASK                    (0x2000U)
#define ADC_STSR1_ERR_S2_SHIFT                   (13U)
#define ADC_STSR1_ERR_S2_WIDTH                   (1U)
#define ADC_STSR1_ERR_S2(x)                      (((uint32_t)(((uint32_t)(x)) << ADC_STSR1_ERR_S2_SHIFT)) & ADC_STSR1_ERR_S2_MASK)
#define ADC_STSR1_ERR_C_MASK                     (0x8000U)
#define ADC_STSR1_ERR_C_SHIFT                    (15U)
#define ADC_STSR1_ERR_C_WIDTH                    (1U)
#define ADC_STSR1_ERR_C(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_STSR1_ERR_C_SHIFT)) & ADC_STSR1_ERR_C_MASK)
#define ADC_STSR1_WDG_EOA_S_MASK                 (0x10000U)
#define ADC_STSR1_WDG_EOA_S_SHIFT                (16U)
#define ADC_STSR1_WDG_EOA_S_WIDTH                (1U)
#define ADC_STSR1_WDG_EOA_S(x)                   (((uint32_t)(((uint32_t)(x)) << ADC_STSR1_WDG_EOA_S_SHIFT)) & ADC_STSR1_WDG_EOA_S_MASK)
#define ADC_STSR1_WDG_EOA_C_MASK                 (0x40000U)
#define ADC_STSR1_WDG_EOA_C_SHIFT                (18U)
#define ADC_STSR1_WDG_EOA_C_WIDTH                (1U)
#define ADC_STSR1_WDG_EOA_C(x)                   (((uint32_t)(((uint32_t)(x)) << ADC_STSR1_WDG_EOA_C_SHIFT)) & ADC_STSR1_WDG_EOA_C_MASK)
#define ADC_STSR1_ST_EOC_MASK                    (0x800000U)
#define ADC_STSR1_ST_EOC_SHIFT                   (23U)
#define ADC_STSR1_ST_EOC_WIDTH                   (1U)
#define ADC_STSR1_ST_EOC(x)                      (((uint32_t)(((uint32_t)(x)) << ADC_STSR1_ST_EOC_SHIFT)) & ADC_STSR1_ST_EOC_MASK)
#define ADC_STSR1_OVERWR_MASK                    (0x1000000U)
#define ADC_STSR1_OVERWR_SHIFT                   (24U)
#define ADC_STSR1_OVERWR_WIDTH                   (1U)
#define ADC_STSR1_OVERWR(x)                      (((uint32_t)(((uint32_t)(x)) << ADC_STSR1_OVERWR_SHIFT)) & ADC_STSR1_OVERWR_MASK)
#define ADC_STSR1_WDTERR_MASK                    (0x2000000U)
#define ADC_STSR1_WDTERR_SHIFT                   (25U)
#define ADC_STSR1_WDTERR_WIDTH                   (1U)
#define ADC_STSR1_WDTERR(x)                      (((uint32_t)(((uint32_t)(x)) << ADC_STSR1_WDTERR_SHIFT)) & ADC_STSR1_WDTERR_MASK)
#define ADC_STSR1_WDSERR_MASK                    (0x8000000U)
#define ADC_STSR1_WDSERR_SHIFT                   (27U)
#define ADC_STSR1_WDSERR_WIDTH                   (1U)
#define ADC_STSR1_WDSERR(x)                      (((uint32_t)(((uint32_t)(x)) << ADC_STSR1_WDSERR_SHIFT)) & ADC_STSR1_WDSERR_MASK)
/*! @} */

/*! @name STSR2 - Self-Test Status Register 2 */
/*! @{ */
#define ADC_STSR2_DATA0_MASK                     (0xFFFU)
#define ADC_STSR2_DATA0_SHIFT                    (0U)
#define ADC_STSR2_DATA0_WIDTH                    (12U)
#define ADC_STSR2_DATA0(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_STSR2_DATA0_SHIFT)) & ADC_STSR2_DATA0_MASK)
#define ADC_STSR2_DATA1_MASK                     (0xFFF0000U)
#define ADC_STSR2_DATA1_SHIFT                    (16U)
#define ADC_STSR2_DATA1_WIDTH                    (12U)
#define ADC_STSR2_DATA1(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_STSR2_DATA1_SHIFT)) & ADC_STSR2_DATA1_MASK)
#define ADC_STSR2_OVFL_MASK                      (0x80000000U)
#define ADC_STSR2_OVFL_SHIFT                     (31U)
#define ADC_STSR2_OVFL_WIDTH                     (1U)
#define ADC_STSR2_OVFL(x)                        (((uint32_t)(((uint32_t)(x)) << ADC_STSR2_OVFL_SHIFT)) & ADC_STSR2_OVFL_MASK)
/*! @} */

/*! @name STSR3 - Self-Test Status Register 3 */
/*! @{ */
#define ADC_STSR3_DATA0_MASK                     (0xFFFU)
#define ADC_STSR3_DATA0_SHIFT                    (0U)
#define ADC_STSR3_DATA0_WIDTH                    (12U)
#define ADC_STSR3_DATA0(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_STSR3_DATA0_SHIFT)) & ADC_STSR3_DATA0_MASK)
#define ADC_STSR3_DATA1_MASK                     (0xFFF0000U)
#define ADC_STSR3_DATA1_SHIFT                    (16U)
#define ADC_STSR3_DATA1_WIDTH                    (12U)
#define ADC_STSR3_DATA1(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_STSR3_DATA1_SHIFT)) & ADC_STSR3_DATA1_MASK)
/*! @} */

/*! @name STSR4 - Self-Test Status Register 4 */
/*! @{ */
#define ADC_STSR4_DATA1_MASK                     (0xFFF0000U)
#define ADC_STSR4_DATA1_SHIFT                    (16U)
#define ADC_STSR4_DATA1_WIDTH                    (12U)
#define ADC_STSR4_DATA1(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_STSR4_DATA1_SHIFT)) & ADC_STSR4_DATA1_MASK)
/*! @} */

/*! @name STDR1 - Self-Test Data Register 1 */
/*! @{ */
#define ADC_STDR1_TCDATA_MASK                    (0xFFFU)
#define ADC_STDR1_TCDATA_SHIFT                   (0U)
#define ADC_STDR1_TCDATA_WIDTH                   (12U)
#define ADC_STDR1_TCDATA(x)                      (((uint32_t)(((uint32_t)(x)) << ADC_STDR1_TCDATA_SHIFT)) & ADC_STDR1_TCDATA_MASK)
#define ADC_STDR1_OWERWR_MASK                    (0x40000U)
#define ADC_STDR1_OWERWR_SHIFT                   (18U)
#define ADC_STDR1_OWERWR_WIDTH                   (1U)
#define ADC_STDR1_OWERWR(x)                      (((uint32_t)(((uint32_t)(x)) << ADC_STDR1_OWERWR_SHIFT)) & ADC_STDR1_OWERWR_MASK)
#define ADC_STDR1_VALID_MASK                     (0x80000U)
#define ADC_STDR1_VALID_SHIFT                    (19U)
#define ADC_STDR1_VALID_WIDTH                    (1U)
#define ADC_STDR1_VALID(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_STDR1_VALID_SHIFT)) & ADC_STDR1_VALID_MASK)
/*! @} */

/*! @name STDR2 - Self-Test Data Register 2 */
/*! @{ */
#define ADC_STDR2_IDATA_MASK                     (0xFFFU)
#define ADC_STDR2_IDATA_SHIFT                    (0U)
#define ADC_STDR2_IDATA_WIDTH                    (12U)
#define ADC_STDR2_IDATA(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_STDR2_IDATA_SHIFT)) & ADC_STDR2_IDATA_MASK)
#define ADC_STDR2_OVERWR_MASK                    (0x40000U)
#define ADC_STDR2_OVERWR_SHIFT                   (18U)
#define ADC_STDR2_OVERWR_WIDTH                   (1U)
#define ADC_STDR2_OVERWR(x)                      (((uint32_t)(((uint32_t)(x)) << ADC_STDR2_OVERWR_SHIFT)) & ADC_STDR2_OVERWR_MASK)
#define ADC_STDR2_VALID_MASK                     (0x80000U)
#define ADC_STDR2_VALID_SHIFT                    (19U)
#define ADC_STDR2_VALID_WIDTH                    (1U)
#define ADC_STDR2_VALID(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_STDR2_VALID_SHIFT)) & ADC_STDR2_VALID_MASK)
#define ADC_STDR2_FDATA_MASK                     (0xFFF00000U)
#define ADC_STDR2_FDATA_SHIFT                    (20U)
#define ADC_STDR2_FDATA_WIDTH                    (12U)
#define ADC_STDR2_FDATA(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_STDR2_FDATA_SHIFT)) & ADC_STDR2_FDATA_MASK)
/*! @} */

/*! @name STAW0R - Self-Test Analog Watchdog Register */
/*! @{ */
#define ADC_STAW0R_THRL_MASK                     (0xFFFU)
#define ADC_STAW0R_THRL_SHIFT                    (0U)
#define ADC_STAW0R_THRL_WIDTH                    (12U)
#define ADC_STAW0R_THRL(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_STAW0R_THRL_SHIFT)) & ADC_STAW0R_THRL_MASK)
#define ADC_STAW0R_THRH_MASK                     (0xFFF0000U)
#define ADC_STAW0R_THRH_SHIFT                    (16U)
#define ADC_STAW0R_THRH_WIDTH                    (12U)
#define ADC_STAW0R_THRH(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_STAW0R_THRH_SHIFT)) & ADC_STAW0R_THRH_MASK)
#define ADC_STAW0R_WDTE_MASK                     (0x40000000U)
#define ADC_STAW0R_WDTE_SHIFT                    (30U)
#define ADC_STAW0R_WDTE_WIDTH                    (1U)
#define ADC_STAW0R_WDTE(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_STAW0R_WDTE_SHIFT)) & ADC_STAW0R_WDTE_MASK)
#define ADC_STAW0R_AWDE_MASK                     (0x80000000U)
#define ADC_STAW0R_AWDE_SHIFT                    (31U)
#define ADC_STAW0R_AWDE_WIDTH                    (1U)
#define ADC_STAW0R_AWDE(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_STAW0R_AWDE_SHIFT)) & ADC_STAW0R_AWDE_MASK)
/*! @} */

/*! @name STAW1AR - Self-Test Analog Watchdog Register */
/*! @{ */
#define ADC_STAW1AR_THRL_MASK                    (0xFFFU)
#define ADC_STAW1AR_THRL_SHIFT                   (0U)
#define ADC_STAW1AR_THRL_WIDTH                   (12U)
#define ADC_STAW1AR_THRL(x)                      (((uint32_t)(((uint32_t)(x)) << ADC_STAW1AR_THRL_SHIFT)) & ADC_STAW1AR_THRL_MASK)
#define ADC_STAW1AR_THRH_MASK                    (0xFFF0000U)
#define ADC_STAW1AR_THRH_SHIFT                   (16U)
#define ADC_STAW1AR_THRH_WIDTH                   (12U)
#define ADC_STAW1AR_THRH(x)                      (((uint32_t)(((uint32_t)(x)) << ADC_STAW1AR_THRH_SHIFT)) & ADC_STAW1AR_THRH_MASK)
#define ADC_STAW1AR_AWDE_MASK                    (0x80000000U)
#define ADC_STAW1AR_AWDE_SHIFT                   (31U)
#define ADC_STAW1AR_AWDE_WIDTH                   (1U)
#define ADC_STAW1AR_AWDE(x)                      (((uint32_t)(((uint32_t)(x)) << ADC_STAW1AR_AWDE_SHIFT)) & ADC_STAW1AR_AWDE_MASK)
/*! @} */

/*! @name STAW1BR - Self-Test Analog Watchdog Register 1B */
/*! @{ */
#define ADC_STAW1BR_THRL_MASK                    (0xFFFU)
#define ADC_STAW1BR_THRL_SHIFT                   (0U)
#define ADC_STAW1BR_THRL_WIDTH                   (12U)
#define ADC_STAW1BR_THRL(x)                      (((uint32_t)(((uint32_t)(x)) << ADC_STAW1BR_THRL_SHIFT)) & ADC_STAW1BR_THRL_MASK)
#define ADC_STAW1BR_THRH_MASK                    (0xFFF0000U)
#define ADC_STAW1BR_THRH_SHIFT                   (16U)
#define ADC_STAW1BR_THRH_WIDTH                   (12U)
#define ADC_STAW1BR_THRH(x)                      (((uint32_t)(((uint32_t)(x)) << ADC_STAW1BR_THRH_SHIFT)) & ADC_STAW1BR_THRH_MASK)
/*! @} */

/*! @name STAW2R - Self-Test Analog Watchdog Register 2 */
/*! @{ */
#define ADC_STAW2R_THRL_MASK                     (0xFFFU)
#define ADC_STAW2R_THRL_SHIFT                    (0U)
#define ADC_STAW2R_THRL_WIDTH                    (12U)
#define ADC_STAW2R_THRL(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_STAW2R_THRL_SHIFT)) & ADC_STAW2R_THRL_MASK)
#define ADC_STAW2R_AWDE_MASK                     (0x80000000U)
#define ADC_STAW2R_AWDE_SHIFT                    (31U)
#define ADC_STAW2R_AWDE_WIDTH                    (1U)
#define ADC_STAW2R_AWDE(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_STAW2R_AWDE_SHIFT)) & ADC_STAW2R_AWDE_MASK)
/*! @} */

/*! @name STAW4R - Self-Test Analog Watchdog Register 4 */
/*! @{ */
#define ADC_STAW4R_THRL_MASK                     (0xFFFU)
#define ADC_STAW4R_THRL_SHIFT                    (0U)
#define ADC_STAW4R_THRL_WIDTH                    (12U)
#define ADC_STAW4R_THRL(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_STAW4R_THRL_SHIFT)) & ADC_STAW4R_THRL_MASK)
#define ADC_STAW4R_THRH_MASK                     (0xFFF0000U)
#define ADC_STAW4R_THRH_SHIFT                    (16U)
#define ADC_STAW4R_THRH_WIDTH                    (12U)
#define ADC_STAW4R_THRH(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_STAW4R_THRH_SHIFT)) & ADC_STAW4R_THRH_MASK)
#define ADC_STAW4R_WDTE_MASK                     (0x40000000U)
#define ADC_STAW4R_WDTE_SHIFT                    (30U)
#define ADC_STAW4R_WDTE_WIDTH                    (1U)
#define ADC_STAW4R_WDTE(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_STAW4R_WDTE_SHIFT)) & ADC_STAW4R_WDTE_MASK)
#define ADC_STAW4R_AWDE_MASK                     (0x80000000U)
#define ADC_STAW4R_AWDE_SHIFT                    (31U)
#define ADC_STAW4R_AWDE_WIDTH                    (1U)
#define ADC_STAW4R_AWDE(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_STAW4R_AWDE_SHIFT)) & ADC_STAW4R_AWDE_MASK)
/*! @} */

/*! @name STAW5R - Self-Test Analog Watchdog Register 5 */
/*! @{ */
#define ADC_STAW5R_THRL_MASK                     (0xFFFU)
#define ADC_STAW5R_THRL_SHIFT                    (0U)
#define ADC_STAW5R_THRL_WIDTH                    (12U)
#define ADC_STAW5R_THRL(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_STAW5R_THRL_SHIFT)) & ADC_STAW5R_THRL_MASK)
#define ADC_STAW5R_THRH_MASK                     (0xFFF0000U)
#define ADC_STAW5R_THRH_SHIFT                    (16U)
#define ADC_STAW5R_THRH_WIDTH                    (12U)
#define ADC_STAW5R_THRH(x)                       (((uint32_t)(((uint32_t)(x)) << ADC_STAW5R_THRH_SHIFT)) & ADC_STAW5R_THRH_MASK)
/*! @} */

/*! @name CALSTAT - Calibration Status register */
/*! @{ */
#define ADC_CALSTAT_STAT_1_MASK                  (0x1U)
#define ADC_CALSTAT_STAT_1_SHIFT                 (0U)
#define ADC_CALSTAT_STAT_1_WIDTH                 (1U)
#define ADC_CALSTAT_STAT_1(x)                    (((uint32_t)(((uint32_t)(x)) << ADC_CALSTAT_STAT_1_SHIFT)) & ADC_CALSTAT_STAT_1_MASK)
#define ADC_CALSTAT_STAT_2_MASK                  (0x2U)
#define ADC_CALSTAT_STAT_2_SHIFT                 (1U)
#define ADC_CALSTAT_STAT_2_WIDTH                 (1U)
#define ADC_CALSTAT_STAT_2(x)                    (((uint32_t)(((uint32_t)(x)) << ADC_CALSTAT_STAT_2_SHIFT)) & ADC_CALSTAT_STAT_2_MASK)
#define ADC_CALSTAT_STAT_3_MASK                  (0x4U)
#define ADC_CALSTAT_STAT_3_SHIFT                 (2U)
#define ADC_CALSTAT_STAT_3_WIDTH                 (1U)
#define ADC_CALSTAT_STAT_3(x)                    (((uint32_t)(((uint32_t)(x)) << ADC_CALSTAT_STAT_3_SHIFT)) & ADC_CALSTAT_STAT_3_MASK)
#define ADC_CALSTAT_STAT_4_MASK                  (0x8U)
#define ADC_CALSTAT_STAT_4_SHIFT                 (3U)
#define ADC_CALSTAT_STAT_4_WIDTH                 (1U)
#define ADC_CALSTAT_STAT_4(x)                    (((uint32_t)(((uint32_t)(x)) << ADC_CALSTAT_STAT_4_SHIFT)) & ADC_CALSTAT_STAT_4_MASK)
#define ADC_CALSTAT_STAT_5_MASK                  (0x10U)
#define ADC_CALSTAT_STAT_5_SHIFT                 (4U)
#define ADC_CALSTAT_STAT_5_WIDTH                 (1U)
#define ADC_CALSTAT_STAT_5(x)                    (((uint32_t)(((uint32_t)(x)) << ADC_CALSTAT_STAT_5_SHIFT)) & ADC_CALSTAT_STAT_5_MASK)
#define ADC_CALSTAT_STAT_6_MASK                  (0x20U)
#define ADC_CALSTAT_STAT_6_SHIFT                 (5U)
#define ADC_CALSTAT_STAT_6_WIDTH                 (1U)
#define ADC_CALSTAT_STAT_6(x)                    (((uint32_t)(((uint32_t)(x)) << ADC_CALSTAT_STAT_6_SHIFT)) & ADC_CALSTAT_STAT_6_MASK)
#define ADC_CALSTAT_STAT_7_MASK                  (0x40U)
#define ADC_CALSTAT_STAT_7_SHIFT                 (6U)
#define ADC_CALSTAT_STAT_7_WIDTH                 (1U)
#define ADC_CALSTAT_STAT_7(x)                    (((uint32_t)(((uint32_t)(x)) << ADC_CALSTAT_STAT_7_SHIFT)) & ADC_CALSTAT_STAT_7_MASK)
#define ADC_CALSTAT_STAT_8_MASK                  (0x80U)
#define ADC_CALSTAT_STAT_8_SHIFT                 (7U)
#define ADC_CALSTAT_STAT_8_WIDTH                 (1U)
#define ADC_CALSTAT_STAT_8(x)                    (((uint32_t)(((uint32_t)(x)) << ADC_CALSTAT_STAT_8_SHIFT)) & ADC_CALSTAT_STAT_8_MASK)
#define ADC_CALSTAT_STAT_9_MASK                  (0x100U)
#define ADC_CALSTAT_STAT_9_SHIFT                 (8U)
#define ADC_CALSTAT_STAT_9_WIDTH                 (1U)
#define ADC_CALSTAT_STAT_9(x)                    (((uint32_t)(((uint32_t)(x)) << ADC_CALSTAT_STAT_9_SHIFT)) & ADC_CALSTAT_STAT_9_MASK)
#define ADC_CALSTAT_STAT_10_MASK                 (0x200U)
#define ADC_CALSTAT_STAT_10_SHIFT                (9U)
#define ADC_CALSTAT_STAT_10_WIDTH                (1U)
#define ADC_CALSTAT_STAT_10(x)                   (((uint32_t)(((uint32_t)(x)) << ADC_CALSTAT_STAT_10_SHIFT)) & ADC_CALSTAT_STAT_10_MASK)
#define ADC_CALSTAT_STAT_11_MASK                 (0x400U)
#define ADC_CALSTAT_STAT_11_SHIFT                (10U)
#define ADC_CALSTAT_STAT_11_WIDTH                (1U)
#define ADC_CALSTAT_STAT_11(x)                   (((uint32_t)(((uint32_t)(x)) << ADC_CALSTAT_STAT_11_SHIFT)) & ADC_CALSTAT_STAT_11_MASK)
#define ADC_CALSTAT_STAT_12_MASK                 (0x800U)
#define ADC_CALSTAT_STAT_12_SHIFT                (11U)
#define ADC_CALSTAT_STAT_12_WIDTH                (1U)
#define ADC_CALSTAT_STAT_12(x)                   (((uint32_t)(((uint32_t)(x)) << ADC_CALSTAT_STAT_12_SHIFT)) & ADC_CALSTAT_STAT_12_MASK)
#define ADC_CALSTAT_STAT_13_MASK                 (0x1000U)
#define ADC_CALSTAT_STAT_13_SHIFT                (12U)
#define ADC_CALSTAT_STAT_13_WIDTH                (1U)
#define ADC_CALSTAT_STAT_13(x)                   (((uint32_t)(((uint32_t)(x)) << ADC_CALSTAT_STAT_13_SHIFT)) & ADC_CALSTAT_STAT_13_MASK)
#define ADC_CALSTAT_STAT_14_MASK                 (0x2000U)
#define ADC_CALSTAT_STAT_14_SHIFT                (13U)
#define ADC_CALSTAT_STAT_14_WIDTH                (1U)
#define ADC_CALSTAT_STAT_14(x)                   (((uint32_t)(((uint32_t)(x)) << ADC_CALSTAT_STAT_14_SHIFT)) & ADC_CALSTAT_STAT_14_MASK)
#define ADC_CALSTAT_TEST_RESULT_MASK             (0xFFFF0000U)
#define ADC_CALSTAT_TEST_RESULT_SHIFT            (16U)
#define ADC_CALSTAT_TEST_RESULT_WIDTH            (16U)
#define ADC_CALSTAT_TEST_RESULT(x)               (((uint32_t)(((uint32_t)(x)) << ADC_CALSTAT_TEST_RESULT_SHIFT)) & ADC_CALSTAT_TEST_RESULT_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group ADC_Register_Masks */


/*!
 * @}
 */ /* end of group ADC_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- ATP Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup ATP_Peripheral_Access_Layer ATP Peripheral Access Layer
 * @{
 */

/** ATP - Register Layout Typedef */
typedef struct {
  __IO uint32_t PLLC;                              /**< PLL Control, offset: 0x0 */
  __IO uint32_t PLLS;                              /**< PLL Status, offset: 0x4 */
  __IO uint32_t PLLDIV;                            /**< PLL Divider, offset: 0x8 */
  uint8_t RESERVED_0[20];
  __IO uint32_t PLLCKMUX;                          /**< PLL Clock MUX, offset: 0x20 */
  uint8_t RESERVED_1[732];
  __I  uint32_t ALS;                               /**< AL Status, offset: 0x300 */
  uint8_t RESERVED_2[4];
  __IO uint32_t ALGC;                              /**< AL General Control, offset: 0x308 */
  __IO uint32_t ALTC;                              /**< AL Training Control, offset: 0x30C */
  uint8_t RESERVED_3[304];
  __IO uint32_t LVDSTX;                            /**< LVDS TX IO Configuration, offset: 0x440 */
  __IO uint32_t LVDSRX;                            /**< LVDS RX IO Configuration, offset: 0x444 */
  __IO uint32_t LVDSTXOBE;                         /**< LVDS TX OBE Configuration, offset: 0x448 */
  uint8_t RESERVED_4[52];
  __IO uint32_t CIAC;                              /**< CIA Control, offset: 0x480 */
  uint8_t RESERVED_5[4];
  __IO uint32_t ATPE;                              /**< Aurora Trace Port Enable, offset: 0x488 */
  uint8_t RESERVED_6[2676];
  __I  uint32_t ITCTRL;                            /**< Integration Mode Control, offset: 0xF00 */
  uint8_t RESERVED_7[156];
  __I  uint32_t CLAIMSET;                          /**< Claim Tag Set, offset: 0xFA0 */
  __I  uint32_t CLAIMCLR;                          /**< Claim Tag Clear, offset: 0xFA4 */
  __I  uint32_t DEVAFF0;                           /**< Device Affinity 0, offset: 0xFA8 */
  __I  uint32_t DEVAFF1;                           /**< Device Affinity 1, offset: 0xFAC */
  __O  uint32_t LAR;                               /**< Lock Access Register, offset: 0xFB0 */
  __I  uint32_t LSR;                               /**< Lock Status Register, offset: 0xFB4 */
  __I  uint32_t AUTHSTATUS;                        /**< Authentication Status, offset: 0xFB8 */
  __I  uint32_t DEVARCH;                           /**< Device Architecture, offset: 0xFBC */
  __I  uint32_t DEVID2;                            /**< Device Configuration 2, offset: 0xFC0 */
  __I  uint32_t DEVID1;                            /**< Device Configuration 1, offset: 0xFC4 */
  __I  uint32_t DEVID;                             /**< Device Configuration, offset: 0xFC8 */
  __I  uint32_t DEVTYPE;                           /**< Device Type Identifier, offset: 0xFCC */
  __I  uint32_t PIDR4;                             /**< Peripheral Identification Register 4, offset: 0xFD0 */
  uint8_t RESERVED_8[12];
  __I  uint32_t PIDR0;                             /**< Peripheral Identification Register 0, offset: 0xFE0 */
  __I  uint32_t PIDR1;                             /**< Peripheral Identification Register 1, offset: 0xFE4 */
  __I  uint32_t PIDR2;                             /**< Peripheral Identification Register 2, offset: 0xFE8 */
  __I  uint32_t PIDR3;                             /**< Peripheral Identification Register 3, offset: 0xFEC */
  __I  uint32_t CIDR0;                             /**< Component Identification Register 0, offset: 0xFF0 */
  __I  uint32_t CIDR1;                             /**< Component Identification Register 1, offset: 0xFF4 */
  __I  uint32_t CIDR2;                             /**< Component Identification Register 2, offset: 0xFF8 */
  __I  uint32_t CIDR3;                             /**< Component Identification Register 3, offset: 0xFFC */
} ATP_Type, *ATP_MemMapPtr;

/** Number of instances of the ATP module. */
#define ATP_INSTANCE_COUNT                       (1u)

/* ATP - Peripheral instance base addresses */
/** Peripheral ATP base address */
#define ATP_BASE                                 (0x51033000u)
/** Peripheral ATP base pointer */
#define ATP                                      ((ATP_Type *)ATP_BASE)
/** Array initializer of ATP peripheral base addresses */
#define ATP_BASE_ADDRS                           { ATP_BASE }
/** Array initializer of ATP peripheral base pointers */
#define ATP_BASE_PTRS                            { ATP }

/* ----------------------------------------------------------------------------
   -- ATP Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup ATP_Register_Masks ATP Register Masks
 * @{
 */

/*! @name PLLC - PLL Control */
/*! @{ */
#define ATP_PLLC_PLLBYP_MASK                     (0x800000U)
#define ATP_PLLC_PLLBYP_SHIFT                    (23U)
#define ATP_PLLC_PLLBYP_WIDTH                    (1U)
#define ATP_PLLC_PLLBYP(x)                       (((uint32_t)(((uint32_t)(x)) << ATP_PLLC_PLLBYP_SHIFT)) & ATP_PLLC_PLLBYP_MASK)
#define ATP_PLLC_PLLPD_MASK                      (0x80000000U)
#define ATP_PLLC_PLLPD_SHIFT                     (31U)
#define ATP_PLLC_PLLPD_WIDTH                     (1U)
#define ATP_PLLC_PLLPD(x)                        (((uint32_t)(((uint32_t)(x)) << ATP_PLLC_PLLPD_SHIFT)) & ATP_PLLC_PLLPD_MASK)
/*! @} */

/*! @name PLLS - PLL Status */
/*! @{ */
#define ATP_PLLS_LOCK_MASK                       (0x4U)
#define ATP_PLLS_LOCK_SHIFT                      (2U)
#define ATP_PLLS_LOCK_WIDTH                      (1U)
#define ATP_PLLS_LOCK(x)                         (((uint32_t)(((uint32_t)(x)) << ATP_PLLS_LOCK_SHIFT)) & ATP_PLLS_LOCK_MASK)
#define ATP_PLLS_LOL_MASK                        (0x8U)
#define ATP_PLLS_LOL_SHIFT                       (3U)
#define ATP_PLLS_LOL_WIDTH                       (1U)
#define ATP_PLLS_LOL(x)                          (((uint32_t)(((uint32_t)(x)) << ATP_PLLS_LOL_SHIFT)) & ATP_PLLS_LOL_MASK)
/*! @} */

/*! @name PLLDIV - PLL Divider */
/*! @{ */
#define ATP_PLLDIV_MFID_MASK                     (0xFFU)
#define ATP_PLLDIV_MFID_SHIFT                    (0U)
#define ATP_PLLDIV_MFID_WIDTH                    (8U)
#define ATP_PLLDIV_MFID(x)                       (((uint32_t)(((uint32_t)(x)) << ATP_PLLDIV_MFID_SHIFT)) & ATP_PLLDIV_MFID_MASK)
#define ATP_PLLDIV_RDIV_MASK                     (0x7000U)
#define ATP_PLLDIV_RDIV_SHIFT                    (12U)
#define ATP_PLLDIV_RDIV_WIDTH                    (3U)
#define ATP_PLLDIV_RDIV(x)                       (((uint32_t)(((uint32_t)(x)) << ATP_PLLDIV_RDIV_SHIFT)) & ATP_PLLDIV_RDIV_MASK)
#define ATP_PLLDIV_ODIV1_MASK                    (0x3F0000U)
#define ATP_PLLDIV_ODIV1_SHIFT                   (16U)
#define ATP_PLLDIV_ODIV1_WIDTH                   (6U)
#define ATP_PLLDIV_ODIV1(x)                      (((uint32_t)(((uint32_t)(x)) << ATP_PLLDIV_ODIV1_SHIFT)) & ATP_PLLDIV_ODIV1_MASK)
/*! @} */

/*! @name PLLCKMUX - PLL Clock MUX */
/*! @{ */
#define ATP_PLLCKMUX_REFCLKSEL_MASK              (0x3U)
#define ATP_PLLCKMUX_REFCLKSEL_SHIFT             (0U)
#define ATP_PLLCKMUX_REFCLKSEL_WIDTH             (2U)
#define ATP_PLLCKMUX_REFCLKSEL(x)                (((uint32_t)(((uint32_t)(x)) << ATP_PLLCKMUX_REFCLKSEL_SHIFT)) & ATP_PLLCKMUX_REFCLKSEL_MASK)
/*! @} */

/*! @name ALS - AL Status */
/*! @{ */
#define ATP_ALS_AS_MASK                          (0x1U)
#define ATP_ALS_AS_SHIFT                         (0U)
#define ATP_ALS_AS_WIDTH                         (1U)
#define ATP_ALS_AS(x)                            (((uint32_t)(((uint32_t)(x)) << ATP_ALS_AS_SHIFT)) & ATP_ALS_AS_MASK)
#define ATP_ALS_CS_MASK                          (0x2U)
#define ATP_ALS_CS_SHIFT                         (1U)
#define ATP_ALS_CS_WIDTH                         (1U)
#define ATP_ALS_CS(x)                            (((uint32_t)(((uint32_t)(x)) << ATP_ALS_CS_SHIFT)) & ATP_ALS_CS_MASK)
#define ATP_ALS_TS_MASK                          (0xCU)
#define ATP_ALS_TS_SHIFT                         (2U)
#define ATP_ALS_TS_WIDTH                         (2U)
#define ATP_ALS_TS(x)                            (((uint32_t)(((uint32_t)(x)) << ATP_ALS_TS_SHIFT)) & ATP_ALS_TS_MASK)
#define ATP_ALS_PRST_MASK                        (0x200U)
#define ATP_ALS_PRST_SHIFT                       (9U)
#define ATP_ALS_PRST_WIDTH                       (1U)
#define ATP_ALS_PRST(x)                          (((uint32_t)(((uint32_t)(x)) << ATP_ALS_PRST_SHIFT)) & ATP_ALS_PRST_MASK)
#define ATP_ALS_TXCFG_MASK                       (0x1C00U)
#define ATP_ALS_TXCFG_SHIFT                      (10U)
#define ATP_ALS_TXCFG_WIDTH                      (3U)
#define ATP_ALS_TXCFG(x)                         (((uint32_t)(((uint32_t)(x)) << ATP_ALS_TXCFG_SHIFT)) & ATP_ALS_TXCFG_MASK)
/*! @} */

/*! @name ALGC - AL General Control */
/*! @{ */
#define ATP_ALGC_CCOEN_MASK                      (0x4U)
#define ATP_ALGC_CCOEN_SHIFT                     (2U)
#define ATP_ALGC_CCOEN_WIDTH                     (1U)
#define ATP_ALGC_CCOEN(x)                        (((uint32_t)(((uint32_t)(x)) << ATP_ALGC_CCOEN_SHIFT)) & ATP_ALGC_CCOEN_MASK)
#define ATP_ALGC_CRCEN_MASK                      (0x8U)
#define ATP_ALGC_CRCEN_SHIFT                     (3U)
#define ATP_ALGC_CRCEN_WIDTH                     (1U)
#define ATP_ALGC_CRCEN(x)                        (((uint32_t)(((uint32_t)(x)) << ATP_ALGC_CRCEN_SHIFT)) & ATP_ALGC_CRCEN_MASK)
#define ATP_ALGC_PCRST_MASK                      (0x4000U)
#define ATP_ALGC_PCRST_SHIFT                     (14U)
#define ATP_ALGC_PCRST_WIDTH                     (1U)
#define ATP_ALGC_PCRST(x)                        (((uint32_t)(((uint32_t)(x)) << ATP_ALGC_PCRST_SHIFT)) & ATP_ALGC_PCRST_MASK)
#define ATP_ALGC_RST_MASK                        (0x80000000U)
#define ATP_ALGC_RST_SHIFT                       (31U)
#define ATP_ALGC_RST_WIDTH                       (1U)
#define ATP_ALGC_RST(x)                          (((uint32_t)(((uint32_t)(x)) << ATP_ALGC_RST_SHIFT)) & ATP_ALGC_RST_MASK)
/*! @} */

/*! @name ALTC - AL Training Control */
/*! @{ */
#define ATP_ALTC_VTC_MASK                        (0xFU)
#define ATP_ALTC_VTC_SHIFT                       (0U)
#define ATP_ALTC_VTC_WIDTH                       (4U)
#define ATP_ALTC_VTC(x)                          (((uint32_t)(((uint32_t)(x)) << ATP_ALTC_VTC_SHIFT)) & ATP_ALTC_VTC_MASK)
#define ATP_ALTC_BTC_MASK                        (0x3C00U)
#define ATP_ALTC_BTC_SHIFT                       (10U)
#define ATP_ALTC_BTC_WIDTH                       (4U)
#define ATP_ALTC_BTC(x)                          (((uint32_t)(((uint32_t)(x)) << ATP_ALTC_BTC_SHIFT)) & ATP_ALTC_BTC_MASK)
#define ATP_ALTC_ATC_MASK                        (0x780000U)
#define ATP_ALTC_ATC_SHIFT                       (19U)
#define ATP_ALTC_ATC_WIDTH                       (4U)
#define ATP_ALTC_ATC(x)                          (((uint32_t)(((uint32_t)(x)) << ATP_ALTC_ATC_SHIFT)) & ATP_ALTC_ATC_MASK)
#define ATP_ALTC_VHD_MASK                        (0x10000000U)
#define ATP_ALTC_VHD_SHIFT                       (28U)
#define ATP_ALTC_VHD_WIDTH                       (1U)
#define ATP_ALTC_VHD(x)                          (((uint32_t)(((uint32_t)(x)) << ATP_ALTC_VHD_SHIFT)) & ATP_ALTC_VHD_MASK)
#define ATP_ALTC_BHD_MASK                        (0x20000000U)
#define ATP_ALTC_BHD_SHIFT                       (29U)
#define ATP_ALTC_BHD_WIDTH                       (1U)
#define ATP_ALTC_BHD(x)                          (((uint32_t)(((uint32_t)(x)) << ATP_ALTC_BHD_SHIFT)) & ATP_ALTC_BHD_MASK)
#define ATP_ALTC_AHD_MASK                        (0x40000000U)
#define ATP_ALTC_AHD_SHIFT                       (30U)
#define ATP_ALTC_AHD_WIDTH                       (1U)
#define ATP_ALTC_AHD(x)                          (((uint32_t)(((uint32_t)(x)) << ATP_ALTC_AHD_SHIFT)) & ATP_ALTC_AHD_MASK)
#define ATP_ALTC_STE_MASK                        (0x80000000U)
#define ATP_ALTC_STE_SHIFT                       (31U)
#define ATP_ALTC_STE_WIDTH                       (1U)
#define ATP_ALTC_STE(x)                          (((uint32_t)(((uint32_t)(x)) << ATP_ALTC_STE_SHIFT)) & ATP_ALTC_STE_MASK)
/*! @} */

/*! @name LVDSTX - LVDS TX IO Configuration */
/*! @{ */
#define ATP_LVDSTX_TXAMODE_MASK                  (0x1U)
#define ATP_LVDSTX_TXAMODE_SHIFT                 (0U)
#define ATP_LVDSTX_TXAMODE_WIDTH                 (1U)
#define ATP_LVDSTX_TXAMODE(x)                    (((uint32_t)(((uint32_t)(x)) << ATP_LVDSTX_TXAMODE_SHIFT)) & ATP_LVDSTX_TXAMODE_MASK)
#define ATP_LVDSTX_CREF_EN_MASK                  (0x2U)
#define ATP_LVDSTX_CREF_EN_SHIFT                 (1U)
#define ATP_LVDSTX_CREF_EN_WIDTH                 (1U)
#define ATP_LVDSTX_CREF_EN(x)                    (((uint32_t)(((uint32_t)(x)) << ATP_LVDSTX_CREF_EN_SHIFT)) & ATP_LVDSTX_CREF_EN_MASK)
#define ATP_LVDSTX_TX_TREF_EN_MASK               (0x4U)
#define ATP_LVDSTX_TX_TREF_EN_SHIFT              (2U)
#define ATP_LVDSTX_TX_TREF_EN_WIDTH              (1U)
#define ATP_LVDSTX_TX_TREF_EN(x)                 (((uint32_t)(((uint32_t)(x)) << ATP_LVDSTX_TX_TREF_EN_SHIFT)) & ATP_LVDSTX_TX_TREF_EN_MASK)
#define ATP_LVDSTX_PREMPH_MASK                   (0x60U)
#define ATP_LVDSTX_PREMPH_SHIFT                  (5U)
#define ATP_LVDSTX_PREMPH_WIDTH                  (2U)
#define ATP_LVDSTX_PREMPH(x)                     (((uint32_t)(((uint32_t)(x)) << ATP_LVDSTX_PREMPH_SHIFT)) & ATP_LVDSTX_PREMPH_MASK)
#define ATP_LVDSTX_TX_CONF_MASK                  (0xF000U)
#define ATP_LVDSTX_TX_CONF_SHIFT                 (12U)
#define ATP_LVDSTX_TX_CONF_WIDTH                 (4U)
#define ATP_LVDSTX_TX_CONF(x)                    (((uint32_t)(((uint32_t)(x)) << ATP_LVDSTX_TX_CONF_SHIFT)) & ATP_LVDSTX_TX_CONF_MASK)
#define ATP_LVDSTX_PADS_TX_CONF_EN_MASK          (0x10000U)
#define ATP_LVDSTX_PADS_TX_CONF_EN_SHIFT         (16U)
#define ATP_LVDSTX_PADS_TX_CONF_EN_WIDTH         (1U)
#define ATP_LVDSTX_PADS_TX_CONF_EN(x)            (((uint32_t)(((uint32_t)(x)) << ATP_LVDSTX_PADS_TX_CONF_EN_SHIFT)) & ATP_LVDSTX_PADS_TX_CONF_EN_MASK)
/*! @} */

/*! @name LVDSRX - LVDS RX IO Configuration */
/*! @{ */
#define ATP_LVDSRX_RXICE_MASK                    (0x2U)
#define ATP_LVDSRX_RXICE_SHIFT                   (1U)
#define ATP_LVDSRX_RXICE_WIDTH                   (1U)
#define ATP_LVDSRX_RXICE(x)                      (((uint32_t)(((uint32_t)(x)) << ATP_LVDSRX_RXICE_SHIFT)) & ATP_LVDSRX_RXICE_MASK)
#define ATP_LVDSRX_RXCB_MASK                     (0x8U)
#define ATP_LVDSRX_RXCB_SHIFT                    (3U)
#define ATP_LVDSRX_RXCB_WIDTH                    (1U)
#define ATP_LVDSRX_RXCB(x)                       (((uint32_t)(((uint32_t)(x)) << ATP_LVDSRX_RXCB_SHIFT)) & ATP_LVDSRX_RXCB_MASK)
#define ATP_LVDSRX_RX_TREF_EN_MASK               (0x10000U)
#define ATP_LVDSRX_RX_TREF_EN_SHIFT              (16U)
#define ATP_LVDSRX_RX_TREF_EN_WIDTH              (1U)
#define ATP_LVDSRX_RX_TREF_EN(x)                 (((uint32_t)(((uint32_t)(x)) << ATP_LVDSRX_RX_TREF_EN_SHIFT)) & ATP_LVDSRX_RX_TREF_EN_MASK)
/*! @} */

/*! @name LVDSTXOBE - LVDS TX OBE Configuration */
/*! @{ */
#define ATP_LVDSTXOBE_OBETX0_MASK                (0x1U)
#define ATP_LVDSTXOBE_OBETX0_SHIFT               (0U)
#define ATP_LVDSTXOBE_OBETX0_WIDTH               (1U)
#define ATP_LVDSTXOBE_OBETX0(x)                  (((uint32_t)(((uint32_t)(x)) << ATP_LVDSTXOBE_OBETX0_SHIFT)) & ATP_LVDSTXOBE_OBETX0_MASK)
#define ATP_LVDSTXOBE_OBETX1_MASK                (0x2U)
#define ATP_LVDSTXOBE_OBETX1_SHIFT               (1U)
#define ATP_LVDSTXOBE_OBETX1_WIDTH               (1U)
#define ATP_LVDSTXOBE_OBETX1(x)                  (((uint32_t)(((uint32_t)(x)) << ATP_LVDSTXOBE_OBETX1_SHIFT)) & ATP_LVDSTXOBE_OBETX1_MASK)
#define ATP_LVDSTXOBE_OBETX2_MASK                (0x4U)
#define ATP_LVDSTXOBE_OBETX2_SHIFT               (2U)
#define ATP_LVDSTXOBE_OBETX2_WIDTH               (1U)
#define ATP_LVDSTXOBE_OBETX2(x)                  (((uint32_t)(((uint32_t)(x)) << ATP_LVDSTXOBE_OBETX2_SHIFT)) & ATP_LVDSTXOBE_OBETX2_MASK)
#define ATP_LVDSTXOBE_OBETX3_MASK                (0x8U)
#define ATP_LVDSTXOBE_OBETX3_SHIFT               (3U)
#define ATP_LVDSTXOBE_OBETX3_WIDTH               (1U)
#define ATP_LVDSTXOBE_OBETX3(x)                  (((uint32_t)(((uint32_t)(x)) << ATP_LVDSTXOBE_OBETX3_SHIFT)) & ATP_LVDSTXOBE_OBETX3_MASK)
/*! @} */

/*! @name CIAC - CIA Control */
/*! @{ */
#define ATP_CIAC_NUM_LANE_MASK                   (0xFU)
#define ATP_CIAC_NUM_LANE_SHIFT                  (0U)
#define ATP_CIAC_NUM_LANE_WIDTH                  (4U)
#define ATP_CIAC_NUM_LANE(x)                     (((uint32_t)(((uint32_t)(x)) << ATP_CIAC_NUM_LANE_SHIFT)) & ATP_CIAC_NUM_LANE_MASK)
#define ATP_CIAC_TPIUCM_MASK                     (0x70U)
#define ATP_CIAC_TPIUCM_SHIFT                    (4U)
#define ATP_CIAC_TPIUCM_WIDTH                    (3U)
#define ATP_CIAC_TPIUCM(x)                       (((uint32_t)(((uint32_t)(x)) << ATP_CIAC_TPIUCM_SHIFT)) & ATP_CIAC_TPIUCM_MASK)
#define ATP_CIAC_DBITR_MASK                      (0x100U)
#define ATP_CIAC_DBITR_SHIFT                     (8U)
#define ATP_CIAC_DBITR_WIDTH                     (1U)
#define ATP_CIAC_DBITR(x)                        (((uint32_t)(((uint32_t)(x)) << ATP_CIAC_DBITR_SHIFT)) & ATP_CIAC_DBITR_MASK)
#define ATP_CIAC_DBYTER_MASK                     (0x200U)
#define ATP_CIAC_DBYTER_SHIFT                    (9U)
#define ATP_CIAC_DBYTER_WIDTH                    (1U)
#define ATP_CIAC_DBYTER(x)                       (((uint32_t)(((uint32_t)(x)) << ATP_CIAC_DBYTER_SHIFT)) & ATP_CIAC_DBYTER_MASK)
/*! @} */

/*! @name ATPE - Aurora Trace Port Enable */
/*! @{ */
#define ATP_ATPE_ATPEN_MASK                      (0x1U)
#define ATP_ATPE_ATPEN_SHIFT                     (0U)
#define ATP_ATPE_ATPEN_WIDTH                     (1U)
#define ATP_ATPE_ATPEN(x)                        (((uint32_t)(((uint32_t)(x)) << ATP_ATPE_ATPEN_SHIFT)) & ATP_ATPE_ATPEN_MASK)
#define ATP_ATPE_APHYEN_MASK                     (0x2U)
#define ATP_ATPE_APHYEN_SHIFT                    (1U)
#define ATP_ATPE_APHYEN_WIDTH                    (1U)
#define ATP_ATPE_APHYEN(x)                       (((uint32_t)(((uint32_t)(x)) << ATP_ATPE_APHYEN_SHIFT)) & ATP_ATPE_APHYEN_MASK)
/*! @} */

/*! @name ITCTRL - Integration Mode Control */
/*! @{ */
#define ATP_ITCTRL_IME_MASK                      (0x1U)
#define ATP_ITCTRL_IME_SHIFT                     (0U)
#define ATP_ITCTRL_IME_WIDTH                     (1U)
#define ATP_ITCTRL_IME(x)                        (((uint32_t)(((uint32_t)(x)) << ATP_ITCTRL_IME_SHIFT)) & ATP_ITCTRL_IME_MASK)
/*! @} */

/*! @name CLAIMSET - Claim Tag Set */
/*! @{ */
#define ATP_CLAIMSET_SET_MASK                    (0xFFFFFFFFU)
#define ATP_CLAIMSET_SET_SHIFT                   (0U)
#define ATP_CLAIMSET_SET_WIDTH                   (32U)
#define ATP_CLAIMSET_SET(x)                      (((uint32_t)(((uint32_t)(x)) << ATP_CLAIMSET_SET_SHIFT)) & ATP_CLAIMSET_SET_MASK)
/*! @} */

/*! @name CLAIMCLR - Claim Tag Clear */
/*! @{ */
#define ATP_CLAIMCLR_CLR_MASK                    (0xFFFFFFFFU)
#define ATP_CLAIMCLR_CLR_SHIFT                   (0U)
#define ATP_CLAIMCLR_CLR_WIDTH                   (32U)
#define ATP_CLAIMCLR_CLR(x)                      (((uint32_t)(((uint32_t)(x)) << ATP_CLAIMCLR_CLR_SHIFT)) & ATP_CLAIMCLR_CLR_MASK)
/*! @} */

/*! @name DEVAFF0 - Device Affinity 0 */
/*! @{ */
#define ATP_DEVAFF0_DEVAFF0_MASK                 (0xFFFFFFFFU)
#define ATP_DEVAFF0_DEVAFF0_SHIFT                (0U)
#define ATP_DEVAFF0_DEVAFF0_WIDTH                (32U)
#define ATP_DEVAFF0_DEVAFF0(x)                   (((uint32_t)(((uint32_t)(x)) << ATP_DEVAFF0_DEVAFF0_SHIFT)) & ATP_DEVAFF0_DEVAFF0_MASK)
/*! @} */

/*! @name DEVAFF1 - Device Affinity 1 */
/*! @{ */
#define ATP_DEVAFF1_DEVAFF1_MASK                 (0xFFFFFFFFU)
#define ATP_DEVAFF1_DEVAFF1_SHIFT                (0U)
#define ATP_DEVAFF1_DEVAFF1_WIDTH                (32U)
#define ATP_DEVAFF1_DEVAFF1(x)                   (((uint32_t)(((uint32_t)(x)) << ATP_DEVAFF1_DEVAFF1_SHIFT)) & ATP_DEVAFF1_DEVAFF1_MASK)
/*! @} */

/*! @name LAR - Lock Access Register */
/*! @{ */
#define ATP_LAR_KEY_MASK                         (0xFFFFFFFFU)
#define ATP_LAR_KEY_SHIFT                        (0U)
#define ATP_LAR_KEY_WIDTH                        (32U)
#define ATP_LAR_KEY(x)                           (((uint32_t)(((uint32_t)(x)) << ATP_LAR_KEY_SHIFT)) & ATP_LAR_KEY_MASK)
/*! @} */

/*! @name LSR - Lock Status Register */
/*! @{ */
#define ATP_LSR_SLI_MASK                         (0x1U)
#define ATP_LSR_SLI_SHIFT                        (0U)
#define ATP_LSR_SLI_WIDTH                        (1U)
#define ATP_LSR_SLI(x)                           (((uint32_t)(((uint32_t)(x)) << ATP_LSR_SLI_SHIFT)) & ATP_LSR_SLI_MASK)
#define ATP_LSR_SLK_MASK                         (0x2U)
#define ATP_LSR_SLK_SHIFT                        (1U)
#define ATP_LSR_SLK_WIDTH                        (1U)
#define ATP_LSR_SLK(x)                           (((uint32_t)(((uint32_t)(x)) << ATP_LSR_SLK_SHIFT)) & ATP_LSR_SLK_MASK)
#define ATP_LSR_nTT_MASK                         (0x4U)
#define ATP_LSR_nTT_SHIFT                        (2U)
#define ATP_LSR_nTT_WIDTH                        (1U)
#define ATP_LSR_nTT(x)                           (((uint32_t)(((uint32_t)(x)) << ATP_LSR_nTT_SHIFT)) & ATP_LSR_nTT_MASK)
/*! @} */

/*! @name AUTHSTATUS - Authentication Status */
/*! @{ */
#define ATP_AUTHSTATUS_AUTHSTATUS_MASK           (0xFFU)
#define ATP_AUTHSTATUS_AUTHSTATUS_SHIFT          (0U)
#define ATP_AUTHSTATUS_AUTHSTATUS_WIDTH          (8U)
#define ATP_AUTHSTATUS_AUTHSTATUS(x)             (((uint32_t)(((uint32_t)(x)) << ATP_AUTHSTATUS_AUTHSTATUS_SHIFT)) & ATP_AUTHSTATUS_AUTHSTATUS_MASK)
/*! @} */

/*! @name DEVARCH - Device Architecture */
/*! @{ */
#define ATP_DEVARCH_ARCHID_MASK                  (0xFFFFU)
#define ATP_DEVARCH_ARCHID_SHIFT                 (0U)
#define ATP_DEVARCH_ARCHID_WIDTH                 (16U)
#define ATP_DEVARCH_ARCHID(x)                    (((uint32_t)(((uint32_t)(x)) << ATP_DEVARCH_ARCHID_SHIFT)) & ATP_DEVARCH_ARCHID_MASK)
#define ATP_DEVARCH_REVISION_MASK                (0xF0000U)
#define ATP_DEVARCH_REVISION_SHIFT               (16U)
#define ATP_DEVARCH_REVISION_WIDTH               (4U)
#define ATP_DEVARCH_REVISION(x)                  (((uint32_t)(((uint32_t)(x)) << ATP_DEVARCH_REVISION_SHIFT)) & ATP_DEVARCH_REVISION_MASK)
#define ATP_DEVARCH_PRESENT_MASK                 (0x100000U)
#define ATP_DEVARCH_PRESENT_SHIFT                (20U)
#define ATP_DEVARCH_PRESENT_WIDTH                (1U)
#define ATP_DEVARCH_PRESENT(x)                   (((uint32_t)(((uint32_t)(x)) << ATP_DEVARCH_PRESENT_SHIFT)) & ATP_DEVARCH_PRESENT_MASK)
#define ATP_DEVARCH_ARCHITECT_MASK               (0xFFE00000U)
#define ATP_DEVARCH_ARCHITECT_SHIFT              (21U)
#define ATP_DEVARCH_ARCHITECT_WIDTH              (11U)
#define ATP_DEVARCH_ARCHITECT(x)                 (((uint32_t)(((uint32_t)(x)) << ATP_DEVARCH_ARCHITECT_SHIFT)) & ATP_DEVARCH_ARCHITECT_MASK)
/*! @} */

/*! @name DEVID2 - Device Configuration 2 */
/*! @{ */
#define ATP_DEVID2_DEVID2_MASK                   (0xFFFFFFFFU)
#define ATP_DEVID2_DEVID2_SHIFT                  (0U)
#define ATP_DEVID2_DEVID2_WIDTH                  (32U)
#define ATP_DEVID2_DEVID2(x)                     (((uint32_t)(((uint32_t)(x)) << ATP_DEVID2_DEVID2_SHIFT)) & ATP_DEVID2_DEVID2_MASK)
/*! @} */

/*! @name DEVID1 - Device Configuration 1 */
/*! @{ */
#define ATP_DEVID1_DEVID1_MASK                   (0xFFFFFFFFU)
#define ATP_DEVID1_DEVID1_SHIFT                  (0U)
#define ATP_DEVID1_DEVID1_WIDTH                  (32U)
#define ATP_DEVID1_DEVID1(x)                     (((uint32_t)(((uint32_t)(x)) << ATP_DEVID1_DEVID1_SHIFT)) & ATP_DEVID1_DEVID1_MASK)
/*! @} */

/*! @name DEVID - Device Configuration */
/*! @{ */
#define ATP_DEVID_DEVID_MASK                     (0xFFFFFFFFU)
#define ATP_DEVID_DEVID_SHIFT                    (0U)
#define ATP_DEVID_DEVID_WIDTH                    (32U)
#define ATP_DEVID_DEVID(x)                       (((uint32_t)(((uint32_t)(x)) << ATP_DEVID_DEVID_SHIFT)) & ATP_DEVID_DEVID_MASK)
/*! @} */

/*! @name DEVTYPE - Device Type Identifier */
/*! @{ */
#define ATP_DEVTYPE_MAJOR_MASK                   (0xFU)
#define ATP_DEVTYPE_MAJOR_SHIFT                  (0U)
#define ATP_DEVTYPE_MAJOR_WIDTH                  (4U)
#define ATP_DEVTYPE_MAJOR(x)                     (((uint32_t)(((uint32_t)(x)) << ATP_DEVTYPE_MAJOR_SHIFT)) & ATP_DEVTYPE_MAJOR_MASK)
#define ATP_DEVTYPE_SUB_MASK                     (0xF0U)
#define ATP_DEVTYPE_SUB_SHIFT                    (4U)
#define ATP_DEVTYPE_SUB_WIDTH                    (4U)
#define ATP_DEVTYPE_SUB(x)                       (((uint32_t)(((uint32_t)(x)) << ATP_DEVTYPE_SUB_SHIFT)) & ATP_DEVTYPE_SUB_MASK)
/*! @} */

/*! @name PIDR4 - Peripheral Identification Register 4 */
/*! @{ */
#define ATP_PIDR4_DES_2_MASK                     (0xFU)
#define ATP_PIDR4_DES_2_SHIFT                    (0U)
#define ATP_PIDR4_DES_2_WIDTH                    (4U)
#define ATP_PIDR4_DES_2(x)                       (((uint32_t)(((uint32_t)(x)) << ATP_PIDR4_DES_2_SHIFT)) & ATP_PIDR4_DES_2_MASK)
#define ATP_PIDR4_SIZE_MASK                      (0xF0U)
#define ATP_PIDR4_SIZE_SHIFT                     (4U)
#define ATP_PIDR4_SIZE_WIDTH                     (4U)
#define ATP_PIDR4_SIZE(x)                        (((uint32_t)(((uint32_t)(x)) << ATP_PIDR4_SIZE_SHIFT)) & ATP_PIDR4_SIZE_MASK)
/*! @} */

/*! @name PIDR0 - Peripheral Identification Register 0 */
/*! @{ */
#define ATP_PIDR0_PART_0_MASK                    (0xFFU)
#define ATP_PIDR0_PART_0_SHIFT                   (0U)
#define ATP_PIDR0_PART_0_WIDTH                   (8U)
#define ATP_PIDR0_PART_0(x)                      (((uint32_t)(((uint32_t)(x)) << ATP_PIDR0_PART_0_SHIFT)) & ATP_PIDR0_PART_0_MASK)
/*! @} */

/*! @name PIDR1 - Peripheral Identification Register 1 */
/*! @{ */
#define ATP_PIDR1_PART_1_MASK                    (0xFU)
#define ATP_PIDR1_PART_1_SHIFT                   (0U)
#define ATP_PIDR1_PART_1_WIDTH                   (4U)
#define ATP_PIDR1_PART_1(x)                      (((uint32_t)(((uint32_t)(x)) << ATP_PIDR1_PART_1_SHIFT)) & ATP_PIDR1_PART_1_MASK)
#define ATP_PIDR1_DES_0_MASK                     (0xF0U)
#define ATP_PIDR1_DES_0_SHIFT                    (4U)
#define ATP_PIDR1_DES_0_WIDTH                    (4U)
#define ATP_PIDR1_DES_0(x)                       (((uint32_t)(((uint32_t)(x)) << ATP_PIDR1_DES_0_SHIFT)) & ATP_PIDR1_DES_0_MASK)
/*! @} */

/*! @name PIDR2 - Peripheral Identification Register 2 */
/*! @{ */
#define ATP_PIDR2_DES_1_MASK                     (0x7U)
#define ATP_PIDR2_DES_1_SHIFT                    (0U)
#define ATP_PIDR2_DES_1_WIDTH                    (3U)
#define ATP_PIDR2_DES_1(x)                       (((uint32_t)(((uint32_t)(x)) << ATP_PIDR2_DES_1_SHIFT)) & ATP_PIDR2_DES_1_MASK)
#define ATP_PIDR2_JEDEC_MASK                     (0x8U)
#define ATP_PIDR2_JEDEC_SHIFT                    (3U)
#define ATP_PIDR2_JEDEC_WIDTH                    (1U)
#define ATP_PIDR2_JEDEC(x)                       (((uint32_t)(((uint32_t)(x)) << ATP_PIDR2_JEDEC_SHIFT)) & ATP_PIDR2_JEDEC_MASK)
#define ATP_PIDR2_REVISION_MASK                  (0xF0U)
#define ATP_PIDR2_REVISION_SHIFT                 (4U)
#define ATP_PIDR2_REVISION_WIDTH                 (4U)
#define ATP_PIDR2_REVISION(x)                    (((uint32_t)(((uint32_t)(x)) << ATP_PIDR2_REVISION_SHIFT)) & ATP_PIDR2_REVISION_MASK)
/*! @} */

/*! @name PIDR3 - Peripheral Identification Register 3 */
/*! @{ */
#define ATP_PIDR3_REVAND_MASK                    (0xFU)
#define ATP_PIDR3_REVAND_SHIFT                   (0U)
#define ATP_PIDR3_REVAND_WIDTH                   (4U)
#define ATP_PIDR3_REVAND(x)                      (((uint32_t)(((uint32_t)(x)) << ATP_PIDR3_REVAND_SHIFT)) & ATP_PIDR3_REVAND_MASK)
#define ATP_PIDR3_CMOD_MASK                      (0xF0U)
#define ATP_PIDR3_CMOD_SHIFT                     (4U)
#define ATP_PIDR3_CMOD_WIDTH                     (4U)
#define ATP_PIDR3_CMOD(x)                        (((uint32_t)(((uint32_t)(x)) << ATP_PIDR3_CMOD_SHIFT)) & ATP_PIDR3_CMOD_MASK)
/*! @} */

/*! @name CIDR0 - Component Identification Register 0 */
/*! @{ */
#define ATP_CIDR0_PRMBL_0_MASK                   (0xFFU)
#define ATP_CIDR0_PRMBL_0_SHIFT                  (0U)
#define ATP_CIDR0_PRMBL_0_WIDTH                  (8U)
#define ATP_CIDR0_PRMBL_0(x)                     (((uint32_t)(((uint32_t)(x)) << ATP_CIDR0_PRMBL_0_SHIFT)) & ATP_CIDR0_PRMBL_0_MASK)
/*! @} */

/*! @name CIDR1 - Component Identification Register 1 */
/*! @{ */
#define ATP_CIDR1_PRMBL_1_MASK                   (0xFU)
#define ATP_CIDR1_PRMBL_1_SHIFT                  (0U)
#define ATP_CIDR1_PRMBL_1_WIDTH                  (4U)
#define ATP_CIDR1_PRMBL_1(x)                     (((uint32_t)(((uint32_t)(x)) << ATP_CIDR1_PRMBL_1_SHIFT)) & ATP_CIDR1_PRMBL_1_MASK)
#define ATP_CIDR1_CLASS_MASK                     (0xF0U)
#define ATP_CIDR1_CLASS_SHIFT                    (4U)
#define ATP_CIDR1_CLASS_WIDTH                    (4U)
#define ATP_CIDR1_CLASS(x)                       (((uint32_t)(((uint32_t)(x)) << ATP_CIDR1_CLASS_SHIFT)) & ATP_CIDR1_CLASS_MASK)
/*! @} */

/*! @name CIDR2 - Component Identification Register 2 */
/*! @{ */
#define ATP_CIDR2_PRMBL_2_MASK                   (0xFFU)
#define ATP_CIDR2_PRMBL_2_SHIFT                  (0U)
#define ATP_CIDR2_PRMBL_2_WIDTH                  (8U)
#define ATP_CIDR2_PRMBL_2(x)                     (((uint32_t)(((uint32_t)(x)) << ATP_CIDR2_PRMBL_2_SHIFT)) & ATP_CIDR2_PRMBL_2_MASK)
/*! @} */

/*! @name CIDR3 - Component Identification Register 3 */
/*! @{ */
#define ATP_CIDR3_PRMBL_3_MASK                   (0xFFU)
#define ATP_CIDR3_PRMBL_3_SHIFT                  (0U)
#define ATP_CIDR3_PRMBL_3_WIDTH                  (8U)
#define ATP_CIDR3_PRMBL_3(x)                     (((uint32_t)(((uint32_t)(x)) << ATP_CIDR3_PRMBL_3_SHIFT)) & ATP_CIDR3_PRMBL_3_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group ATP_Register_Masks */


/*!
 * @}
 */ /* end of group ATP_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- BOOT Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup BOOT_Peripheral_Access_Layer BOOT Peripheral Access Layer
 * @{
 */

/** BOOT - Register Layout Typedef */
typedef struct {
  __I  uint32_t BOOT_GPR_BMR1;                     /**< Boot Configuration Register 1, offset: 0x0 */
  __I  uint32_t BOOT_GPR_BMR2;                     /**< Boot Configuration Register 2, offset: 0x4 */
  uint8_t RESERVED_0[48];
  __IO uint32_t SRC_POR_CTRL_REG;                  /**< SRC POR Control Register, offset: 0x38 */
} BOOT_Type, *BOOT_MemMapPtr;

/** Number of instances of the BOOT module. */
#define BOOT_INSTANCE_COUNT                      (1u)

/* BOOT - Peripheral instance base addresses */
/** Peripheral BOOT_CC base address */
#define BOOT_CC_BASE                             (0x4007C900u)
/** Peripheral BOOT_CC base pointer */
#define BOOT_CC                                  ((BOOT_Type *)BOOT_CC_BASE)
/** Array initializer of BOOT peripheral base addresses */
#define BOOT_BASE_ADDRS                          { BOOT_CC_BASE }
/** Array initializer of BOOT peripheral base pointers */
#define BOOT_BASE_PTRS                           { BOOT_CC }

/* ----------------------------------------------------------------------------
   -- BOOT Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup BOOT_Register_Masks BOOT Register Masks
 * @{
 */

/*! @name BOOT_GPR_BMR1 - Boot Configuration Register 1 */
/*! @{ */
#define BOOT_BOOT_GPR_BMR1_BOOT_CFG_MASK         (0xFFFFFFFFU)
#define BOOT_BOOT_GPR_BMR1_BOOT_CFG_SHIFT        (0U)
#define BOOT_BOOT_GPR_BMR1_BOOT_CFG_WIDTH        (32U)
#define BOOT_BOOT_GPR_BMR1_BOOT_CFG(x)           (((uint32_t)(((uint32_t)(x)) << BOOT_BOOT_GPR_BMR1_BOOT_CFG_SHIFT)) & BOOT_BOOT_GPR_BMR1_BOOT_CFG_MASK)
/*! @} */

/*! @name BOOT_GPR_BMR2 - Boot Configuration Register 2 */
/*! @{ */
#define BOOT_BOOT_GPR_BMR2_FUSE_SEL_MASK         (0x10U)
#define BOOT_BOOT_GPR_BMR2_FUSE_SEL_SHIFT        (4U)
#define BOOT_BOOT_GPR_BMR2_FUSE_SEL_WIDTH        (1U)
#define BOOT_BOOT_GPR_BMR2_FUSE_SEL(x)           (((uint32_t)(((uint32_t)(x)) << BOOT_BOOT_GPR_BMR2_FUSE_SEL_SHIFT)) & BOOT_BOOT_GPR_BMR2_FUSE_SEL_MASK)
#define BOOT_BOOT_GPR_BMR2_BMODE2_MASK           (0x1000000U)
#define BOOT_BOOT_GPR_BMR2_BMODE2_SHIFT          (24U)
#define BOOT_BOOT_GPR_BMR2_BMODE2_WIDTH          (1U)
#define BOOT_BOOT_GPR_BMR2_BMODE2(x)             (((uint32_t)(((uint32_t)(x)) << BOOT_BOOT_GPR_BMR2_BMODE2_SHIFT)) & BOOT_BOOT_GPR_BMR2_BMODE2_MASK)
#define BOOT_BOOT_GPR_BMR2_BMODE1_MASK           (0x2000000U)
#define BOOT_BOOT_GPR_BMR2_BMODE1_SHIFT          (25U)
#define BOOT_BOOT_GPR_BMR2_BMODE1_WIDTH          (1U)
#define BOOT_BOOT_GPR_BMR2_BMODE1(x)             (((uint32_t)(((uint32_t)(x)) << BOOT_BOOT_GPR_BMR2_BMODE1_SHIFT)) & BOOT_BOOT_GPR_BMR2_BMODE1_MASK)
/*! @} */

/*! @name SRC_POR_CTRL_REG - SRC POR Control Register */
/*! @{ */
#define BOOT_SRC_POR_CTRL_REG_HSE_FW_ROLLBACK_COUNT_A_MASK (0xFFU)
#define BOOT_SRC_POR_CTRL_REG_HSE_FW_ROLLBACK_COUNT_A_SHIFT (0U)
#define BOOT_SRC_POR_CTRL_REG_HSE_FW_ROLLBACK_COUNT_A_WIDTH (8U)
#define BOOT_SRC_POR_CTRL_REG_HSE_FW_ROLLBACK_COUNT_A(x) (((uint32_t)(((uint32_t)(x)) << BOOT_SRC_POR_CTRL_REG_HSE_FW_ROLLBACK_COUNT_A_SHIFT)) & BOOT_SRC_POR_CTRL_REG_HSE_FW_ROLLBACK_COUNT_A_MASK)
#define BOOT_SRC_POR_CTRL_REG_HSE_FW_ROLLBACK_COUNT_B_MASK (0xFF00U)
#define BOOT_SRC_POR_CTRL_REG_HSE_FW_ROLLBACK_COUNT_B_SHIFT (8U)
#define BOOT_SRC_POR_CTRL_REG_HSE_FW_ROLLBACK_COUNT_B_WIDTH (8U)
#define BOOT_SRC_POR_CTRL_REG_HSE_FW_ROLLBACK_COUNT_B(x) (((uint32_t)(((uint32_t)(x)) << BOOT_SRC_POR_CTRL_REG_HSE_FW_ROLLBACK_COUNT_B_SHIFT)) & BOOT_SRC_POR_CTRL_REG_HSE_FW_ROLLBACK_COUNT_B_MASK)
#define BOOT_SRC_POR_CTRL_REG_HSE_FW_ROLLBACK_MARKER_MASK (0xFFFF0000U)
#define BOOT_SRC_POR_CTRL_REG_HSE_FW_ROLLBACK_MARKER_SHIFT (16U)
#define BOOT_SRC_POR_CTRL_REG_HSE_FW_ROLLBACK_MARKER_WIDTH (16U)
#define BOOT_SRC_POR_CTRL_REG_HSE_FW_ROLLBACK_MARKER(x) (((uint32_t)(((uint32_t)(x)) << BOOT_SRC_POR_CTRL_REG_HSE_FW_ROLLBACK_MARKER_SHIFT)) & BOOT_SRC_POR_CTRL_REG_HSE_FW_ROLLBACK_MARKER_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group BOOT_Register_Masks */


/*!
 * @}
 */ /* end of group BOOT_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- CAIU0 Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup CAIU0_Peripheral_Access_Layer CAIU0 Peripheral Access Layer
 * @{
 */

/** CAIU0 - Register Layout Typedef */
typedef struct {
  __IO uint32_t CAIUTC;                            /**< CAIU Transaction Control, offset: 0x0 */
  __I  uint32_t CAIUTA;                            /**< CAIU Transaction Activity, offset: 0x4 */
  uint8_t RESERVED_0[248];
  __IO uint32_t CAIUCEC;                           /**< CAIU Correctable Error Control, offset: 0x100 */
  __IO uint32_t CAIUCES;                           /**< CAIU Correctable Error Status, offset: 0x104 */
  __IO uint32_t CAIUCELR0;                         /**< CAIU Correctable Error Location Register 0, offset: 0x108 */
  __IO uint32_t CAIUCELR1;                         /**< CAIU Correctable Error Location Register 1, offset: 0x10C */
  uint8_t RESERVED_1[20];
  __IO uint32_t CAIUCESA;                          /**< CAIU Correctable Error Status Alias, offset: 0x124 */
  uint8_t RESERVED_2[24];
  __IO uint32_t CAIUUEC;                           /**< CAIU Uncorrectable Error Control, offset: 0x140 */
  __IO uint32_t CAIUUES;                           /**< CAIU Uncorrectable Error Status, offset: 0x144 */
  __IO uint32_t CAIUUELR0;                         /**< CAIU Uncorrectable Error Location Register 0, offset: 0x148 */
  __IO uint32_t CAIUUELR1;                         /**< CAIU Uncorrectable Error Location Register 1, offset: 0x14C */
  uint8_t RESERVED_3[20];
  __IO uint32_t CAIUUESA;                          /**< CAIU Uncorrectable Error Status Alias, offset: 0x164 */
  uint8_t RESERVED_4[3732];
  __I  uint32_t CAIUID;                            /**< CAIU Identification, offset: 0xFFC */
} CAIU0_Type, *CAIU0_MemMapPtr;

/** Number of instances of the CAIU0 module. */
#define CAIU0_INSTANCE_COUNT                     (1u)

/* CAIU0 - Peripheral instance base addresses */
/** Peripheral CAIU0 base address */
#define CAIU0_BASE                               (0x50400000u)
/** Peripheral CAIU0 base pointer */
#define CAIU0                                    ((CAIU0_Type *)CAIU0_BASE)
/** Array initializer of CAIU0 peripheral base addresses */
#define CAIU0_BASE_ADDRS                         { CAIU0_BASE }
/** Array initializer of CAIU0 peripheral base pointers */
#define CAIU0_BASE_PTRS                          { CAIU0 }

/* ----------------------------------------------------------------------------
   -- CAIU0 Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup CAIU0_Register_Masks CAIU0 Register Masks
 * @{
 */

/*! @name CAIUTC - CAIU Transaction Control */
/*! @{ */
#define CAIU0_CAIUTC_TRANSEN_MASK                (0x1U)
#define CAIU0_CAIUTC_TRANSEN_SHIFT               (0U)
#define CAIU0_CAIUTC_TRANSEN_WIDTH               (1U)
#define CAIU0_CAIUTC_TRANSEN(x)                  (((uint32_t)(((uint32_t)(x)) << CAIU0_CAIUTC_TRANSEN_SHIFT)) & CAIU0_CAIUTC_TRANSEN_MASK)
#define CAIU0_CAIUTC_ISOLEN_MASK                 (0x2U)
#define CAIU0_CAIUTC_ISOLEN_SHIFT                (1U)
#define CAIU0_CAIUTC_ISOLEN_WIDTH                (1U)
#define CAIU0_CAIUTC_ISOLEN(x)                   (((uint32_t)(((uint32_t)(x)) << CAIU0_CAIUTC_ISOLEN_SHIFT)) & CAIU0_CAIUTC_ISOLEN_MASK)
/*! @} */

/*! @name CAIUTA - CAIU Transaction Activity */
/*! @{ */
#define CAIU0_CAIUTA_TRANSACTV_MASK              (0x1U)
#define CAIU0_CAIUTA_TRANSACTV_SHIFT             (0U)
#define CAIU0_CAIUTA_TRANSACTV_WIDTH             (1U)
#define CAIU0_CAIUTA_TRANSACTV(x)                (((uint32_t)(((uint32_t)(x)) << CAIU0_CAIUTA_TRANSACTV_SHIFT)) & CAIU0_CAIUTA_TRANSACTV_MASK)
#define CAIU0_CAIUTA_SNPACTV_MASK                (0x2U)
#define CAIU0_CAIUTA_SNPACTV_SHIFT               (1U)
#define CAIU0_CAIUTA_SNPACTV_WIDTH               (1U)
#define CAIU0_CAIUTA_SNPACTV(x)                  (((uint32_t)(((uint32_t)(x)) << CAIU0_CAIUTA_SNPACTV_SHIFT)) & CAIU0_CAIUTA_SNPACTV_MASK)
#define CAIU0_CAIUTA_COHACTV_MASK                (0x4U)
#define CAIU0_CAIUTA_COHACTV_SHIFT               (2U)
#define CAIU0_CAIUTA_COHACTV_WIDTH               (1U)
#define CAIU0_CAIUTA_COHACTV(x)                  (((uint32_t)(((uint32_t)(x)) << CAIU0_CAIUTA_COHACTV_SHIFT)) & CAIU0_CAIUTA_COHACTV_MASK)
/*! @} */

/*! @name CAIUCEC - CAIU Correctable Error Control */
/*! @{ */
#define CAIU0_CAIUCEC_ERRDETEN_MASK              (0x1U)
#define CAIU0_CAIUCEC_ERRDETEN_SHIFT             (0U)
#define CAIU0_CAIUCEC_ERRDETEN_WIDTH             (1U)
#define CAIU0_CAIUCEC_ERRDETEN(x)                (((uint32_t)(((uint32_t)(x)) << CAIU0_CAIUCEC_ERRDETEN_SHIFT)) & CAIU0_CAIUCEC_ERRDETEN_MASK)
#define CAIU0_CAIUCEC_ERRINTEN_MASK              (0x2U)
#define CAIU0_CAIUCEC_ERRINTEN_SHIFT             (1U)
#define CAIU0_CAIUCEC_ERRINTEN_WIDTH             (1U)
#define CAIU0_CAIUCEC_ERRINTEN(x)                (((uint32_t)(((uint32_t)(x)) << CAIU0_CAIUCEC_ERRINTEN_SHIFT)) & CAIU0_CAIUCEC_ERRINTEN_MASK)
#define CAIU0_CAIUCEC_ERRTHRESHOLD_MASK          (0xFF0U)
#define CAIU0_CAIUCEC_ERRTHRESHOLD_SHIFT         (4U)
#define CAIU0_CAIUCEC_ERRTHRESHOLD_WIDTH         (8U)
#define CAIU0_CAIUCEC_ERRTHRESHOLD(x)            (((uint32_t)(((uint32_t)(x)) << CAIU0_CAIUCEC_ERRTHRESHOLD_SHIFT)) & CAIU0_CAIUCEC_ERRTHRESHOLD_MASK)
/*! @} */

/*! @name CAIUCES - CAIU Correctable Error Status */
/*! @{ */
#define CAIU0_CAIUCES_ERRVLD_MASK                (0x1U)
#define CAIU0_CAIUCES_ERRVLD_SHIFT               (0U)
#define CAIU0_CAIUCES_ERRVLD_WIDTH               (1U)
#define CAIU0_CAIUCES_ERRVLD(x)                  (((uint32_t)(((uint32_t)(x)) << CAIU0_CAIUCES_ERRVLD_SHIFT)) & CAIU0_CAIUCES_ERRVLD_MASK)
#define CAIU0_CAIUCES_ERROVF_MASK                (0x2U)
#define CAIU0_CAIUCES_ERROVF_SHIFT               (1U)
#define CAIU0_CAIUCES_ERROVF_WIDTH               (1U)
#define CAIU0_CAIUCES_ERROVF(x)                  (((uint32_t)(((uint32_t)(x)) << CAIU0_CAIUCES_ERROVF_SHIFT)) & CAIU0_CAIUCES_ERROVF_MASK)
#define CAIU0_CAIUCES_ERRCOUNT_MASK              (0xFF0U)
#define CAIU0_CAIUCES_ERRCOUNT_SHIFT             (4U)
#define CAIU0_CAIUCES_ERRCOUNT_WIDTH             (8U)
#define CAIU0_CAIUCES_ERRCOUNT(x)                (((uint32_t)(((uint32_t)(x)) << CAIU0_CAIUCES_ERRCOUNT_SHIFT)) & CAIU0_CAIUCES_ERRCOUNT_MASK)
#define CAIU0_CAIUCES_ERRTYPE_MASK               (0xF000U)
#define CAIU0_CAIUCES_ERRTYPE_SHIFT              (12U)
#define CAIU0_CAIUCES_ERRTYPE_WIDTH              (4U)
#define CAIU0_CAIUCES_ERRTYPE(x)                 (((uint32_t)(((uint32_t)(x)) << CAIU0_CAIUCES_ERRTYPE_SHIFT)) & CAIU0_CAIUCES_ERRTYPE_MASK)
#define CAIU0_CAIUCES_ERRINFO_MASK               (0xFF0000U)
#define CAIU0_CAIUCES_ERRINFO_SHIFT              (16U)
#define CAIU0_CAIUCES_ERRINFO_WIDTH              (8U)
#define CAIU0_CAIUCES_ERRINFO(x)                 (((uint32_t)(((uint32_t)(x)) << CAIU0_CAIUCES_ERRINFO_SHIFT)) & CAIU0_CAIUCES_ERRINFO_MASK)
/*! @} */

/*! @name CAIUCELR0 - CAIU Correctable Error Location Register 0 */
/*! @{ */
#define CAIU0_CAIUCELR0_ERRENTRY_MASK            (0xFFFFFU)
#define CAIU0_CAIUCELR0_ERRENTRY_SHIFT           (0U)
#define CAIU0_CAIUCELR0_ERRENTRY_WIDTH           (20U)
#define CAIU0_CAIUCELR0_ERRENTRY(x)              (((uint32_t)(((uint32_t)(x)) << CAIU0_CAIUCELR0_ERRENTRY_SHIFT)) & CAIU0_CAIUCELR0_ERRENTRY_MASK)
#define CAIU0_CAIUCELR0_ERRWAY_MASK              (0x3F00000U)
#define CAIU0_CAIUCELR0_ERRWAY_SHIFT             (20U)
#define CAIU0_CAIUCELR0_ERRWAY_WIDTH             (6U)
#define CAIU0_CAIUCELR0_ERRWAY(x)                (((uint32_t)(((uint32_t)(x)) << CAIU0_CAIUCELR0_ERRWAY_SHIFT)) & CAIU0_CAIUCELR0_ERRWAY_MASK)
#define CAIU0_CAIUCELR0_ERRWORD_MASK             (0xFC000000U)
#define CAIU0_CAIUCELR0_ERRWORD_SHIFT            (26U)
#define CAIU0_CAIUCELR0_ERRWORD_WIDTH            (6U)
#define CAIU0_CAIUCELR0_ERRWORD(x)               (((uint32_t)(((uint32_t)(x)) << CAIU0_CAIUCELR0_ERRWORD_SHIFT)) & CAIU0_CAIUCELR0_ERRWORD_MASK)
/*! @} */

/*! @name CAIUCELR1 - CAIU Correctable Error Location Register 1 */
/*! @{ */
#define CAIU0_CAIUCELR1_ERRADDR_MASK             (0xFFFU)
#define CAIU0_CAIUCELR1_ERRADDR_SHIFT            (0U)
#define CAIU0_CAIUCELR1_ERRADDR_WIDTH            (12U)
#define CAIU0_CAIUCELR1_ERRADDR(x)               (((uint32_t)(((uint32_t)(x)) << CAIU0_CAIUCELR1_ERRADDR_SHIFT)) & CAIU0_CAIUCELR1_ERRADDR_MASK)
/*! @} */

/*! @name CAIUCESA - CAIU Correctable Error Status Alias */
/*! @{ */
#define CAIU0_CAIUCESA_ERRVLD_MASK               (0x1U)
#define CAIU0_CAIUCESA_ERRVLD_SHIFT              (0U)
#define CAIU0_CAIUCESA_ERRVLD_WIDTH              (1U)
#define CAIU0_CAIUCESA_ERRVLD(x)                 (((uint32_t)(((uint32_t)(x)) << CAIU0_CAIUCESA_ERRVLD_SHIFT)) & CAIU0_CAIUCESA_ERRVLD_MASK)
#define CAIU0_CAIUCESA_ERROVF_MASK               (0x2U)
#define CAIU0_CAIUCESA_ERROVF_SHIFT              (1U)
#define CAIU0_CAIUCESA_ERROVF_WIDTH              (1U)
#define CAIU0_CAIUCESA_ERROVF(x)                 (((uint32_t)(((uint32_t)(x)) << CAIU0_CAIUCESA_ERROVF_SHIFT)) & CAIU0_CAIUCESA_ERROVF_MASK)
#define CAIU0_CAIUCESA_ERRCOUNT_MASK             (0xFF0U)
#define CAIU0_CAIUCESA_ERRCOUNT_SHIFT            (4U)
#define CAIU0_CAIUCESA_ERRCOUNT_WIDTH            (8U)
#define CAIU0_CAIUCESA_ERRCOUNT(x)               (((uint32_t)(((uint32_t)(x)) << CAIU0_CAIUCESA_ERRCOUNT_SHIFT)) & CAIU0_CAIUCESA_ERRCOUNT_MASK)
#define CAIU0_CAIUCESA_ERRTYPE_MASK              (0xF000U)
#define CAIU0_CAIUCESA_ERRTYPE_SHIFT             (12U)
#define CAIU0_CAIUCESA_ERRTYPE_WIDTH             (4U)
#define CAIU0_CAIUCESA_ERRTYPE(x)                (((uint32_t)(((uint32_t)(x)) << CAIU0_CAIUCESA_ERRTYPE_SHIFT)) & CAIU0_CAIUCESA_ERRTYPE_MASK)
#define CAIU0_CAIUCESA_ERRINFO_MASK              (0xFF0000U)
#define CAIU0_CAIUCESA_ERRINFO_SHIFT             (16U)
#define CAIU0_CAIUCESA_ERRINFO_WIDTH             (8U)
#define CAIU0_CAIUCESA_ERRINFO(x)                (((uint32_t)(((uint32_t)(x)) << CAIU0_CAIUCESA_ERRINFO_SHIFT)) & CAIU0_CAIUCESA_ERRINFO_MASK)
/*! @} */

/*! @name CAIUUEC - CAIU Uncorrectable Error Control */
/*! @{ */
#define CAIU0_CAIUUEC_ERRDETEN_MASK              (0x1U)
#define CAIU0_CAIUUEC_ERRDETEN_SHIFT             (0U)
#define CAIU0_CAIUUEC_ERRDETEN_WIDTH             (1U)
#define CAIU0_CAIUUEC_ERRDETEN(x)                (((uint32_t)(((uint32_t)(x)) << CAIU0_CAIUUEC_ERRDETEN_SHIFT)) & CAIU0_CAIUUEC_ERRDETEN_MASK)
#define CAIU0_CAIUUEC_ERRINTEN_MASK              (0x2U)
#define CAIU0_CAIUUEC_ERRINTEN_SHIFT             (1U)
#define CAIU0_CAIUUEC_ERRINTEN_WIDTH             (1U)
#define CAIU0_CAIUUEC_ERRINTEN(x)                (((uint32_t)(((uint32_t)(x)) << CAIU0_CAIUUEC_ERRINTEN_SHIFT)) & CAIU0_CAIUUEC_ERRINTEN_MASK)
#define CAIU0_CAIUUEC_ERRTHRESHOLD_MASK          (0xFF0U)
#define CAIU0_CAIUUEC_ERRTHRESHOLD_SHIFT         (4U)
#define CAIU0_CAIUUEC_ERRTHRESHOLD_WIDTH         (8U)
#define CAIU0_CAIUUEC_ERRTHRESHOLD(x)            (((uint32_t)(((uint32_t)(x)) << CAIU0_CAIUUEC_ERRTHRESHOLD_SHIFT)) & CAIU0_CAIUUEC_ERRTHRESHOLD_MASK)
/*! @} */

/*! @name CAIUUES - CAIU Uncorrectable Error Status */
/*! @{ */
#define CAIU0_CAIUUES_ERRVLD_MASK                (0x1U)
#define CAIU0_CAIUUES_ERRVLD_SHIFT               (0U)
#define CAIU0_CAIUUES_ERRVLD_WIDTH               (1U)
#define CAIU0_CAIUUES_ERRVLD(x)                  (((uint32_t)(((uint32_t)(x)) << CAIU0_CAIUUES_ERRVLD_SHIFT)) & CAIU0_CAIUUES_ERRVLD_MASK)
#define CAIU0_CAIUUES_ERROVF_MASK                (0x2U)
#define CAIU0_CAIUUES_ERROVF_SHIFT               (1U)
#define CAIU0_CAIUUES_ERROVF_WIDTH               (1U)
#define CAIU0_CAIUUES_ERROVF(x)                  (((uint32_t)(((uint32_t)(x)) << CAIU0_CAIUUES_ERROVF_SHIFT)) & CAIU0_CAIUUES_ERROVF_MASK)
#define CAIU0_CAIUUES_ERRCOUNT_MASK              (0xFF0U)
#define CAIU0_CAIUUES_ERRCOUNT_SHIFT             (4U)
#define CAIU0_CAIUUES_ERRCOUNT_WIDTH             (8U)
#define CAIU0_CAIUUES_ERRCOUNT(x)                (((uint32_t)(((uint32_t)(x)) << CAIU0_CAIUUES_ERRCOUNT_SHIFT)) & CAIU0_CAIUUES_ERRCOUNT_MASK)
#define CAIU0_CAIUUES_ERRTYPE_MASK               (0xF000U)
#define CAIU0_CAIUUES_ERRTYPE_SHIFT              (12U)
#define CAIU0_CAIUUES_ERRTYPE_WIDTH              (4U)
#define CAIU0_CAIUUES_ERRTYPE(x)                 (((uint32_t)(((uint32_t)(x)) << CAIU0_CAIUUES_ERRTYPE_SHIFT)) & CAIU0_CAIUUES_ERRTYPE_MASK)
#define CAIU0_CAIUUES_ERRINFO_MASK               (0xFF0000U)
#define CAIU0_CAIUUES_ERRINFO_SHIFT              (16U)
#define CAIU0_CAIUUES_ERRINFO_WIDTH              (8U)
#define CAIU0_CAIUUES_ERRINFO(x)                 (((uint32_t)(((uint32_t)(x)) << CAIU0_CAIUUES_ERRINFO_SHIFT)) & CAIU0_CAIUUES_ERRINFO_MASK)
/*! @} */

/*! @name CAIUUELR0 - CAIU Uncorrectable Error Location Register 0 */
/*! @{ */
#define CAIU0_CAIUUELR0_ERRENTRY_MASK            (0xFFFFFU)
#define CAIU0_CAIUUELR0_ERRENTRY_SHIFT           (0U)
#define CAIU0_CAIUUELR0_ERRENTRY_WIDTH           (20U)
#define CAIU0_CAIUUELR0_ERRENTRY(x)              (((uint32_t)(((uint32_t)(x)) << CAIU0_CAIUUELR0_ERRENTRY_SHIFT)) & CAIU0_CAIUUELR0_ERRENTRY_MASK)
#define CAIU0_CAIUUELR0_ERRWAY_MASK              (0x3F00000U)
#define CAIU0_CAIUUELR0_ERRWAY_SHIFT             (20U)
#define CAIU0_CAIUUELR0_ERRWAY_WIDTH             (6U)
#define CAIU0_CAIUUELR0_ERRWAY(x)                (((uint32_t)(((uint32_t)(x)) << CAIU0_CAIUUELR0_ERRWAY_SHIFT)) & CAIU0_CAIUUELR0_ERRWAY_MASK)
#define CAIU0_CAIUUELR0_ERRWORD_MASK             (0xFC000000U)
#define CAIU0_CAIUUELR0_ERRWORD_SHIFT            (26U)
#define CAIU0_CAIUUELR0_ERRWORD_WIDTH            (6U)
#define CAIU0_CAIUUELR0_ERRWORD(x)               (((uint32_t)(((uint32_t)(x)) << CAIU0_CAIUUELR0_ERRWORD_SHIFT)) & CAIU0_CAIUUELR0_ERRWORD_MASK)
/*! @} */

/*! @name CAIUUELR1 - CAIU Uncorrectable Error Location Register 1 */
/*! @{ */
#define CAIU0_CAIUUELR1_ERRADDR_MASK             (0xFFFU)
#define CAIU0_CAIUUELR1_ERRADDR_SHIFT            (0U)
#define CAIU0_CAIUUELR1_ERRADDR_WIDTH            (12U)
#define CAIU0_CAIUUELR1_ERRADDR(x)               (((uint32_t)(((uint32_t)(x)) << CAIU0_CAIUUELR1_ERRADDR_SHIFT)) & CAIU0_CAIUUELR1_ERRADDR_MASK)
/*! @} */

/*! @name CAIUUESA - CAIU Uncorrectable Error Status Alias */
/*! @{ */
#define CAIU0_CAIUUESA_ERRVLD_MASK               (0x1U)
#define CAIU0_CAIUUESA_ERRVLD_SHIFT              (0U)
#define CAIU0_CAIUUESA_ERRVLD_WIDTH              (1U)
#define CAIU0_CAIUUESA_ERRVLD(x)                 (((uint32_t)(((uint32_t)(x)) << CAIU0_CAIUUESA_ERRVLD_SHIFT)) & CAIU0_CAIUUESA_ERRVLD_MASK)
#define CAIU0_CAIUUESA_ERROVF_MASK               (0x2U)
#define CAIU0_CAIUUESA_ERROVF_SHIFT              (1U)
#define CAIU0_CAIUUESA_ERROVF_WIDTH              (1U)
#define CAIU0_CAIUUESA_ERROVF(x)                 (((uint32_t)(((uint32_t)(x)) << CAIU0_CAIUUESA_ERROVF_SHIFT)) & CAIU0_CAIUUESA_ERROVF_MASK)
#define CAIU0_CAIUUESA_ERRCOUNT_MASK             (0xFF0U)
#define CAIU0_CAIUUESA_ERRCOUNT_SHIFT            (4U)
#define CAIU0_CAIUUESA_ERRCOUNT_WIDTH            (8U)
#define CAIU0_CAIUUESA_ERRCOUNT(x)               (((uint32_t)(((uint32_t)(x)) << CAIU0_CAIUUESA_ERRCOUNT_SHIFT)) & CAIU0_CAIUUESA_ERRCOUNT_MASK)
#define CAIU0_CAIUUESA_ERRTYPE_MASK              (0xF000U)
#define CAIU0_CAIUUESA_ERRTYPE_SHIFT             (12U)
#define CAIU0_CAIUUESA_ERRTYPE_WIDTH             (4U)
#define CAIU0_CAIUUESA_ERRTYPE(x)                (((uint32_t)(((uint32_t)(x)) << CAIU0_CAIUUESA_ERRTYPE_SHIFT)) & CAIU0_CAIUUESA_ERRTYPE_MASK)
#define CAIU0_CAIUUESA_ERRINFO_MASK              (0xFF0000U)
#define CAIU0_CAIUUESA_ERRINFO_SHIFT             (16U)
#define CAIU0_CAIUUESA_ERRINFO_WIDTH             (8U)
#define CAIU0_CAIUUESA_ERRINFO(x)                (((uint32_t)(((uint32_t)(x)) << CAIU0_CAIUUESA_ERRINFO_SHIFT)) & CAIU0_CAIUUESA_ERRINFO_MASK)
/*! @} */

/*! @name CAIUID - CAIU Identification */
/*! @{ */
#define CAIU0_CAIUID_IMPLVER_MASK                (0xFFU)
#define CAIU0_CAIUID_IMPLVER_SHIFT               (0U)
#define CAIU0_CAIUID_IMPLVER_WIDTH               (8U)
#define CAIU0_CAIUID_IMPLVER(x)                  (((uint32_t)(((uint32_t)(x)) << CAIU0_CAIUID_IMPLVER_SHIFT)) & CAIU0_CAIUID_IMPLVER_MASK)
#define CAIU0_CAIUID_CAIID_MASK                  (0x7F00U)
#define CAIU0_CAIUID_CAIID_SHIFT                 (8U)
#define CAIU0_CAIUID_CAIID_WIDTH                 (7U)
#define CAIU0_CAIUID_CAIID(x)                    (((uint32_t)(((uint32_t)(x)) << CAIU0_CAIUID_CAIID_SHIFT)) & CAIU0_CAIUID_CAIID_MASK)
#define CAIU0_CAIUID_CA_MASK                     (0x8000U)
#define CAIU0_CAIUID_CA_SHIFT                    (15U)
#define CAIU0_CAIUID_CA_WIDTH                    (1U)
#define CAIU0_CAIUID_CA(x)                       (((uint32_t)(((uint32_t)(x)) << CAIU0_CAIUID_CA_SHIFT)) & CAIU0_CAIUID_CA_MASK)
#define CAIU0_CAIUID_TYPE_MASK                   (0xF0000U)
#define CAIU0_CAIUID_TYPE_SHIFT                  (16U)
#define CAIU0_CAIUID_TYPE_WIDTH                  (4U)
#define CAIU0_CAIUID_TYPE(x)                     (((uint32_t)(((uint32_t)(x)) << CAIU0_CAIUID_TYPE_SHIFT)) & CAIU0_CAIUID_TYPE_MASK)
#define CAIU0_CAIUID_SFID_MASK                   (0x1F00000U)
#define CAIU0_CAIUID_SFID_SHIFT                  (20U)
#define CAIU0_CAIUID_SFID_WIDTH                  (5U)
#define CAIU0_CAIUID_SFID(x)                     (((uint32_t)(((uint32_t)(x)) << CAIU0_CAIUID_SFID_SHIFT)) & CAIU0_CAIUID_SFID_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group CAIU0_Register_Masks */


/*!
 * @}
 */ /* end of group CAIU0_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- CAIU1 Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup CAIU1_Peripheral_Access_Layer CAIU1 Peripheral Access Layer
 * @{
 */

/** CAIU1 - Register Layout Typedef */
typedef struct {
  __IO uint32_t CAIUTC;                            /**< CAIU Transaction Control, offset: 0x0 */
  __I  uint32_t CAIUTA;                            /**< CAIU Transaction Activity, offset: 0x4 */
  uint8_t RESERVED_0[248];
  __IO uint32_t CAIUCEC;                           /**< CAIU Correctable Error Control, offset: 0x100 */
  __IO uint32_t CAIUCES;                           /**< CAIU Correctable Error Status, offset: 0x104 */
  __IO uint32_t CAIUCELR0;                         /**< CAIU Correctable Error Location Register 0, offset: 0x108 */
  __IO uint32_t CAIUCELR1;                         /**< CAIU Correctable Error Location Register 1, offset: 0x10C */
  uint8_t RESERVED_1[20];
  __IO uint32_t CAIUCESA;                          /**< CAIU Correctable Error Status Alias, offset: 0x124 */
  uint8_t RESERVED_2[24];
  __IO uint32_t CAIUUEC;                           /**< CAIU Uncorrectable Error Control, offset: 0x140 */
  __IO uint32_t CAIUUES;                           /**< CAIU Uncorrectable Error Status, offset: 0x144 */
  __IO uint32_t CAIUUELR0;                         /**< CAIU Uncorrectable Error Location Register 0, offset: 0x148 */
  __IO uint32_t CAIUUELR1;                         /**< CAIU Uncorrectable Error Location Register 1, offset: 0x14C */
  uint8_t RESERVED_3[20];
  __IO uint32_t CAIUUESA;                          /**< CAIU Uncorrectable Error Status Alias, offset: 0x164 */
  uint8_t RESERVED_4[3732];
  __I  uint32_t CAIUID;                            /**< CAIU Identification, offset: 0xFFC */
} CAIU1_Type, *CAIU1_MemMapPtr;

/** Number of instances of the CAIU1 module. */
#define CAIU1_INSTANCE_COUNT                     (1u)

/* CAIU1 - Peripheral instance base addresses */
/** Peripheral CAIU1 base address */
#define CAIU1_BASE                               (0x50401000u)
/** Peripheral CAIU1 base pointer */
#define CAIU1                                    ((CAIU1_Type *)CAIU1_BASE)
/** Array initializer of CAIU1 peripheral base addresses */
#define CAIU1_BASE_ADDRS                         { CAIU1_BASE }
/** Array initializer of CAIU1 peripheral base pointers */
#define CAIU1_BASE_PTRS                          { CAIU1 }

/* ----------------------------------------------------------------------------
   -- CAIU1 Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup CAIU1_Register_Masks CAIU1 Register Masks
 * @{
 */

/*! @name CAIUTC - CAIU Transaction Control */
/*! @{ */
#define CAIU1_CAIUTC_TRANSEN_MASK                (0x1U)
#define CAIU1_CAIUTC_TRANSEN_SHIFT               (0U)
#define CAIU1_CAIUTC_TRANSEN_WIDTH               (1U)
#define CAIU1_CAIUTC_TRANSEN(x)                  (((uint32_t)(((uint32_t)(x)) << CAIU1_CAIUTC_TRANSEN_SHIFT)) & CAIU1_CAIUTC_TRANSEN_MASK)
#define CAIU1_CAIUTC_ISOLEN_MASK                 (0x2U)
#define CAIU1_CAIUTC_ISOLEN_SHIFT                (1U)
#define CAIU1_CAIUTC_ISOLEN_WIDTH                (1U)
#define CAIU1_CAIUTC_ISOLEN(x)                   (((uint32_t)(((uint32_t)(x)) << CAIU1_CAIUTC_ISOLEN_SHIFT)) & CAIU1_CAIUTC_ISOLEN_MASK)
/*! @} */

/*! @name CAIUTA - CAIU Transaction Activity */
/*! @{ */
#define CAIU1_CAIUTA_TRANSACTV_MASK              (0x1U)
#define CAIU1_CAIUTA_TRANSACTV_SHIFT             (0U)
#define CAIU1_CAIUTA_TRANSACTV_WIDTH             (1U)
#define CAIU1_CAIUTA_TRANSACTV(x)                (((uint32_t)(((uint32_t)(x)) << CAIU1_CAIUTA_TRANSACTV_SHIFT)) & CAIU1_CAIUTA_TRANSACTV_MASK)
#define CAIU1_CAIUTA_SNPACTV_MASK                (0x2U)
#define CAIU1_CAIUTA_SNPACTV_SHIFT               (1U)
#define CAIU1_CAIUTA_SNPACTV_WIDTH               (1U)
#define CAIU1_CAIUTA_SNPACTV(x)                  (((uint32_t)(((uint32_t)(x)) << CAIU1_CAIUTA_SNPACTV_SHIFT)) & CAIU1_CAIUTA_SNPACTV_MASK)
#define CAIU1_CAIUTA_COHACTV_MASK                (0x4U)
#define CAIU1_CAIUTA_COHACTV_SHIFT               (2U)
#define CAIU1_CAIUTA_COHACTV_WIDTH               (1U)
#define CAIU1_CAIUTA_COHACTV(x)                  (((uint32_t)(((uint32_t)(x)) << CAIU1_CAIUTA_COHACTV_SHIFT)) & CAIU1_CAIUTA_COHACTV_MASK)
/*! @} */

/*! @name CAIUCEC - CAIU Correctable Error Control */
/*! @{ */
#define CAIU1_CAIUCEC_ERRDETEN_MASK              (0x1U)
#define CAIU1_CAIUCEC_ERRDETEN_SHIFT             (0U)
#define CAIU1_CAIUCEC_ERRDETEN_WIDTH             (1U)
#define CAIU1_CAIUCEC_ERRDETEN(x)                (((uint32_t)(((uint32_t)(x)) << CAIU1_CAIUCEC_ERRDETEN_SHIFT)) & CAIU1_CAIUCEC_ERRDETEN_MASK)
#define CAIU1_CAIUCEC_ERRINTEN_MASK              (0x2U)
#define CAIU1_CAIUCEC_ERRINTEN_SHIFT             (1U)
#define CAIU1_CAIUCEC_ERRINTEN_WIDTH             (1U)
#define CAIU1_CAIUCEC_ERRINTEN(x)                (((uint32_t)(((uint32_t)(x)) << CAIU1_CAIUCEC_ERRINTEN_SHIFT)) & CAIU1_CAIUCEC_ERRINTEN_MASK)
#define CAIU1_CAIUCEC_ERRTHRESHOLD_MASK          (0xFF0U)
#define CAIU1_CAIUCEC_ERRTHRESHOLD_SHIFT         (4U)
#define CAIU1_CAIUCEC_ERRTHRESHOLD_WIDTH         (8U)
#define CAIU1_CAIUCEC_ERRTHRESHOLD(x)            (((uint32_t)(((uint32_t)(x)) << CAIU1_CAIUCEC_ERRTHRESHOLD_SHIFT)) & CAIU1_CAIUCEC_ERRTHRESHOLD_MASK)
/*! @} */

/*! @name CAIUCES - CAIU Correctable Error Status */
/*! @{ */
#define CAIU1_CAIUCES_ERRVLD_MASK                (0x1U)
#define CAIU1_CAIUCES_ERRVLD_SHIFT               (0U)
#define CAIU1_CAIUCES_ERRVLD_WIDTH               (1U)
#define CAIU1_CAIUCES_ERRVLD(x)                  (((uint32_t)(((uint32_t)(x)) << CAIU1_CAIUCES_ERRVLD_SHIFT)) & CAIU1_CAIUCES_ERRVLD_MASK)
#define CAIU1_CAIUCES_ERROVF_MASK                (0x2U)
#define CAIU1_CAIUCES_ERROVF_SHIFT               (1U)
#define CAIU1_CAIUCES_ERROVF_WIDTH               (1U)
#define CAIU1_CAIUCES_ERROVF(x)                  (((uint32_t)(((uint32_t)(x)) << CAIU1_CAIUCES_ERROVF_SHIFT)) & CAIU1_CAIUCES_ERROVF_MASK)
#define CAIU1_CAIUCES_ERRCOUNT_MASK              (0xFF0U)
#define CAIU1_CAIUCES_ERRCOUNT_SHIFT             (4U)
#define CAIU1_CAIUCES_ERRCOUNT_WIDTH             (8U)
#define CAIU1_CAIUCES_ERRCOUNT(x)                (((uint32_t)(((uint32_t)(x)) << CAIU1_CAIUCES_ERRCOUNT_SHIFT)) & CAIU1_CAIUCES_ERRCOUNT_MASK)
#define CAIU1_CAIUCES_ERRTYPE_MASK               (0xF000U)
#define CAIU1_CAIUCES_ERRTYPE_SHIFT              (12U)
#define CAIU1_CAIUCES_ERRTYPE_WIDTH              (4U)
#define CAIU1_CAIUCES_ERRTYPE(x)                 (((uint32_t)(((uint32_t)(x)) << CAIU1_CAIUCES_ERRTYPE_SHIFT)) & CAIU1_CAIUCES_ERRTYPE_MASK)
#define CAIU1_CAIUCES_ERRINFO_MASK               (0xFF0000U)
#define CAIU1_CAIUCES_ERRINFO_SHIFT              (16U)
#define CAIU1_CAIUCES_ERRINFO_WIDTH              (8U)
#define CAIU1_CAIUCES_ERRINFO(x)                 (((uint32_t)(((uint32_t)(x)) << CAIU1_CAIUCES_ERRINFO_SHIFT)) & CAIU1_CAIUCES_ERRINFO_MASK)
/*! @} */

/*! @name CAIUCELR0 - CAIU Correctable Error Location Register 0 */
/*! @{ */
#define CAIU1_CAIUCELR0_ERRENTRY_MASK            (0xFFFFFU)
#define CAIU1_CAIUCELR0_ERRENTRY_SHIFT           (0U)
#define CAIU1_CAIUCELR0_ERRENTRY_WIDTH           (20U)
#define CAIU1_CAIUCELR0_ERRENTRY(x)              (((uint32_t)(((uint32_t)(x)) << CAIU1_CAIUCELR0_ERRENTRY_SHIFT)) & CAIU1_CAIUCELR0_ERRENTRY_MASK)
#define CAIU1_CAIUCELR0_ERRWAY_MASK              (0x3F00000U)
#define CAIU1_CAIUCELR0_ERRWAY_SHIFT             (20U)
#define CAIU1_CAIUCELR0_ERRWAY_WIDTH             (6U)
#define CAIU1_CAIUCELR0_ERRWAY(x)                (((uint32_t)(((uint32_t)(x)) << CAIU1_CAIUCELR0_ERRWAY_SHIFT)) & CAIU1_CAIUCELR0_ERRWAY_MASK)
#define CAIU1_CAIUCELR0_ERRWORD_MASK             (0xFC000000U)
#define CAIU1_CAIUCELR0_ERRWORD_SHIFT            (26U)
#define CAIU1_CAIUCELR0_ERRWORD_WIDTH            (6U)
#define CAIU1_CAIUCELR0_ERRWORD(x)               (((uint32_t)(((uint32_t)(x)) << CAIU1_CAIUCELR0_ERRWORD_SHIFT)) & CAIU1_CAIUCELR0_ERRWORD_MASK)
/*! @} */

/*! @name CAIUCELR1 - CAIU Correctable Error Location Register 1 */
/*! @{ */
#define CAIU1_CAIUCELR1_ERRADDR_MASK             (0xFFFU)
#define CAIU1_CAIUCELR1_ERRADDR_SHIFT            (0U)
#define CAIU1_CAIUCELR1_ERRADDR_WIDTH            (12U)
#define CAIU1_CAIUCELR1_ERRADDR(x)               (((uint32_t)(((uint32_t)(x)) << CAIU1_CAIUCELR1_ERRADDR_SHIFT)) & CAIU1_CAIUCELR1_ERRADDR_MASK)
/*! @} */

/*! @name CAIUCESA - CAIU Correctable Error Status Alias */
/*! @{ */
#define CAIU1_CAIUCESA_ERRVLD_MASK               (0x1U)
#define CAIU1_CAIUCESA_ERRVLD_SHIFT              (0U)
#define CAIU1_CAIUCESA_ERRVLD_WIDTH              (1U)
#define CAIU1_CAIUCESA_ERRVLD(x)                 (((uint32_t)(((uint32_t)(x)) << CAIU1_CAIUCESA_ERRVLD_SHIFT)) & CAIU1_CAIUCESA_ERRVLD_MASK)
#define CAIU1_CAIUCESA_ERROVF_MASK               (0x2U)
#define CAIU1_CAIUCESA_ERROVF_SHIFT              (1U)
#define CAIU1_CAIUCESA_ERROVF_WIDTH              (1U)
#define CAIU1_CAIUCESA_ERROVF(x)                 (((uint32_t)(((uint32_t)(x)) << CAIU1_CAIUCESA_ERROVF_SHIFT)) & CAIU1_CAIUCESA_ERROVF_MASK)
#define CAIU1_CAIUCESA_ERRCOUNT_MASK             (0xFF0U)
#define CAIU1_CAIUCESA_ERRCOUNT_SHIFT            (4U)
#define CAIU1_CAIUCESA_ERRCOUNT_WIDTH            (8U)
#define CAIU1_CAIUCESA_ERRCOUNT(x)               (((uint32_t)(((uint32_t)(x)) << CAIU1_CAIUCESA_ERRCOUNT_SHIFT)) & CAIU1_CAIUCESA_ERRCOUNT_MASK)
#define CAIU1_CAIUCESA_ERRTYPE_MASK              (0xF000U)
#define CAIU1_CAIUCESA_ERRTYPE_SHIFT             (12U)
#define CAIU1_CAIUCESA_ERRTYPE_WIDTH             (4U)
#define CAIU1_CAIUCESA_ERRTYPE(x)                (((uint32_t)(((uint32_t)(x)) << CAIU1_CAIUCESA_ERRTYPE_SHIFT)) & CAIU1_CAIUCESA_ERRTYPE_MASK)
#define CAIU1_CAIUCESA_ERRINFO_MASK              (0xFF0000U)
#define CAIU1_CAIUCESA_ERRINFO_SHIFT             (16U)
#define CAIU1_CAIUCESA_ERRINFO_WIDTH             (8U)
#define CAIU1_CAIUCESA_ERRINFO(x)                (((uint32_t)(((uint32_t)(x)) << CAIU1_CAIUCESA_ERRINFO_SHIFT)) & CAIU1_CAIUCESA_ERRINFO_MASK)
/*! @} */

/*! @name CAIUUEC - CAIU Uncorrectable Error Control */
/*! @{ */
#define CAIU1_CAIUUEC_ERRDETEN_MASK              (0x1U)
#define CAIU1_CAIUUEC_ERRDETEN_SHIFT             (0U)
#define CAIU1_CAIUUEC_ERRDETEN_WIDTH             (1U)
#define CAIU1_CAIUUEC_ERRDETEN(x)                (((uint32_t)(((uint32_t)(x)) << CAIU1_CAIUUEC_ERRDETEN_SHIFT)) & CAIU1_CAIUUEC_ERRDETEN_MASK)
#define CAIU1_CAIUUEC_ERRINTEN_MASK              (0x2U)
#define CAIU1_CAIUUEC_ERRINTEN_SHIFT             (1U)
#define CAIU1_CAIUUEC_ERRINTEN_WIDTH             (1U)
#define CAIU1_CAIUUEC_ERRINTEN(x)                (((uint32_t)(((uint32_t)(x)) << CAIU1_CAIUUEC_ERRINTEN_SHIFT)) & CAIU1_CAIUUEC_ERRINTEN_MASK)
#define CAIU1_CAIUUEC_ERRTHRESHOLD_MASK          (0xFF0U)
#define CAIU1_CAIUUEC_ERRTHRESHOLD_SHIFT         (4U)
#define CAIU1_CAIUUEC_ERRTHRESHOLD_WIDTH         (8U)
#define CAIU1_CAIUUEC_ERRTHRESHOLD(x)            (((uint32_t)(((uint32_t)(x)) << CAIU1_CAIUUEC_ERRTHRESHOLD_SHIFT)) & CAIU1_CAIUUEC_ERRTHRESHOLD_MASK)
/*! @} */

/*! @name CAIUUES - CAIU Uncorrectable Error Status */
/*! @{ */
#define CAIU1_CAIUUES_ERRVLD_MASK                (0x1U)
#define CAIU1_CAIUUES_ERRVLD_SHIFT               (0U)
#define CAIU1_CAIUUES_ERRVLD_WIDTH               (1U)
#define CAIU1_CAIUUES_ERRVLD(x)                  (((uint32_t)(((uint32_t)(x)) << CAIU1_CAIUUES_ERRVLD_SHIFT)) & CAIU1_CAIUUES_ERRVLD_MASK)
#define CAIU1_CAIUUES_ERROVF_MASK                (0x2U)
#define CAIU1_CAIUUES_ERROVF_SHIFT               (1U)
#define CAIU1_CAIUUES_ERROVF_WIDTH               (1U)
#define CAIU1_CAIUUES_ERROVF(x)                  (((uint32_t)(((uint32_t)(x)) << CAIU1_CAIUUES_ERROVF_SHIFT)) & CAIU1_CAIUUES_ERROVF_MASK)
#define CAIU1_CAIUUES_ERRCOUNT_MASK              (0xFF0U)
#define CAIU1_CAIUUES_ERRCOUNT_SHIFT             (4U)
#define CAIU1_CAIUUES_ERRCOUNT_WIDTH             (8U)
#define CAIU1_CAIUUES_ERRCOUNT(x)                (((uint32_t)(((uint32_t)(x)) << CAIU1_CAIUUES_ERRCOUNT_SHIFT)) & CAIU1_CAIUUES_ERRCOUNT_MASK)
#define CAIU1_CAIUUES_ERRTYPE_MASK               (0xF000U)
#define CAIU1_CAIUUES_ERRTYPE_SHIFT              (12U)
#define CAIU1_CAIUUES_ERRTYPE_WIDTH              (4U)
#define CAIU1_CAIUUES_ERRTYPE(x)                 (((uint32_t)(((uint32_t)(x)) << CAIU1_CAIUUES_ERRTYPE_SHIFT)) & CAIU1_CAIUUES_ERRTYPE_MASK)
#define CAIU1_CAIUUES_ERRINFO_MASK               (0xFF0000U)
#define CAIU1_CAIUUES_ERRINFO_SHIFT              (16U)
#define CAIU1_CAIUUES_ERRINFO_WIDTH              (8U)
#define CAIU1_CAIUUES_ERRINFO(x)                 (((uint32_t)(((uint32_t)(x)) << CAIU1_CAIUUES_ERRINFO_SHIFT)) & CAIU1_CAIUUES_ERRINFO_MASK)
/*! @} */

/*! @name CAIUUELR0 - CAIU Uncorrectable Error Location Register 0 */
/*! @{ */
#define CAIU1_CAIUUELR0_ERRENTRY_MASK            (0xFFFFFU)
#define CAIU1_CAIUUELR0_ERRENTRY_SHIFT           (0U)
#define CAIU1_CAIUUELR0_ERRENTRY_WIDTH           (20U)
#define CAIU1_CAIUUELR0_ERRENTRY(x)              (((uint32_t)(((uint32_t)(x)) << CAIU1_CAIUUELR0_ERRENTRY_SHIFT)) & CAIU1_CAIUUELR0_ERRENTRY_MASK)
#define CAIU1_CAIUUELR0_ERRWAY_MASK              (0x3F00000U)
#define CAIU1_CAIUUELR0_ERRWAY_SHIFT             (20U)
#define CAIU1_CAIUUELR0_ERRWAY_WIDTH             (6U)
#define CAIU1_CAIUUELR0_ERRWAY(x)                (((uint32_t)(((uint32_t)(x)) << CAIU1_CAIUUELR0_ERRWAY_SHIFT)) & CAIU1_CAIUUELR0_ERRWAY_MASK)
#define CAIU1_CAIUUELR0_ERRWORD_MASK             (0xFC000000U)
#define CAIU1_CAIUUELR0_ERRWORD_SHIFT            (26U)
#define CAIU1_CAIUUELR0_ERRWORD_WIDTH            (6U)
#define CAIU1_CAIUUELR0_ERRWORD(x)               (((uint32_t)(((uint32_t)(x)) << CAIU1_CAIUUELR0_ERRWORD_SHIFT)) & CAIU1_CAIUUELR0_ERRWORD_MASK)
/*! @} */

/*! @name CAIUUELR1 - CAIU Uncorrectable Error Location Register 1 */
/*! @{ */
#define CAIU1_CAIUUELR1_ERRADDR_MASK             (0xFFFU)
#define CAIU1_CAIUUELR1_ERRADDR_SHIFT            (0U)
#define CAIU1_CAIUUELR1_ERRADDR_WIDTH            (12U)
#define CAIU1_CAIUUELR1_ERRADDR(x)               (((uint32_t)(((uint32_t)(x)) << CAIU1_CAIUUELR1_ERRADDR_SHIFT)) & CAIU1_CAIUUELR1_ERRADDR_MASK)
/*! @} */

/*! @name CAIUUESA - CAIU Uncorrectable Error Status Alias */
/*! @{ */
#define CAIU1_CAIUUESA_ERRVLD_MASK               (0x1U)
#define CAIU1_CAIUUESA_ERRVLD_SHIFT              (0U)
#define CAIU1_CAIUUESA_ERRVLD_WIDTH              (1U)
#define CAIU1_CAIUUESA_ERRVLD(x)                 (((uint32_t)(((uint32_t)(x)) << CAIU1_CAIUUESA_ERRVLD_SHIFT)) & CAIU1_CAIUUESA_ERRVLD_MASK)
#define CAIU1_CAIUUESA_ERROVF_MASK               (0x2U)
#define CAIU1_CAIUUESA_ERROVF_SHIFT              (1U)
#define CAIU1_CAIUUESA_ERROVF_WIDTH              (1U)
#define CAIU1_CAIUUESA_ERROVF(x)                 (((uint32_t)(((uint32_t)(x)) << CAIU1_CAIUUESA_ERROVF_SHIFT)) & CAIU1_CAIUUESA_ERROVF_MASK)
#define CAIU1_CAIUUESA_ERRCOUNT_MASK             (0xFF0U)
#define CAIU1_CAIUUESA_ERRCOUNT_SHIFT            (4U)
#define CAIU1_CAIUUESA_ERRCOUNT_WIDTH            (8U)
#define CAIU1_CAIUUESA_ERRCOUNT(x)               (((uint32_t)(((uint32_t)(x)) << CAIU1_CAIUUESA_ERRCOUNT_SHIFT)) & CAIU1_CAIUUESA_ERRCOUNT_MASK)
#define CAIU1_CAIUUESA_ERRTYPE_MASK              (0xF000U)
#define CAIU1_CAIUUESA_ERRTYPE_SHIFT             (12U)
#define CAIU1_CAIUUESA_ERRTYPE_WIDTH             (4U)
#define CAIU1_CAIUUESA_ERRTYPE(x)                (((uint32_t)(((uint32_t)(x)) << CAIU1_CAIUUESA_ERRTYPE_SHIFT)) & CAIU1_CAIUUESA_ERRTYPE_MASK)
#define CAIU1_CAIUUESA_ERRINFO_MASK              (0xFF0000U)
#define CAIU1_CAIUUESA_ERRINFO_SHIFT             (16U)
#define CAIU1_CAIUUESA_ERRINFO_WIDTH             (8U)
#define CAIU1_CAIUUESA_ERRINFO(x)                (((uint32_t)(((uint32_t)(x)) << CAIU1_CAIUUESA_ERRINFO_SHIFT)) & CAIU1_CAIUUESA_ERRINFO_MASK)
/*! @} */

/*! @name CAIUID - CAIU Identification */
/*! @{ */
#define CAIU1_CAIUID_IMPLVER_MASK                (0xFFU)
#define CAIU1_CAIUID_IMPLVER_SHIFT               (0U)
#define CAIU1_CAIUID_IMPLVER_WIDTH               (8U)
#define CAIU1_CAIUID_IMPLVER(x)                  (((uint32_t)(((uint32_t)(x)) << CAIU1_CAIUID_IMPLVER_SHIFT)) & CAIU1_CAIUID_IMPLVER_MASK)
#define CAIU1_CAIUID_CAIID_MASK                  (0x7F00U)
#define CAIU1_CAIUID_CAIID_SHIFT                 (8U)
#define CAIU1_CAIUID_CAIID_WIDTH                 (7U)
#define CAIU1_CAIUID_CAIID(x)                    (((uint32_t)(((uint32_t)(x)) << CAIU1_CAIUID_CAIID_SHIFT)) & CAIU1_CAIUID_CAIID_MASK)
#define CAIU1_CAIUID_CA_MASK                     (0x8000U)
#define CAIU1_CAIUID_CA_SHIFT                    (15U)
#define CAIU1_CAIUID_CA_WIDTH                    (1U)
#define CAIU1_CAIUID_CA(x)                       (((uint32_t)(((uint32_t)(x)) << CAIU1_CAIUID_CA_SHIFT)) & CAIU1_CAIUID_CA_MASK)
#define CAIU1_CAIUID_TYPE_MASK                   (0xF0000U)
#define CAIU1_CAIUID_TYPE_SHIFT                  (16U)
#define CAIU1_CAIUID_TYPE_WIDTH                  (4U)
#define CAIU1_CAIUID_TYPE(x)                     (((uint32_t)(((uint32_t)(x)) << CAIU1_CAIUID_TYPE_SHIFT)) & CAIU1_CAIUID_TYPE_MASK)
#define CAIU1_CAIUID_SFID_MASK                   (0x1F00000U)
#define CAIU1_CAIUID_SFID_SHIFT                  (20U)
#define CAIU1_CAIUID_SFID_WIDTH                  (5U)
#define CAIU1_CAIUID_SFID(x)                     (((uint32_t)(((uint32_t)(x)) << CAIU1_CAIUID_SFID_SHIFT)) & CAIU1_CAIUID_SFID_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group CAIU1_Register_Masks */


/*!
 * @}
 */ /* end of group CAIU1_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- CCTI_fault_ctrl Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup CCTI_fault_ctrl_Peripheral_Access_Layer CCTI_fault_ctrl Peripheral Access Layer
 * @{
 */

/** CCTI_fault_ctrl - Size of Registers Arrays */
#define CCTI_fault_ctrl_MF_COUNT                  4u
#define CCTI_fault_ctrl_LF_COUNT                  4u

/** CCTI_fault_ctrl - Register Layout Typedef */
typedef struct {
  __I  uint32_t COREID;                            /**< Core ID, offset: 0x0 */
  __I  uint32_t REVISIONID;                        /**< Revision ID, offset: 0x4 */
  __I  uint32_t MISSION_FAULT[CCTI_fault_ctrl_MF_COUNT]; /**< Mission Fault 0..Mission Fault 3, array offset: 0x8, array step: 0x4 */
  __I  uint32_t LATENT_FAULT[CCTI_fault_ctrl_LF_COUNT]; /**< Latent Fault 0..Latent Fault 3, array offset: 0x18, array step: 0x4 */
  __I  uint32_t FAULTS;                            /**< Faults, offset: 0x28 */
  __IO uint32_t INTEN;                             /**< Interrupt Enable, offset: 0x2C */
  __IO uint32_t INTCLR;                            /**< Interrupt Clear, offset: 0x30 */
  __IO uint32_t BISTCTL;                           /**< BIST Control, offset: 0x34 */
  __I  uint32_t BIST_DONE;                         /**< BIST Done, offset: 0x38 */
  __IO uint32_t BIST_TO1;                          /**< BIST Timeout 1, offset: 0x3C */
  __IO uint32_t BIST_TO2;                          /**< BIST Timeout 2, offset: 0x40 */
} CCTI_fault_ctrl_Type, *CCTI_fault_ctrl_MemMapPtr;

/** Number of instances of the CCTI_fault_ctrl module. */
#define CCTI_fault_ctrl_INSTANCE_COUNT           (1u)

/* CCTI_fault_ctrl - Peripheral instance base addresses */
/** Peripheral CCTI_FAULT_CTRL base address */
#define CCTI_FAULT_CTRL_BASE                     (0x50500000u)
/** Peripheral CCTI_FAULT_CTRL base pointer */
#define CCTI_FAULT_CTRL                          ((CCTI_fault_ctrl_Type *)CCTI_FAULT_CTRL_BASE)
/** Array initializer of CCTI_fault_ctrl peripheral base addresses */
#define CCTI_fault_ctrl_BASE_ADDRS               { CCTI_FAULT_CTRL_BASE }
/** Array initializer of CCTI_fault_ctrl peripheral base pointers */
#define CCTI_fault_ctrl_BASE_PTRS                { CCTI_FAULT_CTRL }

/* ----------------------------------------------------------------------------
   -- CCTI_fault_ctrl Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup CCTI_fault_ctrl_Register_Masks CCTI_fault_ctrl Register Masks
 * @{
 */

/*! @name COREID - Core ID */
/*! @{ */
#define CCTI_fault_ctrl_COREID_CORETYPEID_MASK   (0xFFU)
#define CCTI_fault_ctrl_COREID_CORETYPEID_SHIFT  (0U)
#define CCTI_fault_ctrl_COREID_CORETYPEID_WIDTH  (8U)
#define CCTI_fault_ctrl_COREID_CORETYPEID(x)     (((uint32_t)(((uint32_t)(x)) << CCTI_fault_ctrl_COREID_CORETYPEID_SHIFT)) & CCTI_fault_ctrl_COREID_CORETYPEID_MASK)
#define CCTI_fault_ctrl_COREID_CORECHECKSUM_MASK (0xFFFFFF00U)
#define CCTI_fault_ctrl_COREID_CORECHECKSUM_SHIFT (8U)
#define CCTI_fault_ctrl_COREID_CORECHECKSUM_WIDTH (24U)
#define CCTI_fault_ctrl_COREID_CORECHECKSUM(x)   (((uint32_t)(((uint32_t)(x)) << CCTI_fault_ctrl_COREID_CORECHECKSUM_SHIFT)) & CCTI_fault_ctrl_COREID_CORECHECKSUM_MASK)
/*! @} */

/*! @name REVISIONID - Revision ID */
/*! @{ */
#define CCTI_fault_ctrl_REVISIONID_USERID_MASK   (0xFFU)
#define CCTI_fault_ctrl_REVISIONID_USERID_SHIFT  (0U)
#define CCTI_fault_ctrl_REVISIONID_USERID_WIDTH  (8U)
#define CCTI_fault_ctrl_REVISIONID_USERID(x)     (((uint32_t)(((uint32_t)(x)) << CCTI_fault_ctrl_REVISIONID_USERID_SHIFT)) & CCTI_fault_ctrl_REVISIONID_USERID_MASK)
#define CCTI_fault_ctrl_REVISIONID_NOCID_MASK    (0xFFFFFF00U)
#define CCTI_fault_ctrl_REVISIONID_NOCID_SHIFT   (8U)
#define CCTI_fault_ctrl_REVISIONID_NOCID_WIDTH   (24U)
#define CCTI_fault_ctrl_REVISIONID_NOCID(x)      (((uint32_t)(((uint32_t)(x)) << CCTI_fault_ctrl_REVISIONID_NOCID_SHIFT)) & CCTI_fault_ctrl_REVISIONID_NOCID_MASK)
/*! @} */

/*! @name MISSION_FAULT - Mission Fault 0..Mission Fault 3 */
/*! @{ */
#define CCTI_fault_ctrl_MISSION_FAULT_MISSIONFAULT0_MASK (0xFFFFFFFFU)
#define CCTI_fault_ctrl_MISSION_FAULT_MISSIONFAULT0_SHIFT (0U)
#define CCTI_fault_ctrl_MISSION_FAULT_MISSIONFAULT0_WIDTH (32U)
#define CCTI_fault_ctrl_MISSION_FAULT_MISSIONFAULT0(x) (((uint32_t)(((uint32_t)(x)) << CCTI_fault_ctrl_MISSION_FAULT_MISSIONFAULT0_SHIFT)) & CCTI_fault_ctrl_MISSION_FAULT_MISSIONFAULT0_MASK)
#define CCTI_fault_ctrl_MISSION_FAULT_MISSIONFAULT1_MASK (0xFFFFFFFFU)
#define CCTI_fault_ctrl_MISSION_FAULT_MISSIONFAULT1_SHIFT (0U)
#define CCTI_fault_ctrl_MISSION_FAULT_MISSIONFAULT1_WIDTH (32U)
#define CCTI_fault_ctrl_MISSION_FAULT_MISSIONFAULT1(x) (((uint32_t)(((uint32_t)(x)) << CCTI_fault_ctrl_MISSION_FAULT_MISSIONFAULT1_SHIFT)) & CCTI_fault_ctrl_MISSION_FAULT_MISSIONFAULT1_MASK)
#define CCTI_fault_ctrl_MISSION_FAULT_MISSIONFAULT2_MASK (0xFFFFFFFFU)
#define CCTI_fault_ctrl_MISSION_FAULT_MISSIONFAULT2_SHIFT (0U)
#define CCTI_fault_ctrl_MISSION_FAULT_MISSIONFAULT2_WIDTH (32U)
#define CCTI_fault_ctrl_MISSION_FAULT_MISSIONFAULT2(x) (((uint32_t)(((uint32_t)(x)) << CCTI_fault_ctrl_MISSION_FAULT_MISSIONFAULT2_SHIFT)) & CCTI_fault_ctrl_MISSION_FAULT_MISSIONFAULT2_MASK)
#define CCTI_fault_ctrl_MISSION_FAULT_MISSIONFAULT3_MASK (0xFFFFFFFFU)
#define CCTI_fault_ctrl_MISSION_FAULT_MISSIONFAULT3_SHIFT (0U)
#define CCTI_fault_ctrl_MISSION_FAULT_MISSIONFAULT3_WIDTH (32U)
#define CCTI_fault_ctrl_MISSION_FAULT_MISSIONFAULT3(x) (((uint32_t)(((uint32_t)(x)) << CCTI_fault_ctrl_MISSION_FAULT_MISSIONFAULT3_SHIFT)) & CCTI_fault_ctrl_MISSION_FAULT_MISSIONFAULT3_MASK)
/*! @} */

/*! @name LATENT_FAULT - Latent Fault 0..Latent Fault 3 */
/*! @{ */
#define CCTI_fault_ctrl_LATENT_FAULT_LATENTFAULT0_MASK (0xFFFFFFFFU)
#define CCTI_fault_ctrl_LATENT_FAULT_LATENTFAULT0_SHIFT (0U)
#define CCTI_fault_ctrl_LATENT_FAULT_LATENTFAULT0_WIDTH (32U)
#define CCTI_fault_ctrl_LATENT_FAULT_LATENTFAULT0(x) (((uint32_t)(((uint32_t)(x)) << CCTI_fault_ctrl_LATENT_FAULT_LATENTFAULT0_SHIFT)) & CCTI_fault_ctrl_LATENT_FAULT_LATENTFAULT0_MASK)
#define CCTI_fault_ctrl_LATENT_FAULT_LATENTFAULT1_MASK (0xFFFFFFFFU)
#define CCTI_fault_ctrl_LATENT_FAULT_LATENTFAULT1_SHIFT (0U)
#define CCTI_fault_ctrl_LATENT_FAULT_LATENTFAULT1_WIDTH (32U)
#define CCTI_fault_ctrl_LATENT_FAULT_LATENTFAULT1(x) (((uint32_t)(((uint32_t)(x)) << CCTI_fault_ctrl_LATENT_FAULT_LATENTFAULT1_SHIFT)) & CCTI_fault_ctrl_LATENT_FAULT_LATENTFAULT1_MASK)
#define CCTI_fault_ctrl_LATENT_FAULT_LATENTFAULT2_MASK (0xFFFFFFFFU)
#define CCTI_fault_ctrl_LATENT_FAULT_LATENTFAULT2_SHIFT (0U)
#define CCTI_fault_ctrl_LATENT_FAULT_LATENTFAULT2_WIDTH (32U)
#define CCTI_fault_ctrl_LATENT_FAULT_LATENTFAULT2(x) (((uint32_t)(((uint32_t)(x)) << CCTI_fault_ctrl_LATENT_FAULT_LATENTFAULT2_SHIFT)) & CCTI_fault_ctrl_LATENT_FAULT_LATENTFAULT2_MASK)
#define CCTI_fault_ctrl_LATENT_FAULT_LATENTFAULT3_MASK (0xFFFFFFFFU)
#define CCTI_fault_ctrl_LATENT_FAULT_LATENTFAULT3_SHIFT (0U)
#define CCTI_fault_ctrl_LATENT_FAULT_LATENTFAULT3_WIDTH (32U)
#define CCTI_fault_ctrl_LATENT_FAULT_LATENTFAULT3(x) (((uint32_t)(((uint32_t)(x)) << CCTI_fault_ctrl_LATENT_FAULT_LATENTFAULT3_SHIFT)) & CCTI_fault_ctrl_LATENT_FAULT_LATENTFAULT3_MASK)
/*! @} */

/*! @name FAULTS - Faults */
/*! @{ */
#define CCTI_fault_ctrl_FAULTS_LATENTFAULT_MASK  (0x1U)
#define CCTI_fault_ctrl_FAULTS_LATENTFAULT_SHIFT (0U)
#define CCTI_fault_ctrl_FAULTS_LATENTFAULT_WIDTH (1U)
#define CCTI_fault_ctrl_FAULTS_LATENTFAULT(x)    (((uint32_t)(((uint32_t)(x)) << CCTI_fault_ctrl_FAULTS_LATENTFAULT_SHIFT)) & CCTI_fault_ctrl_FAULTS_LATENTFAULT_MASK)
#define CCTI_fault_ctrl_FAULTS_MISSIONFAULT_MASK (0x2U)
#define CCTI_fault_ctrl_FAULTS_MISSIONFAULT_SHIFT (1U)
#define CCTI_fault_ctrl_FAULTS_MISSIONFAULT_WIDTH (1U)
#define CCTI_fault_ctrl_FAULTS_MISSIONFAULT(x)   (((uint32_t)(((uint32_t)(x)) << CCTI_fault_ctrl_FAULTS_MISSIONFAULT_SHIFT)) & CCTI_fault_ctrl_FAULTS_MISSIONFAULT_MASK)
/*! @} */

/*! @name INTEN - Interrupt Enable */
/*! @{ */
#define CCTI_fault_ctrl_INTEN_BISTDONEEN_MASK    (0x1U)
#define CCTI_fault_ctrl_INTEN_BISTDONEEN_SHIFT   (0U)
#define CCTI_fault_ctrl_INTEN_BISTDONEEN_WIDTH   (1U)
#define CCTI_fault_ctrl_INTEN_BISTDONEEN(x)      (((uint32_t)(((uint32_t)(x)) << CCTI_fault_ctrl_INTEN_BISTDONEEN_SHIFT)) & CCTI_fault_ctrl_INTEN_BISTDONEEN_MASK)
#define CCTI_fault_ctrl_INTEN_MISSIONFAULTEN_MASK (0x2U)
#define CCTI_fault_ctrl_INTEN_MISSIONFAULTEN_SHIFT (1U)
#define CCTI_fault_ctrl_INTEN_MISSIONFAULTEN_WIDTH (1U)
#define CCTI_fault_ctrl_INTEN_MISSIONFAULTEN(x)  (((uint32_t)(((uint32_t)(x)) << CCTI_fault_ctrl_INTEN_MISSIONFAULTEN_SHIFT)) & CCTI_fault_ctrl_INTEN_MISSIONFAULTEN_MASK)
/*! @} */

/*! @name INTCLR - Interrupt Clear */
/*! @{ */
#define CCTI_fault_ctrl_INTCLR_LATENTFAULTCLR_MASK (0x1U)
#define CCTI_fault_ctrl_INTCLR_LATENTFAULTCLR_SHIFT (0U)
#define CCTI_fault_ctrl_INTCLR_LATENTFAULTCLR_WIDTH (1U)
#define CCTI_fault_ctrl_INTCLR_LATENTFAULTCLR(x) (((uint32_t)(((uint32_t)(x)) << CCTI_fault_ctrl_INTCLR_LATENTFAULTCLR_SHIFT)) & CCTI_fault_ctrl_INTCLR_LATENTFAULTCLR_MASK)
#define CCTI_fault_ctrl_INTCLR_MISSIONFAULTCLR_MASK (0x2U)
#define CCTI_fault_ctrl_INTCLR_MISSIONFAULTCLR_SHIFT (1U)
#define CCTI_fault_ctrl_INTCLR_MISSIONFAULTCLR_WIDTH (1U)
#define CCTI_fault_ctrl_INTCLR_MISSIONFAULTCLR(x) (((uint32_t)(((uint32_t)(x)) << CCTI_fault_ctrl_INTCLR_MISSIONFAULTCLR_SHIFT)) & CCTI_fault_ctrl_INTCLR_MISSIONFAULTCLR_MASK)
/*! @} */

/*! @name BISTCTL - BIST Control */
/*! @{ */
#define CCTI_fault_ctrl_BISTCTL_BISTSTART_MASK   (0x1U)
#define CCTI_fault_ctrl_BISTCTL_BISTSTART_SHIFT  (0U)
#define CCTI_fault_ctrl_BISTCTL_BISTSTART_WIDTH  (1U)
#define CCTI_fault_ctrl_BISTCTL_BISTSTART(x)     (((uint32_t)(((uint32_t)(x)) << CCTI_fault_ctrl_BISTCTL_BISTSTART_SHIFT)) & CCTI_fault_ctrl_BISTCTL_BISTSTART_MASK)
#define CCTI_fault_ctrl_BISTCTL_BISTDONECLR_MASK (0x2U)
#define CCTI_fault_ctrl_BISTCTL_BISTDONECLR_SHIFT (1U)
#define CCTI_fault_ctrl_BISTCTL_BISTDONECLR_WIDTH (1U)
#define CCTI_fault_ctrl_BISTCTL_BISTDONECLR(x)   (((uint32_t)(((uint32_t)(x)) << CCTI_fault_ctrl_BISTCTL_BISTDONECLR_SHIFT)) & CCTI_fault_ctrl_BISTCTL_BISTDONECLR_MASK)
/*! @} */

/*! @name BIST_DONE - BIST Done */
/*! @{ */
#define CCTI_fault_ctrl_BIST_DONE_BISTDONE_MASK  (0x1U)
#define CCTI_fault_ctrl_BIST_DONE_BISTDONE_SHIFT (0U)
#define CCTI_fault_ctrl_BIST_DONE_BISTDONE_WIDTH (1U)
#define CCTI_fault_ctrl_BIST_DONE_BISTDONE(x)    (((uint32_t)(((uint32_t)(x)) << CCTI_fault_ctrl_BIST_DONE_BISTDONE_SHIFT)) & CCTI_fault_ctrl_BIST_DONE_BISTDONE_MASK)
#define CCTI_fault_ctrl_BIST_DONE_MISSIONMODE_MASK (0x2U)
#define CCTI_fault_ctrl_BIST_DONE_MISSIONMODE_SHIFT (1U)
#define CCTI_fault_ctrl_BIST_DONE_MISSIONMODE_WIDTH (1U)
#define CCTI_fault_ctrl_BIST_DONE_MISSIONMODE(x) (((uint32_t)(((uint32_t)(x)) << CCTI_fault_ctrl_BIST_DONE_MISSIONMODE_SHIFT)) & CCTI_fault_ctrl_BIST_DONE_MISSIONMODE_MASK)
/*! @} */

/*! @name BIST_TO1 - BIST Timeout 1 */
/*! @{ */
#define CCTI_fault_ctrl_BIST_TO1_BISTTO1_MASK    (0xFFFFU)
#define CCTI_fault_ctrl_BIST_TO1_BISTTO1_SHIFT   (0U)
#define CCTI_fault_ctrl_BIST_TO1_BISTTO1_WIDTH   (16U)
#define CCTI_fault_ctrl_BIST_TO1_BISTTO1(x)      (((uint32_t)(((uint32_t)(x)) << CCTI_fault_ctrl_BIST_TO1_BISTTO1_SHIFT)) & CCTI_fault_ctrl_BIST_TO1_BISTTO1_MASK)
/*! @} */

/*! @name BIST_TO2 - BIST Timeout 2 */
/*! @{ */
#define CCTI_fault_ctrl_BIST_TO2_BISTTO2_MASK    (0xFFU)
#define CCTI_fault_ctrl_BIST_TO2_BISTTO2_SHIFT   (0U)
#define CCTI_fault_ctrl_BIST_TO2_BISTTO2_WIDTH   (8U)
#define CCTI_fault_ctrl_BIST_TO2_BISTTO2(x)      (((uint32_t)(((uint32_t)(x)) << CCTI_fault_ctrl_BIST_TO2_BISTTO2_SHIFT)) & CCTI_fault_ctrl_BIST_TO2_BISTTO2_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group CCTI_fault_ctrl_Register_Masks */


/*!
 * @}
 */ /* end of group CCTI_fault_ctrl_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- CM7_GPR Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup CM7_GPR_Peripheral_Access_Layer CM7_GPR Peripheral Access Layer
 * @{
 */

/** CM7_GPR - Register Layout Typedef */
typedef struct {
  __IO uint32_t CORTEXM7_GPR0;                     /**< CORTEXM7_GPR0, offset: 0x0 */
} CM7_GPR_Type, *CM7_GPR_MemMapPtr;

/** Number of instances of the CM7_GPR module. */
#define CM7_GPR_INSTANCE_COUNT                   (3u)

/* CM7_GPR - Peripheral instance base addresses */
/** Peripheral CM7_GPR_0 base address */
#define CM7_GPR_0_BASE                           (0x4007C100u)
/** Peripheral CM7_GPR_0 base pointer */
#define CM7_GPR_0                                ((CM7_GPR_Type *)CM7_GPR_0_BASE)
/** Peripheral CM7_GPR_1 base address */
#define CM7_GPR_1_BASE                           (0x4007C200u)
/** Peripheral CM7_GPR_1 base pointer */
#define CM7_GPR_1                                ((CM7_GPR_Type *)CM7_GPR_1_BASE)
/** Peripheral CM7_GPR_2 base address */
#define CM7_GPR_2_BASE                           (0x4007C300u)
/** Peripheral CM7_GPR_2 base pointer */
#define CM7_GPR_2                                ((CM7_GPR_Type *)CM7_GPR_2_BASE)
/** Array initializer of CM7_GPR peripheral base addresses */
#define CM7_GPR_BASE_ADDRS                       { CM7_GPR_0_BASE, CM7_GPR_1_BASE, CM7_GPR_2_BASE }
/** Array initializer of CM7_GPR peripheral base pointers */
#define CM7_GPR_BASE_PTRS                        { CM7_GPR_0, CM7_GPR_1, CM7_GPR_2 }

/* ----------------------------------------------------------------------------
   -- CM7_GPR Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup CM7_GPR_Register_Masks CM7_GPR Register Masks
 * @{
 */

/*! @name CORTEXM7_GPR0 - CORTEXM7_GPR0 */
/*! @{ */
#define CM7_GPR_CORTEXM7_GPR0_CM7_CPU_WAIT_MASK  (0x1U)
#define CM7_GPR_CORTEXM7_GPR0_CM7_CPU_WAIT_SHIFT (0U)
#define CM7_GPR_CORTEXM7_GPR0_CM7_CPU_WAIT_WIDTH (1U)
#define CM7_GPR_CORTEXM7_GPR0_CM7_CPU_WAIT(x)    (((uint32_t)(((uint32_t)(x)) << CM7_GPR_CORTEXM7_GPR0_CM7_CPU_WAIT_SHIFT)) & CM7_GPR_CORTEXM7_GPR0_CM7_CPU_WAIT_MASK)
#define CM7_GPR_CORTEXM7_GPR0_CM7_CPU_EVENT_GENERATE_MASK (0x2U)
#define CM7_GPR_CORTEXM7_GPR0_CM7_CPU_EVENT_GENERATE_SHIFT (1U)
#define CM7_GPR_CORTEXM7_GPR0_CM7_CPU_EVENT_GENERATE_WIDTH (1U)
#define CM7_GPR_CORTEXM7_GPR0_CM7_CPU_EVENT_GENERATE(x) (((uint32_t)(((uint32_t)(x)) << CM7_GPR_CORTEXM7_GPR0_CM7_CPU_EVENT_GENERATE_SHIFT)) & CM7_GPR_CORTEXM7_GPR0_CM7_CPU_EVENT_GENERATE_MASK)
#define CM7_GPR_CORTEXM7_GPR0_CM7_CPU_MEMORY_RETENTION_MODE_1_MASK (0x4U)
#define CM7_GPR_CORTEXM7_GPR0_CM7_CPU_MEMORY_RETENTION_MODE_1_SHIFT (2U)
#define CM7_GPR_CORTEXM7_GPR0_CM7_CPU_MEMORY_RETENTION_MODE_1_WIDTH (1U)
#define CM7_GPR_CORTEXM7_GPR0_CM7_CPU_MEMORY_RETENTION_MODE_1(x) (((uint32_t)(((uint32_t)(x)) << CM7_GPR_CORTEXM7_GPR0_CM7_CPU_MEMORY_RETENTION_MODE_1_SHIFT)) & CM7_GPR_CORTEXM7_GPR0_CM7_CPU_MEMORY_RETENTION_MODE_1_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group CM7_GPR_Register_Masks */


/*!
 * @}
 */ /* end of group CM7_GPR_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- CMIU Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup CMIU_Peripheral_Access_Layer CMIU Peripheral Access Layer
 * @{
 */

/** CMIU - Register Layout Typedef */
typedef struct {
  uint8_t RESERVED_0[4];
  __I  uint32_t CMIUTA;                            /**< CMIU Transaction Activity, offset: 0x4 */
  uint8_t RESERVED_1[248];
  __IO uint32_t CMIUCEC;                           /**< CMIU Correctable Error Control, offset: 0x100 */
  __IO uint32_t CMIUCES;                           /**< CMIU Correctable Error Status, offset: 0x104 */
  __IO uint32_t CMIUCELR0;                         /**< CMIU Correctable Error Location Register 0, offset: 0x108 */
  __IO uint32_t CMIUCELR1;                         /**< CMIU Correctable Error Location Register 1, offset: 0x10C */
  uint8_t RESERVED_2[20];
  __IO uint32_t CMIUCESA;                          /**< CMIU Correctable Error Status Alias, offset: 0x124 */
  uint8_t RESERVED_3[24];
  __IO uint32_t CMIUUEC;                           /**< CMIU Uncorrectable Error Control, offset: 0x140 */
  __IO uint32_t CMIUUES;                           /**< CMIU Uncorrectable Error Status, offset: 0x144 */
  __IO uint32_t CMIUUELR0;                         /**< CMIU Uncorrectable Error Location Register 0, offset: 0x148 */
  __IO uint32_t CMIUUELR1;                         /**< CMIU Uncorrectable Error Location Register 1, offset: 0x14C */
  uint8_t RESERVED_4[20];
  __IO uint32_t CMIUUESA;                          /**< CMIU Uncorrectable Error Status Alias, offset: 0x164 */
  uint8_t RESERVED_5[3732];
  __I  uint32_t CMIUID;                            /**< CMIU Identification Register, offset: 0xFFC */
} CMIU_Type, *CMIU_MemMapPtr;

/** Number of instances of the CMIU module. */
#define CMIU_INSTANCE_COUNT                      (1u)

/* CMIU - Peripheral instance base addresses */
/** Peripheral CMIU base address */
#define CMIU_BASE                                (0x504C0000u)
/** Peripheral CMIU base pointer */
#define CMIU                                     ((CMIU_Type *)CMIU_BASE)
/** Array initializer of CMIU peripheral base addresses */
#define CMIU_BASE_ADDRS                          { CMIU_BASE }
/** Array initializer of CMIU peripheral base pointers */
#define CMIU_BASE_PTRS                           { CMIU }

/* ----------------------------------------------------------------------------
   -- CMIU Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup CMIU_Register_Masks CMIU Register Masks
 * @{
 */

/*! @name CMIUTA - CMIU Transaction Activity */
/*! @{ */
#define CMIU_CMIUTA_TRANSACTV_MASK               (0x1U)
#define CMIU_CMIUTA_TRANSACTV_SHIFT              (0U)
#define CMIU_CMIUTA_TRANSACTV_WIDTH              (1U)
#define CMIU_CMIUTA_TRANSACTV(x)                 (((uint32_t)(((uint32_t)(x)) << CMIU_CMIUTA_TRANSACTV_SHIFT)) & CMIU_CMIUTA_TRANSACTV_MASK)
/*! @} */

/*! @name CMIUCEC - CMIU Correctable Error Control */
/*! @{ */
#define CMIU_CMIUCEC_ERRDETEN_MASK               (0x1U)
#define CMIU_CMIUCEC_ERRDETEN_SHIFT              (0U)
#define CMIU_CMIUCEC_ERRDETEN_WIDTH              (1U)
#define CMIU_CMIUCEC_ERRDETEN(x)                 (((uint32_t)(((uint32_t)(x)) << CMIU_CMIUCEC_ERRDETEN_SHIFT)) & CMIU_CMIUCEC_ERRDETEN_MASK)
#define CMIU_CMIUCEC_ERRINTEN_MASK               (0x2U)
#define CMIU_CMIUCEC_ERRINTEN_SHIFT              (1U)
#define CMIU_CMIUCEC_ERRINTEN_WIDTH              (1U)
#define CMIU_CMIUCEC_ERRINTEN(x)                 (((uint32_t)(((uint32_t)(x)) << CMIU_CMIUCEC_ERRINTEN_SHIFT)) & CMIU_CMIUCEC_ERRINTEN_MASK)
#define CMIU_CMIUCEC_ERRTHRESHOLD_MASK           (0xFF0U)
#define CMIU_CMIUCEC_ERRTHRESHOLD_SHIFT          (4U)
#define CMIU_CMIUCEC_ERRTHRESHOLD_WIDTH          (8U)
#define CMIU_CMIUCEC_ERRTHRESHOLD(x)             (((uint32_t)(((uint32_t)(x)) << CMIU_CMIUCEC_ERRTHRESHOLD_SHIFT)) & CMIU_CMIUCEC_ERRTHRESHOLD_MASK)
/*! @} */

/*! @name CMIUCES - CMIU Correctable Error Status */
/*! @{ */
#define CMIU_CMIUCES_ERRVLD_MASK                 (0x1U)
#define CMIU_CMIUCES_ERRVLD_SHIFT                (0U)
#define CMIU_CMIUCES_ERRVLD_WIDTH                (1U)
#define CMIU_CMIUCES_ERRVLD(x)                   (((uint32_t)(((uint32_t)(x)) << CMIU_CMIUCES_ERRVLD_SHIFT)) & CMIU_CMIUCES_ERRVLD_MASK)
#define CMIU_CMIUCES_ERROVF_MASK                 (0x2U)
#define CMIU_CMIUCES_ERROVF_SHIFT                (1U)
#define CMIU_CMIUCES_ERROVF_WIDTH                (1U)
#define CMIU_CMIUCES_ERROVF(x)                   (((uint32_t)(((uint32_t)(x)) << CMIU_CMIUCES_ERROVF_SHIFT)) & CMIU_CMIUCES_ERROVF_MASK)
#define CMIU_CMIUCES_ERRCOUNT_MASK               (0xFF0U)
#define CMIU_CMIUCES_ERRCOUNT_SHIFT              (4U)
#define CMIU_CMIUCES_ERRCOUNT_WIDTH              (8U)
#define CMIU_CMIUCES_ERRCOUNT(x)                 (((uint32_t)(((uint32_t)(x)) << CMIU_CMIUCES_ERRCOUNT_SHIFT)) & CMIU_CMIUCES_ERRCOUNT_MASK)
#define CMIU_CMIUCES_ERRTYPE_MASK                (0xF000U)
#define CMIU_CMIUCES_ERRTYPE_SHIFT               (12U)
#define CMIU_CMIUCES_ERRTYPE_WIDTH               (4U)
#define CMIU_CMIUCES_ERRTYPE(x)                  (((uint32_t)(((uint32_t)(x)) << CMIU_CMIUCES_ERRTYPE_SHIFT)) & CMIU_CMIUCES_ERRTYPE_MASK)
#define CMIU_CMIUCES_ERRINFO_MASK                (0xFF0000U)
#define CMIU_CMIUCES_ERRINFO_SHIFT               (16U)
#define CMIU_CMIUCES_ERRINFO_WIDTH               (8U)
#define CMIU_CMIUCES_ERRINFO(x)                  (((uint32_t)(((uint32_t)(x)) << CMIU_CMIUCES_ERRINFO_SHIFT)) & CMIU_CMIUCES_ERRINFO_MASK)
/*! @} */

/*! @name CMIUCELR0 - CMIU Correctable Error Location Register 0 */
/*! @{ */
#define CMIU_CMIUCELR0_ERRENTRY_MASK             (0xFFFFFU)
#define CMIU_CMIUCELR0_ERRENTRY_SHIFT            (0U)
#define CMIU_CMIUCELR0_ERRENTRY_WIDTH            (20U)
#define CMIU_CMIUCELR0_ERRENTRY(x)               (((uint32_t)(((uint32_t)(x)) << CMIU_CMIUCELR0_ERRENTRY_SHIFT)) & CMIU_CMIUCELR0_ERRENTRY_MASK)
#define CMIU_CMIUCELR0_ERRWAY_MASK               (0x3F00000U)
#define CMIU_CMIUCELR0_ERRWAY_SHIFT              (20U)
#define CMIU_CMIUCELR0_ERRWAY_WIDTH              (6U)
#define CMIU_CMIUCELR0_ERRWAY(x)                 (((uint32_t)(((uint32_t)(x)) << CMIU_CMIUCELR0_ERRWAY_SHIFT)) & CMIU_CMIUCELR0_ERRWAY_MASK)
#define CMIU_CMIUCELR0_ERRWORD_MASK              (0xFC000000U)
#define CMIU_CMIUCELR0_ERRWORD_SHIFT             (26U)
#define CMIU_CMIUCELR0_ERRWORD_WIDTH             (6U)
#define CMIU_CMIUCELR0_ERRWORD(x)                (((uint32_t)(((uint32_t)(x)) << CMIU_CMIUCELR0_ERRWORD_SHIFT)) & CMIU_CMIUCELR0_ERRWORD_MASK)
/*! @} */

/*! @name CMIUCELR1 - CMIU Correctable Error Location Register 1 */
/*! @{ */
#define CMIU_CMIUCELR1_ERRADDR_MASK              (0xFFFU)
#define CMIU_CMIUCELR1_ERRADDR_SHIFT             (0U)
#define CMIU_CMIUCELR1_ERRADDR_WIDTH             (12U)
#define CMIU_CMIUCELR1_ERRADDR(x)                (((uint32_t)(((uint32_t)(x)) << CMIU_CMIUCELR1_ERRADDR_SHIFT)) & CMIU_CMIUCELR1_ERRADDR_MASK)
/*! @} */

/*! @name CMIUCESA - CMIU Correctable Error Status Alias */
/*! @{ */
#define CMIU_CMIUCESA_ERRVLD_MASK                (0x1U)
#define CMIU_CMIUCESA_ERRVLD_SHIFT               (0U)
#define CMIU_CMIUCESA_ERRVLD_WIDTH               (1U)
#define CMIU_CMIUCESA_ERRVLD(x)                  (((uint32_t)(((uint32_t)(x)) << CMIU_CMIUCESA_ERRVLD_SHIFT)) & CMIU_CMIUCESA_ERRVLD_MASK)
#define CMIU_CMIUCESA_ERROVF_MASK                (0x2U)
#define CMIU_CMIUCESA_ERROVF_SHIFT               (1U)
#define CMIU_CMIUCESA_ERROVF_WIDTH               (1U)
#define CMIU_CMIUCESA_ERROVF(x)                  (((uint32_t)(((uint32_t)(x)) << CMIU_CMIUCESA_ERROVF_SHIFT)) & CMIU_CMIUCESA_ERROVF_MASK)
#define CMIU_CMIUCESA_ERRCOUNT_MASK              (0xFF0U)
#define CMIU_CMIUCESA_ERRCOUNT_SHIFT             (4U)
#define CMIU_CMIUCESA_ERRCOUNT_WIDTH             (8U)
#define CMIU_CMIUCESA_ERRCOUNT(x)                (((uint32_t)(((uint32_t)(x)) << CMIU_CMIUCESA_ERRCOUNT_SHIFT)) & CMIU_CMIUCESA_ERRCOUNT_MASK)
#define CMIU_CMIUCESA_ERRTYPE_MASK               (0xF000U)
#define CMIU_CMIUCESA_ERRTYPE_SHIFT              (12U)
#define CMIU_CMIUCESA_ERRTYPE_WIDTH              (4U)
#define CMIU_CMIUCESA_ERRTYPE(x)                 (((uint32_t)(((uint32_t)(x)) << CMIU_CMIUCESA_ERRTYPE_SHIFT)) & CMIU_CMIUCESA_ERRTYPE_MASK)
#define CMIU_CMIUCESA_ERRINFO_MASK               (0xFF0000U)
#define CMIU_CMIUCESA_ERRINFO_SHIFT              (16U)
#define CMIU_CMIUCESA_ERRINFO_WIDTH              (8U)
#define CMIU_CMIUCESA_ERRINFO(x)                 (((uint32_t)(((uint32_t)(x)) << CMIU_CMIUCESA_ERRINFO_SHIFT)) & CMIU_CMIUCESA_ERRINFO_MASK)
/*! @} */

/*! @name CMIUUEC - CMIU Uncorrectable Error Control */
/*! @{ */
#define CMIU_CMIUUEC_ERRDETEN_MASK               (0x1U)
#define CMIU_CMIUUEC_ERRDETEN_SHIFT              (0U)
#define CMIU_CMIUUEC_ERRDETEN_WIDTH              (1U)
#define CMIU_CMIUUEC_ERRDETEN(x)                 (((uint32_t)(((uint32_t)(x)) << CMIU_CMIUUEC_ERRDETEN_SHIFT)) & CMIU_CMIUUEC_ERRDETEN_MASK)
#define CMIU_CMIUUEC_ERRINTEN_MASK               (0x2U)
#define CMIU_CMIUUEC_ERRINTEN_SHIFT              (1U)
#define CMIU_CMIUUEC_ERRINTEN_WIDTH              (1U)
#define CMIU_CMIUUEC_ERRINTEN(x)                 (((uint32_t)(((uint32_t)(x)) << CMIU_CMIUUEC_ERRINTEN_SHIFT)) & CMIU_CMIUUEC_ERRINTEN_MASK)
#define CMIU_CMIUUEC_ERRTHRESHOLD_MASK           (0xFF0U)
#define CMIU_CMIUUEC_ERRTHRESHOLD_SHIFT          (4U)
#define CMIU_CMIUUEC_ERRTHRESHOLD_WIDTH          (8U)
#define CMIU_CMIUUEC_ERRTHRESHOLD(x)             (((uint32_t)(((uint32_t)(x)) << CMIU_CMIUUEC_ERRTHRESHOLD_SHIFT)) & CMIU_CMIUUEC_ERRTHRESHOLD_MASK)
/*! @} */

/*! @name CMIUUES - CMIU Uncorrectable Error Status */
/*! @{ */
#define CMIU_CMIUUES_ERRVLD_MASK                 (0x1U)
#define CMIU_CMIUUES_ERRVLD_SHIFT                (0U)
#define CMIU_CMIUUES_ERRVLD_WIDTH                (1U)
#define CMIU_CMIUUES_ERRVLD(x)                   (((uint32_t)(((uint32_t)(x)) << CMIU_CMIUUES_ERRVLD_SHIFT)) & CMIU_CMIUUES_ERRVLD_MASK)
#define CMIU_CMIUUES_ERROVF_MASK                 (0x2U)
#define CMIU_CMIUUES_ERROVF_SHIFT                (1U)
#define CMIU_CMIUUES_ERROVF_WIDTH                (1U)
#define CMIU_CMIUUES_ERROVF(x)                   (((uint32_t)(((uint32_t)(x)) << CMIU_CMIUUES_ERROVF_SHIFT)) & CMIU_CMIUUES_ERROVF_MASK)
#define CMIU_CMIUUES_ERRCOUNT_MASK               (0xFF0U)
#define CMIU_CMIUUES_ERRCOUNT_SHIFT              (4U)
#define CMIU_CMIUUES_ERRCOUNT_WIDTH              (8U)
#define CMIU_CMIUUES_ERRCOUNT(x)                 (((uint32_t)(((uint32_t)(x)) << CMIU_CMIUUES_ERRCOUNT_SHIFT)) & CMIU_CMIUUES_ERRCOUNT_MASK)
#define CMIU_CMIUUES_ERRTYPE_MASK                (0xF000U)
#define CMIU_CMIUUES_ERRTYPE_SHIFT               (12U)
#define CMIU_CMIUUES_ERRTYPE_WIDTH               (4U)
#define CMIU_CMIUUES_ERRTYPE(x)                  (((uint32_t)(((uint32_t)(x)) << CMIU_CMIUUES_ERRTYPE_SHIFT)) & CMIU_CMIUUES_ERRTYPE_MASK)
#define CMIU_CMIUUES_ERRINFO_MASK                (0xFF0000U)
#define CMIU_CMIUUES_ERRINFO_SHIFT               (16U)
#define CMIU_CMIUUES_ERRINFO_WIDTH               (8U)
#define CMIU_CMIUUES_ERRINFO(x)                  (((uint32_t)(((uint32_t)(x)) << CMIU_CMIUUES_ERRINFO_SHIFT)) & CMIU_CMIUUES_ERRINFO_MASK)
/*! @} */

/*! @name CMIUUELR0 - CMIU Uncorrectable Error Location Register 0 */
/*! @{ */
#define CMIU_CMIUUELR0_ERRENTRY_MASK             (0xFFFFFU)
#define CMIU_CMIUUELR0_ERRENTRY_SHIFT            (0U)
#define CMIU_CMIUUELR0_ERRENTRY_WIDTH            (20U)
#define CMIU_CMIUUELR0_ERRENTRY(x)               (((uint32_t)(((uint32_t)(x)) << CMIU_CMIUUELR0_ERRENTRY_SHIFT)) & CMIU_CMIUUELR0_ERRENTRY_MASK)
#define CMIU_CMIUUELR0_ERRWAY_MASK               (0x3F00000U)
#define CMIU_CMIUUELR0_ERRWAY_SHIFT              (20U)
#define CMIU_CMIUUELR0_ERRWAY_WIDTH              (6U)
#define CMIU_CMIUUELR0_ERRWAY(x)                 (((uint32_t)(((uint32_t)(x)) << CMIU_CMIUUELR0_ERRWAY_SHIFT)) & CMIU_CMIUUELR0_ERRWAY_MASK)
#define CMIU_CMIUUELR0_ERRWORD_MASK              (0xFC000000U)
#define CMIU_CMIUUELR0_ERRWORD_SHIFT             (26U)
#define CMIU_CMIUUELR0_ERRWORD_WIDTH             (6U)
#define CMIU_CMIUUELR0_ERRWORD(x)                (((uint32_t)(((uint32_t)(x)) << CMIU_CMIUUELR0_ERRWORD_SHIFT)) & CMIU_CMIUUELR0_ERRWORD_MASK)
/*! @} */

/*! @name CMIUUELR1 - CMIU Uncorrectable Error Location Register 1 */
/*! @{ */
#define CMIU_CMIUUELR1_ERRADDR_MASK              (0xFFFU)
#define CMIU_CMIUUELR1_ERRADDR_SHIFT             (0U)
#define CMIU_CMIUUELR1_ERRADDR_WIDTH             (12U)
#define CMIU_CMIUUELR1_ERRADDR(x)                (((uint32_t)(((uint32_t)(x)) << CMIU_CMIUUELR1_ERRADDR_SHIFT)) & CMIU_CMIUUELR1_ERRADDR_MASK)
/*! @} */

/*! @name CMIUUESA - CMIU Uncorrectable Error Status Alias */
/*! @{ */
#define CMIU_CMIUUESA_ERRVLD_MASK                (0x1U)
#define CMIU_CMIUUESA_ERRVLD_SHIFT               (0U)
#define CMIU_CMIUUESA_ERRVLD_WIDTH               (1U)
#define CMIU_CMIUUESA_ERRVLD(x)                  (((uint32_t)(((uint32_t)(x)) << CMIU_CMIUUESA_ERRVLD_SHIFT)) & CMIU_CMIUUESA_ERRVLD_MASK)
#define CMIU_CMIUUESA_ERROVF_MASK                (0x2U)
#define CMIU_CMIUUESA_ERROVF_SHIFT               (1U)
#define CMIU_CMIUUESA_ERROVF_WIDTH               (1U)
#define CMIU_CMIUUESA_ERROVF(x)                  (((uint32_t)(((uint32_t)(x)) << CMIU_CMIUUESA_ERROVF_SHIFT)) & CMIU_CMIUUESA_ERROVF_MASK)
#define CMIU_CMIUUESA_ERRCOUNT_MASK              (0xFF0U)
#define CMIU_CMIUUESA_ERRCOUNT_SHIFT             (4U)
#define CMIU_CMIUUESA_ERRCOUNT_WIDTH             (8U)
#define CMIU_CMIUUESA_ERRCOUNT(x)                (((uint32_t)(((uint32_t)(x)) << CMIU_CMIUUESA_ERRCOUNT_SHIFT)) & CMIU_CMIUUESA_ERRCOUNT_MASK)
#define CMIU_CMIUUESA_ERRTYPE_MASK               (0xF000U)
#define CMIU_CMIUUESA_ERRTYPE_SHIFT              (12U)
#define CMIU_CMIUUESA_ERRTYPE_WIDTH              (4U)
#define CMIU_CMIUUESA_ERRTYPE(x)                 (((uint32_t)(((uint32_t)(x)) << CMIU_CMIUUESA_ERRTYPE_SHIFT)) & CMIU_CMIUUESA_ERRTYPE_MASK)
#define CMIU_CMIUUESA_ERRINFO_MASK               (0xFF0000U)
#define CMIU_CMIUUESA_ERRINFO_SHIFT              (16U)
#define CMIU_CMIUUESA_ERRINFO_WIDTH              (8U)
#define CMIU_CMIUUESA_ERRINFO(x)                 (((uint32_t)(((uint32_t)(x)) << CMIU_CMIUUESA_ERRINFO_SHIFT)) & CMIU_CMIUUESA_ERRINFO_MASK)
/*! @} */

/*! @name CMIUID - CMIU Identification Register */
/*! @{ */
#define CMIU_CMIUID_IMPLVER_MASK                 (0xFFU)
#define CMIU_CMIUID_IMPLVER_SHIFT                (0U)
#define CMIU_CMIUID_IMPLVER_WIDTH                (8U)
#define CMIU_CMIUID_IMPLVER(x)                   (((uint32_t)(((uint32_t)(x)) << CMIU_CMIUID_IMPLVER_SHIFT)) & CMIU_CMIUID_IMPLVER_MASK)
#define CMIU_CMIUID_CMIID_MASK                   (0x1F00U)
#define CMIU_CMIUID_CMIID_SHIFT                  (8U)
#define CMIU_CMIUID_CMIID_WIDTH                  (5U)
#define CMIU_CMIUID_CMIID(x)                     (((uint32_t)(((uint32_t)(x)) << CMIU_CMIUID_CMIID_SHIFT)) & CMIU_CMIUID_CMIID_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group CMIU_Register_Masks */


/*!
 * @}
 */ /* end of group CMIU_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- CMU_FC Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup CMU_FC_Peripheral_Access_Layer CMU_FC Peripheral Access Layer
 * @{
 */

/** CMU_FC - Register Layout Typedef */
typedef struct {
  __IO uint32_t GCR;                               /**< Global Configuration Register, offset: 0x0 */
  __IO uint32_t RCCR;                              /**< Reference Count Configuration Register, offset: 0x4 */
  __IO uint32_t HTCR;                              /**< High Threshold Configuration Register, offset: 0x8 */
  __IO uint32_t LTCR;                              /**< Low Threshold Configuration Register, offset: 0xC */
  __IO uint32_t SR;                                /**< Status Register, offset: 0x10 */
  __IO uint32_t IER;                               /**< Interrupt Enable Register, offset: 0x14 */
} CMU_FC_Type, *CMU_FC_MemMapPtr;

/** Number of instances of the CMU_FC module. */
#define CMU_FC_INSTANCE_COUNT                    (27u)

/* CMU_FC - Peripheral instance base addresses */
/** Peripheral CMU_FC_0 base address */
#define CMU_FC_0_BASE                            (0x4005C000u)
/** Peripheral CMU_FC_0 base pointer */
#define CMU_FC_0                                 ((CMU_FC_Type *)CMU_FC_0_BASE)
/** Peripheral CMU_FC_5 base address */
#define CMU_FC_5_BASE                            (0x4005C0A0u)
/** Peripheral CMU_FC_5 base pointer */
#define CMU_FC_5                                 ((CMU_FC_Type *)CMU_FC_5_BASE)
/** Peripheral CMU_FC_6 base address */
#define CMU_FC_6_BASE                            (0x4005C0C0u)
/** Peripheral CMU_FC_6 base pointer */
#define CMU_FC_6                                 ((CMU_FC_Type *)CMU_FC_6_BASE)
/** Peripheral CMU_FC_7 base address */
#define CMU_FC_7_BASE                            (0x4005C0E0u)
/** Peripheral CMU_FC_7 base pointer */
#define CMU_FC_7                                 ((CMU_FC_Type *)CMU_FC_7_BASE)
/** Peripheral CMU_FC_8 base address */
#define CMU_FC_8_BASE                            (0x4005C100u)
/** Peripheral CMU_FC_8 base pointer */
#define CMU_FC_8                                 ((CMU_FC_Type *)CMU_FC_8_BASE)
/** Peripheral CMU_FC_9 base address */
#define CMU_FC_9_BASE                            (0x4005C120u)
/** Peripheral CMU_FC_9 base pointer */
#define CMU_FC_9                                 ((CMU_FC_Type *)CMU_FC_9_BASE)
/** Peripheral CMU_FC_10 base address */
#define CMU_FC_10_BASE                           (0x4005C140u)
/** Peripheral CMU_FC_10 base pointer */
#define CMU_FC_10                                ((CMU_FC_Type *)CMU_FC_10_BASE)
/** Peripheral CMU_FC_11 base address */
#define CMU_FC_11_BASE                           (0x4005C160u)
/** Peripheral CMU_FC_11 base pointer */
#define CMU_FC_11                                ((CMU_FC_Type *)CMU_FC_11_BASE)
/** Peripheral CMU_FC_12 base address */
#define CMU_FC_12_BASE                           (0x4005C180u)
/** Peripheral CMU_FC_12 base pointer */
#define CMU_FC_12                                ((CMU_FC_Type *)CMU_FC_12_BASE)
/** Peripheral CMU_FC_13 base address */
#define CMU_FC_13_BASE                           (0x4005C1A0u)
/** Peripheral CMU_FC_13 base pointer */
#define CMU_FC_13                                ((CMU_FC_Type *)CMU_FC_13_BASE)
/** Peripheral CMU_FC_14 base address */
#define CMU_FC_14_BASE                           (0x4005C1C0u)
/** Peripheral CMU_FC_14 base pointer */
#define CMU_FC_14                                ((CMU_FC_Type *)CMU_FC_14_BASE)
/** Peripheral CMU_FC_15 base address */
#define CMU_FC_15_BASE                           (0x4005C1E0u)
/** Peripheral CMU_FC_15 base pointer */
#define CMU_FC_15                                ((CMU_FC_Type *)CMU_FC_15_BASE)
/** Peripheral CMU_FC_16 base address */
#define CMU_FC_16_BASE                           (0x4005C200u)
/** Peripheral CMU_FC_16 base pointer */
#define CMU_FC_16                                ((CMU_FC_Type *)CMU_FC_16_BASE)
/** Peripheral CMU_FC_17 base address */
#define CMU_FC_17_BASE                           (0x4005C220u)
/** Peripheral CMU_FC_17 base pointer */
#define CMU_FC_17                                ((CMU_FC_Type *)CMU_FC_17_BASE)
/** Peripheral CMU_FC_18 base address */
#define CMU_FC_18_BASE                           (0x4005C240u)
/** Peripheral CMU_FC_18 base pointer */
#define CMU_FC_18                                ((CMU_FC_Type *)CMU_FC_18_BASE)
/** Peripheral CMU_FC_20 base address */
#define CMU_FC_20_BASE                           (0x4005C280u)
/** Peripheral CMU_FC_20 base pointer */
#define CMU_FC_20                                ((CMU_FC_Type *)CMU_FC_20_BASE)
/** Peripheral CMU_FC_21 base address */
#define CMU_FC_21_BASE                           (0x4005C2A0u)
/** Peripheral CMU_FC_21 base pointer */
#define CMU_FC_21                                ((CMU_FC_Type *)CMU_FC_21_BASE)
/** Peripheral CMU_FC_22 base address */
#define CMU_FC_22_BASE                           (0x4005C2C0u)
/** Peripheral CMU_FC_22 base pointer */
#define CMU_FC_22                                ((CMU_FC_Type *)CMU_FC_22_BASE)
/** Peripheral CMU_FC_27 base address */
#define CMU_FC_27_BASE                           (0x4005C360u)
/** Peripheral CMU_FC_27 base pointer */
#define CMU_FC_27                                ((CMU_FC_Type *)CMU_FC_27_BASE)
/** Peripheral CMU_FC_28 base address */
#define CMU_FC_28_BASE                           (0x4005C380u)
/** Peripheral CMU_FC_28 base pointer */
#define CMU_FC_28                                ((CMU_FC_Type *)CMU_FC_28_BASE)
/** Peripheral CMU_FC_39 base address */
#define CMU_FC_39_BASE                           (0x4005C4E0u)
/** Peripheral CMU_FC_39 base pointer */
#define CMU_FC_39                                ((CMU_FC_Type *)CMU_FC_39_BASE)
/** Peripheral CMU_FC_46 base address */
#define CMU_FC_46_BASE                           (0x4005C5C0u)
/** Peripheral CMU_FC_46 base pointer */
#define CMU_FC_46                                ((CMU_FC_Type *)CMU_FC_46_BASE)
/** Peripheral CMU_FC_47 base address */
#define CMU_FC_47_BASE                           (0x4005C5E0u)
/** Peripheral CMU_FC_47 base pointer */
#define CMU_FC_47                                ((CMU_FC_Type *)CMU_FC_47_BASE)
/** Peripheral CMU_FC_48 base address */
#define CMU_FC_48_BASE                           (0x4005C600u)
/** Peripheral CMU_FC_48 base pointer */
#define CMU_FC_48                                ((CMU_FC_Type *)CMU_FC_48_BASE)
/** Peripheral CMU_FC_49 base address */
#define CMU_FC_49_BASE                           (0x4005C620u)
/** Peripheral CMU_FC_49 base pointer */
#define CMU_FC_49                                ((CMU_FC_Type *)CMU_FC_49_BASE)
/** Peripheral CMU_FC_50 base address */
#define CMU_FC_50_BASE                           (0x4005C640u)
/** Peripheral CMU_FC_50 base pointer */
#define CMU_FC_50                                ((CMU_FC_Type *)CMU_FC_50_BASE)
/** Peripheral CMU_FC_51 base address */
#define CMU_FC_51_BASE                           (0x4005C660u)
/** Peripheral CMU_FC_51 base pointer */
#define CMU_FC_51                                ((CMU_FC_Type *)CMU_FC_51_BASE)
/** Array initializer of CMU_FC peripheral base addresses */
#define CMU_FC_BASE_ADDRS                        { CMU_FC_0_BASE, CMU_FC_5_BASE, CMU_FC_6_BASE, CMU_FC_7_BASE, CMU_FC_8_BASE, CMU_FC_9_BASE, CMU_FC_10_BASE, CMU_FC_11_BASE, CMU_FC_12_BASE, CMU_FC_13_BASE, CMU_FC_14_BASE, CMU_FC_15_BASE, CMU_FC_16_BASE, CMU_FC_17_BASE, CMU_FC_18_BASE, CMU_FC_20_BASE, CMU_FC_21_BASE, CMU_FC_22_BASE, CMU_FC_27_BASE, CMU_FC_28_BASE, CMU_FC_39_BASE, CMU_FC_46_BASE, CMU_FC_47_BASE, CMU_FC_48_BASE, CMU_FC_49_BASE, CMU_FC_50_BASE, CMU_FC_51_BASE }
/** Array initializer of CMU_FC peripheral base pointers */
#define CMU_FC_BASE_PTRS                         { CMU_FC_0, CMU_FC_5, CMU_FC_6, CMU_FC_7, CMU_FC_8, CMU_FC_9, CMU_FC_10, CMU_FC_11, CMU_FC_12, CMU_FC_13, CMU_FC_14, CMU_FC_15, CMU_FC_16, CMU_FC_17, CMU_FC_18, CMU_FC_20, CMU_FC_21, CMU_FC_22, CMU_FC_27, CMU_FC_28, CMU_FC_39, CMU_FC_46, CMU_FC_47, CMU_FC_48, CMU_FC_49, CMU_FC_50, CMU_FC_51 }

/* ----------------------------------------------------------------------------
   -- CMU_FC Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup CMU_FC_Register_Masks CMU_FC Register Masks
 * @{
 */

/*! @name GCR - Global Configuration Register */
/*! @{ */
#define CMU_FC_GCR_FCE_MASK                      (0x1U)
#define CMU_FC_GCR_FCE_SHIFT                     (0U)
#define CMU_FC_GCR_FCE_WIDTH                     (1U)
#define CMU_FC_GCR_FCE(x)                        (((uint32_t)(((uint32_t)(x)) << CMU_FC_GCR_FCE_SHIFT)) & CMU_FC_GCR_FCE_MASK)
/*! @} */

/*! @name RCCR - Reference Count Configuration Register */
/*! @{ */
#define CMU_FC_RCCR_REF_CNT_MASK                 (0xFFFFU)
#define CMU_FC_RCCR_REF_CNT_SHIFT                (0U)
#define CMU_FC_RCCR_REF_CNT_WIDTH                (16U)
#define CMU_FC_RCCR_REF_CNT(x)                   (((uint32_t)(((uint32_t)(x)) << CMU_FC_RCCR_REF_CNT_SHIFT)) & CMU_FC_RCCR_REF_CNT_MASK)
/*! @} */

/*! @name HTCR - High Threshold Configuration Register */
/*! @{ */
#define CMU_FC_HTCR_HFREF_MASK                   (0xFFFFFFU)
#define CMU_FC_HTCR_HFREF_SHIFT                  (0U)
#define CMU_FC_HTCR_HFREF_WIDTH                  (24U)
#define CMU_FC_HTCR_HFREF(x)                     (((uint32_t)(((uint32_t)(x)) << CMU_FC_HTCR_HFREF_SHIFT)) & CMU_FC_HTCR_HFREF_MASK)
/*! @} */

/*! @name LTCR - Low Threshold Configuration Register */
/*! @{ */
#define CMU_FC_LTCR_LFREF_MASK                   (0xFFFFFFU)
#define CMU_FC_LTCR_LFREF_SHIFT                  (0U)
#define CMU_FC_LTCR_LFREF_WIDTH                  (24U)
#define CMU_FC_LTCR_LFREF(x)                     (((uint32_t)(((uint32_t)(x)) << CMU_FC_LTCR_LFREF_SHIFT)) & CMU_FC_LTCR_LFREF_MASK)
/*! @} */

/*! @name SR - Status Register */
/*! @{ */
#define CMU_FC_SR_FLL_MASK                       (0x1U)
#define CMU_FC_SR_FLL_SHIFT                      (0U)
#define CMU_FC_SR_FLL_WIDTH                      (1U)
#define CMU_FC_SR_FLL(x)                         (((uint32_t)(((uint32_t)(x)) << CMU_FC_SR_FLL_SHIFT)) & CMU_FC_SR_FLL_MASK)
#define CMU_FC_SR_FHH_MASK                       (0x2U)
#define CMU_FC_SR_FHH_SHIFT                      (1U)
#define CMU_FC_SR_FHH_WIDTH                      (1U)
#define CMU_FC_SR_FHH(x)                         (((uint32_t)(((uint32_t)(x)) << CMU_FC_SR_FHH_SHIFT)) & CMU_FC_SR_FHH_MASK)
#define CMU_FC_SR_STATE_MASK                     (0xCU)
#define CMU_FC_SR_STATE_SHIFT                    (2U)
#define CMU_FC_SR_STATE_WIDTH                    (2U)
#define CMU_FC_SR_STATE(x)                       (((uint32_t)(((uint32_t)(x)) << CMU_FC_SR_STATE_SHIFT)) & CMU_FC_SR_STATE_MASK)
#define CMU_FC_SR_RS_MASK                        (0x10U)
#define CMU_FC_SR_RS_SHIFT                       (4U)
#define CMU_FC_SR_RS_WIDTH                       (1U)
#define CMU_FC_SR_RS(x)                          (((uint32_t)(((uint32_t)(x)) << CMU_FC_SR_RS_SHIFT)) & CMU_FC_SR_RS_MASK)
/*! @} */

/*! @name IER - Interrupt Enable Register */
/*! @{ */
#define CMU_FC_IER_FLLIE_MASK                    (0x1U)
#define CMU_FC_IER_FLLIE_SHIFT                   (0U)
#define CMU_FC_IER_FLLIE_WIDTH                   (1U)
#define CMU_FC_IER_FLLIE(x)                      (((uint32_t)(((uint32_t)(x)) << CMU_FC_IER_FLLIE_SHIFT)) & CMU_FC_IER_FLLIE_MASK)
#define CMU_FC_IER_FHHIE_MASK                    (0x2U)
#define CMU_FC_IER_FHHIE_SHIFT                   (1U)
#define CMU_FC_IER_FHHIE_WIDTH                   (1U)
#define CMU_FC_IER_FHHIE(x)                      (((uint32_t)(((uint32_t)(x)) << CMU_FC_IER_FHHIE_SHIFT)) & CMU_FC_IER_FHHIE_MASK)
#define CMU_FC_IER_FLLAIE_MASK                   (0x4U)
#define CMU_FC_IER_FLLAIE_SHIFT                  (2U)
#define CMU_FC_IER_FLLAIE_WIDTH                  (1U)
#define CMU_FC_IER_FLLAIE(x)                     (((uint32_t)(((uint32_t)(x)) << CMU_FC_IER_FLLAIE_SHIFT)) & CMU_FC_IER_FLLAIE_MASK)
#define CMU_FC_IER_FHHAIE_MASK                   (0x8U)
#define CMU_FC_IER_FHHAIE_SHIFT                  (3U)
#define CMU_FC_IER_FHHAIE_WIDTH                  (1U)
#define CMU_FC_IER_FHHAIE(x)                     (((uint32_t)(((uint32_t)(x)) << CMU_FC_IER_FHHAIE_SHIFT)) & CMU_FC_IER_FHHAIE_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group CMU_FC_Register_Masks */


/*!
 * @}
 */ /* end of group CMU_FC_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- CMU_FM Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup CMU_FM_Peripheral_Access_Layer CMU_FM Peripheral Access Layer
 * @{
 */

/** CMU_FM - Register Layout Typedef */
typedef struct {
  __IO uint32_t GCR;                               /**< CMU Frequency Meter Global Configuration Register, offset: 0x0 */
  __IO uint32_t RCCR;                              /**< CMU Frequency Meter Reference Count Configuration Register, offset: 0x4 */
  __IO uint32_t SR;                                /**< CMU Frequency Meter Status Register, offset: 0x8 */
} CMU_FM_Type, *CMU_FM_MemMapPtr;

/** Number of instances of the CMU_FM module. */
#define CMU_FM_INSTANCE_COUNT                    (4u)

/* CMU_FM - Peripheral instance base addresses */
/** Peripheral CMU_FM_1 base address */
#define CMU_FM_1_BASE                            (0x4005C020u)
/** Peripheral CMU_FM_1 base pointer */
#define CMU_FM_1                                 ((CMU_FM_Type *)CMU_FM_1_BASE)
/** Peripheral CMU_FM_2 base address */
#define CMU_FM_2_BASE                            (0x4005C040u)
/** Peripheral CMU_FM_2 base pointer */
#define CMU_FM_2                                 ((CMU_FM_Type *)CMU_FM_2_BASE)
/** Peripheral CMU_FM_3 base address */
#define CMU_FM_3_BASE                            (0x4005C060u)
/** Peripheral CMU_FM_3 base pointer */
#define CMU_FM_3                                 ((CMU_FM_Type *)CMU_FM_3_BASE)
/** Peripheral CMU_FM_4 base address */
#define CMU_FM_4_BASE                            (0x4005C080u)
/** Peripheral CMU_FM_4 base pointer */
#define CMU_FM_4                                 ((CMU_FM_Type *)CMU_FM_4_BASE)
/** Array initializer of CMU_FM peripheral base addresses */
#define CMU_FM_BASE_ADDRS                        { CMU_FM_1_BASE, CMU_FM_2_BASE, CMU_FM_3_BASE, CMU_FM_4_BASE }
/** Array initializer of CMU_FM peripheral base pointers */
#define CMU_FM_BASE_PTRS                         { CMU_FM_1, CMU_FM_2, CMU_FM_3, CMU_FM_4 }

/* ----------------------------------------------------------------------------
   -- CMU_FM Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup CMU_FM_Register_Masks CMU_FM Register Masks
 * @{
 */

/*! @name GCR - CMU Frequency Meter Global Configuration Register */
/*! @{ */
#define CMU_FM_GCR_FME_MASK                      (0x1U)
#define CMU_FM_GCR_FME_SHIFT                     (0U)
#define CMU_FM_GCR_FME_WIDTH                     (1U)
#define CMU_FM_GCR_FME(x)                        (((uint32_t)(((uint32_t)(x)) << CMU_FM_GCR_FME_SHIFT)) & CMU_FM_GCR_FME_MASK)
/*! @} */

/*! @name RCCR - CMU Frequency Meter Reference Count Configuration Register */
/*! @{ */
#define CMU_FM_RCCR_REF_CNT_MASK                 (0xFFFFU)
#define CMU_FM_RCCR_REF_CNT_SHIFT                (0U)
#define CMU_FM_RCCR_REF_CNT_WIDTH                (16U)
#define CMU_FM_RCCR_REF_CNT(x)                   (((uint32_t)(((uint32_t)(x)) << CMU_FM_RCCR_REF_CNT_SHIFT)) & CMU_FM_RCCR_REF_CNT_MASK)
/*! @} */

/*! @name SR - CMU Frequency Meter Status Register */
/*! @{ */
#define CMU_FM_SR_FMC_MASK                       (0x1U)
#define CMU_FM_SR_FMC_SHIFT                      (0U)
#define CMU_FM_SR_FMC_WIDTH                      (1U)
#define CMU_FM_SR_FMC(x)                         (((uint32_t)(((uint32_t)(x)) << CMU_FM_SR_FMC_SHIFT)) & CMU_FM_SR_FMC_MASK)
#define CMU_FM_SR_FMTO_MASK                      (0x2U)
#define CMU_FM_SR_FMTO_SHIFT                     (1U)
#define CMU_FM_SR_FMTO_WIDTH                     (1U)
#define CMU_FM_SR_FMTO(x)                        (((uint32_t)(((uint32_t)(x)) << CMU_FM_SR_FMTO_SHIFT)) & CMU_FM_SR_FMTO_MASK)
#define CMU_FM_SR_STATE_MASK                     (0xCU)
#define CMU_FM_SR_STATE_SHIFT                    (2U)
#define CMU_FM_SR_STATE_WIDTH                    (2U)
#define CMU_FM_SR_STATE(x)                       (((uint32_t)(((uint32_t)(x)) << CMU_FM_SR_STATE_SHIFT)) & CMU_FM_SR_STATE_MASK)
#define CMU_FM_SR_RS_MASK                        (0x10U)
#define CMU_FM_SR_RS_SHIFT                       (4U)
#define CMU_FM_SR_RS_WIDTH                       (1U)
#define CMU_FM_SR_RS(x)                          (((uint32_t)(((uint32_t)(x)) << CMU_FM_SR_RS_SHIFT)) & CMU_FM_SR_RS_MASK)
#define CMU_FM_SR_MET_CNT_MASK                   (0xFFFFFF00U)
#define CMU_FM_SR_MET_CNT_SHIFT                  (8U)
#define CMU_FM_SR_MET_CNT_WIDTH                  (24U)
#define CMU_FM_SR_MET_CNT(x)                     (((uint32_t)(((uint32_t)(x)) << CMU_FM_SR_MET_CNT_SHIFT)) & CMU_FM_SR_MET_CNT_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group CMU_FM_Register_Masks */


/*!
 * @}
 */ /* end of group CMU_FM_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- CRC_0 Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup CRC_0_Peripheral_Access_Layer CRC_0 Peripheral Access Layer
 * @{
 */

/** CRC_0 - Size of Registers Arrays */
#define CRC_0_CHANNEL_COUNT                       3u

/** CRC_0 - Register Layout Typedef */
typedef struct {
  struct {                                         /* offset: 0x0, array step: 0x10 */
    __IO uint32_t CFG;                               /**< Configuration Register, array offset: 0x0, array step: 0x10 */
    __IO uint32_t INP;                               /**< Input Register, array offset: 0x4, array step: 0x10 */
    __IO uint32_t CSTAT;                             /**< Current Status Register, array offset: 0x8, array step: 0x10 */
    __I  uint32_t OUTP;                              /**< Output Register, array offset: 0xC, array step: 0x10 */
  } CHANNEL[CRC_0_CHANNEL_COUNT];
} CRC_0_Type, *CRC_0_MemMapPtr;

/** Number of instances of the CRC_0 module. */
#define CRC_0_INSTANCE_COUNT                     (1u)

/* CRC_0 - Peripheral instance base addresses */
/** Peripheral CRC_0 base address */
#define CRC_0_BASE                               (0x40190000u)
/** Peripheral CRC_0 base pointer */
#define CRC_0                                    ((CRC_0_Type *)CRC_0_BASE)
/** Array initializer of CRC_0 peripheral base addresses */
#define CRC_0_BASE_ADDRS                         { CRC_0_BASE }
/** Array initializer of CRC_0 peripheral base pointers */
#define CRC_0_BASE_PTRS                          { CRC_0 }

/* ----------------------------------------------------------------------------
   -- CRC_0 Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup CRC_0_Register_Masks CRC_0 Register Masks
 * @{
 */

/*! @name CFG - Configuration Register */
/*! @{ */
#define CRC_0_CFG_INV_MASK                       (0x1U)
#define CRC_0_CFG_INV_SHIFT                      (0U)
#define CRC_0_CFG_INV_WIDTH                      (1U)
#define CRC_0_CFG_INV(x)                         (((uint32_t)(((uint32_t)(x)) << CRC_0_CFG_INV_SHIFT)) & CRC_0_CFG_INV_MASK)
#define CRC_0_CFG_SWAP_MASK                      (0x2U)
#define CRC_0_CFG_SWAP_SHIFT                     (1U)
#define CRC_0_CFG_SWAP_WIDTH                     (1U)
#define CRC_0_CFG_SWAP(x)                        (((uint32_t)(((uint32_t)(x)) << CRC_0_CFG_SWAP_SHIFT)) & CRC_0_CFG_SWAP_MASK)
#define CRC_0_CFG_POLYG_MASK                     (0xCU)
#define CRC_0_CFG_POLYG_SHIFT                    (2U)
#define CRC_0_CFG_POLYG_WIDTH                    (2U)
#define CRC_0_CFG_POLYG(x)                       (((uint32_t)(((uint32_t)(x)) << CRC_0_CFG_POLYG_SHIFT)) & CRC_0_CFG_POLYG_MASK)
#define CRC_0_CFG_SWAP_BITWISE_MASK              (0x10U)
#define CRC_0_CFG_SWAP_BITWISE_SHIFT             (4U)
#define CRC_0_CFG_SWAP_BITWISE_WIDTH             (1U)
#define CRC_0_CFG_SWAP_BITWISE(x)                (((uint32_t)(((uint32_t)(x)) << CRC_0_CFG_SWAP_BITWISE_SHIFT)) & CRC_0_CFG_SWAP_BITWISE_MASK)
#define CRC_0_CFG_SWAP_BYTEWISE_MASK             (0x20U)
#define CRC_0_CFG_SWAP_BYTEWISE_SHIFT            (5U)
#define CRC_0_CFG_SWAP_BYTEWISE_WIDTH            (1U)
#define CRC_0_CFG_SWAP_BYTEWISE(x)               (((uint32_t)(((uint32_t)(x)) << CRC_0_CFG_SWAP_BYTEWISE_SHIFT)) & CRC_0_CFG_SWAP_BYTEWISE_MASK)
/*! @} */

/*! @name INP - Input Register */
/*! @{ */
#define CRC_0_INP_INP_MASK                       (0xFFFFFFFFU)
#define CRC_0_INP_INP_SHIFT                      (0U)
#define CRC_0_INP_INP_WIDTH                      (32U)
#define CRC_0_INP_INP(x)                         (((uint32_t)(((uint32_t)(x)) << CRC_0_INP_INP_SHIFT)) & CRC_0_INP_INP_MASK)
/*! @} */

/*! @name CSTAT - Current Status Register */
/*! @{ */
#define CRC_0_CSTAT_CSTAT_MASK                   (0xFFFFFFFFU)
#define CRC_0_CSTAT_CSTAT_SHIFT                  (0U)
#define CRC_0_CSTAT_CSTAT_WIDTH                  (32U)
#define CRC_0_CSTAT_CSTAT(x)                     (((uint32_t)(((uint32_t)(x)) << CRC_0_CSTAT_CSTAT_SHIFT)) & CRC_0_CSTAT_CSTAT_MASK)
/*! @} */

/*! @name OUTP - Output Register */
/*! @{ */
#define CRC_0_OUTP_OUTP_MASK                     (0xFFFFFFFFU)
#define CRC_0_OUTP_OUTP_SHIFT                    (0U)
#define CRC_0_OUTP_OUTP_WIDTH                    (32U)
#define CRC_0_OUTP_OUTP(x)                       (((uint32_t)(((uint32_t)(x)) << CRC_0_OUTP_OUTP_SHIFT)) & CRC_0_OUTP_OUTP_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group CRC_0_Register_Masks */


/*!
 * @}
 */ /* end of group CRC_0_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- CSR Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup CSR_Peripheral_Access_Layer CSR Peripheral Access Layer
 * @{
 */

/** CSR - Size of Registers Arrays */
#define CSR_CSSFIDR_COUNT                         32u

/** CSR - Register Layout Typedef */
typedef struct {
  uint8_t RESERVED_0[64];
  __IO uint32_t CSADSE0;                           /**< Coherent Subsystem ACE DVM Snoop Enable, offset: 0x40 */
  uint8_t RESERVED_1[12];
  __I  uint32_t CSADSA;                            /**< Coherent Subsystem ACE DVM Snoop Activity, offset: 0x50 */
  uint8_t RESERVED_2[172];
  __I  uint32_t CSCEIS0;                           /**< Coherent Subsystem Correctable Error Interrupt Status, offset: 0x100 */
  uint8_t RESERVED_3[8];
  __I  uint32_t CSCEIS3;                           /**< Coherent Subsystem Correctable Error Interrupt Status, offset: 0x10C */
  __I  uint32_t CSCEIS4;                           /**< Coherent Subsystem Correctable Error Interrupt Status, offset: 0x110 */
  uint8_t RESERVED_4[4];
  __I  uint32_t CSCEIS6;                           /**< Coherent Subsystem Correctable Error Interrupt Status, offset: 0x118 */
  uint8_t RESERVED_5[36];
  __I  uint32_t CSUEIS0;                           /**< Coherent Subsystem Uncorrectable Error Interrupt Status, offset: 0x140 */
  uint8_t RESERVED_6[8];
  __I  uint32_t CSUEIS3;                           /**< Coherent Subsystem Uncorrectable Error Interrupt Status, offset: 0x14C */
  __I  uint32_t CSUEIS4;                           /**< Coherent Subsystem Uncorrectable Error Interrupt Status, offset: 0x150 */
  uint8_t RESERVED_7[4];
  __I  uint32_t CSUEIS6;                           /**< Coherent Subsystem Uncorrectable Error Interrupt Status, offset: 0x158 */
  uint8_t RESERVED_8[3492];
  __I  uint32_t CSSFIDR[CSR_CSSFIDR_COUNT];        /**< Coherent Subsystem Snoop Filter Identification, array offset: 0xF00, array step: 0x4 */
  uint8_t RESERVED_9[120];
  __I  uint32_t CSUID;                             /**< Coherent Subsystem Unit Identification, offset: 0xFF8 */
  __I  uint32_t CSID;                              /**< Coherent Subsystem Identification, offset: 0xFFC */
} CSR_Type, *CSR_MemMapPtr;

/** Number of instances of the CSR module. */
#define CSR_INSTANCE_COUNT                       (1u)

/* CSR - Peripheral instance base addresses */
/** Peripheral CSR base address */
#define CSR_0_BASE                               (0x504FF000u)
/** Peripheral CSR base pointer */
#define CSR_0                                    ((CSR_Type *)CSR_0_BASE)
/** Array initializer of CSR peripheral base addresses */
#define CSR_BASE_ADDRS                           { CSR_0_BASE }
/** Array initializer of CSR peripheral base pointers */
#define CSR_BASE_PTRS                            { CSR_0 }

/* ----------------------------------------------------------------------------
   -- CSR Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup CSR_Register_Masks CSR Register Masks
 * @{
 */

/*! @name CSADSE0 - Coherent Subsystem ACE DVM Snoop Enable */
/*! @{ */
#define CSR_CSADSE0_DVMSNPEN0_MASK               (0x1U)
#define CSR_CSADSE0_DVMSNPEN0_SHIFT              (0U)
#define CSR_CSADSE0_DVMSNPEN0_WIDTH              (1U)
#define CSR_CSADSE0_DVMSNPEN0(x)                 (((uint32_t)(((uint32_t)(x)) << CSR_CSADSE0_DVMSNPEN0_SHIFT)) & CSR_CSADSE0_DVMSNPEN0_MASK)
#define CSR_CSADSE0_DVMSNPEN1_MASK               (0x2U)
#define CSR_CSADSE0_DVMSNPEN1_SHIFT              (1U)
#define CSR_CSADSE0_DVMSNPEN1_WIDTH              (1U)
#define CSR_CSADSE0_DVMSNPEN1(x)                 (((uint32_t)(((uint32_t)(x)) << CSR_CSADSE0_DVMSNPEN1_SHIFT)) & CSR_CSADSE0_DVMSNPEN1_MASK)
/*! @} */

/*! @name CSADSA - Coherent Subsystem ACE DVM Snoop Activity */
/*! @{ */
#define CSR_CSADSA_DVMSNPACTV0_MASK              (0x1U)
#define CSR_CSADSA_DVMSNPACTV0_SHIFT             (0U)
#define CSR_CSADSA_DVMSNPACTV0_WIDTH             (1U)
#define CSR_CSADSA_DVMSNPACTV0(x)                (((uint32_t)(((uint32_t)(x)) << CSR_CSADSA_DVMSNPACTV0_SHIFT)) & CSR_CSADSA_DVMSNPACTV0_MASK)
#define CSR_CSADSA_DVMSNPACTV1_MASK              (0x2U)
#define CSR_CSADSA_DVMSNPACTV1_SHIFT             (1U)
#define CSR_CSADSA_DVMSNPACTV1_WIDTH             (1U)
#define CSR_CSADSA_DVMSNPACTV1(x)                (((uint32_t)(((uint32_t)(x)) << CSR_CSADSA_DVMSNPACTV1_SHIFT)) & CSR_CSADSA_DVMSNPACTV1_MASK)
/*! @} */

/*! @name CSCEIS0 - Coherent Subsystem Correctable Error Interrupt Status */
/*! @{ */
#define CSR_CSCEIS0_ERRINTVLD0_MASK              (0x1U)
#define CSR_CSCEIS0_ERRINTVLD0_SHIFT             (0U)
#define CSR_CSCEIS0_ERRINTVLD0_WIDTH             (1U)
#define CSR_CSCEIS0_ERRINTVLD0(x)                (((uint32_t)(((uint32_t)(x)) << CSR_CSCEIS0_ERRINTVLD0_SHIFT)) & CSR_CSCEIS0_ERRINTVLD0_MASK)
#define CSR_CSCEIS0_ERRINTVLD1_MASK              (0x2U)
#define CSR_CSCEIS0_ERRINTVLD1_SHIFT             (1U)
#define CSR_CSCEIS0_ERRINTVLD1_WIDTH             (1U)
#define CSR_CSCEIS0_ERRINTVLD1(x)                (((uint32_t)(((uint32_t)(x)) << CSR_CSCEIS0_ERRINTVLD1_SHIFT)) & CSR_CSCEIS0_ERRINTVLD1_MASK)
/*! @} */

/*! @name CSCEIS3 - Coherent Subsystem Correctable Error Interrupt Status */
/*! @{ */
#define CSR_CSCEIS3_ERRINTVLD0_MASK              (0x1U)
#define CSR_CSCEIS3_ERRINTVLD0_SHIFT             (0U)
#define CSR_CSCEIS3_ERRINTVLD0_WIDTH             (1U)
#define CSR_CSCEIS3_ERRINTVLD0(x)                (((uint32_t)(((uint32_t)(x)) << CSR_CSCEIS3_ERRINTVLD0_SHIFT)) & CSR_CSCEIS3_ERRINTVLD0_MASK)
#define CSR_CSCEIS3_ERRINTVLD1_MASK              (0x2U)
#define CSR_CSCEIS3_ERRINTVLD1_SHIFT             (1U)
#define CSR_CSCEIS3_ERRINTVLD1_WIDTH             (1U)
#define CSR_CSCEIS3_ERRINTVLD1(x)                (((uint32_t)(((uint32_t)(x)) << CSR_CSCEIS3_ERRINTVLD1_SHIFT)) & CSR_CSCEIS3_ERRINTVLD1_MASK)
/*! @} */

/*! @name CSCEIS4 - Coherent Subsystem Correctable Error Interrupt Status */
/*! @{ */
#define CSR_CSCEIS4_ERRINTVLD0_MASK              (0x1U)
#define CSR_CSCEIS4_ERRINTVLD0_SHIFT             (0U)
#define CSR_CSCEIS4_ERRINTVLD0_WIDTH             (1U)
#define CSR_CSCEIS4_ERRINTVLD0(x)                (((uint32_t)(((uint32_t)(x)) << CSR_CSCEIS4_ERRINTVLD0_SHIFT)) & CSR_CSCEIS4_ERRINTVLD0_MASK)
/*! @} */

/*! @name CSCEIS6 - Coherent Subsystem Correctable Error Interrupt Status */
/*! @{ */
#define CSR_CSCEIS6_ERRINTVLD0_MASK              (0x1U)
#define CSR_CSCEIS6_ERRINTVLD0_SHIFT             (0U)
#define CSR_CSCEIS6_ERRINTVLD0_WIDTH             (1U)
#define CSR_CSCEIS6_ERRINTVLD0(x)                (((uint32_t)(((uint32_t)(x)) << CSR_CSCEIS6_ERRINTVLD0_SHIFT)) & CSR_CSCEIS6_ERRINTVLD0_MASK)
/*! @} */

/*! @name CSUEIS0 - Coherent Subsystem Uncorrectable Error Interrupt Status */
/*! @{ */
#define CSR_CSUEIS0_ERRINTVLD0_MASK              (0x1U)
#define CSR_CSUEIS0_ERRINTVLD0_SHIFT             (0U)
#define CSR_CSUEIS0_ERRINTVLD0_WIDTH             (1U)
#define CSR_CSUEIS0_ERRINTVLD0(x)                (((uint32_t)(((uint32_t)(x)) << CSR_CSUEIS0_ERRINTVLD0_SHIFT)) & CSR_CSUEIS0_ERRINTVLD0_MASK)
#define CSR_CSUEIS0_ERRINTVLD1_MASK              (0x2U)
#define CSR_CSUEIS0_ERRINTVLD1_SHIFT             (1U)
#define CSR_CSUEIS0_ERRINTVLD1_WIDTH             (1U)
#define CSR_CSUEIS0_ERRINTVLD1(x)                (((uint32_t)(((uint32_t)(x)) << CSR_CSUEIS0_ERRINTVLD1_SHIFT)) & CSR_CSUEIS0_ERRINTVLD1_MASK)
/*! @} */

/*! @name CSUEIS3 - Coherent Subsystem Uncorrectable Error Interrupt Status */
/*! @{ */
#define CSR_CSUEIS3_ERRINTVLD0_MASK              (0x1U)
#define CSR_CSUEIS3_ERRINTVLD0_SHIFT             (0U)
#define CSR_CSUEIS3_ERRINTVLD0_WIDTH             (1U)
#define CSR_CSUEIS3_ERRINTVLD0(x)                (((uint32_t)(((uint32_t)(x)) << CSR_CSUEIS3_ERRINTVLD0_SHIFT)) & CSR_CSUEIS3_ERRINTVLD0_MASK)
#define CSR_CSUEIS3_ERRINTVLD1_MASK              (0x2U)
#define CSR_CSUEIS3_ERRINTVLD1_SHIFT             (1U)
#define CSR_CSUEIS3_ERRINTVLD1_WIDTH             (1U)
#define CSR_CSUEIS3_ERRINTVLD1(x)                (((uint32_t)(((uint32_t)(x)) << CSR_CSUEIS3_ERRINTVLD1_SHIFT)) & CSR_CSUEIS3_ERRINTVLD1_MASK)
/*! @} */

/*! @name CSUEIS4 - Coherent Subsystem Uncorrectable Error Interrupt Status */
/*! @{ */
#define CSR_CSUEIS4_ERRINTVLD0_MASK              (0x1U)
#define CSR_CSUEIS4_ERRINTVLD0_SHIFT             (0U)
#define CSR_CSUEIS4_ERRINTVLD0_WIDTH             (1U)
#define CSR_CSUEIS4_ERRINTVLD0(x)                (((uint32_t)(((uint32_t)(x)) << CSR_CSUEIS4_ERRINTVLD0_SHIFT)) & CSR_CSUEIS4_ERRINTVLD0_MASK)
/*! @} */

/*! @name CSUEIS6 - Coherent Subsystem Uncorrectable Error Interrupt Status */
/*! @{ */
#define CSR_CSUEIS6_ERRINTVLD0_MASK              (0x1U)
#define CSR_CSUEIS6_ERRINTVLD0_SHIFT             (0U)
#define CSR_CSUEIS6_ERRINTVLD0_WIDTH             (1U)
#define CSR_CSUEIS6_ERRINTVLD0(x)                (((uint32_t)(((uint32_t)(x)) << CSR_CSUEIS6_ERRINTVLD0_SHIFT)) & CSR_CSUEIS6_ERRINTVLD0_MASK)
/*! @} */

/*! @name CSSFIDR - Coherent Subsystem Snoop Filter Identification */
/*! @{ */
#define CSR_CSSFIDR_NUMSETS_MASK                 (0xFFFFFU)
#define CSR_CSSFIDR_NUMSETS_SHIFT                (0U)
#define CSR_CSSFIDR_NUMSETS_WIDTH                (20U)
#define CSR_CSSFIDR_NUMSETS(x)                   (((uint32_t)(((uint32_t)(x)) << CSR_CSSFIDR_NUMSETS_SHIFT)) & CSR_CSSFIDR_NUMSETS_MASK)
#define CSR_CSSFIDR_NUMWAYS_MASK                 (0x3F00000U)
#define CSR_CSSFIDR_NUMWAYS_SHIFT                (20U)
#define CSR_CSSFIDR_NUMWAYS_WIDTH                (6U)
#define CSR_CSSFIDR_NUMWAYS(x)                   (((uint32_t)(((uint32_t)(x)) << CSR_CSSFIDR_NUMWAYS_SHIFT)) & CSR_CSSFIDR_NUMWAYS_MASK)
#define CSR_CSSFIDR_TYPE_MASK                    (0x1C000000U)
#define CSR_CSSFIDR_TYPE_SHIFT                   (26U)
#define CSR_CSSFIDR_TYPE_WIDTH                   (3U)
#define CSR_CSSFIDR_TYPE(x)                      (((uint32_t)(((uint32_t)(x)) << CSR_CSSFIDR_TYPE_SHIFT)) & CSR_CSSFIDR_TYPE_MASK)
/*! @} */

/*! @name CSUID - Coherent Subsystem Unit Identification */
/*! @{ */
#define CSR_CSUID_NUMCAIUS_MASK                  (0x7FU)
#define CSR_CSUID_NUMCAIUS_SHIFT                 (0U)
#define CSR_CSUID_NUMCAIUS_WIDTH                 (7U)
#define CSR_CSUID_NUMCAIUS(x)                    (((uint32_t)(((uint32_t)(x)) << CSR_CSUID_NUMCAIUS_SHIFT)) & CSR_CSUID_NUMCAIUS_MASK)
#define CSR_CSUID_NUMNCBUS_MASK                  (0x3F00U)
#define CSR_CSUID_NUMNCBUS_SHIFT                 (8U)
#define CSR_CSUID_NUMNCBUS_WIDTH                 (6U)
#define CSR_CSUID_NUMNCBUS(x)                    (((uint32_t)(((uint32_t)(x)) << CSR_CSUID_NUMNCBUS_SHIFT)) & CSR_CSUID_NUMNCBUS_MASK)
#define CSR_CSUID_NUMDIRUS_MASK                  (0x3F0000U)
#define CSR_CSUID_NUMDIRUS_SHIFT                 (16U)
#define CSR_CSUID_NUMDIRUS_WIDTH                 (6U)
#define CSR_CSUID_NUMDIRUS(x)                    (((uint32_t)(((uint32_t)(x)) << CSR_CSUID_NUMDIRUS_SHIFT)) & CSR_CSUID_NUMDIRUS_MASK)
#define CSR_CSUID_NUMCMIUS_MASK                  (0x3F000000U)
#define CSR_CSUID_NUMCMIUS_SHIFT                 (24U)
#define CSR_CSUID_NUMCMIUS_WIDTH                 (6U)
#define CSR_CSUID_NUMCMIUS(x)                    (((uint32_t)(((uint32_t)(x)) << CSR_CSUID_NUMCMIUS_SHIFT)) & CSR_CSUID_NUMCMIUS_MASK)
/*! @} */

/*! @name CSID - Coherent Subsystem Identification */
/*! @{ */
#define CSR_CSID_RELVER_MASK                     (0xFFU)
#define CSR_CSID_RELVER_SHIFT                    (0U)
#define CSR_CSID_RELVER_WIDTH                    (8U)
#define CSR_CSID_RELVER(x)                       (((uint32_t)(((uint32_t)(x)) << CSR_CSID_RELVER_SHIFT)) & CSR_CSID_RELVER_MASK)
#define CSR_CSID_DIRCLOFFSET_MASK                (0x700U)
#define CSR_CSID_DIRCLOFFSET_SHIFT               (8U)
#define CSR_CSID_DIRCLOFFSET_WIDTH               (3U)
#define CSR_CSID_DIRCLOFFSET(x)                  (((uint32_t)(((uint32_t)(x)) << CSR_CSID_DIRCLOFFSET_SHIFT)) & CSR_CSID_DIRCLOFFSET_MASK)
#define CSR_CSID_NUMSFS_MASK                     (0x7C0000U)
#define CSR_CSID_NUMSFS_SHIFT                    (18U)
#define CSR_CSID_NUMSFS_WIDTH                    (5U)
#define CSR_CSID_NUMSFS(x)                       (((uint32_t)(((uint32_t)(x)) << CSR_CSID_NUMSFS_SHIFT)) & CSR_CSID_NUMSFS_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group CSR_Register_Masks */


/*!
 * @}
 */ /* end of group CSR_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- CTU Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup CTU_Peripheral_Access_Layer CTU Peripheral Access Layer
 * @{
 */

/** CTU - Size of Registers Arrays */
#define CTU_TCR_COUNT                             8u
#define CTU_CHANNEL_COUNT                        24u
#define CTU_FR_COUNT                              4u
#define CTU_FL_COUNT                              4u

/** CTU - Register Layout Typedef */
typedef struct {
  __IO uint32_t TGSISR;                            /**< Trigger Generator Subunit Input Selection Register, offset: 0x0 */
  __IO uint16_t TGSCR;                             /**< Trigger Generator Subunit Control Register, offset: 0x4 */
  __IO uint16_t TCR[CTU_TCR_COUNT];                /**< Trigger Compare Register, array offset: 0x6, array step: 0x2 */
  __IO uint16_t TGSCCR;                            /**< TGS Counter Compare Register, offset: 0x16 */
  __IO uint16_t TGSCRR;                            /**< TGS Counter Reload Register, offset: 0x18 */
  uint8_t RESERVED_0[2];
  __IO uint32_t CLCR1;                             /**< Commands List Control Register 1, offset: 0x1C */
  __IO uint32_t CLCR2;                             /**< Commands List Control Register 2, offset: 0x20 */
  __IO uint32_t THCR1;                             /**< Trigger Handler Control Register 1, offset: 0x24 */
  __IO uint32_t THCR2;                             /**< Trigger Handler Control Register 2, offset: 0x28 */
  union {                                          /* offset: 0x2C, array step: 0x2 */
    __IO uint16_t CLR_A;                             /**< Commands List Register A for ADC single-conversion mode commands, array offset: 0x2C, array step: 0x2 */
    __IO uint16_t CLR_B;                             /**< Command List Register B for ADC dual-conversion mode commands, array offset: 0x2C, array step: 0x2 */
    __IO uint16_t CLR_C;                             /**< Command List Register C for self-test commands, array offset: 0x2C, array step: 0x2 */
  } CHANNEL[CTU_CHANNEL_COUNT];
  uint8_t RESERVED_1[16];
  __IO uint16_t FDCR;                              /**< FIFO DMA Control Register, offset: 0x6C */
  uint8_t RESERVED_2[2];
  __IO uint32_t FCR;                               /**< FIFO Control Register, offset: 0x70 */
  __IO uint32_t FTH;                               /**< FIFO Threshold Register, offset: 0x74 */
  uint8_t RESERVED_3[4];
  __IO uint32_t FST;                               /**< FIFO Status Register, offset: 0x7C */
  __I  uint32_t FR[CTU_FR_COUNT];                  /**< FIFO Right Aligned Data Register, array offset: 0x80, array step: 0x4 */
  uint8_t RESERVED_4[16];
  __I  uint32_t FL[CTU_FL_COUNT];                  /**< FIFO Signed Left Aligned Data Register, array offset: 0xA0, array step: 0x4 */
  uint8_t RESERVED_5[16];
  __IO uint16_t EFR;                               /**< Error Flag Register, offset: 0xC0 */
  __IO uint16_t IFR;                               /**< Interrupt Flag Register, offset: 0xC2 */
  __IO uint16_t IR;                                /**< Interrupt/DMA Register, offset: 0xC4 */
  __IO uint16_t COTR;                              /**< Control ON Time Register, offset: 0xC6 */
  __IO uint16_t CR;                                /**< Control Register, offset: 0xC8 */
  __IO uint16_t DFR;                               /**< Digital Filter Register, offset: 0xCA */
  __IO uint16_t EXPAR;                             /**< Expected Value A Register, offset: 0xCC */
  __IO uint16_t EXPBR;                             /**< Expected Value B Register, offset: 0xCE */
  __IO uint16_t CNTRNGR;                           /**< Counter Range Register, offset: 0xD0 */
  uint8_t RESERVED_6[2];
  __IO uint32_t LISTCSR;                           /**< List Control/Status Register, offset: 0xD4 */
} CTU_Type, *CTU_MemMapPtr;

/** Number of instances of the CTU module. */
#define CTU_INSTANCE_COUNT                       (1u)

/* CTU - Peripheral instance base addresses */
/** Peripheral CTU base address */
#define CTU_BASE                                 (0x401FC000u)
/** Peripheral CTU base pointer */
#define CTU                                      ((CTU_Type *)CTU_BASE)
/** Array initializer of CTU peripheral base addresses */
#define CTU_BASE_ADDRS                           { CTU_BASE }
/** Array initializer of CTU peripheral base pointers */
#define CTU_BASE_PTRS                            { CTU }

/* ----------------------------------------------------------------------------
   -- CTU Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup CTU_Register_Masks CTU Register Masks
 * @{
 */

/*! @name TGSISR - Trigger Generator Subunit Input Selection Register */
/*! @{ */
#define CTU_TGSISR_I0_RE_MASK                    (0x1U)
#define CTU_TGSISR_I0_RE_SHIFT                   (0U)
#define CTU_TGSISR_I0_RE_WIDTH                   (1U)
#define CTU_TGSISR_I0_RE(x)                      (((uint32_t)(((uint32_t)(x)) << CTU_TGSISR_I0_RE_SHIFT)) & CTU_TGSISR_I0_RE_MASK)
#define CTU_TGSISR_I0_FE_MASK                    (0x2U)
#define CTU_TGSISR_I0_FE_SHIFT                   (1U)
#define CTU_TGSISR_I0_FE_WIDTH                   (1U)
#define CTU_TGSISR_I0_FE(x)                      (((uint32_t)(((uint32_t)(x)) << CTU_TGSISR_I0_FE_SHIFT)) & CTU_TGSISR_I0_FE_MASK)
#define CTU_TGSISR_I1_RE_MASK                    (0x4U)
#define CTU_TGSISR_I1_RE_SHIFT                   (2U)
#define CTU_TGSISR_I1_RE_WIDTH                   (1U)
#define CTU_TGSISR_I1_RE(x)                      (((uint32_t)(((uint32_t)(x)) << CTU_TGSISR_I1_RE_SHIFT)) & CTU_TGSISR_I1_RE_MASK)
#define CTU_TGSISR_I1_FE_MASK                    (0x8U)
#define CTU_TGSISR_I1_FE_SHIFT                   (3U)
#define CTU_TGSISR_I1_FE_WIDTH                   (1U)
#define CTU_TGSISR_I1_FE(x)                      (((uint32_t)(((uint32_t)(x)) << CTU_TGSISR_I1_FE_SHIFT)) & CTU_TGSISR_I1_FE_MASK)
#define CTU_TGSISR_I2_RE_MASK                    (0x10U)
#define CTU_TGSISR_I2_RE_SHIFT                   (4U)
#define CTU_TGSISR_I2_RE_WIDTH                   (1U)
#define CTU_TGSISR_I2_RE(x)                      (((uint32_t)(((uint32_t)(x)) << CTU_TGSISR_I2_RE_SHIFT)) & CTU_TGSISR_I2_RE_MASK)
#define CTU_TGSISR_I2_FE_MASK                    (0x20U)
#define CTU_TGSISR_I2_FE_SHIFT                   (5U)
#define CTU_TGSISR_I2_FE_WIDTH                   (1U)
#define CTU_TGSISR_I2_FE(x)                      (((uint32_t)(((uint32_t)(x)) << CTU_TGSISR_I2_FE_SHIFT)) & CTU_TGSISR_I2_FE_MASK)
#define CTU_TGSISR_I3_RE_MASK                    (0x40U)
#define CTU_TGSISR_I3_RE_SHIFT                   (6U)
#define CTU_TGSISR_I3_RE_WIDTH                   (1U)
#define CTU_TGSISR_I3_RE(x)                      (((uint32_t)(((uint32_t)(x)) << CTU_TGSISR_I3_RE_SHIFT)) & CTU_TGSISR_I3_RE_MASK)
#define CTU_TGSISR_I3_FE_MASK                    (0x80U)
#define CTU_TGSISR_I3_FE_SHIFT                   (7U)
#define CTU_TGSISR_I3_FE_WIDTH                   (1U)
#define CTU_TGSISR_I3_FE(x)                      (((uint32_t)(((uint32_t)(x)) << CTU_TGSISR_I3_FE_SHIFT)) & CTU_TGSISR_I3_FE_MASK)
#define CTU_TGSISR_I4_RE_MASK                    (0x100U)
#define CTU_TGSISR_I4_RE_SHIFT                   (8U)
#define CTU_TGSISR_I4_RE_WIDTH                   (1U)
#define CTU_TGSISR_I4_RE(x)                      (((uint32_t)(((uint32_t)(x)) << CTU_TGSISR_I4_RE_SHIFT)) & CTU_TGSISR_I4_RE_MASK)
#define CTU_TGSISR_I4_FE_MASK                    (0x200U)
#define CTU_TGSISR_I4_FE_SHIFT                   (9U)
#define CTU_TGSISR_I4_FE_WIDTH                   (1U)
#define CTU_TGSISR_I4_FE(x)                      (((uint32_t)(((uint32_t)(x)) << CTU_TGSISR_I4_FE_SHIFT)) & CTU_TGSISR_I4_FE_MASK)
#define CTU_TGSISR_I5_RE_MASK                    (0x400U)
#define CTU_TGSISR_I5_RE_SHIFT                   (10U)
#define CTU_TGSISR_I5_RE_WIDTH                   (1U)
#define CTU_TGSISR_I5_RE(x)                      (((uint32_t)(((uint32_t)(x)) << CTU_TGSISR_I5_RE_SHIFT)) & CTU_TGSISR_I5_RE_MASK)
#define CTU_TGSISR_I5_FE_MASK                    (0x800U)
#define CTU_TGSISR_I5_FE_SHIFT                   (11U)
#define CTU_TGSISR_I5_FE_WIDTH                   (1U)
#define CTU_TGSISR_I5_FE(x)                      (((uint32_t)(((uint32_t)(x)) << CTU_TGSISR_I5_FE_SHIFT)) & CTU_TGSISR_I5_FE_MASK)
#define CTU_TGSISR_I6_RE_MASK                    (0x1000U)
#define CTU_TGSISR_I6_RE_SHIFT                   (12U)
#define CTU_TGSISR_I6_RE_WIDTH                   (1U)
#define CTU_TGSISR_I6_RE(x)                      (((uint32_t)(((uint32_t)(x)) << CTU_TGSISR_I6_RE_SHIFT)) & CTU_TGSISR_I6_RE_MASK)
#define CTU_TGSISR_I6_FE_MASK                    (0x2000U)
#define CTU_TGSISR_I6_FE_SHIFT                   (13U)
#define CTU_TGSISR_I6_FE_WIDTH                   (1U)
#define CTU_TGSISR_I6_FE(x)                      (((uint32_t)(((uint32_t)(x)) << CTU_TGSISR_I6_FE_SHIFT)) & CTU_TGSISR_I6_FE_MASK)
#define CTU_TGSISR_I15_RE_MASK                   (0x40000000U)
#define CTU_TGSISR_I15_RE_SHIFT                  (30U)
#define CTU_TGSISR_I15_RE_WIDTH                  (1U)
#define CTU_TGSISR_I15_RE(x)                     (((uint32_t)(((uint32_t)(x)) << CTU_TGSISR_I15_RE_SHIFT)) & CTU_TGSISR_I15_RE_MASK)
#define CTU_TGSISR_I15_FE_MASK                   (0x80000000U)
#define CTU_TGSISR_I15_FE_SHIFT                  (31U)
#define CTU_TGSISR_I15_FE_WIDTH                  (1U)
#define CTU_TGSISR_I15_FE(x)                     (((uint32_t)(((uint32_t)(x)) << CTU_TGSISR_I15_FE_SHIFT)) & CTU_TGSISR_I15_FE_MASK)
/*! @} */

/*! @name TGSCR - Trigger Generator Subunit Control Register */
/*! @{ */
#define CTU_TGSCR_TGS_M_MASK                     (0x1U)
#define CTU_TGSCR_TGS_M_SHIFT                    (0U)
#define CTU_TGSCR_TGS_M_WIDTH                    (1U)
#define CTU_TGSCR_TGS_M(x)                       (((uint16_t)(((uint16_t)(x)) << CTU_TGSCR_TGS_M_SHIFT)) & CTU_TGSCR_TGS_M_MASK)
#define CTU_TGSCR_MRS_SM_MASK                    (0x3EU)
#define CTU_TGSCR_MRS_SM_SHIFT                   (1U)
#define CTU_TGSCR_MRS_SM_WIDTH                   (5U)
#define CTU_TGSCR_MRS_SM(x)                      (((uint16_t)(((uint16_t)(x)) << CTU_TGSCR_MRS_SM_SHIFT)) & CTU_TGSCR_MRS_SM_MASK)
#define CTU_TGSCR_PRES_MASK                      (0xC0U)
#define CTU_TGSCR_PRES_SHIFT                     (6U)
#define CTU_TGSCR_PRES_WIDTH                     (2U)
#define CTU_TGSCR_PRES(x)                        (((uint16_t)(((uint16_t)(x)) << CTU_TGSCR_PRES_SHIFT)) & CTU_TGSCR_PRES_MASK)
#define CTU_TGSCR_ET_TM_MASK                     (0x100U)
#define CTU_TGSCR_ET_TM_SHIFT                    (8U)
#define CTU_TGSCR_ET_TM_WIDTH                    (1U)
#define CTU_TGSCR_ET_TM(x)                       (((uint16_t)(((uint16_t)(x)) << CTU_TGSCR_ET_TM_SHIFT)) & CTU_TGSCR_ET_TM_MASK)
/*! @} */

/*! @name TCR - Trigger Compare Register */
/*! @{ */
#define CTU_TCR_TCRV_MASK                        (0xFFFFU)
#define CTU_TCR_TCRV_SHIFT                       (0U)
#define CTU_TCR_TCRV_WIDTH                       (16U)
#define CTU_TCR_TCRV(x)                          (((uint16_t)(((uint16_t)(x)) << CTU_TCR_TCRV_SHIFT)) & CTU_TCR_TCRV_MASK)
/*! @} */

/*! @name TGSCCR - TGS Counter Compare Register */
/*! @{ */
#define CTU_TGSCCR_TGSCCV_MASK                   (0xFFFFU)
#define CTU_TGSCCR_TGSCCV_SHIFT                  (0U)
#define CTU_TGSCCR_TGSCCV_WIDTH                  (16U)
#define CTU_TGSCCR_TGSCCV(x)                     (((uint16_t)(((uint16_t)(x)) << CTU_TGSCCR_TGSCCV_SHIFT)) & CTU_TGSCCR_TGSCCV_MASK)
/*! @} */

/*! @name TGSCRR - TGS Counter Reload Register */
/*! @{ */
#define CTU_TGSCRR_TGSCRV_MASK                   (0xFFFFU)
#define CTU_TGSCRR_TGSCRV_SHIFT                  (0U)
#define CTU_TGSCRR_TGSCRV_WIDTH                  (16U)
#define CTU_TGSCRR_TGSCRV(x)                     (((uint16_t)(((uint16_t)(x)) << CTU_TGSCRR_TGSCRV_SHIFT)) & CTU_TGSCRR_TGSCRV_MASK)
/*! @} */

/*! @name CLCR1 - Commands List Control Register 1 */
/*! @{ */
#define CTU_CLCR1_T0_INDEX_MASK                  (0x1FU)
#define CTU_CLCR1_T0_INDEX_SHIFT                 (0U)
#define CTU_CLCR1_T0_INDEX_WIDTH                 (5U)
#define CTU_CLCR1_T0_INDEX(x)                    (((uint32_t)(((uint32_t)(x)) << CTU_CLCR1_T0_INDEX_SHIFT)) & CTU_CLCR1_T0_INDEX_MASK)
#define CTU_CLCR1_T1_INDEX_MASK                  (0x1F00U)
#define CTU_CLCR1_T1_INDEX_SHIFT                 (8U)
#define CTU_CLCR1_T1_INDEX_WIDTH                 (5U)
#define CTU_CLCR1_T1_INDEX(x)                    (((uint32_t)(((uint32_t)(x)) << CTU_CLCR1_T1_INDEX_SHIFT)) & CTU_CLCR1_T1_INDEX_MASK)
#define CTU_CLCR1_T2_INDEX_MASK                  (0x1F0000U)
#define CTU_CLCR1_T2_INDEX_SHIFT                 (16U)
#define CTU_CLCR1_T2_INDEX_WIDTH                 (5U)
#define CTU_CLCR1_T2_INDEX(x)                    (((uint32_t)(((uint32_t)(x)) << CTU_CLCR1_T2_INDEX_SHIFT)) & CTU_CLCR1_T2_INDEX_MASK)
#define CTU_CLCR1_T3_INDEX_MASK                  (0x1F000000U)
#define CTU_CLCR1_T3_INDEX_SHIFT                 (24U)
#define CTU_CLCR1_T3_INDEX_WIDTH                 (5U)
#define CTU_CLCR1_T3_INDEX(x)                    (((uint32_t)(((uint32_t)(x)) << CTU_CLCR1_T3_INDEX_SHIFT)) & CTU_CLCR1_T3_INDEX_MASK)
/*! @} */

/*! @name CLCR2 - Commands List Control Register 2 */
/*! @{ */
#define CTU_CLCR2_T4_INDEX_MASK                  (0x1FU)
#define CTU_CLCR2_T4_INDEX_SHIFT                 (0U)
#define CTU_CLCR2_T4_INDEX_WIDTH                 (5U)
#define CTU_CLCR2_T4_INDEX(x)                    (((uint32_t)(((uint32_t)(x)) << CTU_CLCR2_T4_INDEX_SHIFT)) & CTU_CLCR2_T4_INDEX_MASK)
#define CTU_CLCR2_T5_INDEX_MASK                  (0x1F00U)
#define CTU_CLCR2_T5_INDEX_SHIFT                 (8U)
#define CTU_CLCR2_T5_INDEX_WIDTH                 (5U)
#define CTU_CLCR2_T5_INDEX(x)                    (((uint32_t)(((uint32_t)(x)) << CTU_CLCR2_T5_INDEX_SHIFT)) & CTU_CLCR2_T5_INDEX_MASK)
#define CTU_CLCR2_T6_INDEX_MASK                  (0x1F0000U)
#define CTU_CLCR2_T6_INDEX_SHIFT                 (16U)
#define CTU_CLCR2_T6_INDEX_WIDTH                 (5U)
#define CTU_CLCR2_T6_INDEX(x)                    (((uint32_t)(((uint32_t)(x)) << CTU_CLCR2_T6_INDEX_SHIFT)) & CTU_CLCR2_T6_INDEX_MASK)
#define CTU_CLCR2_T7_INDEX_MASK                  (0x1F000000U)
#define CTU_CLCR2_T7_INDEX_SHIFT                 (24U)
#define CTU_CLCR2_T7_INDEX_WIDTH                 (5U)
#define CTU_CLCR2_T7_INDEX(x)                    (((uint32_t)(((uint32_t)(x)) << CTU_CLCR2_T7_INDEX_SHIFT)) & CTU_CLCR2_T7_INDEX_MASK)
/*! @} */

/*! @name THCR1 - Trigger Handler Control Register 1 */
/*! @{ */
#define CTU_THCR1_T0_ADCE_MASK                   (0x1U)
#define CTU_THCR1_T0_ADCE_SHIFT                  (0U)
#define CTU_THCR1_T0_ADCE_WIDTH                  (1U)
#define CTU_THCR1_T0_ADCE(x)                     (((uint32_t)(((uint32_t)(x)) << CTU_THCR1_T0_ADCE_SHIFT)) & CTU_THCR1_T0_ADCE_MASK)
#define CTU_THCR1_T0_E_MASK                      (0x40U)
#define CTU_THCR1_T0_E_SHIFT                     (6U)
#define CTU_THCR1_T0_E_WIDTH                     (1U)
#define CTU_THCR1_T0_E(x)                        (((uint32_t)(((uint32_t)(x)) << CTU_THCR1_T0_E_SHIFT)) & CTU_THCR1_T0_E_MASK)
#define CTU_THCR1_T1_ADCE_MASK                   (0x100U)
#define CTU_THCR1_T1_ADCE_SHIFT                  (8U)
#define CTU_THCR1_T1_ADCE_WIDTH                  (1U)
#define CTU_THCR1_T1_ADCE(x)                     (((uint32_t)(((uint32_t)(x)) << CTU_THCR1_T1_ADCE_SHIFT)) & CTU_THCR1_T1_ADCE_MASK)
#define CTU_THCR1_T1_E_MASK                      (0x4000U)
#define CTU_THCR1_T1_E_SHIFT                     (14U)
#define CTU_THCR1_T1_E_WIDTH                     (1U)
#define CTU_THCR1_T1_E(x)                        (((uint32_t)(((uint32_t)(x)) << CTU_THCR1_T1_E_SHIFT)) & CTU_THCR1_T1_E_MASK)
#define CTU_THCR1_T2_ADCE_MASK                   (0x10000U)
#define CTU_THCR1_T2_ADCE_SHIFT                  (16U)
#define CTU_THCR1_T2_ADCE_WIDTH                  (1U)
#define CTU_THCR1_T2_ADCE(x)                     (((uint32_t)(((uint32_t)(x)) << CTU_THCR1_T2_ADCE_SHIFT)) & CTU_THCR1_T2_ADCE_MASK)
#define CTU_THCR1_T2_E_MASK                      (0x400000U)
#define CTU_THCR1_T2_E_SHIFT                     (22U)
#define CTU_THCR1_T2_E_WIDTH                     (1U)
#define CTU_THCR1_T2_E(x)                        (((uint32_t)(((uint32_t)(x)) << CTU_THCR1_T2_E_SHIFT)) & CTU_THCR1_T2_E_MASK)
#define CTU_THCR1_T3_ADCE_MASK                   (0x1000000U)
#define CTU_THCR1_T3_ADCE_SHIFT                  (24U)
#define CTU_THCR1_T3_ADCE_WIDTH                  (1U)
#define CTU_THCR1_T3_ADCE(x)                     (((uint32_t)(((uint32_t)(x)) << CTU_THCR1_T3_ADCE_SHIFT)) & CTU_THCR1_T3_ADCE_MASK)
#define CTU_THCR1_T3_E_MASK                      (0x40000000U)
#define CTU_THCR1_T3_E_SHIFT                     (30U)
#define CTU_THCR1_T3_E_WIDTH                     (1U)
#define CTU_THCR1_T3_E(x)                        (((uint32_t)(((uint32_t)(x)) << CTU_THCR1_T3_E_SHIFT)) & CTU_THCR1_T3_E_MASK)
/*! @} */

/*! @name THCR2 - Trigger Handler Control Register 2 */
/*! @{ */
#define CTU_THCR2_T4_ADCE_MASK                   (0x1U)
#define CTU_THCR2_T4_ADCE_SHIFT                  (0U)
#define CTU_THCR2_T4_ADCE_WIDTH                  (1U)
#define CTU_THCR2_T4_ADCE(x)                     (((uint32_t)(((uint32_t)(x)) << CTU_THCR2_T4_ADCE_SHIFT)) & CTU_THCR2_T4_ADCE_MASK)
#define CTU_THCR2_T4_E_MASK                      (0x40U)
#define CTU_THCR2_T4_E_SHIFT                     (6U)
#define CTU_THCR2_T4_E_WIDTH                     (1U)
#define CTU_THCR2_T4_E(x)                        (((uint32_t)(((uint32_t)(x)) << CTU_THCR2_T4_E_SHIFT)) & CTU_THCR2_T4_E_MASK)
#define CTU_THCR2_T5_ADCE_MASK                   (0x100U)
#define CTU_THCR2_T5_ADCE_SHIFT                  (8U)
#define CTU_THCR2_T5_ADCE_WIDTH                  (1U)
#define CTU_THCR2_T5_ADCE(x)                     (((uint32_t)(((uint32_t)(x)) << CTU_THCR2_T5_ADCE_SHIFT)) & CTU_THCR2_T5_ADCE_MASK)
#define CTU_THCR2_T5_E_MASK                      (0x4000U)
#define CTU_THCR2_T5_E_SHIFT                     (14U)
#define CTU_THCR2_T5_E_WIDTH                     (1U)
#define CTU_THCR2_T5_E(x)                        (((uint32_t)(((uint32_t)(x)) << CTU_THCR2_T5_E_SHIFT)) & CTU_THCR2_T5_E_MASK)
#define CTU_THCR2_T6_ADCE_MASK                   (0x10000U)
#define CTU_THCR2_T6_ADCE_SHIFT                  (16U)
#define CTU_THCR2_T6_ADCE_WIDTH                  (1U)
#define CTU_THCR2_T6_ADCE(x)                     (((uint32_t)(((uint32_t)(x)) << CTU_THCR2_T6_ADCE_SHIFT)) & CTU_THCR2_T6_ADCE_MASK)
#define CTU_THCR2_T6_E_MASK                      (0x400000U)
#define CTU_THCR2_T6_E_SHIFT                     (22U)
#define CTU_THCR2_T6_E_WIDTH                     (1U)
#define CTU_THCR2_T6_E(x)                        (((uint32_t)(((uint32_t)(x)) << CTU_THCR2_T6_E_SHIFT)) & CTU_THCR2_T6_E_MASK)
#define CTU_THCR2_T7_ADCE_MASK                   (0x1000000U)
#define CTU_THCR2_T7_ADCE_SHIFT                  (24U)
#define CTU_THCR2_T7_ADCE_WIDTH                  (1U)
#define CTU_THCR2_T7_ADCE(x)                     (((uint32_t)(((uint32_t)(x)) << CTU_THCR2_T7_ADCE_SHIFT)) & CTU_THCR2_T7_ADCE_MASK)
#define CTU_THCR2_T7_E_MASK                      (0x40000000U)
#define CTU_THCR2_T7_E_SHIFT                     (30U)
#define CTU_THCR2_T7_E_WIDTH                     (1U)
#define CTU_THCR2_T7_E(x)                        (((uint32_t)(((uint32_t)(x)) << CTU_THCR2_T7_E_SHIFT)) & CTU_THCR2_T7_E_MASK)
/*! @} */

/*! @name CLR_A - Commands List Register A for ADC single-conversion mode commands */
/*! @{ */
#define CTU_CLR_A_CH_MASK                        (0xFU)
#define CTU_CLR_A_CH_SHIFT                       (0U)
#define CTU_CLR_A_CH_WIDTH                       (4U)
#define CTU_CLR_A_CH(x)                          (((uint16_t)(((uint16_t)(x)) << CTU_CLR_A_CH_SHIFT)) & CTU_CLR_A_CH_MASK)
#define CTU_CLR_A_SU_MASK                        (0x20U)
#define CTU_CLR_A_SU_SHIFT                       (5U)
#define CTU_CLR_A_SU_WIDTH                       (1U)
#define CTU_CLR_A_SU(x)                          (((uint16_t)(((uint16_t)(x)) << CTU_CLR_A_SU_SHIFT)) & CTU_CLR_A_SU_MASK)
#define CTU_CLR_A_ST0_MASK                       (0x200U)
#define CTU_CLR_A_ST0_SHIFT                      (9U)
#define CTU_CLR_A_ST0_WIDTH                      (1U)
#define CTU_CLR_A_ST0(x)                         (((uint16_t)(((uint16_t)(x)) << CTU_CLR_A_ST0_SHIFT)) & CTU_CLR_A_ST0_MASK)
#define CTU_CLR_A_FIFO_MASK                      (0x1C00U)
#define CTU_CLR_A_FIFO_SHIFT                     (10U)
#define CTU_CLR_A_FIFO_WIDTH                     (3U)
#define CTU_CLR_A_FIFO(x)                        (((uint16_t)(((uint16_t)(x)) << CTU_CLR_A_FIFO_SHIFT)) & CTU_CLR_A_FIFO_MASK)
#define CTU_CLR_A_CMS_MASK                       (0x2000U)
#define CTU_CLR_A_CMS_SHIFT                      (13U)
#define CTU_CLR_A_CMS_WIDTH                      (1U)
#define CTU_CLR_A_CMS(x)                         (((uint16_t)(((uint16_t)(x)) << CTU_CLR_A_CMS_SHIFT)) & CTU_CLR_A_CMS_MASK)
#define CTU_CLR_A_LC_MASK                        (0x4000U)
#define CTU_CLR_A_LC_SHIFT                       (14U)
#define CTU_CLR_A_LC_WIDTH                       (1U)
#define CTU_CLR_A_LC(x)                          (((uint16_t)(((uint16_t)(x)) << CTU_CLR_A_LC_SHIFT)) & CTU_CLR_A_LC_MASK)
#define CTU_CLR_A_CIR_MASK                       (0x8000U)
#define CTU_CLR_A_CIR_SHIFT                      (15U)
#define CTU_CLR_A_CIR_WIDTH                      (1U)
#define CTU_CLR_A_CIR(x)                         (((uint16_t)(((uint16_t)(x)) << CTU_CLR_A_CIR_SHIFT)) & CTU_CLR_A_CIR_MASK)
/*! @} */

/*! @name CLR_B - Command List Register B for ADC dual-conversion mode commands */
/*! @{ */
#define CTU_CLR_B_CH_A_MASK                      (0xFU)
#define CTU_CLR_B_CH_A_SHIFT                     (0U)
#define CTU_CLR_B_CH_A_WIDTH                     (4U)
#define CTU_CLR_B_CH_A(x)                        (((uint16_t)(((uint16_t)(x)) << CTU_CLR_B_CH_A_SHIFT)) & CTU_CLR_B_CH_A_MASK)
#define CTU_CLR_B_CH_B_MASK                      (0x1E0U)
#define CTU_CLR_B_CH_B_SHIFT                     (5U)
#define CTU_CLR_B_CH_B_WIDTH                     (4U)
#define CTU_CLR_B_CH_B(x)                        (((uint16_t)(((uint16_t)(x)) << CTU_CLR_B_CH_B_SHIFT)) & CTU_CLR_B_CH_B_MASK)
#define CTU_CLR_B_ST0_MASK                       (0x200U)
#define CTU_CLR_B_ST0_SHIFT                      (9U)
#define CTU_CLR_B_ST0_WIDTH                      (1U)
#define CTU_CLR_B_ST0(x)                         (((uint16_t)(((uint16_t)(x)) << CTU_CLR_B_ST0_SHIFT)) & CTU_CLR_B_ST0_MASK)
#define CTU_CLR_B_FIFO_MASK                      (0x1C00U)
#define CTU_CLR_B_FIFO_SHIFT                     (10U)
#define CTU_CLR_B_FIFO_WIDTH                     (3U)
#define CTU_CLR_B_FIFO(x)                        (((uint16_t)(((uint16_t)(x)) << CTU_CLR_B_FIFO_SHIFT)) & CTU_CLR_B_FIFO_MASK)
#define CTU_CLR_B_CMS_MASK                       (0x2000U)
#define CTU_CLR_B_CMS_SHIFT                      (13U)
#define CTU_CLR_B_CMS_WIDTH                      (1U)
#define CTU_CLR_B_CMS(x)                         (((uint16_t)(((uint16_t)(x)) << CTU_CLR_B_CMS_SHIFT)) & CTU_CLR_B_CMS_MASK)
#define CTU_CLR_B_LC_MASK                        (0x4000U)
#define CTU_CLR_B_LC_SHIFT                       (14U)
#define CTU_CLR_B_LC_WIDTH                       (1U)
#define CTU_CLR_B_LC(x)                          (((uint16_t)(((uint16_t)(x)) << CTU_CLR_B_LC_SHIFT)) & CTU_CLR_B_LC_MASK)
#define CTU_CLR_B_CIR_MASK                       (0x8000U)
#define CTU_CLR_B_CIR_SHIFT                      (15U)
#define CTU_CLR_B_CIR_WIDTH                      (1U)
#define CTU_CLR_B_CIR(x)                         (((uint16_t)(((uint16_t)(x)) << CTU_CLR_B_CIR_SHIFT)) & CTU_CLR_B_CIR_MASK)
/*! @} */

/*! @name CLR_C - Command List Register C for self-test commands */
/*! @{ */
#define CTU_CLR_C_BSIZE_MASK                     (0x7FU)
#define CTU_CLR_C_BSIZE_SHIFT                    (0U)
#define CTU_CLR_C_BSIZE_WIDTH                    (7U)
#define CTU_CLR_C_BSIZE(x)                       (((uint16_t)(((uint16_t)(x)) << CTU_CLR_C_BSIZE_SHIFT)) & CTU_CLR_C_BSIZE_MASK)
#define CTU_CLR_C_ALG_MASK                       (0x180U)
#define CTU_CLR_C_ALG_SHIFT                      (7U)
#define CTU_CLR_C_ALG_WIDTH                      (2U)
#define CTU_CLR_C_ALG(x)                         (((uint16_t)(((uint16_t)(x)) << CTU_CLR_C_ALG_SHIFT)) & CTU_CLR_C_ALG_MASK)
#define CTU_CLR_C_ST0_MASK                       (0x200U)
#define CTU_CLR_C_ST0_SHIFT                      (9U)
#define CTU_CLR_C_ST0_WIDTH                      (1U)
#define CTU_CLR_C_ST0(x)                         (((uint16_t)(((uint16_t)(x)) << CTU_CLR_C_ST0_SHIFT)) & CTU_CLR_C_ST0_MASK)
#define CTU_CLR_C_ST_SU_MASK                     (0x800U)
#define CTU_CLR_C_ST_SU_SHIFT                    (11U)
#define CTU_CLR_C_ST_SU_WIDTH                    (1U)
#define CTU_CLR_C_ST_SU(x)                       (((uint16_t)(((uint16_t)(x)) << CTU_CLR_C_ST_SU_SHIFT)) & CTU_CLR_C_ST_SU_MASK)
#define CTU_CLR_C_ST_CMS_MASK                    (0x1000U)
#define CTU_CLR_C_ST_CMS_SHIFT                   (12U)
#define CTU_CLR_C_ST_CMS_WIDTH                   (1U)
#define CTU_CLR_C_ST_CMS(x)                      (((uint16_t)(((uint16_t)(x)) << CTU_CLR_C_ST_CMS_SHIFT)) & CTU_CLR_C_ST_CMS_MASK)
#define CTU_CLR_C_ST1_MASK                       (0x2000U)
#define CTU_CLR_C_ST1_SHIFT                      (13U)
#define CTU_CLR_C_ST1_WIDTH                      (1U)
#define CTU_CLR_C_ST1(x)                         (((uint16_t)(((uint16_t)(x)) << CTU_CLR_C_ST1_SHIFT)) & CTU_CLR_C_ST1_MASK)
#define CTU_CLR_C_LC_MASK                        (0x4000U)
#define CTU_CLR_C_LC_SHIFT                       (14U)
#define CTU_CLR_C_LC_WIDTH                       (1U)
#define CTU_CLR_C_LC(x)                          (((uint16_t)(((uint16_t)(x)) << CTU_CLR_C_LC_SHIFT)) & CTU_CLR_C_LC_MASK)
#define CTU_CLR_C_CIR_MASK                       (0x8000U)
#define CTU_CLR_C_CIR_SHIFT                      (15U)
#define CTU_CLR_C_CIR_WIDTH                      (1U)
#define CTU_CLR_C_CIR(x)                         (((uint16_t)(((uint16_t)(x)) << CTU_CLR_C_CIR_SHIFT)) & CTU_CLR_C_CIR_MASK)
/*! @} */

/*! @name FDCR - FIFO DMA Control Register */
/*! @{ */
#define CTU_FDCR_DE0_MASK                        (0x1U)
#define CTU_FDCR_DE0_SHIFT                       (0U)
#define CTU_FDCR_DE0_WIDTH                       (1U)
#define CTU_FDCR_DE0(x)                          (((uint16_t)(((uint16_t)(x)) << CTU_FDCR_DE0_SHIFT)) & CTU_FDCR_DE0_MASK)
#define CTU_FDCR_DE1_MASK                        (0x2U)
#define CTU_FDCR_DE1_SHIFT                       (1U)
#define CTU_FDCR_DE1_WIDTH                       (1U)
#define CTU_FDCR_DE1(x)                          (((uint16_t)(((uint16_t)(x)) << CTU_FDCR_DE1_SHIFT)) & CTU_FDCR_DE1_MASK)
#define CTU_FDCR_DE2_MASK                        (0x4U)
#define CTU_FDCR_DE2_SHIFT                       (2U)
#define CTU_FDCR_DE2_WIDTH                       (1U)
#define CTU_FDCR_DE2(x)                          (((uint16_t)(((uint16_t)(x)) << CTU_FDCR_DE2_SHIFT)) & CTU_FDCR_DE2_MASK)
#define CTU_FDCR_DE3_MASK                        (0x8U)
#define CTU_FDCR_DE3_SHIFT                       (3U)
#define CTU_FDCR_DE3_WIDTH                       (1U)
#define CTU_FDCR_DE3(x)                          (((uint16_t)(((uint16_t)(x)) << CTU_FDCR_DE3_SHIFT)) & CTU_FDCR_DE3_MASK)
/*! @} */

/*! @name FCR - FIFO Control Register */
/*! @{ */
#define CTU_FCR_FULL_EN0_MASK                    (0x1U)
#define CTU_FCR_FULL_EN0_SHIFT                   (0U)
#define CTU_FCR_FULL_EN0_WIDTH                   (1U)
#define CTU_FCR_FULL_EN0(x)                      (((uint32_t)(((uint32_t)(x)) << CTU_FCR_FULL_EN0_SHIFT)) & CTU_FCR_FULL_EN0_MASK)
#define CTU_FCR_EMPTY_EN0_MASK                   (0x2U)
#define CTU_FCR_EMPTY_EN0_SHIFT                  (1U)
#define CTU_FCR_EMPTY_EN0_WIDTH                  (1U)
#define CTU_FCR_EMPTY_EN0(x)                     (((uint32_t)(((uint32_t)(x)) << CTU_FCR_EMPTY_EN0_SHIFT)) & CTU_FCR_EMPTY_EN0_MASK)
#define CTU_FCR_OF_EN0_MASK                      (0x4U)
#define CTU_FCR_OF_EN0_SHIFT                     (2U)
#define CTU_FCR_OF_EN0_WIDTH                     (1U)
#define CTU_FCR_OF_EN0(x)                        (((uint32_t)(((uint32_t)(x)) << CTU_FCR_OF_EN0_SHIFT)) & CTU_FCR_OF_EN0_MASK)
#define CTU_FCR_OR_EN0_MASK                      (0x8U)
#define CTU_FCR_OR_EN0_SHIFT                     (3U)
#define CTU_FCR_OR_EN0_WIDTH                     (1U)
#define CTU_FCR_OR_EN0(x)                        (((uint32_t)(((uint32_t)(x)) << CTU_FCR_OR_EN0_SHIFT)) & CTU_FCR_OR_EN0_MASK)
#define CTU_FCR_FULL_EN1_MASK                    (0x10U)
#define CTU_FCR_FULL_EN1_SHIFT                   (4U)
#define CTU_FCR_FULL_EN1_WIDTH                   (1U)
#define CTU_FCR_FULL_EN1(x)                      (((uint32_t)(((uint32_t)(x)) << CTU_FCR_FULL_EN1_SHIFT)) & CTU_FCR_FULL_EN1_MASK)
#define CTU_FCR_EMPTY_EN1_MASK                   (0x20U)
#define CTU_FCR_EMPTY_EN1_SHIFT                  (5U)
#define CTU_FCR_EMPTY_EN1_WIDTH                  (1U)
#define CTU_FCR_EMPTY_EN1(x)                     (((uint32_t)(((uint32_t)(x)) << CTU_FCR_EMPTY_EN1_SHIFT)) & CTU_FCR_EMPTY_EN1_MASK)
#define CTU_FCR_OF_EN1_MASK                      (0x40U)
#define CTU_FCR_OF_EN1_SHIFT                     (6U)
#define CTU_FCR_OF_EN1_WIDTH                     (1U)
#define CTU_FCR_OF_EN1(x)                        (((uint32_t)(((uint32_t)(x)) << CTU_FCR_OF_EN1_SHIFT)) & CTU_FCR_OF_EN1_MASK)
#define CTU_FCR_OR_EN1_MASK                      (0x80U)
#define CTU_FCR_OR_EN1_SHIFT                     (7U)
#define CTU_FCR_OR_EN1_WIDTH                     (1U)
#define CTU_FCR_OR_EN1(x)                        (((uint32_t)(((uint32_t)(x)) << CTU_FCR_OR_EN1_SHIFT)) & CTU_FCR_OR_EN1_MASK)
#define CTU_FCR_FULL_EN2_MASK                    (0x100U)
#define CTU_FCR_FULL_EN2_SHIFT                   (8U)
#define CTU_FCR_FULL_EN2_WIDTH                   (1U)
#define CTU_FCR_FULL_EN2(x)                      (((uint32_t)(((uint32_t)(x)) << CTU_FCR_FULL_EN2_SHIFT)) & CTU_FCR_FULL_EN2_MASK)
#define CTU_FCR_EMPTY_EN2_MASK                   (0x200U)
#define CTU_FCR_EMPTY_EN2_SHIFT                  (9U)
#define CTU_FCR_EMPTY_EN2_WIDTH                  (1U)
#define CTU_FCR_EMPTY_EN2(x)                     (((uint32_t)(((uint32_t)(x)) << CTU_FCR_EMPTY_EN2_SHIFT)) & CTU_FCR_EMPTY_EN2_MASK)
#define CTU_FCR_OF_EN2_MASK                      (0x400U)
#define CTU_FCR_OF_EN2_SHIFT                     (10U)
#define CTU_FCR_OF_EN2_WIDTH                     (1U)
#define CTU_FCR_OF_EN2(x)                        (((uint32_t)(((uint32_t)(x)) << CTU_FCR_OF_EN2_SHIFT)) & CTU_FCR_OF_EN2_MASK)
#define CTU_FCR_OR_EN2_MASK                      (0x800U)
#define CTU_FCR_OR_EN2_SHIFT                     (11U)
#define CTU_FCR_OR_EN2_WIDTH                     (1U)
#define CTU_FCR_OR_EN2(x)                        (((uint32_t)(((uint32_t)(x)) << CTU_FCR_OR_EN2_SHIFT)) & CTU_FCR_OR_EN2_MASK)
#define CTU_FCR_FULL_EN3_MASK                    (0x1000U)
#define CTU_FCR_FULL_EN3_SHIFT                   (12U)
#define CTU_FCR_FULL_EN3_WIDTH                   (1U)
#define CTU_FCR_FULL_EN3(x)                      (((uint32_t)(((uint32_t)(x)) << CTU_FCR_FULL_EN3_SHIFT)) & CTU_FCR_FULL_EN3_MASK)
#define CTU_FCR_EMPTY_EN3_MASK                   (0x2000U)
#define CTU_FCR_EMPTY_EN3_SHIFT                  (13U)
#define CTU_FCR_EMPTY_EN3_WIDTH                  (1U)
#define CTU_FCR_EMPTY_EN3(x)                     (((uint32_t)(((uint32_t)(x)) << CTU_FCR_EMPTY_EN3_SHIFT)) & CTU_FCR_EMPTY_EN3_MASK)
#define CTU_FCR_OF_EN3_MASK                      (0x4000U)
#define CTU_FCR_OF_EN3_SHIFT                     (14U)
#define CTU_FCR_OF_EN3_WIDTH                     (1U)
#define CTU_FCR_OF_EN3(x)                        (((uint32_t)(((uint32_t)(x)) << CTU_FCR_OF_EN3_SHIFT)) & CTU_FCR_OF_EN3_MASK)
#define CTU_FCR_OR_EN3_MASK                      (0x8000U)
#define CTU_FCR_OR_EN3_SHIFT                     (15U)
#define CTU_FCR_OR_EN3_WIDTH                     (1U)
#define CTU_FCR_OR_EN3(x)                        (((uint32_t)(((uint32_t)(x)) << CTU_FCR_OR_EN3_SHIFT)) & CTU_FCR_OR_EN3_MASK)
/*! @} */

/*! @name FTH - FIFO Threshold Register */
/*! @{ */
#define CTU_FTH_TH0_MASK                         (0xFFU)
#define CTU_FTH_TH0_SHIFT                        (0U)
#define CTU_FTH_TH0_WIDTH                        (8U)
#define CTU_FTH_TH0(x)                           (((uint32_t)(((uint32_t)(x)) << CTU_FTH_TH0_SHIFT)) & CTU_FTH_TH0_MASK)
#define CTU_FTH_TH1_MASK                         (0xFF00U)
#define CTU_FTH_TH1_SHIFT                        (8U)
#define CTU_FTH_TH1_WIDTH                        (8U)
#define CTU_FTH_TH1(x)                           (((uint32_t)(((uint32_t)(x)) << CTU_FTH_TH1_SHIFT)) & CTU_FTH_TH1_MASK)
#define CTU_FTH_TH2_MASK                         (0xFF0000U)
#define CTU_FTH_TH2_SHIFT                        (16U)
#define CTU_FTH_TH2_WIDTH                        (8U)
#define CTU_FTH_TH2(x)                           (((uint32_t)(((uint32_t)(x)) << CTU_FTH_TH2_SHIFT)) & CTU_FTH_TH2_MASK)
#define CTU_FTH_TH3_MASK                         (0xFF000000U)
#define CTU_FTH_TH3_SHIFT                        (24U)
#define CTU_FTH_TH3_WIDTH                        (8U)
#define CTU_FTH_TH3(x)                           (((uint32_t)(((uint32_t)(x)) << CTU_FTH_TH3_SHIFT)) & CTU_FTH_TH3_MASK)
/*! @} */

/*! @name FST - FIFO Status Register */
/*! @{ */
#define CTU_FST_FULL0_MASK                       (0x1U)
#define CTU_FST_FULL0_SHIFT                      (0U)
#define CTU_FST_FULL0_WIDTH                      (1U)
#define CTU_FST_FULL0(x)                         (((uint32_t)(((uint32_t)(x)) << CTU_FST_FULL0_SHIFT)) & CTU_FST_FULL0_MASK)
#define CTU_FST_EMP0_MASK                        (0x2U)
#define CTU_FST_EMP0_SHIFT                       (1U)
#define CTU_FST_EMP0_WIDTH                       (1U)
#define CTU_FST_EMP0(x)                          (((uint32_t)(((uint32_t)(x)) << CTU_FST_EMP0_SHIFT)) & CTU_FST_EMP0_MASK)
#define CTU_FST_OF0_MASK                         (0x4U)
#define CTU_FST_OF0_SHIFT                        (2U)
#define CTU_FST_OF0_WIDTH                        (1U)
#define CTU_FST_OF0(x)                           (((uint32_t)(((uint32_t)(x)) << CTU_FST_OF0_SHIFT)) & CTU_FST_OF0_MASK)
#define CTU_FST_OR0_MASK                         (0x8U)
#define CTU_FST_OR0_SHIFT                        (3U)
#define CTU_FST_OR0_WIDTH                        (1U)
#define CTU_FST_OR0(x)                           (((uint32_t)(((uint32_t)(x)) << CTU_FST_OR0_SHIFT)) & CTU_FST_OR0_MASK)
#define CTU_FST_FULL1_MASK                       (0x10U)
#define CTU_FST_FULL1_SHIFT                      (4U)
#define CTU_FST_FULL1_WIDTH                      (1U)
#define CTU_FST_FULL1(x)                         (((uint32_t)(((uint32_t)(x)) << CTU_FST_FULL1_SHIFT)) & CTU_FST_FULL1_MASK)
#define CTU_FST_EMP1_MASK                        (0x20U)
#define CTU_FST_EMP1_SHIFT                       (5U)
#define CTU_FST_EMP1_WIDTH                       (1U)
#define CTU_FST_EMP1(x)                          (((uint32_t)(((uint32_t)(x)) << CTU_FST_EMP1_SHIFT)) & CTU_FST_EMP1_MASK)
#define CTU_FST_OF1_MASK                         (0x40U)
#define CTU_FST_OF1_SHIFT                        (6U)
#define CTU_FST_OF1_WIDTH                        (1U)
#define CTU_FST_OF1(x)                           (((uint32_t)(((uint32_t)(x)) << CTU_FST_OF1_SHIFT)) & CTU_FST_OF1_MASK)
#define CTU_FST_OR1_MASK                         (0x80U)
#define CTU_FST_OR1_SHIFT                        (7U)
#define CTU_FST_OR1_WIDTH                        (1U)
#define CTU_FST_OR1(x)                           (((uint32_t)(((uint32_t)(x)) << CTU_FST_OR1_SHIFT)) & CTU_FST_OR1_MASK)
#define CTU_FST_FULL2_MASK                       (0x100U)
#define CTU_FST_FULL2_SHIFT                      (8U)
#define CTU_FST_FULL2_WIDTH                      (1U)
#define CTU_FST_FULL2(x)                         (((uint32_t)(((uint32_t)(x)) << CTU_FST_FULL2_SHIFT)) & CTU_FST_FULL2_MASK)
#define CTU_FST_EMP2_MASK                        (0x200U)
#define CTU_FST_EMP2_SHIFT                       (9U)
#define CTU_FST_EMP2_WIDTH                       (1U)
#define CTU_FST_EMP2(x)                          (((uint32_t)(((uint32_t)(x)) << CTU_FST_EMP2_SHIFT)) & CTU_FST_EMP2_MASK)
#define CTU_FST_OF2_MASK                         (0x400U)
#define CTU_FST_OF2_SHIFT                        (10U)
#define CTU_FST_OF2_WIDTH                        (1U)
#define CTU_FST_OF2(x)                           (((uint32_t)(((uint32_t)(x)) << CTU_FST_OF2_SHIFT)) & CTU_FST_OF2_MASK)
#define CTU_FST_OR2_MASK                         (0x800U)
#define CTU_FST_OR2_SHIFT                        (11U)
#define CTU_FST_OR2_WIDTH                        (1U)
#define CTU_FST_OR2(x)                           (((uint32_t)(((uint32_t)(x)) << CTU_FST_OR2_SHIFT)) & CTU_FST_OR2_MASK)
#define CTU_FST_FULL3_MASK                       (0x1000U)
#define CTU_FST_FULL3_SHIFT                      (12U)
#define CTU_FST_FULL3_WIDTH                      (1U)
#define CTU_FST_FULL3(x)                         (((uint32_t)(((uint32_t)(x)) << CTU_FST_FULL3_SHIFT)) & CTU_FST_FULL3_MASK)
#define CTU_FST_EMP3_MASK                        (0x2000U)
#define CTU_FST_EMP3_SHIFT                       (13U)
#define CTU_FST_EMP3_WIDTH                       (1U)
#define CTU_FST_EMP3(x)                          (((uint32_t)(((uint32_t)(x)) << CTU_FST_EMP3_SHIFT)) & CTU_FST_EMP3_MASK)
#define CTU_FST_OF3_MASK                         (0x4000U)
#define CTU_FST_OF3_SHIFT                        (14U)
#define CTU_FST_OF3_WIDTH                        (1U)
#define CTU_FST_OF3(x)                           (((uint32_t)(((uint32_t)(x)) << CTU_FST_OF3_SHIFT)) & CTU_FST_OF3_MASK)
#define CTU_FST_OR3_MASK                         (0x8000U)
#define CTU_FST_OR3_SHIFT                        (15U)
#define CTU_FST_OR3_WIDTH                        (1U)
#define CTU_FST_OR3(x)                           (((uint32_t)(((uint32_t)(x)) << CTU_FST_OR3_SHIFT)) & CTU_FST_OR3_MASK)
/*! @} */

/*! @name FR - FIFO Right Aligned Data Register */
/*! @{ */
#define CTU_FR_DATA_MASK                         (0xFFFU)
#define CTU_FR_DATA_SHIFT                        (0U)
#define CTU_FR_DATA_WIDTH                        (12U)
#define CTU_FR_DATA(x)                           (((uint32_t)(((uint32_t)(x)) << CTU_FR_DATA_SHIFT)) & CTU_FR_DATA_MASK)
#define CTU_FR_N_CH_MASK                         (0x70000U)
#define CTU_FR_N_CH_SHIFT                        (16U)
#define CTU_FR_N_CH_WIDTH                        (3U)
#define CTU_FR_N_CH(x)                           (((uint32_t)(((uint32_t)(x)) << CTU_FR_N_CH_SHIFT)) & CTU_FR_N_CH_MASK)
#define CTU_FR_ADC_MASK                          (0x80000U)
#define CTU_FR_ADC_SHIFT                         (19U)
#define CTU_FR_ADC_WIDTH                         (1U)
#define CTU_FR_ADC(x)                            (((uint32_t)(((uint32_t)(x)) << CTU_FR_ADC_SHIFT)) & CTU_FR_ADC_MASK)
/*! @} */

/*! @name FL - FIFO Signed Left Aligned Data Register */
/*! @{ */
#define CTU_FL_LA_DATA_MASK                      (0x7FF8U)
#define CTU_FL_LA_DATA_SHIFT                     (3U)
#define CTU_FL_LA_DATA_WIDTH                     (12U)
#define CTU_FL_LA_DATA(x)                        (((uint32_t)(((uint32_t)(x)) << CTU_FL_LA_DATA_SHIFT)) & CTU_FL_LA_DATA_MASK)
#define CTU_FL_N_CH_MASK                         (0x70000U)
#define CTU_FL_N_CH_SHIFT                        (16U)
#define CTU_FL_N_CH_WIDTH                        (3U)
#define CTU_FL_N_CH(x)                           (((uint32_t)(((uint32_t)(x)) << CTU_FL_N_CH_SHIFT)) & CTU_FL_N_CH_MASK)
#define CTU_FL_ADC_MASK                          (0x80000U)
#define CTU_FL_ADC_SHIFT                         (19U)
#define CTU_FL_ADC_WIDTH                         (1U)
#define CTU_FL_ADC(x)                            (((uint32_t)(((uint32_t)(x)) << CTU_FL_ADC_SHIFT)) & CTU_FL_ADC_MASK)
/*! @} */

/*! @name EFR - Error Flag Register */
/*! @{ */
#define CTU_EFR_MRS_RE_MASK                      (0x1U)
#define CTU_EFR_MRS_RE_SHIFT                     (0U)
#define CTU_EFR_MRS_RE_WIDTH                     (1U)
#define CTU_EFR_MRS_RE(x)                        (((uint16_t)(((uint16_t)(x)) << CTU_EFR_MRS_RE_SHIFT)) & CTU_EFR_MRS_RE_MASK)
#define CTU_EFR_SM_TO_MASK                       (0x2U)
#define CTU_EFR_SM_TO_SHIFT                      (1U)
#define CTU_EFR_SM_TO_WIDTH                      (1U)
#define CTU_EFR_SM_TO(x)                         (((uint16_t)(((uint16_t)(x)) << CTU_EFR_SM_TO_SHIFT)) & CTU_EFR_SM_TO_MASK)
#define CTU_EFR_ICE_MASK                         (0x4U)
#define CTU_EFR_ICE_SHIFT                        (2U)
#define CTU_EFR_ICE_WIDTH                        (1U)
#define CTU_EFR_ICE(x)                           (((uint16_t)(((uint16_t)(x)) << CTU_EFR_ICE_SHIFT)) & CTU_EFR_ICE_MASK)
#define CTU_EFR_MRS_O_MASK                       (0x8U)
#define CTU_EFR_MRS_O_SHIFT                      (3U)
#define CTU_EFR_MRS_O_WIDTH                      (1U)
#define CTU_EFR_MRS_O(x)                         (((uint16_t)(((uint16_t)(x)) << CTU_EFR_MRS_O_SHIFT)) & CTU_EFR_MRS_O_MASK)
#define CTU_EFR_TGS_OSM_MASK                     (0x10U)
#define CTU_EFR_TGS_OSM_SHIFT                    (4U)
#define CTU_EFR_TGS_OSM_WIDTH                    (1U)
#define CTU_EFR_TGS_OSM(x)                       (((uint16_t)(((uint16_t)(x)) << CTU_EFR_TGS_OSM_SHIFT)) & CTU_EFR_TGS_OSM_MASK)
#define CTU_EFR_ADC_OE_MASK                      (0x20U)
#define CTU_EFR_ADC_OE_SHIFT                     (5U)
#define CTU_EFR_ADC_OE_WIDTH                     (1U)
#define CTU_EFR_ADC_OE(x)                        (((uint16_t)(((uint16_t)(x)) << CTU_EFR_ADC_OE_SHIFT)) & CTU_EFR_ADC_OE_MASK)
#define CTU_EFR_ERRCMP_MASK                      (0x400U)
#define CTU_EFR_ERRCMP_SHIFT                     (10U)
#define CTU_EFR_ERRCMP_WIDTH                     (1U)
#define CTU_EFR_ERRCMP(x)                        (((uint16_t)(((uint16_t)(x)) << CTU_EFR_ERRCMP_SHIFT)) & CTU_EFR_ERRCMP_MASK)
#define CTU_EFR_CS_MASK                          (0x1000U)
#define CTU_EFR_CS_SHIFT                         (12U)
#define CTU_EFR_CS_WIDTH                         (1U)
#define CTU_EFR_CS(x)                            (((uint16_t)(((uint16_t)(x)) << CTU_EFR_CS_SHIFT)) & CTU_EFR_CS_MASK)
#define CTU_EFR_LIST_BE_MASK                     (0x2000U)
#define CTU_EFR_LIST_BE_SHIFT                    (13U)
#define CTU_EFR_LIST_BE_WIDTH                    (1U)
#define CTU_EFR_LIST_BE(x)                       (((uint16_t)(((uint16_t)(x)) << CTU_EFR_LIST_BE_SHIFT)) & CTU_EFR_LIST_BE_MASK)
/*! @} */

/*! @name IFR - Interrupt Flag Register */
/*! @{ */
#define CTU_IFR_MRS_I_MASK                       (0x1U)
#define CTU_IFR_MRS_I_SHIFT                      (0U)
#define CTU_IFR_MRS_I_WIDTH                      (1U)
#define CTU_IFR_MRS_I(x)                         (((uint16_t)(((uint16_t)(x)) << CTU_IFR_MRS_I_SHIFT)) & CTU_IFR_MRS_I_MASK)
#define CTU_IFR_T0_I_MASK                        (0x2U)
#define CTU_IFR_T0_I_SHIFT                       (1U)
#define CTU_IFR_T0_I_WIDTH                       (1U)
#define CTU_IFR_T0_I(x)                          (((uint16_t)(((uint16_t)(x)) << CTU_IFR_T0_I_SHIFT)) & CTU_IFR_T0_I_MASK)
#define CTU_IFR_T1_I_MASK                        (0x4U)
#define CTU_IFR_T1_I_SHIFT                       (2U)
#define CTU_IFR_T1_I_WIDTH                       (1U)
#define CTU_IFR_T1_I(x)                          (((uint16_t)(((uint16_t)(x)) << CTU_IFR_T1_I_SHIFT)) & CTU_IFR_T1_I_MASK)
#define CTU_IFR_T2_I_MASK                        (0x8U)
#define CTU_IFR_T2_I_SHIFT                       (3U)
#define CTU_IFR_T2_I_WIDTH                       (1U)
#define CTU_IFR_T2_I(x)                          (((uint16_t)(((uint16_t)(x)) << CTU_IFR_T2_I_SHIFT)) & CTU_IFR_T2_I_MASK)
#define CTU_IFR_T3_I_MASK                        (0x10U)
#define CTU_IFR_T3_I_SHIFT                       (4U)
#define CTU_IFR_T3_I_WIDTH                       (1U)
#define CTU_IFR_T3_I(x)                          (((uint16_t)(((uint16_t)(x)) << CTU_IFR_T3_I_SHIFT)) & CTU_IFR_T3_I_MASK)
#define CTU_IFR_T4_I_MASK                        (0x20U)
#define CTU_IFR_T4_I_SHIFT                       (5U)
#define CTU_IFR_T4_I_WIDTH                       (1U)
#define CTU_IFR_T4_I(x)                          (((uint16_t)(((uint16_t)(x)) << CTU_IFR_T4_I_SHIFT)) & CTU_IFR_T4_I_MASK)
#define CTU_IFR_T5_I_MASK                        (0x40U)
#define CTU_IFR_T5_I_SHIFT                       (6U)
#define CTU_IFR_T5_I_WIDTH                       (1U)
#define CTU_IFR_T5_I(x)                          (((uint16_t)(((uint16_t)(x)) << CTU_IFR_T5_I_SHIFT)) & CTU_IFR_T5_I_MASK)
#define CTU_IFR_T6_I_MASK                        (0x80U)
#define CTU_IFR_T6_I_SHIFT                       (7U)
#define CTU_IFR_T6_I_WIDTH                       (1U)
#define CTU_IFR_T6_I(x)                          (((uint16_t)(((uint16_t)(x)) << CTU_IFR_T6_I_SHIFT)) & CTU_IFR_T6_I_MASK)
#define CTU_IFR_T7_I_MASK                        (0x100U)
#define CTU_IFR_T7_I_SHIFT                       (8U)
#define CTU_IFR_T7_I_WIDTH                       (1U)
#define CTU_IFR_T7_I(x)                          (((uint16_t)(((uint16_t)(x)) << CTU_IFR_T7_I_SHIFT)) & CTU_IFR_T7_I_MASK)
#define CTU_IFR_ADC_I_MASK                       (0x200U)
#define CTU_IFR_ADC_I_SHIFT                      (9U)
#define CTU_IFR_ADC_I_WIDTH                      (1U)
#define CTU_IFR_ADC_I(x)                         (((uint16_t)(((uint16_t)(x)) << CTU_IFR_ADC_I_SHIFT)) & CTU_IFR_ADC_I_MASK)
#define CTU_IFR_SERR_A_MASK                      (0x400U)
#define CTU_IFR_SERR_A_SHIFT                     (10U)
#define CTU_IFR_SERR_A_WIDTH                     (1U)
#define CTU_IFR_SERR_A(x)                        (((uint16_t)(((uint16_t)(x)) << CTU_IFR_SERR_A_SHIFT)) & CTU_IFR_SERR_A_MASK)
#define CTU_IFR_SERR_B_MASK                      (0x800U)
#define CTU_IFR_SERR_B_SHIFT                     (11U)
#define CTU_IFR_SERR_B_WIDTH                     (1U)
#define CTU_IFR_SERR_B(x)                        (((uint16_t)(((uint16_t)(x)) << CTU_IFR_SERR_B_SHIFT)) & CTU_IFR_SERR_B_MASK)
/*! @} */

/*! @name IR - Interrupt/DMA Register */
/*! @{ */
#define CTU_IR_IEE_MASK                          (0x1U)
#define CTU_IR_IEE_SHIFT                         (0U)
#define CTU_IR_IEE_WIDTH                         (1U)
#define CTU_IR_IEE(x)                            (((uint16_t)(((uint16_t)(x)) << CTU_IR_IEE_SHIFT)) & CTU_IR_IEE_MASK)
#define CTU_IR_MRS_IE_MASK                       (0x2U)
#define CTU_IR_MRS_IE_SHIFT                      (1U)
#define CTU_IR_MRS_IE_WIDTH                      (1U)
#define CTU_IR_MRS_IE(x)                         (((uint16_t)(((uint16_t)(x)) << CTU_IR_MRS_IE_SHIFT)) & CTU_IR_MRS_IE_MASK)
#define CTU_IR_MRS_DMAE_MASK                     (0x4U)
#define CTU_IR_MRS_DMAE_SHIFT                    (2U)
#define CTU_IR_MRS_DMAE_WIDTH                    (1U)
#define CTU_IR_MRS_DMAE(x)                       (((uint16_t)(((uint16_t)(x)) << CTU_IR_MRS_DMAE_SHIFT)) & CTU_IR_MRS_DMAE_MASK)
#define CTU_IR_DMA_DE_MASK                       (0x8U)
#define CTU_IR_DMA_DE_SHIFT                      (3U)
#define CTU_IR_DMA_DE_WIDTH                      (1U)
#define CTU_IR_DMA_DE(x)                         (((uint16_t)(((uint16_t)(x)) << CTU_IR_DMA_DE_SHIFT)) & CTU_IR_DMA_DE_MASK)
#define CTU_IR_SAF_CNT_A_EN_MASK                 (0x10U)
#define CTU_IR_SAF_CNT_A_EN_SHIFT                (4U)
#define CTU_IR_SAF_CNT_A_EN_WIDTH                (1U)
#define CTU_IR_SAF_CNT_A_EN(x)                   (((uint16_t)(((uint16_t)(x)) << CTU_IR_SAF_CNT_A_EN_SHIFT)) & CTU_IR_SAF_CNT_A_EN_MASK)
#define CTU_IR_SAF_CNT_B_EN_MASK                 (0x20U)
#define CTU_IR_SAF_CNT_B_EN_SHIFT                (5U)
#define CTU_IR_SAF_CNT_B_EN_WIDTH                (1U)
#define CTU_IR_SAF_CNT_B_EN(x)                   (((uint16_t)(((uint16_t)(x)) << CTU_IR_SAF_CNT_B_EN_SHIFT)) & CTU_IR_SAF_CNT_B_EN_MASK)
#define CTU_IR_T0_IE_MASK                        (0x100U)
#define CTU_IR_T0_IE_SHIFT                       (8U)
#define CTU_IR_T0_IE_WIDTH                       (1U)
#define CTU_IR_T0_IE(x)                          (((uint16_t)(((uint16_t)(x)) << CTU_IR_T0_IE_SHIFT)) & CTU_IR_T0_IE_MASK)
#define CTU_IR_T1_IE_MASK                        (0x200U)
#define CTU_IR_T1_IE_SHIFT                       (9U)
#define CTU_IR_T1_IE_WIDTH                       (1U)
#define CTU_IR_T1_IE(x)                          (((uint16_t)(((uint16_t)(x)) << CTU_IR_T1_IE_SHIFT)) & CTU_IR_T1_IE_MASK)
#define CTU_IR_T2_IE_MASK                        (0x400U)
#define CTU_IR_T2_IE_SHIFT                       (10U)
#define CTU_IR_T2_IE_WIDTH                       (1U)
#define CTU_IR_T2_IE(x)                          (((uint16_t)(((uint16_t)(x)) << CTU_IR_T2_IE_SHIFT)) & CTU_IR_T2_IE_MASK)
#define CTU_IR_T3_IE_MASK                        (0x800U)
#define CTU_IR_T3_IE_SHIFT                       (11U)
#define CTU_IR_T3_IE_WIDTH                       (1U)
#define CTU_IR_T3_IE(x)                          (((uint16_t)(((uint16_t)(x)) << CTU_IR_T3_IE_SHIFT)) & CTU_IR_T3_IE_MASK)
#define CTU_IR_T4_IE_MASK                        (0x1000U)
#define CTU_IR_T4_IE_SHIFT                       (12U)
#define CTU_IR_T4_IE_WIDTH                       (1U)
#define CTU_IR_T4_IE(x)                          (((uint16_t)(((uint16_t)(x)) << CTU_IR_T4_IE_SHIFT)) & CTU_IR_T4_IE_MASK)
#define CTU_IR_T5_IE_MASK                        (0x2000U)
#define CTU_IR_T5_IE_SHIFT                       (13U)
#define CTU_IR_T5_IE_WIDTH                       (1U)
#define CTU_IR_T5_IE(x)                          (((uint16_t)(((uint16_t)(x)) << CTU_IR_T5_IE_SHIFT)) & CTU_IR_T5_IE_MASK)
#define CTU_IR_T6_IE_MASK                        (0x4000U)
#define CTU_IR_T6_IE_SHIFT                       (14U)
#define CTU_IR_T6_IE_WIDTH                       (1U)
#define CTU_IR_T6_IE(x)                          (((uint16_t)(((uint16_t)(x)) << CTU_IR_T6_IE_SHIFT)) & CTU_IR_T6_IE_MASK)
#define CTU_IR_T7_IE_MASK                        (0x8000U)
#define CTU_IR_T7_IE_SHIFT                       (15U)
#define CTU_IR_T7_IE_WIDTH                       (1U)
#define CTU_IR_T7_IE(x)                          (((uint16_t)(((uint16_t)(x)) << CTU_IR_T7_IE_SHIFT)) & CTU_IR_T7_IE_MASK)
/*! @} */

/*! @name COTR - Control ON Time Register */
/*! @{ */
#define CTU_COTR_COTGT_MASK                      (0xFFU)
#define CTU_COTR_COTGT_SHIFT                     (0U)
#define CTU_COTR_COTGT_WIDTH                     (8U)
#define CTU_COTR_COTGT(x)                        (((uint16_t)(((uint16_t)(x)) << CTU_COTR_COTGT_SHIFT)) & CTU_COTR_COTGT_MASK)
/*! @} */

/*! @name CR - Control Register */
/*! @{ */
#define CTU_CR_TGSISR_RE_MASK                    (0x1U)
#define CTU_CR_TGSISR_RE_SHIFT                   (0U)
#define CTU_CR_TGSISR_RE_WIDTH                   (1U)
#define CTU_CR_TGSISR_RE(x)                      (((uint16_t)(((uint16_t)(x)) << CTU_CR_TGSISR_RE_SHIFT)) & CTU_CR_TGSISR_RE_MASK)
#define CTU_CR_GRE_MASK                          (0x2U)
#define CTU_CR_GRE_SHIFT                         (1U)
#define CTU_CR_GRE_WIDTH                         (1U)
#define CTU_CR_GRE(x)                            (((uint16_t)(((uint16_t)(x)) << CTU_CR_GRE_SHIFT)) & CTU_CR_GRE_MASK)
#define CTU_CR_MRS_SG_MASK                       (0x4U)
#define CTU_CR_MRS_SG_SHIFT                      (2U)
#define CTU_CR_MRS_SG_WIDTH                      (1U)
#define CTU_CR_MRS_SG(x)                         (((uint16_t)(((uint16_t)(x)) << CTU_CR_MRS_SG_SHIFT)) & CTU_CR_MRS_SG_MASK)
#define CTU_CR_FGRE_MASK                         (0x8U)
#define CTU_CR_FGRE_SHIFT                        (3U)
#define CTU_CR_FGRE_WIDTH                        (1U)
#define CTU_CR_FGRE(x)                           (((uint16_t)(((uint16_t)(x)) << CTU_CR_FGRE_SHIFT)) & CTU_CR_FGRE_MASK)
#define CTU_CR_CGRE_MASK                         (0x10U)
#define CTU_CR_CGRE_SHIFT                        (4U)
#define CTU_CR_CGRE_WIDTH                        (1U)
#define CTU_CR_CGRE(x)                           (((uint16_t)(((uint16_t)(x)) << CTU_CR_CGRE_SHIFT)) & CTU_CR_CGRE_MASK)
#define CTU_CR_DFE_MASK                          (0x20U)
#define CTU_CR_DFE_SHIFT                         (5U)
#define CTU_CR_DFE_WIDTH                         (1U)
#define CTU_CR_DFE(x)                            (((uint16_t)(((uint16_t)(x)) << CTU_CR_DFE_SHIFT)) & CTU_CR_DFE_MASK)
#define CTU_CR_CTU_ODIS_MASK                     (0x40U)
#define CTU_CR_CTU_ODIS_SHIFT                    (6U)
#define CTU_CR_CTU_ODIS_WIDTH                    (1U)
#define CTU_CR_CTU_ODIS(x)                       (((uint16_t)(((uint16_t)(x)) << CTU_CR_CTU_ODIS_SHIFT)) & CTU_CR_CTU_ODIS_MASK)
#define CTU_CR_CTU_ADC_R_MASK                    (0x80U)
#define CTU_CR_CTU_ADC_R_SHIFT                   (7U)
#define CTU_CR_CTU_ADC_R_WIDTH                   (1U)
#define CTU_CR_CTU_ADC_R(x)                      (((uint16_t)(((uint16_t)(x)) << CTU_CR_CTU_ADC_R_SHIFT)) & CTU_CR_CTU_ADC_R_MASK)
#define CTU_CR_T0_SG_MASK                        (0x100U)
#define CTU_CR_T0_SG_SHIFT                       (8U)
#define CTU_CR_T0_SG_WIDTH                       (1U)
#define CTU_CR_T0_SG(x)                          (((uint16_t)(((uint16_t)(x)) << CTU_CR_T0_SG_SHIFT)) & CTU_CR_T0_SG_MASK)
#define CTU_CR_T1_SG_MASK                        (0x200U)
#define CTU_CR_T1_SG_SHIFT                       (9U)
#define CTU_CR_T1_SG_WIDTH                       (1U)
#define CTU_CR_T1_SG(x)                          (((uint16_t)(((uint16_t)(x)) << CTU_CR_T1_SG_SHIFT)) & CTU_CR_T1_SG_MASK)
#define CTU_CR_T2_SG_MASK                        (0x400U)
#define CTU_CR_T2_SG_SHIFT                       (10U)
#define CTU_CR_T2_SG_WIDTH                       (1U)
#define CTU_CR_T2_SG(x)                          (((uint16_t)(((uint16_t)(x)) << CTU_CR_T2_SG_SHIFT)) & CTU_CR_T2_SG_MASK)
#define CTU_CR_T3_SG_MASK                        (0x800U)
#define CTU_CR_T3_SG_SHIFT                       (11U)
#define CTU_CR_T3_SG_WIDTH                       (1U)
#define CTU_CR_T3_SG(x)                          (((uint16_t)(((uint16_t)(x)) << CTU_CR_T3_SG_SHIFT)) & CTU_CR_T3_SG_MASK)
#define CTU_CR_T4_SG_MASK                        (0x1000U)
#define CTU_CR_T4_SG_SHIFT                       (12U)
#define CTU_CR_T4_SG_WIDTH                       (1U)
#define CTU_CR_T4_SG(x)                          (((uint16_t)(((uint16_t)(x)) << CTU_CR_T4_SG_SHIFT)) & CTU_CR_T4_SG_MASK)
#define CTU_CR_T5_SG_MASK                        (0x2000U)
#define CTU_CR_T5_SG_SHIFT                       (13U)
#define CTU_CR_T5_SG_WIDTH                       (1U)
#define CTU_CR_T5_SG(x)                          (((uint16_t)(((uint16_t)(x)) << CTU_CR_T5_SG_SHIFT)) & CTU_CR_T5_SG_MASK)
#define CTU_CR_T6_SG_MASK                        (0x4000U)
#define CTU_CR_T6_SG_SHIFT                       (14U)
#define CTU_CR_T6_SG_WIDTH                       (1U)
#define CTU_CR_T6_SG(x)                          (((uint16_t)(((uint16_t)(x)) << CTU_CR_T6_SG_SHIFT)) & CTU_CR_T6_SG_MASK)
#define CTU_CR_T7_SG_MASK                        (0x8000U)
#define CTU_CR_T7_SG_SHIFT                       (15U)
#define CTU_CR_T7_SG_WIDTH                       (1U)
#define CTU_CR_T7_SG(x)                          (((uint16_t)(((uint16_t)(x)) << CTU_CR_T7_SG_SHIFT)) & CTU_CR_T7_SG_MASK)
/*! @} */

/*! @name DFR - Digital Filter Register */
/*! @{ */
#define CTU_DFR_FILTER_N_MASK                    (0xFFU)
#define CTU_DFR_FILTER_N_SHIFT                   (0U)
#define CTU_DFR_FILTER_N_WIDTH                   (8U)
#define CTU_DFR_FILTER_N(x)                      (((uint16_t)(((uint16_t)(x)) << CTU_DFR_FILTER_N_SHIFT)) & CTU_DFR_FILTER_N_MASK)
/*! @} */

/*! @name EXPAR - Expected Value A Register */
/*! @{ */
#define CTU_EXPAR_EXPA_MASK                      (0xFFFFU)
#define CTU_EXPAR_EXPA_SHIFT                     (0U)
#define CTU_EXPAR_EXPA_WIDTH                     (16U)
#define CTU_EXPAR_EXPA(x)                        (((uint16_t)(((uint16_t)(x)) << CTU_EXPAR_EXPA_SHIFT)) & CTU_EXPAR_EXPA_MASK)
/*! @} */

/*! @name EXPBR - Expected Value B Register */
/*! @{ */
#define CTU_EXPBR_EXPB_MASK                      (0xFFFFU)
#define CTU_EXPBR_EXPB_SHIFT                     (0U)
#define CTU_EXPBR_EXPB_WIDTH                     (16U)
#define CTU_EXPBR_EXPB(x)                        (((uint16_t)(((uint16_t)(x)) << CTU_EXPBR_EXPB_SHIFT)) & CTU_EXPBR_EXPB_MASK)
/*! @} */

/*! @name CNTRNGR - Counter Range Register */
/*! @{ */
#define CTU_CNTRNGR_CNTRNG_MASK                  (0xFFU)
#define CTU_CNTRNGR_CNTRNG_SHIFT                 (0U)
#define CTU_CNTRNGR_CNTRNG_WIDTH                 (8U)
#define CTU_CNTRNGR_CNTRNG(x)                    (((uint16_t)(((uint16_t)(x)) << CTU_CNTRNGR_CNTRNG_SHIFT)) & CTU_CNTRNGR_CNTRNG_MASK)
/*! @} */

/*! @name LISTCSR - List Control/Status Register */
/*! @{ */
#define CTU_LISTCSR_PAR_LIST_MASK                (0x1U)
#define CTU_LISTCSR_PAR_LIST_SHIFT               (0U)
#define CTU_LISTCSR_PAR_LIST_WIDTH               (1U)
#define CTU_LISTCSR_PAR_LIST(x)                  (((uint32_t)(((uint32_t)(x)) << CTU_LISTCSR_PAR_LIST_SHIFT)) & CTU_LISTCSR_PAR_LIST_MASK)
#define CTU_LISTCSR_LIST0_ADDR_MASK              (0x1F0000U)
#define CTU_LISTCSR_LIST0_ADDR_SHIFT             (16U)
#define CTU_LISTCSR_LIST0_ADDR_WIDTH             (5U)
#define CTU_LISTCSR_LIST0_ADDR(x)                (((uint32_t)(((uint32_t)(x)) << CTU_LISTCSR_LIST0_ADDR_SHIFT)) & CTU_LISTCSR_LIST0_ADDR_MASK)
#define CTU_LISTCSR_LIST0_BLK_MASK               (0x800000U)
#define CTU_LISTCSR_LIST0_BLK_SHIFT              (23U)
#define CTU_LISTCSR_LIST0_BLK_WIDTH              (1U)
#define CTU_LISTCSR_LIST0_BLK(x)                 (((uint32_t)(((uint32_t)(x)) << CTU_LISTCSR_LIST0_BLK_SHIFT)) & CTU_LISTCSR_LIST0_BLK_MASK)
#define CTU_LISTCSR_LIST1_ADDR_MASK              (0x1F000000U)
#define CTU_LISTCSR_LIST1_ADDR_SHIFT             (24U)
#define CTU_LISTCSR_LIST1_ADDR_WIDTH             (5U)
#define CTU_LISTCSR_LIST1_ADDR(x)                (((uint32_t)(((uint32_t)(x)) << CTU_LISTCSR_LIST1_ADDR_SHIFT)) & CTU_LISTCSR_LIST1_ADDR_MASK)
#define CTU_LISTCSR_LIST1_BLK_MASK               (0x80000000U)
#define CTU_LISTCSR_LIST1_BLK_SHIFT              (31U)
#define CTU_LISTCSR_LIST1_BLK_WIDTH              (1U)
#define CTU_LISTCSR_LIST1_BLK(x)                 (((uint32_t)(((uint32_t)(x)) << CTU_LISTCSR_LIST1_BLK_SHIFT)) & CTU_LISTCSR_LIST1_BLK_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group CTU_Register_Masks */


/*!
 * @}
 */ /* end of group CTU_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- DDR_GPR Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup DDR_GPR_Peripheral_Access_Layer DDR_GPR Peripheral Access Layer
 * @{
 */

/** DDR_GPR - Register Layout Typedef */
typedef struct {
  __IO uint32_t DDR_CONFIG_0;                      /**< Configuration 0 Register, offset: 0x0 */
  __IO uint32_t DDR_CONFIG_1;                      /**< Configuration 1 Register, offset: 0x4 */
  __IO uint32_t DDR_CONFIG_2;                      /**< Configuration 2 Register, offset: 0x8 */
  __I  uint32_t DDR_CONFIG_3;                      /**< Configuration 3 Register, offset: 0xC */
  __I  uint32_t DDR_CONFIG_4;                      /**< Configuration 4 Register, offset: 0x10 */
  __IO uint32_t DDR_CONFIG_5;                      /**< Configuration 5 Register, offset: 0x14 */
  __I  uint32_t DDR_CONFIG_6;                      /**< Configuration 6 Register, offset: 0x18 */
  __IO uint32_t DDR_RET_CONTROL;                   /**< LP3 IO Retention Control Register, offset: 0x1C */
} DDR_GPR_Type, *DDR_GPR_MemMapPtr;

/** Number of instances of the DDR_GPR module. */
#define DDR_GPR_INSTANCE_COUNT                   (1u)

/* DDR_GPR - Peripheral instance base addresses */
/** Peripheral DDR_GPR base address */
#define DDR_GPR_BASE                             (0x4007C600u)
/** Peripheral DDR_GPR base pointer */
#define DDR_GPR                                  ((DDR_GPR_Type *)DDR_GPR_BASE)
/** Array initializer of DDR_GPR peripheral base addresses */
#define DDR_GPR_BASE_ADDRS                       { DDR_GPR_BASE }
/** Array initializer of DDR_GPR peripheral base pointers */
#define DDR_GPR_BASE_PTRS                        { DDR_GPR }

/* ----------------------------------------------------------------------------
   -- DDR_GPR Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup DDR_GPR_Register_Masks DDR_GPR Register Masks
 * @{
 */

/*! @name DDR_CONFIG_0 - Configuration 0 Register */
/*! @{ */
#define DDR_GPR_DDR_CONFIG_0_RESERVED_0_MASK     (0x3U)
#define DDR_GPR_DDR_CONFIG_0_RESERVED_0_SHIFT    (0U)
#define DDR_GPR_DDR_CONFIG_0_RESERVED_0_WIDTH    (2U)
#define DDR_GPR_DDR_CONFIG_0_RESERVED_0(x)       (((uint32_t)(((uint32_t)(x)) << DDR_GPR_DDR_CONFIG_0_RESERVED_0_SHIFT)) & DDR_GPR_DDR_CONFIG_0_RESERVED_0_MASK)
#define DDR_GPR_DDR_CONFIG_0_RESERVED_1_MASK     (0xCU)
#define DDR_GPR_DDR_CONFIG_0_RESERVED_1_SHIFT    (2U)
#define DDR_GPR_DDR_CONFIG_0_RESERVED_1_WIDTH    (2U)
#define DDR_GPR_DDR_CONFIG_0_RESERVED_1(x)       (((uint32_t)(((uint32_t)(x)) << DDR_GPR_DDR_CONFIG_0_RESERVED_1_SHIFT)) & DDR_GPR_DDR_CONFIG_0_RESERVED_1_MASK)
#define DDR_GPR_DDR_CONFIG_0_pa_rmask_MASK       (0x3F0U)
#define DDR_GPR_DDR_CONFIG_0_pa_rmask_SHIFT      (4U)
#define DDR_GPR_DDR_CONFIG_0_pa_rmask_WIDTH      (6U)
#define DDR_GPR_DDR_CONFIG_0_pa_rmask(x)         (((uint32_t)(((uint32_t)(x)) << DDR_GPR_DDR_CONFIG_0_pa_rmask_SHIFT)) & DDR_GPR_DDR_CONFIG_0_pa_rmask_MASK)
#define DDR_GPR_DDR_CONFIG_0_pa_wmask_MASK       (0x1C00U)
#define DDR_GPR_DDR_CONFIG_0_pa_wmask_SHIFT      (10U)
#define DDR_GPR_DDR_CONFIG_0_pa_wmask_WIDTH      (3U)
#define DDR_GPR_DDR_CONFIG_0_pa_wmask(x)         (((uint32_t)(((uint32_t)(x)) << DDR_GPR_DDR_CONFIG_0_pa_wmask_SHIFT)) & DDR_GPR_DDR_CONFIG_0_pa_wmask_MASK)
#define DDR_GPR_DDR_CONFIG_0_RESERVED_2_MASK     (0x2000U)
#define DDR_GPR_DDR_CONFIG_0_RESERVED_2_SHIFT    (13U)
#define DDR_GPR_DDR_CONFIG_0_RESERVED_2_WIDTH    (1U)
#define DDR_GPR_DDR_CONFIG_0_RESERVED_2(x)       (((uint32_t)(((uint32_t)(x)) << DDR_GPR_DDR_CONFIG_0_RESERVED_2_SHIFT)) & DDR_GPR_DDR_CONFIG_0_RESERVED_2_MASK)
#define DDR_GPR_DDR_CONFIG_0_memory_ret_MASK     (0x4000U)
#define DDR_GPR_DDR_CONFIG_0_memory_ret_SHIFT    (14U)
#define DDR_GPR_DDR_CONFIG_0_memory_ret_WIDTH    (1U)
#define DDR_GPR_DDR_CONFIG_0_memory_ret(x)       (((uint32_t)(((uint32_t)(x)) << DDR_GPR_DDR_CONFIG_0_memory_ret_SHIFT)) & DDR_GPR_DDR_CONFIG_0_memory_ret_MASK)
#define DDR_GPR_DDR_CONFIG_0_RESERVED_4_MASK     (0x8000U)
#define DDR_GPR_DDR_CONFIG_0_RESERVED_4_SHIFT    (15U)
#define DDR_GPR_DDR_CONFIG_0_RESERVED_4_WIDTH    (1U)
#define DDR_GPR_DDR_CONFIG_0_RESERVED_4(x)       (((uint32_t)(((uint32_t)(x)) << DDR_GPR_DDR_CONFIG_0_RESERVED_4_SHIFT)) & DDR_GPR_DDR_CONFIG_0_RESERVED_4_MASK)
#define DDR_GPR_DDR_CONFIG_0_WRECC_CREDIR_CNT_MASK (0x7F0000U)
#define DDR_GPR_DDR_CONFIG_0_WRECC_CREDIR_CNT_SHIFT (16U)
#define DDR_GPR_DDR_CONFIG_0_WRECC_CREDIR_CNT_WIDTH (7U)
#define DDR_GPR_DDR_CONFIG_0_WRECC_CREDIR_CNT(x) (((uint32_t)(((uint32_t)(x)) << DDR_GPR_DDR_CONFIG_0_WRECC_CREDIR_CNT_SHIFT)) & DDR_GPR_DDR_CONFIG_0_WRECC_CREDIR_CNT_MASK)
#define DDR_GPR_DDR_CONFIG_0_sbrAddressStartMask_35_32_MASK (0x7800000U)
#define DDR_GPR_DDR_CONFIG_0_sbrAddressStartMask_35_32_SHIFT (23U)
#define DDR_GPR_DDR_CONFIG_0_sbrAddressStartMask_35_32_WIDTH (4U)
#define DDR_GPR_DDR_CONFIG_0_sbrAddressStartMask_35_32(x) (((uint32_t)(((uint32_t)(x)) << DDR_GPR_DDR_CONFIG_0_sbrAddressStartMask_35_32_SHIFT)) & DDR_GPR_DDR_CONFIG_0_sbrAddressStartMask_35_32_MASK)
#define DDR_GPR_DDR_CONFIG_0_sbrAddressRangeMask_35_32_MASK (0x78000000U)
#define DDR_GPR_DDR_CONFIG_0_sbrAddressRangeMask_35_32_SHIFT (27U)
#define DDR_GPR_DDR_CONFIG_0_sbrAddressRangeMask_35_32_WIDTH (4U)
#define DDR_GPR_DDR_CONFIG_0_sbrAddressRangeMask_35_32(x) (((uint32_t)(((uint32_t)(x)) << DDR_GPR_DDR_CONFIG_0_sbrAddressRangeMask_35_32_SHIFT)) & DDR_GPR_DDR_CONFIG_0_sbrAddressRangeMask_35_32_MASK)
#define DDR_GPR_DDR_CONFIG_0_PERF_CNT_FULL_MASK_MASK (0x80000000U)
#define DDR_GPR_DDR_CONFIG_0_PERF_CNT_FULL_MASK_SHIFT (31U)
#define DDR_GPR_DDR_CONFIG_0_PERF_CNT_FULL_MASK_WIDTH (1U)
#define DDR_GPR_DDR_CONFIG_0_PERF_CNT_FULL_MASK(x) (((uint32_t)(((uint32_t)(x)) << DDR_GPR_DDR_CONFIG_0_PERF_CNT_FULL_MASK_SHIFT)) & DDR_GPR_DDR_CONFIG_0_PERF_CNT_FULL_MASK_MASK)
/*! @} */

/*! @name DDR_CONFIG_1 - Configuration 1 Register */
/*! @{ */
#define DDR_GPR_DDR_CONFIG_1_sbrAddressStartMask_MASK (0xFFFFFFFFU)
#define DDR_GPR_DDR_CONFIG_1_sbrAddressStartMask_SHIFT (0U)
#define DDR_GPR_DDR_CONFIG_1_sbrAddressStartMask_WIDTH (32U)
#define DDR_GPR_DDR_CONFIG_1_sbrAddressStartMask(x) (((uint32_t)(((uint32_t)(x)) << DDR_GPR_DDR_CONFIG_1_sbrAddressStartMask_SHIFT)) & DDR_GPR_DDR_CONFIG_1_sbrAddressStartMask_MASK)
/*! @} */

/*! @name DDR_CONFIG_2 - Configuration 2 Register */
/*! @{ */
#define DDR_GPR_DDR_CONFIG_2_sbrAddressRangeMask_MASK (0xFFFFFFFFU)
#define DDR_GPR_DDR_CONFIG_2_sbrAddressRangeMask_SHIFT (0U)
#define DDR_GPR_DDR_CONFIG_2_sbrAddressRangeMask_WIDTH (32U)
#define DDR_GPR_DDR_CONFIG_2_sbrAddressRangeMask(x) (((uint32_t)(((uint32_t)(x)) << DDR_GPR_DDR_CONFIG_2_sbrAddressRangeMask_SHIFT)) & DDR_GPR_DDR_CONFIG_2_sbrAddressRangeMask_MASK)
/*! @} */

/*! @name DDR_CONFIG_3 - Configuration 3 Register */
/*! @{ */
#define DDR_GPR_DDR_CONFIG_3_dbg_dfi_ie_cmd_type_MASK (0x7U)
#define DDR_GPR_DDR_CONFIG_3_dbg_dfi_ie_cmd_type_SHIFT (0U)
#define DDR_GPR_DDR_CONFIG_3_dbg_dfi_ie_cmd_type_WIDTH (3U)
#define DDR_GPR_DDR_CONFIG_3_dbg_dfi_ie_cmd_type(x) (((uint32_t)(((uint32_t)(x)) << DDR_GPR_DDR_CONFIG_3_dbg_dfi_ie_cmd_type_SHIFT)) & DDR_GPR_DDR_CONFIG_3_dbg_dfi_ie_cmd_type_MASK)
#define DDR_GPR_DDR_CONFIG_3_hif_refresh_req_bank_MASK (0x1F8U)
#define DDR_GPR_DDR_CONFIG_3_hif_refresh_req_bank_SHIFT (3U)
#define DDR_GPR_DDR_CONFIG_3_hif_refresh_req_bank_WIDTH (6U)
#define DDR_GPR_DDR_CONFIG_3_hif_refresh_req_bank(x) (((uint32_t)(((uint32_t)(x)) << DDR_GPR_DDR_CONFIG_3_hif_refresh_req_bank_SHIFT)) & DDR_GPR_DDR_CONFIG_3_hif_refresh_req_bank_MASK)
#define DDR_GPR_DDR_CONFIG_3_raqb_wcount_0_MASK  (0x1E00U)
#define DDR_GPR_DDR_CONFIG_3_raqb_wcount_0_SHIFT (9U)
#define DDR_GPR_DDR_CONFIG_3_raqb_wcount_0_WIDTH (4U)
#define DDR_GPR_DDR_CONFIG_3_raqb_wcount_0(x)    (((uint32_t)(((uint32_t)(x)) << DDR_GPR_DDR_CONFIG_3_raqb_wcount_0_SHIFT)) & DDR_GPR_DDR_CONFIG_3_raqb_wcount_0_MASK)
#define DDR_GPR_DDR_CONFIG_3_raqb_wcount_1_MASK  (0x1E000U)
#define DDR_GPR_DDR_CONFIG_3_raqb_wcount_1_SHIFT (13U)
#define DDR_GPR_DDR_CONFIG_3_raqb_wcount_1_WIDTH (4U)
#define DDR_GPR_DDR_CONFIG_3_raqb_wcount_1(x)    (((uint32_t)(((uint32_t)(x)) << DDR_GPR_DDR_CONFIG_3_raqb_wcount_1_SHIFT)) & DDR_GPR_DDR_CONFIG_3_raqb_wcount_1_MASK)
#define DDR_GPR_DDR_CONFIG_3_raqb_wcount_2_MASK  (0x1E0000U)
#define DDR_GPR_DDR_CONFIG_3_raqb_wcount_2_SHIFT (17U)
#define DDR_GPR_DDR_CONFIG_3_raqb_wcount_2_WIDTH (4U)
#define DDR_GPR_DDR_CONFIG_3_raqb_wcount_2(x)    (((uint32_t)(((uint32_t)(x)) << DDR_GPR_DDR_CONFIG_3_raqb_wcount_2_SHIFT)) & DDR_GPR_DDR_CONFIG_3_raqb_wcount_2_MASK)
#define DDR_GPR_DDR_CONFIG_3_stat_ddrc_reg_selfref_type_MASK (0x600000U)
#define DDR_GPR_DDR_CONFIG_3_stat_ddrc_reg_selfref_type_SHIFT (21U)
#define DDR_GPR_DDR_CONFIG_3_stat_ddrc_reg_selfref_type_WIDTH (2U)
#define DDR_GPR_DDR_CONFIG_3_stat_ddrc_reg_selfref_type(x) (((uint32_t)(((uint32_t)(x)) << DDR_GPR_DDR_CONFIG_3_stat_ddrc_reg_selfref_type_SHIFT)) & DDR_GPR_DDR_CONFIG_3_stat_ddrc_reg_selfref_type_MASK)
#define DDR_GPR_DDR_CONFIG_3_Reserved_MASK       (0xFF800000U)
#define DDR_GPR_DDR_CONFIG_3_Reserved_SHIFT      (23U)
#define DDR_GPR_DDR_CONFIG_3_Reserved_WIDTH      (9U)
#define DDR_GPR_DDR_CONFIG_3_Reserved(x)         (((uint32_t)(((uint32_t)(x)) << DDR_GPR_DDR_CONFIG_3_Reserved_SHIFT)) & DDR_GPR_DDR_CONFIG_3_Reserved_MASK)
/*! @} */

/*! @name DDR_CONFIG_4 - Configuration 4 Register */
/*! @{ */
#define DDR_GPR_DDR_CONFIG_4_raqr_wcount_0_MASK  (0xFU)
#define DDR_GPR_DDR_CONFIG_4_raqr_wcount_0_SHIFT (0U)
#define DDR_GPR_DDR_CONFIG_4_raqr_wcount_0_WIDTH (4U)
#define DDR_GPR_DDR_CONFIG_4_raqr_wcount_0(x)    (((uint32_t)(((uint32_t)(x)) << DDR_GPR_DDR_CONFIG_4_raqr_wcount_0_SHIFT)) & DDR_GPR_DDR_CONFIG_4_raqr_wcount_0_MASK)
#define DDR_GPR_DDR_CONFIG_4_raqr_wcount_1_MASK  (0xF0U)
#define DDR_GPR_DDR_CONFIG_4_raqr_wcount_1_SHIFT (4U)
#define DDR_GPR_DDR_CONFIG_4_raqr_wcount_1_WIDTH (4U)
#define DDR_GPR_DDR_CONFIG_4_raqr_wcount_1(x)    (((uint32_t)(((uint32_t)(x)) << DDR_GPR_DDR_CONFIG_4_raqr_wcount_1_SHIFT)) & DDR_GPR_DDR_CONFIG_4_raqr_wcount_1_MASK)
#define DDR_GPR_DDR_CONFIG_4_raqr_wcount_2_MASK  (0xF00U)
#define DDR_GPR_DDR_CONFIG_4_raqr_wcount_2_SHIFT (8U)
#define DDR_GPR_DDR_CONFIG_4_raqr_wcount_2_WIDTH (4U)
#define DDR_GPR_DDR_CONFIG_4_raqr_wcount_2(x)    (((uint32_t)(((uint32_t)(x)) << DDR_GPR_DDR_CONFIG_4_raqr_wcount_2_SHIFT)) & DDR_GPR_DDR_CONFIG_4_raqr_wcount_2_MASK)
#define DDR_GPR_DDR_CONFIG_4_waq_wcount_0_MASK   (0xF000U)
#define DDR_GPR_DDR_CONFIG_4_waq_wcount_0_SHIFT  (12U)
#define DDR_GPR_DDR_CONFIG_4_waq_wcount_0_WIDTH  (4U)
#define DDR_GPR_DDR_CONFIG_4_waq_wcount_0(x)     (((uint32_t)(((uint32_t)(x)) << DDR_GPR_DDR_CONFIG_4_waq_wcount_0_SHIFT)) & DDR_GPR_DDR_CONFIG_4_waq_wcount_0_MASK)
#define DDR_GPR_DDR_CONFIG_4_waq_wcount_1_MASK   (0xF0000U)
#define DDR_GPR_DDR_CONFIG_4_waq_wcount_1_SHIFT  (16U)
#define DDR_GPR_DDR_CONFIG_4_waq_wcount_1_WIDTH  (4U)
#define DDR_GPR_DDR_CONFIG_4_waq_wcount_1(x)     (((uint32_t)(((uint32_t)(x)) << DDR_GPR_DDR_CONFIG_4_waq_wcount_1_SHIFT)) & DDR_GPR_DDR_CONFIG_4_waq_wcount_1_MASK)
#define DDR_GPR_DDR_CONFIG_4_waq_wcount_2_MASK   (0xF00000U)
#define DDR_GPR_DDR_CONFIG_4_waq_wcount_2_SHIFT  (20U)
#define DDR_GPR_DDR_CONFIG_4_waq_wcount_2_WIDTH  (4U)
#define DDR_GPR_DDR_CONFIG_4_waq_wcount_2(x)     (((uint32_t)(((uint32_t)(x)) << DDR_GPR_DDR_CONFIG_4_waq_wcount_2_SHIFT)) & DDR_GPR_DDR_CONFIG_4_waq_wcount_2_MASK)
#define DDR_GPR_DDR_CONFIG_4_Reserved_MASK       (0x80000000U)
#define DDR_GPR_DDR_CONFIG_4_Reserved_SHIFT      (31U)
#define DDR_GPR_DDR_CONFIG_4_Reserved_WIDTH      (1U)
#define DDR_GPR_DDR_CONFIG_4_Reserved(x)         (((uint32_t)(((uint32_t)(x)) << DDR_GPR_DDR_CONFIG_4_Reserved_SHIFT)) & DDR_GPR_DDR_CONFIG_4_Reserved_MASK)
/*! @} */

/*! @name DDR_CONFIG_5 - Configuration 5 Register */
/*! @{ */
#define DDR_GPR_DDR_CONFIG_5_raqr_pop_0_MASK     (0x1U)
#define DDR_GPR_DDR_CONFIG_5_raqr_pop_0_SHIFT    (0U)
#define DDR_GPR_DDR_CONFIG_5_raqr_pop_0_WIDTH    (1U)
#define DDR_GPR_DDR_CONFIG_5_raqr_pop_0(x)       (((uint32_t)(((uint32_t)(x)) << DDR_GPR_DDR_CONFIG_5_raqr_pop_0_SHIFT)) & DDR_GPR_DDR_CONFIG_5_raqr_pop_0_MASK)
#define DDR_GPR_DDR_CONFIG_5_raqr_pop_1_MASK     (0x2U)
#define DDR_GPR_DDR_CONFIG_5_raqr_pop_1_SHIFT    (1U)
#define DDR_GPR_DDR_CONFIG_5_raqr_pop_1_WIDTH    (1U)
#define DDR_GPR_DDR_CONFIG_5_raqr_pop_1(x)       (((uint32_t)(((uint32_t)(x)) << DDR_GPR_DDR_CONFIG_5_raqr_pop_1_SHIFT)) & DDR_GPR_DDR_CONFIG_5_raqr_pop_1_MASK)
#define DDR_GPR_DDR_CONFIG_5_raqr_pop_2_MASK     (0x4U)
#define DDR_GPR_DDR_CONFIG_5_raqr_pop_2_SHIFT    (2U)
#define DDR_GPR_DDR_CONFIG_5_raqr_pop_2_WIDTH    (1U)
#define DDR_GPR_DDR_CONFIG_5_raqr_pop_2(x)       (((uint32_t)(((uint32_t)(x)) << DDR_GPR_DDR_CONFIG_5_raqr_pop_2_SHIFT)) & DDR_GPR_DDR_CONFIG_5_raqr_pop_2_MASK)
#define DDR_GPR_DDR_CONFIG_5_raqr_push_0_MASK    (0x8U)
#define DDR_GPR_DDR_CONFIG_5_raqr_push_0_SHIFT   (3U)
#define DDR_GPR_DDR_CONFIG_5_raqr_push_0_WIDTH   (1U)
#define DDR_GPR_DDR_CONFIG_5_raqr_push_0(x)      (((uint32_t)(((uint32_t)(x)) << DDR_GPR_DDR_CONFIG_5_raqr_push_0_SHIFT)) & DDR_GPR_DDR_CONFIG_5_raqr_push_0_MASK)
#define DDR_GPR_DDR_CONFIG_5_raqr_push_1_MASK    (0x10U)
#define DDR_GPR_DDR_CONFIG_5_raqr_push_1_SHIFT   (4U)
#define DDR_GPR_DDR_CONFIG_5_raqr_push_1_WIDTH   (1U)
#define DDR_GPR_DDR_CONFIG_5_raqr_push_1(x)      (((uint32_t)(((uint32_t)(x)) << DDR_GPR_DDR_CONFIG_5_raqr_push_1_SHIFT)) & DDR_GPR_DDR_CONFIG_5_raqr_push_1_MASK)
#define DDR_GPR_DDR_CONFIG_5_raqr_push_2_MASK    (0x20U)
#define DDR_GPR_DDR_CONFIG_5_raqr_push_2_SHIFT   (5U)
#define DDR_GPR_DDR_CONFIG_5_raqr_push_2_WIDTH   (1U)
#define DDR_GPR_DDR_CONFIG_5_raqr_push_2(x)      (((uint32_t)(((uint32_t)(x)) << DDR_GPR_DDR_CONFIG_5_raqr_push_2_SHIFT)) & DDR_GPR_DDR_CONFIG_5_raqr_push_2_MASK)
#define DDR_GPR_DDR_CONFIG_5_raq_split_0_MASK    (0x40U)
#define DDR_GPR_DDR_CONFIG_5_raq_split_0_SHIFT   (6U)
#define DDR_GPR_DDR_CONFIG_5_raq_split_0_WIDTH   (1U)
#define DDR_GPR_DDR_CONFIG_5_raq_split_0(x)      (((uint32_t)(((uint32_t)(x)) << DDR_GPR_DDR_CONFIG_5_raq_split_0_SHIFT)) & DDR_GPR_DDR_CONFIG_5_raq_split_0_MASK)
#define DDR_GPR_DDR_CONFIG_5_raq_split_1_MASK    (0x80U)
#define DDR_GPR_DDR_CONFIG_5_raq_split_1_SHIFT   (7U)
#define DDR_GPR_DDR_CONFIG_5_raq_split_1_WIDTH   (1U)
#define DDR_GPR_DDR_CONFIG_5_raq_split_1(x)      (((uint32_t)(((uint32_t)(x)) << DDR_GPR_DDR_CONFIG_5_raq_split_1_SHIFT)) & DDR_GPR_DDR_CONFIG_5_raq_split_1_MASK)
#define DDR_GPR_DDR_CONFIG_5_raq_split_2_MASK    (0x100U)
#define DDR_GPR_DDR_CONFIG_5_raq_split_2_SHIFT   (8U)
#define DDR_GPR_DDR_CONFIG_5_raq_split_2_WIDTH   (1U)
#define DDR_GPR_DDR_CONFIG_5_raq_split_2(x)      (((uint32_t)(((uint32_t)(x)) << DDR_GPR_DDR_CONFIG_5_raq_split_2_SHIFT)) & DDR_GPR_DDR_CONFIG_5_raq_split_2_MASK)
#define DDR_GPR_DDR_CONFIG_5_dummy_rccu_set_axi0_MASK (0x200U)
#define DDR_GPR_DDR_CONFIG_5_dummy_rccu_set_axi0_SHIFT (9U)
#define DDR_GPR_DDR_CONFIG_5_dummy_rccu_set_axi0_WIDTH (1U)
#define DDR_GPR_DDR_CONFIG_5_dummy_rccu_set_axi0(x) (((uint32_t)(((uint32_t)(x)) << DDR_GPR_DDR_CONFIG_5_dummy_rccu_set_axi0_SHIFT)) & DDR_GPR_DDR_CONFIG_5_dummy_rccu_set_axi0_MASK)
#define DDR_GPR_DDR_CONFIG_5_main_rccu_set_axi0_MASK (0x400U)
#define DDR_GPR_DDR_CONFIG_5_main_rccu_set_axi0_SHIFT (10U)
#define DDR_GPR_DDR_CONFIG_5_main_rccu_set_axi0_WIDTH (1U)
#define DDR_GPR_DDR_CONFIG_5_main_rccu_set_axi0(x) (((uint32_t)(((uint32_t)(x)) << DDR_GPR_DDR_CONFIG_5_main_rccu_set_axi0_SHIFT)) & DDR_GPR_DDR_CONFIG_5_main_rccu_set_axi0_MASK)
#define DDR_GPR_DDR_CONFIG_5_dummy_rccu_clr_axi0_MASK (0x800U)
#define DDR_GPR_DDR_CONFIG_5_dummy_rccu_clr_axi0_SHIFT (11U)
#define DDR_GPR_DDR_CONFIG_5_dummy_rccu_clr_axi0_WIDTH (1U)
#define DDR_GPR_DDR_CONFIG_5_dummy_rccu_clr_axi0(x) (((uint32_t)(((uint32_t)(x)) << DDR_GPR_DDR_CONFIG_5_dummy_rccu_clr_axi0_SHIFT)) & DDR_GPR_DDR_CONFIG_5_dummy_rccu_clr_axi0_MASK)
#define DDR_GPR_DDR_CONFIG_5_main_rccu_clr_axi0_MASK (0x1000U)
#define DDR_GPR_DDR_CONFIG_5_main_rccu_clr_axi0_SHIFT (12U)
#define DDR_GPR_DDR_CONFIG_5_main_rccu_clr_axi0_WIDTH (1U)
#define DDR_GPR_DDR_CONFIG_5_main_rccu_clr_axi0(x) (((uint32_t)(((uint32_t)(x)) << DDR_GPR_DDR_CONFIG_5_main_rccu_clr_axi0_SHIFT)) & DDR_GPR_DDR_CONFIG_5_main_rccu_clr_axi0_MASK)
#define DDR_GPR_DDR_CONFIG_5_dummy_rccu_set_axi1_MASK (0x2000U)
#define DDR_GPR_DDR_CONFIG_5_dummy_rccu_set_axi1_SHIFT (13U)
#define DDR_GPR_DDR_CONFIG_5_dummy_rccu_set_axi1_WIDTH (1U)
#define DDR_GPR_DDR_CONFIG_5_dummy_rccu_set_axi1(x) (((uint32_t)(((uint32_t)(x)) << DDR_GPR_DDR_CONFIG_5_dummy_rccu_set_axi1_SHIFT)) & DDR_GPR_DDR_CONFIG_5_dummy_rccu_set_axi1_MASK)
#define DDR_GPR_DDR_CONFIG_5_main_rccu_set_axi1_MASK (0x4000U)
#define DDR_GPR_DDR_CONFIG_5_main_rccu_set_axi1_SHIFT (14U)
#define DDR_GPR_DDR_CONFIG_5_main_rccu_set_axi1_WIDTH (1U)
#define DDR_GPR_DDR_CONFIG_5_main_rccu_set_axi1(x) (((uint32_t)(((uint32_t)(x)) << DDR_GPR_DDR_CONFIG_5_main_rccu_set_axi1_SHIFT)) & DDR_GPR_DDR_CONFIG_5_main_rccu_set_axi1_MASK)
#define DDR_GPR_DDR_CONFIG_5_dummy_rccu_clr_axi1_MASK (0x8000U)
#define DDR_GPR_DDR_CONFIG_5_dummy_rccu_clr_axi1_SHIFT (15U)
#define DDR_GPR_DDR_CONFIG_5_dummy_rccu_clr_axi1_WIDTH (1U)
#define DDR_GPR_DDR_CONFIG_5_dummy_rccu_clr_axi1(x) (((uint32_t)(((uint32_t)(x)) << DDR_GPR_DDR_CONFIG_5_dummy_rccu_clr_axi1_SHIFT)) & DDR_GPR_DDR_CONFIG_5_dummy_rccu_clr_axi1_MASK)
#define DDR_GPR_DDR_CONFIG_5_main_rccu_clr_axi1_MASK (0x10000U)
#define DDR_GPR_DDR_CONFIG_5_main_rccu_clr_axi1_SHIFT (16U)
#define DDR_GPR_DDR_CONFIG_5_main_rccu_clr_axi1_WIDTH (1U)
#define DDR_GPR_DDR_CONFIG_5_main_rccu_clr_axi1(x) (((uint32_t)(((uint32_t)(x)) << DDR_GPR_DDR_CONFIG_5_main_rccu_clr_axi1_SHIFT)) & DDR_GPR_DDR_CONFIG_5_main_rccu_clr_axi1_MASK)
#define DDR_GPR_DDR_CONFIG_5_dummy_rccu_set_axi2_MASK (0x20000U)
#define DDR_GPR_DDR_CONFIG_5_dummy_rccu_set_axi2_SHIFT (17U)
#define DDR_GPR_DDR_CONFIG_5_dummy_rccu_set_axi2_WIDTH (1U)
#define DDR_GPR_DDR_CONFIG_5_dummy_rccu_set_axi2(x) (((uint32_t)(((uint32_t)(x)) << DDR_GPR_DDR_CONFIG_5_dummy_rccu_set_axi2_SHIFT)) & DDR_GPR_DDR_CONFIG_5_dummy_rccu_set_axi2_MASK)
#define DDR_GPR_DDR_CONFIG_5_main_rccu_set_axi2_MASK (0x40000U)
#define DDR_GPR_DDR_CONFIG_5_main_rccu_set_axi2_SHIFT (18U)
#define DDR_GPR_DDR_CONFIG_5_main_rccu_set_axi2_WIDTH (1U)
#define DDR_GPR_DDR_CONFIG_5_main_rccu_set_axi2(x) (((uint32_t)(((uint32_t)(x)) << DDR_GPR_DDR_CONFIG_5_main_rccu_set_axi2_SHIFT)) & DDR_GPR_DDR_CONFIG_5_main_rccu_set_axi2_MASK)
#define DDR_GPR_DDR_CONFIG_5_dummy_rccu_clr_axi2_MASK (0x80000U)
#define DDR_GPR_DDR_CONFIG_5_dummy_rccu_clr_axi2_SHIFT (19U)
#define DDR_GPR_DDR_CONFIG_5_dummy_rccu_clr_axi2_WIDTH (1U)
#define DDR_GPR_DDR_CONFIG_5_dummy_rccu_clr_axi2(x) (((uint32_t)(((uint32_t)(x)) << DDR_GPR_DDR_CONFIG_5_dummy_rccu_clr_axi2_SHIFT)) & DDR_GPR_DDR_CONFIG_5_dummy_rccu_clr_axi2_MASK)
#define DDR_GPR_DDR_CONFIG_5_main_rccu_clr_axi2_MASK (0x100000U)
#define DDR_GPR_DDR_CONFIG_5_main_rccu_clr_axi2_SHIFT (20U)
#define DDR_GPR_DDR_CONFIG_5_main_rccu_clr_axi2_WIDTH (1U)
#define DDR_GPR_DDR_CONFIG_5_main_rccu_clr_axi2(x) (((uint32_t)(((uint32_t)(x)) << DDR_GPR_DDR_CONFIG_5_main_rccu_clr_axi2_SHIFT)) & DDR_GPR_DDR_CONFIG_5_main_rccu_clr_axi2_MASK)
#define DDR_GPR_DDR_CONFIG_5_RESERVED_MASK       (0xFFE00000U)
#define DDR_GPR_DDR_CONFIG_5_RESERVED_SHIFT      (21U)
#define DDR_GPR_DDR_CONFIG_5_RESERVED_WIDTH      (11U)
#define DDR_GPR_DDR_CONFIG_5_RESERVED(x)         (((uint32_t)(((uint32_t)(x)) << DDR_GPR_DDR_CONFIG_5_RESERVED_SHIFT)) & DDR_GPR_DDR_CONFIG_5_RESERVED_MASK)
/*! @} */

/*! @name DDR_CONFIG_6 - Configuration 6 Register */
/*! @{ */
#define DDR_GPR_DDR_CONFIG_6_RESERVED_1_MASK     (0xFFFFU)
#define DDR_GPR_DDR_CONFIG_6_RESERVED_1_SHIFT    (0U)
#define DDR_GPR_DDR_CONFIG_6_RESERVED_1_WIDTH    (16U)
#define DDR_GPR_DDR_CONFIG_6_RESERVED_1(x)       (((uint32_t)(((uint32_t)(x)) << DDR_GPR_DDR_CONFIG_6_RESERVED_1_SHIFT)) & DDR_GPR_DDR_CONFIG_6_RESERVED_1_MASK)
#define DDR_GPR_DDR_CONFIG_6_perf_op_is_zqcl_MASK (0x10000U)
#define DDR_GPR_DDR_CONFIG_6_perf_op_is_zqcl_SHIFT (16U)
#define DDR_GPR_DDR_CONFIG_6_perf_op_is_zqcl_WIDTH (1U)
#define DDR_GPR_DDR_CONFIG_6_perf_op_is_zqcl(x)  (((uint32_t)(((uint32_t)(x)) << DDR_GPR_DDR_CONFIG_6_perf_op_is_zqcl_SHIFT)) & DDR_GPR_DDR_CONFIG_6_perf_op_is_zqcl_MASK)
#define DDR_GPR_DDR_CONFIG_6_perf_op_is_zqcs_MASK (0x20000U)
#define DDR_GPR_DDR_CONFIG_6_perf_op_is_zqcs_SHIFT (17U)
#define DDR_GPR_DDR_CONFIG_6_perf_op_is_zqcs_WIDTH (1U)
#define DDR_GPR_DDR_CONFIG_6_perf_op_is_zqcs(x)  (((uint32_t)(((uint32_t)(x)) << DDR_GPR_DDR_CONFIG_6_perf_op_is_zqcs_SHIFT)) & DDR_GPR_DDR_CONFIG_6_perf_op_is_zqcs_MASK)
#define DDR_GPR_DDR_CONFIG_6_RESERVED_2_MASK     (0xFFFC0000U)
#define DDR_GPR_DDR_CONFIG_6_RESERVED_2_SHIFT    (18U)
#define DDR_GPR_DDR_CONFIG_6_RESERVED_2_WIDTH    (14U)
#define DDR_GPR_DDR_CONFIG_6_RESERVED_2(x)       (((uint32_t)(((uint32_t)(x)) << DDR_GPR_DDR_CONFIG_6_RESERVED_2_SHIFT)) & DDR_GPR_DDR_CONFIG_6_RESERVED_2_MASK)
/*! @} */

/*! @name DDR_RET_CONTROL - LP3 IO Retention Control Register */
/*! @{ */
#define DDR_GPR_DDR_RET_CONTROL_DDR_RET_CONTROL_MASK (0x1U)
#define DDR_GPR_DDR_RET_CONTROL_DDR_RET_CONTROL_SHIFT (0U)
#define DDR_GPR_DDR_RET_CONTROL_DDR_RET_CONTROL_WIDTH (1U)
#define DDR_GPR_DDR_RET_CONTROL_DDR_RET_CONTROL(x) (((uint32_t)(((uint32_t)(x)) << DDR_GPR_DDR_RET_CONTROL_DDR_RET_CONTROL_SHIFT)) & DDR_GPR_DDR_RET_CONTROL_DDR_RET_CONTROL_MASK)
#define DDR_GPR_DDR_RET_CONTROL_RESERVED_MASK    (0xFFFFFFFEU)
#define DDR_GPR_DDR_RET_CONTROL_RESERVED_SHIFT   (1U)
#define DDR_GPR_DDR_RET_CONTROL_RESERVED_WIDTH   (31U)
#define DDR_GPR_DDR_RET_CONTROL_RESERVED(x)      (((uint32_t)(((uint32_t)(x)) << DDR_GPR_DDR_RET_CONTROL_RESERVED_SHIFT)) & DDR_GPR_DDR_RET_CONTROL_RESERVED_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group DDR_GPR_Register_Masks */


/*!
 * @}
 */ /* end of group DDR_GPR_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- DFS Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup DFS_Peripheral_Access_Layer DFS Peripheral Access Layer
 * @{
 */

/** DFS - Size of Registers Arrays */
#define DFS_DVPORT_COUNT                          6u

/** DFS - Register Layout Typedef */
typedef struct {
  uint8_t RESERVED_0[12];
  __I  uint32_t PORTSR;                            /**< Port status register, offset: 0xC */
  __IO uint32_t PORTLOLSR;                         /**< Port Loss of Lock Status, offset: 0x10 */
  __IO uint32_t PORTRESET;                         /**< Port Reset, offset: 0x14 */
  __IO uint32_t CTL;                               /**< Control, offset: 0x18 */
  __IO uint32_t DVPORT[DFS_DVPORT_COUNT];          /**< Divider for Port 0..Divider for Port 5, array offset: 0x1C, array step: 0x4 */
} DFS_Type, *DFS_MemMapPtr;

/** Number of instances of the DFS module. */
#define DFS_INSTANCE_COUNT                       (2u)

/* DFS - Peripheral instance base addresses */
/** Peripheral CORE_DFS base address */
#define CORE_DFS_BASE                            (0x40054000u)
/** Peripheral CORE_DFS base pointer */
#define CORE_DFS                                 ((DFS_Type *)CORE_DFS_BASE)
/** Peripheral PERIPH_DFS base address */
#define PERIPH_DFS_BASE                          (0x40058000u)
/** Peripheral PERIPH_DFS base pointer */
#define PERIPH_DFS                               ((DFS_Type *)PERIPH_DFS_BASE)
/** Array initializer of DFS peripheral base addresses */
#define DFS_BASE_ADDRS                           { CORE_DFS_BASE, PERIPH_DFS_BASE }
/** Array initializer of DFS peripheral base pointers */
#define DFS_BASE_PTRS                            { CORE_DFS, PERIPH_DFS }

/* ----------------------------------------------------------------------------
   -- DFS Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup DFS_Register_Masks DFS Register Masks
 * @{
 */

/*! @name PORTSR - Port status register */
/*! @{ */
#define DFS_PORTSR_PORTSTAT_MASK                 (0x3FU)
#define DFS_PORTSR_PORTSTAT_SHIFT                (0U)
#define DFS_PORTSR_PORTSTAT_WIDTH                (6U)
#define DFS_PORTSR_PORTSTAT(x)                   (((uint32_t)(((uint32_t)(x)) << DFS_PORTSR_PORTSTAT_SHIFT)) & DFS_PORTSR_PORTSTAT_MASK)
/*! @} */

/*! @name PORTLOLSR - Port Loss of Lock Status */
/*! @{ */
#define DFS_PORTLOLSR_LOLF0_MASK                 (0x1U)
#define DFS_PORTLOLSR_LOLF0_SHIFT                (0U)
#define DFS_PORTLOLSR_LOLF0_WIDTH                (1U)
#define DFS_PORTLOLSR_LOLF0(x)                   (((uint32_t)(((uint32_t)(x)) << DFS_PORTLOLSR_LOLF0_SHIFT)) & DFS_PORTLOLSR_LOLF0_MASK)
#define DFS_PORTLOLSR_LOLF1_MASK                 (0x2U)
#define DFS_PORTLOLSR_LOLF1_SHIFT                (1U)
#define DFS_PORTLOLSR_LOLF1_WIDTH                (1U)
#define DFS_PORTLOLSR_LOLF1(x)                   (((uint32_t)(((uint32_t)(x)) << DFS_PORTLOLSR_LOLF1_SHIFT)) & DFS_PORTLOLSR_LOLF1_MASK)
#define DFS_PORTLOLSR_LOLF2_MASK                 (0x4U)
#define DFS_PORTLOLSR_LOLF2_SHIFT                (2U)
#define DFS_PORTLOLSR_LOLF2_WIDTH                (1U)
#define DFS_PORTLOLSR_LOLF2(x)                   (((uint32_t)(((uint32_t)(x)) << DFS_PORTLOLSR_LOLF2_SHIFT)) & DFS_PORTLOLSR_LOLF2_MASK)
#define DFS_PORTLOLSR_LOLF3_MASK                 (0x8U)
#define DFS_PORTLOLSR_LOLF3_SHIFT                (3U)
#define DFS_PORTLOLSR_LOLF3_WIDTH                (1U)
#define DFS_PORTLOLSR_LOLF3(x)                   (((uint32_t)(((uint32_t)(x)) << DFS_PORTLOLSR_LOLF3_SHIFT)) & DFS_PORTLOLSR_LOLF3_MASK)
#define DFS_PORTLOLSR_LOLF4_MASK                 (0x10U)
#define DFS_PORTLOLSR_LOLF4_SHIFT                (4U)
#define DFS_PORTLOLSR_LOLF4_WIDTH                (1U)
#define DFS_PORTLOLSR_LOLF4(x)                   (((uint32_t)(((uint32_t)(x)) << DFS_PORTLOLSR_LOLF4_SHIFT)) & DFS_PORTLOLSR_LOLF4_MASK)
#define DFS_PORTLOLSR_LOLF5_MASK                 (0x20U)
#define DFS_PORTLOLSR_LOLF5_SHIFT                (5U)
#define DFS_PORTLOLSR_LOLF5_WIDTH                (1U)
#define DFS_PORTLOLSR_LOLF5(x)                   (((uint32_t)(((uint32_t)(x)) << DFS_PORTLOLSR_LOLF5_SHIFT)) & DFS_PORTLOLSR_LOLF5_MASK)
/*! @} */

/*! @name PORTRESET - Port Reset */
/*! @{ */
#define DFS_PORTRESET_RESET0_MASK                (0x1U)
#define DFS_PORTRESET_RESET0_SHIFT               (0U)
#define DFS_PORTRESET_RESET0_WIDTH               (1U)
#define DFS_PORTRESET_RESET0(x)                  (((uint32_t)(((uint32_t)(x)) << DFS_PORTRESET_RESET0_SHIFT)) & DFS_PORTRESET_RESET0_MASK)
#define DFS_PORTRESET_RESET1_MASK                (0x2U)
#define DFS_PORTRESET_RESET1_SHIFT               (1U)
#define DFS_PORTRESET_RESET1_WIDTH               (1U)
#define DFS_PORTRESET_RESET1(x)                  (((uint32_t)(((uint32_t)(x)) << DFS_PORTRESET_RESET1_SHIFT)) & DFS_PORTRESET_RESET1_MASK)
#define DFS_PORTRESET_RESET2_MASK                (0x4U)
#define DFS_PORTRESET_RESET2_SHIFT               (2U)
#define DFS_PORTRESET_RESET2_WIDTH               (1U)
#define DFS_PORTRESET_RESET2(x)                  (((uint32_t)(((uint32_t)(x)) << DFS_PORTRESET_RESET2_SHIFT)) & DFS_PORTRESET_RESET2_MASK)
#define DFS_PORTRESET_RESET3_MASK                (0x8U)
#define DFS_PORTRESET_RESET3_SHIFT               (3U)
#define DFS_PORTRESET_RESET3_WIDTH               (1U)
#define DFS_PORTRESET_RESET3(x)                  (((uint32_t)(((uint32_t)(x)) << DFS_PORTRESET_RESET3_SHIFT)) & DFS_PORTRESET_RESET3_MASK)
#define DFS_PORTRESET_RESET4_MASK                (0x10U)
#define DFS_PORTRESET_RESET4_SHIFT               (4U)
#define DFS_PORTRESET_RESET4_WIDTH               (1U)
#define DFS_PORTRESET_RESET4(x)                  (((uint32_t)(((uint32_t)(x)) << DFS_PORTRESET_RESET4_SHIFT)) & DFS_PORTRESET_RESET4_MASK)
#define DFS_PORTRESET_RESET5_MASK                (0x20U)
#define DFS_PORTRESET_RESET5_SHIFT               (5U)
#define DFS_PORTRESET_RESET5_WIDTH               (1U)
#define DFS_PORTRESET_RESET5(x)                  (((uint32_t)(((uint32_t)(x)) << DFS_PORTRESET_RESET5_SHIFT)) & DFS_PORTRESET_RESET5_MASK)
/*! @} */

/*! @name CTL - Control */
/*! @{ */
#define DFS_CTL_DFS_RESET_MASK                   (0x2U)
#define DFS_CTL_DFS_RESET_SHIFT                  (1U)
#define DFS_CTL_DFS_RESET_WIDTH                  (1U)
#define DFS_CTL_DFS_RESET(x)                     (((uint32_t)(((uint32_t)(x)) << DFS_CTL_DFS_RESET_SHIFT)) & DFS_CTL_DFS_RESET_MASK)
/*! @} */

/*! @name DVPORT - Divider for Port 0..Divider for Port 5 */
/*! @{ */
#define DFS_DVPORT_MFN_MASK                      (0x3FU)
#define DFS_DVPORT_MFN_SHIFT                     (0U)
#define DFS_DVPORT_MFN_WIDTH                     (6U)
#define DFS_DVPORT_MFN(x)                        (((uint32_t)(((uint32_t)(x)) << DFS_DVPORT_MFN_SHIFT)) & DFS_DVPORT_MFN_MASK)
#define DFS_DVPORT_MFI_MASK                      (0xFF00U)
#define DFS_DVPORT_MFI_SHIFT                     (8U)
#define DFS_DVPORT_MFI_WIDTH                     (8U)
#define DFS_DVPORT_MFI(x)                        (((uint32_t)(((uint32_t)(x)) << DFS_DVPORT_MFI_SHIFT)) & DFS_DVPORT_MFI_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group DFS_Register_Masks */


/*!
 * @}
 */ /* end of group DFS_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- DIRU Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup DIRU_Peripheral_Access_Layer DIRU Peripheral Access Layer
 * @{
 */

/** DIRU - Register Layout Typedef */
typedef struct {
  uint8_t RESERVED_0[4];
  __I  uint32_t DIRUTA;                            /**< DIRU Transaction Activity, offset: 0x4 */
  uint8_t RESERVED_1[8];
  __IO uint32_t DIRUSFE;                           /**< DIRU Snoop Filtering Enable, offset: 0x10 */
  uint8_t RESERVED_2[44];
  __IO uint32_t DIRUCASE0;                         /**< DIRU Caching Agent Snoop Enable, offset: 0x40 */
  uint8_t RESERVED_3[12];
  __I  uint32_t DIRUCASA0;                         /**< DIRU Caching Agent Snoop Activity, offset: 0x50 */
  uint8_t RESERVED_4[44];
  __IO uint32_t DIRUSFMC;                          /**< DIRU Snoop Filter Maintenance Control, offset: 0x80 */
  __I  uint32_t DIRUSFMA;                          /**< DIRU Snoop Filter Maintenance Activity, offset: 0x84 */
  __IO uint32_t DIRUSFMLR0;                        /**< DIRU Snoop Filter Maintenance Location Register 0, offset: 0x88 */
  __IO uint32_t DIRUSFMLR1;                        /**< DIRU Snoop Filter Maintenance Location Register 1, offset: 0x8C */
  uint8_t RESERVED_5[112];
  __IO uint32_t DIRUCEC;                           /**< DIRU Correctable Error Control, offset: 0x100 */
  __IO uint32_t DIRUCES;                           /**< DIRU Correctable Error Status, offset: 0x104 */
  __IO uint32_t DIRUCELR0;                         /**< DIRU Correctable Error Location Register 0, offset: 0x108 */
  __IO uint32_t DIRUCELR1;                         /**< DIRU Correctable Error Location Register 1, offset: 0x10C */
  uint8_t RESERVED_6[20];
  __IO uint32_t DIRUCESA;                          /**< DIRU Correctable Error Status Alias, offset: 0x124 */
  uint8_t RESERVED_7[24];
  __IO uint32_t DIRUUEC;                           /**< DIRU Uncorrectable Error Control, offset: 0x140 */
  __IO uint32_t DIRUUES;                           /**< DIRU Uncorrectable Error Status, offset: 0x144 */
  __IO uint32_t DIRUUELR0;                         /**< DIRU Uncorrectable Error Location Register 0, offset: 0x148 */
  __IO uint32_t DIRUUELR1;                         /**< DIRU Uncorrectable Error Location Register 1, offset: 0x14C */
  uint8_t RESERVED_8[20];
  __IO uint32_t DIRUUESA;                          /**< DIRU Uncorrectable Error Status Alias, offset: 0x164 */
  uint8_t RESERVED_9[3732];
  __I  uint32_t DIRUID;                            /**< DIRU Identification Register, offset: 0xFFC */
} DIRU_Type, *DIRU_MemMapPtr;

/** Number of instances of the DIRU module. */
#define DIRU_INSTANCE_COUNT                      (1u)

/* DIRU - Peripheral instance base addresses */
/** Peripheral DIRU base address */
#define DIRU_BASE                                (0x50480000u)
/** Peripheral DIRU base pointer */
#define DIRU                                     ((DIRU_Type *)DIRU_BASE)
/** Array initializer of DIRU peripheral base addresses */
#define DIRU_BASE_ADDRS                          { DIRU_BASE }
/** Array initializer of DIRU peripheral base pointers */
#define DIRU_BASE_PTRS                           { DIRU }

/* ----------------------------------------------------------------------------
   -- DIRU Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup DIRU_Register_Masks DIRU Register Masks
 * @{
 */

/*! @name DIRUTA - DIRU Transaction Activity */
/*! @{ */
#define DIRU_DIRUTA_TRANSACTV_MASK               (0x1U)
#define DIRU_DIRUTA_TRANSACTV_SHIFT              (0U)
#define DIRU_DIRUTA_TRANSACTV_WIDTH              (1U)
#define DIRU_DIRUTA_TRANSACTV(x)                 (((uint32_t)(((uint32_t)(x)) << DIRU_DIRUTA_TRANSACTV_SHIFT)) & DIRU_DIRUTA_TRANSACTV_MASK)
/*! @} */

/*! @name DIRUSFE - DIRU Snoop Filtering Enable */
/*! @{ */
#define DIRU_DIRUSFE_SFEN0_MASK                  (0x1U)
#define DIRU_DIRUSFE_SFEN0_SHIFT                 (0U)
#define DIRU_DIRUSFE_SFEN0_WIDTH                 (1U)
#define DIRU_DIRUSFE_SFEN0(x)                    (((uint32_t)(((uint32_t)(x)) << DIRU_DIRUSFE_SFEN0_SHIFT)) & DIRU_DIRUSFE_SFEN0_MASK)
/*! @} */

/*! @name DIRUCASE0 - DIRU Caching Agent Snoop Enable */
/*! @{ */
#define DIRU_DIRUCASE0_CASNPEN0_MASK             (0x1U)
#define DIRU_DIRUCASE0_CASNPEN0_SHIFT            (0U)
#define DIRU_DIRUCASE0_CASNPEN0_WIDTH            (1U)
#define DIRU_DIRUCASE0_CASNPEN0(x)               (((uint32_t)(((uint32_t)(x)) << DIRU_DIRUCASE0_CASNPEN0_SHIFT)) & DIRU_DIRUCASE0_CASNPEN0_MASK)
#define DIRU_DIRUCASE0_CASNPEN1_MASK             (0x2U)
#define DIRU_DIRUCASE0_CASNPEN1_SHIFT            (1U)
#define DIRU_DIRUCASE0_CASNPEN1_WIDTH            (1U)
#define DIRU_DIRUCASE0_CASNPEN1(x)               (((uint32_t)(((uint32_t)(x)) << DIRU_DIRUCASE0_CASNPEN1_SHIFT)) & DIRU_DIRUCASE0_CASNPEN1_MASK)
/*! @} */

/*! @name DIRUCASA0 - DIRU Caching Agent Snoop Activity */
/*! @{ */
#define DIRU_DIRUCASA0_CASNPACTV0_MASK           (0x1U)
#define DIRU_DIRUCASA0_CASNPACTV0_SHIFT          (0U)
#define DIRU_DIRUCASA0_CASNPACTV0_WIDTH          (1U)
#define DIRU_DIRUCASA0_CASNPACTV0(x)             (((uint32_t)(((uint32_t)(x)) << DIRU_DIRUCASA0_CASNPACTV0_SHIFT)) & DIRU_DIRUCASA0_CASNPACTV0_MASK)
#define DIRU_DIRUCASA0_CASNPACTV1_MASK           (0x2U)
#define DIRU_DIRUCASA0_CASNPACTV1_SHIFT          (1U)
#define DIRU_DIRUCASA0_CASNPACTV1_WIDTH          (1U)
#define DIRU_DIRUCASA0_CASNPACTV1(x)             (((uint32_t)(((uint32_t)(x)) << DIRU_DIRUCASA0_CASNPACTV1_SHIFT)) & DIRU_DIRUCASA0_CASNPACTV1_MASK)
/*! @} */

/*! @name DIRUSFMC - DIRU Snoop Filter Maintenance Control */
/*! @{ */
#define DIRU_DIRUSFMC_SFMNTOP_MASK               (0xFU)
#define DIRU_DIRUSFMC_SFMNTOP_SHIFT              (0U)
#define DIRU_DIRUSFMC_SFMNTOP_WIDTH              (4U)
#define DIRU_DIRUSFMC_SFMNTOP(x)                 (((uint32_t)(((uint32_t)(x)) << DIRU_DIRUSFMC_SFMNTOP_SHIFT)) & DIRU_DIRUSFMC_SFMNTOP_MASK)
#define DIRU_DIRUSFMC_SFID_MASK                  (0x1F0000U)
#define DIRU_DIRUSFMC_SFID_SHIFT                 (16U)
#define DIRU_DIRUSFMC_SFID_WIDTH                 (5U)
#define DIRU_DIRUSFMC_SFID(x)                    (((uint32_t)(((uint32_t)(x)) << DIRU_DIRUSFMC_SFID_SHIFT)) & DIRU_DIRUSFMC_SFID_MASK)
#define DIRU_DIRUSFMC_SFSECATTR_MASK             (0x200000U)
#define DIRU_DIRUSFMC_SFSECATTR_SHIFT            (21U)
#define DIRU_DIRUSFMC_SFSECATTR_WIDTH            (1U)
#define DIRU_DIRUSFMC_SFSECATTR(x)               (((uint32_t)(((uint32_t)(x)) << DIRU_DIRUSFMC_SFSECATTR_SHIFT)) & DIRU_DIRUSFMC_SFSECATTR_MASK)
/*! @} */

/*! @name DIRUSFMA - DIRU Snoop Filter Maintenance Activity */
/*! @{ */
#define DIRU_DIRUSFMA_MNTOPACTV_MASK             (0x1U)
#define DIRU_DIRUSFMA_MNTOPACTV_SHIFT            (0U)
#define DIRU_DIRUSFMA_MNTOPACTV_WIDTH            (1U)
#define DIRU_DIRUSFMA_MNTOPACTV(x)               (((uint32_t)(((uint32_t)(x)) << DIRU_DIRUSFMA_MNTOPACTV_SHIFT)) & DIRU_DIRUSFMA_MNTOPACTV_MASK)
/*! @} */

/*! @name DIRUSFMLR0 - DIRU Snoop Filter Maintenance Location Register 0 */
/*! @{ */
#define DIRU_DIRUSFMLR0_MNTSET_MASK              (0xFFFFFU)
#define DIRU_DIRUSFMLR0_MNTSET_SHIFT             (0U)
#define DIRU_DIRUSFMLR0_MNTSET_WIDTH             (20U)
#define DIRU_DIRUSFMLR0_MNTSET(x)                (((uint32_t)(((uint32_t)(x)) << DIRU_DIRUSFMLR0_MNTSET_SHIFT)) & DIRU_DIRUSFMLR0_MNTSET_MASK)
#define DIRU_DIRUSFMLR0_MNTWAY_MASK              (0x3F00000U)
#define DIRU_DIRUSFMLR0_MNTWAY_SHIFT             (20U)
#define DIRU_DIRUSFMLR0_MNTWAY_WIDTH             (6U)
#define DIRU_DIRUSFMLR0_MNTWAY(x)                (((uint32_t)(((uint32_t)(x)) << DIRU_DIRUSFMLR0_MNTWAY_SHIFT)) & DIRU_DIRUSFMLR0_MNTWAY_MASK)
#define DIRU_DIRUSFMLR0_MNTWORD_MASK             (0xFC000000U)
#define DIRU_DIRUSFMLR0_MNTWORD_SHIFT            (26U)
#define DIRU_DIRUSFMLR0_MNTWORD_WIDTH            (6U)
#define DIRU_DIRUSFMLR0_MNTWORD(x)               (((uint32_t)(((uint32_t)(x)) << DIRU_DIRUSFMLR0_MNTWORD_SHIFT)) & DIRU_DIRUSFMLR0_MNTWORD_MASK)
/*! @} */

/*! @name DIRUSFMLR1 - DIRU Snoop Filter Maintenance Location Register 1 */
/*! @{ */
#define DIRU_DIRUSFMLR1_MNTADDR_MASK             (0xFFFU)
#define DIRU_DIRUSFMLR1_MNTADDR_SHIFT            (0U)
#define DIRU_DIRUSFMLR1_MNTADDR_WIDTH            (12U)
#define DIRU_DIRUSFMLR1_MNTADDR(x)               (((uint32_t)(((uint32_t)(x)) << DIRU_DIRUSFMLR1_MNTADDR_SHIFT)) & DIRU_DIRUSFMLR1_MNTADDR_MASK)
/*! @} */

/*! @name DIRUCEC - DIRU Correctable Error Control */
/*! @{ */
#define DIRU_DIRUCEC_ERRDETEN_MASK               (0x1U)
#define DIRU_DIRUCEC_ERRDETEN_SHIFT              (0U)
#define DIRU_DIRUCEC_ERRDETEN_WIDTH              (1U)
#define DIRU_DIRUCEC_ERRDETEN(x)                 (((uint32_t)(((uint32_t)(x)) << DIRU_DIRUCEC_ERRDETEN_SHIFT)) & DIRU_DIRUCEC_ERRDETEN_MASK)
#define DIRU_DIRUCEC_ERRINTEN_MASK               (0x2U)
#define DIRU_DIRUCEC_ERRINTEN_SHIFT              (1U)
#define DIRU_DIRUCEC_ERRINTEN_WIDTH              (1U)
#define DIRU_DIRUCEC_ERRINTEN(x)                 (((uint32_t)(((uint32_t)(x)) << DIRU_DIRUCEC_ERRINTEN_SHIFT)) & DIRU_DIRUCEC_ERRINTEN_MASK)
#define DIRU_DIRUCEC_ERRTHRESHOLD_MASK           (0xFF0U)
#define DIRU_DIRUCEC_ERRTHRESHOLD_SHIFT          (4U)
#define DIRU_DIRUCEC_ERRTHRESHOLD_WIDTH          (8U)
#define DIRU_DIRUCEC_ERRTHRESHOLD(x)             (((uint32_t)(((uint32_t)(x)) << DIRU_DIRUCEC_ERRTHRESHOLD_SHIFT)) & DIRU_DIRUCEC_ERRTHRESHOLD_MASK)
/*! @} */

/*! @name DIRUCES - DIRU Correctable Error Status */
/*! @{ */
#define DIRU_DIRUCES_ERRVLD_MASK                 (0x1U)
#define DIRU_DIRUCES_ERRVLD_SHIFT                (0U)
#define DIRU_DIRUCES_ERRVLD_WIDTH                (1U)
#define DIRU_DIRUCES_ERRVLD(x)                   (((uint32_t)(((uint32_t)(x)) << DIRU_DIRUCES_ERRVLD_SHIFT)) & DIRU_DIRUCES_ERRVLD_MASK)
#define DIRU_DIRUCES_ERROVF_MASK                 (0x2U)
#define DIRU_DIRUCES_ERROVF_SHIFT                (1U)
#define DIRU_DIRUCES_ERROVF_WIDTH                (1U)
#define DIRU_DIRUCES_ERROVF(x)                   (((uint32_t)(((uint32_t)(x)) << DIRU_DIRUCES_ERROVF_SHIFT)) & DIRU_DIRUCES_ERROVF_MASK)
#define DIRU_DIRUCES_ERRCOUNT_MASK               (0xFF0U)
#define DIRU_DIRUCES_ERRCOUNT_SHIFT              (4U)
#define DIRU_DIRUCES_ERRCOUNT_WIDTH              (8U)
#define DIRU_DIRUCES_ERRCOUNT(x)                 (((uint32_t)(((uint32_t)(x)) << DIRU_DIRUCES_ERRCOUNT_SHIFT)) & DIRU_DIRUCES_ERRCOUNT_MASK)
#define DIRU_DIRUCES_ERRTYPE_MASK                (0xF000U)
#define DIRU_DIRUCES_ERRTYPE_SHIFT               (12U)
#define DIRU_DIRUCES_ERRTYPE_WIDTH               (4U)
#define DIRU_DIRUCES_ERRTYPE(x)                  (((uint32_t)(((uint32_t)(x)) << DIRU_DIRUCES_ERRTYPE_SHIFT)) & DIRU_DIRUCES_ERRTYPE_MASK)
#define DIRU_DIRUCES_ERRINFO_MASK                (0xFF0000U)
#define DIRU_DIRUCES_ERRINFO_SHIFT               (16U)
#define DIRU_DIRUCES_ERRINFO_WIDTH               (8U)
#define DIRU_DIRUCES_ERRINFO(x)                  (((uint32_t)(((uint32_t)(x)) << DIRU_DIRUCES_ERRINFO_SHIFT)) & DIRU_DIRUCES_ERRINFO_MASK)
/*! @} */

/*! @name DIRUCELR0 - DIRU Correctable Error Location Register 0 */
/*! @{ */
#define DIRU_DIRUCELR0_ERRENTRY_MASK             (0xFFFFFU)
#define DIRU_DIRUCELR0_ERRENTRY_SHIFT            (0U)
#define DIRU_DIRUCELR0_ERRENTRY_WIDTH            (20U)
#define DIRU_DIRUCELR0_ERRENTRY(x)               (((uint32_t)(((uint32_t)(x)) << DIRU_DIRUCELR0_ERRENTRY_SHIFT)) & DIRU_DIRUCELR0_ERRENTRY_MASK)
#define DIRU_DIRUCELR0_ERRWAY_MASK               (0x3F00000U)
#define DIRU_DIRUCELR0_ERRWAY_SHIFT              (20U)
#define DIRU_DIRUCELR0_ERRWAY_WIDTH              (6U)
#define DIRU_DIRUCELR0_ERRWAY(x)                 (((uint32_t)(((uint32_t)(x)) << DIRU_DIRUCELR0_ERRWAY_SHIFT)) & DIRU_DIRUCELR0_ERRWAY_MASK)
#define DIRU_DIRUCELR0_ERRWORD_MASK              (0xFC000000U)
#define DIRU_DIRUCELR0_ERRWORD_SHIFT             (26U)
#define DIRU_DIRUCELR0_ERRWORD_WIDTH             (6U)
#define DIRU_DIRUCELR0_ERRWORD(x)                (((uint32_t)(((uint32_t)(x)) << DIRU_DIRUCELR0_ERRWORD_SHIFT)) & DIRU_DIRUCELR0_ERRWORD_MASK)
/*! @} */

/*! @name DIRUCELR1 - DIRU Correctable Error Location Register 1 */
/*! @{ */
#define DIRU_DIRUCELR1_ERRADDR_MASK              (0xFFFU)
#define DIRU_DIRUCELR1_ERRADDR_SHIFT             (0U)
#define DIRU_DIRUCELR1_ERRADDR_WIDTH             (12U)
#define DIRU_DIRUCELR1_ERRADDR(x)                (((uint32_t)(((uint32_t)(x)) << DIRU_DIRUCELR1_ERRADDR_SHIFT)) & DIRU_DIRUCELR1_ERRADDR_MASK)
/*! @} */

/*! @name DIRUCESA - DIRU Correctable Error Status Alias */
/*! @{ */
#define DIRU_DIRUCESA_ERRVLD_MASK                (0x1U)
#define DIRU_DIRUCESA_ERRVLD_SHIFT               (0U)
#define DIRU_DIRUCESA_ERRVLD_WIDTH               (1U)
#define DIRU_DIRUCESA_ERRVLD(x)                  (((uint32_t)(((uint32_t)(x)) << DIRU_DIRUCESA_ERRVLD_SHIFT)) & DIRU_DIRUCESA_ERRVLD_MASK)
#define DIRU_DIRUCESA_ERROVF_MASK                (0x2U)
#define DIRU_DIRUCESA_ERROVF_SHIFT               (1U)
#define DIRU_DIRUCESA_ERROVF_WIDTH               (1U)
#define DIRU_DIRUCESA_ERROVF(x)                  (((uint32_t)(((uint32_t)(x)) << DIRU_DIRUCESA_ERROVF_SHIFT)) & DIRU_DIRUCESA_ERROVF_MASK)
#define DIRU_DIRUCESA_ERRCOUNT_MASK              (0xFF0U)
#define DIRU_DIRUCESA_ERRCOUNT_SHIFT             (4U)
#define DIRU_DIRUCESA_ERRCOUNT_WIDTH             (8U)
#define DIRU_DIRUCESA_ERRCOUNT(x)                (((uint32_t)(((uint32_t)(x)) << DIRU_DIRUCESA_ERRCOUNT_SHIFT)) & DIRU_DIRUCESA_ERRCOUNT_MASK)
#define DIRU_DIRUCESA_ERRTYPE_MASK               (0xF000U)
#define DIRU_DIRUCESA_ERRTYPE_SHIFT              (12U)
#define DIRU_DIRUCESA_ERRTYPE_WIDTH              (4U)
#define DIRU_DIRUCESA_ERRTYPE(x)                 (((uint32_t)(((uint32_t)(x)) << DIRU_DIRUCESA_ERRTYPE_SHIFT)) & DIRU_DIRUCESA_ERRTYPE_MASK)
#define DIRU_DIRUCESA_ERRINFO_MASK               (0xFF0000U)
#define DIRU_DIRUCESA_ERRINFO_SHIFT              (16U)
#define DIRU_DIRUCESA_ERRINFO_WIDTH              (8U)
#define DIRU_DIRUCESA_ERRINFO(x)                 (((uint32_t)(((uint32_t)(x)) << DIRU_DIRUCESA_ERRINFO_SHIFT)) & DIRU_DIRUCESA_ERRINFO_MASK)
/*! @} */

/*! @name DIRUUEC - DIRU Uncorrectable Error Control */
/*! @{ */
#define DIRU_DIRUUEC_ERRDETEN_MASK               (0x1U)
#define DIRU_DIRUUEC_ERRDETEN_SHIFT              (0U)
#define DIRU_DIRUUEC_ERRDETEN_WIDTH              (1U)
#define DIRU_DIRUUEC_ERRDETEN(x)                 (((uint32_t)(((uint32_t)(x)) << DIRU_DIRUUEC_ERRDETEN_SHIFT)) & DIRU_DIRUUEC_ERRDETEN_MASK)
#define DIRU_DIRUUEC_ERRINTEN_MASK               (0x2U)
#define DIRU_DIRUUEC_ERRINTEN_SHIFT              (1U)
#define DIRU_DIRUUEC_ERRINTEN_WIDTH              (1U)
#define DIRU_DIRUUEC_ERRINTEN(x)                 (((uint32_t)(((uint32_t)(x)) << DIRU_DIRUUEC_ERRINTEN_SHIFT)) & DIRU_DIRUUEC_ERRINTEN_MASK)
#define DIRU_DIRUUEC_ERRTHRESHOLD_MASK           (0xFF0U)
#define DIRU_DIRUUEC_ERRTHRESHOLD_SHIFT          (4U)
#define DIRU_DIRUUEC_ERRTHRESHOLD_WIDTH          (8U)
#define DIRU_DIRUUEC_ERRTHRESHOLD(x)             (((uint32_t)(((uint32_t)(x)) << DIRU_DIRUUEC_ERRTHRESHOLD_SHIFT)) & DIRU_DIRUUEC_ERRTHRESHOLD_MASK)
/*! @} */

/*! @name DIRUUES - DIRU Uncorrectable Error Status */
/*! @{ */
#define DIRU_DIRUUES_ERRVLD_MASK                 (0x1U)
#define DIRU_DIRUUES_ERRVLD_SHIFT                (0U)
#define DIRU_DIRUUES_ERRVLD_WIDTH                (1U)
#define DIRU_DIRUUES_ERRVLD(x)                   (((uint32_t)(((uint32_t)(x)) << DIRU_DIRUUES_ERRVLD_SHIFT)) & DIRU_DIRUUES_ERRVLD_MASK)
#define DIRU_DIRUUES_ERROVF_MASK                 (0x2U)
#define DIRU_DIRUUES_ERROVF_SHIFT                (1U)
#define DIRU_DIRUUES_ERROVF_WIDTH                (1U)
#define DIRU_DIRUUES_ERROVF(x)                   (((uint32_t)(((uint32_t)(x)) << DIRU_DIRUUES_ERROVF_SHIFT)) & DIRU_DIRUUES_ERROVF_MASK)
#define DIRU_DIRUUES_ERRCOUNT_MASK               (0xFF0U)
#define DIRU_DIRUUES_ERRCOUNT_SHIFT              (4U)
#define DIRU_DIRUUES_ERRCOUNT_WIDTH              (8U)
#define DIRU_DIRUUES_ERRCOUNT(x)                 (((uint32_t)(((uint32_t)(x)) << DIRU_DIRUUES_ERRCOUNT_SHIFT)) & DIRU_DIRUUES_ERRCOUNT_MASK)
#define DIRU_DIRUUES_ERRTYPE_MASK                (0xF000U)
#define DIRU_DIRUUES_ERRTYPE_SHIFT               (12U)
#define DIRU_DIRUUES_ERRTYPE_WIDTH               (4U)
#define DIRU_DIRUUES_ERRTYPE(x)                  (((uint32_t)(((uint32_t)(x)) << DIRU_DIRUUES_ERRTYPE_SHIFT)) & DIRU_DIRUUES_ERRTYPE_MASK)
#define DIRU_DIRUUES_ERRINFO_MASK                (0xFF0000U)
#define DIRU_DIRUUES_ERRINFO_SHIFT               (16U)
#define DIRU_DIRUUES_ERRINFO_WIDTH               (8U)
#define DIRU_DIRUUES_ERRINFO(x)                  (((uint32_t)(((uint32_t)(x)) << DIRU_DIRUUES_ERRINFO_SHIFT)) & DIRU_DIRUUES_ERRINFO_MASK)
/*! @} */

/*! @name DIRUUELR0 - DIRU Uncorrectable Error Location Register 0 */
/*! @{ */
#define DIRU_DIRUUELR0_ERRENTRY_MASK             (0xFFFFFU)
#define DIRU_DIRUUELR0_ERRENTRY_SHIFT            (0U)
#define DIRU_DIRUUELR0_ERRENTRY_WIDTH            (20U)
#define DIRU_DIRUUELR0_ERRENTRY(x)               (((uint32_t)(((uint32_t)(x)) << DIRU_DIRUUELR0_ERRENTRY_SHIFT)) & DIRU_DIRUUELR0_ERRENTRY_MASK)
#define DIRU_DIRUUELR0_ERRWAY_MASK               (0x3F00000U)
#define DIRU_DIRUUELR0_ERRWAY_SHIFT              (20U)
#define DIRU_DIRUUELR0_ERRWAY_WIDTH              (6U)
#define DIRU_DIRUUELR0_ERRWAY(x)                 (((uint32_t)(((uint32_t)(x)) << DIRU_DIRUUELR0_ERRWAY_SHIFT)) & DIRU_DIRUUELR0_ERRWAY_MASK)
#define DIRU_DIRUUELR0_ERRWORD_MASK              (0xFC000000U)
#define DIRU_DIRUUELR0_ERRWORD_SHIFT             (26U)
#define DIRU_DIRUUELR0_ERRWORD_WIDTH             (6U)
#define DIRU_DIRUUELR0_ERRWORD(x)                (((uint32_t)(((uint32_t)(x)) << DIRU_DIRUUELR0_ERRWORD_SHIFT)) & DIRU_DIRUUELR0_ERRWORD_MASK)
/*! @} */

/*! @name DIRUUELR1 - DIRU Uncorrectable Error Location Register 1 */
/*! @{ */
#define DIRU_DIRUUELR1_ERRADDR_MASK              (0xFFFU)
#define DIRU_DIRUUELR1_ERRADDR_SHIFT             (0U)
#define DIRU_DIRUUELR1_ERRADDR_WIDTH             (12U)
#define DIRU_DIRUUELR1_ERRADDR(x)                (((uint32_t)(((uint32_t)(x)) << DIRU_DIRUUELR1_ERRADDR_SHIFT)) & DIRU_DIRUUELR1_ERRADDR_MASK)
/*! @} */

/*! @name DIRUUESA - DIRU Uncorrectable Error Status Alias */
/*! @{ */
#define DIRU_DIRUUESA_ERRVLD_MASK                (0x1U)
#define DIRU_DIRUUESA_ERRVLD_SHIFT               (0U)
#define DIRU_DIRUUESA_ERRVLD_WIDTH               (1U)
#define DIRU_DIRUUESA_ERRVLD(x)                  (((uint32_t)(((uint32_t)(x)) << DIRU_DIRUUESA_ERRVLD_SHIFT)) & DIRU_DIRUUESA_ERRVLD_MASK)
#define DIRU_DIRUUESA_ERROVF_MASK                (0x2U)
#define DIRU_DIRUUESA_ERROVF_SHIFT               (1U)
#define DIRU_DIRUUESA_ERROVF_WIDTH               (1U)
#define DIRU_DIRUUESA_ERROVF(x)                  (((uint32_t)(((uint32_t)(x)) << DIRU_DIRUUESA_ERROVF_SHIFT)) & DIRU_DIRUUESA_ERROVF_MASK)
#define DIRU_DIRUUESA_ERRCOUNT_MASK              (0xFF0U)
#define DIRU_DIRUUESA_ERRCOUNT_SHIFT             (4U)
#define DIRU_DIRUUESA_ERRCOUNT_WIDTH             (8U)
#define DIRU_DIRUUESA_ERRCOUNT(x)                (((uint32_t)(((uint32_t)(x)) << DIRU_DIRUUESA_ERRCOUNT_SHIFT)) & DIRU_DIRUUESA_ERRCOUNT_MASK)
#define DIRU_DIRUUESA_ERRTYPE_MASK               (0xF000U)
#define DIRU_DIRUUESA_ERRTYPE_SHIFT              (12U)
#define DIRU_DIRUUESA_ERRTYPE_WIDTH              (4U)
#define DIRU_DIRUUESA_ERRTYPE(x)                 (((uint32_t)(((uint32_t)(x)) << DIRU_DIRUUESA_ERRTYPE_SHIFT)) & DIRU_DIRUUESA_ERRTYPE_MASK)
#define DIRU_DIRUUESA_ERRINFO_MASK               (0xFF0000U)
#define DIRU_DIRUUESA_ERRINFO_SHIFT              (16U)
#define DIRU_DIRUUESA_ERRINFO_WIDTH              (8U)
#define DIRU_DIRUUESA_ERRINFO(x)                 (((uint32_t)(((uint32_t)(x)) << DIRU_DIRUUESA_ERRINFO_SHIFT)) & DIRU_DIRUUESA_ERRINFO_MASK)
/*! @} */

/*! @name DIRUID - DIRU Identification Register */
/*! @{ */
#define DIRU_DIRUID_IMPLVER_MASK                 (0xFFU)
#define DIRU_DIRUID_IMPLVER_SHIFT                (0U)
#define DIRU_DIRUID_IMPLVER_WIDTH                (8U)
#define DIRU_DIRUID_IMPLVER(x)                   (((uint32_t)(((uint32_t)(x)) << DIRU_DIRUID_IMPLVER_SHIFT)) & DIRU_DIRUID_IMPLVER_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group DIRU_Register_Masks */


/*!
 * @}
 */ /* end of group DIRU_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- DMA_MP Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup DMA_MP_Peripheral_Access_Layer DMA_MP Peripheral Access Layer
 * @{
 */

/** DMA_MP - Size of Registers Arrays */
#define DMA_MP_GRPRI_COUNT                      32u

/** DMA_MP - Register Layout Typedef */
typedef struct {
  __IO uint32_t CSR;                                    /**< Management Page Control Register, offset: 0x0 */
  __I  uint32_t ES;                                     /**< Management Page Error Status Register, offset: 0x4 */
  __I  uint32_t INT;                                    /**< Management Page Interrupt Request Status Register, offset: 0x8 */
  __I  uint32_t HRS;                                    /**< Management Page Hardware Request Status Register, offset: 0xC */
  uint8_t RESERVED_0[240];
  __IO uint32_t CH_GRPRI[DMA_MP_GRPRI_COUNT];           /**< Channel Arbitration Group Register, array offset: 0x100, array step: 0x4 */
} DMA_MP_Type, *DMA_MP_MemMapPtr;

/** Number of instances of the DMA module. */
#define DMA_INSTANCE_COUNT                       (2u)

/** Peripheral DMA_0_MP base address */
#define DMA_0_MP_BASE                           (0x40144000u)
/** Peripheral DMA_0_MP base pointer */
#define DMA_0_MP                                ((DMA_MP_Type *)DMA_0_MP_BASE)
/** Peripheral DMA_1_MP base address */
#define DMA_1_MP_BASE                           (0x40244000u)
/** Peripheral DMA_1_MP base pointer */
#define DMA_1_MP                                ((DMA_MP_Type *)DMA_1_MP_BASE)
/** Array initializer of DMA_MP peripheral base addresses */
#define DMA_MP_BASE_ADDRS                       { DMA_0_MP_BASE, DMA_1_MP_BASE }
/** Array initializer of DMA_MP peripheral base pointers */
#define DMA_MP_BASE_PTRS                        { DMA_0_MP, DMA_1_MP }
/** Interrupt vectors for the DMA peripheral type */
#define DMA_CHN_IRQS                            { DMA0_0_15_IRQn, DMA0_16_31_IRQn, DMA1_0_15_IRQn, DMA1_16_31_IRQn }
#define DMA_ERROR_IRQS                          { DMA0_ERR0_31_IRQn, DMA1_ERR0_31_IRQn }

/* ----------------------------------------------------------------------------
   -- DMA Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup DMA_Register_Masks DMA Register Masks
 * @{
 */

/*! @name CSR - Management Page Control */
/*! @{ */
#define DMA_MP_CSR_EDBG_MASK                  (0x2U)
#define DMA_MP_CSR_EDBG_SHIFT                 (1U)
#define DMA_MP_CSR_EDBG_WIDTH                 (1U)
#define DMA_MP_CSR_EDBG(x)                    (((uint32_t)(((uint32_t)(x)) << DMA_MP_CSR_EDBG_SHIFT)) & DMA_MP_CSR_EDBG_MASK)
#define DMA_MP_CSR_ERCA_MASK                  (0x4U)
#define DMA_MP_CSR_ERCA_SHIFT                 (2U)
#define DMA_MP_CSR_ERCA_WIDTH                 (1U)
#define DMA_MP_CSR_ERCA(x)                    (((uint32_t)(((uint32_t)(x)) << DMA_MP_CSR_ERCA_SHIFT)) & DMA_MP_CSR_ERCA_MASK)
#define DMA_MP_CSR_HAE_MASK                   (0x10U)
#define DMA_MP_CSR_HAE_SHIFT                  (4U)
#define DMA_MP_CSR_HAE_WIDTH                  (1U)
#define DMA_MP_CSR_HAE(x)                     (((uint32_t)(((uint32_t)(x)) << DMA_MP_CSR_HAE_SHIFT)) & DMA_MP_CSR_HAE_MASK)
#define DMA_MP_CSR_HALT_MASK                  (0x20U)
#define DMA_MP_CSR_HALT_SHIFT                 (5U)
#define DMA_MP_CSR_HALT_WIDTH                 (1U)
#define DMA_MP_CSR_HALT(x)                    (((uint32_t)(((uint32_t)(x)) << DMA_MP_CSR_HALT_SHIFT)) & DMA_MP_CSR_HALT_MASK)
#define DMA_MP_CSR_GCLC_MASK                  (0x40U)
#define DMA_MP_CSR_GCLC_SHIFT                 (6U)
#define DMA_MP_CSR_GCLC_WIDTH                 (1U)
#define DMA_MP_CSR_GCLC(x)                    (((uint32_t)(((uint32_t)(x)) << DMA_MP_CSR_GCLC_SHIFT)) & DMA_MP_CSR_GCLC_MASK)
#define DMA_MP_CSR_GMRC_MASK                  (0x80U)
#define DMA_MP_CSR_GMRC_SHIFT                 (7U)
#define DMA_MP_CSR_GMRC_WIDTH                 (1U)
#define DMA_MP_CSR_GMRC(x)                    (((uint32_t)(((uint32_t)(x)) << DMA_MP_CSR_GMRC_SHIFT)) & DMA_MP_CSR_GMRC_MASK)
#define DMA_MP_CSR_ECX_MASK                   (0x100U)
#define DMA_MP_CSR_ECX_SHIFT                  (8U)
#define DMA_MP_CSR_ECX_WIDTH                  (1U)
#define DMA_MP_CSR_ECX(x)                     (((uint32_t)(((uint32_t)(x)) << DMA_MP_CSR_ECX_SHIFT)) & DMA_MP_CSR_ECX_MASK)
#define DMA_MP_CSR_CX_MASK                    (0x200U)
#define DMA_MP_CSR_CX_SHIFT                   (9U)
#define DMA_MP_CSR_CX_WIDTH                   (1U)
#define DMA_MP_CSR_CX(x)                      (((uint32_t)(((uint32_t)(x)) << DMA_MP_CSR_CX_SHIFT)) & DMA_MP_CSR_CX_MASK)
#define DMA_MP_CSR_ACTIVE_ID_MASK             (0x1F000000U)
#define DMA_MP_CSR_ACTIVE_ID_SHIFT            (24U)
#define DMA_MP_CSR_ACTIVE_ID_WIDTH            (5U)
#define DMA_MP_CSR_ACTIVE_ID(x)               (((uint32_t)(((uint32_t)(x)) << DMA_MP_CSR_ACTIVE_ID_SHIFT)) & DMA_MP_CSR_ACTIVE_ID_MASK)
#define DMA_MP_CSR_ACTIVE_MASK                (0x80000000U)
#define DMA_MP_CSR_ACTIVE_SHIFT               (31U)
#define DMA_MP_CSR_ACTIVE_WIDTH               (1U)
#define DMA_MP_CSR_ACTIVE(x)                  (((uint32_t)(((uint32_t)(x)) << DMA_MP_CSR_ACTIVE_SHIFT)) & DMA_MP_CSR_ACTIVE_MASK)
/*! @} */

/*! @name ES - Management Page Error Status */
/*! @{ */
#define DMA_MP_ES_DBE_MASK                    (0x1U)
#define DMA_MP_ES_DBE_SHIFT                   (0U)
#define DMA_MP_ES_DBE_WIDTH                   (1U)
#define DMA_MP_ES_DBE(x)                      (((uint32_t)(((uint32_t)(x)) << DMA_MP_ES_DBE_SHIFT)) & DMA_MP_ES_DBE_MASK)
#define DMA_MP_ES_SBE_MASK                    (0x2U)
#define DMA_MP_ES_SBE_SHIFT                   (1U)
#define DMA_MP_ES_SBE_WIDTH                   (1U)
#define DMA_MP_ES_SBE(x)                      (((uint32_t)(((uint32_t)(x)) << DMA_MP_ES_SBE_SHIFT)) & DMA_MP_ES_SBE_MASK)
#define DMA_MP_ES_SGE_MASK                    (0x4U)
#define DMA_MP_ES_SGE_SHIFT                   (2U)
#define DMA_MP_ES_SGE_WIDTH                   (1U)
#define DMA_MP_ES_SGE(x)                      (((uint32_t)(((uint32_t)(x)) << DMA_MP_ES_SGE_SHIFT)) & DMA_MP_ES_SGE_MASK)
#define DMA_MP_ES_NCE_MASK                    (0x8U)
#define DMA_MP_ES_NCE_SHIFT                   (3U)
#define DMA_MP_ES_NCE_WIDTH                   (1U)
#define DMA_MP_ES_NCE(x)                      (((uint32_t)(((uint32_t)(x)) << DMA_MP_ES_NCE_SHIFT)) & DMA_MP_ES_NCE_MASK)
#define DMA_MP_ES_DOE_MASK                    (0x10U)
#define DMA_MP_ES_DOE_SHIFT                   (4U)
#define DMA_MP_ES_DOE_WIDTH                   (1U)
#define DMA_MP_ES_DOE(x)                      (((uint32_t)(((uint32_t)(x)) << DMA_MP_ES_DOE_SHIFT)) & DMA_MP_ES_DOE_MASK)
#define DMA_MP_ES_DAE_MASK                    (0x20U)
#define DMA_MP_ES_DAE_SHIFT                   (5U)
#define DMA_MP_ES_DAE_WIDTH                   (1U)
#define DMA_MP_ES_DAE(x)                      (((uint32_t)(((uint32_t)(x)) << DMA_MP_ES_DAE_SHIFT)) & DMA_MP_ES_DAE_MASK)
#define DMA_MP_ES_SOE_MASK                    (0x40U)
#define DMA_MP_ES_SOE_SHIFT                   (6U)
#define DMA_MP_ES_SOE_WIDTH                   (1U)
#define DMA_MP_ES_SOE(x)                      (((uint32_t)(((uint32_t)(x)) << DMA_MP_ES_SOE_SHIFT)) & DMA_MP_ES_SOE_MASK)
#define DMA_MP_ES_SAE_MASK                    (0x80U)
#define DMA_MP_ES_SAE_SHIFT                   (7U)
#define DMA_MP_ES_SAE_WIDTH                   (1U)
#define DMA_MP_ES_SAE(x)                      (((uint32_t)(((uint32_t)(x)) << DMA_MP_ES_SAE_SHIFT)) & DMA_MP_ES_SAE_MASK)
#define DMA_MP_ES_ECX_MASK                    (0x100U)
#define DMA_MP_ES_ECX_SHIFT                   (8U)
#define DMA_MP_ES_ECX_WIDTH                   (1U)
#define DMA_MP_ES_ECX(x)                      (((uint32_t)(((uint32_t)(x)) << DMA_MP_ES_ECX_SHIFT)) & DMA_MP_ES_ECX_MASK)
#define DMA_MP_ES_UCE_MASK                    (0x200U)
#define DMA_MP_ES_UCE_SHIFT                   (9U)
#define DMA_MP_ES_UCE_WIDTH                   (1U)
#define DMA_MP_ES_UCE(x)                      (((uint32_t)(((uint32_t)(x)) << DMA_MP_ES_UCE_SHIFT)) & DMA_MP_ES_UCE_MASK)
#define DMA_MP_ES_ERRCHN_MASK                 (0x1F000000U)
#define DMA_MP_ES_ERRCHN_SHIFT                (24U)
#define DMA_MP_ES_ERRCHN_WIDTH                (5U)
#define DMA_MP_ES_ERRCHN(x)                   (((uint32_t)(((uint32_t)(x)) << DMA_MP_ES_ERRCHN_SHIFT)) & DMA_MP_ES_ERRCHN_MASK)
#define DMA_MP_ES_VLD_MASK                    (0x80000000U)
#define DMA_MP_ES_VLD_SHIFT                   (31U)
#define DMA_MP_ES_VLD_WIDTH                   (1U)
#define DMA_MP_ES_VLD(x)                      (((uint32_t)(((uint32_t)(x)) << DMA_MP_ES_VLD_SHIFT)) & DMA_MP_ES_VLD_MASK)
/*! @} */

/*! @name INT - Management Page Interrupt Request Status */
/*! @{ */
#define DMA_MP_INT_INT_MASK                   (0xFFFFFFFFU)
#define DMA_MP_INT_INT_SHIFT                  (0U)
#define DMA_MP_INT_INT_WIDTH                  (32U)
#define DMA_MP_INT_INT(x)                     (((uint32_t)(((uint32_t)(x)) << DMA_MP_INT_INT_SHIFT)) & DMA_MP_INT_INT_MASK)
/*! @} */

/*! @name HRS - Management Page Hardware Request Status */
/*! @{ */
#define DMA_MP_HRS_HRS_MASK                   (0xFFFFFFFFU)
#define DMA_MP_HRS_HRS_SHIFT                  (0U)
#define DMA_MP_HRS_HRS_WIDTH                  (32U)
#define DMA_MP_HRS_HRS(x)                     (((uint32_t)(((uint32_t)(x)) << DMA_MP_HRS_HRS_SHIFT)) & DMA_MP_HRS_HRS_MASK)
/*! @} */

/*! @name CH_GRPRI - Channel Arbitration Group */
/*! @{ */
#define DMA_CH_GRPRI_GRPRI_MASK                  (0x1FU)
#define DMA_CH_GRPRI_GRPRI_SHIFT                 (0U)
#define DMA_CH_GRPRI_GRPRI_WIDTH                 (5U)
#define DMA_CH_GRPRI_GRPRI(x)                    (((uint32_t)(((uint32_t)(x)) << DMA_CH_GRPRI_GRPRI_SHIFT)) & DMA_CH_GRPRI_GRPRI_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group DMA_Register_Masks */


/*!
 * @}
 */ /* end of group DMA_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- DMAMUX Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup DMAMUX_Peripheral_Access_Layer DMAMUX Peripheral Access Layer
 * @{
 */

/** DMAMUX - Size of Registers Arrays */
#define DMAMUX_CHCFG_COUNT                        16u

/** DMAMUX - Register Layout Typedef */
typedef struct {
  __IO uint8_t CHCFG[DMAMUX_CHCFG_COUNT];          /**< Channel Configuration register, array offset: 0x0, array step: 0x1 */
} DMAMUX_Type, *DMAMUX_MemMapPtr;

/** Number of instances of the DMAMUX module. */
#define DMAMUX_INSTANCE_COUNT                    (4u)

/* DMAMUX - Peripheral instance base addresses */
/** Peripheral DMAMUX_0 base address */
#define DMAMUX_0_BASE                            (0x4012C000u)
/** Peripheral DMAMUX_0 base pointer */
#define DMAMUX_0                                 ((DMAMUX_Type *)DMAMUX_0_BASE)
/** Peripheral DMAMUX_1 base address */
#define DMAMUX_1_BASE                            (0x40130000u)
/** Peripheral DMAMUX_1 base pointer */
#define DMAMUX_1                                 ((DMAMUX_Type *)DMAMUX_1_BASE)
/** Peripheral DMAMUX_2 base address */
#define DMAMUX_2_BASE                            (0x4022C000u)
/** Peripheral DMAMUX_2 base pointer */
#define DMAMUX_2                                 ((DMAMUX_Type *)DMAMUX_2_BASE)
/** Peripheral DMAMUX_3 base address */
#define DMAMUX_3_BASE                            (0x40230000u)
/** Peripheral DMAMUX_3 base pointer */
#define DMAMUX_3                                 ((DMAMUX_Type *)DMAMUX_3_BASE)
/** Array initializer of DMAMUX peripheral base addresses */
#define DMAMUX_BASE_ADDRS                        { DMAMUX_0_BASE, DMAMUX_1_BASE, DMAMUX_2_BASE, DMAMUX_3_BASE }
/** Array initializer of DMAMUX peripheral base pointers */
#define DMAMUX_BASE_PTRS                         { DMAMUX_0, DMAMUX_1, DMAMUX_2, DMAMUX_3 }

/* ----------------------------------------------------------------------------
   -- DMAMUX Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup DMAMUX_Register_Masks DMAMUX Register Masks
 * @{
 */

/*! @name CHCFG - Channel Configuration register */
/*! @{ */
#define DMAMUX_CHCFG_SOURCE_MASK                 (0x3FU)
#define DMAMUX_CHCFG_SOURCE_SHIFT                (0U)
#define DMAMUX_CHCFG_SOURCE_WIDTH                (6U)
#define DMAMUX_CHCFG_SOURCE(x)                   (((uint8_t)(((uint8_t)(x)) << DMAMUX_CHCFG_SOURCE_SHIFT)) & DMAMUX_CHCFG_SOURCE_MASK)
#define DMAMUX_CHCFG_TRIG_MASK                   (0x40U)
#define DMAMUX_CHCFG_TRIG_SHIFT                  (6U)
#define DMAMUX_CHCFG_TRIG_WIDTH                  (1U)
#define DMAMUX_CHCFG_TRIG(x)                     (((uint8_t)(((uint8_t)(x)) << DMAMUX_CHCFG_TRIG_SHIFT)) & DMAMUX_CHCFG_TRIG_MASK)
#define DMAMUX_CHCFG_ENBL_MASK                   (0x80U)
#define DMAMUX_CHCFG_ENBL_SHIFT                  (7U)
#define DMAMUX_CHCFG_ENBL_WIDTH                  (1U)
#define DMAMUX_CHCFG_ENBL(x)                     (((uint8_t)(((uint8_t)(x)) << DMAMUX_CHCFG_ENBL_SHIFT)) & DMAMUX_CHCFG_ENBL_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group DMAMUX_Register_Masks */


/*!
 * @}
 */ /* end of group DMAMUX_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- DMA_CRC Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup DMA_CRC_Peripheral_Access_Layer DMA_CRC Peripheral Access Layer
 * @{
 */

/** DMA_CRC - Size of Registers Arrays */
#define DMA_CRC_CONTROL_REGISTER_COUNT            8u

/** DMA_CRC - Register Layout Typedef */
typedef struct {
  __IO uint32_t GEC;                               /**< Global Enable CRC Register, offset: 0x0 */
  uint8_t RESERVED_0[12];
  struct {                                         /* offset: 0x10, array step: 0x10 */
    __IO uint32_t CTL;                               /**< CRC Control Register, array offset: 0x10, array step: 0x10 */
    __IO uint32_t ICRC;                              /**< Initial CRC Value Register, array offset: 0x14, array step: 0x10 */
    __I  uint32_t FCRC;                              /**< Final CRC Value Register, array offset: 0x18, array step: 0x10 */
    uint8_t RESERVED_0[4];
  } CONTROL_REGISTER[DMA_CRC_CONTROL_REGISTER_COUNT];
} DMA_CRC_Type, *DMA_CRC_MemMapPtr;

/** Number of instances of the DMA_CRC module. */
#define DMA_CRC_INSTANCE_COUNT                   (2u)

/* DMA_CRC - Peripheral instance base addresses */
/** Peripheral DMA_CRC_0 base address */
#define DMA_CRC_0_BASE                           (0x4013C000u)
/** Peripheral DMA_CRC_0 base pointer */
#define DMA_CRC_0                                ((DMA_CRC_Type *)DMA_CRC_0_BASE)
/** Peripheral DMA_CRC_1 base address */
#define DMA_CRC_1_BASE                           (0x4023C000u)
/** Peripheral DMA_CRC_1 base pointer */
#define DMA_CRC_1                                ((DMA_CRC_Type *)DMA_CRC_1_BASE)
/** Array initializer of DMA_CRC peripheral base addresses */
#define DMA_CRC_BASE_ADDRS                       { DMA_CRC_0_BASE, DMA_CRC_1_BASE }
/** Array initializer of DMA_CRC peripheral base pointers */
#define DMA_CRC_BASE_PTRS                        { DMA_CRC_0, DMA_CRC_1 }

/* ----------------------------------------------------------------------------
   -- DMA_CRC Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup DMA_CRC_Register_Masks DMA_CRC Register Masks
 * @{
 */

/*! @name GEC - Global Enable CRC Register */
/*! @{ */
#define DMA_CRC_GEC_GBL_EN_MASK                  (0x1U)
#define DMA_CRC_GEC_GBL_EN_SHIFT                 (0U)
#define DMA_CRC_GEC_GBL_EN_WIDTH                 (1U)
#define DMA_CRC_GEC_GBL_EN(x)                    (((uint32_t)(((uint32_t)(x)) << DMA_CRC_GEC_GBL_EN_SHIFT)) & DMA_CRC_GEC_GBL_EN_MASK)
#define DMA_CRC_GEC_SWAP_BIT_MASK                (0x2U)
#define DMA_CRC_GEC_SWAP_BIT_SHIFT               (1U)
#define DMA_CRC_GEC_SWAP_BIT_WIDTH               (1U)
#define DMA_CRC_GEC_SWAP_BIT(x)                  (((uint32_t)(((uint32_t)(x)) << DMA_CRC_GEC_SWAP_BIT_SHIFT)) & DMA_CRC_GEC_SWAP_BIT_MASK)
#define DMA_CRC_GEC_SWAP_BYTE_MASK               (0x80U)
#define DMA_CRC_GEC_SWAP_BYTE_SHIFT              (7U)
#define DMA_CRC_GEC_SWAP_BYTE_WIDTH              (1U)
#define DMA_CRC_GEC_SWAP_BYTE(x)                 (((uint32_t)(((uint32_t)(x)) << DMA_CRC_GEC_SWAP_BYTE_SHIFT)) & DMA_CRC_GEC_SWAP_BYTE_MASK)
/*! @} */

/*! @name CTL - CRC Control Register */
/*! @{ */
#define DMA_CRC_CTL_CH_SEL_MASK                  (0x3FU)
#define DMA_CRC_CTL_CH_SEL_SHIFT                 (0U)
#define DMA_CRC_CTL_CH_SEL_WIDTH                 (6U)
#define DMA_CRC_CTL_CH_SEL(x)                    (((uint32_t)(((uint32_t)(x)) << DMA_CRC_CTL_CH_SEL_SHIFT)) & DMA_CRC_CTL_CH_SEL_MASK)
#define DMA_CRC_CTL_POLY_SEL_MASK                (0xF00U)
#define DMA_CRC_CTL_POLY_SEL_SHIFT               (8U)
#define DMA_CRC_CTL_POLY_SEL_WIDTH               (4U)
#define DMA_CRC_CTL_POLY_SEL(x)                  (((uint32_t)(((uint32_t)(x)) << DMA_CRC_CTL_POLY_SEL_SHIFT)) & DMA_CRC_CTL_POLY_SEL_MASK)
#define DMA_CRC_CTL_INIT_SEL_MASK                (0x8000U)
#define DMA_CRC_CTL_INIT_SEL_SHIFT               (15U)
#define DMA_CRC_CTL_INIT_SEL_WIDTH               (1U)
#define DMA_CRC_CTL_INIT_SEL(x)                  (((uint32_t)(((uint32_t)(x)) << DMA_CRC_CTL_INIT_SEL_SHIFT)) & DMA_CRC_CTL_INIT_SEL_MASK)
#define DMA_CRC_CTL_MODE_MASK                    (0x70000U)
#define DMA_CRC_CTL_MODE_SHIFT                   (16U)
#define DMA_CRC_CTL_MODE_WIDTH                   (3U)
#define DMA_CRC_CTL_MODE(x)                      (((uint32_t)(((uint32_t)(x)) << DMA_CRC_CTL_MODE_SHIFT)) & DMA_CRC_CTL_MODE_MASK)
#define DMA_CRC_CTL_EN_MASK                      (0x80000000U)
#define DMA_CRC_CTL_EN_SHIFT                     (31U)
#define DMA_CRC_CTL_EN_WIDTH                     (1U)
#define DMA_CRC_CTL_EN(x)                        (((uint32_t)(((uint32_t)(x)) << DMA_CRC_CTL_EN_SHIFT)) & DMA_CRC_CTL_EN_MASK)
/*! @} */

/*! @name ICRC - Initial CRC Value Register */
/*! @{ */
#define DMA_CRC_ICRC_INI_CRC_VAL_MASK            (0xFFFFFFFFU)
#define DMA_CRC_ICRC_INI_CRC_VAL_SHIFT           (0U)
#define DMA_CRC_ICRC_INI_CRC_VAL_WIDTH           (32U)
#define DMA_CRC_ICRC_INI_CRC_VAL(x)              (((uint32_t)(((uint32_t)(x)) << DMA_CRC_ICRC_INI_CRC_VAL_SHIFT)) & DMA_CRC_ICRC_INI_CRC_VAL_MASK)
/*! @} */

/*! @name FCRC - Final CRC Value Register */
/*! @{ */
#define DMA_CRC_FCRC_CHKSUM_VAL_MASK             (0xFFFFFFFFU)
#define DMA_CRC_FCRC_CHKSUM_VAL_SHIFT            (0U)
#define DMA_CRC_FCRC_CHKSUM_VAL_WIDTH            (32U)
#define DMA_CRC_FCRC_CHKSUM_VAL(x)               (((uint32_t)(((uint32_t)(x)) << DMA_CRC_FCRC_CHKSUM_VAL_SHIFT)) & DMA_CRC_FCRC_CHKSUM_VAL_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group DMA_CRC_Register_Masks */


/*!
 * @}
 */ /* end of group DMA_CRC_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- DMA_TCD Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup DMA_TCD_Peripheral_Access_Layer DMA_TCD Peripheral Access Layer
 * @{
 */

/** DMA_TCD - Size of Registers Arrays */
#define DMA_TCD_TCD_COUNT                         32u

/** DMA_TCD - Register Layout Typedef */
typedef struct {
  struct {                                         /* offset: 0x0, array step: 0x1000 */
    __IO uint32_t CH_CSR;                            /**< Channel Control and Status, array offset: 0x0, array step: 0x1000 */
    __IO uint32_t CH_ES;                             /**< Channel Error Status, array offset: 0x4, array step: 0x1000 */
    __IO uint32_t CH_INT;                            /**< Channel Interrupt Status, array offset: 0x8, array step: 0x1000 */
    __IO uint32_t CH_SBR;                            /**< Channel System Bus, array offset: 0xC, array step: 0x1000 */
    __IO uint32_t CH_PRI;                            /**< Channel Priority, array offset: 0x10, array step: 0x1000 */
    uint8_t RESERVED_0[12];
    __IO uint32_t SADDR;                             /**< TCD Source Address, array offset: 0x20, array step: 0x1000 */
    __IO uint16_t SOFF;                              /**< TCD Signed Source Address Offset, array offset: 0x24, array step: 0x1000 */
    __IO uint16_t ATTR;                              /**< TCD Transfer Attributes, array offset: 0x26, array step: 0x1000 */
    union {                                          /* offset: 0x28, array step: 0x1000 */
      __IO uint32_t MLOFFNO;                         /**< TCD Transfer Size without Minor Loop Offsets Register, array offset: 0x28, array step: 0x1000 */
      __IO uint32_t MLOFFYES;                        /**< TCD Transfer Size with Minor Loop Offsets Register, array offset: 0x28, array step: 0x1000 */
    } NBYTES;
    __IO uint32_t SLAST;                             /**< TCD Last Source Address Adjustment / Store DADDR Address Register, array offset: 0x2C, array step: 0x1000 */
    __IO uint32_t DADDR;                             /**< TCD Destination Address, array offset: 0x30, array step: 0x1000 */
    __IO uint16_t DOFF;                              /**< TCD Signed Destination Address Offset, array offset: 0x34, array step: 0x1000 */
    union {                                          /* offset: 0x36, array step: 0x1000 */
      __IO uint16_t ELINKNO;                         /**< TCD Current Major Loop Count (Minor Loop Channel Linking Disabled) Register, array offset: 0x36, array step: 0x1000 */
      __IO uint16_t ELINKYES;                        /**< TCD Current Major Loop Count (Minor Loop Channel Linking Enabled) Register, array offset: 0x36, array step: 0x1000 */
    } CITER;
    __IO uint32_t DLASTSGA;                          /**< TCD Last Destination Address Adjustment / Scatter Gather Address Register, array offset: 0x38, array step: 0x1000 */
    __IO uint16_t CSR;                               /**< TCD Control and Status Register, array offset: 0x3C, array step: 0x1000 */
    union {                                          /* offset: 0x3E, array step: 0x1000 */
      __IO uint16_t ELINKNO;                         /**< TCD Beginning Major Loop Count (Minor Loop Channel Linking Disabled) Register, array offset: 0x3E, array step: 0x1000 */
      __IO uint16_t ELINKYES;                        /**< TCD Beginning Major Loop Count (Minor Loop Channel Linking Enabled) Register, array offset: 0x3E, array step: 0x1000 */
    } BITER;
    uint8_t RESERVED_1[4032];
  } TCD[DMA_TCD_TCD_COUNT];
} DMA_TCD_Type, *DMA_TCD_MemMapPtr;

/** Number of instances of the DMA_TCD module. */
#define DMA_TCD_INSTANCE_COUNT                   (2u)

/* DMA_TCD - Peripheral instance base addresses */
/** Peripheral EDMA_0_TCD base address */
#define EDMA_0_TCD_BASE                          (0x40148000u)
/** Peripheral EDMA_0_TCD base pointer */
#define EDMA_0_TCD                               ((DMA_TCD_Type *)EDMA_0_TCD_BASE)
/** Peripheral EDMA_1_TCD base address */
#define EDMA_1_TCD_BASE                          (0x40248000u)
/** Peripheral EDMA_1_TCD base pointer */
#define EDMA_1_TCD                               ((DMA_TCD_Type *)EDMA_1_TCD_BASE)
/** Array initializer of DMA_TCD peripheral base addresses */
#define DMA_TCD_BASE_ADDRS                       { EDMA_0_TCD_BASE, EDMA_1_TCD_BASE }
/** Array initializer of DMA_TCD peripheral base pointers */
#define DMA_TCD_BASE_PTRS                        { EDMA_0_TCD, EDMA_1_TCD }

/* ----------------------------------------------------------------------------
   -- DMA_TCD Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup DMA_TCD_Register_Masks DMA_TCD Register Masks
 * @{
 */

/*! @name CH_CSR - Channel Control and Status */
/*! @{ */
#define DMA_TCD_CH_CSR_ERQ_MASK                  (0x1U)
#define DMA_TCD_CH_CSR_ERQ_SHIFT                 (0U)
#define DMA_TCD_CH_CSR_ERQ_WIDTH                 (1U)
#define DMA_TCD_CH_CSR_ERQ(x)                    (((uint32_t)(((uint32_t)(x)) << DMA_TCD_CH_CSR_ERQ_SHIFT)) & DMA_TCD_CH_CSR_ERQ_MASK)
#define DMA_TCD_CH_CSR_EARQ_MASK                 (0x2U)
#define DMA_TCD_CH_CSR_EARQ_SHIFT                (1U)
#define DMA_TCD_CH_CSR_EARQ_WIDTH                (1U)
#define DMA_TCD_CH_CSR_EARQ(x)                   (((uint32_t)(((uint32_t)(x)) << DMA_TCD_CH_CSR_EARQ_SHIFT)) & DMA_TCD_CH_CSR_EARQ_MASK)
#define DMA_TCD_CH_CSR_EEI_MASK                  (0x4U)
#define DMA_TCD_CH_CSR_EEI_SHIFT                 (2U)
#define DMA_TCD_CH_CSR_EEI_WIDTH                 (1U)
#define DMA_TCD_CH_CSR_EEI(x)                    (((uint32_t)(((uint32_t)(x)) << DMA_TCD_CH_CSR_EEI_SHIFT)) & DMA_TCD_CH_CSR_EEI_MASK)
#define DMA_TCD_CH_CSR_EBW_MASK                  (0x8U)
#define DMA_TCD_CH_CSR_EBW_SHIFT                 (3U)
#define DMA_TCD_CH_CSR_EBW_WIDTH                 (1U)
#define DMA_TCD_CH_CSR_EBW(x)                    (((uint32_t)(((uint32_t)(x)) << DMA_TCD_CH_CSR_EBW_SHIFT)) & DMA_TCD_CH_CSR_EBW_MASK)
#define DMA_TCD_CH_CSR_DONE_MASK                 (0x40000000U)
#define DMA_TCD_CH_CSR_DONE_SHIFT                (30U)
#define DMA_TCD_CH_CSR_DONE_WIDTH                (1U)
#define DMA_TCD_CH_CSR_DONE(x)                   (((uint32_t)(((uint32_t)(x)) << DMA_TCD_CH_CSR_DONE_SHIFT)) & DMA_TCD_CH_CSR_DONE_MASK)
#define DMA_TCD_CH_CSR_ACTIVE_MASK               (0x80000000U)
#define DMA_TCD_CH_CSR_ACTIVE_SHIFT              (31U)
#define DMA_TCD_CH_CSR_ACTIVE_WIDTH              (1U)
#define DMA_TCD_CH_CSR_ACTIVE(x)                 (((uint32_t)(((uint32_t)(x)) << DMA_TCD_CH_CSR_ACTIVE_SHIFT)) & DMA_TCD_CH_CSR_ACTIVE_MASK)
/*! @} */

/*! @name CH_ES - Channel Error Status */
/*! @{ */
#define DMA_TCD_CH_ES_DBE_MASK                   (0x1U)
#define DMA_TCD_CH_ES_DBE_SHIFT                  (0U)
#define DMA_TCD_CH_ES_DBE_WIDTH                  (1U)
#define DMA_TCD_CH_ES_DBE(x)                     (((uint32_t)(((uint32_t)(x)) << DMA_TCD_CH_ES_DBE_SHIFT)) & DMA_TCD_CH_ES_DBE_MASK)
#define DMA_TCD_CH_ES_SBE_MASK                   (0x2U)
#define DMA_TCD_CH_ES_SBE_SHIFT                  (1U)
#define DMA_TCD_CH_ES_SBE_WIDTH                  (1U)
#define DMA_TCD_CH_ES_SBE(x)                     (((uint32_t)(((uint32_t)(x)) << DMA_TCD_CH_ES_SBE_SHIFT)) & DMA_TCD_CH_ES_SBE_MASK)
#define DMA_TCD_CH_ES_SGE_MASK                   (0x4U)
#define DMA_TCD_CH_ES_SGE_SHIFT                  (2U)
#define DMA_TCD_CH_ES_SGE_WIDTH                  (1U)
#define DMA_TCD_CH_ES_SGE(x)                     (((uint32_t)(((uint32_t)(x)) << DMA_TCD_CH_ES_SGE_SHIFT)) & DMA_TCD_CH_ES_SGE_MASK)
#define DMA_TCD_CH_ES_NCE_MASK                   (0x8U)
#define DMA_TCD_CH_ES_NCE_SHIFT                  (3U)
#define DMA_TCD_CH_ES_NCE_WIDTH                  (1U)
#define DMA_TCD_CH_ES_NCE(x)                     (((uint32_t)(((uint32_t)(x)) << DMA_TCD_CH_ES_NCE_SHIFT)) & DMA_TCD_CH_ES_NCE_MASK)
#define DMA_TCD_CH_ES_DOE_MASK                   (0x10U)
#define DMA_TCD_CH_ES_DOE_SHIFT                  (4U)
#define DMA_TCD_CH_ES_DOE_WIDTH                  (1U)
#define DMA_TCD_CH_ES_DOE(x)                     (((uint32_t)(((uint32_t)(x)) << DMA_TCD_CH_ES_DOE_SHIFT)) & DMA_TCD_CH_ES_DOE_MASK)
#define DMA_TCD_CH_ES_DAE_MASK                   (0x20U)
#define DMA_TCD_CH_ES_DAE_SHIFT                  (5U)
#define DMA_TCD_CH_ES_DAE_WIDTH                  (1U)
#define DMA_TCD_CH_ES_DAE(x)                     (((uint32_t)(((uint32_t)(x)) << DMA_TCD_CH_ES_DAE_SHIFT)) & DMA_TCD_CH_ES_DAE_MASK)
#define DMA_TCD_CH_ES_SOE_MASK                   (0x40U)
#define DMA_TCD_CH_ES_SOE_SHIFT                  (6U)
#define DMA_TCD_CH_ES_SOE_WIDTH                  (1U)
#define DMA_TCD_CH_ES_SOE(x)                     (((uint32_t)(((uint32_t)(x)) << DMA_TCD_CH_ES_SOE_SHIFT)) & DMA_TCD_CH_ES_SOE_MASK)
#define DMA_TCD_CH_ES_SAE_MASK                   (0x80U)
#define DMA_TCD_CH_ES_SAE_SHIFT                  (7U)
#define DMA_TCD_CH_ES_SAE_WIDTH                  (1U)
#define DMA_TCD_CH_ES_SAE(x)                     (((uint32_t)(((uint32_t)(x)) << DMA_TCD_CH_ES_SAE_SHIFT)) & DMA_TCD_CH_ES_SAE_MASK)
#define DMA_TCD_CH_ES_ERR_MASK                   (0x80000000U)
#define DMA_TCD_CH_ES_ERR_SHIFT                  (31U)
#define DMA_TCD_CH_ES_ERR_WIDTH                  (1U)
#define DMA_TCD_CH_ES_ERR(x)                     (((uint32_t)(((uint32_t)(x)) << DMA_TCD_CH_ES_ERR_SHIFT)) & DMA_TCD_CH_ES_ERR_MASK)
/*! @} */

/*! @name CH_INT - Channel Interrupt Status */
/*! @{ */
#define DMA_TCD_CH_INT_INT_MASK                  (0x1U)
#define DMA_TCD_CH_INT_INT_SHIFT                 (0U)
#define DMA_TCD_CH_INT_INT_WIDTH                 (1U)
#define DMA_TCD_CH_INT_INT(x)                    (((uint32_t)(((uint32_t)(x)) << DMA_TCD_CH_INT_INT_SHIFT)) & DMA_TCD_CH_INT_INT_MASK)
/*! @} */

/*! @name CH_SBR - Channel System Bus */
/*! @{ */
#define DMA_TCD_CH_SBR_MID_MASK                  (0x3FU)
#define DMA_TCD_CH_SBR_MID_SHIFT                 (0U)
#define DMA_TCD_CH_SBR_MID_WIDTH                 (6U)
#define DMA_TCD_CH_SBR_MID(x)                    (((uint32_t)(((uint32_t)(x)) << DMA_TCD_CH_SBR_MID_SHIFT)) & DMA_TCD_CH_SBR_MID_MASK)
#define DMA_TCD_CH_SBR_PAL_MASK                  (0x8000U)
#define DMA_TCD_CH_SBR_PAL_SHIFT                 (15U)
#define DMA_TCD_CH_SBR_PAL_WIDTH                 (1U)
#define DMA_TCD_CH_SBR_PAL(x)                    (((uint32_t)(((uint32_t)(x)) << DMA_TCD_CH_SBR_PAL_SHIFT)) & DMA_TCD_CH_SBR_PAL_MASK)
#define DMA_TCD_CH_SBR_EMI_MASK                  (0x10000U)
#define DMA_TCD_CH_SBR_EMI_SHIFT                 (16U)
#define DMA_TCD_CH_SBR_EMI_WIDTH                 (1U)
#define DMA_TCD_CH_SBR_EMI(x)                    (((uint32_t)(((uint32_t)(x)) << DMA_TCD_CH_SBR_EMI_SHIFT)) & DMA_TCD_CH_SBR_EMI_MASK)
#define DMA_TCD_CH_SBR_ATTR_MASK                 (0xE0000U)
#define DMA_TCD_CH_SBR_ATTR_SHIFT                (17U)
#define DMA_TCD_CH_SBR_ATTR_WIDTH                (3U)
#define DMA_TCD_CH_SBR_ATTR(x)                   (((uint32_t)(((uint32_t)(x)) << DMA_TCD_CH_SBR_ATTR_SHIFT)) & DMA_TCD_CH_SBR_ATTR_MASK)
/*! @} */

/*! @name CH_PRI - Channel Priority */
/*! @{ */
#define DMA_TCD_CH_PRI_APL_MASK                  (0x7U)
#define DMA_TCD_CH_PRI_APL_SHIFT                 (0U)
#define DMA_TCD_CH_PRI_APL_WIDTH                 (3U)
#define DMA_TCD_CH_PRI_APL(x)                    (((uint32_t)(((uint32_t)(x)) << DMA_TCD_CH_PRI_APL_SHIFT)) & DMA_TCD_CH_PRI_APL_MASK)
#define DMA_TCD_CH_PRI_DPA_MASK                  (0x40000000U)
#define DMA_TCD_CH_PRI_DPA_SHIFT                 (30U)
#define DMA_TCD_CH_PRI_DPA_WIDTH                 (1U)
#define DMA_TCD_CH_PRI_DPA(x)                    (((uint32_t)(((uint32_t)(x)) << DMA_TCD_CH_PRI_DPA_SHIFT)) & DMA_TCD_CH_PRI_DPA_MASK)
#define DMA_TCD_CH_PRI_ECP_MASK                  (0x80000000U)
#define DMA_TCD_CH_PRI_ECP_SHIFT                 (31U)
#define DMA_TCD_CH_PRI_ECP_WIDTH                 (1U)
#define DMA_TCD_CH_PRI_ECP(x)                    (((uint32_t)(((uint32_t)(x)) << DMA_TCD_CH_PRI_ECP_SHIFT)) & DMA_TCD_CH_PRI_ECP_MASK)
/*! @} */

/*! @name SADDR - TCD Source Address */
/*! @{ */
#define DMA_TCD_SADDR_SADDR_MASK                 (0xFFFFFFFFU)
#define DMA_TCD_SADDR_SADDR_SHIFT                (0U)
#define DMA_TCD_SADDR_SADDR_WIDTH                (32U)
#define DMA_TCD_SADDR_SADDR(x)                   (((uint32_t)(((uint32_t)(x)) << DMA_TCD_SADDR_SADDR_SHIFT)) & DMA_TCD_SADDR_SADDR_MASK)
/*! @} */

/*! @name SOFF - TCD Signed Source Address Offset */
/*! @{ */
#define DMA_TCD_SOFF_SOFF_MASK                   (0xFFFFU)
#define DMA_TCD_SOFF_SOFF_SHIFT                  (0U)
#define DMA_TCD_SOFF_SOFF_WIDTH                  (16U)
#define DMA_TCD_SOFF_SOFF(x)                     (((uint16_t)(((uint16_t)(x)) << DMA_TCD_SOFF_SOFF_SHIFT)) & DMA_TCD_SOFF_SOFF_MASK)
/*! @} */

/*! @name ATTR - TCD Transfer Attributes */
/*! @{ */
#define DMA_TCD_ATTR_DSIZE_MASK                  (0x7U)
#define DMA_TCD_ATTR_DSIZE_SHIFT                 (0U)
#define DMA_TCD_ATTR_DSIZE_WIDTH                 (3U)
#define DMA_TCD_ATTR_DSIZE(x)                    (((uint16_t)(((uint16_t)(x)) << DMA_TCD_ATTR_DSIZE_SHIFT)) & DMA_TCD_ATTR_DSIZE_MASK)
#define DMA_TCD_ATTR_DMOD_MASK                   (0xF8U)
#define DMA_TCD_ATTR_DMOD_SHIFT                  (3U)
#define DMA_TCD_ATTR_DMOD_WIDTH                  (5U)
#define DMA_TCD_ATTR_DMOD(x)                     (((uint16_t)(((uint16_t)(x)) << DMA_TCD_ATTR_DMOD_SHIFT)) & DMA_TCD_ATTR_DMOD_MASK)
#define DMA_TCD_ATTR_SSIZE_MASK                  (0x700U)
#define DMA_TCD_ATTR_SSIZE_SHIFT                 (8U)
#define DMA_TCD_ATTR_SSIZE_WIDTH                 (3U)
#define DMA_TCD_ATTR_SSIZE(x)                    (((uint16_t)(((uint16_t)(x)) << DMA_TCD_ATTR_SSIZE_SHIFT)) & DMA_TCD_ATTR_SSIZE_MASK)
#define DMA_TCD_ATTR_SMOD_MASK                   (0xF800U)
#define DMA_TCD_ATTR_SMOD_SHIFT                  (11U)
#define DMA_TCD_ATTR_SMOD_WIDTH                  (5U)
#define DMA_TCD_ATTR_SMOD(x)                     (((uint16_t)(((uint16_t)(x)) << DMA_TCD_ATTR_SMOD_SHIFT)) & DMA_TCD_ATTR_SMOD_MASK)
/*! @} */

/*! @name NBYTES_MLOFFNO - TCD Transfer Size Without Minor Loop Offsets */
/*! @{ */
#define DMA_TCD_NBYTES_MLOFFNO_NBYTES_MASK       (0x3FFFFFFFU)
#define DMA_TCD_NBYTES_MLOFFNO_NBYTES_SHIFT      (0U)
#define DMA_TCD_NBYTES_MLOFFNO_NBYTES_WIDTH      (30U)
#define DMA_TCD_NBYTES_MLOFFNO_NBYTES(x)         (((uint32_t)(((uint32_t)(x)) << DMA_TCD_NBYTES_MLOFFNO_NBYTES_SHIFT)) & DMA_TCD_NBYTES_MLOFFNO_NBYTES_MASK)
#define DMA_TCD_NBYTES_MLOFFNO_DMLOE_MASK        (0x40000000U)
#define DMA_TCD_NBYTES_MLOFFNO_DMLOE_SHIFT       (30U)
#define DMA_TCD_NBYTES_MLOFFNO_DMLOE_WIDTH       (1U)
#define DMA_TCD_NBYTES_MLOFFNO_DMLOE(x)          (((uint32_t)(((uint32_t)(x)) << DMA_TCD_NBYTES_MLOFFNO_DMLOE_SHIFT)) & DMA_TCD_NBYTES_MLOFFNO_DMLOE_MASK)
#define DMA_TCD_NBYTES_MLOFFNO_SMLOE_MASK        (0x80000000U)
#define DMA_TCD_NBYTES_MLOFFNO_SMLOE_SHIFT       (31U)
#define DMA_TCD_NBYTES_MLOFFNO_SMLOE_WIDTH       (1U)
#define DMA_TCD_NBYTES_MLOFFNO_SMLOE(x)          (((uint32_t)(((uint32_t)(x)) << DMA_TCD_NBYTES_MLOFFNO_SMLOE_SHIFT)) & DMA_TCD_NBYTES_MLOFFNO_SMLOE_MASK)
/*! @} */

/*! @name NBYTES_MLOFFYES - TCD Transfer Size with Minor Loop Offsets */
/*! @{ */
#define DMA_TCD_NBYTES_MLOFFYES_NBYTES_MASK      (0x3FFU)
#define DMA_TCD_NBYTES_MLOFFYES_NBYTES_SHIFT     (0U)
#define DMA_TCD_NBYTES_MLOFFYES_NBYTES_WIDTH     (10U)
#define DMA_TCD_NBYTES_MLOFFYES_NBYTES(x)        (((uint32_t)(((uint32_t)(x)) << DMA_TCD_NBYTES_MLOFFYES_NBYTES_SHIFT)) & DMA_TCD_NBYTES_MLOFFYES_NBYTES_MASK)
#define DMA_TCD_NBYTES_MLOFFYES_MLOFF_MASK       (0x3FFFFC00U)
#define DMA_TCD_NBYTES_MLOFFYES_MLOFF_SHIFT      (10U)
#define DMA_TCD_NBYTES_MLOFFYES_MLOFF_WIDTH      (20U)
#define DMA_TCD_NBYTES_MLOFFYES_MLOFF(x)         (((uint32_t)(((uint32_t)(x)) << DMA_TCD_NBYTES_MLOFFYES_MLOFF_SHIFT)) & DMA_TCD_NBYTES_MLOFFYES_MLOFF_MASK)
#define DMA_TCD_NBYTES_MLOFFYES_DMLOE_MASK       (0x40000000U)
#define DMA_TCD_NBYTES_MLOFFYES_DMLOE_SHIFT      (30U)
#define DMA_TCD_NBYTES_MLOFFYES_DMLOE_WIDTH      (1U)
#define DMA_TCD_NBYTES_MLOFFYES_DMLOE(x)         (((uint32_t)(((uint32_t)(x)) << DMA_TCD_NBYTES_MLOFFYES_DMLOE_SHIFT)) & DMA_TCD_NBYTES_MLOFFYES_DMLOE_MASK)
#define DMA_TCD_NBYTES_MLOFFYES_SMLOE_MASK       (0x80000000U)
#define DMA_TCD_NBYTES_MLOFFYES_SMLOE_SHIFT      (31U)
#define DMA_TCD_NBYTES_MLOFFYES_SMLOE_WIDTH      (1U)
#define DMA_TCD_NBYTES_MLOFFYES_SMLOE(x)         (((uint32_t)(((uint32_t)(x)) << DMA_TCD_NBYTES_MLOFFYES_SMLOE_SHIFT)) & DMA_TCD_NBYTES_MLOFFYES_SMLOE_MASK)
/*! @} */

/*! @name SLAST_SDA - TCD Last Source Address Adjustment / Store DADDR Address */
/*! @{ */
#define DMA_TCD_SLAST_SDA_SLAST_SDA_MASK         (0xFFFFFFFFU)
#define DMA_TCD_SLAST_SDA_SLAST_SDA_SHIFT        (0U)
#define DMA_TCD_SLAST_SDA_SLAST_SDA_WIDTH        (32U)
#define DMA_TCD_SLAST_SDA_SLAST_SDA(x)           (((uint32_t)(((uint32_t)(x)) << DMA_TCD_SLAST_SDA_SLAST_SDA_SHIFT)) & DMA_TCD_SLAST_SDA_SLAST_SDA_MASK)
/*! @} */

/*! @name DADDR - TCD Destination Address */
/*! @{ */
#define DMA_TCD_DADDR_DADDR_MASK                 (0xFFFFFFFFU)
#define DMA_TCD_DADDR_DADDR_SHIFT                (0U)
#define DMA_TCD_DADDR_DADDR_WIDTH                (32U)
#define DMA_TCD_DADDR_DADDR(x)                   (((uint32_t)(((uint32_t)(x)) << DMA_TCD_DADDR_DADDR_SHIFT)) & DMA_TCD_DADDR_DADDR_MASK)
/*! @} */

/*! @name DOFF - TCD Signed Destination Address Offset */
/*! @{ */
#define DMA_TCD_DOFF_DOFF_MASK                   (0xFFFFU)
#define DMA_TCD_DOFF_DOFF_SHIFT                  (0U)
#define DMA_TCD_DOFF_DOFF_WIDTH                  (16U)
#define DMA_TCD_DOFF_DOFF(x)                     (((uint16_t)(((uint16_t)(x)) << DMA_TCD_DOFF_DOFF_SHIFT)) & DMA_TCD_DOFF_DOFF_MASK)
/*! @} */

/*! @name CITER_ELINKNO - TCD Current Major Loop Count (Minor Loop Channel Linking Disabled) */
/*! @{ */
#define DMA_TCD_CITER_ELINKNO_CITER_MASK         (0x7FFFU)
#define DMA_TCD_CITER_ELINKNO_CITER_SHIFT        (0U)
#define DMA_TCD_CITER_ELINKNO_CITER_WIDTH        (15U)
#define DMA_TCD_CITER_ELINKNO_CITER(x)           (((uint16_t)(((uint16_t)(x)) << DMA_TCD_CITER_ELINKNO_CITER_SHIFT)) & DMA_TCD_CITER_ELINKNO_CITER_MASK)
#define DMA_TCD_CITER_ELINKNO_ELINK_MASK         (0x8000U)
#define DMA_TCD_CITER_ELINKNO_ELINK_SHIFT        (15U)
#define DMA_TCD_CITER_ELINKNO_ELINK_WIDTH        (1U)
#define DMA_TCD_CITER_ELINKNO_ELINK(x)           (((uint16_t)(((uint16_t)(x)) << DMA_TCD_CITER_ELINKNO_ELINK_SHIFT)) & DMA_TCD_CITER_ELINKNO_ELINK_MASK)
/*! @} */

/*! @name CITER_ELINKYES - TCD Current Major Loop Count (Minor Loop Channel Linking Enabled) */
/*! @{ */
#define DMA_TCD_CITER_ELINKYES_CITER_LE_MASK     (0x1FFU)
#define DMA_TCD_CITER_ELINKYES_CITER_LE_SHIFT    (0U)
#define DMA_TCD_CITER_ELINKYES_CITER_LE_WIDTH    (9U)
#define DMA_TCD_CITER_ELINKYES_CITER_LE(x)       (((uint16_t)(((uint16_t)(x)) << DMA_TCD_CITER_ELINKYES_CITER_LE_SHIFT)) & DMA_TCD_CITER_ELINKYES_CITER_LE_MASK)
#define DMA_TCD_CITER_ELINKYES_LINKCH_MASK       (0x3E00U)
#define DMA_TCD_CITER_ELINKYES_LINKCH_SHIFT      (9U)
#define DMA_TCD_CITER_ELINKYES_LINKCH_WIDTH      (5U)
#define DMA_TCD_CITER_ELINKYES_LINKCH(x)         (((uint16_t)(((uint16_t)(x)) << DMA_TCD_CITER_ELINKYES_LINKCH_SHIFT)) & DMA_TCD_CITER_ELINKYES_LINKCH_MASK)
#define DMA_TCD_CITER_ELINKYES_ELINK_MASK        (0x8000U)
#define DMA_TCD_CITER_ELINKYES_ELINK_SHIFT       (15U)
#define DMA_TCD_CITER_ELINKYES_ELINK_WIDTH       (1U)
#define DMA_TCD_CITER_ELINKYES_ELINK(x)          (((uint16_t)(((uint16_t)(x)) << DMA_TCD_CITER_ELINKYES_ELINK_SHIFT)) & DMA_TCD_CITER_ELINKYES_ELINK_MASK)
/*! @} */

/*! @name DLAST_SGA - TCD Last Destination Address Adjustment / Scatter Gather Address */
/*! @{ */
#define DMA_TCD_DLAST_SGA_DLAST_SGA_MASK         (0xFFFFFFFFU)
#define DMA_TCD_DLAST_SGA_DLAST_SGA_SHIFT        (0U)
#define DMA_TCD_DLAST_SGA_DLAST_SGA_WIDTH        (32U)
#define DMA_TCD_DLAST_SGA_DLAST_SGA(x)           (((uint32_t)(((uint32_t)(x)) << DMA_TCD_DLAST_SGA_DLAST_SGA_SHIFT)) & DMA_TCD_DLAST_SGA_DLAST_SGA_MASK)
/*! @} */

/*! @name CSR - TCD Control and Status */
/*! @{ */
#define DMA_TCD_CSR_START_MASK                   (0x1U)
#define DMA_TCD_CSR_START_SHIFT                  (0U)
#define DMA_TCD_CSR_START_WIDTH                  (1U)
#define DMA_TCD_CSR_START(x)                     (((uint16_t)(((uint16_t)(x)) << DMA_TCD_CSR_START_SHIFT)) & DMA_TCD_CSR_START_MASK)
#define DMA_TCD_CSR_INTMAJOR_MASK                (0x2U)
#define DMA_TCD_CSR_INTMAJOR_SHIFT               (1U)
#define DMA_TCD_CSR_INTMAJOR_WIDTH               (1U)
#define DMA_TCD_CSR_INTMAJOR(x)                  (((uint16_t)(((uint16_t)(x)) << DMA_TCD_CSR_INTMAJOR_SHIFT)) & DMA_TCD_CSR_INTMAJOR_MASK)
#define DMA_TCD_CSR_INTHALF_MASK                 (0x4U)
#define DMA_TCD_CSR_INTHALF_SHIFT                (2U)
#define DMA_TCD_CSR_INTHALF_WIDTH                (1U)
#define DMA_TCD_CSR_INTHALF(x)                   (((uint16_t)(((uint16_t)(x)) << DMA_TCD_CSR_INTHALF_SHIFT)) & DMA_TCD_CSR_INTHALF_MASK)
#define DMA_TCD_CSR_DREQ_MASK                    (0x8U)
#define DMA_TCD_CSR_DREQ_SHIFT                   (3U)
#define DMA_TCD_CSR_DREQ_WIDTH                   (1U)
#define DMA_TCD_CSR_DREQ(x)                      (((uint16_t)(((uint16_t)(x)) << DMA_TCD_CSR_DREQ_SHIFT)) & DMA_TCD_CSR_DREQ_MASK)
#define DMA_TCD_CSR_ESG_MASK                     (0x10U)
#define DMA_TCD_CSR_ESG_SHIFT                    (4U)
#define DMA_TCD_CSR_ESG_WIDTH                    (1U)
#define DMA_TCD_CSR_ESG(x)                       (((uint16_t)(((uint16_t)(x)) << DMA_TCD_CSR_ESG_SHIFT)) & DMA_TCD_CSR_ESG_MASK)
#define DMA_TCD_CSR_MAJORELINK_MASK              (0x20U)
#define DMA_TCD_CSR_MAJORELINK_SHIFT             (5U)
#define DMA_TCD_CSR_MAJORELINK_WIDTH             (1U)
#define DMA_TCD_CSR_MAJORELINK(x)                (((uint16_t)(((uint16_t)(x)) << DMA_TCD_CSR_MAJORELINK_SHIFT)) & DMA_TCD_CSR_MAJORELINK_MASK)
#define DMA_TCD_CSR_EEOP_MASK                    (0x40U)
#define DMA_TCD_CSR_EEOP_SHIFT                   (6U)
#define DMA_TCD_CSR_EEOP_WIDTH                   (1U)
#define DMA_TCD_CSR_EEOP(x)                      (((uint16_t)(((uint16_t)(x)) << DMA_TCD_CSR_EEOP_SHIFT)) & DMA_TCD_CSR_EEOP_MASK)
#define DMA_TCD_CSR_ESDA_MASK                    (0x80U)
#define DMA_TCD_CSR_ESDA_SHIFT                   (7U)
#define DMA_TCD_CSR_ESDA_WIDTH                   (1U)
#define DMA_TCD_CSR_ESDA(x)                      (((uint16_t)(((uint16_t)(x)) << DMA_TCD_CSR_ESDA_SHIFT)) & DMA_TCD_CSR_ESDA_MASK)
#define DMA_TCD_CSR_MAJORLINKCH_MASK             (0x1F00U)
#define DMA_TCD_CSR_MAJORLINKCH_SHIFT            (8U)
#define DMA_TCD_CSR_MAJORLINKCH_WIDTH            (5U)
#define DMA_TCD_CSR_MAJORLINKCH(x)               (((uint16_t)(((uint16_t)(x)) << DMA_TCD_CSR_MAJORLINKCH_SHIFT)) & DMA_TCD_CSR_MAJORLINKCH_MASK)
#define DMA_TCD_CSR_BWC_MASK                     (0xC000U)
#define DMA_TCD_CSR_BWC_SHIFT                    (14U)
#define DMA_TCD_CSR_BWC_WIDTH                    (2U)
#define DMA_TCD_CSR_BWC(x)                       (((uint16_t)(((uint16_t)(x)) << DMA_TCD_CSR_BWC_SHIFT)) & DMA_TCD_CSR_BWC_MASK)
/*! @} */

/*! @name BITER_ELINKNO - TCD Beginning Major Loop Count (Minor Loop Channel Linking Disabled) */
/*! @{ */
#define DMA_TCD_BITER_ELINKNO_BITER_MASK         (0x7FFFU)
#define DMA_TCD_BITER_ELINKNO_BITER_SHIFT        (0U)
#define DMA_TCD_BITER_ELINKNO_BITER_WIDTH        (15U)
#define DMA_TCD_BITER_ELINKNO_BITER(x)           (((uint16_t)(((uint16_t)(x)) << DMA_TCD_BITER_ELINKNO_BITER_SHIFT)) & DMA_TCD_BITER_ELINKNO_BITER_MASK)
#define DMA_TCD_BITER_ELINKNO_ELINK_MASK         (0x8000U)
#define DMA_TCD_BITER_ELINKNO_ELINK_SHIFT        (15U)
#define DMA_TCD_BITER_ELINKNO_ELINK_WIDTH        (1U)
#define DMA_TCD_BITER_ELINKNO_ELINK(x)           (((uint16_t)(((uint16_t)(x)) << DMA_TCD_BITER_ELINKNO_ELINK_SHIFT)) & DMA_TCD_BITER_ELINKNO_ELINK_MASK)
/*! @} */

/*! @name BITER_ELINKYES - TCD Beginning Major Loop Count (Minor Loop Channel Linking Enabled) */
/*! @{ */
#define DMA_TCD_BITER_ELINKYES_BITER_MASK        (0x1FFU)
#define DMA_TCD_BITER_ELINKYES_BITER_SHIFT       (0U)
#define DMA_TCD_BITER_ELINKYES_BITER_WIDTH       (9U)
#define DMA_TCD_BITER_ELINKYES_BITER(x)          (((uint16_t)(((uint16_t)(x)) << DMA_TCD_BITER_ELINKYES_BITER_SHIFT)) & DMA_TCD_BITER_ELINKYES_BITER_MASK)
#define DMA_TCD_BITER_ELINKYES_LINKCH_MASK       (0x3E00U)
#define DMA_TCD_BITER_ELINKYES_LINKCH_SHIFT      (9U)
#define DMA_TCD_BITER_ELINKYES_LINKCH_WIDTH      (5U)
#define DMA_TCD_BITER_ELINKYES_LINKCH(x)         (((uint16_t)(((uint16_t)(x)) << DMA_TCD_BITER_ELINKYES_LINKCH_SHIFT)) & DMA_TCD_BITER_ELINKYES_LINKCH_MASK)
#define DMA_TCD_BITER_ELINKYES_ELINK_MASK        (0x8000U)
#define DMA_TCD_BITER_ELINKYES_ELINK_SHIFT       (15U)
#define DMA_TCD_BITER_ELINKYES_ELINK_WIDTH       (1U)
#define DMA_TCD_BITER_ELINKYES_ELINK(x)          (((uint16_t)(((uint16_t)(x)) << DMA_TCD_BITER_ELINKYES_ELINK_SHIFT)) & DMA_TCD_BITER_ELINKYES_ELINK_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group DMA_TCD_Register_Masks */


/*!
 * @}
 */ /* end of group DMA_TCD_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- D_IP_LLCE_SYN Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup D_IP_LLCE_SYN_Peripheral_Access_Layer D_IP_LLCE_SYN Peripheral Access Layer
 * @{
 */

/** D_IP_LLCE_SYN - Register Layout Typedef */
typedef struct {
  __IO uint32_t LLCE_SYSRSTR;                      /**< System reset control register, offset: 0x0 */
  uint8_t RESERVED_0[4];
  __IO uint32_t LLCE_MASIDR;                       /**< LLCE master ID register, offset: 0x8 */
  __IO uint32_t LLCE_RAMCCSR;                      /**< RAM Controller Configuration and Status Register, offset: 0xC */
} D_IP_LLCE_SYN_Type, *D_IP_LLCE_SYN_MemMapPtr;

/** Number of instances of the D_IP_LLCE_SYN module. */
#define D_IP_LLCE_SYN_INSTANCE_COUNT             (1u)

/* D_IP_LLCE_SYN - Peripheral instance base addresses */
/** Peripheral LLCE base address */
#define LLCE_BASE                                (0x43FF8000u)
/** Peripheral LLCE base pointer */
#define LLCE                                     ((D_IP_LLCE_SYN_Type *)LLCE_BASE)
/** Array initializer of D_IP_LLCE_SYN peripheral base addresses */
#define D_IP_LLCE_SYN_BASE_ADDRS                 { LLCE_BASE }
/** Array initializer of D_IP_LLCE_SYN peripheral base pointers */
#define D_IP_LLCE_SYN_BASE_PTRS                  { LLCE }

/* ----------------------------------------------------------------------------
   -- D_IP_LLCE_SYN Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup D_IP_LLCE_SYN_Register_Masks D_IP_LLCE_SYN Register Masks
 * @{
 */

/*! @name LLCE_SYSRSTR - System reset control register */
/*! @{ */
#define D_IP_LLCE_SYN_LLCE_SYSRSTR_CPU_RST0_MASK (0x1U)
#define D_IP_LLCE_SYN_LLCE_SYSRSTR_CPU_RST0_SHIFT (0U)
#define D_IP_LLCE_SYN_LLCE_SYSRSTR_CPU_RST0_WIDTH (1U)
#define D_IP_LLCE_SYN_LLCE_SYSRSTR_CPU_RST0(x)   (((uint32_t)(((uint32_t)(x)) << D_IP_LLCE_SYN_LLCE_SYSRSTR_CPU_RST0_SHIFT)) & D_IP_LLCE_SYN_LLCE_SYSRSTR_CPU_RST0_MASK)
#define D_IP_LLCE_SYN_LLCE_SYSRSTR_CPU_RST1_MASK (0x2U)
#define D_IP_LLCE_SYN_LLCE_SYSRSTR_CPU_RST1_SHIFT (1U)
#define D_IP_LLCE_SYN_LLCE_SYSRSTR_CPU_RST1_WIDTH (1U)
#define D_IP_LLCE_SYN_LLCE_SYSRSTR_CPU_RST1(x)   (((uint32_t)(((uint32_t)(x)) << D_IP_LLCE_SYN_LLCE_SYSRSTR_CPU_RST1_SHIFT)) & D_IP_LLCE_SYN_LLCE_SYSRSTR_CPU_RST1_MASK)
#define D_IP_LLCE_SYN_LLCE_SYSRSTR_CPU_RST2_MASK (0x4U)
#define D_IP_LLCE_SYN_LLCE_SYSRSTR_CPU_RST2_SHIFT (2U)
#define D_IP_LLCE_SYN_LLCE_SYSRSTR_CPU_RST2_WIDTH (1U)
#define D_IP_LLCE_SYN_LLCE_SYSRSTR_CPU_RST2(x)   (((uint32_t)(((uint32_t)(x)) << D_IP_LLCE_SYN_LLCE_SYSRSTR_CPU_RST2_SHIFT)) & D_IP_LLCE_SYN_LLCE_SYSRSTR_CPU_RST2_MASK)
#define D_IP_LLCE_SYN_LLCE_SYSRSTR_CPU_RST3_MASK (0x8U)
#define D_IP_LLCE_SYN_LLCE_SYSRSTR_CPU_RST3_SHIFT (3U)
#define D_IP_LLCE_SYN_LLCE_SYSRSTR_CPU_RST3_WIDTH (1U)
#define D_IP_LLCE_SYN_LLCE_SYSRSTR_CPU_RST3(x)   (((uint32_t)(((uint32_t)(x)) << D_IP_LLCE_SYN_LLCE_SYSRSTR_CPU_RST3_SHIFT)) & D_IP_LLCE_SYN_LLCE_SYSRSTR_CPU_RST3_MASK)
/*! @} */

/*! @name LLCE_MASIDR - LLCE master ID register */
/*! @{ */
#define D_IP_LLCE_SYN_LLCE_MASIDR_MASIDR_MASK    (0xFFFFFFFFU)
#define D_IP_LLCE_SYN_LLCE_MASIDR_MASIDR_SHIFT   (0U)
#define D_IP_LLCE_SYN_LLCE_MASIDR_MASIDR_WIDTH   (32U)
#define D_IP_LLCE_SYN_LLCE_MASIDR_MASIDR(x)      (((uint32_t)(((uint32_t)(x)) << D_IP_LLCE_SYN_LLCE_MASIDR_MASIDR_SHIFT)) & D_IP_LLCE_SYN_LLCE_MASIDR_MASIDR_MASK)
/*! @} */

/*! @name LLCE_RAMCCSR - RAM Controller Configuration and Status Register */
/*! @{ */
#define D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSC0_MASK  (0x1U)
#define D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSC0_SHIFT (0U)
#define D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSC0_WIDTH (1U)
#define D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSC0(x)    (((uint32_t)(((uint32_t)(x)) << D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSC0_SHIFT)) & D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSC0_MASK)
#define D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSC1_MASK  (0x2U)
#define D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSC1_SHIFT (1U)
#define D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSC1_WIDTH (1U)
#define D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSC1(x)    (((uint32_t)(((uint32_t)(x)) << D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSC1_SHIFT)) & D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSC1_MASK)
#define D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSC2_MASK  (0x4U)
#define D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSC2_SHIFT (2U)
#define D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSC2_WIDTH (1U)
#define D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSC2(x)    (((uint32_t)(((uint32_t)(x)) << D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSC2_SHIFT)) & D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSC2_MASK)
#define D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSC3_MASK  (0x8U)
#define D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSC3_SHIFT (3U)
#define D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSC3_WIDTH (1U)
#define D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSC3(x)    (((uint32_t)(((uint32_t)(x)) << D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSC3_SHIFT)) & D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSC3_MASK)
#define D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSC4_MASK  (0x10U)
#define D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSC4_SHIFT (4U)
#define D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSC4_WIDTH (1U)
#define D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSC4(x)    (((uint32_t)(((uint32_t)(x)) << D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSC4_SHIFT)) & D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSC4_MASK)
#define D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSC5_MASK  (0x20U)
#define D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSC5_SHIFT (5U)
#define D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSC5_WIDTH (1U)
#define D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSC5(x)    (((uint32_t)(((uint32_t)(x)) << D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSC5_SHIFT)) & D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSC5_MASK)
#define D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSS0_MASK  (0x10000U)
#define D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSS0_SHIFT (16U)
#define D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSS0_WIDTH (1U)
#define D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSS0(x)    (((uint32_t)(((uint32_t)(x)) << D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSS0_SHIFT)) & D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSS0_MASK)
#define D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSS1_MASK  (0x20000U)
#define D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSS1_SHIFT (17U)
#define D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSS1_WIDTH (1U)
#define D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSS1(x)    (((uint32_t)(((uint32_t)(x)) << D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSS1_SHIFT)) & D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSS1_MASK)
#define D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSS2_MASK  (0x40000U)
#define D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSS2_SHIFT (18U)
#define D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSS2_WIDTH (1U)
#define D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSS2(x)    (((uint32_t)(((uint32_t)(x)) << D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSS2_SHIFT)) & D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSS2_MASK)
#define D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSS3_MASK  (0x80000U)
#define D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSS3_SHIFT (19U)
#define D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSS3_WIDTH (1U)
#define D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSS3(x)    (((uint32_t)(((uint32_t)(x)) << D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSS3_SHIFT)) & D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSS3_MASK)
#define D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSS4_MASK  (0x100000U)
#define D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSS4_SHIFT (20U)
#define D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSS4_WIDTH (1U)
#define D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSS4(x)    (((uint32_t)(((uint32_t)(x)) << D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSS4_SHIFT)) & D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSS4_MASK)
#define D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSS5_MASK  (0x200000U)
#define D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSS5_SHIFT (21U)
#define D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSS5_WIDTH (1U)
#define D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSS5(x)    (((uint32_t)(((uint32_t)(x)) << D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSS5_SHIFT)) & D_IP_LLCE_SYN_LLCE_RAMCCSR_RCRWSS5_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group D_IP_LLCE_SYN_Register_Masks */


/*!
 * @}
 */ /* end of group D_IP_LLCE_SYN_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- EIM Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup EIM_Peripheral_Access_Layer EIM Peripheral Access Layer
 * @{
 */

/** EIM - Register Layout Typedef */
typedef struct {
  __IO uint32_t EIMCR;                             /**< Error Injection Module Configuration Register, offset: 0x0 */
  __IO uint32_t EICHEN;                            /**< Error Injection Channel Enable register, offset: 0x4 */
  uint8_t RESERVED_0[248];
  __IO uint32_t EICHD0_WORD0;                      /**< Error Injection Channel Descriptor n, Word0, offset: 0x100 */
  __IO uint32_t EICHD0_WORD1;                      /**< Error Injection Channel Descriptor n, Word1, offset: 0x104 */
  __IO uint32_t EICHD0_WORD2;                      /**< Error Injection Channel Descriptor n, Word2, offset: 0x108 */
  __IO uint32_t EICHD0_WORD3;                      /**< Error Injection Channel Descriptor n, Word3, offset: 0x10C */
  __IO uint32_t EICHD0_WORD4;                      /**< Error Injection Channel Descriptor n, Word4, offset: 0x110 */
  __IO uint32_t EICHD0_WORD5;                      /**< Error Injection Channel Descriptor n, Word5, offset: 0x114 */
  __IO uint32_t EICHD0_WORD6;                      /**< Error Injection Channel Descriptor n, Word6, offset: 0x118 */
  __IO uint32_t EICHD0_WORD7;                      /**< Error Injection Channel Descriptor n, Word7, offset: 0x11C */
  __IO uint32_t EICHD0_WORD8;                      /**< Error Injection Channel Descriptor n, Word8, offset: 0x120 */
  uint8_t RESERVED_1[28];
  __IO uint32_t EICHD1_WORD0;                      /**< Error Injection Channel Descriptor n, Word0, offset: 0x140 */
  __IO uint32_t EICHD1_WORD1;                      /**< Error Injection Channel Descriptor n, Word1, offset: 0x144 */
  __IO uint32_t EICHD1_WORD2;                      /**< Error Injection Channel Descriptor n, Word2, offset: 0x148 */
  __IO uint32_t EICHD1_WORD3;                      /**< Error Injection Channel Descriptor n, Word3, offset: 0x14C */
  __IO uint32_t EICHD1_WORD4;                      /**< Error Injection Channel Descriptor n, Word4, offset: 0x150 */
  __IO uint32_t EICHD1_WORD5;                      /**< Error Injection Channel Descriptor n, Word5, offset: 0x154 */
  __IO uint32_t EICHD1_WORD6;                      /**< Error Injection Channel Descriptor n, Word6, offset: 0x158 */
  __IO uint32_t EICHD1_WORD7;                      /**< Error Injection Channel Descriptor n, Word7, offset: 0x15C */
  __IO uint32_t EICHD1_WORD8;                      /**< Error Injection Channel Descriptor n, Word8, offset: 0x160 */
  uint8_t RESERVED_2[28];
  __IO uint32_t EICHD2_WORD0;                      /**< Error Injection Channel Descriptor n, Word0, offset: 0x180 */
  __IO uint32_t EICHD2_WORD1;                      /**< Error Injection Channel Descriptor n, Word1, offset: 0x184 */
  __IO uint32_t EICHD2_WORD2;                      /**< Error Injection Channel Descriptor n, Word2, offset: 0x188 */
  __IO uint32_t EICHD2_WORD3;                      /**< Error Injection Channel Descriptor n, Word3, offset: 0x18C */
  __IO uint32_t EICHD2_WORD4;                      /**< Error Injection Channel Descriptor n, Word4, offset: 0x190 */
  __IO uint32_t EICHD2_WORD5;                      /**< Error Injection Channel Descriptor n, Word5, offset: 0x194 */
  __IO uint32_t EICHD2_WORD6;                      /**< Error Injection Channel Descriptor n, Word6, offset: 0x198 */
  __IO uint32_t EICHD2_WORD7;                      /**< Error Injection Channel Descriptor n, Word7, offset: 0x19C */
  __IO uint32_t EICHD2_WORD8;                      /**< Error Injection Channel Descriptor n, Word8, offset: 0x1A0 */
  uint8_t RESERVED_3[28];
  __IO uint32_t EICHD3_WORD0;                      /**< Error Injection Channel Descriptor n, Word0, offset: 0x1C0 */
  __IO uint32_t EICHD3_WORD1;                      /**< Error Injection Channel Descriptor n, Word1, offset: 0x1C4 */
  __IO uint32_t EICHD3_WORD2;                      /**< Error Injection Channel Descriptor n, Word2, offset: 0x1C8 */
  __IO uint32_t EICHD3_WORD3;                      /**< Error Injection Channel Descriptor n, Word3, offset: 0x1CC */
  __IO uint32_t EICHD3_WORD4;                      /**< Error Injection Channel Descriptor n, Word4, offset: 0x1D0 */
  __IO uint32_t EICHD3_WORD5;                      /**< Error Injection Channel Descriptor n, Word5, offset: 0x1D4 */
  __IO uint32_t EICHD3_WORD6;                      /**< Error Injection Channel Descriptor n, Word6, offset: 0x1D8 */
  __IO uint32_t EICHD3_WORD7;                      /**< Error Injection Channel Descriptor n, Word7, offset: 0x1DC */
  __IO uint32_t EICHD3_WORD8;                      /**< Error Injection Channel Descriptor n, Word8, offset: 0x1E0 */
  uint8_t RESERVED_4[28];
  __IO uint32_t EICHD4_WORD0;                      /**< Error Injection Channel Descriptor n, Word0, offset: 0x200 */
  __IO uint32_t EICHD4_WORD1;                      /**< Error Injection Channel Descriptor n, Word1, offset: 0x204 */
  __IO uint32_t EICHD4_WORD2;                      /**< Error Injection Channel Descriptor n, Word2, offset: 0x208 */
  __IO uint32_t EICHD4_WORD3;                      /**< Error Injection Channel Descriptor n, Word3, offset: 0x20C */
  __IO uint32_t EICHD4_WORD4;                      /**< Error Injection Channel Descriptor n, Word4, offset: 0x210 */
  __IO uint32_t EICHD4_WORD5;                      /**< Error Injection Channel Descriptor n, Word5, offset: 0x214 */
  __IO uint32_t EICHD4_WORD6;                      /**< Error Injection Channel Descriptor n, Word6, offset: 0x218 */
  __IO uint32_t EICHD4_WORD7;                      /**< Error Injection Channel Descriptor n, Word7, offset: 0x21C */
  __IO uint32_t EICHD4_WORD8;                      /**< Error Injection Channel Descriptor n, Word8, offset: 0x220 */
  uint8_t RESERVED_5[28];
  __IO uint32_t EICHD5_WORD0;                      /**< Error Injection Channel Descriptor n, Word0, offset: 0x240 */
  __IO uint32_t EICHD5_WORD1;                      /**< Error Injection Channel Descriptor n, Word1, offset: 0x244 */
  __IO uint32_t EICHD5_WORD2;                      /**< Error Injection Channel Descriptor n, Word2, offset: 0x248 */
  __IO uint32_t EICHD5_WORD3;                      /**< Error Injection Channel Descriptor n, Word3, offset: 0x24C */
  __IO uint32_t EICHD5_WORD4;                      /**< Error Injection Channel Descriptor n, Word4, offset: 0x250 */
  __IO uint32_t EICHD5_WORD5;                      /**< Error Injection Channel Descriptor n, Word5, offset: 0x254 */
  __IO uint32_t EICHD5_WORD6;                      /**< Error Injection Channel Descriptor n, Word6, offset: 0x258 */
  __IO uint32_t EICHD5_WORD7;                      /**< Error Injection Channel Descriptor n, Word7, offset: 0x25C */
  __IO uint32_t EICHD5_WORD8;                      /**< Error Injection Channel Descriptor n, Word8, offset: 0x260 */
  uint8_t RESERVED_6[28];
  __IO uint32_t EICHD6_WORD0;                      /**< Error Injection Channel Descriptor n, Word0, offset: 0x280 */
  __IO uint32_t EICHD6_WORD1;                      /**< Error Injection Channel Descriptor n, Word1, offset: 0x284 */
  __IO uint32_t EICHD6_WORD2;                      /**< Error Injection Channel Descriptor n, Word2, offset: 0x288 */
  __IO uint32_t EICHD6_WORD3;                      /**< Error Injection Channel Descriptor n, Word3, offset: 0x28C */
  __IO uint32_t EICHD6_WORD4;                      /**< Error Injection Channel Descriptor n, Word4, offset: 0x290 */
  __IO uint32_t EICHD6_WORD5;                      /**< Error Injection Channel Descriptor n, Word5, offset: 0x294 */
  __IO uint32_t EICHD6_WORD6;                      /**< Error Injection Channel Descriptor n, Word6, offset: 0x298 */
  __IO uint32_t EICHD6_WORD7;                      /**< Error Injection Channel Descriptor n, Word7, offset: 0x29C */
  __IO uint32_t EICHD6_WORD8;                      /**< Error Injection Channel Descriptor n, Word8, offset: 0x2A0 */
  uint8_t RESERVED_7[28];
  __IO uint32_t EICHD7_WORD0;                      /**< Error Injection Channel Descriptor n, Word0, offset: 0x2C0 */
  __IO uint32_t EICHD7_WORD1;                      /**< Error Injection Channel Descriptor n, Word1, offset: 0x2C4 */
  __IO uint32_t EICHD7_WORD2;                      /**< Error Injection Channel Descriptor n, Word2, offset: 0x2C8 */
  __IO uint32_t EICHD7_WORD3;                      /**< Error Injection Channel Descriptor n, Word3, offset: 0x2CC */
  __IO uint32_t EICHD7_WORD4;                      /**< Error Injection Channel Descriptor n, Word4, offset: 0x2D0 */
  __IO uint32_t EICHD7_WORD5;                      /**< Error Injection Channel Descriptor n, Word5, offset: 0x2D4 */
  __IO uint32_t EICHD7_WORD6;                      /**< Error Injection Channel Descriptor n, Word6, offset: 0x2D8 */
  __IO uint32_t EICHD7_WORD7;                      /**< Error Injection Channel Descriptor n, Word7, offset: 0x2DC */
  __IO uint32_t EICHD7_WORD8;                      /**< Error Injection Channel Descriptor n, Word8, offset: 0x2E0 */
  uint8_t RESERVED_8[28];
  __IO uint32_t EICHD8_WORD0;                      /**< Error Injection Channel Descriptor n, Word0, offset: 0x300 */
  __IO uint32_t EICHD8_WORD1;                      /**< Error Injection Channel Descriptor n, Word1, offset: 0x304 */
  __IO uint32_t EICHD8_WORD2;                      /**< Error Injection Channel Descriptor n, Word2, offset: 0x308 */
  __IO uint32_t EICHD8_WORD3;                      /**< Error Injection Channel Descriptor n, Word3, offset: 0x30C */
  __IO uint32_t EICHD8_WORD4;                      /**< Error Injection Channel Descriptor n, Word4, offset: 0x310 */
  __IO uint32_t EICHD8_WORD5;                      /**< Error Injection Channel Descriptor n, Word5, offset: 0x314 */
  __IO uint32_t EICHD8_WORD6;                      /**< Error Injection Channel Descriptor n, Word6, offset: 0x318 */
  __IO uint32_t EICHD8_WORD7;                      /**< Error Injection Channel Descriptor n, Word7, offset: 0x31C */
  __IO uint32_t EICHD8_WORD8;                      /**< Error Injection Channel Descriptor n, Word8, offset: 0x320 */
  uint8_t RESERVED_9[28];
  __IO uint32_t EICHD9_WORD0;                      /**< Error Injection Channel Descriptor n, Word0, offset: 0x340 */
  __IO uint32_t EICHD9_WORD1;                      /**< Error Injection Channel Descriptor n, Word1, offset: 0x344 */
  __IO uint32_t EICHD9_WORD2;                      /**< Error Injection Channel Descriptor n, Word2, offset: 0x348 */
  __IO uint32_t EICHD9_WORD3;                      /**< Error Injection Channel Descriptor n, Word3, offset: 0x34C */
  __IO uint32_t EICHD9_WORD4;                      /**< Error Injection Channel Descriptor n, Word4, offset: 0x350 */
  __IO uint32_t EICHD9_WORD5;                      /**< Error Injection Channel Descriptor n, Word5, offset: 0x354 */
  __IO uint32_t EICHD9_WORD6;                      /**< Error Injection Channel Descriptor n, Word6, offset: 0x358 */
  __IO uint32_t EICHD9_WORD7;                      /**< Error Injection Channel Descriptor n, Word7, offset: 0x35C */
  __IO uint32_t EICHD9_WORD8;                      /**< Error Injection Channel Descriptor n, Word8, offset: 0x360 */
  uint8_t RESERVED_10[28];
  __IO uint32_t EICHD10_WORD0;                     /**< Error Injection Channel Descriptor n, Word0, offset: 0x380 */
  __IO uint32_t EICHD10_WORD1;                     /**< Error Injection Channel Descriptor n, Word1, offset: 0x384 */
  __IO uint32_t EICHD10_WORD2;                     /**< Error Injection Channel Descriptor n, Word2, offset: 0x388 */
  __IO uint32_t EICHD10_WORD3;                     /**< Error Injection Channel Descriptor n, Word3, offset: 0x38C */
  __IO uint32_t EICHD10_WORD4;                     /**< Error Injection Channel Descriptor n, Word4, offset: 0x390 */
  __IO uint32_t EICHD10_WORD5;                     /**< Error Injection Channel Descriptor n, Word5, offset: 0x394 */
  __IO uint32_t EICHD10_WORD6;                     /**< Error Injection Channel Descriptor n, Word6, offset: 0x398 */
  __IO uint32_t EICHD10_WORD7;                     /**< Error Injection Channel Descriptor n, Word7, offset: 0x39C */
  __IO uint32_t EICHD10_WORD8;                     /**< Error Injection Channel Descriptor n, Word8, offset: 0x3A0 */
  uint8_t RESERVED_11[28];
  __IO uint32_t EICHD11_WORD0;                     /**< Error Injection Channel Descriptor n, Word0, offset: 0x3C0 */
  __IO uint32_t EICHD11_WORD1;                     /**< Error Injection Channel Descriptor n, Word1, offset: 0x3C4 */
  __IO uint32_t EICHD11_WORD2;                     /**< Error Injection Channel Descriptor n, Word2, offset: 0x3C8 */
  __IO uint32_t EICHD11_WORD3;                     /**< Error Injection Channel Descriptor n, Word3, offset: 0x3CC */
  __IO uint32_t EICHD11_WORD4;                     /**< Error Injection Channel Descriptor n, Word4, offset: 0x3D0 */
  __IO uint32_t EICHD11_WORD5;                     /**< Error Injection Channel Descriptor n, Word5, offset: 0x3D4 */
  __IO uint32_t EICHD11_WORD6;                     /**< Error Injection Channel Descriptor n, Word6, offset: 0x3D8 */
  __IO uint32_t EICHD11_WORD7;                     /**< Error Injection Channel Descriptor n, Word7, offset: 0x3DC */
  __IO uint32_t EICHD11_WORD8;                     /**< Error Injection Channel Descriptor n, Word8, offset: 0x3E0 */
  uint8_t RESERVED_12[28];
  __IO uint32_t EICHD12_WORD0;                     /**< Error Injection Channel Descriptor n, Word0, offset: 0x400 */
  __IO uint32_t EICHD12_WORD1;                     /**< Error Injection Channel Descriptor n, Word1, offset: 0x404 */
  __IO uint32_t EICHD12_WORD2;                     /**< Error Injection Channel Descriptor n, Word2, offset: 0x408 */
  __IO uint32_t EICHD12_WORD3;                     /**< Error Injection Channel Descriptor n, Word3, offset: 0x40C */
  __IO uint32_t EICHD12_WORD4;                     /**< Error Injection Channel Descriptor n, Word4, offset: 0x410 */
  __IO uint32_t EICHD12_WORD5;                     /**< Error Injection Channel Descriptor n, Word5, offset: 0x414 */
  __IO uint32_t EICHD12_WORD6;                     /**< Error Injection Channel Descriptor n, Word6, offset: 0x418 */
  __IO uint32_t EICHD12_WORD7;                     /**< Error Injection Channel Descriptor n, Word7, offset: 0x41C */
  __IO uint32_t EICHD12_WORD8;                     /**< Error Injection Channel Descriptor n, Word8, offset: 0x420 */
  uint8_t RESERVED_13[28];
  __IO uint32_t EICHD13_WORD0;                     /**< Error Injection Channel Descriptor n, Word0, offset: 0x440 */
  __IO uint32_t EICHD13_WORD1;                     /**< Error Injection Channel Descriptor n, Word1, offset: 0x444 */
  __IO uint32_t EICHD13_WORD2;                     /**< Error Injection Channel Descriptor n, Word2, offset: 0x448 */
  __IO uint32_t EICHD13_WORD3;                     /**< Error Injection Channel Descriptor n, Word3, offset: 0x44C */
  __IO uint32_t EICHD13_WORD4;                     /**< Error Injection Channel Descriptor n, Word4, offset: 0x450 */
  __IO uint32_t EICHD13_WORD5;                     /**< Error Injection Channel Descriptor n, Word5, offset: 0x454 */
  __IO uint32_t EICHD13_WORD6;                     /**< Error Injection Channel Descriptor n, Word6, offset: 0x458 */
  __IO uint32_t EICHD13_WORD7;                     /**< Error Injection Channel Descriptor n, Word7, offset: 0x45C */
  __IO uint32_t EICHD13_WORD8;                     /**< Error Injection Channel Descriptor n, Word8, offset: 0x460 */
  uint8_t RESERVED_14[28];
  __IO uint32_t EICHD14_WORD0;                     /**< Error Injection Channel Descriptor n, Word0, offset: 0x480 */
  __IO uint32_t EICHD14_WORD1;                     /**< Error Injection Channel Descriptor n, Word1, offset: 0x484 */
  __IO uint32_t EICHD14_WORD2;                     /**< Error Injection Channel Descriptor n, Word2, offset: 0x488 */
  __IO uint32_t EICHD14_WORD3;                     /**< Error Injection Channel Descriptor n, Word3, offset: 0x48C */
  __IO uint32_t EICHD14_WORD4;                     /**< Error Injection Channel Descriptor n, Word4, offset: 0x490 */
  __IO uint32_t EICHD14_WORD5;                     /**< Error Injection Channel Descriptor n, Word5, offset: 0x494 */
  __IO uint32_t EICHD14_WORD6;                     /**< Error Injection Channel Descriptor n, Word6, offset: 0x498 */
  __IO uint32_t EICHD14_WORD7;                     /**< Error Injection Channel Descriptor n, Word7, offset: 0x49C */
  __IO uint32_t EICHD14_WORD8;                     /**< Error Injection Channel Descriptor n, Word8, offset: 0x4A0 */
  uint8_t RESERVED_15[28];
  __IO uint32_t EICHD15_WORD0;                     /**< Error Injection Channel Descriptor n, Word0, offset: 0x4C0 */
  __IO uint32_t EICHD15_WORD1;                     /**< Error Injection Channel Descriptor n, Word1, offset: 0x4C4 */
  __IO uint32_t EICHD15_WORD2;                     /**< Error Injection Channel Descriptor n, Word2, offset: 0x4C8 */
  __IO uint32_t EICHD15_WORD3;                     /**< Error Injection Channel Descriptor n, Word3, offset: 0x4CC */
  __IO uint32_t EICHD15_WORD4;                     /**< Error Injection Channel Descriptor n, Word4, offset: 0x4D0 */
  uint8_t RESERVED_16[44];
  __IO uint32_t EICHD16_WORD0;                     /**< Error Injection Channel Descriptor n, Word0, offset: 0x500 */
  __IO uint32_t EICHD16_WORD1;                     /**< Error Injection Channel Descriptor n, Word1, offset: 0x504 */
  __IO uint32_t EICHD16_WORD2;                     /**< Error Injection Channel Descriptor n, Word2, offset: 0x508 */
  uint8_t RESERVED_17[52];
  __IO uint32_t EICHD17_WORD0;                     /**< Error Injection Channel Descriptor n, Word0, offset: 0x540 */
  __IO uint32_t EICHD17_WORD1;                     /**< Error Injection Channel Descriptor n, Word1, offset: 0x544 */
  __IO uint32_t EICHD17_WORD2;                     /**< Error Injection Channel Descriptor n, Word2, offset: 0x548 */
  uint8_t RESERVED_18[52];
  __IO uint32_t EICHD18_WORD0;                     /**< Error Injection Channel Descriptor n, Word0, offset: 0x580 */
  __IO uint32_t EICHD18_WORD1;                     /**< Error Injection Channel Descriptor n, Word1, offset: 0x584 */
  __IO uint32_t EICHD18_WORD2;                     /**< Error Injection Channel Descriptor n, Word2, offset: 0x588 */
  __IO uint32_t EICHD18_WORD3;                     /**< Error Injection Channel Descriptor n, Word3, offset: 0x58C */
  __IO uint32_t EICHD18_WORD4;                     /**< Error Injection Channel Descriptor n, Word4, offset: 0x590 */
  uint8_t RESERVED_19[44];
  __IO uint32_t EICHD19_WORD0;                     /**< Error Injection Channel Descriptor n, Word0, offset: 0x5C0 */
  __IO uint32_t EICHD19_WORD1;                     /**< Error Injection Channel Descriptor n, Word1, offset: 0x5C4 */
  __IO uint32_t EICHD19_WORD2;                     /**< Error Injection Channel Descriptor n, Word2, offset: 0x5C8 */
  __IO uint32_t EICHD19_WORD3;                     /**< Error Injection Channel Descriptor n, Word3, offset: 0x5CC */
  __IO uint32_t EICHD19_WORD4;                     /**< Error Injection Channel Descriptor n, Word4, offset: 0x5D0 */
  uint8_t RESERVED_20[44];
  __IO uint32_t EICHD20_WORD0;                     /**< Error Injection Channel Descriptor n, Word0, offset: 0x600 */
  __IO uint32_t EICHD20_WORD1;                     /**< Error Injection Channel Descriptor n, Word1, offset: 0x604 */
  __IO uint32_t EICHD20_WORD2;                     /**< Error Injection Channel Descriptor n, Word2, offset: 0x608 */
  __IO uint32_t EICHD20_WORD3;                     /**< Error Injection Channel Descriptor n, Word3, offset: 0x60C */
  __IO uint32_t EICHD20_WORD4;                     /**< Error Injection Channel Descriptor n, Word4, offset: 0x610 */
  uint8_t RESERVED_21[44];
  __IO uint32_t EICHD21_WORD0;                     /**< Error Injection Channel Descriptor n, Word0, offset: 0x640 */
  __IO uint32_t EICHD21_WORD1;                     /**< Error Injection Channel Descriptor n, Word1, offset: 0x644 */
  __IO uint32_t EICHD21_WORD2;                     /**< Error Injection Channel Descriptor n, Word2, offset: 0x648 */
  __IO uint32_t EICHD21_WORD3;                     /**< Error Injection Channel Descriptor n, Word3, offset: 0x64C */
  __IO uint32_t EICHD21_WORD4;                     /**< Error Injection Channel Descriptor n, Word4, offset: 0x650 */
  uint8_t RESERVED_22[44];
  __IO uint32_t EICHD22_WORD0;                     /**< Error Injection Channel Descriptor n, Word0, offset: 0x680 */
  __IO uint32_t EICHD22_WORD1;                     /**< Error Injection Channel Descriptor n, Word1, offset: 0x684 */
  __IO uint32_t EICHD22_WORD2;                     /**< Error Injection Channel Descriptor n, Word2, offset: 0x688 */
  __IO uint32_t EICHD22_WORD3;                     /**< Error Injection Channel Descriptor n, Word3, offset: 0x68C */
  __IO uint32_t EICHD22_WORD4;                     /**< Error Injection Channel Descriptor n, Word4, offset: 0x690 */
  __IO uint32_t EICHD22_WORD5;                     /**< Error Injection Channel Descriptor n, Word5, offset: 0x694 */
  __IO uint32_t EICHD22_WORD6;                     /**< Error Injection Channel Descriptor n, Word6, offset: 0x698 */
  __IO uint32_t EICHD22_WORD7;                     /**< Error Injection Channel Descriptor n, Word7, offset: 0x69C */
  __IO uint32_t EICHD22_WORD8;                     /**< Error Injection Channel Descriptor n, Word8, offset: 0x6A0 */
  uint8_t RESERVED_23[28];
  __IO uint32_t EICHD23_WORD0;                     /**< Error Injection Channel Descriptor n, Word0, offset: 0x6C0 */
  __IO uint32_t EICHD23_WORD1;                     /**< Error Injection Channel Descriptor n, Word1, offset: 0x6C4 */
  __IO uint32_t EICHD23_WORD2;                     /**< Error Injection Channel Descriptor n, Word2, offset: 0x6C8 */
  uint8_t RESERVED_24[52];
  __IO uint32_t EICHD24_WORD0;                     /**< Error Injection Channel Descriptor n, Word0, offset: 0x700 */
  __IO uint32_t EICHD24_WORD1;                     /**< Error Injection Channel Descriptor n, Word1, offset: 0x704 */
  __IO uint32_t EICHD24_WORD2;                     /**< Error Injection Channel Descriptor n, Word2, offset: 0x708 */
  __IO uint32_t EICHD24_WORD3;                     /**< Error Injection Channel Descriptor n, Word3, offset: 0x70C */
  __IO uint32_t EICHD24_WORD4;                     /**< Error Injection Channel Descriptor n, Word4, offset: 0x710 */
  uint8_t RESERVED_25[44];
  __IO uint32_t EICHD25_WORD0;                     /**< Error Injection Channel Descriptor n, Word0, offset: 0x740 */
  __IO uint32_t EICHD25_WORD1;                     /**< Error Injection Channel Descriptor n, Word1, offset: 0x744 */
  __IO uint32_t EICHD25_WORD2;                     /**< Error Injection Channel Descriptor n, Word2, offset: 0x748 */
  __IO uint32_t EICHD25_WORD3;                     /**< Error Injection Channel Descriptor n, Word3, offset: 0x74C */
  __IO uint32_t EICHD25_WORD4;                     /**< Error Injection Channel Descriptor n, Word4, offset: 0x750 */
  uint8_t RESERVED_26[44];
  __IO uint32_t EICHD26_WORD0;                     /**< Error Injection Channel Descriptor n, Word0, offset: 0x780 */
  __IO uint32_t EICHD26_WORD1;                     /**< Error Injection Channel Descriptor n, Word1, offset: 0x784 */
  __IO uint32_t EICHD26_WORD2;                     /**< Error Injection Channel Descriptor n, Word2, offset: 0x788 */
  __IO uint32_t EICHD26_WORD3;                     /**< Error Injection Channel Descriptor n, Word3, offset: 0x78C */
  __IO uint32_t EICHD26_WORD4;                     /**< Error Injection Channel Descriptor n, Word4, offset: 0x790 */
  uint8_t RESERVED_27[44];
  __IO uint32_t EICHD27_WORD0;                     /**< Error Injection Channel Descriptor n, Word0, offset: 0x7C0 */
  __IO uint32_t EICHD27_WORD1;                     /**< Error Injection Channel Descriptor n, Word1, offset: 0x7C4 */
  __IO uint32_t EICHD27_WORD2;                     /**< Error Injection Channel Descriptor n, Word2, offset: 0x7C8 */
  __IO uint32_t EICHD27_WORD3;                     /**< Error Injection Channel Descriptor n, Word3, offset: 0x7CC */
  __IO uint32_t EICHD27_WORD4;                     /**< Error Injection Channel Descriptor n, Word4, offset: 0x7D0 */
  uint8_t RESERVED_28[44];
  __IO uint32_t EICHD28_WORD0;                     /**< Error Injection Channel Descriptor n, Word0, offset: 0x800 */
  __IO uint32_t EICHD28_WORD1;                     /**< Error Injection Channel Descriptor n, Word1, offset: 0x804 */
  __IO uint32_t EICHD28_WORD2;                     /**< Error Injection Channel Descriptor n, Word2, offset: 0x808 */
  __IO uint32_t EICHD28_WORD3;                     /**< Error Injection Channel Descriptor n, Word3, offset: 0x80C */
  uint8_t RESERVED_29[48];
  __IO uint32_t EICHD29_WORD0;                     /**< Error Injection Channel Descriptor n, Word0, offset: 0x840 */
  __IO uint32_t EICHD29_WORD1;                     /**< Error Injection Channel Descriptor n, Word1, offset: 0x844 */
  __IO uint32_t EICHD29_WORD2;                     /**< Error Injection Channel Descriptor n, Word2, offset: 0x848 */
  uint8_t RESERVED_30[52];
  __IO uint32_t EICHD30_WORD0;                     /**< Error Injection Channel Descriptor n, Word0, offset: 0x880 */
  __IO uint32_t EICHD30_WORD1;                     /**< Error Injection Channel Descriptor n, Word1, offset: 0x884 */
  __IO uint32_t EICHD30_WORD2;                     /**< Error Injection Channel Descriptor n, Word2, offset: 0x888 */
  uint8_t RESERVED_31[52];
  __IO uint32_t EICHD31_WORD0;                     /**< Error Injection Channel Descriptor n, Word0, offset: 0x8C0 */
  __IO uint32_t EICHD31_WORD1;                     /**< Error Injection Channel Descriptor n, Word1, offset: 0x8C4 */
  __IO uint32_t EICHD31_WORD2;                     /**< Error Injection Channel Descriptor n, Word2, offset: 0x8C8 */
} EIM_Type, *EIM_MemMapPtr;

/** Number of instances of the EIM module. */
#define EIM_INSTANCE_COUNT                       (14u)

/* EIM - Peripheral instance base addresses */
/** Peripheral EIM base address */
#define EIM_BASE                                 (0x40308000u)
/** Peripheral EIM base pointer */
#define EIM                                      ((EIM_Type *)EIM_BASE)
/** Peripheral EIM_0 base address */
#define EIM_0_BASE                               (0x40330000u)
/** Peripheral EIM_0 base pointer */
#define EIM_0                                    ((EIM_Type *)EIM_0_BASE)
/** Peripheral EIM_1 base address */
#define EIM_1_BASE                               (0x40331000u)
/** Peripheral EIM_1 base pointer */
#define EIM_1                                    ((EIM_Type *)EIM_1_BASE)
/** Peripheral EIM_2 base address */
#define EIM_2_BASE                               (0x40332000u)
/** Peripheral EIM_2 base pointer */
#define EIM_2                                    ((EIM_Type *)EIM_2_BASE)
/** Peripheral EIM_3 base address */
#define EIM_3_BASE                               (0x40333000u)
/** Peripheral EIM_3 base pointer */
#define EIM_3                                    ((EIM_Type *)EIM_3_BASE)
/** Peripheral EIM_MISC base address */
#define EIM_MISC_BASE                            (0x4404C000u)
/** Peripheral EIM_MISC base pointer */
#define EIM_MISC                                 ((EIM_Type *)EIM_MISC_BASE)
/** Peripheral EIM_PFE0 base address */
#define EIM_PFE0_BASE                            (0x44054000u)
/** Peripheral EIM_PFE0 base pointer */
#define EIM_PFE0                                 ((EIM_Type *)EIM_PFE0_BASE)
/** Peripheral EIM_PFE1 base address */
#define EIM_PFE1_BASE                            (0x44055000u)
/** Peripheral EIM_PFE1 base pointer */
#define EIM_PFE1                                 ((EIM_Type *)EIM_PFE1_BASE)
/** Peripheral EIM_PFE2 base address */
#define EIM_PFE2_BASE                            (0x44056000u)
/** Peripheral EIM_PFE2 base pointer */
#define EIM_PFE2                                 ((EIM_Type *)EIM_PFE2_BASE)
/** Peripheral EIM_PFE3 base address */
#define EIM_PFE3_BASE                            (0x44057000u)
/** Peripheral EIM_PFE3 base pointer */
#define EIM_PFE3                                 ((EIM_Type *)EIM_PFE3_BASE)
/** Peripheral EIM_PFE4 base address */
#define EIM_PFE4_BASE                            (0x44058000u)
/** Peripheral EIM_PFE4 base pointer */
#define EIM_PFE4                                 ((EIM_Type *)EIM_PFE4_BASE)
/** Peripheral EIM_PFE5 base address */
#define EIM_PFE5_BASE                            (0x44059000u)
/** Peripheral EIM_PFE5 base pointer */
#define EIM_PFE5                                 ((EIM_Type *)EIM_PFE5_BASE)
/** Peripheral EIM_PFE6 base address */
#define EIM_PFE6_BASE                            (0x4405A000u)
/** Peripheral EIM_PFE6 base pointer */
#define EIM_PFE6                                 ((EIM_Type *)EIM_PFE6_BASE)
/** Peripheral LLCE__EIM_LLCE base address */
#define LLCE__EIM_LLCE_BASE                      (0x44050000u)
/** Peripheral LLCE__EIM_LLCE base pointer */
#define LLCE__EIM_LLCE                           ((EIM_Type *)LLCE__EIM_LLCE_BASE)
/** Array initializer of EIM peripheral base addresses */
#define EIM_BASE_ADDRS                           { EIM_BASE, EIM_0_BASE, EIM_1_BASE, EIM_2_BASE, EIM_3_BASE, EIM_MISC_BASE, EIM_PFE0_BASE, EIM_PFE1_BASE, EIM_PFE2_BASE, EIM_PFE3_BASE, EIM_PFE4_BASE, EIM_PFE5_BASE, EIM_PFE6_BASE, LLCE__EIM_LLCE_BASE }
/** Array initializer of EIM peripheral base pointers */
#define EIM_BASE_PTRS                            { EIM, EIM_0, EIM_1, EIM_2, EIM_3, EIM_MISC, EIM_PFE0, EIM_PFE1, EIM_PFE2, EIM_PFE3, EIM_PFE4, EIM_PFE5, EIM_PFE6, LLCE__EIM_LLCE }

/* ----------------------------------------------------------------------------
   -- EIM Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup EIM_Register_Masks EIM Register Masks
 * @{
 */

/*! @name EIMCR - Error Injection Module Configuration Register */
/*! @{ */
#define EIM_EIMCR_GEIEN_MASK                     (0x1U)
#define EIM_EIMCR_GEIEN_SHIFT                    (0U)
#define EIM_EIMCR_GEIEN_WIDTH                    (1U)
#define EIM_EIMCR_GEIEN(x)                       (((uint32_t)(((uint32_t)(x)) << EIM_EIMCR_GEIEN_SHIFT)) & EIM_EIMCR_GEIEN_MASK)
/*! @} */

/*! @name EICHEN - Error Injection Channel Enable register */
/*! @{ */
#define EIM_EICHEN_EICH31EN_MASK                 (0x1U)
#define EIM_EICHEN_EICH31EN_SHIFT                (0U)
#define EIM_EICHEN_EICH31EN_WIDTH                (1U)
#define EIM_EICHEN_EICH31EN(x)                   (((uint32_t)(((uint32_t)(x)) << EIM_EICHEN_EICH31EN_SHIFT)) & EIM_EICHEN_EICH31EN_MASK)
#define EIM_EICHEN_EICH30EN_MASK                 (0x2U)
#define EIM_EICHEN_EICH30EN_SHIFT                (1U)
#define EIM_EICHEN_EICH30EN_WIDTH                (1U)
#define EIM_EICHEN_EICH30EN(x)                   (((uint32_t)(((uint32_t)(x)) << EIM_EICHEN_EICH30EN_SHIFT)) & EIM_EICHEN_EICH30EN_MASK)
#define EIM_EICHEN_EICH29EN_MASK                 (0x4U)
#define EIM_EICHEN_EICH29EN_SHIFT                (2U)
#define EIM_EICHEN_EICH29EN_WIDTH                (1U)
#define EIM_EICHEN_EICH29EN(x)                   (((uint32_t)(((uint32_t)(x)) << EIM_EICHEN_EICH29EN_SHIFT)) & EIM_EICHEN_EICH29EN_MASK)
#define EIM_EICHEN_EICH28EN_MASK                 (0x8U)
#define EIM_EICHEN_EICH28EN_SHIFT                (3U)
#define EIM_EICHEN_EICH28EN_WIDTH                (1U)
#define EIM_EICHEN_EICH28EN(x)                   (((uint32_t)(((uint32_t)(x)) << EIM_EICHEN_EICH28EN_SHIFT)) & EIM_EICHEN_EICH28EN_MASK)
#define EIM_EICHEN_EICH27EN_MASK                 (0x10U)
#define EIM_EICHEN_EICH27EN_SHIFT                (4U)
#define EIM_EICHEN_EICH27EN_WIDTH                (1U)
#define EIM_EICHEN_EICH27EN(x)                   (((uint32_t)(((uint32_t)(x)) << EIM_EICHEN_EICH27EN_SHIFT)) & EIM_EICHEN_EICH27EN_MASK)
#define EIM_EICHEN_EICH26EN_MASK                 (0x20U)
#define EIM_EICHEN_EICH26EN_SHIFT                (5U)
#define EIM_EICHEN_EICH26EN_WIDTH                (1U)
#define EIM_EICHEN_EICH26EN(x)                   (((uint32_t)(((uint32_t)(x)) << EIM_EICHEN_EICH26EN_SHIFT)) & EIM_EICHEN_EICH26EN_MASK)
#define EIM_EICHEN_EICH25EN_MASK                 (0x40U)
#define EIM_EICHEN_EICH25EN_SHIFT                (6U)
#define EIM_EICHEN_EICH25EN_WIDTH                (1U)
#define EIM_EICHEN_EICH25EN(x)                   (((uint32_t)(((uint32_t)(x)) << EIM_EICHEN_EICH25EN_SHIFT)) & EIM_EICHEN_EICH25EN_MASK)
#define EIM_EICHEN_EICH24EN_MASK                 (0x80U)
#define EIM_EICHEN_EICH24EN_SHIFT                (7U)
#define EIM_EICHEN_EICH24EN_WIDTH                (1U)
#define EIM_EICHEN_EICH24EN(x)                   (((uint32_t)(((uint32_t)(x)) << EIM_EICHEN_EICH24EN_SHIFT)) & EIM_EICHEN_EICH24EN_MASK)
#define EIM_EICHEN_EICH23EN_MASK                 (0x100U)
#define EIM_EICHEN_EICH23EN_SHIFT                (8U)
#define EIM_EICHEN_EICH23EN_WIDTH                (1U)
#define EIM_EICHEN_EICH23EN(x)                   (((uint32_t)(((uint32_t)(x)) << EIM_EICHEN_EICH23EN_SHIFT)) & EIM_EICHEN_EICH23EN_MASK)
#define EIM_EICHEN_EICH22EN_MASK                 (0x200U)
#define EIM_EICHEN_EICH22EN_SHIFT                (9U)
#define EIM_EICHEN_EICH22EN_WIDTH                (1U)
#define EIM_EICHEN_EICH22EN(x)                   (((uint32_t)(((uint32_t)(x)) << EIM_EICHEN_EICH22EN_SHIFT)) & EIM_EICHEN_EICH22EN_MASK)
#define EIM_EICHEN_EICH21EN_MASK                 (0x400U)
#define EIM_EICHEN_EICH21EN_SHIFT                (10U)
#define EIM_EICHEN_EICH21EN_WIDTH                (1U)
#define EIM_EICHEN_EICH21EN(x)                   (((uint32_t)(((uint32_t)(x)) << EIM_EICHEN_EICH21EN_SHIFT)) & EIM_EICHEN_EICH21EN_MASK)
#define EIM_EICHEN_EICH20EN_MASK                 (0x800U)
#define EIM_EICHEN_EICH20EN_SHIFT                (11U)
#define EIM_EICHEN_EICH20EN_WIDTH                (1U)
#define EIM_EICHEN_EICH20EN(x)                   (((uint32_t)(((uint32_t)(x)) << EIM_EICHEN_EICH20EN_SHIFT)) & EIM_EICHEN_EICH20EN_MASK)
#define EIM_EICHEN_EICH19EN_MASK                 (0x1000U)
#define EIM_EICHEN_EICH19EN_SHIFT                (12U)
#define EIM_EICHEN_EICH19EN_WIDTH                (1U)
#define EIM_EICHEN_EICH19EN(x)                   (((uint32_t)(((uint32_t)(x)) << EIM_EICHEN_EICH19EN_SHIFT)) & EIM_EICHEN_EICH19EN_MASK)
#define EIM_EICHEN_EICH18EN_MASK                 (0x2000U)
#define EIM_EICHEN_EICH18EN_SHIFT                (13U)
#define EIM_EICHEN_EICH18EN_WIDTH                (1U)
#define EIM_EICHEN_EICH18EN(x)                   (((uint32_t)(((uint32_t)(x)) << EIM_EICHEN_EICH18EN_SHIFT)) & EIM_EICHEN_EICH18EN_MASK)
#define EIM_EICHEN_EICH17EN_MASK                 (0x4000U)
#define EIM_EICHEN_EICH17EN_SHIFT                (14U)
#define EIM_EICHEN_EICH17EN_WIDTH                (1U)
#define EIM_EICHEN_EICH17EN(x)                   (((uint32_t)(((uint32_t)(x)) << EIM_EICHEN_EICH17EN_SHIFT)) & EIM_EICHEN_EICH17EN_MASK)
#define EIM_EICHEN_EICH16EN_MASK                 (0x8000U)
#define EIM_EICHEN_EICH16EN_SHIFT                (15U)
#define EIM_EICHEN_EICH16EN_WIDTH                (1U)
#define EIM_EICHEN_EICH16EN(x)                   (((uint32_t)(((uint32_t)(x)) << EIM_EICHEN_EICH16EN_SHIFT)) & EIM_EICHEN_EICH16EN_MASK)
#define EIM_EICHEN_EICH15EN_MASK                 (0x10000U)
#define EIM_EICHEN_EICH15EN_SHIFT                (16U)
#define EIM_EICHEN_EICH15EN_WIDTH                (1U)
#define EIM_EICHEN_EICH15EN(x)                   (((uint32_t)(((uint32_t)(x)) << EIM_EICHEN_EICH15EN_SHIFT)) & EIM_EICHEN_EICH15EN_MASK)
#define EIM_EICHEN_EICH14EN_MASK                 (0x20000U)
#define EIM_EICHEN_EICH14EN_SHIFT                (17U)
#define EIM_EICHEN_EICH14EN_WIDTH                (1U)
#define EIM_EICHEN_EICH14EN(x)                   (((uint32_t)(((uint32_t)(x)) << EIM_EICHEN_EICH14EN_SHIFT)) & EIM_EICHEN_EICH14EN_MASK)
#define EIM_EICHEN_EICH13EN_MASK                 (0x40000U)
#define EIM_EICHEN_EICH13EN_SHIFT                (18U)
#define EIM_EICHEN_EICH13EN_WIDTH                (1U)
#define EIM_EICHEN_EICH13EN(x)                   (((uint32_t)(((uint32_t)(x)) << EIM_EICHEN_EICH13EN_SHIFT)) & EIM_EICHEN_EICH13EN_MASK)
#define EIM_EICHEN_EICH12EN_MASK                 (0x80000U)
#define EIM_EICHEN_EICH12EN_SHIFT                (19U)
#define EIM_EICHEN_EICH12EN_WIDTH                (1U)
#define EIM_EICHEN_EICH12EN(x)                   (((uint32_t)(((uint32_t)(x)) << EIM_EICHEN_EICH12EN_SHIFT)) & EIM_EICHEN_EICH12EN_MASK)
#define EIM_EICHEN_EICH11EN_MASK                 (0x100000U)
#define EIM_EICHEN_EICH11EN_SHIFT                (20U)
#define EIM_EICHEN_EICH11EN_WIDTH                (1U)
#define EIM_EICHEN_EICH11EN(x)                   (((uint32_t)(((uint32_t)(x)) << EIM_EICHEN_EICH11EN_SHIFT)) & EIM_EICHEN_EICH11EN_MASK)
#define EIM_EICHEN_EICH10EN_MASK                 (0x200000U)
#define EIM_EICHEN_EICH10EN_SHIFT                (21U)
#define EIM_EICHEN_EICH10EN_WIDTH                (1U)
#define EIM_EICHEN_EICH10EN(x)                   (((uint32_t)(((uint32_t)(x)) << EIM_EICHEN_EICH10EN_SHIFT)) & EIM_EICHEN_EICH10EN_MASK)
#define EIM_EICHEN_EICH9EN_MASK                  (0x400000U)
#define EIM_EICHEN_EICH9EN_SHIFT                 (22U)
#define EIM_EICHEN_EICH9EN_WIDTH                 (1U)
#define EIM_EICHEN_EICH9EN(x)                    (((uint32_t)(((uint32_t)(x)) << EIM_EICHEN_EICH9EN_SHIFT)) & EIM_EICHEN_EICH9EN_MASK)
#define EIM_EICHEN_EICH8EN_MASK                  (0x800000U)
#define EIM_EICHEN_EICH8EN_SHIFT                 (23U)
#define EIM_EICHEN_EICH8EN_WIDTH                 (1U)
#define EIM_EICHEN_EICH8EN(x)                    (((uint32_t)(((uint32_t)(x)) << EIM_EICHEN_EICH8EN_SHIFT)) & EIM_EICHEN_EICH8EN_MASK)
#define EIM_EICHEN_EICH7EN_MASK                  (0x1000000U)
#define EIM_EICHEN_EICH7EN_SHIFT                 (24U)
#define EIM_EICHEN_EICH7EN_WIDTH                 (1U)
#define EIM_EICHEN_EICH7EN(x)                    (((uint32_t)(((uint32_t)(x)) << EIM_EICHEN_EICH7EN_SHIFT)) & EIM_EICHEN_EICH7EN_MASK)
#define EIM_EICHEN_EICH6EN_MASK                  (0x2000000U)
#define EIM_EICHEN_EICH6EN_SHIFT                 (25U)
#define EIM_EICHEN_EICH6EN_WIDTH                 (1U)
#define EIM_EICHEN_EICH6EN(x)                    (((uint32_t)(((uint32_t)(x)) << EIM_EICHEN_EICH6EN_SHIFT)) & EIM_EICHEN_EICH6EN_MASK)
#define EIM_EICHEN_EICH5EN_MASK                  (0x4000000U)
#define EIM_EICHEN_EICH5EN_SHIFT                 (26U)
#define EIM_EICHEN_EICH5EN_WIDTH                 (1U)
#define EIM_EICHEN_EICH5EN(x)                    (((uint32_t)(((uint32_t)(x)) << EIM_EICHEN_EICH5EN_SHIFT)) & EIM_EICHEN_EICH5EN_MASK)
#define EIM_EICHEN_EICH4EN_MASK                  (0x8000000U)
#define EIM_EICHEN_EICH4EN_SHIFT                 (27U)
#define EIM_EICHEN_EICH4EN_WIDTH                 (1U)
#define EIM_EICHEN_EICH4EN(x)                    (((uint32_t)(((uint32_t)(x)) << EIM_EICHEN_EICH4EN_SHIFT)) & EIM_EICHEN_EICH4EN_MASK)
#define EIM_EICHEN_EICH3EN_MASK                  (0x10000000U)
#define EIM_EICHEN_EICH3EN_SHIFT                 (28U)
#define EIM_EICHEN_EICH3EN_WIDTH                 (1U)
#define EIM_EICHEN_EICH3EN(x)                    (((uint32_t)(((uint32_t)(x)) << EIM_EICHEN_EICH3EN_SHIFT)) & EIM_EICHEN_EICH3EN_MASK)
#define EIM_EICHEN_EICH2EN_MASK                  (0x20000000U)
#define EIM_EICHEN_EICH2EN_SHIFT                 (29U)
#define EIM_EICHEN_EICH2EN_WIDTH                 (1U)
#define EIM_EICHEN_EICH2EN(x)                    (((uint32_t)(((uint32_t)(x)) << EIM_EICHEN_EICH2EN_SHIFT)) & EIM_EICHEN_EICH2EN_MASK)
#define EIM_EICHEN_EICH1EN_MASK                  (0x40000000U)
#define EIM_EICHEN_EICH1EN_SHIFT                 (30U)
#define EIM_EICHEN_EICH1EN_WIDTH                 (1U)
#define EIM_EICHEN_EICH1EN(x)                    (((uint32_t)(((uint32_t)(x)) << EIM_EICHEN_EICH1EN_SHIFT)) & EIM_EICHEN_EICH1EN_MASK)
#define EIM_EICHEN_EICH0EN_MASK                  (0x80000000U)
#define EIM_EICHEN_EICH0EN_SHIFT                 (31U)
#define EIM_EICHEN_EICH0EN_WIDTH                 (1U)
#define EIM_EICHEN_EICH0EN(x)                    (((uint32_t)(((uint32_t)(x)) << EIM_EICHEN_EICH0EN_SHIFT)) & EIM_EICHEN_EICH0EN_MASK)
/*! @} */

/*! @name EICHD0_WORD0 - Error Injection Channel Descriptor n, Word0 */
/*! @{ */
#define EIM_EICHD0_WORD0_CHKBIT_MASK_MASK        (0xFFFFFFFFU)  /* Merged from fields with different position or width, of widths (7, 8, 32), largest definition used */
#define EIM_EICHD0_WORD0_CHKBIT_MASK_SHIFT       (0U)
#define EIM_EICHD0_WORD0_CHKBIT_MASK_WIDTH       (32U)
#define EIM_EICHD0_WORD0_CHKBIT_MASK(x)          (((uint32_t)(((uint32_t)(x)) << EIM_EICHD0_WORD0_CHKBIT_MASK_SHIFT)) & EIM_EICHD0_WORD0_CHKBIT_MASK_MASK)  /* Merged from fields with different position or width, of widths (7, 8, 32), largest definition used */
/*! @} */

/*! @name EICHD0_WORD1 - Error Injection Channel Descriptor n, Word1 */
/*! @{ */
#define EIM_EICHD0_WORD1_B0_3DATA_MASK_MASK      (0xFFFFFFFFU)  /* Merged from fields with different position or width, of widths (8, 16, 32), largest definition used */
#define EIM_EICHD0_WORD1_B0_3DATA_MASK_SHIFT     (0U)
#define EIM_EICHD0_WORD1_B0_3DATA_MASK_WIDTH     (32U)
#define EIM_EICHD0_WORD1_B0_3DATA_MASK(x)        (((uint32_t)(((uint32_t)(x)) << EIM_EICHD0_WORD1_B0_3DATA_MASK_SHIFT)) & EIM_EICHD0_WORD1_B0_3DATA_MASK_MASK)  /* Merged from fields with different position or width, of widths (8, 16, 32), largest definition used */
/*! @} */

/*! @name EICHD0_WORD2 - Error Injection Channel Descriptor n, Word2 */
/*! @{ */
#define EIM_EICHD0_WORD2_B4_7DATA_MASK_MASK      (0xFFFFFFFFU)
#define EIM_EICHD0_WORD2_B4_7DATA_MASK_SHIFT     (0U)
#define EIM_EICHD0_WORD2_B4_7DATA_MASK_WIDTH     (32U)
#define EIM_EICHD0_WORD2_B4_7DATA_MASK(x)        (((uint32_t)(((uint32_t)(x)) << EIM_EICHD0_WORD2_B4_7DATA_MASK_SHIFT)) & EIM_EICHD0_WORD2_B4_7DATA_MASK_MASK)
/*! @} */

/*! @name EICHD0_WORD3 - Error Injection Channel Descriptor n, Word3 */
/*! @{ */
#define EIM_EICHD0_WORD3_B8_11DATA_MASK_MASK     (0xFFFFFFFFU)
#define EIM_EICHD0_WORD3_B8_11DATA_MASK_SHIFT    (0U)
#define EIM_EICHD0_WORD3_B8_11DATA_MASK_WIDTH    (32U)
#define EIM_EICHD0_WORD3_B8_11DATA_MASK(x)       (((uint32_t)(((uint32_t)(x)) << EIM_EICHD0_WORD3_B8_11DATA_MASK_SHIFT)) & EIM_EICHD0_WORD3_B8_11DATA_MASK_MASK)
/*! @} */

/*! @name EICHD0_WORD4 - Error Injection Channel Descriptor n, Word4 */
/*! @{ */
#define EIM_EICHD0_WORD4_B12_15DATA_MASK_MASK    (0xFFFFFFFFU)
#define EIM_EICHD0_WORD4_B12_15DATA_MASK_SHIFT   (0U)
#define EIM_EICHD0_WORD4_B12_15DATA_MASK_WIDTH   (32U)
#define EIM_EICHD0_WORD4_B12_15DATA_MASK(x)      (((uint32_t)(((uint32_t)(x)) << EIM_EICHD0_WORD4_B12_15DATA_MASK_SHIFT)) & EIM_EICHD0_WORD4_B12_15DATA_MASK_MASK)
/*! @} */

/*! @name EICHD0_WORD5 - Error Injection Channel Descriptor n, Word5 */
/*! @{ */
#define EIM_EICHD0_WORD5_B16_19DATA_MASK_MASK    (0xFFFFFFFFU)
#define EIM_EICHD0_WORD5_B16_19DATA_MASK_SHIFT   (0U)
#define EIM_EICHD0_WORD5_B16_19DATA_MASK_WIDTH   (32U)
#define EIM_EICHD0_WORD5_B16_19DATA_MASK(x)      (((uint32_t)(((uint32_t)(x)) << EIM_EICHD0_WORD5_B16_19DATA_MASK_SHIFT)) & EIM_EICHD0_WORD5_B16_19DATA_MASK_MASK)
/*! @} */

/*! @name EICHD0_WORD6 - Error Injection Channel Descriptor n, Word6 */
/*! @{ */
#define EIM_EICHD0_WORD6_B20_23DATA_MASK_MASK    (0xFFFFFFFFU)
#define EIM_EICHD0_WORD6_B20_23DATA_MASK_SHIFT   (0U)
#define EIM_EICHD0_WORD6_B20_23DATA_MASK_WIDTH   (32U)
#define EIM_EICHD0_WORD6_B20_23DATA_MASK(x)      (((uint32_t)(((uint32_t)(x)) << EIM_EICHD0_WORD6_B20_23DATA_MASK_SHIFT)) & EIM_EICHD0_WORD6_B20_23DATA_MASK_MASK)
/*! @} */

/*! @name EICHD0_WORD7 - Error Injection Channel Descriptor n, Word7 */
/*! @{ */
#define EIM_EICHD0_WORD7_B24_27DATA_MASK_MASK    (0xFFFFFFFFU)
#define EIM_EICHD0_WORD7_B24_27DATA_MASK_SHIFT   (0U)
#define EIM_EICHD0_WORD7_B24_27DATA_MASK_WIDTH   (32U)
#define EIM_EICHD0_WORD7_B24_27DATA_MASK(x)      (((uint32_t)(((uint32_t)(x)) << EIM_EICHD0_WORD7_B24_27DATA_MASK_SHIFT)) & EIM_EICHD0_WORD7_B24_27DATA_MASK_MASK)
/*! @} */

/*! @name EICHD0_WORD8 - Error Injection Channel Descriptor n, Word8 */
/*! @{ */
#define EIM_EICHD0_WORD8_B28_31DATA_MASK_MASK    (0xFFFFFFFFU)
#define EIM_EICHD0_WORD8_B28_31DATA_MASK_SHIFT   (0U)
#define EIM_EICHD0_WORD8_B28_31DATA_MASK_WIDTH   (32U)
#define EIM_EICHD0_WORD8_B28_31DATA_MASK(x)      (((uint32_t)(((uint32_t)(x)) << EIM_EICHD0_WORD8_B28_31DATA_MASK_SHIFT)) & EIM_EICHD0_WORD8_B28_31DATA_MASK_MASK)
/*! @} */

/*! @name EICHD1_WORD0 - Error Injection Channel Descriptor n, Word0 */
/*! @{ */
#define EIM_EICHD1_WORD0_CHKBIT_MASK_MASK        (0xFFFFFFFFU)  /* Merged from fields with different position or width, of widths (7, 8, 30, 32), largest definition used */
#define EIM_EICHD1_WORD0_CHKBIT_MASK_SHIFT       (0U)
#define EIM_EICHD1_WORD0_CHKBIT_MASK_WIDTH       (32U)
#define EIM_EICHD1_WORD0_CHKBIT_MASK(x)          (((uint32_t)(((uint32_t)(x)) << EIM_EICHD1_WORD0_CHKBIT_MASK_SHIFT)) & EIM_EICHD1_WORD0_CHKBIT_MASK_MASK)  /* Merged from fields with different position or width, of widths (7, 8, 30, 32), largest definition used */
/*! @} */

/*! @name EICHD1_WORD1 - Error Injection Channel Descriptor n, Word1 */
/*! @{ */
#define EIM_EICHD1_WORD1_B0_3DATA_MASK_MASK      (0xFFFFFFFFU)  /* Merged from fields with different position or width, of widths (8, 16, 32), largest definition used */
#define EIM_EICHD1_WORD1_B0_3DATA_MASK_SHIFT     (0U)
#define EIM_EICHD1_WORD1_B0_3DATA_MASK_WIDTH     (32U)
#define EIM_EICHD1_WORD1_B0_3DATA_MASK(x)        (((uint32_t)(((uint32_t)(x)) << EIM_EICHD1_WORD1_B0_3DATA_MASK_SHIFT)) & EIM_EICHD1_WORD1_B0_3DATA_MASK_MASK)  /* Merged from fields with different position or width, of widths (8, 16, 32), largest definition used */
/*! @} */

/*! @name EICHD1_WORD2 - Error Injection Channel Descriptor n, Word2 */
/*! @{ */
#define EIM_EICHD1_WORD2_B4_7DATA_MASK_MASK      (0xFFFFFFFFU)
#define EIM_EICHD1_WORD2_B4_7DATA_MASK_SHIFT     (0U)
#define EIM_EICHD1_WORD2_B4_7DATA_MASK_WIDTH     (32U)
#define EIM_EICHD1_WORD2_B4_7DATA_MASK(x)        (((uint32_t)(((uint32_t)(x)) << EIM_EICHD1_WORD2_B4_7DATA_MASK_SHIFT)) & EIM_EICHD1_WORD2_B4_7DATA_MASK_MASK)
/*! @} */

/*! @name EICHD1_WORD3 - Error Injection Channel Descriptor n, Word3 */
/*! @{ */
#define EIM_EICHD1_WORD3_B8_11DATA_MASK_MASK     (0xFFFFFFFFU)
#define EIM_EICHD1_WORD3_B8_11DATA_MASK_SHIFT    (0U)
#define EIM_EICHD1_WORD3_B8_11DATA_MASK_WIDTH    (32U)
#define EIM_EICHD1_WORD3_B8_11DATA_MASK(x)       (((uint32_t)(((uint32_t)(x)) << EIM_EICHD1_WORD3_B8_11DATA_MASK_SHIFT)) & EIM_EICHD1_WORD3_B8_11DATA_MASK_MASK)
/*! @} */

/*! @name EICHD1_WORD4 - Error Injection Channel Descriptor n, Word4 */
/*! @{ */
#define EIM_EICHD1_WORD4_B12_15DATA_MASK_MASK    (0xFFFFFFFFU)
#define EIM_EICHD1_WORD4_B12_15DATA_MASK_SHIFT   (0U)
#define EIM_EICHD1_WORD4_B12_15DATA_MASK_WIDTH   (32U)
#define EIM_EICHD1_WORD4_B12_15DATA_MASK(x)      (((uint32_t)(((uint32_t)(x)) << EIM_EICHD1_WORD4_B12_15DATA_MASK_SHIFT)) & EIM_EICHD1_WORD4_B12_15DATA_MASK_MASK)
/*! @} */

/*! @name EICHD1_WORD5 - Error Injection Channel Descriptor n, Word5 */
/*! @{ */
#define EIM_EICHD1_WORD5_B16_19DATA_MASK_MASK    (0xFFFFFFFFU)
#define EIM_EICHD1_WORD5_B16_19DATA_MASK_SHIFT   (0U)
#define EIM_EICHD1_WORD5_B16_19DATA_MASK_WIDTH   (32U)
#define EIM_EICHD1_WORD5_B16_19DATA_MASK(x)      (((uint32_t)(((uint32_t)(x)) << EIM_EICHD1_WORD5_B16_19DATA_MASK_SHIFT)) & EIM_EICHD1_WORD5_B16_19DATA_MASK_MASK)
/*! @} */

/*! @name EICHD1_WORD6 - Error Injection Channel Descriptor n, Word6 */
/*! @{ */
#define EIM_EICHD1_WORD6_B20_23DATA_MASK_MASK    (0xFFFFFFFFU)
#define EIM_EICHD1_WORD6_B20_23DATA_MASK_SHIFT   (0U)
#define EIM_EICHD1_WORD6_B20_23DATA_MASK_WIDTH   (32U)
#define EIM_EICHD1_WORD6_B20_23DATA_MASK(x)      (((uint32_t)(((uint32_t)(x)) << EIM_EICHD1_WORD6_B20_23DATA_MASK_SHIFT)) & EIM_EICHD1_WORD6_B20_23DATA_MASK_MASK)
/*! @} */

/*! @name EICHD1_WORD7 - Error Injection Channel Descriptor n, Word7 */
/*! @{ */
#define EIM_EICHD1_WORD7_B24_27DATA_MASK_MASK    (0xFFFFFFFFU)
#define EIM_EICHD1_WORD7_B24_27DATA_MASK_SHIFT   (0U)
#define EIM_EICHD1_WORD7_B24_27DATA_MASK_WIDTH   (32U)
#define EIM_EICHD1_WORD7_B24_27DATA_MASK(x)      (((uint32_t)(((uint32_t)(x)) << EIM_EICHD1_WORD7_B24_27DATA_MASK_SHIFT)) & EIM_EICHD1_WORD7_B24_27DATA_MASK_MASK)
/*! @} */

/*! @name EICHD1_WORD8 - Error Injection Channel Descriptor n, Word8 */
/*! @{ */
#define EIM_EICHD1_WORD8_B28_31DATA_MASK_MASK    (0xFFFFFFFFU)
#define EIM_EICHD1_WORD8_B28_31DATA_MASK_SHIFT   (0U)
#define EIM_EICHD1_WORD8_B28_31DATA_MASK_WIDTH   (32U)
#define EIM_EICHD1_WORD8_B28_31DATA_MASK(x)      (((uint32_t)(((uint32_t)(x)) << EIM_EICHD1_WORD8_B28_31DATA_MASK_SHIFT)) & EIM_EICHD1_WORD8_B28_31DATA_MASK_MASK)
/*! @} */

/*! @name EICHD2_WORD0 - Error Injection Channel Descriptor n, Word0 */
/*! @{ */
#define EIM_EICHD2_WORD0_CHKBIT_MASK_MASK        (0xFFFFFFFFU)  /* Merged from fields with different position or width, of widths (8, 10, 16, 32), largest definition used */
#define EIM_EICHD2_WORD0_CHKBIT_MASK_SHIFT       (0U)
#define EIM_EICHD2_WORD0_CHKBIT_MASK_WIDTH       (32U)
#define EIM_EICHD2_WORD0_CHKBIT_MASK(x)          (((uint32_t)(((uint32_t)(x)) << EIM_EICHD2_WORD0_CHKBIT_MASK_SHIFT)) & EIM_EICHD2_WORD0_CHKBIT_MASK_MASK)  /* Merged from fields with different position or width, of widths (8, 10, 16, 32), largest definition used */
/*! @} */

/*! @name EICHD2_WORD1 - Error Injection Channel Descriptor n, Word1 */
/*! @{ */
#define EIM_EICHD2_WORD1_B0_3DATA_MASK_MASK      (0xFFFFFFFFU)  /* Merged from fields with different position or width, of widths (8, 16, 28, 32), largest definition used */
#define EIM_EICHD2_WORD1_B0_3DATA_MASK_SHIFT     (0U)
#define EIM_EICHD2_WORD1_B0_3DATA_MASK_WIDTH     (32U)
#define EIM_EICHD2_WORD1_B0_3DATA_MASK(x)        (((uint32_t)(((uint32_t)(x)) << EIM_EICHD2_WORD1_B0_3DATA_MASK_SHIFT)) & EIM_EICHD2_WORD1_B0_3DATA_MASK_MASK)  /* Merged from fields with different position or width, of widths (8, 16, 28, 32), largest definition used */
/*! @} */

/*! @name EICHD2_WORD2 - Error Injection Channel Descriptor n, Word2 */
/*! @{ */
#define EIM_EICHD2_WORD2_B4_7DATA_MASK_MASK      (0xFFFFFFFFU)
#define EIM_EICHD2_WORD2_B4_7DATA_MASK_SHIFT     (0U)
#define EIM_EICHD2_WORD2_B4_7DATA_MASK_WIDTH     (32U)
#define EIM_EICHD2_WORD2_B4_7DATA_MASK(x)        (((uint32_t)(((uint32_t)(x)) << EIM_EICHD2_WORD2_B4_7DATA_MASK_SHIFT)) & EIM_EICHD2_WORD2_B4_7DATA_MASK_MASK)
/*! @} */

/*! @name EICHD2_WORD3 - Error Injection Channel Descriptor n, Word3 */
/*! @{ */
#define EIM_EICHD2_WORD3_B8_11DATA_MASK_MASK     (0xFFFFFFFFU)
#define EIM_EICHD2_WORD3_B8_11DATA_MASK_SHIFT    (0U)
#define EIM_EICHD2_WORD3_B8_11DATA_MASK_WIDTH    (32U)
#define EIM_EICHD2_WORD3_B8_11DATA_MASK(x)       (((uint32_t)(((uint32_t)(x)) << EIM_EICHD2_WORD3_B8_11DATA_MASK_SHIFT)) & EIM_EICHD2_WORD3_B8_11DATA_MASK_MASK)
/*! @} */

/*! @name EICHD2_WORD4 - Error Injection Channel Descriptor n, Word4 */
/*! @{ */
#define EIM_EICHD2_WORD4_B12_15DATA_MASK_MASK    (0xFFFFFFFFU)
#define EIM_EICHD2_WORD4_B12_15DATA_MASK_SHIFT   (0U)
#define EIM_EICHD2_WORD4_B12_15DATA_MASK_WIDTH   (32U)
#define EIM_EICHD2_WORD4_B12_15DATA_MASK(x)      (((uint32_t)(((uint32_t)(x)) << EIM_EICHD2_WORD4_B12_15DATA_MASK_SHIFT)) & EIM_EICHD2_WORD4_B12_15DATA_MASK_MASK)
/*! @} */

/*! @name EICHD2_WORD5 - Error Injection Channel Descriptor n, Word5 */
/*! @{ */
#define EIM_EICHD2_WORD5_B16_19DATA_MASK_MASK    (0xFFFFFFFFU)
#define EIM_EICHD2_WORD5_B16_19DATA_MASK_SHIFT   (0U)
#define EIM_EICHD2_WORD5_B16_19DATA_MASK_WIDTH   (32U)
#define EIM_EICHD2_WORD5_B16_19DATA_MASK(x)      (((uint32_t)(((uint32_t)(x)) << EIM_EICHD2_WORD5_B16_19DATA_MASK_SHIFT)) & EIM_EICHD2_WORD5_B16_19DATA_MASK_MASK)
/*! @} */

/*! @name EICHD2_WORD6 - Error Injection Channel Descriptor n, Word6 */
/*! @{ */
#define EIM_EICHD2_WORD6_B20_23DATA_MASK_MASK    (0xFFFFFFFFU)
#define EIM_EICHD2_WORD6_B20_23DATA_MASK_SHIFT   (0U)
#define EIM_EICHD2_WORD6_B20_23DATA_MASK_WIDTH   (32U)
#define EIM_EICHD2_WORD6_B20_23DATA_MASK(x)      (((uint32_t)(((uint32_t)(x)) << EIM_EICHD2_WORD6_B20_23DATA_MASK_SHIFT)) & EIM_EICHD2_WORD6_B20_23DATA_MASK_MASK)
/*! @} */

/*! @name EICHD2_WORD7 - Error Injection Channel Descriptor n, Word7 */
/*! @{ */
#define EIM_EICHD2_WORD7_B24_27DATA_MASK_MASK    (0xFFFFFFFFU)
#define EIM_EICHD2_WORD7_B24_27DATA_MASK_SHIFT   (0U)
#define EIM_EICHD2_WORD7_B24_27DATA_MASK_WIDTH   (32U)
#define EIM_EICHD2_WORD7_B24_27DATA_MASK(x)      (((uint32_t)(((uint32_t)(x)) << EIM_EICHD2_WORD7_B24_27DATA_MASK_SHIFT)) & EIM_EICHD2_WORD7_B24_27DATA_MASK_MASK)
/*! @} */

/*! @name EICHD2_WORD8 - Error Injection Channel Descriptor n, Word8 */
/*! @{ */
#define EIM_EICHD2_WORD8_B28_31DATA_MASK_MASK    (0xFFFFFFFFU)
#define EIM_EICHD2_WORD8_B28_31DATA_MASK_SHIFT   (0U)
#define EIM_EICHD2_WORD8_B28_31DATA_MASK_WIDTH   (32U)
#define EIM_EICHD2_WORD8_B28_31DATA_MASK(x)      (((uint32_t)(((uint32_t)(x)) << EIM_EICHD2_WORD8_B28_31DATA_MASK_SHIFT)) & EIM_EICHD2_WORD8_B28_31DATA_MASK_MASK)
/*! @} */

/*! @name EICHD3_WORD0 - Error Injection Channel Descriptor n, Word0 */
/*! @{ */
#define EIM_EICHD3_WORD0_CHKBIT_MASK_MASK        (0xFFFFFFFFU)  /* Merged from fields with different position or width, of widths (7, 8, 20, 30, 32), largest definition used */
#define EIM_EICHD3_WORD0_CHKBIT_MASK_SHIFT       (0U)
#define EIM_EICHD3_WORD0_CHKBIT_MASK_WIDTH       (32U)
#define EIM_EICHD3_WORD0_CHKBIT_MASK(x)          (((uint32_t)(((uint32_t)(x)) << EIM_EICHD3_WORD0_CHKBIT_MASK_SHIFT)) & EIM_EICHD3_WORD0_CHKBIT_MASK_MASK)  /* Merged from fields with different position or width, of widths (7, 8, 20, 30, 32), largest definition used */
/*! @} */

/*! @name EICHD3_WORD1 - Error Injection Channel Descriptor n, Word1 */
/*! @{ */
#define EIM_EICHD3_WORD1_B0_3DATA_MASK_MASK      (0xFFFFFFFFU)  /* Merged from fields with different position or width, of widths (8, 16, 32), largest definition used */
#define EIM_EICHD3_WORD1_B0_3DATA_MASK_SHIFT     (0U)
#define EIM_EICHD3_WORD1_B0_3DATA_MASK_WIDTH     (32U)
#define EIM_EICHD3_WORD1_B0_3DATA_MASK(x)        (((uint32_t)(((uint32_t)(x)) << EIM_EICHD3_WORD1_B0_3DATA_MASK_SHIFT)) & EIM_EICHD3_WORD1_B0_3DATA_MASK_MASK)  /* Merged from fields with different position or width, of widths (8, 16, 32), largest definition used */
/*! @} */

/*! @name EICHD3_WORD2 - Error Injection Channel Descriptor n, Word2 */
/*! @{ */
#define EIM_EICHD3_WORD2_B4_7DATA_MASK_MASK      (0xFFFFFFFFU)
#define EIM_EICHD3_WORD2_B4_7DATA_MASK_SHIFT     (0U)
#define EIM_EICHD3_WORD2_B4_7DATA_MASK_WIDTH     (32U)
#define EIM_EICHD3_WORD2_B4_7DATA_MASK(x)        (((uint32_t)(((uint32_t)(x)) << EIM_EICHD3_WORD2_B4_7DATA_MASK_SHIFT)) & EIM_EICHD3_WORD2_B4_7DATA_MASK_MASK)
/*! @} */

/*! @name EICHD3_WORD3 - Error Injection Channel Descriptor n, Word3 */
/*! @{ */
#define EIM_EICHD3_WORD3_B8_11DATA_MASK_MASK     (0xFFFFFFFFU)
#define EIM_EICHD3_WORD3_B8_11DATA_MASK_SHIFT    (0U)
#define EIM_EICHD3_WORD3_B8_11DATA_MASK_WIDTH    (32U)
#define EIM_EICHD3_WORD3_B8_11DATA_MASK(x)       (((uint32_t)(((uint32_t)(x)) << EIM_EICHD3_WORD3_B8_11DATA_MASK_SHIFT)) & EIM_EICHD3_WORD3_B8_11DATA_MASK_MASK)
/*! @} */

/*! @name EICHD3_WORD4 - Error Injection Channel Descriptor n, Word4 */
/*! @{ */
#define EIM_EICHD3_WORD4_B12_15DATA_MASK_MASK    (0xFFFFFFFFU)
#define EIM_EICHD3_WORD4_B12_15DATA_MASK_SHIFT   (0U)
#define EIM_EICHD3_WORD4_B12_15DATA_MASK_WIDTH   (32U)
#define EIM_EICHD3_WORD4_B12_15DATA_MASK(x)      (((uint32_t)(((uint32_t)(x)) << EIM_EICHD3_WORD4_B12_15DATA_MASK_SHIFT)) & EIM_EICHD3_WORD4_B12_15DATA_MASK_MASK)
/*! @} */

/*! @name EICHD3_WORD5 - Error Injection Channel Descriptor n, Word5 */
/*! @{ */
#define EIM_EICHD3_WORD5_B16_19DATA_MASK_MASK    (0xFFFFFFFFU)
#define EIM_EICHD3_WORD5_B16_19DATA_MASK_SHIFT   (0U)
#define EIM_EICHD3_WORD5_B16_19DATA_MASK_WIDTH   (32U)
#define EIM_EICHD3_WORD5_B16_19DATA_MASK(x)      (((uint32_t)(((uint32_t)(x)) << EIM_EICHD3_WORD5_B16_19DATA_MASK_SHIFT)) & EIM_EICHD3_WORD5_B16_19DATA_MASK_MASK)
/*! @} */

/*! @name EICHD3_WORD6 - Error Injection Channel Descriptor n, Word6 */
/*! @{ */
#define EIM_EICHD3_WORD6_B20_23DATA_MASK_MASK    (0xFFFFFFFFU)
#define EIM_EICHD3_WORD6_B20_23DATA_MASK_SHIFT   (0U)
#define EIM_EICHD3_WORD6_B20_23DATA_MASK_WIDTH   (32U)
#define EIM_EICHD3_WORD6_B20_23DATA_MASK(x)      (((uint32_t)(((uint32_t)(x)) << EIM_EICHD3_WORD6_B20_23DATA_MASK_SHIFT)) & EIM_EICHD3_WORD6_B20_23DATA_MASK_MASK)
/*! @} */

/*! @name EICHD3_WORD7 - Error Injection Channel Descriptor n, Word7 */
/*! @{ */
#define EIM_EICHD3_WORD7_B24_27DATA_MASK_MASK    (0xFFFFFFFFU)
#define EIM_EICHD3_WORD7_B24_27DATA_MASK_SHIFT   (0U)
#define EIM_EICHD3_WORD7_B24_27DATA_MASK_WIDTH   (32U)
#define EIM_EICHD3_WORD7_B24_27DATA_MASK(x)      (((uint32_t)(((uint32_t)(x)) << EIM_EICHD3_WORD7_B24_27DATA_MASK_SHIFT)) & EIM_EICHD3_WORD7_B24_27DATA_MASK_MASK)
/*! @} */

/*! @name EICHD3_WORD8 - Error Injection Channel Descriptor n, Word8 */
/*! @{ */
#define EIM_EICHD3_WORD8_B28_31DATA_MASK_MASK    (0xFFFFFFFFU)
#define EIM_EICHD3_WORD8_B28_31DATA_MASK_SHIFT   (0U)
#define EIM_EICHD3_WORD8_B28_31DATA_MASK_WIDTH   (32U)
#define EIM_EICHD3_WORD8_B28_31DATA_MASK(x)      (((uint32_t)(((uint32_t)(x)) << EIM_EICHD3_WORD8_B28_31DATA_MASK_SHIFT)) & EIM_EICHD3_WORD8_B28_31DATA_MASK_MASK)
/*! @} */

/*! @name EICHD4_WORD0 - Error Injection Channel Descriptor n, Word0 */
/*! @{ */
#define EIM_EICHD4_WORD0_CHKBIT_MASK_MASK        (0xFFFFFFFFU)  /* Merged from fields with different position or width, of widths (7, 8, 10, 20, 32), largest definition used */
#define EIM_EICHD4_WORD0_CHKBIT_MASK_SHIFT       (0U)
#define EIM_EICHD4_WORD0_CHKBIT_MASK_WIDTH       (32U)
#define EIM_EICHD4_WORD0_CHKBIT_MASK(x)          (((uint32_t)(((uint32_t)(x)) << EIM_EICHD4_WORD0_CHKBIT_MASK_SHIFT)) & EIM_EICHD4_WORD0_CHKBIT_MASK_MASK)  /* Merged from fields with different position or width, of widths (7, 8, 10, 20, 32), largest definition used */
/*! @} */

/*! @name EICHD4_WORD1 - Error Injection Channel Descriptor n, Word1 */
/*! @{ */
#define EIM_EICHD4_WORD1_B0_3DATA_MASK_MASK      (0xFFFFFFFFU)  /* Merged from fields with different position or width, of widths (8, 16, 32), largest definition used */
#define EIM_EICHD4_WORD1_B0_3DATA_MASK_SHIFT     (0U)
#define EIM_EICHD4_WORD1_B0_3DATA_MASK_WIDTH     (32U)
#define EIM_EICHD4_WORD1_B0_3DATA_MASK(x)        (((uint32_t)(((uint32_t)(x)) << EIM_EICHD4_WORD1_B0_3DATA_MASK_SHIFT)) & EIM_EICHD4_WORD1_B0_3DATA_MASK_MASK)  /* Merged from fields with different position or width, of widths (8, 16, 32), largest definition used */
/*! @} */

/*! @name EICHD4_WORD2 - Error Injection Channel Descriptor n, Word2 */
/*! @{ */
#define EIM_EICHD4_WORD2_B4_7DATA_MASK_MASK      (0xFFFFFFFFU)
#define EIM_EICHD4_WORD2_B4_7DATA_MASK_SHIFT     (0U)
#define EIM_EICHD4_WORD2_B4_7DATA_MASK_WIDTH     (32U)
#define EIM_EICHD4_WORD2_B4_7DATA_MASK(x)        (((uint32_t)(((uint32_t)(x)) << EIM_EICHD4_WORD2_B4_7DATA_MASK_SHIFT)) & EIM_EICHD4_WORD2_B4_7DATA_MASK_MASK)
/*! @} */

/*! @name EICHD4_WORD3 - Error Injection Channel Descriptor n, Word3 */
/*! @{ */
#define EIM_EICHD4_WORD3_B8_11DATA_MASK_MASK     (0xFFFFFFFFU)
#define EIM_EICHD4_WORD3_B8_11DATA_MASK_SHIFT    (0U)
#define EIM_EICHD4_WORD3_B8_11DATA_MASK_WIDTH    (32U)
#define EIM_EICHD4_WORD3_B8_11DATA_MASK(x)       (((uint32_t)(((uint32_t)(x)) << EIM_EICHD4_WORD3_B8_11DATA_MASK_SHIFT)) & EIM_EICHD4_WORD3_B8_11DATA_MASK_MASK)
/*! @} */

/*! @name EICHD4_WORD4 - Error Injection Channel Descriptor n, Word4 */
/*! @{ */
#define EIM_EICHD4_WORD4_B12_15DATA_MASK_MASK    (0xFFFFFFFFU)
#define EIM_EICHD4_WORD4_B12_15DATA_MASK_SHIFT   (0U)
#define EIM_EICHD4_WORD4_B12_15DATA_MASK_WIDTH   (32U)
#define EIM_EICHD4_WORD4_B12_15DATA_MASK(x)      (((uint32_t)(((uint32_t)(x)) << EIM_EICHD4_WORD4_B12_15DATA_MASK_SHIFT)) & EIM_EICHD4_WORD4_B12_15DATA_MASK_MASK)
/*! @} */

/*! @name EICHD4_WORD5 - Error Injection Channel Descriptor n, Word5 */
/*! @{ */
#define EIM_EICHD4_WORD5_B16_19DATA_MASK_MASK    (0xFFFFFFFFU)
#define EIM_EICHD4_WORD5_B16_19DATA_MASK_SHIFT   (0U)
#define EIM_EICHD4_WORD5_B16_19DATA_MASK_WIDTH   (32U)
#define EIM_EICHD4_WORD5_B16_19DATA_MASK(x)      (((uint32_t)(((uint32_t)(x)) << EIM_EICHD4_WORD5_B16_19DATA_MASK_SHIFT)) & EIM_EICHD4_WORD5_B16_19DATA_MASK_MASK)
/*! @} */

/*! @name EICHD4_WORD6 - Error Injection Channel Descriptor n, Word6 */
/*! @{ */
#define EIM_EICHD4_WORD6_B20_23DATA_MASK_MASK    (0xFFFFFFFFU)
#define EIM_EICHD4_WORD6_B20_23DATA_MASK_SHIFT   (0U)
#define EIM_EICHD4_WORD6_B20_23DATA_MASK_WIDTH   (32U)
#define EIM_EICHD4_WORD6_B20_23DATA_MASK(x)      (((uint32_t)(((uint32_t)(x)) << EIM_EICHD4_WORD6_B20_23DATA_MASK_SHIFT)) & EIM_EICHD4_WORD6_B20_23DATA_MASK_MASK)
/*! @} */

/*! @name EICHD4_WORD7 - Error Injection Channel Descriptor n, Word7 */
/*! @{ */
#define EIM_EICHD4_WORD7_B24_27DATA_MASK_MASK    (0xFFFFFFFFU)
#define EIM_EICHD4_WORD7_B24_27DATA_MASK_SHIFT   (0U)
#define EIM_EICHD4_WORD7_B24_27DATA_MASK_WIDTH   (32U)
#define EIM_EICHD4_WORD7_B24_27DATA_MASK(x)      (((uint32_t)(((uint32_t)(x)) << EIM_EICHD4_WORD7_B24_27DATA_MASK_SHIFT)) & EIM_EICHD4_WORD7_B24_27DATA_MASK_MASK)
/*! @} */

/*! @name EICHD4_WORD8 - Error Injection Channel Descriptor n, Word8 */
/*! @{ */
#define EIM_EICHD4_WORD8_B28_31DATA_MASK_MASK    (0xFFFFFFFFU)
#define EIM_EICHD4_WORD8_B28_31DATA_MASK_SHIFT   (0U)
#define EIM_EICHD4_WORD8_B28_31DATA_MASK_WIDTH   (32U)
#define EIM_EICHD4_WORD8_B28_31DATA_MASK(x)      (((uint32_t)(((uint32_t)(x)) << EIM_EICHD4_WORD8_B28_31DATA_MASK_SHIFT)) & EIM_EICHD4_WORD8_B28_31DATA_MASK_MASK)
/*! @} */

/*! @name EICHD5_WORD0 - Error Injection Channel Descriptor n, Word0 */
/*! @{ */
#define EIM_EICHD5_WORD0_CHKBIT_MASK_MASK        (0xFFFFFFFFU)  /* Merged from fields with different position or width, of widths (7, 8, 20, 32), largest definition used */
#define EIM_EICHD5_WORD0_CHKBIT_MASK_SHIFT       (0U)
#define EIM_EICHD5_WORD0_CHKBIT_MASK_WIDTH       (32U)
#define EIM_EICHD5_WORD0_CHKBIT_MASK(x)          (((uint32_t)(((uint32_t)(x)) << EIM_EICHD5_WORD0_CHKBIT_MASK_SHIFT)) & EIM_EICHD5_WORD0_CHKBIT_MASK_MASK)  /* Merged from fields with different position or width, of widths (7, 8, 20, 32), largest definition used */
/*! @} */

/*! @name EICHD5_WORD1 - Error Injection Channel Descriptor n, Word1 */
/*! @{ */
#define EIM_EICHD5_WORD1_B0_3DATA_MASK_MASK      (0xFFFFFFFFU)  /* Merged from fields with different position or width, of widths (7, 8, 32), largest definition used */
#define EIM_EICHD5_WORD1_B0_3DATA_MASK_SHIFT     (0U)
#define EIM_EICHD5_WORD1_B0_3DATA_MASK_WIDTH     (32U)
#define EIM_EICHD5_WORD1_B0_3DATA_MASK(x)        (((uint32_t)(((uint32_t)(x)) << EIM_EICHD5_WORD1_B0_3DATA_MASK_SHIFT)) & EIM_EICHD5_WORD1_B0_3DATA_MASK_MASK)  /* Merged from fields with different position or width, of widths (7, 8, 32), largest definition used */
/*! @} */

/*! @name EICHD5_WORD2 - Error Injection Channel Descriptor n, Word2 */
/*! @{ */
#define EIM_EICHD5_WORD2_B4_7DATA_MASK_MASK      (0xFFFFFFFFU)
#define EIM_EICHD5_WORD2_B4_7DATA_MASK_SHIFT     (0U)
#define EIM_EICHD5_WORD2_B4_7DATA_MASK_WIDTH     (32U)
#define EIM_EICHD5_WORD2_B4_7DATA_MASK(x)        (((uint32_t)(((uint32_t)(x)) << EIM_EICHD5_WORD2_B4_7DATA_MASK_SHIFT)) & EIM_EICHD5_WORD2_B4_7DATA_MASK_MASK)
/*! @} */

/*! @name EICHD5_WORD3 - Error Injection Channel Descriptor n, Word3 */
/*! @{ */
#define EIM_EICHD5_WORD3_B8_11DATA_MASK_MASK     (0xFFFFFFFFU)
#define EIM_EICHD5_WORD3_B8_11DATA_MASK_SHIFT    (0U)
#define EIM_EICHD5_WORD3_B8_11DATA_MASK_WIDTH    (32U)
#define EIM_EICHD5_WORD3_B8_11DATA_MASK(x)       (((uint32_t)(((uint32_t)(x)) << EIM_EICHD5_WORD3_B8_11DATA_MASK_SHIFT)) & EIM_EICHD5_WORD3_B8_11DATA_MASK_MASK)
/*! @} */

/*! @name EICHD5_WORD4 - Error Injection Channel Descriptor n, Word4 */
/*! @{ */
#define EIM_EICHD5_WORD4_B12_15DATA_MASK_MASK    (0xFFFFFFFFU)
#define EIM_EICHD5_WORD4_B12_15DATA_MASK_SHIFT   (0U)
#define EIM_EICHD5_WORD4_B12_15DATA_MASK_WIDTH   (32U)
#define EIM_EICHD5_WORD4_B12_15DATA_MASK(x)      (((uint32_t)(((uint32_t)(x)) << EIM_EICHD5_WORD4_B12_15DATA_MASK_SHIFT)) & EIM_EICHD5_WORD4_B12_15DATA_MASK_MASK)
/*! @} */

/*! @name EICHD5_WORD5 - Error Injection Channel Descriptor n, Word5 */
/*! @{ */
#define EIM_EICHD5_WORD5_B16_19DATA_MASK_MASK    (0xFFFFFFFFU)
#define EIM_EICHD5_WORD5_B16_19DATA_MASK_SHIFT   (0U)
#define EIM_EICHD5_WORD5_B16_19DATA_MASK_WIDTH   (32U)
#define EIM_EICHD5_WORD5_B16_19DATA_MASK(x)      (((uint32_t)(((uint32_t)(x)) << EIM_EICHD5_WORD5_B16_19DATA_MASK_SHIFT)) & EIM_EICHD5_WORD5_B16_19DATA_MASK_MASK)
/*! @} */

/*! @name EICHD5_WORD6 - Error Injection Channel Descriptor n, Word6 */
/*! @{ */
#define EIM_EICHD5_WORD6_B20_23DATA_MASK_MASK    (0xFFFFFFFFU)
#define EIM_EICHD5_WORD6_B20_23DATA_MASK_SHIFT   (0U)
#define EIM_EICHD5_WORD6_B20_23DATA_MASK_WIDTH   (32U)
#define EIM_EICHD5_WORD6_B20_23DATA_MASK(x)      (((uint32_t)(((uint32_t)(x)) << EIM_EICHD5_WORD6_B20_23DATA_MASK_SHIFT)) & EIM_EICHD5_WORD6_B20_23DATA_MASK_MASK)
/*! @} */

/*! @name EICHD5_WORD7 - Error Injection Channel Descriptor n, Word7 */
/*! @{ */
#define EIM_EICHD5_WORD7_B24_27DATA_MASK_MASK    (0xFFFFFFFFU)
#define EIM_EICHD5_WORD7_B24_27DATA_MASK_SHIFT   (0U)
#define EIM_EICHD5_WORD7_B24_27DATA_MASK_WIDTH   (32U)
#define EIM_EICHD5_WORD7_B24_27DATA_MASK(x)      (((uint32_t)(((uint32_t)(x)) << EIM_EICHD5_WORD7_B24_27DATA_MASK_SHIFT)) & EIM_EICHD5_WORD7_B24_27DATA_MASK_MASK)
/*! @} */

/*! @name EICHD5_WORD8 - Error Injection Channel Descriptor n, Word8 */
/*! @{ */
#define EIM_EICHD5_WORD8_B28_31DATA_MASK_MASK    (0xFFFFFFFFU)
#define EIM_EICHD5_WORD8_B28_31DATA_MASK_SHIFT   (0U)
#define EIM_EICHD5_WORD8_B28_31DATA_MASK_WIDTH   (32U)
#define EIM_EICHD5_WORD8_B28_31DATA_MASK(x)      (((uint32_t)(((uint32_t)(x)) << EIM_EICHD5_WORD8_B28_31DATA_MASK_SHIFT)) & EIM_EICHD5_WORD8_B28_31DATA_MASK_MASK)
/*! @} */

/*! @name EICHD6_WORD0 - Error Injection Channel Descriptor n, Word0 */
/*! @{ */
#define EIM_EICHD6_WORD0_CHKBIT_MASK_MASK        (0xFFFFFFFFU)  /* Merged from fields with different position or width, of widths (7, 8, 20, 30, 32), largest definition used */
#define EIM_EICHD6_WORD0_CHKBIT_MASK_SHIFT       (0U)
#define EIM_EICHD6_WORD0_CHKBIT_MASK_WIDTH       (32U)
#define EIM_EICHD6_WORD0_CHKBIT_MASK(x)          (((uint32_t)(((uint32_t)(x)) << EIM_EICHD6_WORD0_CHKBIT_MASK_SHIFT)) & EIM_EICHD6_WORD0_CHKBIT_MASK_MASK)  /* Merged from fields with different position or width, of widths (7, 8, 20, 30, 32), largest definition used */
/*! @} */

/*! @name EICHD6_WORD1 - Error Injection Channel Descriptor n, Word1 */
/*! @{ */
#define EIM_EICHD6_WORD1_B0_3DATA_MASK_MASK      (0xFFFFFFFFU)  /* Merged from fields with different position or width, of widths (8, 16, 23, 32), largest definition used */
#define EIM_EICHD6_WORD1_B0_3DATA_MASK_SHIFT     (0U)
#define EIM_EICHD6_WORD1_B0_3DATA_MASK_WIDTH     (32U)
#define EIM_EICHD6_WORD1_B0_3DATA_MASK(x)        (((uint32_t)(((uint32_t)(x)) << EIM_EICHD6_WORD1_B0_3DATA_MASK_SHIFT)) & EIM_EICHD6_WORD1_B0_3DATA_MASK_MASK)  /* Merged from fields with different position or width, of widths (8, 16, 23, 32), largest definition used */
/*! @} */

/*! @name EICHD6_WORD2 - Error Injection Channel Descriptor n, Word2 */
/*! @{ */
#define EIM_EICHD6_WORD2_B4_7DATA_MASK_MASK      (0xFFFFFFFFU)
#define EIM_EICHD6_WORD2_B4_7DATA_MASK_SHIFT     (0U)
#define EIM_EICHD6_WORD2_B4_7DATA_MASK_WIDTH     (32U)
#define EIM_EICHD6_WORD2_B4_7DATA_MASK(x)        (((uint32_t)(((uint32_t)(x)) << EIM_EICHD6_WORD2_B4_7DATA_MASK_SHIFT)) & EIM_EICHD6_WORD2_B4_7DATA_MASK_MASK)
/*! @} */

/*! @name EICHD6_WORD3 - Error Injection Channel Descriptor n, Word3 */
/*! @{ */
#define EIM_EICHD6_WORD3_B8_11DATA_MASK_MASK     (0xFFFFFFFFU)
#define EIM_EICHD6_WORD3_B8_11DATA_MASK_SHIFT    (0U)
#define EIM_EICHD6_WORD3_B8_11DATA_MASK_WIDTH    (32U)
#define EIM_EICHD6_WORD3_B8_11DATA_MASK(x)       (((uint32_t)(((uint32_t)(x)) << EIM_EICHD6_WORD3_B8_11DATA_MASK_SHIFT)) & EIM_EICHD6_WORD3_B8_11DATA_MASK_MASK)
/*! @} */

/*! @name EICHD6_WORD4 - Error Injection Channel Descriptor n, Word4 */
/*! @{ */
#define EIM_EICHD6_WORD4_B12_15DATA_MASK_MASK    (0xFFFFFFFFU)
#define EIM_EICHD6_WORD4_B12_15DATA_MASK_SHIFT   (0U)
#define EIM_EICHD6_WORD4_B12_15DATA_MASK_WIDTH   (32U)
#define EIM_EICHD6_WORD4_B12_15DATA_MASK(x)      (((uint32_t)(((uint32_t)(x)) << EIM_EICHD6_WORD4_B12_15DATA_MASK_SHIFT)) & EIM_EICHD6_WORD4_B12_15DATA_MASK_MASK)
/*! @} */

/*! @name EICHD6_WORD5 - Error Injection Channel Descriptor n, Word5 */
/*! @{ */
#define EIM_EICHD6_WORD5_B16_19DATA_MASK_MASK    (0xFFFFFFFFU)
#define EIM_EICHD6_WORD5_B16_19DATA_MASK_SHIFT   (0U)
#define EIM_EICHD6_WORD5_B16_19DATA_MASK_WIDTH   (32U)
#define EIM_EICHD6_WORD5_B16_19DATA_MASK(x)      (((uint32_t)(((uint32_t)(x)) << EIM_EICHD6_WORD5_B16_19DATA_MASK_SHIFT)) & EIM_EICHD6_WORD5_B16_19DATA_MASK_MASK)
/*! @} */

/*! @name EICHD6_WORD6 - Error Injection Channel Descriptor n, Word6 */
/*! @{ */
#define EIM_EICHD6_WORD6_B20_23DATA_MASK_MASK    (0xFFFFFFFFU)
#define EIM_EICHD6_WORD6_B20_23DATA_MASK_SHIFT   (0U)
#define EIM_EICHD6_WORD6_B20_23DATA_MASK_WIDTH   (32U)
#define EIM_EICHD6_WORD6_B20_23DATA_MASK(x)      (((uint32_t)(((uint32_t)(x)) << EIM_EICHD6_WORD6_B20_23DATA_MASK_SHIFT)) & EIM_EICHD6_WORD6_B20_23DATA_MASK_MASK)
/*! @} */

/*! @name EICHD6_WORD7 - Error Injection Channel Descriptor n, Word7 */
/*! @{ */
#define EIM_EICHD6_WORD7_B24_27DATA_MASK_MASK    (0xFFFFFFFFU)
#define EIM_EICHD6_WORD7_B24_27DATA_MASK_SHIFT   (0U)
#define EIM_EICHD6_WORD7_B24_27DATA_MASK_WIDTH   (32U)
#define EIM_EICHD6_WORD7_B24_27DATA_MASK(x)      (((uint32_t)(((uint32_t)(x)) << EIM_EICHD6_WORD7_B24_27DATA_MASK_SHIFT)) & EIM_EICHD6_WORD7_B24_27DATA_MASK_MASK)
/*! @} */

/*! @name EICHD6_WORD8 - Error Injection Channel Descriptor n, Word8 */
/*! @{ */
#define EIM_EICHD6_WORD8_B28_31DATA_MASK_MASK    (0xFFFFFFFFU)
#define EIM_EICHD6_WORD8_B28_31DATA_MASK_SHIFT   (0U)
#define EIM_EICHD6_WORD8_B28_31DATA_MASK_WIDTH   (32U)
#define EIM_EICHD6_WORD8_B28_31DATA_MASK(x)      (((uint32_t)(((uint32_t)(x)) << EIM_EICHD6_WORD8_B28_31DATA_MASK_SHIFT)) & EIM_EICHD6_WORD8_B28_31DATA_MASK_MASK)
/*! @} */

/*! @name EICHD7_WORD0 - Error Injection Channel Descriptor n, Word0 */
/*! @{ */
#define EIM_EICHD7_WORD0_CHKBIT_MASK_MASK        (0xFFFFFFFFU)  /* Merged from fields with different position or width, of widths (7, 8, 10, 32), largest definition used */
#define EIM_EICHD7_WORD0_CHKBIT_MASK_SHIFT       (0U)
#define EIM_EICHD7_WORD0_CHKBIT_MASK_WIDTH       (32U)
#define EIM_EICHD7_WORD0_CHKBIT_MASK(x)          (((uint32_t)(((uint32_t)(x)) << EIM_EICHD7_WORD0_CHKBIT_MASK_SHIFT)) & EIM_EICHD7_WORD0_CHKBIT_MASK_MASK)  /* Merged from fields with different position or width, of widths (7, 8, 10, 32), largest definition used */
/*! @} */

/*! @name EICHD7_WORD1 - Error Injection Channel Descriptor n, Word1 */
/*! @{ */
#define EIM_EICHD7_WORD1_B0_3DATA_MASK_MASK      (0xFFFFFFFFU)  /* Merged from fields with different position or width, of widths (8, 16, 32), largest definition used */
#define EIM_EICHD7_WORD1_B0_3DATA_MASK_SHIFT     (0U)
#define EIM_EICHD7_WORD1_B0_3DATA_MASK_WIDTH     (32U)
#define EIM_EICHD7_WORD1_B0_3DATA_MASK(x)        (((uint32_t)(((uint32_t)(x)) << EIM_EICHD7_WORD1_B0_3DATA_MASK_SHIFT)) & EIM_EICHD7_WORD1_B0_3DATA_MASK_MASK)  /* Merged from fields with different position or width, of widths (8, 16, 32), largest definition used */
/*! @} */

/*! @name EICHD7_WORD2 - Error Injection Channel Descriptor n, Word2 */
/*! @{ */
#define EIM_EICHD7_WORD2_B4_7DATA_MASK_MASK      (0xFFFFFFFFU)
#define EIM_EICHD7_WORD2_B4_7DATA_MASK_SHIFT     (0U)
#define EIM_EICHD7_WORD2_B4_7DATA_MASK_WIDTH     (32U)
#define EIM_EICHD7_WORD2_B4_7DATA_MASK(x)        (((uint32_t)(((uint32_t)(x)) << EIM_EICHD7_WORD2_B4_7DATA_MASK_SHIFT)) & EIM_EICHD7_WORD2_B4_7DATA_MASK_MASK)
/*! @} */

/*! @name EICHD7_WORD3 - Error Injection Channel Descriptor n, Word3 */
/*! @{ */
#define EIM_EICHD7_WORD3_B8_11DATA_MASK_MASK     (0xFFFFFFFFU)
#define EIM_EICHD7_WORD3_B8_11DATA_MASK_SHIFT    (0U)
#define EIM_EICHD7_WORD3_B8_11DATA_MASK_WIDTH    (32U)
#define EIM_EICHD7_WORD3_B8_11DATA_MASK(x)       (((uint32_t)(((uint32_t)(x)) << EIM_EICHD7_WORD3_B8_11DATA_MASK_SHIFT)) & EIM_EICHD7_WORD3_B8_11DATA_MASK_MASK)
/*! @} */

/*! @name EICHD7_WORD4 - Error Injection Channel Descriptor n, Word4 */
/*! @{ */
#define EIM_EICHD7_WORD4_B12_15DATA_MASK_MASK    (0xFFFFFFFFU)
#define EIM_EICHD7_WORD4_B12_15DATA_MASK_SHIFT   (0U)
#define EIM_EICHD7_WORD4_B12_15DATA_MASK_WIDTH   (32U)
#define EIM_EICHD7_WORD4_B12_15DATA_MASK(x)      (((uint32_t)(((uint32_t)(x)) << EIM_EICHD7_WORD4_B12_15DATA_MASK_SHIFT)) & EIM_EICHD7_WORD4_B12_15DATA_MASK_MASK)
/*! @} */

/*! @name EICHD7_WORD5 - Error Injection Channel Descriptor n, Word5 */
/*! @{ */
#define EIM_EICHD7_WORD5_B16_19DATA_MASK_MASK    (0xFFFFFFFFU)
#define EIM_EICHD7_WORD5_B16_19DATA_MASK_SHIFT   (0U)
#define EIM_EICHD7_WORD5_B16_19DATA_MASK_WIDTH   (32U)
#define EIM_EICHD7_WORD5_B16_19DATA_MASK(x)      (((uint32_t)(((uint32_t)(x)) << EIM_EICHD7_WORD5_B16_19DATA_MASK_SHIFT)) & EIM_EICHD7_WORD5_B16_19DATA_MASK_MASK)
/*! @} */

/*! @name EICHD7_WORD6 - Error Injection Channel Descriptor n, Word6 */
/*! @{ */
#define EIM_EICHD7_WORD6_B20_23DATA_MASK_MASK    (0xFFFFFFFFU)
#define EIM_EICHD7_WORD6_B20_23DATA_MASK_SHIFT   (0U)
#define EIM_EICHD7_WORD6_B20_23DATA_MASK_WIDTH   (32U)
#define EIM_EICHD7_WORD6_B20_23DATA_MASK(x)      (((uint32_t)(((uint32_t)(x)) << EIM_EICHD7_WORD6_B20_23DATA_MASK_SHIFT)) & EIM_EICHD7_WORD6_B20_23DATA_MASK_MASK)
/*! @} */

/*! @name EICHD7_WORD7 - Error Injection Channel Descriptor n, Word7 */
/*! @{ */
#define EIM_EICHD7_WORD7_B24_27DATA_MASK_MASK    (0xFFFFFFFFU)
#define EIM_EICHD7_WORD7_B24_27DATA_MASK_SHIFT   (0U)
#define EIM_EICHD7_WORD7_B24_27DATA_MASK_WIDTH   (32U)
#define EIM_EICHD7_WORD7_B24_27DATA_MASK(x)      (((uint32_t)(((uint32_t)(x)) << EIM_EICHD7_WORD7_B24_27DATA_MASK_SHIFT)) & EIM_EICHD7_WORD7_B24_27DATA_MASK_MASK)
/*! @} */

/*! @name EICHD7_WORD8 - Error Injection Channel Descriptor n, Word8 */
/*! @{ */
#define EIM_EICHD7_WORD8_B28_31DATA_MASK_MASK    (0xFFFFFFFFU)
#define EIM_EICHD7_WORD8_B28_31DATA_MASK_SHIFT   (0U)
#define EIM_EICHD7_WORD8_B28_31DATA_MASK_WIDTH   (32U)
#define EIM_EICHD7_WORD8_B28_31DATA_MASK(x)      (((uint32_t)(((uint32_t)(x)) << EIM_EICHD7_WORD8_B28_31DATA_MASK_SHIFT)) & EIM_EICHD7_WORD8_B28_31DATA_MASK_MASK)
/*! @} */

/*! @name EICHD8_WORD0 - Error Injection Channel Descriptor n, Word0 */
/*! @{ */
#define EIM_EICHD8_WORD0_CHKBIT_MASK_MASK        (0xFFFFFFFCU)  /* Merged from fields with different position or width, of widths (8, 20, 30), largest definition used */
#define EIM_EICHD8_WORD0_CHKBIT_MASK_SHIFT       (2U)
#define EIM_EICHD8_WORD0_CHKBIT_MASK_WIDTH       (30U)
#define EIM_EICHD8_WORD0_CHKBIT_MASK(x)          (((uint32_t)(((uint32_t)(x)) << EIM_EICHD8_WORD0_CHKBIT_MASK_SHIFT)) & EIM_EICHD8_WORD0_CHKBIT_MASK_MASK)  /* Merged from fields with different position or width, of widths (8, 20, 30), largest definition used */
/*! @} */

/*! @name EICHD8_WORD1 - Error Injection Channel Descriptor n, Word1 */
/*! @{ */
#define EIM_EICHD8_WORD1_B0_3DATA_MASK_MASK      (0xFFFFFFFFU)  /* Merged from fields with different position or width, of widths (8, 16, 32), largest definition used */
#define EIM_EICHD8_WORD1_B0_3DATA_MASK_SHIFT     (0U)
#define EIM_EICHD8_WORD1_B0_3DATA_MASK_WIDTH     (32U)
#define EIM_EICHD8_WORD1_B0_3DATA_MASK(x)        (((uint32_t)(((uint32_t)(x)) << EIM_EICHD8_WORD1_B0_3DATA_MASK_SHIFT)) & EIM_EICHD8_WORD1_B0_3DATA_MASK_MASK)  /* Merged from fields with different position or width, of widths (8, 16, 32), largest definition used */
/*! @} */

/*! @name EICHD8_WORD2 - Error Injection Channel Descriptor n, Word2 */
/*! @{ */
#define EIM_EICHD8_WORD2_B4_7DATA_MASK_MASK      (0xFFFFFFFFU)
#define EIM_EICHD8_WORD2_B4_7DATA_MASK_SHIFT     (0U)
#define EIM_EICHD8_WORD2_B4_7DATA_MASK_WIDTH     (32U)
#define EIM_EICHD8_WORD2_B4_7DATA_MASK(x)        (((uint32_t)(((uint32_t)(x)) << EIM_EICHD8_WORD2_B4_7DATA_MASK_SHIFT)) & EIM_EICHD8_WORD2_B4_7DATA_MASK_MASK)
/*! @} */

/*! @name EICHD8_WORD3 - Error Injection Channel Descriptor n, Word3 */
/*! @{ */
#define EIM_EICHD8_WORD3_B8_11DATA_MASK_MASK     (0xFFFFFFFFU)
#define EIM_EICHD8_WORD3_B8_11DATA_MASK_SHIFT    (0U)
#define EIM_EICHD8_WORD3_B8_11DATA_MASK_WIDTH    (32U)
#define EIM_EICHD8_WORD3_B8_11DATA_MASK(x)       (((uint32_t)(((uint32_t)(x)) << EIM_EICHD8_WORD3_B8_11DATA_MASK_SHIFT)) & EIM_EICHD8_WORD3_B8_11DATA_MASK_MASK)
/*! @} */

/*! @name EICHD8_WORD4 - Error Injection Channel Descriptor n, Word4 */
/*! @{ */
#define EIM_EICHD8_WORD4_B12_15DATA_MASK_MASK    (0xFFFFFFFFU)
#define EIM_EICHD8_WORD4_B12_15DATA_MASK_SHIFT   (0U)
#define EIM_EICHD8_WORD4_B12_15DATA_MASK_WIDTH   (32U)
#define EIM_EICHD8_WORD4_B12_15DATA_MASK(x)      (((uint32_t)(((uint32_t)(x)) << EIM_EICHD8_WORD4_B12_15DATA_MASK_SHIFT)) & EIM_EICHD8_WORD4_B12_15DATA_MASK_MASK)
/*! @} */

/*! @name EICHD8_WORD5 - Error Injection Channel Descriptor n, Word5 */
/*! @{ */
#define EIM_EICHD8_WORD5_B16_19DATA_MASK_MASK    (0xFFFFFFFFU)
#define EIM_EICHD8_WORD5_B16_19DATA_MASK_SHIFT   (0U)
#define EIM_EICHD8_WORD5_B16_19DATA_MASK_WIDTH   (32U)
#define EIM_EICHD8_WORD5_B16_19DATA_MASK(x)      (((uint32_t)(((uint32_t)(x)) << EIM_EICHD8_WORD5_B16_19DATA_MASK_SHIFT)) & EIM_EICHD8_WORD5_B16_19DATA_MASK_MASK)
/*! @} */

/*! @name EICHD8_WORD6 - Error Injection Channel Descriptor n, Word6 */
/*! @{ */
#define EIM_EICHD8_WORD6_B20_23DATA_MASK_MASK    (0xFFFFFFFFU)
#define EIM_EICHD8_WORD6_B20_23DATA_MASK_SHIFT   (0U)
#define EIM_EICHD8_WORD6_B20_23DATA_MASK_WIDTH   (32U)
#define EIM_EICHD8_WORD6_B20_23DATA_MASK(x)      (((uint32_t)(((uint32_t)(x)) << EIM_EICHD8_WORD6_B20_23DATA_MASK_SHIFT)) & EIM_EICHD8_WORD6_B20_23DATA_MASK_MASK)
/*! @} */

/*! @name EICHD8_WORD7 - Error Injection Channel Descriptor n, Word7 */
/*! @{ */
#define EIM_EICHD8_WORD7_B24_27DATA_MASK_MASK    (0xFFFFFFFFU)
#define EIM_EICHD8_WORD7_B24_27DATA_MASK_SHIFT   (0U)
#define EIM_EICHD8_WORD7_B24_27DATA_MASK_WIDTH   (32U)
#define EIM_EICHD8_WORD7_B24_27DATA_MASK(x)      (((uint32_t)(((uint32_t)(x)) << EIM_EICHD8_WORD7_B24_27DATA_MASK_SHIFT)) & EIM_EICHD8_WORD7_B24_27DATA_MASK_MASK)
/*! @} */

/*! @name EICHD8_WORD8 - Error Injection Channel Descriptor n, Word8 */
/*! @{ */
#define EIM_EICHD8_WORD8_B28_31DATA_MASK_MASK    (0xFFFFFFFFU)
#define EIM_EICHD8_WORD8_B28_31DATA_MASK_SHIFT   (0U)
#define EIM_EICHD8_WORD8_B28_31DATA_MASK_WIDTH   (32U)
#define EIM_EICHD8_WORD8_B28_31DATA_MASK(x)      (((uint32_t)(((uint32_t)(x)) << EIM_EICHD8_WORD8_B28_31DATA_MASK_SHIFT)) & EIM_EICHD8_WORD8_B28_31DATA_MASK_MASK)
/*! @} */

/*! @name EICHD9_WORD0 - Error Injection Channel Descriptor n, Word0 */
/*! @{ */
#define EIM_EICHD9_WORD0_CHKBIT_MASK_MASK        (0xFFFFF000U)  /* Merged from fields with different position or width, of widths (7, 8, 10, 20), largest definition used */
#define EIM_EICHD9_WORD0_CHKBIT_MASK_SHIFT       (12U)
#define EIM_EICHD9_WORD0_CHKBIT_MASK_WIDTH       (20U)
#define EIM_EICHD9_WORD0_CHKBIT_MASK(x)          (((uint32_t)(((uint32_t)(x)) << EIM_EICHD9_WORD0_CHKBIT_MASK_SHIFT)) & EIM_EICHD9_WORD0_CHKBIT_MASK_MASK)  /* Merged from fields with different position or width, of widths (7, 8, 10, 20), largest definition used */
/*! @} */

/*! @name EICHD9_WORD1 - Error Injection Channel Descriptor n, Word1 */
/*! @{ */
#define EIM_EICHD9_WORD1_B0_3DATA_MASK_MASK      (0xFFFFFFFFU)  /* Merged from fields with different position or width, of widths (14, 16, 32), largest definition used */
#define EIM_EICHD9_WORD1_B0_3DATA_MASK_SHIFT     (0U)
#define EIM_EICHD9_WORD1_B0_3DATA_MASK_WIDTH     (32U)
#define EIM_EICHD9_WORD1_B0_3DATA_MASK(x)        (((uint32_t)(((uint32_t)(x)) << EIM_EICHD9_WORD1_B0_3DATA_MASK_SHIFT)) & EIM_EICHD9_WORD1_B0_3DATA_MASK_MASK)  /* Merged from fields with different position or width, of widths (14, 16, 32), largest definition used */
/*! @} */

/*! @name EICHD9_WORD2 - Error Injection Channel Descriptor n, Word2 */
/*! @{ */
#define EIM_EICHD9_WORD2_B4_7DATA_MASK_MASK      (0xFFFFFFFFU)
#define EIM_EICHD9_WORD2_B4_7DATA_MASK_SHIFT     (0U)
#define EIM_EICHD9_WORD2_B4_7DATA_MASK_WIDTH     (32U)
#define EIM_EICHD9_WORD2_B4_7DATA_MASK(x)        (((uint32_t)(((uint32_t)(x)) << EIM_EICHD9_WORD2_B4_7DATA_MASK_SHIFT)) & EIM_EICHD9_WORD2_B4_7DATA_MASK_MASK)
/*! @} */

/*! @name EICHD9_WORD3 - Error Injection Channel Descriptor n, Word3 */
/*! @{ */
#define EIM_EICHD9_WORD3_B8_11DATA_MASK_MASK     (0xFFFFFFFFU)
#define EIM_EICHD9_WORD3_B8_11DATA_MASK_SHIFT    (0U)
#define EIM_EICHD9_WORD3_B8_11DATA_MASK_WIDTH    (32U)
#define EIM_EICHD9_WORD3_B8_11DATA_MASK(x)       (((uint32_t)(((uint32_t)(x)) << EIM_EICHD9_WORD3_B8_11DATA_MASK_SHIFT)) & EIM_EICHD9_WORD3_B8_11DATA_MASK_MASK)
/*! @} */

/*! @name EICHD9_WORD4 - Error Injection Channel Descriptor n, Word4 */
/*! @{ */
#define EIM_EICHD9_WORD4_B12_15DATA_MASK_MASK    (0xFFFFFFFFU)
#define EIM_EICHD9_WORD4_B12_15DATA_MASK_SHIFT   (0U)
#define EIM_EICHD9_WORD4_B12_15DATA_MASK_WIDTH   (32U)
#define EIM_EICHD9_WORD4_B12_15DATA_MASK(x)      (((uint32_t)(((uint32_t)(x)) << EIM_EICHD9_WORD4_B12_15DATA_MASK_SHIFT)) & EIM_EICHD9_WORD4_B12_15DATA_MASK_MASK)
/*! @} */

/*! @name EICHD9_WORD5 - Error Injection Channel Descriptor n, Word5 */
/*! @{ */
#define EIM_EICHD9_WORD5_B16_19DATA_MASK_MASK    (0xFFFFFFFFU)
#define EIM_EICHD9_WORD5_B16_19DATA_MASK_SHIFT   (0U)
#define EIM_EICHD9_WORD5_B16_19DATA_MASK_WIDTH   (32U)
#define EIM_EICHD9_WORD5_B16_19DATA_MASK(x)      (((uint32_t)(((uint32_t)(x)) << EIM_EICHD9_WORD5_B16_19DATA_MASK_SHIFT)) & EIM_EICHD9_WORD5_B16_19DATA_MASK_MASK)
/*! @} */

/*! @name EICHD9_WORD6 - Error Injection Channel Descriptor n, Word6 */
/*! @{ */
#define EIM_EICHD9_WORD6_B20_23DATA_MASK_MASK    (0xFFFFFFFFU)
#define EIM_EICHD9_WORD6_B20_23DATA_MASK_SHIFT   (0U)
#define EIM_EICHD9_WORD6_B20_23DATA_MASK_WIDTH   (32U)
#define EIM_EICHD9_WORD6_B20_23DATA_MASK(x)      (((uint32_t)(((uint32_t)(x)) << EIM_EICHD9_WORD6_B20_23DATA_MASK_SHIFT)) & EIM_EICHD9_WORD6_B20_23DATA_MASK_MASK)
/*! @} */

/*! @name EICHD9_WORD7 - Error Injection Channel Descriptor n, Word7 */
/*! @{ */
#define EIM_EICHD9_WORD7_B24_27DATA_MASK_MASK    (0xFFFFFFFFU)
#define EIM_EICHD9_WORD7_B24_27DATA_MASK_SHIFT   (0U)
#define EIM_EICHD9_WORD7_B24_27DATA_MASK_WIDTH   (32U)
#define EIM_EICHD9_WORD7_B24_27DATA_MASK(x)      (((uint32_t)(((uint32_t)(x)) << EIM_EICHD9_WORD7_B24_27DATA_MASK_SHIFT)) & EIM_EICHD9_WORD7_B24_27DATA_MASK_MASK)
/*! @} */

/*! @name EICHD9_WORD8 - Error Injection Channel Descriptor n, Word8 */
/*! @{ */
#define EIM_EICHD9_WORD8_B28_31DATA_MASK_MASK    (0xFFFFFFFFU)
#define EIM_EICHD9_WORD8_B28_31DATA_MASK_SHIFT   (0U)
#define EIM_EICHD9_WORD8_B28_31DATA_MASK_WIDTH   (32U)
#define EIM_EICHD9_WORD8_B28_31DATA_MASK(x)      (((uint32_t)(((uint32_t)(x)) << EIM_EICHD9_WORD8_B28_31DATA_MASK_SHIFT)) & EIM_EICHD9_WORD8_B28_31DATA_MASK_MASK)
/*! @} */

/*! @name EICHD10_WORD0 - Error Injection Channel Descriptor n, Word0 */
/*! @{ */
#define EIM_EICHD10_WORD0_CHKBIT_MASK_MASK       (0xFFFFFFFFU)  /* Merged from fields with different position or width, of widths (7, 8, 16, 20, 32), largest definition used */
#define EIM_EICHD10_WORD0_CHKBIT_MASK_SHIFT      (0U)
#define EIM_EICHD10_WORD0_CHKBIT_MASK_WIDTH      (32U)
#define EIM_EICHD10_WORD0_CHKBIT_MASK(x)         (((uint32_t)(((uint32_t)(x)) << EIM_EICHD10_WORD0_CHKBIT_MASK_SHIFT)) & EIM_EICHD10_WORD0_CHKBIT_MASK_MASK)  /* Merged from fields with different position or width, of widths (7, 8, 16, 20, 32), largest definition used */
/*! @} */

/*! @name EICHD10_WORD1 - Error Injection Channel Descriptor n, Word1 */
/*! @{ */
#define EIM_EICHD10_WORD1_B0_3DATA_MASK_MASK     (0xFFFFFFFFU)  /* Merged from fields with different position or width, of widths (8, 22, 32), largest definition used */
#define EIM_EICHD10_WORD1_B0_3DATA_MASK_SHIFT    (0U)
#define EIM_EICHD10_WORD1_B0_3DATA_MASK_WIDTH    (32U)
#define EIM_EICHD10_WORD1_B0_3DATA_MASK(x)       (((uint32_t)(((uint32_t)(x)) << EIM_EICHD10_WORD1_B0_3DATA_MASK_SHIFT)) & EIM_EICHD10_WORD1_B0_3DATA_MASK_MASK)  /* Merged from fields with different position or width, of widths (8, 22, 32), largest definition used */
/*! @} */

/*! @name EICHD10_WORD2 - Error Injection Channel Descriptor n, Word2 */
/*! @{ */
#define EIM_EICHD10_WORD2_B4_7DATA_MASK_MASK     (0xFFFFFFFFU)
#define EIM_EICHD10_WORD2_B4_7DATA_MASK_SHIFT    (0U)
#define EIM_EICHD10_WORD2_B4_7DATA_MASK_WIDTH    (32U)
#define EIM_EICHD10_WORD2_B4_7DATA_MASK(x)       (((uint32_t)(((uint32_t)(x)) << EIM_EICHD10_WORD2_B4_7DATA_MASK_SHIFT)) & EIM_EICHD10_WORD2_B4_7DATA_MASK_MASK)
/*! @} */

/*! @name EICHD10_WORD3 - Error Injection Channel Descriptor n, Word3 */
/*! @{ */
#define EIM_EICHD10_WORD3_B8_11DATA_MASK_MASK    (0xFFFFFFFFU)
#define EIM_EICHD10_WORD3_B8_11DATA_MASK_SHIFT   (0U)
#define EIM_EICHD10_WORD3_B8_11DATA_MASK_WIDTH   (32U)
#define EIM_EICHD10_WORD3_B8_11DATA_MASK(x)      (((uint32_t)(((uint32_t)(x)) << EIM_EICHD10_WORD3_B8_11DATA_MASK_SHIFT)) & EIM_EICHD10_WORD3_B8_11DATA_MASK_MASK)
/*! @} */

/*! @name EICHD10_WORD4 - Error Injection Channel Descriptor n, Word4 */
/*! @{ */
#define EIM_EICHD10_WORD4_B12_15DATA_MASK_MASK   (0xFFFFFFFFU)
#define EIM_EICHD10_WORD4_B12_15DATA_MASK_SHIFT  (0U)
#define EIM_EICHD10_WORD4_B12_15DATA_MASK_WIDTH  (32U)
#define EIM_EICHD10_WORD4_B12_15DATA_MASK(x)     (((uint32_t)(((uint32_t)(x)) << EIM_EICHD10_WORD4_B12_15DATA_MASK_SHIFT)) & EIM_EICHD10_WORD4_B12_15DATA_MASK_MASK)
/*! @} */

/*! @name EICHD10_WORD5 - Error Injection Channel Descriptor n, Word5 */
/*! @{ */
#define EIM_EICHD10_WORD5_B16_19DATA_MASK_MASK   (0xFFFFFFFFU)
#define EIM_EICHD10_WORD5_B16_19DATA_MASK_SHIFT  (0U)
#define EIM_EICHD10_WORD5_B16_19DATA_MASK_WIDTH  (32U)
#define EIM_EICHD10_WORD5_B16_19DATA_MASK(x)     (((uint32_t)(((uint32_t)(x)) << EIM_EICHD10_WORD5_B16_19DATA_MASK_SHIFT)) & EIM_EICHD10_WORD5_B16_19DATA_MASK_MASK)
/*! @} */

/*! @name EICHD10_WORD6 - Error Injection Channel Descriptor n, Word6 */
/*! @{ */
#define EIM_EICHD10_WORD6_B20_23DATA_MASK_MASK   (0xFFFFFFFFU)
#define EIM_EICHD10_WORD6_B20_23DATA_MASK_SHIFT  (0U)
#define EIM_EICHD10_WORD6_B20_23DATA_MASK_WIDTH  (32U)
#define EIM_EICHD10_WORD6_B20_23DATA_MASK(x)     (((uint32_t)(((uint32_t)(x)) << EIM_EICHD10_WORD6_B20_23DATA_MASK_SHIFT)) & EIM_EICHD10_WORD6_B20_23DATA_MASK_MASK)
/*! @} */

/*! @name EICHD10_WORD7 - Error Injection Channel Descriptor n, Word7 */
/*! @{ */
#define EIM_EICHD10_WORD7_B24_27DATA_MASK_MASK   (0xFFFFFFFFU)
#define EIM_EICHD10_WORD7_B24_27DATA_MASK_SHIFT  (0U)
#define EIM_EICHD10_WORD7_B24_27DATA_MASK_WIDTH  (32U)
#define EIM_EICHD10_WORD7_B24_27DATA_MASK(x)     (((uint32_t)(((uint32_t)(x)) << EIM_EICHD10_WORD7_B24_27DATA_MASK_SHIFT)) & EIM_EICHD10_WORD7_B24_27DATA_MASK_MASK)
/*! @} */

/*! @name EICHD10_WORD8 - Error Injection Channel Descriptor n, Word8 */
/*! @{ */
#define EIM_EICHD10_WORD8_B28_31DATA_MASK_MASK   (0xFFFFFFFFU)
#define EIM_EICHD10_WORD8_B28_31DATA_MASK_SHIFT  (0U)
#define EIM_EICHD10_WORD8_B28_31DATA_MASK_WIDTH  (32U)
#define EIM_EICHD10_WORD8_B28_31DATA_MASK(x)     (((uint32_t)(((uint32_t)(x)) << EIM_EICHD10_WORD8_B28_31DATA_MASK_SHIFT)) & EIM_EICHD10_WORD8_B28_31DATA_MASK_MASK)
/*! @} */

/*! @name EICHD11_WORD0 - Error Injection Channel Descriptor n, Word0 */
/*! @{ */
#define EIM_EICHD11_WORD0_CHKBIT_MASK_MASK       (0xFFFFF000U)  /* Merged from fields with different position or width, of widths (8, 14, 20), largest definition used */
#define EIM_EICHD11_WORD0_CHKBIT_MASK_SHIFT      (12U)
#define EIM_EICHD11_WORD0_CHKBIT_MASK_WIDTH      (20U)
#define EIM_EICHD11_WORD0_CHKBIT_MASK(x)         (((uint32_t)(((uint32_t)(x)) << EIM_EICHD11_WORD0_CHKBIT_MASK_SHIFT)) & EIM_EICHD11_WORD0_CHKBIT_MASK_MASK)  /* Merged from fields with different position or width, of widths (8, 14, 20), largest definition used */
/*! @} */

/*! @name EICHD11_WORD1 - Error Injection Channel Descriptor n, Word1 */
/*! @{ */
#define EIM_EICHD11_WORD1_B0_3DATA_MASK_MASK     (0xFFFFFFFFU)  /* Merged from fields with different position or width, of widths (8, 12, 22, 32), largest definition used */
#define EIM_EICHD11_WORD1_B0_3DATA_MASK_SHIFT    (0U)
#define EIM_EICHD11_WORD1_B0_3DATA_MASK_WIDTH    (32U)
#define EIM_EICHD11_WORD1_B0_3DATA_MASK(x)       (((uint32_t)(((uint32_t)(x)) << EIM_EICHD11_WORD1_B0_3DATA_MASK_SHIFT)) & EIM_EICHD11_WORD1_B0_3DATA_MASK_MASK)  /* Merged from fields with different position or width, of widths (8, 12, 22, 32), largest definition used */
/*! @} */

/*! @name EICHD11_WORD2 - Error Injection Channel Descriptor n, Word2 */
/*! @{ */
#define EIM_EICHD11_WORD2_B4_7DATA_MASK_MASK     (0xFFFFFFFFU)
#define EIM_EICHD11_WORD2_B4_7DATA_MASK_SHIFT    (0U)
#define EIM_EICHD11_WORD2_B4_7DATA_MASK_WIDTH    (32U)
#define EIM_EICHD11_WORD2_B4_7DATA_MASK(x)       (((uint32_t)(((uint32_t)(x)) << EIM_EICHD11_WORD2_B4_7DATA_MASK_SHIFT)) & EIM_EICHD11_WORD2_B4_7DATA_MASK_MASK)
/*! @} */

/*! @name EICHD11_WORD3 - Error Injection Channel Descriptor n, Word3 */
/*! @{ */
#define EIM_EICHD11_WORD3_B8_11DATA_MASK_MASK    (0xFFFFFFFFU)
#define EIM_EICHD11_WORD3_B8_11DATA_MASK_SHIFT   (0U)
#define EIM_EICHD11_WORD3_B8_11DATA_MASK_WIDTH   (32U)
#define EIM_EICHD11_WORD3_B8_11DATA_MASK(x)      (((uint32_t)(((uint32_t)(x)) << EIM_EICHD11_WORD3_B8_11DATA_MASK_SHIFT)) & EIM_EICHD11_WORD3_B8_11DATA_MASK_MASK)
/*! @} */

/*! @name EICHD11_WORD4 - Error Injection Channel Descriptor n, Word4 */
/*! @{ */
#define EIM_EICHD11_WORD4_B12_15DATA_MASK_MASK   (0xFFFFFFFFU)
#define EIM_EICHD11_WORD4_B12_15DATA_MASK_SHIFT  (0U)
#define EIM_EICHD11_WORD4_B12_15DATA_MASK_WIDTH  (32U)
#define EIM_EICHD11_WORD4_B12_15DATA_MASK(x)     (((uint32_t)(((uint32_t)(x)) << EIM_EICHD11_WORD4_B12_15DATA_MASK_SHIFT)) & EIM_EICHD11_WORD4_B12_15DATA_MASK_MASK)
/*! @} */

/*! @name EICHD11_WORD5 - Error Injection Channel Descriptor n, Word5 */
/*! @{ */
#define EIM_EICHD11_WORD5_B16_19DATA_MASK_MASK   (0xFFFFFFFFU)
#define EIM_EICHD11_WORD5_B16_19DATA_MASK_SHIFT  (0U)
#define EIM_EICHD11_WORD5_B16_19DATA_MASK_WIDTH  (32U)
#define EIM_EICHD11_WORD5_B16_19DATA_MASK(x)     (((uint32_t)(((uint32_t)(x)) << EIM_EICHD11_WORD5_B16_19DATA_MASK_SHIFT)) & EIM_EICHD11_WORD5_B16_19DATA_MASK_MASK)
/*! @} */

/*! @name EICHD11_WORD6 - Error Injection Channel Descriptor n, Word6 */
/*! @{ */
#define EIM_EICHD11_WORD6_B20_23DATA_MASK_MASK   (0xFFFFFFFFU)
#define EIM_EICHD11_WORD6_B20_23DATA_MASK_SHIFT  (0U)
#define EIM_EICHD11_WORD6_B20_23DATA_MASK_WIDTH  (32U)
#define EIM_EICHD11_WORD6_B20_23DATA_MASK(x)     (((uint32_t)(((uint32_t)(x)) << EIM_EICHD11_WORD6_B20_23DATA_MASK_SHIFT)) & EIM_EICHD11_WORD6_B20_23DATA_MASK_MASK)
/*! @} */

/*! @name EICHD11_WORD7 - Error Injection Channel Descriptor n, Word7 */
/*! @{ */
#define EIM_EICHD11_WORD7_B24_27DATA_MASK_MASK   (0xFFFFFFFFU)
#define EIM_EICHD11_WORD7_B24_27DATA_MASK_SHIFT  (0U)
#define EIM_EICHD11_WORD7_B24_27DATA_MASK_WIDTH  (32U)
#define EIM_EICHD11_WORD7_B24_27DATA_MASK(x)     (((uint32_t)(((uint32_t)(x)) << EIM_EICHD11_WORD7_B24_27DATA_MASK_SHIFT)) & EIM_EICHD11_WORD7_B24_27DATA_MASK_MASK)
/*! @} */

/*! @name EICHD11_WORD8 - Error Injection Channel Descriptor n, Word8 */
/*! @{ */
#define EIM_EICHD11_WORD8_B28_31DATA_MASK_MASK   (0xFFFFFFFFU)
#define EIM_EICHD11_WORD8_B28_31DATA_MASK_SHIFT  (0U)
#define EIM_EICHD11_WORD8_B28_31DATA_MASK_WIDTH  (32U)
#define EIM_EICHD11_WORD8_B28_31DATA_MASK(x)     (((uint32_t)(((uint32_t)(x)) << EIM_EICHD11_WORD8_B28_31DATA_MASK_SHIFT)) & EIM_EICHD11_WORD8_B28_31DATA_MASK_MASK)
/*! @} */

/*! @name EICHD12_WORD0 - Error Injection Channel Descriptor n, Word0 */
/*! @{ */
#define EIM_EICHD12_WORD0_CHKBIT_MASK_MASK       (0xFFFF0000U)  /* Merged from fields with different position or width, of widths (7, 8, 16), largest definition used */
#define EIM_EICHD12_WORD0_CHKBIT_MASK_SHIFT      (16U)
#define EIM_EICHD12_WORD0_CHKBIT_MASK_WIDTH      (16U)
#define EIM_EICHD12_WORD0_CHKBIT_MASK(x)         (((uint32_t)(((uint32_t)(x)) << EIM_EICHD12_WORD0_CHKBIT_MASK_SHIFT)) & EIM_EICHD12_WORD0_CHKBIT_MASK_MASK)  /* Merged from fields with different position or width, of widths (7, 8, 16), largest definition used */
/*! @} */

/*! @name EICHD12_WORD1 - Error Injection Channel Descriptor n, Word1 */
/*! @{ */
#define EIM_EICHD12_WORD1_B0_3DATA_MASK_MASK     (0xFFFFFFFFU)  /* Merged from fields with different position or width, of widths (16, 24, 32), largest definition used */
#define EIM_EICHD12_WORD1_B0_3DATA_MASK_SHIFT    (0U)
#define EIM_EICHD12_WORD1_B0_3DATA_MASK_WIDTH    (32U)
#define EIM_EICHD12_WORD1_B0_3DATA_MASK(x)       (((uint32_t)(((uint32_t)(x)) << EIM_EICHD12_WORD1_B0_3DATA_MASK_SHIFT)) & EIM_EICHD12_WORD1_B0_3DATA_MASK_MASK)  /* Merged from fields with different position or width, of widths (16, 24, 32), largest definition used */
/*! @} */

/*! @name EICHD12_WORD2 - Error Injection Channel Descriptor n, Word2 */
/*! @{ */
#define EIM_EICHD12_WORD2_B4_7DATA_MASK_MASK     (0xFFFFFFFFU)
#define EIM_EICHD12_WORD2_B4_7DATA_MASK_SHIFT    (0U)
#define EIM_EICHD12_WORD2_B4_7DATA_MASK_WIDTH    (32U)
#define EIM_EICHD12_WORD2_B4_7DATA_MASK(x)       (((uint32_t)(((uint32_t)(x)) << EIM_EICHD12_WORD2_B4_7DATA_MASK_SHIFT)) & EIM_EICHD12_WORD2_B4_7DATA_MASK_MASK)
/*! @} */

/*! @name EICHD12_WORD3 - Error Injection Channel Descriptor n, Word3 */
/*! @{ */
#define EIM_EICHD12_WORD3_B8_11DATA_MASK_MASK    (0xFFFFFFFFU)
#define EIM_EICHD12_WORD3_B8_11DATA_MASK_SHIFT   (0U)
#define EIM_EICHD12_WORD3_B8_11DATA_MASK_WIDTH   (32U)
#define EIM_EICHD12_WORD3_B8_11DATA_MASK(x)      (((uint32_t)(((uint32_t)(x)) << EIM_EICHD12_WORD3_B8_11DATA_MASK_SHIFT)) & EIM_EICHD12_WORD3_B8_11DATA_MASK_MASK)
/*! @} */

/*! @name EICHD12_WORD4 - Error Injection Channel Descriptor n, Word4 */
/*! @{ */
#define EIM_EICHD12_WORD4_B12_15DATA_MASK_MASK   (0xFFFFFFFFU)
#define EIM_EICHD12_WORD4_B12_15DATA_MASK_SHIFT  (0U)
#define EIM_EICHD12_WORD4_B12_15DATA_MASK_WIDTH  (32U)
#define EIM_EICHD12_WORD4_B12_15DATA_MASK(x)     (((uint32_t)(((uint32_t)(x)) << EIM_EICHD12_WORD4_B12_15DATA_MASK_SHIFT)) & EIM_EICHD12_WORD4_B12_15DATA_MASK_MASK)
/*! @} */

/*! @name EICHD12_WORD5 - Error Injection Channel Descriptor n, Word5 */
/*! @{ */
#define EIM_EICHD12_WORD5_B16_19DATA_MASK_MASK   (0xFFFFFFFFU)
#define EIM_EICHD12_WORD5_B16_19DATA_MASK_SHIFT  (0U)
#define EIM_EICHD12_WORD5_B16_19DATA_MASK_WIDTH  (32U)
#define EIM_EICHD12_WORD5_B16_19DATA_MASK(x)     (((uint32_t)(((uint32_t)(x)) << EIM_EICHD12_WORD5_B16_19DATA_MASK_SHIFT)) & EIM_EICHD12_WORD5_B16_19DATA_MASK_MASK)
/*! @} */

/*! @name EICHD12_WORD6 - Error Injection Channel Descriptor n, Word6 */
/*! @{ */
#define EIM_EICHD12_WORD6_B20_23DATA_MASK_MASK   (0xFFFFFFFFU)
#define EIM_EICHD12_WORD6_B20_23DATA_MASK_SHIFT  (0U)
#define EIM_EICHD12_WORD6_B20_23DATA_MASK_WIDTH  (32U)
#define EIM_EICHD12_WORD6_B20_23DATA_MASK(x)     (((uint32_t)(((uint32_t)(x)) << EIM_EICHD12_WORD6_B20_23DATA_MASK_SHIFT)) & EIM_EICHD12_WORD6_B20_23DATA_MASK_MASK)
/*! @} */

/*! @name EICHD12_WORD7 - Error Injection Channel Descriptor n, Word7 */
/*! @{ */
#define EIM_EICHD12_WORD7_B24_27DATA_MASK_MASK   (0xFFFFFFFFU)
#define EIM_EICHD12_WORD7_B24_27DATA_MASK_SHIFT  (0U)
#define EIM_EICHD12_WORD7_B24_27DATA_MASK_WIDTH  (32U)
#define EIM_EICHD12_WORD7_B24_27DATA_MASK(x)     (((uint32_t)(((uint32_t)(x)) << EIM_EICHD12_WORD7_B24_27DATA_MASK_SHIFT)) & EIM_EICHD12_WORD7_B24_27DATA_MASK_MASK)
/*! @} */

/*! @name EICHD12_WORD8 - Error Injection Channel Descriptor n, Word8 */
/*! @{ */
#define EIM_EICHD12_WORD8_B28_31DATA_MASK_MASK   (0xFFFFFFFFU)
#define EIM_EICHD12_WORD8_B28_31DATA_MASK_SHIFT  (0U)
#define EIM_EICHD12_WORD8_B28_31DATA_MASK_WIDTH  (32U)
#define EIM_EICHD12_WORD8_B28_31DATA_MASK(x)     (((uint32_t)(((uint32_t)(x)) << EIM_EICHD12_WORD8_B28_31DATA_MASK_SHIFT)) & EIM_EICHD12_WORD8_B28_31DATA_MASK_MASK)
/*! @} */

/*! @name EICHD13_WORD0 - Error Injection Channel Descriptor n, Word0 */
/*! @{ */
#define EIM_EICHD13_WORD0_CHKBIT_MASK_MASK       (0xFFFFFFFCU)  /* Merged from fields with different position or width, of widths (8, 16, 28, 30), largest definition used */
#define EIM_EICHD13_WORD0_CHKBIT_MASK_SHIFT      (2U)
#define EIM_EICHD13_WORD0_CHKBIT_MASK_WIDTH      (30U)
#define EIM_EICHD13_WORD0_CHKBIT_MASK(x)         (((uint32_t)(((uint32_t)(x)) << EIM_EICHD13_WORD0_CHKBIT_MASK_SHIFT)) & EIM_EICHD13_WORD0_CHKBIT_MASK_MASK)  /* Merged from fields with different position or width, of widths (8, 16, 28, 30), largest definition used */
/*! @} */

/*! @name EICHD13_WORD1 - Error Injection Channel Descriptor n, Word1 */
/*! @{ */
#define EIM_EICHD13_WORD1_B0_3DATA_MASK_MASK     (0xFFFFFFFFU)  /* Merged from fields with different position or width, of widths (8, 16, 22, 32), largest definition used */
#define EIM_EICHD13_WORD1_B0_3DATA_MASK_SHIFT    (0U)
#define EIM_EICHD13_WORD1_B0_3DATA_MASK_WIDTH    (32U)
#define EIM_EICHD13_WORD1_B0_3DATA_MASK(x)       (((uint32_t)(((uint32_t)(x)) << EIM_EICHD13_WORD1_B0_3DATA_MASK_SHIFT)) & EIM_EICHD13_WORD1_B0_3DATA_MASK_MASK)  /* Merged from fields with different position or width, of widths (8, 16, 22, 32), largest definition used */
/*! @} */

/*! @name EICHD13_WORD2 - Error Injection Channel Descriptor n, Word2 */
/*! @{ */
#define EIM_EICHD13_WORD2_B4_7DATA_MASK_MASK     (0xFFFFFFFFU)
#define EIM_EICHD13_WORD2_B4_7DATA_MASK_SHIFT    (0U)
#define EIM_EICHD13_WORD2_B4_7DATA_MASK_WIDTH    (32U)
#define EIM_EICHD13_WORD2_B4_7DATA_MASK(x)       (((uint32_t)(((uint32_t)(x)) << EIM_EICHD13_WORD2_B4_7DATA_MASK_SHIFT)) & EIM_EICHD13_WORD2_B4_7DATA_MASK_MASK)
/*! @} */

/*! @name EICHD13_WORD3 - Error Injection Channel Descriptor n, Word3 */
/*! @{ */
#define EIM_EICHD13_WORD3_B8_11DATA_MASK_MASK    (0xFFFFFFFFU)
#define EIM_EICHD13_WORD3_B8_11DATA_MASK_SHIFT   (0U)
#define EIM_EICHD13_WORD3_B8_11DATA_MASK_WIDTH   (32U)
#define EIM_EICHD13_WORD3_B8_11DATA_MASK(x)      (((uint32_t)(((uint32_t)(x)) << EIM_EICHD13_WORD3_B8_11DATA_MASK_SHIFT)) & EIM_EICHD13_WORD3_B8_11DATA_MASK_MASK)
/*! @} */

/*! @name EICHD13_WORD4 - Error Injection Channel Descriptor n, Word4 */
/*! @{ */
#define EIM_EICHD13_WORD4_B12_15DATA_MASK_MASK   (0xFFFFFFFFU)
#define EIM_EICHD13_WORD4_B12_15DATA_MASK_SHIFT  (0U)
#define EIM_EICHD13_WORD4_B12_15DATA_MASK_WIDTH  (32U)
#define EIM_EICHD13_WORD4_B12_15DATA_MASK(x)     (((uint32_t)(((uint32_t)(x)) << EIM_EICHD13_WORD4_B12_15DATA_MASK_SHIFT)) & EIM_EICHD13_WORD4_B12_15DATA_MASK_MASK)
/*! @} */

/*! @name EICHD13_WORD5 - Error Injection Channel Descriptor n, Word5 */
/*! @{ */
#define EIM_EICHD13_WORD5_B16_19DATA_MASK_MASK   (0xFFFFFFFFU)
#define EIM_EICHD13_WORD5_B16_19DATA_MASK_SHIFT  (0U)
#define EIM_EICHD13_WORD5_B16_19DATA_MASK_WIDTH  (32U)
#define EIM_EICHD13_WORD5_B16_19DATA_MASK(x)     (((uint32_t)(((uint32_t)(x)) << EIM_EICHD13_WORD5_B16_19DATA_MASK_SHIFT)) & EIM_EICHD13_WORD5_B16_19DATA_MASK_MASK)
/*! @} */

/*! @name EICHD13_WORD6 - Error Injection Channel Descriptor n, Word6 */
/*! @{ */
#define EIM_EICHD13_WORD6_B20_23DATA_MASK_MASK   (0xFFFFFFFFU)
#define EIM_EICHD13_WORD6_B20_23DATA_MASK_SHIFT  (0U)
#define EIM_EICHD13_WORD6_B20_23DATA_MASK_WIDTH  (32U)
#define EIM_EICHD13_WORD6_B20_23DATA_MASK(x)     (((uint32_t)(((uint32_t)(x)) << EIM_EICHD13_WORD6_B20_23DATA_MASK_SHIFT)) & EIM_EICHD13_WORD6_B20_23DATA_MASK_MASK)
/*! @} */

/*! @name EICHD13_WORD7 - Error Injection Channel Descriptor n, Word7 */
/*! @{ */
#define EIM_EICHD13_WORD7_B24_27DATA_MASK_MASK   (0xFFFFFFFFU)
#define EIM_EICHD13_WORD7_B24_27DATA_MASK_SHIFT  (0U)
#define EIM_EICHD13_WORD7_B24_27DATA_MASK_WIDTH  (32U)
#define EIM_EICHD13_WORD7_B24_27DATA_MASK(x)     (((uint32_t)(((uint32_t)(x)) << EIM_EICHD13_WORD7_B24_27DATA_MASK_SHIFT)) & EIM_EICHD13_WORD7_B24_27DATA_MASK_MASK)
/*! @} */

/*! @name EICHD13_WORD8 - Error Injection Channel Descriptor n, Word8 */
/*! @{ */
#define EIM_EICHD13_WORD8_B28_31DATA_MASK_MASK   (0xFFFFFFFFU)
#define EIM_EICHD13_WORD8_B28_31DATA_MASK_SHIFT  (0U)
#define EIM_EICHD13_WORD8_B28_31DATA_MASK_WIDTH  (32U)
#define EIM_EICHD13_WORD8_B28_31DATA_MASK(x)     (((uint32_t)(((uint32_t)(x)) << EIM_EICHD13_WORD8_B28_31DATA_MASK_SHIFT)) & EIM_EICHD13_WORD8_B28_31DATA_MASK_MASK)
/*! @} */

/*! @name EICHD14_WORD0 - Error Injection Channel Descriptor n, Word0 */
/*! @{ */
#define EIM_EICHD14_WORD0_CHKBIT_MASK_MASK       (0xFFFFFFF0U)  /* Merged from fields with different position or width, of widths (7, 8, 10, 16, 28), largest definition used */
#define EIM_EICHD14_WORD0_CHKBIT_MASK_SHIFT      (4U)
#define EIM_EICHD14_WORD0_CHKBIT_MASK_WIDTH      (28U)
#define EIM_EICHD14_WORD0_CHKBIT_MASK(x)         (((uint32_t)(((uint32_t)(x)) << EIM_EICHD14_WORD0_CHKBIT_MASK_SHIFT)) & EIM_EICHD14_WORD0_CHKBIT_MASK_MASK)  /* Merged from fields with different position or width, of widths (7, 8, 10, 16, 28), largest definition used */
/*! @} */

/*! @name EICHD14_WORD1 - Error Injection Channel Descriptor n, Word1 */
/*! @{ */
#define EIM_EICHD14_WORD1_B0_3DATA_MASK_MASK     (0xFFFFFFFFU)  /* Merged from fields with different position or width, of widths (4, 8, 16, 22, 32), largest definition used */
#define EIM_EICHD14_WORD1_B0_3DATA_MASK_SHIFT    (0U)
#define EIM_EICHD14_WORD1_B0_3DATA_MASK_WIDTH    (32U)
#define EIM_EICHD14_WORD1_B0_3DATA_MASK(x)       (((uint32_t)(((uint32_t)(x)) << EIM_EICHD14_WORD1_B0_3DATA_MASK_SHIFT)) & EIM_EICHD14_WORD1_B0_3DATA_MASK_MASK)  /* Merged from fields with different position or width, of widths (4, 8, 16, 22, 32), largest definition used */
/*! @} */

/*! @name EICHD14_WORD2 - Error Injection Channel Descriptor n, Word2 */
/*! @{ */
#define EIM_EICHD14_WORD2_B4_7DATA_MASK_MASK     (0xFFFFFFFFU)
#define EIM_EICHD14_WORD2_B4_7DATA_MASK_SHIFT    (0U)
#define EIM_EICHD14_WORD2_B4_7DATA_MASK_WIDTH    (32U)
#define EIM_EICHD14_WORD2_B4_7DATA_MASK(x)       (((uint32_t)(((uint32_t)(x)) << EIM_EICHD14_WORD2_B4_7DATA_MASK_SHIFT)) & EIM_EICHD14_WORD2_B4_7DATA_MASK_MASK)
/*! @} */

/*! @name EICHD14_WORD3 - Error Injection Channel Descriptor n, Word3 */
/*! @{ */
#define EIM_EICHD14_WORD3_B8_11DATA_MASK_MASK    (0xFFFFFFFFU)
#define EIM_EICHD14_WORD3_B8_11DATA_MASK_SHIFT   (0U)
#define EIM_EICHD14_WORD3_B8_11DATA_MASK_WIDTH   (32U)
#define EIM_EICHD14_WORD3_B8_11DATA_MASK(x)      (((uint32_t)(((uint32_t)(x)) << EIM_EICHD14_WORD3_B8_11DATA_MASK_SHIFT)) & EIM_EICHD14_WORD3_B8_11DATA_MASK_MASK)
/*! @} */

/*! @name EICHD14_WORD4 - Error Injection Channel Descriptor n, Word4 */
/*! @{ */
#define EIM_EICHD14_WORD4_B12_15DATA_MASK_MASK   (0xFFFFFFFFU)
#define EIM_EICHD14_WORD4_B12_15DATA_MASK_SHIFT  (0U)
#define EIM_EICHD14_WORD4_B12_15DATA_MASK_WIDTH  (32U)
#define EIM_EICHD14_WORD4_B12_15DATA_MASK(x)     (((uint32_t)(((uint32_t)(x)) << EIM_EICHD14_WORD4_B12_15DATA_MASK_SHIFT)) & EIM_EICHD14_WORD4_B12_15DATA_MASK_MASK)
/*! @} */

/*! @name EICHD14_WORD5 - Error Injection Channel Descriptor n, Word5 */
/*! @{ */
#define EIM_EICHD14_WORD5_B16_19DATA_MASK_MASK   (0xFFFFFFFFU)
#define EIM_EICHD14_WORD5_B16_19DATA_MASK_SHIFT  (0U)
#define EIM_EICHD14_WORD5_B16_19DATA_MASK_WIDTH  (32U)
#define EIM_EICHD14_WORD5_B16_19DATA_MASK(x)     (((uint32_t)(((uint32_t)(x)) << EIM_EICHD14_WORD5_B16_19DATA_MASK_SHIFT)) & EIM_EICHD14_WORD5_B16_19DATA_MASK_MASK)
/*! @} */

/*! @name EICHD14_WORD6 - Error Injection Channel Descriptor n, Word6 */
/*! @{ */
#define EIM_EICHD14_WORD6_B20_23DATA_MASK_MASK   (0xFFFFFFFFU)
#define EIM_EICHD14_WORD6_B20_23DATA_MASK_SHIFT  (0U)
#define EIM_EICHD14_WORD6_B20_23DATA_MASK_WIDTH  (32U)
#define EIM_EICHD14_WORD6_B20_23DATA_MASK(x)     (((uint32_t)(((uint32_t)(x)) << EIM_EICHD14_WORD6_B20_23DATA_MASK_SHIFT)) & EIM_EICHD14_WORD6_B20_23DATA_MASK_MASK)
/*! @} */

/*! @name EICHD14_WORD7 - Error Injection Channel Descriptor n, Word7 */
/*! @{ */
#define EIM_EICHD14_WORD7_B24_27DATA_MASK_MASK   (0xFFFFFFFFU)
#define EIM_EICHD14_WORD7_B24_27DATA_MASK_SHIFT  (0U)
#define EIM_EICHD14_WORD7_B24_27DATA_MASK_WIDTH  (32U)
#define EIM_EICHD14_WORD7_B24_27DATA_MASK(x)     (((uint32_t)(((uint32_t)(x)) << EIM_EICHD14_WORD7_B24_27DATA_MASK_SHIFT)) & EIM_EICHD14_WORD7_B24_27DATA_MASK_MASK)
/*! @} */

/*! @name EICHD14_WORD8 - Error Injection Channel Descriptor n, Word8 */
/*! @{ */
#define EIM_EICHD14_WORD8_B28_31DATA_MASK_MASK   (0xFFFFFFFFU)
#define EIM_EICHD14_WORD8_B28_31DATA_MASK_SHIFT  (0U)
#define EIM_EICHD14_WORD8_B28_31DATA_MASK_WIDTH  (32U)
#define EIM_EICHD14_WORD8_B28_31DATA_MASK(x)     (((uint32_t)(((uint32_t)(x)) << EIM_EICHD14_WORD8_B28_31DATA_MASK_SHIFT)) & EIM_EICHD14_WORD8_B28_31DATA_MASK_MASK)
/*! @} */

/*! @name EICHD15_WORD0 - Error Injection Channel Descriptor n, Word0 */
/*! @{ */
#define EIM_EICHD15_WORD0_CHKBIT_MASK_MASK       (0xFFFFFFF0U)  /* Merged from fields with different position or width, of widths (8, 20, 28), largest definition used */
#define EIM_EICHD15_WORD0_CHKBIT_MASK_SHIFT      (4U)
#define EIM_EICHD15_WORD0_CHKBIT_MASK_WIDTH      (28U)
#define EIM_EICHD15_WORD0_CHKBIT_MASK(x)         (((uint32_t)(((uint32_t)(x)) << EIM_EICHD15_WORD0_CHKBIT_MASK_SHIFT)) & EIM_EICHD15_WORD0_CHKBIT_MASK_MASK)  /* Merged from fields with different position or width, of widths (8, 20, 28), largest definition used */
/*! @} */

/*! @name EICHD15_WORD1 - Error Injection Channel Descriptor n, Word1 */
/*! @{ */
#define EIM_EICHD15_WORD1_B0_3DATA_MASK_MASK     (0xFFFFFFFFU)  /* Merged from fields with different position or width, of widths (15, 16, 32), largest definition used */
#define EIM_EICHD15_WORD1_B0_3DATA_MASK_SHIFT    (0U)
#define EIM_EICHD15_WORD1_B0_3DATA_MASK_WIDTH    (32U)
#define EIM_EICHD15_WORD1_B0_3DATA_MASK(x)       (((uint32_t)(((uint32_t)(x)) << EIM_EICHD15_WORD1_B0_3DATA_MASK_SHIFT)) & EIM_EICHD15_WORD1_B0_3DATA_MASK_MASK)  /* Merged from fields with different position or width, of widths (15, 16, 32), largest definition used */
/*! @} */

/*! @name EICHD15_WORD2 - Error Injection Channel Descriptor n, Word2 */
/*! @{ */
#define EIM_EICHD15_WORD2_B4_7DATA_MASK_MASK     (0xFFFFFFFFU)
#define EIM_EICHD15_WORD2_B4_7DATA_MASK_SHIFT    (0U)
#define EIM_EICHD15_WORD2_B4_7DATA_MASK_WIDTH    (32U)
#define EIM_EICHD15_WORD2_B4_7DATA_MASK(x)       (((uint32_t)(((uint32_t)(x)) << EIM_EICHD15_WORD2_B4_7DATA_MASK_SHIFT)) & EIM_EICHD15_WORD2_B4_7DATA_MASK_MASK)
/*! @} */

/*! @name EICHD15_WORD3 - Error Injection Channel Descriptor n, Word3 */
/*! @{ */
#define EIM_EICHD15_WORD3_B8_11DATA_MASK_MASK    (0xFFFFFFFFU)
#define EIM_EICHD15_WORD3_B8_11DATA_MASK_SHIFT   (0U)
#define EIM_EICHD15_WORD3_B8_11DATA_MASK_WIDTH   (32U)
#define EIM_EICHD15_WORD3_B8_11DATA_MASK(x)      (((uint32_t)(((uint32_t)(x)) << EIM_EICHD15_WORD3_B8_11DATA_MASK_SHIFT)) & EIM_EICHD15_WORD3_B8_11DATA_MASK_MASK)
/*! @} */

/*! @name EICHD15_WORD4 - Error Injection Channel Descriptor n, Word4 */
/*! @{ */
#define EIM_EICHD15_WORD4_B12_15DATA_MASK_MASK   (0xFFFFFFFFU)
#define EIM_EICHD15_WORD4_B12_15DATA_MASK_SHIFT  (0U)
#define EIM_EICHD15_WORD4_B12_15DATA_MASK_WIDTH  (32U)
#define EIM_EICHD15_WORD4_B12_15DATA_MASK(x)     (((uint32_t)(((uint32_t)(x)) << EIM_EICHD15_WORD4_B12_15DATA_MASK_SHIFT)) & EIM_EICHD15_WORD4_B12_15DATA_MASK_MASK)
/*! @} */

/*! @name EICHD16_WORD0 - Error Injection Channel Descriptor n, Word0 */
/*! @{ */
#define EIM_EICHD16_WORD0_CHKBIT_MASK_MASK       (0xFFFFF000U)  /* Merged from fields with different position or width, of widths (7, 8, 16, 20), largest definition used */
#define EIM_EICHD16_WORD0_CHKBIT_MASK_SHIFT      (12U)
#define EIM_EICHD16_WORD0_CHKBIT_MASK_WIDTH      (20U)
#define EIM_EICHD16_WORD0_CHKBIT_MASK(x)         (((uint32_t)(((uint32_t)(x)) << EIM_EICHD16_WORD0_CHKBIT_MASK_SHIFT)) & EIM_EICHD16_WORD0_CHKBIT_MASK_MASK)  /* Merged from fields with different position or width, of widths (7, 8, 16, 20), largest definition used */
/*! @} */

/*! @name EICHD16_WORD1 - Error Injection Channel Descriptor n, Word1 */
/*! @{ */
#define EIM_EICHD16_WORD1_B0_3DATA_MASK_MASK     (0xFFFFFFFFU)  /* Merged from fields with different position or width, of widths (16, 32), largest definition used */
#define EIM_EICHD16_WORD1_B0_3DATA_MASK_SHIFT    (0U)
#define EIM_EICHD16_WORD1_B0_3DATA_MASK_WIDTH    (32U)
#define EIM_EICHD16_WORD1_B0_3DATA_MASK(x)       (((uint32_t)(((uint32_t)(x)) << EIM_EICHD16_WORD1_B0_3DATA_MASK_SHIFT)) & EIM_EICHD16_WORD1_B0_3DATA_MASK_MASK)  /* Merged from fields with different position or width, of widths (16, 32), largest definition used */
/*! @} */

/*! @name EICHD16_WORD2 - Error Injection Channel Descriptor n, Word2 */
/*! @{ */
#define EIM_EICHD16_WORD2_B4_7DATA_MASK_MASK     (0xFFFFFFFFU)
#define EIM_EICHD16_WORD2_B4_7DATA_MASK_SHIFT    (0U)
#define EIM_EICHD16_WORD2_B4_7DATA_MASK_WIDTH    (32U)
#define EIM_EICHD16_WORD2_B4_7DATA_MASK(x)       (((uint32_t)(((uint32_t)(x)) << EIM_EICHD16_WORD2_B4_7DATA_MASK_SHIFT)) & EIM_EICHD16_WORD2_B4_7DATA_MASK_MASK)
/*! @} */

/*! @name EICHD17_WORD0 - Error Injection Channel Descriptor n, Word0 */
/*! @{ */
#define EIM_EICHD17_WORD0_CHKBIT_MASK_MASK       (0xFFFC0000U)  /* Merged from fields with different position or width, of widths (7, 8, 14), largest definition used */
#define EIM_EICHD17_WORD0_CHKBIT_MASK_SHIFT      (18U)
#define EIM_EICHD17_WORD0_CHKBIT_MASK_WIDTH      (14U)
#define EIM_EICHD17_WORD0_CHKBIT_MASK(x)         (((uint32_t)(((uint32_t)(x)) << EIM_EICHD17_WORD0_CHKBIT_MASK_SHIFT)) & EIM_EICHD17_WORD0_CHKBIT_MASK_MASK)  /* Merged from fields with different position or width, of widths (7, 8, 14), largest definition used */
/*! @} */

/*! @name EICHD17_WORD1 - Error Injection Channel Descriptor n, Word1 */
/*! @{ */
#define EIM_EICHD17_WORD1_B0_3DATA_MASK_MASK     (0xFFFFFFFFU)  /* Merged from fields with different position or width, of widths (12, 32), largest definition used */
#define EIM_EICHD17_WORD1_B0_3DATA_MASK_SHIFT    (0U)
#define EIM_EICHD17_WORD1_B0_3DATA_MASK_WIDTH    (32U)
#define EIM_EICHD17_WORD1_B0_3DATA_MASK(x)       (((uint32_t)(((uint32_t)(x)) << EIM_EICHD17_WORD1_B0_3DATA_MASK_SHIFT)) & EIM_EICHD17_WORD1_B0_3DATA_MASK_MASK)  /* Merged from fields with different position or width, of widths (12, 32), largest definition used */
/*! @} */

/*! @name EICHD17_WORD2 - Error Injection Channel Descriptor n, Word2 */
/*! @{ */
#define EIM_EICHD17_WORD2_B4_7DATA_MASK_MASK     (0xFFFFFFFFU)
#define EIM_EICHD17_WORD2_B4_7DATA_MASK_SHIFT    (0U)
#define EIM_EICHD17_WORD2_B4_7DATA_MASK_WIDTH    (32U)
#define EIM_EICHD17_WORD2_B4_7DATA_MASK(x)       (((uint32_t)(((uint32_t)(x)) << EIM_EICHD17_WORD2_B4_7DATA_MASK_SHIFT)) & EIM_EICHD17_WORD2_B4_7DATA_MASK_MASK)
/*! @} */

/*! @name EICHD18_WORD0 - Error Injection Channel Descriptor n, Word0 */
/*! @{ */
#define EIM_EICHD18_WORD0_CHKBIT_MASK_MASK       (0xFFFFFFFCU)  /* Merged from fields with different position or width, of widths (7, 8, 16, 30), largest definition used */
#define EIM_EICHD18_WORD0_CHKBIT_MASK_SHIFT      (2U)
#define EIM_EICHD18_WORD0_CHKBIT_MASK_WIDTH      (30U)
#define EIM_EICHD18_WORD0_CHKBIT_MASK(x)         (((uint32_t)(((uint32_t)(x)) << EIM_EICHD18_WORD0_CHKBIT_MASK_SHIFT)) & EIM_EICHD18_WORD0_CHKBIT_MASK_MASK)  /* Merged from fields with different position or width, of widths (7, 8, 16, 30), largest definition used */
/*! @} */

/*! @name EICHD18_WORD1 - Error Injection Channel Descriptor n, Word1 */
/*! @{ */
#define EIM_EICHD18_WORD1_B0_3DATA_MASK_MASK     (0xFFFFFFFFU)  /* Merged from fields with different position or width, of widths (16, 32), largest definition used */
#define EIM_EICHD18_WORD1_B0_3DATA_MASK_SHIFT    (0U)
#define EIM_EICHD18_WORD1_B0_3DATA_MASK_WIDTH    (32U)
#define EIM_EICHD18_WORD1_B0_3DATA_MASK(x)       (((uint32_t)(((uint32_t)(x)) << EIM_EICHD18_WORD1_B0_3DATA_MASK_SHIFT)) & EIM_EICHD18_WORD1_B0_3DATA_MASK_MASK)  /* Merged from fields with different position or width, of widths (16, 32), largest definition used */
/*! @} */

/*! @name EICHD18_WORD2 - Error Injection Channel Descriptor n, Word2 */
/*! @{ */
#define EIM_EICHD18_WORD2_B4_7DATA_MASK_MASK     (0xFFFFFFFFU)
#define EIM_EICHD18_WORD2_B4_7DATA_MASK_SHIFT    (0U)
#define EIM_EICHD18_WORD2_B4_7DATA_MASK_WIDTH    (32U)
#define EIM_EICHD18_WORD2_B4_7DATA_MASK(x)       (((uint32_t)(((uint32_t)(x)) << EIM_EICHD18_WORD2_B4_7DATA_MASK_SHIFT)) & EIM_EICHD18_WORD2_B4_7DATA_MASK_MASK)
/*! @} */

/*! @name EICHD18_WORD3 - Error Injection Channel Descriptor n, Word3 */
/*! @{ */
#define EIM_EICHD18_WORD3_B8_11DATA_MASK_MASK    (0xFFFFFFFFU)
#define EIM_EICHD18_WORD3_B8_11DATA_MASK_SHIFT   (0U)
#define EIM_EICHD18_WORD3_B8_11DATA_MASK_WIDTH   (32U)
#define EIM_EICHD18_WORD3_B8_11DATA_MASK(x)      (((uint32_t)(((uint32_t)(x)) << EIM_EICHD18_WORD3_B8_11DATA_MASK_SHIFT)) & EIM_EICHD18_WORD3_B8_11DATA_MASK_MASK)
/*! @} */

/*! @name EICHD18_WORD4 - Error Injection Channel Descriptor n, Word4 */
/*! @{ */
#define EIM_EICHD18_WORD4_B12_15DATA_MASK_MASK   (0xFFFFFFFFU)
#define EIM_EICHD18_WORD4_B12_15DATA_MASK_SHIFT  (0U)
#define EIM_EICHD18_WORD4_B12_15DATA_MASK_WIDTH  (32U)
#define EIM_EICHD18_WORD4_B12_15DATA_MASK(x)     (((uint32_t)(((uint32_t)(x)) << EIM_EICHD18_WORD4_B12_15DATA_MASK_SHIFT)) & EIM_EICHD18_WORD4_B12_15DATA_MASK_MASK)
/*! @} */

/*! @name EICHD19_WORD0 - Error Injection Channel Descriptor n, Word0 */
/*! @{ */
#define EIM_EICHD19_WORD0_CHKBIT_MASK_MASK       (0xFFFFFFF0U)  /* Merged from fields with different position or width, of widths (7, 8, 10, 28), largest definition used */
#define EIM_EICHD19_WORD0_CHKBIT_MASK_SHIFT      (4U)
#define EIM_EICHD19_WORD0_CHKBIT_MASK_WIDTH      (28U)
#define EIM_EICHD19_WORD0_CHKBIT_MASK(x)         (((uint32_t)(((uint32_t)(x)) << EIM_EICHD19_WORD0_CHKBIT_MASK_SHIFT)) & EIM_EICHD19_WORD0_CHKBIT_MASK_MASK)  /* Merged from fields with different position or width, of widths (7, 8, 10, 28), largest definition used */
/*! @} */

/*! @name EICHD19_WORD1 - Error Injection Channel Descriptor n, Word1 */
/*! @{ */
#define EIM_EICHD19_WORD1_B0_3DATA_MASK_MASK     (0xFFFFFFFFU)  /* Merged from fields with different position or width, of widths (8, 16, 32), largest definition used */
#define EIM_EICHD19_WORD1_B0_3DATA_MASK_SHIFT    (0U)
#define EIM_EICHD19_WORD1_B0_3DATA_MASK_WIDTH    (32U)
#define EIM_EICHD19_WORD1_B0_3DATA_MASK(x)       (((uint32_t)(((uint32_t)(x)) << EIM_EICHD19_WORD1_B0_3DATA_MASK_SHIFT)) & EIM_EICHD19_WORD1_B0_3DATA_MASK_MASK)  /* Merged from fields with different position or width, of widths (8, 16, 32), largest definition used */
/*! @} */

/*! @name EICHD19_WORD2 - Error Injection Channel Descriptor n, Word2 */
/*! @{ */
#define EIM_EICHD19_WORD2_B4_7DATA_MASK_MASK     (0xFFFFFFFFU)
#define EIM_EICHD19_WORD2_B4_7DATA_MASK_SHIFT    (0U)
#define EIM_EICHD19_WORD2_B4_7DATA_MASK_WIDTH    (32U)
#define EIM_EICHD19_WORD2_B4_7DATA_MASK(x)       (((uint32_t)(((uint32_t)(x)) << EIM_EICHD19_WORD2_B4_7DATA_MASK_SHIFT)) & EIM_EICHD19_WORD2_B4_7DATA_MASK_MASK)
/*! @} */

/*! @name EICHD19_WORD3 - Error Injection Channel Descriptor n, Word3 */
/*! @{ */
#define EIM_EICHD19_WORD3_B8_11DATA_MASK_MASK    (0xFFFFFFFFU)
#define EIM_EICHD19_WORD3_B8_11DATA_MASK_SHIFT   (0U)
#define EIM_EICHD19_WORD3_B8_11DATA_MASK_WIDTH   (32U)
#define EIM_EICHD19_WORD3_B8_11DATA_MASK(x)      (((uint32_t)(((uint32_t)(x)) << EIM_EICHD19_WORD3_B8_11DATA_MASK_SHIFT)) & EIM_EICHD19_WORD3_B8_11DATA_MASK_MASK)
/*! @} */

/*! @name EICHD19_WORD4 - Error Injection Channel Descriptor n, Word4 */
/*! @{ */
#define EIM_EICHD19_WORD4_B12_15DATA_MASK_MASK   (0xFFFFFFFFU)
#define EIM_EICHD19_WORD4_B12_15DATA_MASK_SHIFT  (0U)
#define EIM_EICHD19_WORD4_B12_15DATA_MASK_WIDTH  (32U)
#define EIM_EICHD19_WORD4_B12_15DATA_MASK(x)     (((uint32_t)(((uint32_t)(x)) << EIM_EICHD19_WORD4_B12_15DATA_MASK_SHIFT)) & EIM_EICHD19_WORD4_B12_15DATA_MASK_MASK)
/*! @} */

/*! @name EICHD20_WORD0 - Error Injection Channel Descriptor n, Word0 */
/*! @{ */
#define EIM_EICHD20_WORD0_CHKBIT_MASK_MASK       (0xFFFFFFF0U)  /* Merged from fields with different position or width, of widths (7, 8, 20, 28), largest definition used */
#define EIM_EICHD20_WORD0_CHKBIT_MASK_SHIFT      (4U)
#define EIM_EICHD20_WORD0_CHKBIT_MASK_WIDTH      (28U)
#define EIM_EICHD20_WORD0_CHKBIT_MASK(x)         (((uint32_t)(((uint32_t)(x)) << EIM_EICHD20_WORD0_CHKBIT_MASK_SHIFT)) & EIM_EICHD20_WORD0_CHKBIT_MASK_MASK)  /* Merged from fields with different position or width, of widths (7, 8, 20, 28), largest definition used */
/*! @} */

/*! @name EICHD20_WORD1 - Error Injection Channel Descriptor n, Word1 */
/*! @{ */
#define EIM_EICHD20_WORD1_B0_3DATA_MASK_MASK     (0xFFFFFFFFU)
#define EIM_EICHD20_WORD1_B0_3DATA_MASK_SHIFT    (0U)
#define EIM_EICHD20_WORD1_B0_3DATA_MASK_WIDTH    (32U)
#define EIM_EICHD20_WORD1_B0_3DATA_MASK(x)       (((uint32_t)(((uint32_t)(x)) << EIM_EICHD20_WORD1_B0_3DATA_MASK_SHIFT)) & EIM_EICHD20_WORD1_B0_3DATA_MASK_MASK)
/*! @} */

/*! @name EICHD20_WORD2 - Error Injection Channel Descriptor n, Word2 */
/*! @{ */
#define EIM_EICHD20_WORD2_B4_7DATA_MASK_MASK     (0xFFFFFFFFU)
#define EIM_EICHD20_WORD2_B4_7DATA_MASK_SHIFT    (0U)
#define EIM_EICHD20_WORD2_B4_7DATA_MASK_WIDTH    (32U)
#define EIM_EICHD20_WORD2_B4_7DATA_MASK(x)       (((uint32_t)(((uint32_t)(x)) << EIM_EICHD20_WORD2_B4_7DATA_MASK_SHIFT)) & EIM_EICHD20_WORD2_B4_7DATA_MASK_MASK)
/*! @} */

/*! @name EICHD20_WORD3 - Error Injection Channel Descriptor n, Word3 */
/*! @{ */
#define EIM_EICHD20_WORD3_B8_11DATA_MASK_MASK    (0xFFFFFFFFU)
#define EIM_EICHD20_WORD3_B8_11DATA_MASK_SHIFT   (0U)
#define EIM_EICHD20_WORD3_B8_11DATA_MASK_WIDTH   (32U)
#define EIM_EICHD20_WORD3_B8_11DATA_MASK(x)      (((uint32_t)(((uint32_t)(x)) << EIM_EICHD20_WORD3_B8_11DATA_MASK_SHIFT)) & EIM_EICHD20_WORD3_B8_11DATA_MASK_MASK)
/*! @} */

/*! @name EICHD20_WORD4 - Error Injection Channel Descriptor n, Word4 */
/*! @{ */
#define EIM_EICHD20_WORD4_B12_15DATA_MASK_MASK   (0xFFFFFFFFU)
#define EIM_EICHD20_WORD4_B12_15DATA_MASK_SHIFT  (0U)
#define EIM_EICHD20_WORD4_B12_15DATA_MASK_WIDTH  (32U)
#define EIM_EICHD20_WORD4_B12_15DATA_MASK(x)     (((uint32_t)(((uint32_t)(x)) << EIM_EICHD20_WORD4_B12_15DATA_MASK_SHIFT)) & EIM_EICHD20_WORD4_B12_15DATA_MASK_MASK)
/*! @} */

/*! @name EICHD21_WORD0 - Error Injection Channel Descriptor n, Word0 */
/*! @{ */
#define EIM_EICHD21_WORD0_CHKBIT_MASK_MASK       (0xFFFFFFF0U)  /* Merged from fields with different position or width, of widths (8, 20, 28), largest definition used */
#define EIM_EICHD21_WORD0_CHKBIT_MASK_SHIFT      (4U)
#define EIM_EICHD21_WORD0_CHKBIT_MASK_WIDTH      (28U)
#define EIM_EICHD21_WORD0_CHKBIT_MASK(x)         (((uint32_t)(((uint32_t)(x)) << EIM_EICHD21_WORD0_CHKBIT_MASK_SHIFT)) & EIM_EICHD21_WORD0_CHKBIT_MASK_MASK)  /* Merged from fields with different position or width, of widths (8, 20, 28), largest definition used */
/*! @} */

/*! @name EICHD21_WORD1 - Error Injection Channel Descriptor n, Word1 */
/*! @{ */
#define EIM_EICHD21_WORD1_B0_3DATA_MASK_MASK     (0xFFFFFFFFU)
#define EIM_EICHD21_WORD1_B0_3DATA_MASK_SHIFT    (0U)
#define EIM_EICHD21_WORD1_B0_3DATA_MASK_WIDTH    (32U)
#define EIM_EICHD21_WORD1_B0_3DATA_MASK(x)       (((uint32_t)(((uint32_t)(x)) << EIM_EICHD21_WORD1_B0_3DATA_MASK_SHIFT)) & EIM_EICHD21_WORD1_B0_3DATA_MASK_MASK)
/*! @} */

/*! @name EICHD21_WORD2 - Error Injection Channel Descriptor n, Word2 */
/*! @{ */
#define EIM_EICHD21_WORD2_B4_7DATA_MASK_MASK     (0xFFFFFFFFU)
#define EIM_EICHD21_WORD2_B4_7DATA_MASK_SHIFT    (0U)
#define EIM_EICHD21_WORD2_B4_7DATA_MASK_WIDTH    (32U)
#define EIM_EICHD21_WORD2_B4_7DATA_MASK(x)       (((uint32_t)(((uint32_t)(x)) << EIM_EICHD21_WORD2_B4_7DATA_MASK_SHIFT)) & EIM_EICHD21_WORD2_B4_7DATA_MASK_MASK)
/*! @} */

/*! @name EICHD21_WORD3 - Error Injection Channel Descriptor n, Word3 */
/*! @{ */
#define EIM_EICHD21_WORD3_B8_11DATA_MASK_MASK    (0xFFFFFFFFU)
#define EIM_EICHD21_WORD3_B8_11DATA_MASK_SHIFT   (0U)
#define EIM_EICHD21_WORD3_B8_11DATA_MASK_WIDTH   (32U)
#define EIM_EICHD21_WORD3_B8_11DATA_MASK(x)      (((uint32_t)(((uint32_t)(x)) << EIM_EICHD21_WORD3_B8_11DATA_MASK_SHIFT)) & EIM_EICHD21_WORD3_B8_11DATA_MASK_MASK)
/*! @} */

/*! @name EICHD21_WORD4 - Error Injection Channel Descriptor n, Word4 */
/*! @{ */
#define EIM_EICHD21_WORD4_B12_15DATA_MASK_MASK   (0xFFFFFFFFU)
#define EIM_EICHD21_WORD4_B12_15DATA_MASK_SHIFT  (0U)
#define EIM_EICHD21_WORD4_B12_15DATA_MASK_WIDTH  (32U)
#define EIM_EICHD21_WORD4_B12_15DATA_MASK(x)     (((uint32_t)(((uint32_t)(x)) << EIM_EICHD21_WORD4_B12_15DATA_MASK_SHIFT)) & EIM_EICHD21_WORD4_B12_15DATA_MASK_MASK)
/*! @} */

/*! @name EICHD22_WORD0 - Error Injection Channel Descriptor n, Word0 */
/*! @{ */
#define EIM_EICHD22_WORD0_CHKBIT_MASK_MASK       (0xFFFFFFFFU)  /* Merged from fields with different position or width, of widths (7, 8, 16, 32), largest definition used */
#define EIM_EICHD22_WORD0_CHKBIT_MASK_SHIFT      (0U)
#define EIM_EICHD22_WORD0_CHKBIT_MASK_WIDTH      (32U)
#define EIM_EICHD22_WORD0_CHKBIT_MASK(x)         (((uint32_t)(((uint32_t)(x)) << EIM_EICHD22_WORD0_CHKBIT_MASK_SHIFT)) & EIM_EICHD22_WORD0_CHKBIT_MASK_MASK)  /* Merged from fields with different position or width, of widths (7, 8, 16, 32), largest definition used */
/*! @} */

/*! @name EICHD22_WORD1 - Error Injection Channel Descriptor n, Word1 */
/*! @{ */
#define EIM_EICHD22_WORD1_B0_3DATA_MASK_MASK     (0xFFFFFFFFU)
#define EIM_EICHD22_WORD1_B0_3DATA_MASK_SHIFT    (0U)
#define EIM_EICHD22_WORD1_B0_3DATA_MASK_WIDTH    (32U)
#define EIM_EICHD22_WORD1_B0_3DATA_MASK(x)       (((uint32_t)(((uint32_t)(x)) << EIM_EICHD22_WORD1_B0_3DATA_MASK_SHIFT)) & EIM_EICHD22_WORD1_B0_3DATA_MASK_MASK)
/*! @} */

/*! @name EICHD22_WORD2 - Error Injection Channel Descriptor n, Word2 */
/*! @{ */
#define EIM_EICHD22_WORD2_B4_7DATA_MASK_MASK     (0xFFFFFFFFU)
#define EIM_EICHD22_WORD2_B4_7DATA_MASK_SHIFT    (0U)
#define EIM_EICHD22_WORD2_B4_7DATA_MASK_WIDTH    (32U)
#define EIM_EICHD22_WORD2_B4_7DATA_MASK(x)       (((uint32_t)(((uint32_t)(x)) << EIM_EICHD22_WORD2_B4_7DATA_MASK_SHIFT)) & EIM_EICHD22_WORD2_B4_7DATA_MASK_MASK)
/*! @} */

/*! @name EICHD22_WORD3 - Error Injection Channel Descriptor n, Word3 */
/*! @{ */
#define EIM_EICHD22_WORD3_B8_11DATA_MASK_MASK    (0xFFFFFFFFU)
#define EIM_EICHD22_WORD3_B8_11DATA_MASK_SHIFT   (0U)
#define EIM_EICHD22_WORD3_B8_11DATA_MASK_WIDTH   (32U)
#define EIM_EICHD22_WORD3_B8_11DATA_MASK(x)      (((uint32_t)(((uint32_t)(x)) << EIM_EICHD22_WORD3_B8_11DATA_MASK_SHIFT)) & EIM_EICHD22_WORD3_B8_11DATA_MASK_MASK)
/*! @} */

/*! @name EICHD22_WORD4 - Error Injection Channel Descriptor n, Word4 */
/*! @{ */
#define EIM_EICHD22_WORD4_B12_15DATA_MASK_MASK   (0xFFFFFFFFU)
#define EIM_EICHD22_WORD4_B12_15DATA_MASK_SHIFT  (0U)
#define EIM_EICHD22_WORD4_B12_15DATA_MASK_WIDTH  (32U)
#define EIM_EICHD22_WORD4_B12_15DATA_MASK(x)     (((uint32_t)(((uint32_t)(x)) << EIM_EICHD22_WORD4_B12_15DATA_MASK_SHIFT)) & EIM_EICHD22_WORD4_B12_15DATA_MASK_MASK)
/*! @} */

/*! @name EICHD22_WORD5 - Error Injection Channel Descriptor n, Word5 */
/*! @{ */
#define EIM_EICHD22_WORD5_B16_19DATA_MASK_MASK   (0xFFFFFFFFU)
#define EIM_EICHD22_WORD5_B16_19DATA_MASK_SHIFT  (0U)
#define EIM_EICHD22_WORD5_B16_19DATA_MASK_WIDTH  (32U)
#define EIM_EICHD22_WORD5_B16_19DATA_MASK(x)     (((uint32_t)(((uint32_t)(x)) << EIM_EICHD22_WORD5_B16_19DATA_MASK_SHIFT)) & EIM_EICHD22_WORD5_B16_19DATA_MASK_MASK)
/*! @} */

/*! @name EICHD22_WORD6 - Error Injection Channel Descriptor n, Word6 */
/*! @{ */
#define EIM_EICHD22_WORD6_B20_23DATA_MASK_MASK   (0xFFFFFFFFU)
#define EIM_EICHD22_WORD6_B20_23DATA_MASK_SHIFT  (0U)
#define EIM_EICHD22_WORD6_B20_23DATA_MASK_WIDTH  (32U)
#define EIM_EICHD22_WORD6_B20_23DATA_MASK(x)     (((uint32_t)(((uint32_t)(x)) << EIM_EICHD22_WORD6_B20_23DATA_MASK_SHIFT)) & EIM_EICHD22_WORD6_B20_23DATA_MASK_MASK)
/*! @} */

/*! @name EICHD22_WORD7 - Error Injection Channel Descriptor n, Word7 */
/*! @{ */
#define EIM_EICHD22_WORD7_B24_27DATA_MASK_MASK   (0xFFFFFFFFU)
#define EIM_EICHD22_WORD7_B24_27DATA_MASK_SHIFT  (0U)
#define EIM_EICHD22_WORD7_B24_27DATA_MASK_WIDTH  (32U)
#define EIM_EICHD22_WORD7_B24_27DATA_MASK(x)     (((uint32_t)(((uint32_t)(x)) << EIM_EICHD22_WORD7_B24_27DATA_MASK_SHIFT)) & EIM_EICHD22_WORD7_B24_27DATA_MASK_MASK)
/*! @} */

/*! @name EICHD22_WORD8 - Error Injection Channel Descriptor n, Word8 */
/*! @{ */
#define EIM_EICHD22_WORD8_B28_31DATA_MASK_MASK   (0xFFFFFFFFU)
#define EIM_EICHD22_WORD8_B28_31DATA_MASK_SHIFT  (0U)
#define EIM_EICHD22_WORD8_B28_31DATA_MASK_WIDTH  (32U)
#define EIM_EICHD22_WORD8_B28_31DATA_MASK(x)     (((uint32_t)(((uint32_t)(x)) << EIM_EICHD22_WORD8_B28_31DATA_MASK_SHIFT)) & EIM_EICHD22_WORD8_B28_31DATA_MASK_MASK)
/*! @} */

/*! @name EICHD23_WORD0 - Error Injection Channel Descriptor n, Word0 */
/*! @{ */
#define EIM_EICHD23_WORD0_CHKBIT_MASK_MASK       (0xFFFFFFFCU)  /* Merged from fields with different position or width, of widths (8, 14, 30), largest definition used */
#define EIM_EICHD23_WORD0_CHKBIT_MASK_SHIFT      (2U)
#define EIM_EICHD23_WORD0_CHKBIT_MASK_WIDTH      (30U)
#define EIM_EICHD23_WORD0_CHKBIT_MASK(x)         (((uint32_t)(((uint32_t)(x)) << EIM_EICHD23_WORD0_CHKBIT_MASK_SHIFT)) & EIM_EICHD23_WORD0_CHKBIT_MASK_MASK)  /* Merged from fields with different position or width, of widths (8, 14, 30), largest definition used */
/*! @} */

/*! @name EICHD23_WORD1 - Error Injection Channel Descriptor n, Word1 */
/*! @{ */
#define EIM_EICHD23_WORD1_B0_3DATA_MASK_MASK     (0xFFFFFFFFU)  /* Merged from fields with different position or width, of widths (12, 16, 32), largest definition used */
#define EIM_EICHD23_WORD1_B0_3DATA_MASK_SHIFT    (0U)
#define EIM_EICHD23_WORD1_B0_3DATA_MASK_WIDTH    (32U)
#define EIM_EICHD23_WORD1_B0_3DATA_MASK(x)       (((uint32_t)(((uint32_t)(x)) << EIM_EICHD23_WORD1_B0_3DATA_MASK_SHIFT)) & EIM_EICHD23_WORD1_B0_3DATA_MASK_MASK)  /* Merged from fields with different position or width, of widths (12, 16, 32), largest definition used */
/*! @} */

/*! @name EICHD23_WORD2 - Error Injection Channel Descriptor n, Word2 */
/*! @{ */
#define EIM_EICHD23_WORD2_B4_7DATA_MASK_MASK     (0xFFFFFFFFU)
#define EIM_EICHD23_WORD2_B4_7DATA_MASK_SHIFT    (0U)
#define EIM_EICHD23_WORD2_B4_7DATA_MASK_WIDTH    (32U)
#define EIM_EICHD23_WORD2_B4_7DATA_MASK(x)       (((uint32_t)(((uint32_t)(x)) << EIM_EICHD23_WORD2_B4_7DATA_MASK_SHIFT)) & EIM_EICHD23_WORD2_B4_7DATA_MASK_MASK)
/*! @} */

/*! @name EICHD24_WORD0 - Error Injection Channel Descriptor n, Word0 */
/*! @{ */
#define EIM_EICHD24_WORD0_CHKBIT_MASK_MASK       (0xFFFF0000U)  /* Merged from fields with different position or width, of widths (7, 8, 10, 16), largest definition used */
#define EIM_EICHD24_WORD0_CHKBIT_MASK_SHIFT      (16U)
#define EIM_EICHD24_WORD0_CHKBIT_MASK_WIDTH      (16U)
#define EIM_EICHD24_WORD0_CHKBIT_MASK(x)         (((uint32_t)(((uint32_t)(x)) << EIM_EICHD24_WORD0_CHKBIT_MASK_SHIFT)) & EIM_EICHD24_WORD0_CHKBIT_MASK_MASK)  /* Merged from fields with different position or width, of widths (7, 8, 10, 16), largest definition used */
/*! @} */

/*! @name EICHD24_WORD1 - Error Injection Channel Descriptor n, Word1 */
/*! @{ */
#define EIM_EICHD24_WORD1_B0_3DATA_MASK_MASK     (0xFFFFFFFFU)  /* Merged from fields with different position or width, of widths (16, 32), largest definition used */
#define EIM_EICHD24_WORD1_B0_3DATA_MASK_SHIFT    (0U)
#define EIM_EICHD24_WORD1_B0_3DATA_MASK_WIDTH    (32U)
#define EIM_EICHD24_WORD1_B0_3DATA_MASK(x)       (((uint32_t)(((uint32_t)(x)) << EIM_EICHD24_WORD1_B0_3DATA_MASK_SHIFT)) & EIM_EICHD24_WORD1_B0_3DATA_MASK_MASK)  /* Merged from fields with different position or width, of widths (16, 32), largest definition used */
/*! @} */

/*! @name EICHD24_WORD2 - Error Injection Channel Descriptor n, Word2 */
/*! @{ */
#define EIM_EICHD24_WORD2_B4_7DATA_MASK_MASK     (0xFFFFFFFFU)
#define EIM_EICHD24_WORD2_B4_7DATA_MASK_SHIFT    (0U)
#define EIM_EICHD24_WORD2_B4_7DATA_MASK_WIDTH    (32U)
#define EIM_EICHD24_WORD2_B4_7DATA_MASK(x)       (((uint32_t)(((uint32_t)(x)) << EIM_EICHD24_WORD2_B4_7DATA_MASK_SHIFT)) & EIM_EICHD24_WORD2_B4_7DATA_MASK_MASK)
/*! @} */

/*! @name EICHD24_WORD3 - Error Injection Channel Descriptor n, Word3 */
/*! @{ */
#define EIM_EICHD24_WORD3_B8_11DATA_MASK_MASK    (0xFFFFFFFFU)
#define EIM_EICHD24_WORD3_B8_11DATA_MASK_SHIFT   (0U)
#define EIM_EICHD24_WORD3_B8_11DATA_MASK_WIDTH   (32U)
#define EIM_EICHD24_WORD3_B8_11DATA_MASK(x)      (((uint32_t)(((uint32_t)(x)) << EIM_EICHD24_WORD3_B8_11DATA_MASK_SHIFT)) & EIM_EICHD24_WORD3_B8_11DATA_MASK_MASK)
/*! @} */

/*! @name EICHD24_WORD4 - Error Injection Channel Descriptor n, Word4 */
/*! @{ */
#define EIM_EICHD24_WORD4_B12_15DATA_MASK_MASK   (0xFFFFFFFFU)
#define EIM_EICHD24_WORD4_B12_15DATA_MASK_SHIFT  (0U)
#define EIM_EICHD24_WORD4_B12_15DATA_MASK_WIDTH  (32U)
#define EIM_EICHD24_WORD4_B12_15DATA_MASK(x)     (((uint32_t)(((uint32_t)(x)) << EIM_EICHD24_WORD4_B12_15DATA_MASK_SHIFT)) & EIM_EICHD24_WORD4_B12_15DATA_MASK_MASK)
/*! @} */

/*! @name EICHD25_WORD0 - Error Injection Channel Descriptor n, Word0 */
/*! @{ */
#define EIM_EICHD25_WORD0_CHKBIT_MASK_MASK       (0xFFFFFFF0U)  /* Merged from fields with different position or width, of widths (8, 20, 28), largest definition used */
#define EIM_EICHD25_WORD0_CHKBIT_MASK_SHIFT      (4U)
#define EIM_EICHD25_WORD0_CHKBIT_MASK_WIDTH      (28U)
#define EIM_EICHD25_WORD0_CHKBIT_MASK(x)         (((uint32_t)(((uint32_t)(x)) << EIM_EICHD25_WORD0_CHKBIT_MASK_SHIFT)) & EIM_EICHD25_WORD0_CHKBIT_MASK_MASK)  /* Merged from fields with different position or width, of widths (8, 20, 28), largest definition used */
/*! @} */

/*! @name EICHD25_WORD1 - Error Injection Channel Descriptor n, Word1 */
/*! @{ */
#define EIM_EICHD25_WORD1_B0_3DATA_MASK_MASK     (0xFFFFFFFFU)  /* Merged from fields with different position or width, of widths (8, 32), largest definition used */
#define EIM_EICHD25_WORD1_B0_3DATA_MASK_SHIFT    (0U)
#define EIM_EICHD25_WORD1_B0_3DATA_MASK_WIDTH    (32U)
#define EIM_EICHD25_WORD1_B0_3DATA_MASK(x)       (((uint32_t)(((uint32_t)(x)) << EIM_EICHD25_WORD1_B0_3DATA_MASK_SHIFT)) & EIM_EICHD25_WORD1_B0_3DATA_MASK_MASK)  /* Merged from fields with different position or width, of widths (8, 32), largest definition used */
/*! @} */

/*! @name EICHD25_WORD2 - Error Injection Channel Descriptor n, Word2 */
/*! @{ */
#define EIM_EICHD25_WORD2_B4_7DATA_MASK_MASK     (0xFFFFFFFFU)
#define EIM_EICHD25_WORD2_B4_7DATA_MASK_SHIFT    (0U)
#define EIM_EICHD25_WORD2_B4_7DATA_MASK_WIDTH    (32U)
#define EIM_EICHD25_WORD2_B4_7DATA_MASK(x)       (((uint32_t)(((uint32_t)(x)) << EIM_EICHD25_WORD2_B4_7DATA_MASK_SHIFT)) & EIM_EICHD25_WORD2_B4_7DATA_MASK_MASK)
/*! @} */

/*! @name EICHD25_WORD3 - Error Injection Channel Descriptor n, Word3 */
/*! @{ */
#define EIM_EICHD25_WORD3_B8_11DATA_MASK_MASK    (0xFFFFFFFFU)
#define EIM_EICHD25_WORD3_B8_11DATA_MASK_SHIFT   (0U)
#define EIM_EICHD25_WORD3_B8_11DATA_MASK_WIDTH   (32U)
#define EIM_EICHD25_WORD3_B8_11DATA_MASK(x)      (((uint32_t)(((uint32_t)(x)) << EIM_EICHD25_WORD3_B8_11DATA_MASK_SHIFT)) & EIM_EICHD25_WORD3_B8_11DATA_MASK_MASK)
/*! @} */

/*! @name EICHD25_WORD4 - Error Injection Channel Descriptor n, Word4 */
/*! @{ */
#define EIM_EICHD25_WORD4_B12_15DATA_MASK_MASK   (0xFFFFFFFFU)
#define EIM_EICHD25_WORD4_B12_15DATA_MASK_SHIFT  (0U)
#define EIM_EICHD25_WORD4_B12_15DATA_MASK_WIDTH  (32U)
#define EIM_EICHD25_WORD4_B12_15DATA_MASK(x)     (((uint32_t)(((uint32_t)(x)) << EIM_EICHD25_WORD4_B12_15DATA_MASK_SHIFT)) & EIM_EICHD25_WORD4_B12_15DATA_MASK_MASK)
/*! @} */

/*! @name EICHD26_WORD0 - Error Injection Channel Descriptor n, Word0 */
/*! @{ */
#define EIM_EICHD26_WORD0_CHKBIT_MASK_MASK       (0xFFFFFFF0U)  /* Merged from fields with different position or width, of widths (8, 14, 20, 28), largest definition used */
#define EIM_EICHD26_WORD0_CHKBIT_MASK_SHIFT      (4U)
#define EIM_EICHD26_WORD0_CHKBIT_MASK_WIDTH      (28U)
#define EIM_EICHD26_WORD0_CHKBIT_MASK(x)         (((uint32_t)(((uint32_t)(x)) << EIM_EICHD26_WORD0_CHKBIT_MASK_SHIFT)) & EIM_EICHD26_WORD0_CHKBIT_MASK_MASK)  /* Merged from fields with different position or width, of widths (8, 14, 20, 28), largest definition used */
/*! @} */

/*! @name EICHD26_WORD1 - Error Injection Channel Descriptor n, Word1 */
/*! @{ */
#define EIM_EICHD26_WORD1_B0_3DATA_MASK_MASK     (0xFFFFFFFFU)
#define EIM_EICHD26_WORD1_B0_3DATA_MASK_SHIFT    (0U)
#define EIM_EICHD26_WORD1_B0_3DATA_MASK_WIDTH    (32U)
#define EIM_EICHD26_WORD1_B0_3DATA_MASK(x)       (((uint32_t)(((uint32_t)(x)) << EIM_EICHD26_WORD1_B0_3DATA_MASK_SHIFT)) & EIM_EICHD26_WORD1_B0_3DATA_MASK_MASK)
/*! @} */

/*! @name EICHD26_WORD2 - Error Injection Channel Descriptor n, Word2 */
/*! @{ */
#define EIM_EICHD26_WORD2_B4_7DATA_MASK_MASK     (0xFFFFFFFFU)
#define EIM_EICHD26_WORD2_B4_7DATA_MASK_SHIFT    (0U)
#define EIM_EICHD26_WORD2_B4_7DATA_MASK_WIDTH    (32U)
#define EIM_EICHD26_WORD2_B4_7DATA_MASK(x)       (((uint32_t)(((uint32_t)(x)) << EIM_EICHD26_WORD2_B4_7DATA_MASK_SHIFT)) & EIM_EICHD26_WORD2_B4_7DATA_MASK_MASK)
/*! @} */

/*! @name EICHD26_WORD3 - Error Injection Channel Descriptor n, Word3 */
/*! @{ */
#define EIM_EICHD26_WORD3_B8_11DATA_MASK_MASK    (0xFFFFFFFFU)
#define EIM_EICHD26_WORD3_B8_11DATA_MASK_SHIFT   (0U)
#define EIM_EICHD26_WORD3_B8_11DATA_MASK_WIDTH   (32U)
#define EIM_EICHD26_WORD3_B8_11DATA_MASK(x)      (((uint32_t)(((uint32_t)(x)) << EIM_EICHD26_WORD3_B8_11DATA_MASK_SHIFT)) & EIM_EICHD26_WORD3_B8_11DATA_MASK_MASK)
/*! @} */

/*! @name EICHD26_WORD4 - Error Injection Channel Descriptor n, Word4 */
/*! @{ */
#define EIM_EICHD26_WORD4_B12_15DATA_MASK_MASK   (0xFFFFFFFFU)
#define EIM_EICHD26_WORD4_B12_15DATA_MASK_SHIFT  (0U)
#define EIM_EICHD26_WORD4_B12_15DATA_MASK_WIDTH  (32U)
#define EIM_EICHD26_WORD4_B12_15DATA_MASK(x)     (((uint32_t)(((uint32_t)(x)) << EIM_EICHD26_WORD4_B12_15DATA_MASK_SHIFT)) & EIM_EICHD26_WORD4_B12_15DATA_MASK_MASK)
/*! @} */

/*! @name EICHD27_WORD0 - Error Injection Channel Descriptor n, Word0 */
/*! @{ */
#define EIM_EICHD27_WORD0_CHKBIT_MASK_MASK       (0xFFFFFFF0U)  /* Merged from fields with different position or width, of widths (7, 8, 28), largest definition used */
#define EIM_EICHD27_WORD0_CHKBIT_MASK_SHIFT      (4U)
#define EIM_EICHD27_WORD0_CHKBIT_MASK_WIDTH      (28U)
#define EIM_EICHD27_WORD0_CHKBIT_MASK(x)         (((uint32_t)(((uint32_t)(x)) << EIM_EICHD27_WORD0_CHKBIT_MASK_SHIFT)) & EIM_EICHD27_WORD0_CHKBIT_MASK_MASK)  /* Merged from fields with different position or width, of widths (7, 8, 28), largest definition used */
/*! @} */

/*! @name EICHD27_WORD1 - Error Injection Channel Descriptor n, Word1 */
/*! @{ */
#define EIM_EICHD27_WORD1_B0_3DATA_MASK_MASK     (0xFFFFFFFFU)
#define EIM_EICHD27_WORD1_B0_3DATA_MASK_SHIFT    (0U)
#define EIM_EICHD27_WORD1_B0_3DATA_MASK_WIDTH    (32U)
#define EIM_EICHD27_WORD1_B0_3DATA_MASK(x)       (((uint32_t)(((uint32_t)(x)) << EIM_EICHD27_WORD1_B0_3DATA_MASK_SHIFT)) & EIM_EICHD27_WORD1_B0_3DATA_MASK_MASK)
/*! @} */

/*! @name EICHD27_WORD2 - Error Injection Channel Descriptor n, Word2 */
/*! @{ */
#define EIM_EICHD27_WORD2_B4_7DATA_MASK_MASK     (0xFFFFFFFFU)
#define EIM_EICHD27_WORD2_B4_7DATA_MASK_SHIFT    (0U)
#define EIM_EICHD27_WORD2_B4_7DATA_MASK_WIDTH    (32U)
#define EIM_EICHD27_WORD2_B4_7DATA_MASK(x)       (((uint32_t)(((uint32_t)(x)) << EIM_EICHD27_WORD2_B4_7DATA_MASK_SHIFT)) & EIM_EICHD27_WORD2_B4_7DATA_MASK_MASK)
/*! @} */

/*! @name EICHD27_WORD3 - Error Injection Channel Descriptor n, Word3 */
/*! @{ */
#define EIM_EICHD27_WORD3_B8_11DATA_MASK_MASK    (0xFFFFFFFFU)
#define EIM_EICHD27_WORD3_B8_11DATA_MASK_SHIFT   (0U)
#define EIM_EICHD27_WORD3_B8_11DATA_MASK_WIDTH   (32U)
#define EIM_EICHD27_WORD3_B8_11DATA_MASK(x)      (((uint32_t)(((uint32_t)(x)) << EIM_EICHD27_WORD3_B8_11DATA_MASK_SHIFT)) & EIM_EICHD27_WORD3_B8_11DATA_MASK_MASK)
/*! @} */

/*! @name EICHD27_WORD4 - Error Injection Channel Descriptor n, Word4 */
/*! @{ */
#define EIM_EICHD27_WORD4_B12_15DATA_MASK_MASK   (0xFFFFFFFFU)
#define EIM_EICHD27_WORD4_B12_15DATA_MASK_SHIFT  (0U)
#define EIM_EICHD27_WORD4_B12_15DATA_MASK_WIDTH  (32U)
#define EIM_EICHD27_WORD4_B12_15DATA_MASK(x)     (((uint32_t)(((uint32_t)(x)) << EIM_EICHD27_WORD4_B12_15DATA_MASK_SHIFT)) & EIM_EICHD27_WORD4_B12_15DATA_MASK_MASK)
/*! @} */

/*! @name EICHD28_WORD0 - Error Injection Channel Descriptor n, Word0 */
/*! @{ */
#define EIM_EICHD28_WORD0_CHKBIT_MASK_MASK       (0xFFFFFFFCU)  /* Merged from fields with different position or width, of widths (8, 30), largest definition used */
#define EIM_EICHD28_WORD0_CHKBIT_MASK_SHIFT      (2U)
#define EIM_EICHD28_WORD0_CHKBIT_MASK_WIDTH      (30U)
#define EIM_EICHD28_WORD0_CHKBIT_MASK(x)         (((uint32_t)(((uint32_t)(x)) << EIM_EICHD28_WORD0_CHKBIT_MASK_SHIFT)) & EIM_EICHD28_WORD0_CHKBIT_MASK_MASK)  /* Merged from fields with different position or width, of widths (8, 30), largest definition used */
/*! @} */

/*! @name EICHD28_WORD1 - Error Injection Channel Descriptor n, Word1 */
/*! @{ */
#define EIM_EICHD28_WORD1_B0_3DATA_MASK_MASK     (0xFFFFFFFFU)  /* Merged from fields with different position or width, of widths (16, 26, 32), largest definition used */
#define EIM_EICHD28_WORD1_B0_3DATA_MASK_SHIFT    (0U)
#define EIM_EICHD28_WORD1_B0_3DATA_MASK_WIDTH    (32U)
#define EIM_EICHD28_WORD1_B0_3DATA_MASK(x)       (((uint32_t)(((uint32_t)(x)) << EIM_EICHD28_WORD1_B0_3DATA_MASK_SHIFT)) & EIM_EICHD28_WORD1_B0_3DATA_MASK_MASK)  /* Merged from fields with different position or width, of widths (16, 26, 32), largest definition used */
/*! @} */

/*! @name EICHD28_WORD2 - Error Injection Channel Descriptor n, Word2 */
/*! @{ */
#define EIM_EICHD28_WORD2_B4_7DATA_MASK_MASK     (0xFFFFFFFFU)
#define EIM_EICHD28_WORD2_B4_7DATA_MASK_SHIFT    (0U)
#define EIM_EICHD28_WORD2_B4_7DATA_MASK_WIDTH    (32U)
#define EIM_EICHD28_WORD2_B4_7DATA_MASK(x)       (((uint32_t)(((uint32_t)(x)) << EIM_EICHD28_WORD2_B4_7DATA_MASK_SHIFT)) & EIM_EICHD28_WORD2_B4_7DATA_MASK_MASK)
/*! @} */

/*! @name EICHD28_WORD3 - Error Injection Channel Descriptor n, Word3 */
/*! @{ */
#define EIM_EICHD28_WORD3_B8_11DATA_MASK_MASK    (0xFFFFFFFFU)
#define EIM_EICHD28_WORD3_B8_11DATA_MASK_SHIFT   (0U)
#define EIM_EICHD28_WORD3_B8_11DATA_MASK_WIDTH   (32U)
#define EIM_EICHD28_WORD3_B8_11DATA_MASK(x)      (((uint32_t)(((uint32_t)(x)) << EIM_EICHD28_WORD3_B8_11DATA_MASK_SHIFT)) & EIM_EICHD28_WORD3_B8_11DATA_MASK_MASK)
/*! @} */

/*! @name EICHD29_WORD0 - Error Injection Channel Descriptor n, Word0 */
/*! @{ */
#define EIM_EICHD29_WORD0_CHKBIT_MASK_MASK       (0xFFC00000U)  /* Merged from fields with different position or width, of widths (8, 10), largest definition used */
#define EIM_EICHD29_WORD0_CHKBIT_MASK_SHIFT      (22U)
#define EIM_EICHD29_WORD0_CHKBIT_MASK_WIDTH      (10U)
#define EIM_EICHD29_WORD0_CHKBIT_MASK(x)         (((uint32_t)(((uint32_t)(x)) << EIM_EICHD29_WORD0_CHKBIT_MASK_SHIFT)) & EIM_EICHD29_WORD0_CHKBIT_MASK_MASK)  /* Merged from fields with different position or width, of widths (8, 10), largest definition used */
/*! @} */

/*! @name EICHD29_WORD1 - Error Injection Channel Descriptor n, Word1 */
/*! @{ */
#define EIM_EICHD29_WORD1_B0_3DATA_MASK_MASK     (0xFFFFFFFFU)  /* Merged from fields with different position or width, of widths (16, 20, 32), largest definition used */
#define EIM_EICHD29_WORD1_B0_3DATA_MASK_SHIFT    (0U)
#define EIM_EICHD29_WORD1_B0_3DATA_MASK_WIDTH    (32U)
#define EIM_EICHD29_WORD1_B0_3DATA_MASK(x)       (((uint32_t)(((uint32_t)(x)) << EIM_EICHD29_WORD1_B0_3DATA_MASK_SHIFT)) & EIM_EICHD29_WORD1_B0_3DATA_MASK_MASK)  /* Merged from fields with different position or width, of widths (16, 20, 32), largest definition used */
/*! @} */

/*! @name EICHD29_WORD2 - Error Injection Channel Descriptor n, Word2 */
/*! @{ */
#define EIM_EICHD29_WORD2_B4_7DATA_MASK_MASK     (0xFFFFFFFFU)
#define EIM_EICHD29_WORD2_B4_7DATA_MASK_SHIFT    (0U)
#define EIM_EICHD29_WORD2_B4_7DATA_MASK_WIDTH    (32U)
#define EIM_EICHD29_WORD2_B4_7DATA_MASK(x)       (((uint32_t)(((uint32_t)(x)) << EIM_EICHD29_WORD2_B4_7DATA_MASK_SHIFT)) & EIM_EICHD29_WORD2_B4_7DATA_MASK_MASK)
/*! @} */

/*! @name EICHD30_WORD0 - Error Injection Channel Descriptor n, Word0 */
/*! @{ */
#define EIM_EICHD30_WORD0_CHKBIT_MASK_MASK       (0xFFFFF000U)  /* Merged from fields with different position or width, of widths (8, 20), largest definition used */
#define EIM_EICHD30_WORD0_CHKBIT_MASK_SHIFT      (12U)
#define EIM_EICHD30_WORD0_CHKBIT_MASK_WIDTH      (20U)
#define EIM_EICHD30_WORD0_CHKBIT_MASK(x)         (((uint32_t)(((uint32_t)(x)) << EIM_EICHD30_WORD0_CHKBIT_MASK_SHIFT)) & EIM_EICHD30_WORD0_CHKBIT_MASK_MASK)  /* Merged from fields with different position or width, of widths (8, 20), largest definition used */
/*! @} */

/*! @name EICHD30_WORD1 - Error Injection Channel Descriptor n, Word1 */
/*! @{ */
#define EIM_EICHD30_WORD1_B0_3DATA_MASK_MASK     (0xFFFFFFFFU)  /* Merged from fields with different position or width, of widths (18, 32), largest definition used */
#define EIM_EICHD30_WORD1_B0_3DATA_MASK_SHIFT    (0U)
#define EIM_EICHD30_WORD1_B0_3DATA_MASK_WIDTH    (32U)
#define EIM_EICHD30_WORD1_B0_3DATA_MASK(x)       (((uint32_t)(((uint32_t)(x)) << EIM_EICHD30_WORD1_B0_3DATA_MASK_SHIFT)) & EIM_EICHD30_WORD1_B0_3DATA_MASK_MASK)  /* Merged from fields with different position or width, of widths (18, 32), largest definition used */
/*! @} */

/*! @name EICHD30_WORD2 - Error Injection Channel Descriptor n, Word2 */
/*! @{ */
#define EIM_EICHD30_WORD2_B4_7DATA_MASK_MASK     (0xFFFFFFFFU)
#define EIM_EICHD30_WORD2_B4_7DATA_MASK_SHIFT    (0U)
#define EIM_EICHD30_WORD2_B4_7DATA_MASK_WIDTH    (32U)
#define EIM_EICHD30_WORD2_B4_7DATA_MASK(x)       (((uint32_t)(((uint32_t)(x)) << EIM_EICHD30_WORD2_B4_7DATA_MASK_SHIFT)) & EIM_EICHD30_WORD2_B4_7DATA_MASK_MASK)
/*! @} */

/*! @name EICHD31_WORD0 - Error Injection Channel Descriptor n, Word0 */
/*! @{ */
#define EIM_EICHD31_WORD0_CHKBIT_MASK_MASK       (0xFFFFF000U)  /* Merged from fields with different position or width, of widths (7, 8, 20), largest definition used */
#define EIM_EICHD31_WORD0_CHKBIT_MASK_SHIFT      (12U)
#define EIM_EICHD31_WORD0_CHKBIT_MASK_WIDTH      (20U)
#define EIM_EICHD31_WORD0_CHKBIT_MASK(x)         (((uint32_t)(((uint32_t)(x)) << EIM_EICHD31_WORD0_CHKBIT_MASK_SHIFT)) & EIM_EICHD31_WORD0_CHKBIT_MASK_MASK)  /* Merged from fields with different position or width, of widths (7, 8, 20), largest definition used */
/*! @} */

/*! @name EICHD31_WORD1 - Error Injection Channel Descriptor n, Word1 */
/*! @{ */
#define EIM_EICHD31_WORD1_B0_3DATA_MASK_MASK     (0xFFFFFFFFU)  /* Merged from fields with different position or width, of widths (16, 32), largest definition used */
#define EIM_EICHD31_WORD1_B0_3DATA_MASK_SHIFT    (0U)
#define EIM_EICHD31_WORD1_B0_3DATA_MASK_WIDTH    (32U)
#define EIM_EICHD31_WORD1_B0_3DATA_MASK(x)       (((uint32_t)(((uint32_t)(x)) << EIM_EICHD31_WORD1_B0_3DATA_MASK_SHIFT)) & EIM_EICHD31_WORD1_B0_3DATA_MASK_MASK)  /* Merged from fields with different position or width, of widths (16, 32), largest definition used */
/*! @} */

/*! @name EICHD31_WORD2 - Error Injection Channel Descriptor n, Word2 */
/*! @{ */
#define EIM_EICHD31_WORD2_B4_7DATA_MASK_MASK     (0xFFFFFFFFU)
#define EIM_EICHD31_WORD2_B4_7DATA_MASK_SHIFT    (0U)
#define EIM_EICHD31_WORD2_B4_7DATA_MASK_WIDTH    (32U)
#define EIM_EICHD31_WORD2_B4_7DATA_MASK(x)       (((uint32_t)(((uint32_t)(x)) << EIM_EICHD31_WORD2_B4_7DATA_MASK_SHIFT)) & EIM_EICHD31_WORD2_B4_7DATA_MASK_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group EIM_Register_Masks */


/*!
 * @}
 */ /* end of group EIM_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- ERM Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup ERM_Peripheral_Access_Layer ERM Peripheral Access Layer
 * @{
 */

/** ERM - Register Layout Typedef */
typedef struct {
  __IO uint32_t CR0;                               /**< ERM Configuration Register 0, offset: 0x0 */
  __IO uint32_t CR1;                               /**< ERM Configuration Register 1, offset: 0x4 */
  __IO uint32_t CR2;                               /**< ERM Configuration Register 2, offset: 0x8 */
  uint8_t RESERVED_0[4];
  __IO uint32_t SR0;                               /**< ERM Status Register 0, offset: 0x10 */
  __IO uint32_t SR1;                               /**< ERM Status Register 1, offset: 0x14 */
  __IO uint32_t SR2;                               /**< ERM Status Register 2, offset: 0x18 */
  uint8_t RESERVED_1[228];
  __I  uint32_t EAR0;                              /**< ERM Memory n Error Address Register, offset: 0x100 */
  __I  uint32_t SYN0;                              /**< ERM Memory n Syndrome Register, offset: 0x104 */
  __IO uint32_t CORR_ERR_CNT0;                     /**< ERM Memory n Correctable Error Count Register, offset: 0x108 */
  uint8_t RESERVED_2[4];
  __I  uint32_t EAR1;                              /**< ERM Memory n Error Address Register, offset: 0x110 */
  __I  uint32_t SYN1;                              /**< ERM Memory n Syndrome Register, offset: 0x114 */
  __IO uint32_t CORR_ERR_CNT1;                     /**< ERM Memory n Correctable Error Count Register, offset: 0x118 */
  uint8_t RESERVED_3[4];
  __I  uint32_t EAR2;                              /**< ERM Memory n Error Address Register, offset: 0x120 */
  __I  uint32_t SYN2;                              /**< ERM Memory n Syndrome Register, offset: 0x124 */
  __IO uint32_t CORR_ERR_CNT2;                     /**< ERM Memory n Correctable Error Count Register, offset: 0x128 */
  uint8_t RESERVED_4[4];
  __I  uint32_t EAR3;                              /**< ERM Memory n Error Address Register, offset: 0x130 */
  __I  uint32_t SYN3;                              /**< ERM Memory n Syndrome Register, offset: 0x134 */
  __IO uint32_t CORR_ERR_CNT3;                     /**< ERM Memory n Correctable Error Count Register, offset: 0x138 */
  uint8_t RESERVED_5[4];
  __I  uint32_t EAR4;                              /**< ERM Memory n Error Address Register, offset: 0x140 */
  __I  uint32_t SYN4;                              /**< ERM Memory n Syndrome Register, offset: 0x144 */
  __IO uint32_t CORR_ERR_CNT4;                     /**< ERM Memory n Correctable Error Count Register, offset: 0x148 */
  uint8_t RESERVED_6[4];
  __I  uint32_t EAR5;                              /**< ERM Memory n Error Address Register, offset: 0x150 */
  __I  uint32_t SYN5;                              /**< ERM Memory n Syndrome Register, offset: 0x154 */
  __IO uint32_t CORR_ERR_CNT5;                     /**< ERM Memory n Correctable Error Count Register, offset: 0x158 */
  uint8_t RESERVED_7[4];
  __I  uint32_t EAR6;                              /**< ERM Memory n Error Address Register, offset: 0x160 */
  __I  uint32_t SYN6;                              /**< ERM Memory n Syndrome Register, offset: 0x164 */
  __IO uint32_t CORR_ERR_CNT6;                     /**< ERM Memory n Correctable Error Count Register, offset: 0x168 */
  uint8_t RESERVED_8[4];
  __I  uint32_t EAR7;                              /**< ERM Memory n Error Address Register, offset: 0x170 */
  __I  uint32_t SYN7;                              /**< ERM Memory n Syndrome Register, offset: 0x174 */
  __IO uint32_t CORR_ERR_CNT7;                     /**< ERM Memory n Correctable Error Count Register, offset: 0x178 */
  uint8_t RESERVED_9[4];
  __I  uint32_t EAR8;                              /**< ERM Memory n Error Address Register, offset: 0x180 */
  __I  uint32_t SYN8;                              /**< ERM Memory n Syndrome Register, offset: 0x184 */
  __IO uint32_t CORR_ERR_CNT8;                     /**< ERM Memory n Correctable Error Count Register, offset: 0x188 */
  uint8_t RESERVED_10[4];
  __I  uint32_t EAR9;                              /**< ERM Memory n Error Address Register, offset: 0x190 */
  __I  uint32_t SYN9;                              /**< ERM Memory n Syndrome Register, offset: 0x194 */
  __IO uint32_t CORR_ERR_CNT9;                     /**< ERM Memory n Correctable Error Count Register, offset: 0x198 */
  uint8_t RESERVED_11[4];
  __I  uint32_t EAR10;                             /**< ERM Memory n Error Address Register, offset: 0x1A0 */
  __I  uint32_t SYN10;                             /**< ERM Memory n Syndrome Register, offset: 0x1A4 */
  __IO uint32_t CORR_ERR_CNT10;                    /**< ERM Memory n Correctable Error Count Register, offset: 0x1A8 */
  uint8_t RESERVED_12[4];
  __I  uint32_t EAR11;                             /**< ERM Memory n Error Address Register, offset: 0x1B0 */
  __I  uint32_t SYN11;                             /**< ERM Memory n Syndrome Register, offset: 0x1B4 */
  __IO uint32_t CORR_ERR_CNT11;                    /**< ERM Memory n Correctable Error Count Register, offset: 0x1B8 */
  uint8_t RESERVED_13[4];
  __I  uint32_t EAR12;                             /**< ERM Memory n Error Address Register, offset: 0x1C0 */
  __I  uint32_t SYN12;                             /**< ERM Memory n Syndrome Register, offset: 0x1C4 */
  __IO uint32_t CORR_ERR_CNT12;                    /**< ERM Memory n Correctable Error Count Register, offset: 0x1C8 */
  uint8_t RESERVED_14[4];
  __I  uint32_t EAR13;                             /**< ERM Memory n Error Address Register, offset: 0x1D0 */
  __I  uint32_t SYN13;                             /**< ERM Memory n Syndrome Register, offset: 0x1D4 */
  __IO uint32_t CORR_ERR_CNT13;                    /**< ERM Memory n Correctable Error Count Register, offset: 0x1D8 */
  uint8_t RESERVED_15[4];
  __I  uint32_t EAR14;                             /**< ERM Memory n Error Address Register, offset: 0x1E0 */
  __I  uint32_t SYN14;                             /**< ERM Memory n Syndrome Register, offset: 0x1E4 */
  __IO uint32_t CORR_ERR_CNT14;                    /**< ERM Memory n Correctable Error Count Register, offset: 0x1E8 */
  uint8_t RESERVED_16[4];
  __I  uint32_t EAR15;                             /**< ERM Memory n Error Address Register, offset: 0x1F0 */
  __I  uint32_t SYN15;                             /**< ERM Memory n Syndrome Register, offset: 0x1F4 */
  __IO uint32_t CORR_ERR_CNT15;                    /**< ERM Memory n Correctable Error Count Register, offset: 0x1F8 */
  uint8_t RESERVED_17[4];
  __I  uint32_t EAR16;                             /**< ERM Memory n Error Address Register, offset: 0x200 */
  __I  uint32_t SYN16;                             /**< ERM Memory n Syndrome Register, offset: 0x204 */
  __IO uint32_t CORR_ERR_CNT16;                    /**< ERM Memory n Correctable Error Count Register, offset: 0x208 */
  uint8_t RESERVED_18[4];
  __I  uint32_t EAR17;                             /**< ERM Memory n Error Address Register, offset: 0x210 */
  __I  uint32_t SYN17;                             /**< ERM Memory n Syndrome Register, offset: 0x214 */
  __IO uint32_t CORR_ERR_CNT17;                    /**< ERM Memory n Correctable Error Count Register, offset: 0x218 */
  uint8_t RESERVED_19[4];
  __I  uint32_t EAR18;                             /**< ERM Memory n Error Address Register, offset: 0x220 */
  __I  uint32_t SYN18;                             /**< ERM Memory n Syndrome Register, offset: 0x224 */
  __IO uint32_t CORR_ERR_CNT18;                    /**< ERM Memory n Correctable Error Count Register, offset: 0x228 */
  uint8_t RESERVED_20[4];
  __I  uint32_t EAR19;                             /**< ERM Memory n Error Address Register, offset: 0x230 */
  __I  uint32_t SYN19;                             /**< ERM Memory n Syndrome Register, offset: 0x234 */
  __IO uint32_t CORR_ERR_CNT19;                    /**< ERM Memory n Correctable Error Count Register, offset: 0x238 */
  uint8_t RESERVED_21[4];
  __I  uint32_t EAR20;                             /**< ERM Memory n Error Address Register, offset: 0x240 */
  __I  uint32_t SYN20;                             /**< ERM Memory n Syndrome Register, offset: 0x244 */
  __IO uint32_t CORR_ERR_CNT20;                    /**< ERM Memory n Correctable Error Count Register, offset: 0x248 */
  uint8_t RESERVED_22[4];
  __I  uint32_t EAR21;                             /**< ERM Memory n Error Address Register, offset: 0x250 */
  __I  uint32_t SYN21;                             /**< ERM Memory n Syndrome Register, offset: 0x254 */
  __IO uint32_t CORR_ERR_CNT21;                    /**< ERM Memory n Correctable Error Count Register, offset: 0x258 */
  uint8_t RESERVED_23[4];
  __I  uint32_t EAR22;                             /**< ERM Memory n Error Address Register, offset: 0x260 */
  __I  uint32_t SYN22;                             /**< ERM Memory n Syndrome Register, offset: 0x264 */
  __IO uint32_t CORR_ERR_CNT22;                    /**< ERM Memory n Correctable Error Count Register, offset: 0x268 */
  uint8_t RESERVED_24[4];
  __I  uint32_t EAR23;                             /**< ERM Memory n Error Address Register, offset: 0x270 */
  __I  uint32_t SYN23;                             /**< ERM Memory n Syndrome Register, offset: 0x274 */
  __IO uint32_t CORR_ERR_CNT23;                    /**< ERM Memory n Correctable Error Count Register, offset: 0x278 */
} ERM_Type, *ERM_MemMapPtr;

/** Number of instances of the ERM module. */
#define ERM_INSTANCE_COUNT                       (24u)

/* ERM - Peripheral instance base addresses */
/** Peripheral ERM_CPU0 base address */
#define ERM_CPU0_BASE                            (0x40318000u)
/** Peripheral ERM_CPU0 base pointer */
#define ERM_CPU0                                 ((ERM_Type *)ERM_CPU0_BASE)
/** Peripheral ERM_CPU1 base address */
#define ERM_CPU1_BASE                            (0x40318400u)
/** Peripheral ERM_CPU1 base pointer */
#define ERM_CPU1                                 ((ERM_Type *)ERM_CPU1_BASE)
/** Peripheral ERM_CPU2 base address */
#define ERM_CPU2_BASE                            (0x40318800u)
/** Peripheral ERM_CPU2 base pointer */
#define ERM_CPU2                                 ((ERM_Type *)ERM_CPU2_BASE)
/** Peripheral ERM_EDMA0 base address */
#define ERM_EDMA0_BASE                           (0x40314400u)
/** Peripheral ERM_EDMA0 base pointer */
#define ERM_EDMA0                                ((ERM_Type *)ERM_EDMA0_BASE)
/** Peripheral ERM_EDMA1 base address */
#define ERM_EDMA1_BASE                           (0x40314800u)
/** Peripheral ERM_EDMA1 base pointer */
#define ERM_EDMA1                                ((ERM_Type *)ERM_EDMA1_BASE)
/** Peripheral ERM_PER base address */
#define ERM_PER_BASE                             (0x40314000u)
/** Peripheral ERM_PER base pointer */
#define ERM_PER                                  ((ERM_Type *)ERM_PER_BASE)
/** Peripheral ERM_PFE0 base address */
#define ERM_PFE0_BASE                            (0x44034000u)
/** Peripheral ERM_PFE0 base pointer */
#define ERM_PFE0                                 ((ERM_Type *)ERM_PFE0_BASE)
/** Peripheral ERM_PFE1 base address */
#define ERM_PFE1_BASE                            (0x44035000u)
/** Peripheral ERM_PFE1 base pointer */
#define ERM_PFE1                                 ((ERM_Type *)ERM_PFE1_BASE)
/** Peripheral ERM_PFE2 base address */
#define ERM_PFE2_BASE                            (0x44036000u)
/** Peripheral ERM_PFE2 base pointer */
#define ERM_PFE2                                 ((ERM_Type *)ERM_PFE2_BASE)
/** Peripheral ERM_PFE3 base address */
#define ERM_PFE3_BASE                            (0x44037000u)
/** Peripheral ERM_PFE3 base pointer */
#define ERM_PFE3                                 ((ERM_Type *)ERM_PFE3_BASE)
/** Peripheral ERM_PFE4 base address */
#define ERM_PFE4_BASE                            (0x44038000u)
/** Peripheral ERM_PFE4 base pointer */
#define ERM_PFE4                                 ((ERM_Type *)ERM_PFE4_BASE)
/** Peripheral ERM_PFE5 base address */
#define ERM_PFE5_BASE                            (0x44039000u)
/** Peripheral ERM_PFE5 base pointer */
#define ERM_PFE5                                 ((ERM_Type *)ERM_PFE5_BASE)
/** Peripheral ERM_PFE6 base address */
#define ERM_PFE6_BASE                            (0x4403A000u)
/** Peripheral ERM_PFE6 base pointer */
#define ERM_PFE6                                 ((ERM_Type *)ERM_PFE6_BASE)
/** Peripheral ERM_PFE7 base address */
#define ERM_PFE7_BASE                            (0x4403B000u)
/** Peripheral ERM_PFE7 base pointer */
#define ERM_PFE7                                 ((ERM_Type *)ERM_PFE7_BASE)
/** Peripheral ERM_PFE8 base address */
#define ERM_PFE8_BASE                            (0x4403C000u)
/** Peripheral ERM_PFE8 base pointer */
#define ERM_PFE8                                 ((ERM_Type *)ERM_PFE8_BASE)
/** Peripheral ERM_PFE9 base address */
#define ERM_PFE9_BASE                            (0x4403D000u)
/** Peripheral ERM_PFE9 base pointer */
#define ERM_PFE9                                 ((ERM_Type *)ERM_PFE9_BASE)
/** Peripheral ERM_PFE10 base address */
#define ERM_PFE10_BASE                           (0x4403E000u)
/** Peripheral ERM_PFE10 base pointer */
#define ERM_PFE10                                ((ERM_Type *)ERM_PFE10_BASE)
/** Peripheral ERM_PFE11 base address */
#define ERM_PFE11_BASE                           (0x4403F000u)
/** Peripheral ERM_PFE11 base pointer */
#define ERM_PFE11                                ((ERM_Type *)ERM_PFE11_BASE)
/** Peripheral ERM_PFE12 base address */
#define ERM_PFE12_BASE                           (0x44040000u)
/** Peripheral ERM_PFE12 base pointer */
#define ERM_PFE12                                ((ERM_Type *)ERM_PFE12_BASE)
/** Peripheral ERM_PFE13 base address */
#define ERM_PFE13_BASE                           (0x44041000u)
/** Peripheral ERM_PFE13 base pointer */
#define ERM_PFE13                                ((ERM_Type *)ERM_PFE13_BASE)
/** Peripheral ERM_PFE14 base address */
#define ERM_PFE14_BASE                           (0x44042000u)
/** Peripheral ERM_PFE14 base pointer */
#define ERM_PFE14                                ((ERM_Type *)ERM_PFE14_BASE)
/** Peripheral ERM_PFE15 base address */
#define ERM_PFE15_BASE                           (0x44043000u)
/** Peripheral ERM_PFE15 base pointer */
#define ERM_PFE15                                ((ERM_Type *)ERM_PFE15_BASE)
/** Peripheral ERM_STDBY_SRAM base address */
#define ERM_STDBY_SRAM_BASE                      (0x44044000u)
/** Peripheral ERM_STDBY_SRAM base pointer */
#define ERM_STDBY_SRAM                           ((ERM_Type *)ERM_STDBY_SRAM_BASE)
/** Peripheral LLCE__ERM_LLCE base address */
#define LLCE__ERM_LLCE_BASE                      (0x44030000u)
/** Peripheral LLCE__ERM_LLCE base pointer */
#define LLCE__ERM_LLCE                           ((ERM_Type *)LLCE__ERM_LLCE_BASE)
/** Array initializer of ERM peripheral base addresses */
#define ERM_BASE_ADDRS                           { ERM_CPU0_BASE, ERM_CPU1_BASE, ERM_CPU2_BASE, ERM_EDMA0_BASE, ERM_EDMA1_BASE, ERM_PER_BASE, ERM_PFE0_BASE, ERM_PFE1_BASE, ERM_PFE2_BASE, ERM_PFE3_BASE, ERM_PFE4_BASE, ERM_PFE5_BASE, ERM_PFE6_BASE, ERM_PFE7_BASE, ERM_PFE8_BASE, ERM_PFE9_BASE, ERM_PFE10_BASE, ERM_PFE11_BASE, ERM_PFE12_BASE, ERM_PFE13_BASE, ERM_PFE14_BASE, ERM_PFE15_BASE, ERM_STDBY_SRAM_BASE, LLCE__ERM_LLCE_BASE }
/** Array initializer of ERM peripheral base pointers */
#define ERM_BASE_PTRS                            { ERM_CPU0, ERM_CPU1, ERM_CPU2, ERM_EDMA0, ERM_EDMA1, ERM_PER, ERM_PFE0, ERM_PFE1, ERM_PFE2, ERM_PFE3, ERM_PFE4, ERM_PFE5, ERM_PFE6, ERM_PFE7, ERM_PFE8, ERM_PFE9, ERM_PFE10, ERM_PFE11, ERM_PFE12, ERM_PFE13, ERM_PFE14, ERM_PFE15, ERM_STDBY_SRAM, LLCE__ERM_LLCE }

/* ----------------------------------------------------------------------------
   -- ERM Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup ERM_Register_Masks ERM Register Masks
 * @{
 */

/*! @name CR0 - ERM Configuration Register 0 */
/*! @{ */
#define ERM_CR0_ENCIE7_MASK                      (0x4U)
#define ERM_CR0_ENCIE7_SHIFT                     (2U)
#define ERM_CR0_ENCIE7_WIDTH                     (1U)
#define ERM_CR0_ENCIE7(x)                        (((uint32_t)(((uint32_t)(x)) << ERM_CR0_ENCIE7_SHIFT)) & ERM_CR0_ENCIE7_MASK)
#define ERM_CR0_ESCIE7_MASK                      (0x8U)
#define ERM_CR0_ESCIE7_SHIFT                     (3U)
#define ERM_CR0_ESCIE7_WIDTH                     (1U)
#define ERM_CR0_ESCIE7(x)                        (((uint32_t)(((uint32_t)(x)) << ERM_CR0_ESCIE7_SHIFT)) & ERM_CR0_ESCIE7_MASK)
#define ERM_CR0_ENCIE6_MASK                      (0x40U)
#define ERM_CR0_ENCIE6_SHIFT                     (6U)
#define ERM_CR0_ENCIE6_WIDTH                     (1U)
#define ERM_CR0_ENCIE6(x)                        (((uint32_t)(((uint32_t)(x)) << ERM_CR0_ENCIE6_SHIFT)) & ERM_CR0_ENCIE6_MASK)
#define ERM_CR0_ESCIE6_MASK                      (0x80U)
#define ERM_CR0_ESCIE6_SHIFT                     (7U)
#define ERM_CR0_ESCIE6_WIDTH                     (1U)
#define ERM_CR0_ESCIE6(x)                        (((uint32_t)(((uint32_t)(x)) << ERM_CR0_ESCIE6_SHIFT)) & ERM_CR0_ESCIE6_MASK)
#define ERM_CR0_ENCIE5_MASK                      (0x400U)
#define ERM_CR0_ENCIE5_SHIFT                     (10U)
#define ERM_CR0_ENCIE5_WIDTH                     (1U)
#define ERM_CR0_ENCIE5(x)                        (((uint32_t)(((uint32_t)(x)) << ERM_CR0_ENCIE5_SHIFT)) & ERM_CR0_ENCIE5_MASK)
#define ERM_CR0_ESCIE5_MASK                      (0x800U)
#define ERM_CR0_ESCIE5_SHIFT                     (11U)
#define ERM_CR0_ESCIE5_WIDTH                     (1U)
#define ERM_CR0_ESCIE5(x)                        (((uint32_t)(((uint32_t)(x)) << ERM_CR0_ESCIE5_SHIFT)) & ERM_CR0_ESCIE5_MASK)
#define ERM_CR0_ENCIE4_MASK                      (0x4000U)
#define ERM_CR0_ENCIE4_SHIFT                     (14U)
#define ERM_CR0_ENCIE4_WIDTH                     (1U)
#define ERM_CR0_ENCIE4(x)                        (((uint32_t)(((uint32_t)(x)) << ERM_CR0_ENCIE4_SHIFT)) & ERM_CR0_ENCIE4_MASK)
#define ERM_CR0_ESCIE4_MASK                      (0x8000U)
#define ERM_CR0_ESCIE4_SHIFT                     (15U)
#define ERM_CR0_ESCIE4_WIDTH                     (1U)
#define ERM_CR0_ESCIE4(x)                        (((uint32_t)(((uint32_t)(x)) << ERM_CR0_ESCIE4_SHIFT)) & ERM_CR0_ESCIE4_MASK)
#define ERM_CR0_ENCIE3_MASK                      (0x40000U)
#define ERM_CR0_ENCIE3_SHIFT                     (18U)
#define ERM_CR0_ENCIE3_WIDTH                     (1U)
#define ERM_CR0_ENCIE3(x)                        (((uint32_t)(((uint32_t)(x)) << ERM_CR0_ENCIE3_SHIFT)) & ERM_CR0_ENCIE3_MASK)
#define ERM_CR0_ESCIE3_MASK                      (0x80000U)
#define ERM_CR0_ESCIE3_SHIFT                     (19U)
#define ERM_CR0_ESCIE3_WIDTH                     (1U)
#define ERM_CR0_ESCIE3(x)                        (((uint32_t)(((uint32_t)(x)) << ERM_CR0_ESCIE3_SHIFT)) & ERM_CR0_ESCIE3_MASK)
#define ERM_CR0_ENCIE2_MASK                      (0x400000U)
#define ERM_CR0_ENCIE2_SHIFT                     (22U)
#define ERM_CR0_ENCIE2_WIDTH                     (1U)
#define ERM_CR0_ENCIE2(x)                        (((uint32_t)(((uint32_t)(x)) << ERM_CR0_ENCIE2_SHIFT)) & ERM_CR0_ENCIE2_MASK)
#define ERM_CR0_ESCIE2_MASK                      (0x800000U)
#define ERM_CR0_ESCIE2_SHIFT                     (23U)
#define ERM_CR0_ESCIE2_WIDTH                     (1U)
#define ERM_CR0_ESCIE2(x)                        (((uint32_t)(((uint32_t)(x)) << ERM_CR0_ESCIE2_SHIFT)) & ERM_CR0_ESCIE2_MASK)
#define ERM_CR0_ENCIE1_MASK                      (0x4000000U)
#define ERM_CR0_ENCIE1_SHIFT                     (26U)
#define ERM_CR0_ENCIE1_WIDTH                     (1U)
#define ERM_CR0_ENCIE1(x)                        (((uint32_t)(((uint32_t)(x)) << ERM_CR0_ENCIE1_SHIFT)) & ERM_CR0_ENCIE1_MASK)
#define ERM_CR0_ESCIE1_MASK                      (0x8000000U)
#define ERM_CR0_ESCIE1_SHIFT                     (27U)
#define ERM_CR0_ESCIE1_WIDTH                     (1U)
#define ERM_CR0_ESCIE1(x)                        (((uint32_t)(((uint32_t)(x)) << ERM_CR0_ESCIE1_SHIFT)) & ERM_CR0_ESCIE1_MASK)
#define ERM_CR0_ENCIE0_MASK                      (0x40000000U)
#define ERM_CR0_ENCIE0_SHIFT                     (30U)
#define ERM_CR0_ENCIE0_WIDTH                     (1U)
#define ERM_CR0_ENCIE0(x)                        (((uint32_t)(((uint32_t)(x)) << ERM_CR0_ENCIE0_SHIFT)) & ERM_CR0_ENCIE0_MASK)
#define ERM_CR0_ESCIE0_MASK                      (0x80000000U)
#define ERM_CR0_ESCIE0_SHIFT                     (31U)
#define ERM_CR0_ESCIE0_WIDTH                     (1U)
#define ERM_CR0_ESCIE0(x)                        (((uint32_t)(((uint32_t)(x)) << ERM_CR0_ESCIE0_SHIFT)) & ERM_CR0_ESCIE0_MASK)
/*! @} */

/*! @name CR1 - ERM Configuration Register 1 */
/*! @{ */
#define ERM_CR1_ENCIE15_MASK                     (0x4U)
#define ERM_CR1_ENCIE15_SHIFT                    (2U)
#define ERM_CR1_ENCIE15_WIDTH                    (1U)
#define ERM_CR1_ENCIE15(x)                       (((uint32_t)(((uint32_t)(x)) << ERM_CR1_ENCIE15_SHIFT)) & ERM_CR1_ENCIE15_MASK)
#define ERM_CR1_ESCIE15_MASK                     (0x8U)
#define ERM_CR1_ESCIE15_SHIFT                    (3U)
#define ERM_CR1_ESCIE15_WIDTH                    (1U)
#define ERM_CR1_ESCIE15(x)                       (((uint32_t)(((uint32_t)(x)) << ERM_CR1_ESCIE15_SHIFT)) & ERM_CR1_ESCIE15_MASK)
#define ERM_CR1_ENCIE14_MASK                     (0x40U)
#define ERM_CR1_ENCIE14_SHIFT                    (6U)
#define ERM_CR1_ENCIE14_WIDTH                    (1U)
#define ERM_CR1_ENCIE14(x)                       (((uint32_t)(((uint32_t)(x)) << ERM_CR1_ENCIE14_SHIFT)) & ERM_CR1_ENCIE14_MASK)
#define ERM_CR1_ESCIE14_MASK                     (0x80U)
#define ERM_CR1_ESCIE14_SHIFT                    (7U)
#define ERM_CR1_ESCIE14_WIDTH                    (1U)
#define ERM_CR1_ESCIE14(x)                       (((uint32_t)(((uint32_t)(x)) << ERM_CR1_ESCIE14_SHIFT)) & ERM_CR1_ESCIE14_MASK)
#define ERM_CR1_ENCIE13_MASK                     (0x400U)
#define ERM_CR1_ENCIE13_SHIFT                    (10U)
#define ERM_CR1_ENCIE13_WIDTH                    (1U)
#define ERM_CR1_ENCIE13(x)                       (((uint32_t)(((uint32_t)(x)) << ERM_CR1_ENCIE13_SHIFT)) & ERM_CR1_ENCIE13_MASK)
#define ERM_CR1_ESCIE13_MASK                     (0x800U)
#define ERM_CR1_ESCIE13_SHIFT                    (11U)
#define ERM_CR1_ESCIE13_WIDTH                    (1U)
#define ERM_CR1_ESCIE13(x)                       (((uint32_t)(((uint32_t)(x)) << ERM_CR1_ESCIE13_SHIFT)) & ERM_CR1_ESCIE13_MASK)
#define ERM_CR1_ENCIE12_MASK                     (0x4000U)
#define ERM_CR1_ENCIE12_SHIFT                    (14U)
#define ERM_CR1_ENCIE12_WIDTH                    (1U)
#define ERM_CR1_ENCIE12(x)                       (((uint32_t)(((uint32_t)(x)) << ERM_CR1_ENCIE12_SHIFT)) & ERM_CR1_ENCIE12_MASK)
#define ERM_CR1_ESCIE12_MASK                     (0x8000U)
#define ERM_CR1_ESCIE12_SHIFT                    (15U)
#define ERM_CR1_ESCIE12_WIDTH                    (1U)
#define ERM_CR1_ESCIE12(x)                       (((uint32_t)(((uint32_t)(x)) << ERM_CR1_ESCIE12_SHIFT)) & ERM_CR1_ESCIE12_MASK)
#define ERM_CR1_ENCIE11_MASK                     (0x40000U)
#define ERM_CR1_ENCIE11_SHIFT                    (18U)
#define ERM_CR1_ENCIE11_WIDTH                    (1U)
#define ERM_CR1_ENCIE11(x)                       (((uint32_t)(((uint32_t)(x)) << ERM_CR1_ENCIE11_SHIFT)) & ERM_CR1_ENCIE11_MASK)
#define ERM_CR1_ESCIE11_MASK                     (0x80000U)
#define ERM_CR1_ESCIE11_SHIFT                    (19U)
#define ERM_CR1_ESCIE11_WIDTH                    (1U)
#define ERM_CR1_ESCIE11(x)                       (((uint32_t)(((uint32_t)(x)) << ERM_CR1_ESCIE11_SHIFT)) & ERM_CR1_ESCIE11_MASK)
#define ERM_CR1_ENCIE10_MASK                     (0x400000U)
#define ERM_CR1_ENCIE10_SHIFT                    (22U)
#define ERM_CR1_ENCIE10_WIDTH                    (1U)
#define ERM_CR1_ENCIE10(x)                       (((uint32_t)(((uint32_t)(x)) << ERM_CR1_ENCIE10_SHIFT)) & ERM_CR1_ENCIE10_MASK)
#define ERM_CR1_ESCIE10_MASK                     (0x800000U)
#define ERM_CR1_ESCIE10_SHIFT                    (23U)
#define ERM_CR1_ESCIE10_WIDTH                    (1U)
#define ERM_CR1_ESCIE10(x)                       (((uint32_t)(((uint32_t)(x)) << ERM_CR1_ESCIE10_SHIFT)) & ERM_CR1_ESCIE10_MASK)
#define ERM_CR1_ENCIE9_MASK                      (0x4000000U)
#define ERM_CR1_ENCIE9_SHIFT                     (26U)
#define ERM_CR1_ENCIE9_WIDTH                     (1U)
#define ERM_CR1_ENCIE9(x)                        (((uint32_t)(((uint32_t)(x)) << ERM_CR1_ENCIE9_SHIFT)) & ERM_CR1_ENCIE9_MASK)
#define ERM_CR1_ESCIE9_MASK                      (0x8000000U)
#define ERM_CR1_ESCIE9_SHIFT                     (27U)
#define ERM_CR1_ESCIE9_WIDTH                     (1U)
#define ERM_CR1_ESCIE9(x)                        (((uint32_t)(((uint32_t)(x)) << ERM_CR1_ESCIE9_SHIFT)) & ERM_CR1_ESCIE9_MASK)
#define ERM_CR1_ENCIE8_MASK                      (0x40000000U)
#define ERM_CR1_ENCIE8_SHIFT                     (30U)
#define ERM_CR1_ENCIE8_WIDTH                     (1U)
#define ERM_CR1_ENCIE8(x)                        (((uint32_t)(((uint32_t)(x)) << ERM_CR1_ENCIE8_SHIFT)) & ERM_CR1_ENCIE8_MASK)
#define ERM_CR1_ESCIE8_MASK                      (0x80000000U)
#define ERM_CR1_ESCIE8_SHIFT                     (31U)
#define ERM_CR1_ESCIE8_WIDTH                     (1U)
#define ERM_CR1_ESCIE8(x)                        (((uint32_t)(((uint32_t)(x)) << ERM_CR1_ESCIE8_SHIFT)) & ERM_CR1_ESCIE8_MASK)
/*! @} */

/*! @name CR2 - ERM Configuration Register 2 */
/*! @{ */
#define ERM_CR2_ENCIE23_MASK                     (0x4U)
#define ERM_CR2_ENCIE23_SHIFT                    (2U)
#define ERM_CR2_ENCIE23_WIDTH                    (1U)
#define ERM_CR2_ENCIE23(x)                       (((uint32_t)(((uint32_t)(x)) << ERM_CR2_ENCIE23_SHIFT)) & ERM_CR2_ENCIE23_MASK)
#define ERM_CR2_ESCIE23_MASK                     (0x8U)
#define ERM_CR2_ESCIE23_SHIFT                    (3U)
#define ERM_CR2_ESCIE23_WIDTH                    (1U)
#define ERM_CR2_ESCIE23(x)                       (((uint32_t)(((uint32_t)(x)) << ERM_CR2_ESCIE23_SHIFT)) & ERM_CR2_ESCIE23_MASK)
#define ERM_CR2_ENCIE22_MASK                     (0x40U)
#define ERM_CR2_ENCIE22_SHIFT                    (6U)
#define ERM_CR2_ENCIE22_WIDTH                    (1U)
#define ERM_CR2_ENCIE22(x)                       (((uint32_t)(((uint32_t)(x)) << ERM_CR2_ENCIE22_SHIFT)) & ERM_CR2_ENCIE22_MASK)
#define ERM_CR2_ESCIE22_MASK                     (0x80U)
#define ERM_CR2_ESCIE22_SHIFT                    (7U)
#define ERM_CR2_ESCIE22_WIDTH                    (1U)
#define ERM_CR2_ESCIE22(x)                       (((uint32_t)(((uint32_t)(x)) << ERM_CR2_ESCIE22_SHIFT)) & ERM_CR2_ESCIE22_MASK)
#define ERM_CR2_ENCIE21_MASK                     (0x400U)
#define ERM_CR2_ENCIE21_SHIFT                    (10U)
#define ERM_CR2_ENCIE21_WIDTH                    (1U)
#define ERM_CR2_ENCIE21(x)                       (((uint32_t)(((uint32_t)(x)) << ERM_CR2_ENCIE21_SHIFT)) & ERM_CR2_ENCIE21_MASK)
#define ERM_CR2_ESCIE21_MASK                     (0x800U)
#define ERM_CR2_ESCIE21_SHIFT                    (11U)
#define ERM_CR2_ESCIE21_WIDTH                    (1U)
#define ERM_CR2_ESCIE21(x)                       (((uint32_t)(((uint32_t)(x)) << ERM_CR2_ESCIE21_SHIFT)) & ERM_CR2_ESCIE21_MASK)
#define ERM_CR2_ENCIE20_MASK                     (0x4000U)
#define ERM_CR2_ENCIE20_SHIFT                    (14U)
#define ERM_CR2_ENCIE20_WIDTH                    (1U)
#define ERM_CR2_ENCIE20(x)                       (((uint32_t)(((uint32_t)(x)) << ERM_CR2_ENCIE20_SHIFT)) & ERM_CR2_ENCIE20_MASK)
#define ERM_CR2_ESCIE20_MASK                     (0x8000U)
#define ERM_CR2_ESCIE20_SHIFT                    (15U)
#define ERM_CR2_ESCIE20_WIDTH                    (1U)
#define ERM_CR2_ESCIE20(x)                       (((uint32_t)(((uint32_t)(x)) << ERM_CR2_ESCIE20_SHIFT)) & ERM_CR2_ESCIE20_MASK)
#define ERM_CR2_ENCIE19_MASK                     (0x40000U)
#define ERM_CR2_ENCIE19_SHIFT                    (18U)
#define ERM_CR2_ENCIE19_WIDTH                    (1U)
#define ERM_CR2_ENCIE19(x)                       (((uint32_t)(((uint32_t)(x)) << ERM_CR2_ENCIE19_SHIFT)) & ERM_CR2_ENCIE19_MASK)
#define ERM_CR2_ESCIE19_MASK                     (0x80000U)
#define ERM_CR2_ESCIE19_SHIFT                    (19U)
#define ERM_CR2_ESCIE19_WIDTH                    (1U)
#define ERM_CR2_ESCIE19(x)                       (((uint32_t)(((uint32_t)(x)) << ERM_CR2_ESCIE19_SHIFT)) & ERM_CR2_ESCIE19_MASK)
#define ERM_CR2_ENCIE18_MASK                     (0x400000U)
#define ERM_CR2_ENCIE18_SHIFT                    (22U)
#define ERM_CR2_ENCIE18_WIDTH                    (1U)
#define ERM_CR2_ENCIE18(x)                       (((uint32_t)(((uint32_t)(x)) << ERM_CR2_ENCIE18_SHIFT)) & ERM_CR2_ENCIE18_MASK)
#define ERM_CR2_ESCIE18_MASK                     (0x800000U)
#define ERM_CR2_ESCIE18_SHIFT                    (23U)
#define ERM_CR2_ESCIE18_WIDTH                    (1U)
#define ERM_CR2_ESCIE18(x)                       (((uint32_t)(((uint32_t)(x)) << ERM_CR2_ESCIE18_SHIFT)) & ERM_CR2_ESCIE18_MASK)
#define ERM_CR2_ENCIE17_MASK                     (0x4000000U)
#define ERM_CR2_ENCIE17_SHIFT                    (26U)
#define ERM_CR2_ENCIE17_WIDTH                    (1U)
#define ERM_CR2_ENCIE17(x)                       (((uint32_t)(((uint32_t)(x)) << ERM_CR2_ENCIE17_SHIFT)) & ERM_CR2_ENCIE17_MASK)
#define ERM_CR2_ESCIE17_MASK                     (0x8000000U)
#define ERM_CR2_ESCIE17_SHIFT                    (27U)
#define ERM_CR2_ESCIE17_WIDTH                    (1U)
#define ERM_CR2_ESCIE17(x)                       (((uint32_t)(((uint32_t)(x)) << ERM_CR2_ESCIE17_SHIFT)) & ERM_CR2_ESCIE17_MASK)
#define ERM_CR2_ENCIE16_MASK                     (0x40000000U)
#define ERM_CR2_ENCIE16_SHIFT                    (30U)
#define ERM_CR2_ENCIE16_WIDTH                    (1U)
#define ERM_CR2_ENCIE16(x)                       (((uint32_t)(((uint32_t)(x)) << ERM_CR2_ENCIE16_SHIFT)) & ERM_CR2_ENCIE16_MASK)
#define ERM_CR2_ESCIE16_MASK                     (0x80000000U)
#define ERM_CR2_ESCIE16_SHIFT                    (31U)
#define ERM_CR2_ESCIE16_WIDTH                    (1U)
#define ERM_CR2_ESCIE16(x)                       (((uint32_t)(((uint32_t)(x)) << ERM_CR2_ESCIE16_SHIFT)) & ERM_CR2_ESCIE16_MASK)
/*! @} */

/*! @name SR0 - ERM Status Register 0 */
/*! @{ */
#define ERM_SR0_NCE7_MASK                        (0x4U)
#define ERM_SR0_NCE7_SHIFT                       (2U)
#define ERM_SR0_NCE7_WIDTH                       (1U)
#define ERM_SR0_NCE7(x)                          (((uint32_t)(((uint32_t)(x)) << ERM_SR0_NCE7_SHIFT)) & ERM_SR0_NCE7_MASK)
#define ERM_SR0_SBC7_MASK                        (0x8U)
#define ERM_SR0_SBC7_SHIFT                       (3U)
#define ERM_SR0_SBC7_WIDTH                       (1U)
#define ERM_SR0_SBC7(x)                          (((uint32_t)(((uint32_t)(x)) << ERM_SR0_SBC7_SHIFT)) & ERM_SR0_SBC7_MASK)
#define ERM_SR0_NCE6_MASK                        (0x40U)
#define ERM_SR0_NCE6_SHIFT                       (6U)
#define ERM_SR0_NCE6_WIDTH                       (1U)
#define ERM_SR0_NCE6(x)                          (((uint32_t)(((uint32_t)(x)) << ERM_SR0_NCE6_SHIFT)) & ERM_SR0_NCE6_MASK)
#define ERM_SR0_SBC6_MASK                        (0x80U)
#define ERM_SR0_SBC6_SHIFT                       (7U)
#define ERM_SR0_SBC6_WIDTH                       (1U)
#define ERM_SR0_SBC6(x)                          (((uint32_t)(((uint32_t)(x)) << ERM_SR0_SBC6_SHIFT)) & ERM_SR0_SBC6_MASK)
#define ERM_SR0_NCE5_MASK                        (0x400U)
#define ERM_SR0_NCE5_SHIFT                       (10U)
#define ERM_SR0_NCE5_WIDTH                       (1U)
#define ERM_SR0_NCE5(x)                          (((uint32_t)(((uint32_t)(x)) << ERM_SR0_NCE5_SHIFT)) & ERM_SR0_NCE5_MASK)
#define ERM_SR0_SBC5_MASK                        (0x800U)
#define ERM_SR0_SBC5_SHIFT                       (11U)
#define ERM_SR0_SBC5_WIDTH                       (1U)
#define ERM_SR0_SBC5(x)                          (((uint32_t)(((uint32_t)(x)) << ERM_SR0_SBC5_SHIFT)) & ERM_SR0_SBC5_MASK)
#define ERM_SR0_NCE4_MASK                        (0x4000U)
#define ERM_SR0_NCE4_SHIFT                       (14U)
#define ERM_SR0_NCE4_WIDTH                       (1U)
#define ERM_SR0_NCE4(x)                          (((uint32_t)(((uint32_t)(x)) << ERM_SR0_NCE4_SHIFT)) & ERM_SR0_NCE4_MASK)
#define ERM_SR0_SBC4_MASK                        (0x8000U)
#define ERM_SR0_SBC4_SHIFT                       (15U)
#define ERM_SR0_SBC4_WIDTH                       (1U)
#define ERM_SR0_SBC4(x)                          (((uint32_t)(((uint32_t)(x)) << ERM_SR0_SBC4_SHIFT)) & ERM_SR0_SBC4_MASK)
#define ERM_SR0_NCE3_MASK                        (0x40000U)
#define ERM_SR0_NCE3_SHIFT                       (18U)
#define ERM_SR0_NCE3_WIDTH                       (1U)
#define ERM_SR0_NCE3(x)                          (((uint32_t)(((uint32_t)(x)) << ERM_SR0_NCE3_SHIFT)) & ERM_SR0_NCE3_MASK)
#define ERM_SR0_SBC3_MASK                        (0x80000U)
#define ERM_SR0_SBC3_SHIFT                       (19U)
#define ERM_SR0_SBC3_WIDTH                       (1U)
#define ERM_SR0_SBC3(x)                          (((uint32_t)(((uint32_t)(x)) << ERM_SR0_SBC3_SHIFT)) & ERM_SR0_SBC3_MASK)
#define ERM_SR0_NCE2_MASK                        (0x400000U)
#define ERM_SR0_NCE2_SHIFT                       (22U)
#define ERM_SR0_NCE2_WIDTH                       (1U)
#define ERM_SR0_NCE2(x)                          (((uint32_t)(((uint32_t)(x)) << ERM_SR0_NCE2_SHIFT)) & ERM_SR0_NCE2_MASK)
#define ERM_SR0_SBC2_MASK                        (0x800000U)
#define ERM_SR0_SBC2_SHIFT                       (23U)
#define ERM_SR0_SBC2_WIDTH                       (1U)
#define ERM_SR0_SBC2(x)                          (((uint32_t)(((uint32_t)(x)) << ERM_SR0_SBC2_SHIFT)) & ERM_SR0_SBC2_MASK)
#define ERM_SR0_NCE1_MASK                        (0x4000000U)
#define ERM_SR0_NCE1_SHIFT                       (26U)
#define ERM_SR0_NCE1_WIDTH                       (1U)
#define ERM_SR0_NCE1(x)                          (((uint32_t)(((uint32_t)(x)) << ERM_SR0_NCE1_SHIFT)) & ERM_SR0_NCE1_MASK)
#define ERM_SR0_SBC1_MASK                        (0x8000000U)
#define ERM_SR0_SBC1_SHIFT                       (27U)
#define ERM_SR0_SBC1_WIDTH                       (1U)
#define ERM_SR0_SBC1(x)                          (((uint32_t)(((uint32_t)(x)) << ERM_SR0_SBC1_SHIFT)) & ERM_SR0_SBC1_MASK)
#define ERM_SR0_NCE0_MASK                        (0x40000000U)
#define ERM_SR0_NCE0_SHIFT                       (30U)
#define ERM_SR0_NCE0_WIDTH                       (1U)
#define ERM_SR0_NCE0(x)                          (((uint32_t)(((uint32_t)(x)) << ERM_SR0_NCE0_SHIFT)) & ERM_SR0_NCE0_MASK)
#define ERM_SR0_SBC0_MASK                        (0x80000000U)
#define ERM_SR0_SBC0_SHIFT                       (31U)
#define ERM_SR0_SBC0_WIDTH                       (1U)
#define ERM_SR0_SBC0(x)                          (((uint32_t)(((uint32_t)(x)) << ERM_SR0_SBC0_SHIFT)) & ERM_SR0_SBC0_MASK)
/*! @} */

/*! @name SR1 - ERM Status Register 1 */
/*! @{ */
#define ERM_SR1_NCE15_MASK                       (0x4U)
#define ERM_SR1_NCE15_SHIFT                      (2U)
#define ERM_SR1_NCE15_WIDTH                      (1U)
#define ERM_SR1_NCE15(x)                         (((uint32_t)(((uint32_t)(x)) << ERM_SR1_NCE15_SHIFT)) & ERM_SR1_NCE15_MASK)
#define ERM_SR1_SBC15_MASK                       (0x8U)
#define ERM_SR1_SBC15_SHIFT                      (3U)
#define ERM_SR1_SBC15_WIDTH                      (1U)
#define ERM_SR1_SBC15(x)                         (((uint32_t)(((uint32_t)(x)) << ERM_SR1_SBC15_SHIFT)) & ERM_SR1_SBC15_MASK)
#define ERM_SR1_NCE14_MASK                       (0x40U)
#define ERM_SR1_NCE14_SHIFT                      (6U)
#define ERM_SR1_NCE14_WIDTH                      (1U)
#define ERM_SR1_NCE14(x)                         (((uint32_t)(((uint32_t)(x)) << ERM_SR1_NCE14_SHIFT)) & ERM_SR1_NCE14_MASK)
#define ERM_SR1_SBC14_MASK                       (0x80U)
#define ERM_SR1_SBC14_SHIFT                      (7U)
#define ERM_SR1_SBC14_WIDTH                      (1U)
#define ERM_SR1_SBC14(x)                         (((uint32_t)(((uint32_t)(x)) << ERM_SR1_SBC14_SHIFT)) & ERM_SR1_SBC14_MASK)
#define ERM_SR1_NCE13_MASK                       (0x400U)
#define ERM_SR1_NCE13_SHIFT                      (10U)
#define ERM_SR1_NCE13_WIDTH                      (1U)
#define ERM_SR1_NCE13(x)                         (((uint32_t)(((uint32_t)(x)) << ERM_SR1_NCE13_SHIFT)) & ERM_SR1_NCE13_MASK)
#define ERM_SR1_SBC13_MASK                       (0x800U)
#define ERM_SR1_SBC13_SHIFT                      (11U)
#define ERM_SR1_SBC13_WIDTH                      (1U)
#define ERM_SR1_SBC13(x)                         (((uint32_t)(((uint32_t)(x)) << ERM_SR1_SBC13_SHIFT)) & ERM_SR1_SBC13_MASK)
#define ERM_SR1_NCE12_MASK                       (0x4000U)
#define ERM_SR1_NCE12_SHIFT                      (14U)
#define ERM_SR1_NCE12_WIDTH                      (1U)
#define ERM_SR1_NCE12(x)                         (((uint32_t)(((uint32_t)(x)) << ERM_SR1_NCE12_SHIFT)) & ERM_SR1_NCE12_MASK)
#define ERM_SR1_SBC12_MASK                       (0x8000U)
#define ERM_SR1_SBC12_SHIFT                      (15U)
#define ERM_SR1_SBC12_WIDTH                      (1U)
#define ERM_SR1_SBC12(x)                         (((uint32_t)(((uint32_t)(x)) << ERM_SR1_SBC12_SHIFT)) & ERM_SR1_SBC12_MASK)
#define ERM_SR1_NCE11_MASK                       (0x40000U)
#define ERM_SR1_NCE11_SHIFT                      (18U)
#define ERM_SR1_NCE11_WIDTH                      (1U)
#define ERM_SR1_NCE11(x)                         (((uint32_t)(((uint32_t)(x)) << ERM_SR1_NCE11_SHIFT)) & ERM_SR1_NCE11_MASK)
#define ERM_SR1_SBC11_MASK                       (0x80000U)
#define ERM_SR1_SBC11_SHIFT                      (19U)
#define ERM_SR1_SBC11_WIDTH                      (1U)
#define ERM_SR1_SBC11(x)                         (((uint32_t)(((uint32_t)(x)) << ERM_SR1_SBC11_SHIFT)) & ERM_SR1_SBC11_MASK)
#define ERM_SR1_NCE10_MASK                       (0x400000U)
#define ERM_SR1_NCE10_SHIFT                      (22U)
#define ERM_SR1_NCE10_WIDTH                      (1U)
#define ERM_SR1_NCE10(x)                         (((uint32_t)(((uint32_t)(x)) << ERM_SR1_NCE10_SHIFT)) & ERM_SR1_NCE10_MASK)
#define ERM_SR1_SBC10_MASK                       (0x800000U)
#define ERM_SR1_SBC10_SHIFT                      (23U)
#define ERM_SR1_SBC10_WIDTH                      (1U)
#define ERM_SR1_SBC10(x)                         (((uint32_t)(((uint32_t)(x)) << ERM_SR1_SBC10_SHIFT)) & ERM_SR1_SBC10_MASK)
#define ERM_SR1_NCE9_MASK                        (0x4000000U)
#define ERM_SR1_NCE9_SHIFT                       (26U)
#define ERM_SR1_NCE9_WIDTH                       (1U)
#define ERM_SR1_NCE9(x)                          (((uint32_t)(((uint32_t)(x)) << ERM_SR1_NCE9_SHIFT)) & ERM_SR1_NCE9_MASK)
#define ERM_SR1_SBC9_MASK                        (0x8000000U)
#define ERM_SR1_SBC9_SHIFT                       (27U)
#define ERM_SR1_SBC9_WIDTH                       (1U)
#define ERM_SR1_SBC9(x)                          (((uint32_t)(((uint32_t)(x)) << ERM_SR1_SBC9_SHIFT)) & ERM_SR1_SBC9_MASK)
#define ERM_SR1_NCE8_MASK                        (0x40000000U)
#define ERM_SR1_NCE8_SHIFT                       (30U)
#define ERM_SR1_NCE8_WIDTH                       (1U)
#define ERM_SR1_NCE8(x)                          (((uint32_t)(((uint32_t)(x)) << ERM_SR1_NCE8_SHIFT)) & ERM_SR1_NCE8_MASK)
#define ERM_SR1_SBC8_MASK                        (0x80000000U)
#define ERM_SR1_SBC8_SHIFT                       (31U)
#define ERM_SR1_SBC8_WIDTH                       (1U)
#define ERM_SR1_SBC8(x)                          (((uint32_t)(((uint32_t)(x)) << ERM_SR1_SBC8_SHIFT)) & ERM_SR1_SBC8_MASK)
/*! @} */

/*! @name SR2 - ERM Status Register 2 */
/*! @{ */
#define ERM_SR2_NCE23_MASK                       (0x4U)
#define ERM_SR2_NCE23_SHIFT                      (2U)
#define ERM_SR2_NCE23_WIDTH                      (1U)
#define ERM_SR2_NCE23(x)                         (((uint32_t)(((uint32_t)(x)) << ERM_SR2_NCE23_SHIFT)) & ERM_SR2_NCE23_MASK)
#define ERM_SR2_SBC23_MASK                       (0x8U)
#define ERM_SR2_SBC23_SHIFT                      (3U)
#define ERM_SR2_SBC23_WIDTH                      (1U)
#define ERM_SR2_SBC23(x)                         (((uint32_t)(((uint32_t)(x)) << ERM_SR2_SBC23_SHIFT)) & ERM_SR2_SBC23_MASK)
#define ERM_SR2_NCE22_MASK                       (0x40U)
#define ERM_SR2_NCE22_SHIFT                      (6U)
#define ERM_SR2_NCE22_WIDTH                      (1U)
#define ERM_SR2_NCE22(x)                         (((uint32_t)(((uint32_t)(x)) << ERM_SR2_NCE22_SHIFT)) & ERM_SR2_NCE22_MASK)
#define ERM_SR2_SBC22_MASK                       (0x80U)
#define ERM_SR2_SBC22_SHIFT                      (7U)
#define ERM_SR2_SBC22_WIDTH                      (1U)
#define ERM_SR2_SBC22(x)                         (((uint32_t)(((uint32_t)(x)) << ERM_SR2_SBC22_SHIFT)) & ERM_SR2_SBC22_MASK)
#define ERM_SR2_NCE21_MASK                       (0x400U)
#define ERM_SR2_NCE21_SHIFT                      (10U)
#define ERM_SR2_NCE21_WIDTH                      (1U)
#define ERM_SR2_NCE21(x)                         (((uint32_t)(((uint32_t)(x)) << ERM_SR2_NCE21_SHIFT)) & ERM_SR2_NCE21_MASK)
#define ERM_SR2_SBC21_MASK                       (0x800U)
#define ERM_SR2_SBC21_SHIFT                      (11U)
#define ERM_SR2_SBC21_WIDTH                      (1U)
#define ERM_SR2_SBC21(x)                         (((uint32_t)(((uint32_t)(x)) << ERM_SR2_SBC21_SHIFT)) & ERM_SR2_SBC21_MASK)
#define ERM_SR2_NCE20_MASK                       (0x4000U)
#define ERM_SR2_NCE20_SHIFT                      (14U)
#define ERM_SR2_NCE20_WIDTH                      (1U)
#define ERM_SR2_NCE20(x)                         (((uint32_t)(((uint32_t)(x)) << ERM_SR2_NCE20_SHIFT)) & ERM_SR2_NCE20_MASK)
#define ERM_SR2_SBC20_MASK                       (0x8000U)
#define ERM_SR2_SBC20_SHIFT                      (15U)
#define ERM_SR2_SBC20_WIDTH                      (1U)
#define ERM_SR2_SBC20(x)                         (((uint32_t)(((uint32_t)(x)) << ERM_SR2_SBC20_SHIFT)) & ERM_SR2_SBC20_MASK)
#define ERM_SR2_NCE19_MASK                       (0x40000U)
#define ERM_SR2_NCE19_SHIFT                      (18U)
#define ERM_SR2_NCE19_WIDTH                      (1U)
#define ERM_SR2_NCE19(x)                         (((uint32_t)(((uint32_t)(x)) << ERM_SR2_NCE19_SHIFT)) & ERM_SR2_NCE19_MASK)
#define ERM_SR2_SBC19_MASK                       (0x80000U)
#define ERM_SR2_SBC19_SHIFT                      (19U)
#define ERM_SR2_SBC19_WIDTH                      (1U)
#define ERM_SR2_SBC19(x)                         (((uint32_t)(((uint32_t)(x)) << ERM_SR2_SBC19_SHIFT)) & ERM_SR2_SBC19_MASK)
#define ERM_SR2_NCE18_MASK                       (0x400000U)
#define ERM_SR2_NCE18_SHIFT                      (22U)
#define ERM_SR2_NCE18_WIDTH                      (1U)
#define ERM_SR2_NCE18(x)                         (((uint32_t)(((uint32_t)(x)) << ERM_SR2_NCE18_SHIFT)) & ERM_SR2_NCE18_MASK)
#define ERM_SR2_SBC18_MASK                       (0x800000U)
#define ERM_SR2_SBC18_SHIFT                      (23U)
#define ERM_SR2_SBC18_WIDTH                      (1U)
#define ERM_SR2_SBC18(x)                         (((uint32_t)(((uint32_t)(x)) << ERM_SR2_SBC18_SHIFT)) & ERM_SR2_SBC18_MASK)
#define ERM_SR2_NCE17_MASK                       (0x4000000U)
#define ERM_SR2_NCE17_SHIFT                      (26U)
#define ERM_SR2_NCE17_WIDTH                      (1U)
#define ERM_SR2_NCE17(x)                         (((uint32_t)(((uint32_t)(x)) << ERM_SR2_NCE17_SHIFT)) & ERM_SR2_NCE17_MASK)
#define ERM_SR2_SBC17_MASK                       (0x8000000U)
#define ERM_SR2_SBC17_SHIFT                      (27U)
#define ERM_SR2_SBC17_WIDTH                      (1U)
#define ERM_SR2_SBC17(x)                         (((uint32_t)(((uint32_t)(x)) << ERM_SR2_SBC17_SHIFT)) & ERM_SR2_SBC17_MASK)
#define ERM_SR2_NCE16_MASK                       (0x40000000U)
#define ERM_SR2_NCE16_SHIFT                      (30U)
#define ERM_SR2_NCE16_WIDTH                      (1U)
#define ERM_SR2_NCE16(x)                         (((uint32_t)(((uint32_t)(x)) << ERM_SR2_NCE16_SHIFT)) & ERM_SR2_NCE16_MASK)
#define ERM_SR2_SBC16_MASK                       (0x80000000U)
#define ERM_SR2_SBC16_SHIFT                      (31U)
#define ERM_SR2_SBC16_WIDTH                      (1U)
#define ERM_SR2_SBC16(x)                         (((uint32_t)(((uint32_t)(x)) << ERM_SR2_SBC16_SHIFT)) & ERM_SR2_SBC16_MASK)
/*! @} */

/*! @name EAR0 - ERM Memory n Error Address Register */
/*! @{ */
#define ERM_EAR0_EAR_MASK                        (0xFFFFFFFFU)
#define ERM_EAR0_EAR_SHIFT                       (0U)
#define ERM_EAR0_EAR_WIDTH                       (32U)
#define ERM_EAR0_EAR(x)                          (((uint32_t)(((uint32_t)(x)) << ERM_EAR0_EAR_SHIFT)) & ERM_EAR0_EAR_MASK)
/*! @} */

/*! @name SYN0 - ERM Memory n Syndrome Register */
/*! @{ */
#define ERM_SYN0_SYNDROME_MASK                   (0xFF000000U)
#define ERM_SYN0_SYNDROME_SHIFT                  (24U)
#define ERM_SYN0_SYNDROME_WIDTH                  (8U)
#define ERM_SYN0_SYNDROME(x)                     (((uint32_t)(((uint32_t)(x)) << ERM_SYN0_SYNDROME_SHIFT)) & ERM_SYN0_SYNDROME_MASK)
/*! @} */

/*! @name CORR_ERR_CNT0 - ERM Memory n Correctable Error Count Register */
/*! @{ */
#define ERM_CORR_ERR_CNT0_COUNT_MASK             (0xFFU)
#define ERM_CORR_ERR_CNT0_COUNT_SHIFT            (0U)
#define ERM_CORR_ERR_CNT0_COUNT_WIDTH            (8U)
#define ERM_CORR_ERR_CNT0_COUNT(x)               (((uint32_t)(((uint32_t)(x)) << ERM_CORR_ERR_CNT0_COUNT_SHIFT)) & ERM_CORR_ERR_CNT0_COUNT_MASK)
/*! @} */

/*! @name EAR1 - ERM Memory n Error Address Register */
/*! @{ */
#define ERM_EAR1_EAR_MASK                        (0xFFFFFFFFU)
#define ERM_EAR1_EAR_SHIFT                       (0U)
#define ERM_EAR1_EAR_WIDTH                       (32U)
#define ERM_EAR1_EAR(x)                          (((uint32_t)(((uint32_t)(x)) << ERM_EAR1_EAR_SHIFT)) & ERM_EAR1_EAR_MASK)
/*! @} */

/*! @name SYN1 - ERM Memory n Syndrome Register */
/*! @{ */
#define ERM_SYN1_SYNDROME_MASK                   (0xFF000000U)
#define ERM_SYN1_SYNDROME_SHIFT                  (24U)
#define ERM_SYN1_SYNDROME_WIDTH                  (8U)
#define ERM_SYN1_SYNDROME(x)                     (((uint32_t)(((uint32_t)(x)) << ERM_SYN1_SYNDROME_SHIFT)) & ERM_SYN1_SYNDROME_MASK)
/*! @} */

/*! @name CORR_ERR_CNT1 - ERM Memory n Correctable Error Count Register */
/*! @{ */
#define ERM_CORR_ERR_CNT1_COUNT_MASK             (0xFFU)
#define ERM_CORR_ERR_CNT1_COUNT_SHIFT            (0U)
#define ERM_CORR_ERR_CNT1_COUNT_WIDTH            (8U)
#define ERM_CORR_ERR_CNT1_COUNT(x)               (((uint32_t)(((uint32_t)(x)) << ERM_CORR_ERR_CNT1_COUNT_SHIFT)) & ERM_CORR_ERR_CNT1_COUNT_MASK)
/*! @} */

/*! @name EAR2 - ERM Memory n Error Address Register */
/*! @{ */
#define ERM_EAR2_EAR_MASK                        (0xFFFFFFFFU)
#define ERM_EAR2_EAR_SHIFT                       (0U)
#define ERM_EAR2_EAR_WIDTH                       (32U)
#define ERM_EAR2_EAR(x)                          (((uint32_t)(((uint32_t)(x)) << ERM_EAR2_EAR_SHIFT)) & ERM_EAR2_EAR_MASK)
/*! @} */

/*! @name SYN2 - ERM Memory n Syndrome Register */
/*! @{ */
#define ERM_SYN2_SYNDROME_MASK                   (0xFF000000U)
#define ERM_SYN2_SYNDROME_SHIFT                  (24U)
#define ERM_SYN2_SYNDROME_WIDTH                  (8U)
#define ERM_SYN2_SYNDROME(x)                     (((uint32_t)(((uint32_t)(x)) << ERM_SYN2_SYNDROME_SHIFT)) & ERM_SYN2_SYNDROME_MASK)
/*! @} */

/*! @name CORR_ERR_CNT2 - ERM Memory n Correctable Error Count Register */
/*! @{ */
#define ERM_CORR_ERR_CNT2_COUNT_MASK             (0xFFU)
#define ERM_CORR_ERR_CNT2_COUNT_SHIFT            (0U)
#define ERM_CORR_ERR_CNT2_COUNT_WIDTH            (8U)
#define ERM_CORR_ERR_CNT2_COUNT(x)               (((uint32_t)(((uint32_t)(x)) << ERM_CORR_ERR_CNT2_COUNT_SHIFT)) & ERM_CORR_ERR_CNT2_COUNT_MASK)
/*! @} */

/*! @name EAR3 - ERM Memory n Error Address Register */
/*! @{ */
#define ERM_EAR3_EAR_MASK                        (0xFFFFFFFFU)
#define ERM_EAR3_EAR_SHIFT                       (0U)
#define ERM_EAR3_EAR_WIDTH                       (32U)
#define ERM_EAR3_EAR(x)                          (((uint32_t)(((uint32_t)(x)) << ERM_EAR3_EAR_SHIFT)) & ERM_EAR3_EAR_MASK)
/*! @} */

/*! @name SYN3 - ERM Memory n Syndrome Register */
/*! @{ */
#define ERM_SYN3_SYNDROME_MASK                   (0xFF000000U)
#define ERM_SYN3_SYNDROME_SHIFT                  (24U)
#define ERM_SYN3_SYNDROME_WIDTH                  (8U)
#define ERM_SYN3_SYNDROME(x)                     (((uint32_t)(((uint32_t)(x)) << ERM_SYN3_SYNDROME_SHIFT)) & ERM_SYN3_SYNDROME_MASK)
/*! @} */

/*! @name CORR_ERR_CNT3 - ERM Memory n Correctable Error Count Register */
/*! @{ */
#define ERM_CORR_ERR_CNT3_COUNT_MASK             (0xFFU)
#define ERM_CORR_ERR_CNT3_COUNT_SHIFT            (0U)
#define ERM_CORR_ERR_CNT3_COUNT_WIDTH            (8U)
#define ERM_CORR_ERR_CNT3_COUNT(x)               (((uint32_t)(((uint32_t)(x)) << ERM_CORR_ERR_CNT3_COUNT_SHIFT)) & ERM_CORR_ERR_CNT3_COUNT_MASK)
/*! @} */

/*! @name EAR4 - ERM Memory n Error Address Register */
/*! @{ */
#define ERM_EAR4_EAR_MASK                        (0xFFFFFFFFU)
#define ERM_EAR4_EAR_SHIFT                       (0U)
#define ERM_EAR4_EAR_WIDTH                       (32U)
#define ERM_EAR4_EAR(x)                          (((uint32_t)(((uint32_t)(x)) << ERM_EAR4_EAR_SHIFT)) & ERM_EAR4_EAR_MASK)
/*! @} */

/*! @name SYN4 - ERM Memory n Syndrome Register */
/*! @{ */
#define ERM_SYN4_SYNDROME_MASK                   (0xFF000000U)
#define ERM_SYN4_SYNDROME_SHIFT                  (24U)
#define ERM_SYN4_SYNDROME_WIDTH                  (8U)
#define ERM_SYN4_SYNDROME(x)                     (((uint32_t)(((uint32_t)(x)) << ERM_SYN4_SYNDROME_SHIFT)) & ERM_SYN4_SYNDROME_MASK)
/*! @} */

/*! @name CORR_ERR_CNT4 - ERM Memory n Correctable Error Count Register */
/*! @{ */
#define ERM_CORR_ERR_CNT4_COUNT_MASK             (0xFFU)
#define ERM_CORR_ERR_CNT4_COUNT_SHIFT            (0U)
#define ERM_CORR_ERR_CNT4_COUNT_WIDTH            (8U)
#define ERM_CORR_ERR_CNT4_COUNT(x)               (((uint32_t)(((uint32_t)(x)) << ERM_CORR_ERR_CNT4_COUNT_SHIFT)) & ERM_CORR_ERR_CNT4_COUNT_MASK)
/*! @} */

/*! @name EAR5 - ERM Memory n Error Address Register */
/*! @{ */
#define ERM_EAR5_EAR_MASK                        (0xFFFFFFFFU)
#define ERM_EAR5_EAR_SHIFT                       (0U)
#define ERM_EAR5_EAR_WIDTH                       (32U)
#define ERM_EAR5_EAR(x)                          (((uint32_t)(((uint32_t)(x)) << ERM_EAR5_EAR_SHIFT)) & ERM_EAR5_EAR_MASK)
/*! @} */

/*! @name SYN5 - ERM Memory n Syndrome Register */
/*! @{ */
#define ERM_SYN5_SYNDROME_MASK                   (0xFF000000U)
#define ERM_SYN5_SYNDROME_SHIFT                  (24U)
#define ERM_SYN5_SYNDROME_WIDTH                  (8U)
#define ERM_SYN5_SYNDROME(x)                     (((uint32_t)(((uint32_t)(x)) << ERM_SYN5_SYNDROME_SHIFT)) & ERM_SYN5_SYNDROME_MASK)
/*! @} */

/*! @name CORR_ERR_CNT5 - ERM Memory n Correctable Error Count Register */
/*! @{ */
#define ERM_CORR_ERR_CNT5_COUNT_MASK             (0xFFU)
#define ERM_CORR_ERR_CNT5_COUNT_SHIFT            (0U)
#define ERM_CORR_ERR_CNT5_COUNT_WIDTH            (8U)
#define ERM_CORR_ERR_CNT5_COUNT(x)               (((uint32_t)(((uint32_t)(x)) << ERM_CORR_ERR_CNT5_COUNT_SHIFT)) & ERM_CORR_ERR_CNT5_COUNT_MASK)
/*! @} */

/*! @name EAR6 - ERM Memory n Error Address Register */
/*! @{ */
#define ERM_EAR6_EAR_MASK                        (0xFFFFFFFFU)
#define ERM_EAR6_EAR_SHIFT                       (0U)
#define ERM_EAR6_EAR_WIDTH                       (32U)
#define ERM_EAR6_EAR(x)                          (((uint32_t)(((uint32_t)(x)) << ERM_EAR6_EAR_SHIFT)) & ERM_EAR6_EAR_MASK)
/*! @} */

/*! @name SYN6 - ERM Memory n Syndrome Register */
/*! @{ */
#define ERM_SYN6_SYNDROME_MASK                   (0xFF000000U)
#define ERM_SYN6_SYNDROME_SHIFT                  (24U)
#define ERM_SYN6_SYNDROME_WIDTH                  (8U)
#define ERM_SYN6_SYNDROME(x)                     (((uint32_t)(((uint32_t)(x)) << ERM_SYN6_SYNDROME_SHIFT)) & ERM_SYN6_SYNDROME_MASK)
/*! @} */

/*! @name CORR_ERR_CNT6 - ERM Memory n Correctable Error Count Register */
/*! @{ */
#define ERM_CORR_ERR_CNT6_COUNT_MASK             (0xFFU)
#define ERM_CORR_ERR_CNT6_COUNT_SHIFT            (0U)
#define ERM_CORR_ERR_CNT6_COUNT_WIDTH            (8U)
#define ERM_CORR_ERR_CNT6_COUNT(x)               (((uint32_t)(((uint32_t)(x)) << ERM_CORR_ERR_CNT6_COUNT_SHIFT)) & ERM_CORR_ERR_CNT6_COUNT_MASK)
/*! @} */

/*! @name EAR7 - ERM Memory n Error Address Register */
/*! @{ */
#define ERM_EAR7_EAR_MASK                        (0xFFFFFFFFU)
#define ERM_EAR7_EAR_SHIFT                       (0U)
#define ERM_EAR7_EAR_WIDTH                       (32U)
#define ERM_EAR7_EAR(x)                          (((uint32_t)(((uint32_t)(x)) << ERM_EAR7_EAR_SHIFT)) & ERM_EAR7_EAR_MASK)
/*! @} */

/*! @name SYN7 - ERM Memory n Syndrome Register */
/*! @{ */
#define ERM_SYN7_SYNDROME_MASK                   (0xFF000000U)
#define ERM_SYN7_SYNDROME_SHIFT                  (24U)
#define ERM_SYN7_SYNDROME_WIDTH                  (8U)
#define ERM_SYN7_SYNDROME(x)                     (((uint32_t)(((uint32_t)(x)) << ERM_SYN7_SYNDROME_SHIFT)) & ERM_SYN7_SYNDROME_MASK)
/*! @} */

/*! @name CORR_ERR_CNT7 - ERM Memory n Correctable Error Count Register */
/*! @{ */
#define ERM_CORR_ERR_CNT7_COUNT_MASK             (0xFFU)
#define ERM_CORR_ERR_CNT7_COUNT_SHIFT            (0U)
#define ERM_CORR_ERR_CNT7_COUNT_WIDTH            (8U)
#define ERM_CORR_ERR_CNT7_COUNT(x)               (((uint32_t)(((uint32_t)(x)) << ERM_CORR_ERR_CNT7_COUNT_SHIFT)) & ERM_CORR_ERR_CNT7_COUNT_MASK)
/*! @} */

/*! @name EAR8 - ERM Memory n Error Address Register */
/*! @{ */
#define ERM_EAR8_EAR_MASK                        (0xFFFFFFFFU)
#define ERM_EAR8_EAR_SHIFT                       (0U)
#define ERM_EAR8_EAR_WIDTH                       (32U)
#define ERM_EAR8_EAR(x)                          (((uint32_t)(((uint32_t)(x)) << ERM_EAR8_EAR_SHIFT)) & ERM_EAR8_EAR_MASK)
/*! @} */

/*! @name SYN8 - ERM Memory n Syndrome Register */
/*! @{ */
#define ERM_SYN8_SYNDROME_MASK                   (0xFF000000U)
#define ERM_SYN8_SYNDROME_SHIFT                  (24U)
#define ERM_SYN8_SYNDROME_WIDTH                  (8U)
#define ERM_SYN8_SYNDROME(x)                     (((uint32_t)(((uint32_t)(x)) << ERM_SYN8_SYNDROME_SHIFT)) & ERM_SYN8_SYNDROME_MASK)
/*! @} */

/*! @name CORR_ERR_CNT8 - ERM Memory n Correctable Error Count Register */
/*! @{ */
#define ERM_CORR_ERR_CNT8_COUNT_MASK             (0xFFU)
#define ERM_CORR_ERR_CNT8_COUNT_SHIFT            (0U)
#define ERM_CORR_ERR_CNT8_COUNT_WIDTH            (8U)
#define ERM_CORR_ERR_CNT8_COUNT(x)               (((uint32_t)(((uint32_t)(x)) << ERM_CORR_ERR_CNT8_COUNT_SHIFT)) & ERM_CORR_ERR_CNT8_COUNT_MASK)
/*! @} */

/*! @name EAR9 - ERM Memory n Error Address Register */
/*! @{ */
#define ERM_EAR9_EAR_MASK                        (0xFFFFFFFFU)
#define ERM_EAR9_EAR_SHIFT                       (0U)
#define ERM_EAR9_EAR_WIDTH                       (32U)
#define ERM_EAR9_EAR(x)                          (((uint32_t)(((uint32_t)(x)) << ERM_EAR9_EAR_SHIFT)) & ERM_EAR9_EAR_MASK)
/*! @} */

/*! @name SYN9 - ERM Memory n Syndrome Register */
/*! @{ */
#define ERM_SYN9_SYNDROME_MASK                   (0xFF000000U)
#define ERM_SYN9_SYNDROME_SHIFT                  (24U)
#define ERM_SYN9_SYNDROME_WIDTH                  (8U)
#define ERM_SYN9_SYNDROME(x)                     (((uint32_t)(((uint32_t)(x)) << ERM_SYN9_SYNDROME_SHIFT)) & ERM_SYN9_SYNDROME_MASK)
/*! @} */

/*! @name CORR_ERR_CNT9 - ERM Memory n Correctable Error Count Register */
/*! @{ */
#define ERM_CORR_ERR_CNT9_COUNT_MASK             (0xFFU)
#define ERM_CORR_ERR_CNT9_COUNT_SHIFT            (0U)
#define ERM_CORR_ERR_CNT9_COUNT_WIDTH            (8U)
#define ERM_CORR_ERR_CNT9_COUNT(x)               (((uint32_t)(((uint32_t)(x)) << ERM_CORR_ERR_CNT9_COUNT_SHIFT)) & ERM_CORR_ERR_CNT9_COUNT_MASK)
/*! @} */

/*! @name EAR10 - ERM Memory n Error Address Register */
/*! @{ */
#define ERM_EAR10_EAR_MASK                       (0xFFFFFFFFU)
#define ERM_EAR10_EAR_SHIFT                      (0U)
#define ERM_EAR10_EAR_WIDTH                      (32U)
#define ERM_EAR10_EAR(x)                         (((uint32_t)(((uint32_t)(x)) << ERM_EAR10_EAR_SHIFT)) & ERM_EAR10_EAR_MASK)
/*! @} */

/*! @name SYN10 - ERM Memory n Syndrome Register */
/*! @{ */
#define ERM_SYN10_SYNDROME_MASK                  (0xFF000000U)
#define ERM_SYN10_SYNDROME_SHIFT                 (24U)
#define ERM_SYN10_SYNDROME_WIDTH                 (8U)
#define ERM_SYN10_SYNDROME(x)                    (((uint32_t)(((uint32_t)(x)) << ERM_SYN10_SYNDROME_SHIFT)) & ERM_SYN10_SYNDROME_MASK)
/*! @} */

/*! @name CORR_ERR_CNT10 - ERM Memory n Correctable Error Count Register */
/*! @{ */
#define ERM_CORR_ERR_CNT10_COUNT_MASK            (0xFFU)
#define ERM_CORR_ERR_CNT10_COUNT_SHIFT           (0U)
#define ERM_CORR_ERR_CNT10_COUNT_WIDTH           (8U)
#define ERM_CORR_ERR_CNT10_COUNT(x)              (((uint32_t)(((uint32_t)(x)) << ERM_CORR_ERR_CNT10_COUNT_SHIFT)) & ERM_CORR_ERR_CNT10_COUNT_MASK)
/*! @} */

/*! @name EAR11 - ERM Memory n Error Address Register */
/*! @{ */
#define ERM_EAR11_EAR_MASK                       (0xFFFFFFFFU)
#define ERM_EAR11_EAR_SHIFT                      (0U)
#define ERM_EAR11_EAR_WIDTH                      (32U)
#define ERM_EAR11_EAR(x)                         (((uint32_t)(((uint32_t)(x)) << ERM_EAR11_EAR_SHIFT)) & ERM_EAR11_EAR_MASK)
/*! @} */

/*! @name SYN11 - ERM Memory n Syndrome Register */
/*! @{ */
#define ERM_SYN11_SYNDROME_MASK                  (0xFF000000U)
#define ERM_SYN11_SYNDROME_SHIFT                 (24U)
#define ERM_SYN11_SYNDROME_WIDTH                 (8U)
#define ERM_SYN11_SYNDROME(x)                    (((uint32_t)(((uint32_t)(x)) << ERM_SYN11_SYNDROME_SHIFT)) & ERM_SYN11_SYNDROME_MASK)
/*! @} */

/*! @name CORR_ERR_CNT11 - ERM Memory n Correctable Error Count Register */
/*! @{ */
#define ERM_CORR_ERR_CNT11_COUNT_MASK            (0xFFU)
#define ERM_CORR_ERR_CNT11_COUNT_SHIFT           (0U)
#define ERM_CORR_ERR_CNT11_COUNT_WIDTH           (8U)
#define ERM_CORR_ERR_CNT11_COUNT(x)              (((uint32_t)(((uint32_t)(x)) << ERM_CORR_ERR_CNT11_COUNT_SHIFT)) & ERM_CORR_ERR_CNT11_COUNT_MASK)
/*! @} */

/*! @name EAR12 - ERM Memory n Error Address Register */
/*! @{ */
#define ERM_EAR12_EAR_MASK                       (0xFFFFFFFFU)
#define ERM_EAR12_EAR_SHIFT                      (0U)
#define ERM_EAR12_EAR_WIDTH                      (32U)
#define ERM_EAR12_EAR(x)                         (((uint32_t)(((uint32_t)(x)) << ERM_EAR12_EAR_SHIFT)) & ERM_EAR12_EAR_MASK)
/*! @} */

/*! @name SYN12 - ERM Memory n Syndrome Register */
/*! @{ */
#define ERM_SYN12_SYNDROME_MASK                  (0xFF000000U)
#define ERM_SYN12_SYNDROME_SHIFT                 (24U)
#define ERM_SYN12_SYNDROME_WIDTH                 (8U)
#define ERM_SYN12_SYNDROME(x)                    (((uint32_t)(((uint32_t)(x)) << ERM_SYN12_SYNDROME_SHIFT)) & ERM_SYN12_SYNDROME_MASK)
/*! @} */

/*! @name CORR_ERR_CNT12 - ERM Memory n Correctable Error Count Register */
/*! @{ */
#define ERM_CORR_ERR_CNT12_COUNT_MASK            (0xFFU)
#define ERM_CORR_ERR_CNT12_COUNT_SHIFT           (0U)
#define ERM_CORR_ERR_CNT12_COUNT_WIDTH           (8U)
#define ERM_CORR_ERR_CNT12_COUNT(x)              (((uint32_t)(((uint32_t)(x)) << ERM_CORR_ERR_CNT12_COUNT_SHIFT)) & ERM_CORR_ERR_CNT12_COUNT_MASK)
/*! @} */

/*! @name EAR13 - ERM Memory n Error Address Register */
/*! @{ */
#define ERM_EAR13_EAR_MASK                       (0xFFFFFFFFU)
#define ERM_EAR13_EAR_SHIFT                      (0U)
#define ERM_EAR13_EAR_WIDTH                      (32U)
#define ERM_EAR13_EAR(x)                         (((uint32_t)(((uint32_t)(x)) << ERM_EAR13_EAR_SHIFT)) & ERM_EAR13_EAR_MASK)
/*! @} */

/*! @name SYN13 - ERM Memory n Syndrome Register */
/*! @{ */
#define ERM_SYN13_SYNDROME_MASK                  (0xFF000000U)
#define ERM_SYN13_SYNDROME_SHIFT                 (24U)
#define ERM_SYN13_SYNDROME_WIDTH                 (8U)
#define ERM_SYN13_SYNDROME(x)                    (((uint32_t)(((uint32_t)(x)) << ERM_SYN13_SYNDROME_SHIFT)) & ERM_SYN13_SYNDROME_MASK)
/*! @} */

/*! @name CORR_ERR_CNT13 - ERM Memory n Correctable Error Count Register */
/*! @{ */
#define ERM_CORR_ERR_CNT13_COUNT_MASK            (0xFFU)
#define ERM_CORR_ERR_CNT13_COUNT_SHIFT           (0U)
#define ERM_CORR_ERR_CNT13_COUNT_WIDTH           (8U)
#define ERM_CORR_ERR_CNT13_COUNT(x)              (((uint32_t)(((uint32_t)(x)) << ERM_CORR_ERR_CNT13_COUNT_SHIFT)) & ERM_CORR_ERR_CNT13_COUNT_MASK)
/*! @} */

/*! @name EAR14 - ERM Memory n Error Address Register */
/*! @{ */
#define ERM_EAR14_EAR_MASK                       (0xFFFFFFFFU)
#define ERM_EAR14_EAR_SHIFT                      (0U)
#define ERM_EAR14_EAR_WIDTH                      (32U)
#define ERM_EAR14_EAR(x)                         (((uint32_t)(((uint32_t)(x)) << ERM_EAR14_EAR_SHIFT)) & ERM_EAR14_EAR_MASK)
/*! @} */

/*! @name SYN14 - ERM Memory n Syndrome Register */
/*! @{ */
#define ERM_SYN14_SYNDROME_MASK                  (0xFF000000U)
#define ERM_SYN14_SYNDROME_SHIFT                 (24U)
#define ERM_SYN14_SYNDROME_WIDTH                 (8U)
#define ERM_SYN14_SYNDROME(x)                    (((uint32_t)(((uint32_t)(x)) << ERM_SYN14_SYNDROME_SHIFT)) & ERM_SYN14_SYNDROME_MASK)
/*! @} */

/*! @name CORR_ERR_CNT14 - ERM Memory n Correctable Error Count Register */
/*! @{ */
#define ERM_CORR_ERR_CNT14_COUNT_MASK            (0xFFU)
#define ERM_CORR_ERR_CNT14_COUNT_SHIFT           (0U)
#define ERM_CORR_ERR_CNT14_COUNT_WIDTH           (8U)
#define ERM_CORR_ERR_CNT14_COUNT(x)              (((uint32_t)(((uint32_t)(x)) << ERM_CORR_ERR_CNT14_COUNT_SHIFT)) & ERM_CORR_ERR_CNT14_COUNT_MASK)
/*! @} */

/*! @name EAR15 - ERM Memory n Error Address Register */
/*! @{ */
#define ERM_EAR15_EAR_MASK                       (0xFFFFFFFFU)
#define ERM_EAR15_EAR_SHIFT                      (0U)
#define ERM_EAR15_EAR_WIDTH                      (32U)
#define ERM_EAR15_EAR(x)                         (((uint32_t)(((uint32_t)(x)) << ERM_EAR15_EAR_SHIFT)) & ERM_EAR15_EAR_MASK)
/*! @} */

/*! @name SYN15 - ERM Memory n Syndrome Register */
/*! @{ */
#define ERM_SYN15_SYNDROME_MASK                  (0xFF000000U)
#define ERM_SYN15_SYNDROME_SHIFT                 (24U)
#define ERM_SYN15_SYNDROME_WIDTH                 (8U)
#define ERM_SYN15_SYNDROME(x)                    (((uint32_t)(((uint32_t)(x)) << ERM_SYN15_SYNDROME_SHIFT)) & ERM_SYN15_SYNDROME_MASK)
/*! @} */

/*! @name CORR_ERR_CNT15 - ERM Memory n Correctable Error Count Register */
/*! @{ */
#define ERM_CORR_ERR_CNT15_COUNT_MASK            (0xFFU)
#define ERM_CORR_ERR_CNT15_COUNT_SHIFT           (0U)
#define ERM_CORR_ERR_CNT15_COUNT_WIDTH           (8U)
#define ERM_CORR_ERR_CNT15_COUNT(x)              (((uint32_t)(((uint32_t)(x)) << ERM_CORR_ERR_CNT15_COUNT_SHIFT)) & ERM_CORR_ERR_CNT15_COUNT_MASK)
/*! @} */

/*! @name EAR16 - ERM Memory n Error Address Register */
/*! @{ */
#define ERM_EAR16_EAR_MASK                       (0xFFFFFFFFU)
#define ERM_EAR16_EAR_SHIFT                      (0U)
#define ERM_EAR16_EAR_WIDTH                      (32U)
#define ERM_EAR16_EAR(x)                         (((uint32_t)(((uint32_t)(x)) << ERM_EAR16_EAR_SHIFT)) & ERM_EAR16_EAR_MASK)
/*! @} */

/*! @name SYN16 - ERM Memory n Syndrome Register */
/*! @{ */
#define ERM_SYN16_SYNDROME_MASK                  (0xFF000000U)
#define ERM_SYN16_SYNDROME_SHIFT                 (24U)
#define ERM_SYN16_SYNDROME_WIDTH                 (8U)
#define ERM_SYN16_SYNDROME(x)                    (((uint32_t)(((uint32_t)(x)) << ERM_SYN16_SYNDROME_SHIFT)) & ERM_SYN16_SYNDROME_MASK)
/*! @} */

/*! @name CORR_ERR_CNT16 - ERM Memory n Correctable Error Count Register */
/*! @{ */
#define ERM_CORR_ERR_CNT16_COUNT_MASK            (0xFFU)
#define ERM_CORR_ERR_CNT16_COUNT_SHIFT           (0U)
#define ERM_CORR_ERR_CNT16_COUNT_WIDTH           (8U)
#define ERM_CORR_ERR_CNT16_COUNT(x)              (((uint32_t)(((uint32_t)(x)) << ERM_CORR_ERR_CNT16_COUNT_SHIFT)) & ERM_CORR_ERR_CNT16_COUNT_MASK)
/*! @} */

/*! @name EAR17 - ERM Memory n Error Address Register */
/*! @{ */
#define ERM_EAR17_EAR_MASK                       (0xFFFFFFFFU)
#define ERM_EAR17_EAR_SHIFT                      (0U)
#define ERM_EAR17_EAR_WIDTH                      (32U)
#define ERM_EAR17_EAR(x)                         (((uint32_t)(((uint32_t)(x)) << ERM_EAR17_EAR_SHIFT)) & ERM_EAR17_EAR_MASK)
/*! @} */

/*! @name SYN17 - ERM Memory n Syndrome Register */
/*! @{ */
#define ERM_SYN17_SYNDROME_MASK                  (0xFF000000U)
#define ERM_SYN17_SYNDROME_SHIFT                 (24U)
#define ERM_SYN17_SYNDROME_WIDTH                 (8U)
#define ERM_SYN17_SYNDROME(x)                    (((uint32_t)(((uint32_t)(x)) << ERM_SYN17_SYNDROME_SHIFT)) & ERM_SYN17_SYNDROME_MASK)
/*! @} */

/*! @name CORR_ERR_CNT17 - ERM Memory n Correctable Error Count Register */
/*! @{ */
#define ERM_CORR_ERR_CNT17_COUNT_MASK            (0xFFU)
#define ERM_CORR_ERR_CNT17_COUNT_SHIFT           (0U)
#define ERM_CORR_ERR_CNT17_COUNT_WIDTH           (8U)
#define ERM_CORR_ERR_CNT17_COUNT(x)              (((uint32_t)(((uint32_t)(x)) << ERM_CORR_ERR_CNT17_COUNT_SHIFT)) & ERM_CORR_ERR_CNT17_COUNT_MASK)
/*! @} */

/*! @name EAR18 - ERM Memory n Error Address Register */
/*! @{ */
#define ERM_EAR18_EAR_MASK                       (0xFFFFFFFFU)
#define ERM_EAR18_EAR_SHIFT                      (0U)
#define ERM_EAR18_EAR_WIDTH                      (32U)
#define ERM_EAR18_EAR(x)                         (((uint32_t)(((uint32_t)(x)) << ERM_EAR18_EAR_SHIFT)) & ERM_EAR18_EAR_MASK)
/*! @} */

/*! @name SYN18 - ERM Memory n Syndrome Register */
/*! @{ */
#define ERM_SYN18_SYNDROME_MASK                  (0xFF000000U)
#define ERM_SYN18_SYNDROME_SHIFT                 (24U)
#define ERM_SYN18_SYNDROME_WIDTH                 (8U)
#define ERM_SYN18_SYNDROME(x)                    (((uint32_t)(((uint32_t)(x)) << ERM_SYN18_SYNDROME_SHIFT)) & ERM_SYN18_SYNDROME_MASK)
/*! @} */

/*! @name CORR_ERR_CNT18 - ERM Memory n Correctable Error Count Register */
/*! @{ */
#define ERM_CORR_ERR_CNT18_COUNT_MASK            (0xFFU)
#define ERM_CORR_ERR_CNT18_COUNT_SHIFT           (0U)
#define ERM_CORR_ERR_CNT18_COUNT_WIDTH           (8U)
#define ERM_CORR_ERR_CNT18_COUNT(x)              (((uint32_t)(((uint32_t)(x)) << ERM_CORR_ERR_CNT18_COUNT_SHIFT)) & ERM_CORR_ERR_CNT18_COUNT_MASK)
/*! @} */

/*! @name EAR19 - ERM Memory n Error Address Register */
/*! @{ */
#define ERM_EAR19_EAR_MASK                       (0xFFFFFFFFU)
#define ERM_EAR19_EAR_SHIFT                      (0U)
#define ERM_EAR19_EAR_WIDTH                      (32U)
#define ERM_EAR19_EAR(x)                         (((uint32_t)(((uint32_t)(x)) << ERM_EAR19_EAR_SHIFT)) & ERM_EAR19_EAR_MASK)
/*! @} */

/*! @name SYN19 - ERM Memory n Syndrome Register */
/*! @{ */
#define ERM_SYN19_SYNDROME_MASK                  (0xFF000000U)
#define ERM_SYN19_SYNDROME_SHIFT                 (24U)
#define ERM_SYN19_SYNDROME_WIDTH                 (8U)
#define ERM_SYN19_SYNDROME(x)                    (((uint32_t)(((uint32_t)(x)) << ERM_SYN19_SYNDROME_SHIFT)) & ERM_SYN19_SYNDROME_MASK)
/*! @} */

/*! @name CORR_ERR_CNT19 - ERM Memory n Correctable Error Count Register */
/*! @{ */
#define ERM_CORR_ERR_CNT19_COUNT_MASK            (0xFFU)
#define ERM_CORR_ERR_CNT19_COUNT_SHIFT           (0U)
#define ERM_CORR_ERR_CNT19_COUNT_WIDTH           (8U)
#define ERM_CORR_ERR_CNT19_COUNT(x)              (((uint32_t)(((uint32_t)(x)) << ERM_CORR_ERR_CNT19_COUNT_SHIFT)) & ERM_CORR_ERR_CNT19_COUNT_MASK)
/*! @} */

/*! @name EAR20 - ERM Memory n Error Address Register */
/*! @{ */
#define ERM_EAR20_EAR_MASK                       (0xFFFFFFFFU)
#define ERM_EAR20_EAR_SHIFT                      (0U)
#define ERM_EAR20_EAR_WIDTH                      (32U)
#define ERM_EAR20_EAR(x)                         (((uint32_t)(((uint32_t)(x)) << ERM_EAR20_EAR_SHIFT)) & ERM_EAR20_EAR_MASK)
/*! @} */

/*! @name SYN20 - ERM Memory n Syndrome Register */
/*! @{ */
#define ERM_SYN20_SYNDROME_MASK                  (0xFF000000U)
#define ERM_SYN20_SYNDROME_SHIFT                 (24U)
#define ERM_SYN20_SYNDROME_WIDTH                 (8U)
#define ERM_SYN20_SYNDROME(x)                    (((uint32_t)(((uint32_t)(x)) << ERM_SYN20_SYNDROME_SHIFT)) & ERM_SYN20_SYNDROME_MASK)
/*! @} */

/*! @name CORR_ERR_CNT20 - ERM Memory n Correctable Error Count Register */
/*! @{ */
#define ERM_CORR_ERR_CNT20_COUNT_MASK            (0xFFU)
#define ERM_CORR_ERR_CNT20_COUNT_SHIFT           (0U)
#define ERM_CORR_ERR_CNT20_COUNT_WIDTH           (8U)
#define ERM_CORR_ERR_CNT20_COUNT(x)              (((uint32_t)(((uint32_t)(x)) << ERM_CORR_ERR_CNT20_COUNT_SHIFT)) & ERM_CORR_ERR_CNT20_COUNT_MASK)
/*! @} */

/*! @name EAR21 - ERM Memory n Error Address Register */
/*! @{ */
#define ERM_EAR21_EAR_MASK                       (0xFFFFFFFFU)
#define ERM_EAR21_EAR_SHIFT                      (0U)
#define ERM_EAR21_EAR_WIDTH                      (32U)
#define ERM_EAR21_EAR(x)                         (((uint32_t)(((uint32_t)(x)) << ERM_EAR21_EAR_SHIFT)) & ERM_EAR21_EAR_MASK)
/*! @} */

/*! @name SYN21 - ERM Memory n Syndrome Register */
/*! @{ */
#define ERM_SYN21_SYNDROME_MASK                  (0xFF000000U)
#define ERM_SYN21_SYNDROME_SHIFT                 (24U)
#define ERM_SYN21_SYNDROME_WIDTH                 (8U)
#define ERM_SYN21_SYNDROME(x)                    (((uint32_t)(((uint32_t)(x)) << ERM_SYN21_SYNDROME_SHIFT)) & ERM_SYN21_SYNDROME_MASK)
/*! @} */

/*! @name CORR_ERR_CNT21 - ERM Memory n Correctable Error Count Register */
/*! @{ */
#define ERM_CORR_ERR_CNT21_COUNT_MASK            (0xFFU)
#define ERM_CORR_ERR_CNT21_COUNT_SHIFT           (0U)
#define ERM_CORR_ERR_CNT21_COUNT_WIDTH           (8U)
#define ERM_CORR_ERR_CNT21_COUNT(x)              (((uint32_t)(((uint32_t)(x)) << ERM_CORR_ERR_CNT21_COUNT_SHIFT)) & ERM_CORR_ERR_CNT21_COUNT_MASK)
/*! @} */

/*! @name EAR22 - ERM Memory n Error Address Register */
/*! @{ */
#define ERM_EAR22_EAR_MASK                       (0xFFFFFFFFU)
#define ERM_EAR22_EAR_SHIFT                      (0U)
#define ERM_EAR22_EAR_WIDTH                      (32U)
#define ERM_EAR22_EAR(x)                         (((uint32_t)(((uint32_t)(x)) << ERM_EAR22_EAR_SHIFT)) & ERM_EAR22_EAR_MASK)
/*! @} */

/*! @name SYN22 - ERM Memory n Syndrome Register */
/*! @{ */
#define ERM_SYN22_SYNDROME_MASK                  (0xFF000000U)
#define ERM_SYN22_SYNDROME_SHIFT                 (24U)
#define ERM_SYN22_SYNDROME_WIDTH                 (8U)
#define ERM_SYN22_SYNDROME(x)                    (((uint32_t)(((uint32_t)(x)) << ERM_SYN22_SYNDROME_SHIFT)) & ERM_SYN22_SYNDROME_MASK)
/*! @} */

/*! @name CORR_ERR_CNT22 - ERM Memory n Correctable Error Count Register */
/*! @{ */
#define ERM_CORR_ERR_CNT22_COUNT_MASK            (0xFFU)
#define ERM_CORR_ERR_CNT22_COUNT_SHIFT           (0U)
#define ERM_CORR_ERR_CNT22_COUNT_WIDTH           (8U)
#define ERM_CORR_ERR_CNT22_COUNT(x)              (((uint32_t)(((uint32_t)(x)) << ERM_CORR_ERR_CNT22_COUNT_SHIFT)) & ERM_CORR_ERR_CNT22_COUNT_MASK)
/*! @} */

/*! @name EAR23 - ERM Memory n Error Address Register */
/*! @{ */
#define ERM_EAR23_EAR_MASK                       (0xFFFFFFFFU)
#define ERM_EAR23_EAR_SHIFT                      (0U)
#define ERM_EAR23_EAR_WIDTH                      (32U)
#define ERM_EAR23_EAR(x)                         (((uint32_t)(((uint32_t)(x)) << ERM_EAR23_EAR_SHIFT)) & ERM_EAR23_EAR_MASK)
/*! @} */

/*! @name SYN23 - ERM Memory n Syndrome Register */
/*! @{ */
#define ERM_SYN23_SYNDROME_MASK                  (0xFF000000U)
#define ERM_SYN23_SYNDROME_SHIFT                 (24U)
#define ERM_SYN23_SYNDROME_WIDTH                 (8U)
#define ERM_SYN23_SYNDROME(x)                    (((uint32_t)(((uint32_t)(x)) << ERM_SYN23_SYNDROME_SHIFT)) & ERM_SYN23_SYNDROME_MASK)
/*! @} */

/*! @name CORR_ERR_CNT23 - ERM Memory n Correctable Error Count Register */
/*! @{ */
#define ERM_CORR_ERR_CNT23_COUNT_MASK            (0xFFU)
#define ERM_CORR_ERR_CNT23_COUNT_SHIFT           (0U)
#define ERM_CORR_ERR_CNT23_COUNT_WIDTH           (8U)
#define ERM_CORR_ERR_CNT23_COUNT(x)              (((uint32_t)(((uint32_t)(x)) << ERM_CORR_ERR_CNT23_COUNT_SHIFT)) & ERM_CORR_ERR_CNT23_COUNT_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group ERM_Register_Masks */


/*!
 * @}
 */ /* end of group ERM_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- FBXC Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup FBXC_Peripheral_Access_Layer FBXC Peripheral Access Layer
 * @{
 */

/** FBXC - Register Layout Typedef */
typedef struct {
  __I  uint32_t STR;                               /**< Status Register, offset: 0x0 */
  uint8_t RESERVED_0[8];
  __IO uint32_t CTL;                               /**< Control Register, offset: 0xC */
} FBXC_Type, *FBXC_MemMapPtr;

/** Number of instances of the FBXC module. */
#define FBXC_INSTANCE_COUNT                      (1u)

/* FBXC - Peripheral instance base addresses */
/** Peripheral FBXC base address */
#define FBXC_BASE                                (0x400A4100u)
/** Peripheral FBXC base pointer */
#define FBXC                                     ((FBXC_Type *)FBXC_BASE)
/** Array initializer of FBXC peripheral base addresses */
#define FBXC_BASE_ADDRS                          { FBXC_BASE }
/** Array initializer of FBXC peripheral base pointers */
#define FBXC_BASE_PTRS                           { FBXC }

/* ----------------------------------------------------------------------------
   -- FBXC Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup FBXC_Register_Masks FBXC Register Masks
 * @{
 */

/*! @name STR - Status Register */
/*! @{ */
#define FBXC_STR_REP_ERR_MASK                    (0x1U)
#define FBXC_STR_REP_ERR_SHIFT                   (0U)
#define FBXC_STR_REP_ERR_WIDTH                   (1U)
#define FBXC_STR_REP_ERR(x)                      (((uint32_t)(((uint32_t)(x)) << FBXC_STR_REP_ERR_SHIFT)) & FBXC_STR_REP_ERR_MASK)
#define FBXC_STR_DRW_MASK                        (0x2U)
#define FBXC_STR_DRW_SHIFT                       (1U)
#define FBXC_STR_DRW_WIDTH                       (1U)
#define FBXC_STR_DRW(x)                          (((uint32_t)(((uint32_t)(x)) << FBXC_STR_DRW_SHIFT)) & FBXC_STR_DRW_MASK)
/*! @} */

/*! @name CTL - Control Register */
/*! @{ */
#define FBXC_CTL_MR_MASK                         (0x1U)
#define FBXC_CTL_MR_SHIFT                        (0U)
#define FBXC_CTL_MR_WIDTH                        (1U)
#define FBXC_CTL_MR(x)                           (((uint32_t)(((uint32_t)(x)) << FBXC_CTL_MR_SHIFT)) & FBXC_CTL_MR_MASK)
#define FBXC_CTL_RSB_MASK                        (0x2U)
#define FBXC_CTL_RSB_SHIFT                       (1U)
#define FBXC_CTL_RSB_WIDTH                       (1U)
#define FBXC_CTL_RSB(x)                          (((uint32_t)(((uint32_t)(x)) << FBXC_CTL_RSB_SHIFT)) & FBXC_CTL_RSB_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group FBXC_Register_Masks */


/*!
 * @}
 */ /* end of group FBXC_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- FCCU Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup FCCU_Peripheral_Access_Layer FCCU Peripheral Access Layer
 * @{
 */

/** FCCU - Size of Registers Arrays */
#define FCCU_NCF_CFG_COUNT                        4u
#define FCCU_NCFS_CFG_COUNT                       8u
#define FCCU_NCF_S_COUNT                          4u
#define FCCU_NCF_E_COUNT                          4u
#define FCCU_NCF_TOE_COUNT                        4u
#define FCCU_IRQ_ALARM_EN_COUNT                   4u
#define FCCU_NMI_EN_COUNT                         4u
#define FCCU_EOUT_SIG_EN_COUNT                    4u

/** FCCU - Register Layout Typedef */
typedef struct {
  __IO uint32_t CTRL;                              /**< Control, offset: 0x0 */
  __O  uint32_t CTRLK;                             /**< Control Key, offset: 0x4 */
  __IO uint32_t CFG;                               /**< Configuration, offset: 0x8 */
  uint8_t RESERVED_0[16];
  __IO uint32_t NCF_CFG[FCCU_NCF_CFG_COUNT];       /**< Non-critical Fault Configuration, array offset: 0x1C, array step: 0x4 */
  uint8_t RESERVED_1[32];
  __IO uint32_t NCFS_CFG[FCCU_NCFS_CFG_COUNT];     /**< Non-critical Fault-State Configuration, array offset: 0x4C, array step: 0x4 */
  uint8_t RESERVED_2[20];
  __IO uint32_t NCF_S[FCCU_NCF_S_COUNT];           /**< Non-critical Fault Status, array offset: 0x80, array step: 0x4 */
  __O  uint32_t NCFK;                              /**< Non-critical Fault Key, offset: 0x90 */
  __IO uint32_t NCF_E[FCCU_NCF_E_COUNT];           /**< Non-critical Fault Enable, array offset: 0x94, array step: 0x4 */
  __IO uint32_t NCF_TOE[FCCU_NCF_TOE_COUNT];       /**< Non-critical-Fault Alarm-State Timeout Enable, array offset: 0xA4, array step: 0x4 */
  __IO uint32_t NCF_TO;                            /**< Non-critical-Fault Alarm-State Timeout Interval, offset: 0xB4 */
  __IO uint32_t CFG_TO;                            /**< Configuration-State Timeout Interval, offset: 0xB8 */
  __IO uint32_t EINOUT;                            /**< IO Control, offset: 0xBC */
  __I  uint32_t STAT;                              /**< Status, offset: 0xC0 */
  __I  uint32_t N2AF_STATUS;                       /**< Normal-to-Alarm Freeze Status, offset: 0xC4 */
  __I  uint32_t A2FF_STATUS;                       /**< Alarm-to-Fault Freeze Status, offset: 0xC8 */
  __I  uint32_t N2FF_STATUS;                       /**< Normal-to-Fault Freeze Status, offset: 0xCC */
  __I  uint32_t F2AF_STATUS;                       /**< Fault-to-Alarm Freeze Status, offset: 0xD0 */
  uint8_t RESERVED_3[8];
  __O  uint32_t NCFF;                              /**< Non-critical Fault Fake, offset: 0xDC */
  __IO uint32_t IRQ_STAT;                          /**< IRQ Status, offset: 0xE0 */
  __IO uint32_t IRQ_EN;                            /**< IRQ Enable, offset: 0xE4 */
  uint8_t RESERVED_4[8];
  __O  uint32_t TRANS_LOCK;                        /**< Transient Configuration Lock, offset: 0xF0 */
  __O  uint32_t PERMNT_LOCK;                       /**< Permanent Configuration Lock, offset: 0xF4 */
  __IO uint32_t DELTA_T;                           /**< Delta T, offset: 0xF8 */
  __IO uint32_t IRQ_ALARM_EN[FCCU_IRQ_ALARM_EN_COUNT]; /**< Non-critical Alarm-State Interrupt-Request Enable, array offset: 0xFC, array step: 0x4 */
  __IO uint32_t NMI_EN[FCCU_NMI_EN_COUNT];         /**< Non-critical Fault-State Non-maskable-Interrupt-Request Enable, array offset: 0x10C, array step: 0x4 */
  __IO uint32_t EOUT_SIG_EN[FCCU_EOUT_SIG_EN_COUNT]; /**< Non-critical Fault-State EOUT Signaling Enable, array offset: 0x11C, array step: 0x4 */
  __I  uint32_t TMR_ALARM;                         /**< Alarm-State Timer, offset: 0x12C */
  uint8_t RESERVED_5[4];
  __I  uint32_t TMR_CFG;                           /**< Configuration-State Timer, offset: 0x134 */
  __I  uint32_t TMR_ETMR;                          /**< Fault-Output Timer, offset: 0x138 */
} FCCU_Type, *FCCU_MemMapPtr;

/** Number of instances of the FCCU module. */
#define FCCU_INSTANCE_COUNT                      (1u)

/* FCCU - Peripheral instance base addresses */
/** Peripheral FCCU base address */
#define FCCU_BASE                                (0x4030C000u)
/** Peripheral FCCU base pointer */
#define FCCU                                     ((FCCU_Type *)FCCU_BASE)
/** Array initializer of FCCU peripheral base addresses */
#define FCCU_BASE_ADDRS                          { FCCU_BASE }
/** Array initializer of FCCU peripheral base pointers */
#define FCCU_BASE_PTRS                           { FCCU }

/* ----------------------------------------------------------------------------
   -- FCCU Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup FCCU_Register_Masks FCCU Register Masks
 * @{
 */

/*! @name CTRL - Control */
/*! @{ */
#define FCCU_CTRL_OPR_MASK                       (0x1FU)
#define FCCU_CTRL_OPR_SHIFT                      (0U)
#define FCCU_CTRL_OPR_WIDTH                      (5U)
#define FCCU_CTRL_OPR(x)                         (((uint32_t)(((uint32_t)(x)) << FCCU_CTRL_OPR_SHIFT)) & FCCU_CTRL_OPR_MASK)
#define FCCU_CTRL_OPS_MASK                       (0xC0U)
#define FCCU_CTRL_OPS_SHIFT                      (6U)
#define FCCU_CTRL_OPS_WIDTH                      (2U)
#define FCCU_CTRL_OPS(x)                         (((uint32_t)(((uint32_t)(x)) << FCCU_CTRL_OPS_SHIFT)) & FCCU_CTRL_OPS_MASK)
#define FCCU_CTRL_DEBUG_MASK                     (0x200U)
#define FCCU_CTRL_DEBUG_SHIFT                    (9U)
#define FCCU_CTRL_DEBUG_WIDTH                    (1U)
#define FCCU_CTRL_DEBUG(x)                       (((uint32_t)(((uint32_t)(x)) << FCCU_CTRL_DEBUG_SHIFT)) & FCCU_CTRL_DEBUG_MASK)
/*! @} */

/*! @name CTRLK - Control Key */
/*! @{ */
#define FCCU_CTRLK_CTRLK_MASK                    (0xFFFFFFFFU)
#define FCCU_CTRLK_CTRLK_SHIFT                   (0U)
#define FCCU_CTRLK_CTRLK_WIDTH                   (32U)
#define FCCU_CTRLK_CTRLK(x)                      (((uint32_t)(((uint32_t)(x)) << FCCU_CTRLK_CTRLK_SHIFT)) & FCCU_CTRLK_CTRLK_MASK)
/*! @} */

/*! @name CFG - Configuration */
/*! @{ */
#define FCCU_CFG_FOP_MASK                        (0x3FU)
#define FCCU_CFG_FOP_SHIFT                       (0U)
#define FCCU_CFG_FOP_WIDTH                       (6U)
#define FCCU_CFG_FOP(x)                          (((uint32_t)(((uint32_t)(x)) << FCCU_CFG_FOP_SHIFT)) & FCCU_CFG_FOP_MASK)
#define FCCU_CFG_FOM_MASK                        (0x1C0U)
#define FCCU_CFG_FOM_SHIFT                       (6U)
#define FCCU_CFG_FOM_WIDTH                       (3U)
#define FCCU_CFG_FOM(x)                          (((uint32_t)(((uint32_t)(x)) << FCCU_CFG_FOM_SHIFT)) & FCCU_CFG_FOM_MASK)
#define FCCU_CFG_PS_MASK                         (0x200U)
#define FCCU_CFG_PS_SHIFT                        (9U)
#define FCCU_CFG_PS_WIDTH                        (1U)
#define FCCU_CFG_PS(x)                           (((uint32_t)(((uint32_t)(x)) << FCCU_CFG_PS_SHIFT)) & FCCU_CFG_PS_MASK)
#define FCCU_CFG_SM_MASK                         (0x400U)
#define FCCU_CFG_SM_SHIFT                        (10U)
#define FCCU_CFG_SM_WIDTH                        (1U)
#define FCCU_CFG_SM(x)                           (((uint32_t)(((uint32_t)(x)) << FCCU_CFG_SM_SHIFT)) & FCCU_CFG_SM_MASK)
#define FCCU_CFG_FOPE_MASK                       (0x8000U)
#define FCCU_CFG_FOPE_SHIFT                      (15U)
#define FCCU_CFG_FOPE_WIDTH                      (1U)
#define FCCU_CFG_FOPE(x)                         (((uint32_t)(((uint32_t)(x)) << FCCU_CFG_FOPE_SHIFT)) & FCCU_CFG_FOPE_MASK)
#define FCCU_CFG_FCCU_SET_CLEAR_MASK             (0xC00000U)
#define FCCU_CFG_FCCU_SET_CLEAR_SHIFT            (22U)
#define FCCU_CFG_FCCU_SET_CLEAR_WIDTH            (2U)
#define FCCU_CFG_FCCU_SET_CLEAR(x)               (((uint32_t)(((uint32_t)(x)) << FCCU_CFG_FCCU_SET_CLEAR_SHIFT)) & FCCU_CFG_FCCU_SET_CLEAR_MASK)
#define FCCU_CFG_FCCU_SET_AFTER_RESET_MASK       (0x1000000U)
#define FCCU_CFG_FCCU_SET_AFTER_RESET_SHIFT      (24U)
#define FCCU_CFG_FCCU_SET_AFTER_RESET_WIDTH      (1U)
#define FCCU_CFG_FCCU_SET_AFTER_RESET(x)         (((uint32_t)(((uint32_t)(x)) << FCCU_CFG_FCCU_SET_AFTER_RESET_SHIFT)) & FCCU_CFG_FCCU_SET_AFTER_RESET_MASK)
/*! @} */

/*! @name NCF_CFG - Non-critical Fault Configuration */
/*! @{ */
#define FCCU_NCF_CFG_NCFC0_MASK                  (0x1U)
#define FCCU_NCF_CFG_NCFC0_SHIFT                 (0U)
#define FCCU_NCF_CFG_NCFC0_WIDTH                 (1U)
#define FCCU_NCF_CFG_NCFC0(x)                    (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_CFG_NCFC0_SHIFT)) & FCCU_NCF_CFG_NCFC0_MASK)
#define FCCU_NCF_CFG_NCFC1_MASK                  (0x2U)
#define FCCU_NCF_CFG_NCFC1_SHIFT                 (1U)
#define FCCU_NCF_CFG_NCFC1_WIDTH                 (1U)
#define FCCU_NCF_CFG_NCFC1(x)                    (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_CFG_NCFC1_SHIFT)) & FCCU_NCF_CFG_NCFC1_MASK)
#define FCCU_NCF_CFG_NCFC2_MASK                  (0x4U)
#define FCCU_NCF_CFG_NCFC2_SHIFT                 (2U)
#define FCCU_NCF_CFG_NCFC2_WIDTH                 (1U)
#define FCCU_NCF_CFG_NCFC2(x)                    (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_CFG_NCFC2_SHIFT)) & FCCU_NCF_CFG_NCFC2_MASK)
#define FCCU_NCF_CFG_NCFC3_MASK                  (0x8U)
#define FCCU_NCF_CFG_NCFC3_SHIFT                 (3U)
#define FCCU_NCF_CFG_NCFC3_WIDTH                 (1U)
#define FCCU_NCF_CFG_NCFC3(x)                    (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_CFG_NCFC3_SHIFT)) & FCCU_NCF_CFG_NCFC3_MASK)
#define FCCU_NCF_CFG_NCFC4_MASK                  (0x10U)
#define FCCU_NCF_CFG_NCFC4_SHIFT                 (4U)
#define FCCU_NCF_CFG_NCFC4_WIDTH                 (1U)
#define FCCU_NCF_CFG_NCFC4(x)                    (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_CFG_NCFC4_SHIFT)) & FCCU_NCF_CFG_NCFC4_MASK)
#define FCCU_NCF_CFG_NCFC5_MASK                  (0x20U)
#define FCCU_NCF_CFG_NCFC5_SHIFT                 (5U)
#define FCCU_NCF_CFG_NCFC5_WIDTH                 (1U)
#define FCCU_NCF_CFG_NCFC5(x)                    (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_CFG_NCFC5_SHIFT)) & FCCU_NCF_CFG_NCFC5_MASK)
#define FCCU_NCF_CFG_NCFC6_MASK                  (0x40U)
#define FCCU_NCF_CFG_NCFC6_SHIFT                 (6U)
#define FCCU_NCF_CFG_NCFC6_WIDTH                 (1U)
#define FCCU_NCF_CFG_NCFC6(x)                    (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_CFG_NCFC6_SHIFT)) & FCCU_NCF_CFG_NCFC6_MASK)
#define FCCU_NCF_CFG_NCFC7_MASK                  (0x80U)
#define FCCU_NCF_CFG_NCFC7_SHIFT                 (7U)
#define FCCU_NCF_CFG_NCFC7_WIDTH                 (1U)
#define FCCU_NCF_CFG_NCFC7(x)                    (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_CFG_NCFC7_SHIFT)) & FCCU_NCF_CFG_NCFC7_MASK)
#define FCCU_NCF_CFG_NCFC8_MASK                  (0x100U)
#define FCCU_NCF_CFG_NCFC8_SHIFT                 (8U)
#define FCCU_NCF_CFG_NCFC8_WIDTH                 (1U)
#define FCCU_NCF_CFG_NCFC8(x)                    (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_CFG_NCFC8_SHIFT)) & FCCU_NCF_CFG_NCFC8_MASK)
#define FCCU_NCF_CFG_NCFC9_MASK                  (0x200U)
#define FCCU_NCF_CFG_NCFC9_SHIFT                 (9U)
#define FCCU_NCF_CFG_NCFC9_WIDTH                 (1U)
#define FCCU_NCF_CFG_NCFC9(x)                    (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_CFG_NCFC9_SHIFT)) & FCCU_NCF_CFG_NCFC9_MASK)
#define FCCU_NCF_CFG_NCFC10_MASK                 (0x400U)
#define FCCU_NCF_CFG_NCFC10_SHIFT                (10U)
#define FCCU_NCF_CFG_NCFC10_WIDTH                (1U)
#define FCCU_NCF_CFG_NCFC10(x)                   (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_CFG_NCFC10_SHIFT)) & FCCU_NCF_CFG_NCFC10_MASK)
#define FCCU_NCF_CFG_NCFC11_MASK                 (0x800U)
#define FCCU_NCF_CFG_NCFC11_SHIFT                (11U)
#define FCCU_NCF_CFG_NCFC11_WIDTH                (1U)
#define FCCU_NCF_CFG_NCFC11(x)                   (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_CFG_NCFC11_SHIFT)) & FCCU_NCF_CFG_NCFC11_MASK)
#define FCCU_NCF_CFG_NCFC12_MASK                 (0x1000U)
#define FCCU_NCF_CFG_NCFC12_SHIFT                (12U)
#define FCCU_NCF_CFG_NCFC12_WIDTH                (1U)
#define FCCU_NCF_CFG_NCFC12(x)                   (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_CFG_NCFC12_SHIFT)) & FCCU_NCF_CFG_NCFC12_MASK)
#define FCCU_NCF_CFG_NCFC13_MASK                 (0x2000U)
#define FCCU_NCF_CFG_NCFC13_SHIFT                (13U)
#define FCCU_NCF_CFG_NCFC13_WIDTH                (1U)
#define FCCU_NCF_CFG_NCFC13(x)                   (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_CFG_NCFC13_SHIFT)) & FCCU_NCF_CFG_NCFC13_MASK)
#define FCCU_NCF_CFG_NCFC14_MASK                 (0x4000U)
#define FCCU_NCF_CFG_NCFC14_SHIFT                (14U)
#define FCCU_NCF_CFG_NCFC14_WIDTH                (1U)
#define FCCU_NCF_CFG_NCFC14(x)                   (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_CFG_NCFC14_SHIFT)) & FCCU_NCF_CFG_NCFC14_MASK)
#define FCCU_NCF_CFG_NCFC15_MASK                 (0x8000U)
#define FCCU_NCF_CFG_NCFC15_SHIFT                (15U)
#define FCCU_NCF_CFG_NCFC15_WIDTH                (1U)
#define FCCU_NCF_CFG_NCFC15(x)                   (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_CFG_NCFC15_SHIFT)) & FCCU_NCF_CFG_NCFC15_MASK)
#define FCCU_NCF_CFG_NCFC16_MASK                 (0x10000U)
#define FCCU_NCF_CFG_NCFC16_SHIFT                (16U)
#define FCCU_NCF_CFG_NCFC16_WIDTH                (1U)
#define FCCU_NCF_CFG_NCFC16(x)                   (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_CFG_NCFC16_SHIFT)) & FCCU_NCF_CFG_NCFC16_MASK)
#define FCCU_NCF_CFG_NCFC17_MASK                 (0x20000U)
#define FCCU_NCF_CFG_NCFC17_SHIFT                (17U)
#define FCCU_NCF_CFG_NCFC17_WIDTH                (1U)
#define FCCU_NCF_CFG_NCFC17(x)                   (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_CFG_NCFC17_SHIFT)) & FCCU_NCF_CFG_NCFC17_MASK)
#define FCCU_NCF_CFG_NCFC18_MASK                 (0x40000U)
#define FCCU_NCF_CFG_NCFC18_SHIFT                (18U)
#define FCCU_NCF_CFG_NCFC18_WIDTH                (1U)
#define FCCU_NCF_CFG_NCFC18(x)                   (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_CFG_NCFC18_SHIFT)) & FCCU_NCF_CFG_NCFC18_MASK)
#define FCCU_NCF_CFG_NCFC19_MASK                 (0x80000U)
#define FCCU_NCF_CFG_NCFC19_SHIFT                (19U)
#define FCCU_NCF_CFG_NCFC19_WIDTH                (1U)
#define FCCU_NCF_CFG_NCFC19(x)                   (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_CFG_NCFC19_SHIFT)) & FCCU_NCF_CFG_NCFC19_MASK)
#define FCCU_NCF_CFG_NCFC20_MASK                 (0x100000U)
#define FCCU_NCF_CFG_NCFC20_SHIFT                (20U)
#define FCCU_NCF_CFG_NCFC20_WIDTH                (1U)
#define FCCU_NCF_CFG_NCFC20(x)                   (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_CFG_NCFC20_SHIFT)) & FCCU_NCF_CFG_NCFC20_MASK)
#define FCCU_NCF_CFG_NCFC21_MASK                 (0x200000U)
#define FCCU_NCF_CFG_NCFC21_SHIFT                (21U)
#define FCCU_NCF_CFG_NCFC21_WIDTH                (1U)
#define FCCU_NCF_CFG_NCFC21(x)                   (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_CFG_NCFC21_SHIFT)) & FCCU_NCF_CFG_NCFC21_MASK)
#define FCCU_NCF_CFG_NCFC22_MASK                 (0x400000U)
#define FCCU_NCF_CFG_NCFC22_SHIFT                (22U)
#define FCCU_NCF_CFG_NCFC22_WIDTH                (1U)
#define FCCU_NCF_CFG_NCFC22(x)                   (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_CFG_NCFC22_SHIFT)) & FCCU_NCF_CFG_NCFC22_MASK)
#define FCCU_NCF_CFG_NCFC23_MASK                 (0x800000U)
#define FCCU_NCF_CFG_NCFC23_SHIFT                (23U)
#define FCCU_NCF_CFG_NCFC23_WIDTH                (1U)
#define FCCU_NCF_CFG_NCFC23(x)                   (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_CFG_NCFC23_SHIFT)) & FCCU_NCF_CFG_NCFC23_MASK)
#define FCCU_NCF_CFG_NCFC24_MASK                 (0x1000000U)
#define FCCU_NCF_CFG_NCFC24_SHIFT                (24U)
#define FCCU_NCF_CFG_NCFC24_WIDTH                (1U)
#define FCCU_NCF_CFG_NCFC24(x)                   (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_CFG_NCFC24_SHIFT)) & FCCU_NCF_CFG_NCFC24_MASK)
#define FCCU_NCF_CFG_NCFC25_MASK                 (0x2000000U)
#define FCCU_NCF_CFG_NCFC25_SHIFT                (25U)
#define FCCU_NCF_CFG_NCFC25_WIDTH                (1U)
#define FCCU_NCF_CFG_NCFC25(x)                   (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_CFG_NCFC25_SHIFT)) & FCCU_NCF_CFG_NCFC25_MASK)
#define FCCU_NCF_CFG_NCFC26_MASK                 (0x4000000U)
#define FCCU_NCF_CFG_NCFC26_SHIFT                (26U)
#define FCCU_NCF_CFG_NCFC26_WIDTH                (1U)
#define FCCU_NCF_CFG_NCFC26(x)                   (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_CFG_NCFC26_SHIFT)) & FCCU_NCF_CFG_NCFC26_MASK)
#define FCCU_NCF_CFG_NCFC27_MASK                 (0x8000000U)
#define FCCU_NCF_CFG_NCFC27_SHIFT                (27U)
#define FCCU_NCF_CFG_NCFC27_WIDTH                (1U)
#define FCCU_NCF_CFG_NCFC27(x)                   (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_CFG_NCFC27_SHIFT)) & FCCU_NCF_CFG_NCFC27_MASK)
#define FCCU_NCF_CFG_NCFC28_MASK                 (0x10000000U)
#define FCCU_NCF_CFG_NCFC28_SHIFT                (28U)
#define FCCU_NCF_CFG_NCFC28_WIDTH                (1U)
#define FCCU_NCF_CFG_NCFC28(x)                   (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_CFG_NCFC28_SHIFT)) & FCCU_NCF_CFG_NCFC28_MASK)
#define FCCU_NCF_CFG_NCFC29_MASK                 (0x20000000U)
#define FCCU_NCF_CFG_NCFC29_SHIFT                (29U)
#define FCCU_NCF_CFG_NCFC29_WIDTH                (1U)
#define FCCU_NCF_CFG_NCFC29(x)                   (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_CFG_NCFC29_SHIFT)) & FCCU_NCF_CFG_NCFC29_MASK)
#define FCCU_NCF_CFG_NCFC30_MASK                 (0x40000000U)
#define FCCU_NCF_CFG_NCFC30_SHIFT                (30U)
#define FCCU_NCF_CFG_NCFC30_WIDTH                (1U)
#define FCCU_NCF_CFG_NCFC30(x)                   (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_CFG_NCFC30_SHIFT)) & FCCU_NCF_CFG_NCFC30_MASK)
#define FCCU_NCF_CFG_NCFC31_MASK                 (0x80000000U)
#define FCCU_NCF_CFG_NCFC31_SHIFT                (31U)
#define FCCU_NCF_CFG_NCFC31_WIDTH                (1U)
#define FCCU_NCF_CFG_NCFC31(x)                   (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_CFG_NCFC31_SHIFT)) & FCCU_NCF_CFG_NCFC31_MASK)
/*! @} */

/*! @name NCFS_CFG - Non-critical Fault-State Configuration */
/*! @{ */
#define FCCU_NCFS_CFG_NCFSC0_MASK                (0x3U)
#define FCCU_NCFS_CFG_NCFSC0_SHIFT               (0U)
#define FCCU_NCFS_CFG_NCFSC0_WIDTH               (2U)
#define FCCU_NCFS_CFG_NCFSC0(x)                  (((uint32_t)(((uint32_t)(x)) << FCCU_NCFS_CFG_NCFSC0_SHIFT)) & FCCU_NCFS_CFG_NCFSC0_MASK)
#define FCCU_NCFS_CFG_NCFSC1_MASK                (0xCU)
#define FCCU_NCFS_CFG_NCFSC1_SHIFT               (2U)
#define FCCU_NCFS_CFG_NCFSC1_WIDTH               (2U)
#define FCCU_NCFS_CFG_NCFSC1(x)                  (((uint32_t)(((uint32_t)(x)) << FCCU_NCFS_CFG_NCFSC1_SHIFT)) & FCCU_NCFS_CFG_NCFSC1_MASK)
#define FCCU_NCFS_CFG_NCFSC2_MASK                (0x30U)
#define FCCU_NCFS_CFG_NCFSC2_SHIFT               (4U)
#define FCCU_NCFS_CFG_NCFSC2_WIDTH               (2U)
#define FCCU_NCFS_CFG_NCFSC2(x)                  (((uint32_t)(((uint32_t)(x)) << FCCU_NCFS_CFG_NCFSC2_SHIFT)) & FCCU_NCFS_CFG_NCFSC2_MASK)
#define FCCU_NCFS_CFG_NCFSC3_MASK                (0xC0U)
#define FCCU_NCFS_CFG_NCFSC3_SHIFT               (6U)
#define FCCU_NCFS_CFG_NCFSC3_WIDTH               (2U)
#define FCCU_NCFS_CFG_NCFSC3(x)                  (((uint32_t)(((uint32_t)(x)) << FCCU_NCFS_CFG_NCFSC3_SHIFT)) & FCCU_NCFS_CFG_NCFSC3_MASK)
#define FCCU_NCFS_CFG_NCFSC4_MASK                (0x300U)
#define FCCU_NCFS_CFG_NCFSC4_SHIFT               (8U)
#define FCCU_NCFS_CFG_NCFSC4_WIDTH               (2U)
#define FCCU_NCFS_CFG_NCFSC4(x)                  (((uint32_t)(((uint32_t)(x)) << FCCU_NCFS_CFG_NCFSC4_SHIFT)) & FCCU_NCFS_CFG_NCFSC4_MASK)
#define FCCU_NCFS_CFG_NCFSC5_MASK                (0xC00U)
#define FCCU_NCFS_CFG_NCFSC5_SHIFT               (10U)
#define FCCU_NCFS_CFG_NCFSC5_WIDTH               (2U)
#define FCCU_NCFS_CFG_NCFSC5(x)                  (((uint32_t)(((uint32_t)(x)) << FCCU_NCFS_CFG_NCFSC5_SHIFT)) & FCCU_NCFS_CFG_NCFSC5_MASK)
#define FCCU_NCFS_CFG_NCFSC6_MASK                (0x3000U)
#define FCCU_NCFS_CFG_NCFSC6_SHIFT               (12U)
#define FCCU_NCFS_CFG_NCFSC6_WIDTH               (2U)
#define FCCU_NCFS_CFG_NCFSC6(x)                  (((uint32_t)(((uint32_t)(x)) << FCCU_NCFS_CFG_NCFSC6_SHIFT)) & FCCU_NCFS_CFG_NCFSC6_MASK)
#define FCCU_NCFS_CFG_NCFSC7_MASK                (0xC000U)
#define FCCU_NCFS_CFG_NCFSC7_SHIFT               (14U)
#define FCCU_NCFS_CFG_NCFSC7_WIDTH               (2U)
#define FCCU_NCFS_CFG_NCFSC7(x)                  (((uint32_t)(((uint32_t)(x)) << FCCU_NCFS_CFG_NCFSC7_SHIFT)) & FCCU_NCFS_CFG_NCFSC7_MASK)
#define FCCU_NCFS_CFG_NCFSC8_MASK                (0x30000U)
#define FCCU_NCFS_CFG_NCFSC8_SHIFT               (16U)
#define FCCU_NCFS_CFG_NCFSC8_WIDTH               (2U)
#define FCCU_NCFS_CFG_NCFSC8(x)                  (((uint32_t)(((uint32_t)(x)) << FCCU_NCFS_CFG_NCFSC8_SHIFT)) & FCCU_NCFS_CFG_NCFSC8_MASK)
#define FCCU_NCFS_CFG_NCFSC9_MASK                (0xC0000U)
#define FCCU_NCFS_CFG_NCFSC9_SHIFT               (18U)
#define FCCU_NCFS_CFG_NCFSC9_WIDTH               (2U)
#define FCCU_NCFS_CFG_NCFSC9(x)                  (((uint32_t)(((uint32_t)(x)) << FCCU_NCFS_CFG_NCFSC9_SHIFT)) & FCCU_NCFS_CFG_NCFSC9_MASK)
#define FCCU_NCFS_CFG_NCFSC10_MASK               (0x300000U)
#define FCCU_NCFS_CFG_NCFSC10_SHIFT              (20U)
#define FCCU_NCFS_CFG_NCFSC10_WIDTH              (2U)
#define FCCU_NCFS_CFG_NCFSC10(x)                 (((uint32_t)(((uint32_t)(x)) << FCCU_NCFS_CFG_NCFSC10_SHIFT)) & FCCU_NCFS_CFG_NCFSC10_MASK)
#define FCCU_NCFS_CFG_NCFSC11_MASK               (0xC00000U)
#define FCCU_NCFS_CFG_NCFSC11_SHIFT              (22U)
#define FCCU_NCFS_CFG_NCFSC11_WIDTH              (2U)
#define FCCU_NCFS_CFG_NCFSC11(x)                 (((uint32_t)(((uint32_t)(x)) << FCCU_NCFS_CFG_NCFSC11_SHIFT)) & FCCU_NCFS_CFG_NCFSC11_MASK)
#define FCCU_NCFS_CFG_NCFSC12_MASK               (0x3000000U)
#define FCCU_NCFS_CFG_NCFSC12_SHIFT              (24U)
#define FCCU_NCFS_CFG_NCFSC12_WIDTH              (2U)
#define FCCU_NCFS_CFG_NCFSC12(x)                 (((uint32_t)(((uint32_t)(x)) << FCCU_NCFS_CFG_NCFSC12_SHIFT)) & FCCU_NCFS_CFG_NCFSC12_MASK)
#define FCCU_NCFS_CFG_NCFSC13_MASK               (0xC000000U)
#define FCCU_NCFS_CFG_NCFSC13_SHIFT              (26U)
#define FCCU_NCFS_CFG_NCFSC13_WIDTH              (2U)
#define FCCU_NCFS_CFG_NCFSC13(x)                 (((uint32_t)(((uint32_t)(x)) << FCCU_NCFS_CFG_NCFSC13_SHIFT)) & FCCU_NCFS_CFG_NCFSC13_MASK)
#define FCCU_NCFS_CFG_NCFSC14_MASK               (0x30000000U)
#define FCCU_NCFS_CFG_NCFSC14_SHIFT              (28U)
#define FCCU_NCFS_CFG_NCFSC14_WIDTH              (2U)
#define FCCU_NCFS_CFG_NCFSC14(x)                 (((uint32_t)(((uint32_t)(x)) << FCCU_NCFS_CFG_NCFSC14_SHIFT)) & FCCU_NCFS_CFG_NCFSC14_MASK)
#define FCCU_NCFS_CFG_NCFSC15_MASK               (0xC0000000U)
#define FCCU_NCFS_CFG_NCFSC15_SHIFT              (30U)
#define FCCU_NCFS_CFG_NCFSC15_WIDTH              (2U)
#define FCCU_NCFS_CFG_NCFSC15(x)                 (((uint32_t)(((uint32_t)(x)) << FCCU_NCFS_CFG_NCFSC15_SHIFT)) & FCCU_NCFS_CFG_NCFSC15_MASK)
/*! @} */

/*! @name NCF_S - Non-critical Fault Status */
/*! @{ */
#define FCCU_NCF_S_NCFS0_MASK                    (0x1U)
#define FCCU_NCF_S_NCFS0_SHIFT                   (0U)
#define FCCU_NCF_S_NCFS0_WIDTH                   (1U)
#define FCCU_NCF_S_NCFS0(x)                      (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_S_NCFS0_SHIFT)) & FCCU_NCF_S_NCFS0_MASK)
#define FCCU_NCF_S_NCFS1_MASK                    (0x2U)
#define FCCU_NCF_S_NCFS1_SHIFT                   (1U)
#define FCCU_NCF_S_NCFS1_WIDTH                   (1U)
#define FCCU_NCF_S_NCFS1(x)                      (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_S_NCFS1_SHIFT)) & FCCU_NCF_S_NCFS1_MASK)
#define FCCU_NCF_S_NCFS2_MASK                    (0x4U)
#define FCCU_NCF_S_NCFS2_SHIFT                   (2U)
#define FCCU_NCF_S_NCFS2_WIDTH                   (1U)
#define FCCU_NCF_S_NCFS2(x)                      (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_S_NCFS2_SHIFT)) & FCCU_NCF_S_NCFS2_MASK)
#define FCCU_NCF_S_NCFS3_MASK                    (0x8U)
#define FCCU_NCF_S_NCFS3_SHIFT                   (3U)
#define FCCU_NCF_S_NCFS3_WIDTH                   (1U)
#define FCCU_NCF_S_NCFS3(x)                      (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_S_NCFS3_SHIFT)) & FCCU_NCF_S_NCFS3_MASK)
#define FCCU_NCF_S_NCFS4_MASK                    (0x10U)
#define FCCU_NCF_S_NCFS4_SHIFT                   (4U)
#define FCCU_NCF_S_NCFS4_WIDTH                   (1U)
#define FCCU_NCF_S_NCFS4(x)                      (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_S_NCFS4_SHIFT)) & FCCU_NCF_S_NCFS4_MASK)
#define FCCU_NCF_S_NCFS5_MASK                    (0x20U)
#define FCCU_NCF_S_NCFS5_SHIFT                   (5U)
#define FCCU_NCF_S_NCFS5_WIDTH                   (1U)
#define FCCU_NCF_S_NCFS5(x)                      (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_S_NCFS5_SHIFT)) & FCCU_NCF_S_NCFS5_MASK)
#define FCCU_NCF_S_NCFS6_MASK                    (0x40U)
#define FCCU_NCF_S_NCFS6_SHIFT                   (6U)
#define FCCU_NCF_S_NCFS6_WIDTH                   (1U)
#define FCCU_NCF_S_NCFS6(x)                      (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_S_NCFS6_SHIFT)) & FCCU_NCF_S_NCFS6_MASK)
#define FCCU_NCF_S_NCFS7_MASK                    (0x80U)
#define FCCU_NCF_S_NCFS7_SHIFT                   (7U)
#define FCCU_NCF_S_NCFS7_WIDTH                   (1U)
#define FCCU_NCF_S_NCFS7(x)                      (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_S_NCFS7_SHIFT)) & FCCU_NCF_S_NCFS7_MASK)
#define FCCU_NCF_S_NCFS8_MASK                    (0x100U)
#define FCCU_NCF_S_NCFS8_SHIFT                   (8U)
#define FCCU_NCF_S_NCFS8_WIDTH                   (1U)
#define FCCU_NCF_S_NCFS8(x)                      (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_S_NCFS8_SHIFT)) & FCCU_NCF_S_NCFS8_MASK)
#define FCCU_NCF_S_NCFS9_MASK                    (0x200U)
#define FCCU_NCF_S_NCFS9_SHIFT                   (9U)
#define FCCU_NCF_S_NCFS9_WIDTH                   (1U)
#define FCCU_NCF_S_NCFS9(x)                      (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_S_NCFS9_SHIFT)) & FCCU_NCF_S_NCFS9_MASK)
#define FCCU_NCF_S_NCFS10_MASK                   (0x400U)
#define FCCU_NCF_S_NCFS10_SHIFT                  (10U)
#define FCCU_NCF_S_NCFS10_WIDTH                  (1U)
#define FCCU_NCF_S_NCFS10(x)                     (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_S_NCFS10_SHIFT)) & FCCU_NCF_S_NCFS10_MASK)
#define FCCU_NCF_S_NCFS11_MASK                   (0x800U)
#define FCCU_NCF_S_NCFS11_SHIFT                  (11U)
#define FCCU_NCF_S_NCFS11_WIDTH                  (1U)
#define FCCU_NCF_S_NCFS11(x)                     (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_S_NCFS11_SHIFT)) & FCCU_NCF_S_NCFS11_MASK)
#define FCCU_NCF_S_NCFS12_MASK                   (0x1000U)
#define FCCU_NCF_S_NCFS12_SHIFT                  (12U)
#define FCCU_NCF_S_NCFS12_WIDTH                  (1U)
#define FCCU_NCF_S_NCFS12(x)                     (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_S_NCFS12_SHIFT)) & FCCU_NCF_S_NCFS12_MASK)
#define FCCU_NCF_S_NCFS13_MASK                   (0x2000U)
#define FCCU_NCF_S_NCFS13_SHIFT                  (13U)
#define FCCU_NCF_S_NCFS13_WIDTH                  (1U)
#define FCCU_NCF_S_NCFS13(x)                     (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_S_NCFS13_SHIFT)) & FCCU_NCF_S_NCFS13_MASK)
#define FCCU_NCF_S_NCFS14_MASK                   (0x4000U)
#define FCCU_NCF_S_NCFS14_SHIFT                  (14U)
#define FCCU_NCF_S_NCFS14_WIDTH                  (1U)
#define FCCU_NCF_S_NCFS14(x)                     (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_S_NCFS14_SHIFT)) & FCCU_NCF_S_NCFS14_MASK)
#define FCCU_NCF_S_NCFS15_MASK                   (0x8000U)
#define FCCU_NCF_S_NCFS15_SHIFT                  (15U)
#define FCCU_NCF_S_NCFS15_WIDTH                  (1U)
#define FCCU_NCF_S_NCFS15(x)                     (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_S_NCFS15_SHIFT)) & FCCU_NCF_S_NCFS15_MASK)
#define FCCU_NCF_S_NCFS16_MASK                   (0x10000U)
#define FCCU_NCF_S_NCFS16_SHIFT                  (16U)
#define FCCU_NCF_S_NCFS16_WIDTH                  (1U)
#define FCCU_NCF_S_NCFS16(x)                     (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_S_NCFS16_SHIFT)) & FCCU_NCF_S_NCFS16_MASK)
#define FCCU_NCF_S_NCFS17_MASK                   (0x20000U)
#define FCCU_NCF_S_NCFS17_SHIFT                  (17U)
#define FCCU_NCF_S_NCFS17_WIDTH                  (1U)
#define FCCU_NCF_S_NCFS17(x)                     (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_S_NCFS17_SHIFT)) & FCCU_NCF_S_NCFS17_MASK)
#define FCCU_NCF_S_NCFS18_MASK                   (0x40000U)
#define FCCU_NCF_S_NCFS18_SHIFT                  (18U)
#define FCCU_NCF_S_NCFS18_WIDTH                  (1U)
#define FCCU_NCF_S_NCFS18(x)                     (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_S_NCFS18_SHIFT)) & FCCU_NCF_S_NCFS18_MASK)
#define FCCU_NCF_S_NCFS19_MASK                   (0x80000U)
#define FCCU_NCF_S_NCFS19_SHIFT                  (19U)
#define FCCU_NCF_S_NCFS19_WIDTH                  (1U)
#define FCCU_NCF_S_NCFS19(x)                     (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_S_NCFS19_SHIFT)) & FCCU_NCF_S_NCFS19_MASK)
#define FCCU_NCF_S_NCFS20_MASK                   (0x100000U)
#define FCCU_NCF_S_NCFS20_SHIFT                  (20U)
#define FCCU_NCF_S_NCFS20_WIDTH                  (1U)
#define FCCU_NCF_S_NCFS20(x)                     (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_S_NCFS20_SHIFT)) & FCCU_NCF_S_NCFS20_MASK)
#define FCCU_NCF_S_NCFS21_MASK                   (0x200000U)
#define FCCU_NCF_S_NCFS21_SHIFT                  (21U)
#define FCCU_NCF_S_NCFS21_WIDTH                  (1U)
#define FCCU_NCF_S_NCFS21(x)                     (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_S_NCFS21_SHIFT)) & FCCU_NCF_S_NCFS21_MASK)
#define FCCU_NCF_S_NCFS22_MASK                   (0x400000U)
#define FCCU_NCF_S_NCFS22_SHIFT                  (22U)
#define FCCU_NCF_S_NCFS22_WIDTH                  (1U)
#define FCCU_NCF_S_NCFS22(x)                     (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_S_NCFS22_SHIFT)) & FCCU_NCF_S_NCFS22_MASK)
#define FCCU_NCF_S_NCFS23_MASK                   (0x800000U)
#define FCCU_NCF_S_NCFS23_SHIFT                  (23U)
#define FCCU_NCF_S_NCFS23_WIDTH                  (1U)
#define FCCU_NCF_S_NCFS23(x)                     (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_S_NCFS23_SHIFT)) & FCCU_NCF_S_NCFS23_MASK)
#define FCCU_NCF_S_NCFS24_MASK                   (0x1000000U)
#define FCCU_NCF_S_NCFS24_SHIFT                  (24U)
#define FCCU_NCF_S_NCFS24_WIDTH                  (1U)
#define FCCU_NCF_S_NCFS24(x)                     (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_S_NCFS24_SHIFT)) & FCCU_NCF_S_NCFS24_MASK)
#define FCCU_NCF_S_NCFS25_MASK                   (0x2000000U)
#define FCCU_NCF_S_NCFS25_SHIFT                  (25U)
#define FCCU_NCF_S_NCFS25_WIDTH                  (1U)
#define FCCU_NCF_S_NCFS25(x)                     (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_S_NCFS25_SHIFT)) & FCCU_NCF_S_NCFS25_MASK)
#define FCCU_NCF_S_NCFS26_MASK                   (0x4000000U)
#define FCCU_NCF_S_NCFS26_SHIFT                  (26U)
#define FCCU_NCF_S_NCFS26_WIDTH                  (1U)
#define FCCU_NCF_S_NCFS26(x)                     (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_S_NCFS26_SHIFT)) & FCCU_NCF_S_NCFS26_MASK)
#define FCCU_NCF_S_NCFS27_MASK                   (0x8000000U)
#define FCCU_NCF_S_NCFS27_SHIFT                  (27U)
#define FCCU_NCF_S_NCFS27_WIDTH                  (1U)
#define FCCU_NCF_S_NCFS27(x)                     (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_S_NCFS27_SHIFT)) & FCCU_NCF_S_NCFS27_MASK)
#define FCCU_NCF_S_NCFS28_MASK                   (0x10000000U)
#define FCCU_NCF_S_NCFS28_SHIFT                  (28U)
#define FCCU_NCF_S_NCFS28_WIDTH                  (1U)
#define FCCU_NCF_S_NCFS28(x)                     (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_S_NCFS28_SHIFT)) & FCCU_NCF_S_NCFS28_MASK)
#define FCCU_NCF_S_NCFS29_MASK                   (0x20000000U)
#define FCCU_NCF_S_NCFS29_SHIFT                  (29U)
#define FCCU_NCF_S_NCFS29_WIDTH                  (1U)
#define FCCU_NCF_S_NCFS29(x)                     (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_S_NCFS29_SHIFT)) & FCCU_NCF_S_NCFS29_MASK)
#define FCCU_NCF_S_NCFS30_MASK                   (0x40000000U)
#define FCCU_NCF_S_NCFS30_SHIFT                  (30U)
#define FCCU_NCF_S_NCFS30_WIDTH                  (1U)
#define FCCU_NCF_S_NCFS30(x)                     (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_S_NCFS30_SHIFT)) & FCCU_NCF_S_NCFS30_MASK)
#define FCCU_NCF_S_NCFS31_MASK                   (0x80000000U)
#define FCCU_NCF_S_NCFS31_SHIFT                  (31U)
#define FCCU_NCF_S_NCFS31_WIDTH                  (1U)
#define FCCU_NCF_S_NCFS31(x)                     (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_S_NCFS31_SHIFT)) & FCCU_NCF_S_NCFS31_MASK)
/*! @} */

/*! @name NCFK - Non-critical Fault Key */
/*! @{ */
#define FCCU_NCFK_NCFK_MASK                      (0xFFFFFFFFU)
#define FCCU_NCFK_NCFK_SHIFT                     (0U)
#define FCCU_NCFK_NCFK_WIDTH                     (32U)
#define FCCU_NCFK_NCFK(x)                        (((uint32_t)(((uint32_t)(x)) << FCCU_NCFK_NCFK_SHIFT)) & FCCU_NCFK_NCFK_MASK)
/*! @} */

/*! @name NCF_E - Non-critical Fault Enable */
/*! @{ */
#define FCCU_NCF_E_NCFE0_MASK                    (0x1U)
#define FCCU_NCF_E_NCFE0_SHIFT                   (0U)
#define FCCU_NCF_E_NCFE0_WIDTH                   (1U)
#define FCCU_NCF_E_NCFE0(x)                      (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_E_NCFE0_SHIFT)) & FCCU_NCF_E_NCFE0_MASK)
#define FCCU_NCF_E_NCFE1_MASK                    (0x2U)
#define FCCU_NCF_E_NCFE1_SHIFT                   (1U)
#define FCCU_NCF_E_NCFE1_WIDTH                   (1U)
#define FCCU_NCF_E_NCFE1(x)                      (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_E_NCFE1_SHIFT)) & FCCU_NCF_E_NCFE1_MASK)
#define FCCU_NCF_E_NCFE2_MASK                    (0x4U)
#define FCCU_NCF_E_NCFE2_SHIFT                   (2U)
#define FCCU_NCF_E_NCFE2_WIDTH                   (1U)
#define FCCU_NCF_E_NCFE2(x)                      (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_E_NCFE2_SHIFT)) & FCCU_NCF_E_NCFE2_MASK)
#define FCCU_NCF_E_NCFE3_MASK                    (0x8U)
#define FCCU_NCF_E_NCFE3_SHIFT                   (3U)
#define FCCU_NCF_E_NCFE3_WIDTH                   (1U)
#define FCCU_NCF_E_NCFE3(x)                      (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_E_NCFE3_SHIFT)) & FCCU_NCF_E_NCFE3_MASK)
#define FCCU_NCF_E_NCFE4_MASK                    (0x10U)
#define FCCU_NCF_E_NCFE4_SHIFT                   (4U)
#define FCCU_NCF_E_NCFE4_WIDTH                   (1U)
#define FCCU_NCF_E_NCFE4(x)                      (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_E_NCFE4_SHIFT)) & FCCU_NCF_E_NCFE4_MASK)
#define FCCU_NCF_E_NCFE5_MASK                    (0x20U)
#define FCCU_NCF_E_NCFE5_SHIFT                   (5U)
#define FCCU_NCF_E_NCFE5_WIDTH                   (1U)
#define FCCU_NCF_E_NCFE5(x)                      (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_E_NCFE5_SHIFT)) & FCCU_NCF_E_NCFE5_MASK)
#define FCCU_NCF_E_NCFE6_MASK                    (0x40U)
#define FCCU_NCF_E_NCFE6_SHIFT                   (6U)
#define FCCU_NCF_E_NCFE6_WIDTH                   (1U)
#define FCCU_NCF_E_NCFE6(x)                      (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_E_NCFE6_SHIFT)) & FCCU_NCF_E_NCFE6_MASK)
#define FCCU_NCF_E_NCFE7_MASK                    (0x80U)
#define FCCU_NCF_E_NCFE7_SHIFT                   (7U)
#define FCCU_NCF_E_NCFE7_WIDTH                   (1U)
#define FCCU_NCF_E_NCFE7(x)                      (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_E_NCFE7_SHIFT)) & FCCU_NCF_E_NCFE7_MASK)
#define FCCU_NCF_E_NCFE8_MASK                    (0x100U)
#define FCCU_NCF_E_NCFE8_SHIFT                   (8U)
#define FCCU_NCF_E_NCFE8_WIDTH                   (1U)
#define FCCU_NCF_E_NCFE8(x)                      (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_E_NCFE8_SHIFT)) & FCCU_NCF_E_NCFE8_MASK)
#define FCCU_NCF_E_NCFE9_MASK                    (0x200U)
#define FCCU_NCF_E_NCFE9_SHIFT                   (9U)
#define FCCU_NCF_E_NCFE9_WIDTH                   (1U)
#define FCCU_NCF_E_NCFE9(x)                      (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_E_NCFE9_SHIFT)) & FCCU_NCF_E_NCFE9_MASK)
#define FCCU_NCF_E_NCFE10_MASK                   (0x400U)
#define FCCU_NCF_E_NCFE10_SHIFT                  (10U)
#define FCCU_NCF_E_NCFE10_WIDTH                  (1U)
#define FCCU_NCF_E_NCFE10(x)                     (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_E_NCFE10_SHIFT)) & FCCU_NCF_E_NCFE10_MASK)
#define FCCU_NCF_E_NCFE11_MASK                   (0x800U)
#define FCCU_NCF_E_NCFE11_SHIFT                  (11U)
#define FCCU_NCF_E_NCFE11_WIDTH                  (1U)
#define FCCU_NCF_E_NCFE11(x)                     (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_E_NCFE11_SHIFT)) & FCCU_NCF_E_NCFE11_MASK)
#define FCCU_NCF_E_NCFE12_MASK                   (0x1000U)
#define FCCU_NCF_E_NCFE12_SHIFT                  (12U)
#define FCCU_NCF_E_NCFE12_WIDTH                  (1U)
#define FCCU_NCF_E_NCFE12(x)                     (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_E_NCFE12_SHIFT)) & FCCU_NCF_E_NCFE12_MASK)
#define FCCU_NCF_E_NCFE13_MASK                   (0x2000U)
#define FCCU_NCF_E_NCFE13_SHIFT                  (13U)
#define FCCU_NCF_E_NCFE13_WIDTH                  (1U)
#define FCCU_NCF_E_NCFE13(x)                     (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_E_NCFE13_SHIFT)) & FCCU_NCF_E_NCFE13_MASK)
#define FCCU_NCF_E_NCFE14_MASK                   (0x4000U)
#define FCCU_NCF_E_NCFE14_SHIFT                  (14U)
#define FCCU_NCF_E_NCFE14_WIDTH                  (1U)
#define FCCU_NCF_E_NCFE14(x)                     (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_E_NCFE14_SHIFT)) & FCCU_NCF_E_NCFE14_MASK)
#define FCCU_NCF_E_NCFE15_MASK                   (0x8000U)
#define FCCU_NCF_E_NCFE15_SHIFT                  (15U)
#define FCCU_NCF_E_NCFE15_WIDTH                  (1U)
#define FCCU_NCF_E_NCFE15(x)                     (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_E_NCFE15_SHIFT)) & FCCU_NCF_E_NCFE15_MASK)
#define FCCU_NCF_E_NCFE16_MASK                   (0x10000U)
#define FCCU_NCF_E_NCFE16_SHIFT                  (16U)
#define FCCU_NCF_E_NCFE16_WIDTH                  (1U)
#define FCCU_NCF_E_NCFE16(x)                     (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_E_NCFE16_SHIFT)) & FCCU_NCF_E_NCFE16_MASK)
#define FCCU_NCF_E_NCFE17_MASK                   (0x20000U)
#define FCCU_NCF_E_NCFE17_SHIFT                  (17U)
#define FCCU_NCF_E_NCFE17_WIDTH                  (1U)
#define FCCU_NCF_E_NCFE17(x)                     (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_E_NCFE17_SHIFT)) & FCCU_NCF_E_NCFE17_MASK)
#define FCCU_NCF_E_NCFE18_MASK                   (0x40000U)
#define FCCU_NCF_E_NCFE18_SHIFT                  (18U)
#define FCCU_NCF_E_NCFE18_WIDTH                  (1U)
#define FCCU_NCF_E_NCFE18(x)                     (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_E_NCFE18_SHIFT)) & FCCU_NCF_E_NCFE18_MASK)
#define FCCU_NCF_E_NCFE19_MASK                   (0x80000U)
#define FCCU_NCF_E_NCFE19_SHIFT                  (19U)
#define FCCU_NCF_E_NCFE19_WIDTH                  (1U)
#define FCCU_NCF_E_NCFE19(x)                     (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_E_NCFE19_SHIFT)) & FCCU_NCF_E_NCFE19_MASK)
#define FCCU_NCF_E_NCFE20_MASK                   (0x100000U)
#define FCCU_NCF_E_NCFE20_SHIFT                  (20U)
#define FCCU_NCF_E_NCFE20_WIDTH                  (1U)
#define FCCU_NCF_E_NCFE20(x)                     (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_E_NCFE20_SHIFT)) & FCCU_NCF_E_NCFE20_MASK)
#define FCCU_NCF_E_NCFE21_MASK                   (0x200000U)
#define FCCU_NCF_E_NCFE21_SHIFT                  (21U)
#define FCCU_NCF_E_NCFE21_WIDTH                  (1U)
#define FCCU_NCF_E_NCFE21(x)                     (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_E_NCFE21_SHIFT)) & FCCU_NCF_E_NCFE21_MASK)
#define FCCU_NCF_E_NCFE22_MASK                   (0x400000U)
#define FCCU_NCF_E_NCFE22_SHIFT                  (22U)
#define FCCU_NCF_E_NCFE22_WIDTH                  (1U)
#define FCCU_NCF_E_NCFE22(x)                     (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_E_NCFE22_SHIFT)) & FCCU_NCF_E_NCFE22_MASK)
#define FCCU_NCF_E_NCFE23_MASK                   (0x800000U)
#define FCCU_NCF_E_NCFE23_SHIFT                  (23U)
#define FCCU_NCF_E_NCFE23_WIDTH                  (1U)
#define FCCU_NCF_E_NCFE23(x)                     (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_E_NCFE23_SHIFT)) & FCCU_NCF_E_NCFE23_MASK)
#define FCCU_NCF_E_NCFE24_MASK                   (0x1000000U)
#define FCCU_NCF_E_NCFE24_SHIFT                  (24U)
#define FCCU_NCF_E_NCFE24_WIDTH                  (1U)
#define FCCU_NCF_E_NCFE24(x)                     (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_E_NCFE24_SHIFT)) & FCCU_NCF_E_NCFE24_MASK)
#define FCCU_NCF_E_NCFE25_MASK                   (0x2000000U)
#define FCCU_NCF_E_NCFE25_SHIFT                  (25U)
#define FCCU_NCF_E_NCFE25_WIDTH                  (1U)
#define FCCU_NCF_E_NCFE25(x)                     (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_E_NCFE25_SHIFT)) & FCCU_NCF_E_NCFE25_MASK)
#define FCCU_NCF_E_NCFE26_MASK                   (0x4000000U)
#define FCCU_NCF_E_NCFE26_SHIFT                  (26U)
#define FCCU_NCF_E_NCFE26_WIDTH                  (1U)
#define FCCU_NCF_E_NCFE26(x)                     (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_E_NCFE26_SHIFT)) & FCCU_NCF_E_NCFE26_MASK)
#define FCCU_NCF_E_NCFE27_MASK                   (0x8000000U)
#define FCCU_NCF_E_NCFE27_SHIFT                  (27U)
#define FCCU_NCF_E_NCFE27_WIDTH                  (1U)
#define FCCU_NCF_E_NCFE27(x)                     (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_E_NCFE27_SHIFT)) & FCCU_NCF_E_NCFE27_MASK)
#define FCCU_NCF_E_NCFE28_MASK                   (0x10000000U)
#define FCCU_NCF_E_NCFE28_SHIFT                  (28U)
#define FCCU_NCF_E_NCFE28_WIDTH                  (1U)
#define FCCU_NCF_E_NCFE28(x)                     (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_E_NCFE28_SHIFT)) & FCCU_NCF_E_NCFE28_MASK)
#define FCCU_NCF_E_NCFE29_MASK                   (0x20000000U)
#define FCCU_NCF_E_NCFE29_SHIFT                  (29U)
#define FCCU_NCF_E_NCFE29_WIDTH                  (1U)
#define FCCU_NCF_E_NCFE29(x)                     (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_E_NCFE29_SHIFT)) & FCCU_NCF_E_NCFE29_MASK)
#define FCCU_NCF_E_NCFE30_MASK                   (0x40000000U)
#define FCCU_NCF_E_NCFE30_SHIFT                  (30U)
#define FCCU_NCF_E_NCFE30_WIDTH                  (1U)
#define FCCU_NCF_E_NCFE30(x)                     (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_E_NCFE30_SHIFT)) & FCCU_NCF_E_NCFE30_MASK)
#define FCCU_NCF_E_NCFE31_MASK                   (0x80000000U)
#define FCCU_NCF_E_NCFE31_SHIFT                  (31U)
#define FCCU_NCF_E_NCFE31_WIDTH                  (1U)
#define FCCU_NCF_E_NCFE31(x)                     (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_E_NCFE31_SHIFT)) & FCCU_NCF_E_NCFE31_MASK)
/*! @} */

/*! @name NCF_TOE - Non-critical-Fault Alarm-State Timeout Enable */
/*! @{ */
#define FCCU_NCF_TOE_NCFTOE0_MASK                (0x1U)
#define FCCU_NCF_TOE_NCFTOE0_SHIFT               (0U)
#define FCCU_NCF_TOE_NCFTOE0_WIDTH               (1U)
#define FCCU_NCF_TOE_NCFTOE0(x)                  (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_TOE_NCFTOE0_SHIFT)) & FCCU_NCF_TOE_NCFTOE0_MASK)
#define FCCU_NCF_TOE_NCFTOE1_MASK                (0x2U)
#define FCCU_NCF_TOE_NCFTOE1_SHIFT               (1U)
#define FCCU_NCF_TOE_NCFTOE1_WIDTH               (1U)
#define FCCU_NCF_TOE_NCFTOE1(x)                  (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_TOE_NCFTOE1_SHIFT)) & FCCU_NCF_TOE_NCFTOE1_MASK)
#define FCCU_NCF_TOE_NCFTOE2_MASK                (0x4U)
#define FCCU_NCF_TOE_NCFTOE2_SHIFT               (2U)
#define FCCU_NCF_TOE_NCFTOE2_WIDTH               (1U)
#define FCCU_NCF_TOE_NCFTOE2(x)                  (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_TOE_NCFTOE2_SHIFT)) & FCCU_NCF_TOE_NCFTOE2_MASK)
#define FCCU_NCF_TOE_NCFTOE3_MASK                (0x8U)
#define FCCU_NCF_TOE_NCFTOE3_SHIFT               (3U)
#define FCCU_NCF_TOE_NCFTOE3_WIDTH               (1U)
#define FCCU_NCF_TOE_NCFTOE3(x)                  (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_TOE_NCFTOE3_SHIFT)) & FCCU_NCF_TOE_NCFTOE3_MASK)
#define FCCU_NCF_TOE_NCFTOE4_MASK                (0x10U)
#define FCCU_NCF_TOE_NCFTOE4_SHIFT               (4U)
#define FCCU_NCF_TOE_NCFTOE4_WIDTH               (1U)
#define FCCU_NCF_TOE_NCFTOE4(x)                  (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_TOE_NCFTOE4_SHIFT)) & FCCU_NCF_TOE_NCFTOE4_MASK)
#define FCCU_NCF_TOE_NCFTOE5_MASK                (0x20U)
#define FCCU_NCF_TOE_NCFTOE5_SHIFT               (5U)
#define FCCU_NCF_TOE_NCFTOE5_WIDTH               (1U)
#define FCCU_NCF_TOE_NCFTOE5(x)                  (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_TOE_NCFTOE5_SHIFT)) & FCCU_NCF_TOE_NCFTOE5_MASK)
#define FCCU_NCF_TOE_NCFTOE6_MASK                (0x40U)
#define FCCU_NCF_TOE_NCFTOE6_SHIFT               (6U)
#define FCCU_NCF_TOE_NCFTOE6_WIDTH               (1U)
#define FCCU_NCF_TOE_NCFTOE6(x)                  (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_TOE_NCFTOE6_SHIFT)) & FCCU_NCF_TOE_NCFTOE6_MASK)
#define FCCU_NCF_TOE_NCFTOE7_MASK                (0x80U)
#define FCCU_NCF_TOE_NCFTOE7_SHIFT               (7U)
#define FCCU_NCF_TOE_NCFTOE7_WIDTH               (1U)
#define FCCU_NCF_TOE_NCFTOE7(x)                  (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_TOE_NCFTOE7_SHIFT)) & FCCU_NCF_TOE_NCFTOE7_MASK)
#define FCCU_NCF_TOE_NCFTOE8_MASK                (0x100U)
#define FCCU_NCF_TOE_NCFTOE8_SHIFT               (8U)
#define FCCU_NCF_TOE_NCFTOE8_WIDTH               (1U)
#define FCCU_NCF_TOE_NCFTOE8(x)                  (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_TOE_NCFTOE8_SHIFT)) & FCCU_NCF_TOE_NCFTOE8_MASK)
#define FCCU_NCF_TOE_NCFTOE9_MASK                (0x200U)
#define FCCU_NCF_TOE_NCFTOE9_SHIFT               (9U)
#define FCCU_NCF_TOE_NCFTOE9_WIDTH               (1U)
#define FCCU_NCF_TOE_NCFTOE9(x)                  (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_TOE_NCFTOE9_SHIFT)) & FCCU_NCF_TOE_NCFTOE9_MASK)
#define FCCU_NCF_TOE_NCFTOE10_MASK               (0x400U)
#define FCCU_NCF_TOE_NCFTOE10_SHIFT              (10U)
#define FCCU_NCF_TOE_NCFTOE10_WIDTH              (1U)
#define FCCU_NCF_TOE_NCFTOE10(x)                 (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_TOE_NCFTOE10_SHIFT)) & FCCU_NCF_TOE_NCFTOE10_MASK)
#define FCCU_NCF_TOE_NCFTOE11_MASK               (0x800U)
#define FCCU_NCF_TOE_NCFTOE11_SHIFT              (11U)
#define FCCU_NCF_TOE_NCFTOE11_WIDTH              (1U)
#define FCCU_NCF_TOE_NCFTOE11(x)                 (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_TOE_NCFTOE11_SHIFT)) & FCCU_NCF_TOE_NCFTOE11_MASK)
#define FCCU_NCF_TOE_NCFTOE12_MASK               (0x1000U)
#define FCCU_NCF_TOE_NCFTOE12_SHIFT              (12U)
#define FCCU_NCF_TOE_NCFTOE12_WIDTH              (1U)
#define FCCU_NCF_TOE_NCFTOE12(x)                 (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_TOE_NCFTOE12_SHIFT)) & FCCU_NCF_TOE_NCFTOE12_MASK)
#define FCCU_NCF_TOE_NCFTOE13_MASK               (0x2000U)
#define FCCU_NCF_TOE_NCFTOE13_SHIFT              (13U)
#define FCCU_NCF_TOE_NCFTOE13_WIDTH              (1U)
#define FCCU_NCF_TOE_NCFTOE13(x)                 (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_TOE_NCFTOE13_SHIFT)) & FCCU_NCF_TOE_NCFTOE13_MASK)
#define FCCU_NCF_TOE_NCFTOE14_MASK               (0x4000U)
#define FCCU_NCF_TOE_NCFTOE14_SHIFT              (14U)
#define FCCU_NCF_TOE_NCFTOE14_WIDTH              (1U)
#define FCCU_NCF_TOE_NCFTOE14(x)                 (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_TOE_NCFTOE14_SHIFT)) & FCCU_NCF_TOE_NCFTOE14_MASK)
#define FCCU_NCF_TOE_NCFTOE15_MASK               (0x8000U)
#define FCCU_NCF_TOE_NCFTOE15_SHIFT              (15U)
#define FCCU_NCF_TOE_NCFTOE15_WIDTH              (1U)
#define FCCU_NCF_TOE_NCFTOE15(x)                 (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_TOE_NCFTOE15_SHIFT)) & FCCU_NCF_TOE_NCFTOE15_MASK)
#define FCCU_NCF_TOE_NCFTOE16_MASK               (0x10000U)
#define FCCU_NCF_TOE_NCFTOE16_SHIFT              (16U)
#define FCCU_NCF_TOE_NCFTOE16_WIDTH              (1U)
#define FCCU_NCF_TOE_NCFTOE16(x)                 (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_TOE_NCFTOE16_SHIFT)) & FCCU_NCF_TOE_NCFTOE16_MASK)
#define FCCU_NCF_TOE_NCFTOE17_MASK               (0x20000U)
#define FCCU_NCF_TOE_NCFTOE17_SHIFT              (17U)
#define FCCU_NCF_TOE_NCFTOE17_WIDTH              (1U)
#define FCCU_NCF_TOE_NCFTOE17(x)                 (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_TOE_NCFTOE17_SHIFT)) & FCCU_NCF_TOE_NCFTOE17_MASK)
#define FCCU_NCF_TOE_NCFTOE18_MASK               (0x40000U)
#define FCCU_NCF_TOE_NCFTOE18_SHIFT              (18U)
#define FCCU_NCF_TOE_NCFTOE18_WIDTH              (1U)
#define FCCU_NCF_TOE_NCFTOE18(x)                 (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_TOE_NCFTOE18_SHIFT)) & FCCU_NCF_TOE_NCFTOE18_MASK)
#define FCCU_NCF_TOE_NCFTOE19_MASK               (0x80000U)
#define FCCU_NCF_TOE_NCFTOE19_SHIFT              (19U)
#define FCCU_NCF_TOE_NCFTOE19_WIDTH              (1U)
#define FCCU_NCF_TOE_NCFTOE19(x)                 (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_TOE_NCFTOE19_SHIFT)) & FCCU_NCF_TOE_NCFTOE19_MASK)
#define FCCU_NCF_TOE_NCFTOE20_MASK               (0x100000U)
#define FCCU_NCF_TOE_NCFTOE20_SHIFT              (20U)
#define FCCU_NCF_TOE_NCFTOE20_WIDTH              (1U)
#define FCCU_NCF_TOE_NCFTOE20(x)                 (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_TOE_NCFTOE20_SHIFT)) & FCCU_NCF_TOE_NCFTOE20_MASK)
#define FCCU_NCF_TOE_NCFTOE21_MASK               (0x200000U)
#define FCCU_NCF_TOE_NCFTOE21_SHIFT              (21U)
#define FCCU_NCF_TOE_NCFTOE21_WIDTH              (1U)
#define FCCU_NCF_TOE_NCFTOE21(x)                 (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_TOE_NCFTOE21_SHIFT)) & FCCU_NCF_TOE_NCFTOE21_MASK)
#define FCCU_NCF_TOE_NCFTOE22_MASK               (0x400000U)
#define FCCU_NCF_TOE_NCFTOE22_SHIFT              (22U)
#define FCCU_NCF_TOE_NCFTOE22_WIDTH              (1U)
#define FCCU_NCF_TOE_NCFTOE22(x)                 (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_TOE_NCFTOE22_SHIFT)) & FCCU_NCF_TOE_NCFTOE22_MASK)
#define FCCU_NCF_TOE_NCFTOE23_MASK               (0x800000U)
#define FCCU_NCF_TOE_NCFTOE23_SHIFT              (23U)
#define FCCU_NCF_TOE_NCFTOE23_WIDTH              (1U)
#define FCCU_NCF_TOE_NCFTOE23(x)                 (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_TOE_NCFTOE23_SHIFT)) & FCCU_NCF_TOE_NCFTOE23_MASK)
#define FCCU_NCF_TOE_NCFTOE24_MASK               (0x1000000U)
#define FCCU_NCF_TOE_NCFTOE24_SHIFT              (24U)
#define FCCU_NCF_TOE_NCFTOE24_WIDTH              (1U)
#define FCCU_NCF_TOE_NCFTOE24(x)                 (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_TOE_NCFTOE24_SHIFT)) & FCCU_NCF_TOE_NCFTOE24_MASK)
#define FCCU_NCF_TOE_NCFTOE25_MASK               (0x2000000U)
#define FCCU_NCF_TOE_NCFTOE25_SHIFT              (25U)
#define FCCU_NCF_TOE_NCFTOE25_WIDTH              (1U)
#define FCCU_NCF_TOE_NCFTOE25(x)                 (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_TOE_NCFTOE25_SHIFT)) & FCCU_NCF_TOE_NCFTOE25_MASK)
#define FCCU_NCF_TOE_NCFTOE26_MASK               (0x4000000U)
#define FCCU_NCF_TOE_NCFTOE26_SHIFT              (26U)
#define FCCU_NCF_TOE_NCFTOE26_WIDTH              (1U)
#define FCCU_NCF_TOE_NCFTOE26(x)                 (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_TOE_NCFTOE26_SHIFT)) & FCCU_NCF_TOE_NCFTOE26_MASK)
#define FCCU_NCF_TOE_NCFTOE27_MASK               (0x8000000U)
#define FCCU_NCF_TOE_NCFTOE27_SHIFT              (27U)
#define FCCU_NCF_TOE_NCFTOE27_WIDTH              (1U)
#define FCCU_NCF_TOE_NCFTOE27(x)                 (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_TOE_NCFTOE27_SHIFT)) & FCCU_NCF_TOE_NCFTOE27_MASK)
#define FCCU_NCF_TOE_NCFTOE28_MASK               (0x10000000U)
#define FCCU_NCF_TOE_NCFTOE28_SHIFT              (28U)
#define FCCU_NCF_TOE_NCFTOE28_WIDTH              (1U)
#define FCCU_NCF_TOE_NCFTOE28(x)                 (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_TOE_NCFTOE28_SHIFT)) & FCCU_NCF_TOE_NCFTOE28_MASK)
#define FCCU_NCF_TOE_NCFTOE29_MASK               (0x20000000U)
#define FCCU_NCF_TOE_NCFTOE29_SHIFT              (29U)
#define FCCU_NCF_TOE_NCFTOE29_WIDTH              (1U)
#define FCCU_NCF_TOE_NCFTOE29(x)                 (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_TOE_NCFTOE29_SHIFT)) & FCCU_NCF_TOE_NCFTOE29_MASK)
#define FCCU_NCF_TOE_NCFTOE30_MASK               (0x40000000U)
#define FCCU_NCF_TOE_NCFTOE30_SHIFT              (30U)
#define FCCU_NCF_TOE_NCFTOE30_WIDTH              (1U)
#define FCCU_NCF_TOE_NCFTOE30(x)                 (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_TOE_NCFTOE30_SHIFT)) & FCCU_NCF_TOE_NCFTOE30_MASK)
#define FCCU_NCF_TOE_NCFTOE31_MASK               (0x80000000U)
#define FCCU_NCF_TOE_NCFTOE31_SHIFT              (31U)
#define FCCU_NCF_TOE_NCFTOE31_WIDTH              (1U)
#define FCCU_NCF_TOE_NCFTOE31(x)                 (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_TOE_NCFTOE31_SHIFT)) & FCCU_NCF_TOE_NCFTOE31_MASK)
/*! @} */

/*! @name NCF_TO - Non-critical-Fault Alarm-State Timeout Interval */
/*! @{ */
#define FCCU_NCF_TO_TO_MASK                      (0xFFFFFFFFU)
#define FCCU_NCF_TO_TO_SHIFT                     (0U)
#define FCCU_NCF_TO_TO_WIDTH                     (32U)
#define FCCU_NCF_TO_TO(x)                        (((uint32_t)(((uint32_t)(x)) << FCCU_NCF_TO_TO_SHIFT)) & FCCU_NCF_TO_TO_MASK)
/*! @} */

/*! @name CFG_TO - Configuration-State Timeout Interval */
/*! @{ */
#define FCCU_CFG_TO_TO_MASK                      (0x7U)
#define FCCU_CFG_TO_TO_SHIFT                     (0U)
#define FCCU_CFG_TO_TO_WIDTH                     (3U)
#define FCCU_CFG_TO_TO(x)                        (((uint32_t)(((uint32_t)(x)) << FCCU_CFG_TO_TO_SHIFT)) & FCCU_CFG_TO_TO_MASK)
/*! @} */

/*! @name EINOUT - IO Control */
/*! @{ */
#define FCCU_EINOUT_EOUT0_MASK                   (0x1U)
#define FCCU_EINOUT_EOUT0_SHIFT                  (0U)
#define FCCU_EINOUT_EOUT0_WIDTH                  (1U)
#define FCCU_EINOUT_EOUT0(x)                     (((uint32_t)(((uint32_t)(x)) << FCCU_EINOUT_EOUT0_SHIFT)) & FCCU_EINOUT_EOUT0_MASK)
#define FCCU_EINOUT_EOUT1_MASK                   (0x2U)
#define FCCU_EINOUT_EOUT1_SHIFT                  (1U)
#define FCCU_EINOUT_EOUT1_WIDTH                  (1U)
#define FCCU_EINOUT_EOUT1(x)                     (((uint32_t)(((uint32_t)(x)) << FCCU_EINOUT_EOUT1_SHIFT)) & FCCU_EINOUT_EOUT1_MASK)
#define FCCU_EINOUT_EIN0_MASK                    (0x10U)
#define FCCU_EINOUT_EIN0_SHIFT                   (4U)
#define FCCU_EINOUT_EIN0_WIDTH                   (1U)
#define FCCU_EINOUT_EIN0(x)                      (((uint32_t)(((uint32_t)(x)) << FCCU_EINOUT_EIN0_SHIFT)) & FCCU_EINOUT_EIN0_MASK)
#define FCCU_EINOUT_EIN1_MASK                    (0x20U)
#define FCCU_EINOUT_EIN1_SHIFT                   (5U)
#define FCCU_EINOUT_EIN1_WIDTH                   (1U)
#define FCCU_EINOUT_EIN1(x)                      (((uint32_t)(((uint32_t)(x)) << FCCU_EINOUT_EIN1_SHIFT)) & FCCU_EINOUT_EIN1_MASK)
/*! @} */

/*! @name STAT - Status */
/*! @{ */
#define FCCU_STAT_STATUS_MASK                    (0x7U)
#define FCCU_STAT_STATUS_SHIFT                   (0U)
#define FCCU_STAT_STATUS_WIDTH                   (3U)
#define FCCU_STAT_STATUS(x)                      (((uint32_t)(((uint32_t)(x)) << FCCU_STAT_STATUS_SHIFT)) & FCCU_STAT_STATUS_MASK)
#define FCCU_STAT_ESTAT_MASK                     (0x8U)
#define FCCU_STAT_ESTAT_SHIFT                    (3U)
#define FCCU_STAT_ESTAT_WIDTH                    (1U)
#define FCCU_STAT_ESTAT(x)                       (((uint32_t)(((uint32_t)(x)) << FCCU_STAT_ESTAT_SHIFT)) & FCCU_STAT_ESTAT_MASK)
#define FCCU_STAT_PhysicErrorPin_MASK            (0x30U)
#define FCCU_STAT_PhysicErrorPin_SHIFT           (4U)
#define FCCU_STAT_PhysicErrorPin_WIDTH           (2U)
#define FCCU_STAT_PhysicErrorPin(x)              (((uint32_t)(((uint32_t)(x)) << FCCU_STAT_PhysicErrorPin_SHIFT)) & FCCU_STAT_PhysicErrorPin_MASK)
/*! @} */

/*! @name N2AF_STATUS - Normal-to-Alarm Freeze Status */
/*! @{ */
#define FCCU_N2AF_STATUS_NAFS_MASK               (0xFFU)
#define FCCU_N2AF_STATUS_NAFS_SHIFT              (0U)
#define FCCU_N2AF_STATUS_NAFS_WIDTH              (8U)
#define FCCU_N2AF_STATUS_NAFS(x)                 (((uint32_t)(((uint32_t)(x)) << FCCU_N2AF_STATUS_NAFS_SHIFT)) & FCCU_N2AF_STATUS_NAFS_MASK)
/*! @} */

/*! @name A2FF_STATUS - Alarm-to-Fault Freeze Status */
/*! @{ */
#define FCCU_A2FF_STATUS_AFFS_MASK               (0xFFU)
#define FCCU_A2FF_STATUS_AFFS_SHIFT              (0U)
#define FCCU_A2FF_STATUS_AFFS_WIDTH              (8U)
#define FCCU_A2FF_STATUS_AFFS(x)                 (((uint32_t)(((uint32_t)(x)) << FCCU_A2FF_STATUS_AFFS_SHIFT)) & FCCU_A2FF_STATUS_AFFS_MASK)
#define FCCU_A2FF_STATUS_AF_SRC_MASK             (0x300U)
#define FCCU_A2FF_STATUS_AF_SRC_SHIFT            (8U)
#define FCCU_A2FF_STATUS_AF_SRC_WIDTH            (2U)
#define FCCU_A2FF_STATUS_AF_SRC(x)               (((uint32_t)(((uint32_t)(x)) << FCCU_A2FF_STATUS_AF_SRC_SHIFT)) & FCCU_A2FF_STATUS_AF_SRC_MASK)
/*! @} */

/*! @name N2FF_STATUS - Normal-to-Fault Freeze Status */
/*! @{ */
#define FCCU_N2FF_STATUS_NFFS_MASK               (0xFFU)
#define FCCU_N2FF_STATUS_NFFS_SHIFT              (0U)
#define FCCU_N2FF_STATUS_NFFS_WIDTH              (8U)
#define FCCU_N2FF_STATUS_NFFS(x)                 (((uint32_t)(((uint32_t)(x)) << FCCU_N2FF_STATUS_NFFS_SHIFT)) & FCCU_N2FF_STATUS_NFFS_MASK)
#define FCCU_N2FF_STATUS_NF_SRC_MASK             (0x300U)
#define FCCU_N2FF_STATUS_NF_SRC_SHIFT            (8U)
#define FCCU_N2FF_STATUS_NF_SRC_WIDTH            (2U)
#define FCCU_N2FF_STATUS_NF_SRC(x)               (((uint32_t)(((uint32_t)(x)) << FCCU_N2FF_STATUS_NF_SRC_SHIFT)) & FCCU_N2FF_STATUS_NF_SRC_MASK)
/*! @} */

/*! @name F2AF_STATUS - Fault-to-Alarm Freeze Status */
/*! @{ */
#define FCCU_F2AF_STATUS_FAFS_MASK               (0x1FFU)
#define FCCU_F2AF_STATUS_FAFS_SHIFT              (0U)
#define FCCU_F2AF_STATUS_FAFS_WIDTH              (9U)
#define FCCU_F2AF_STATUS_FAFS(x)                 (((uint32_t)(((uint32_t)(x)) << FCCU_F2AF_STATUS_FAFS_SHIFT)) & FCCU_F2AF_STATUS_FAFS_MASK)
/*! @} */

/*! @name NCFF - Non-critical Fault Fake */
/*! @{ */
#define FCCU_NCFF_FNCFC_MASK                     (0x7FU)
#define FCCU_NCFF_FNCFC_SHIFT                    (0U)
#define FCCU_NCFF_FNCFC_WIDTH                    (7U)
#define FCCU_NCFF_FNCFC(x)                       (((uint32_t)(((uint32_t)(x)) << FCCU_NCFF_FNCFC_SHIFT)) & FCCU_NCFF_FNCFC_MASK)
/*! @} */

/*! @name IRQ_STAT - IRQ Status */
/*! @{ */
#define FCCU_IRQ_STAT_CFG_TO_STAT_MASK           (0x1U)
#define FCCU_IRQ_STAT_CFG_TO_STAT_SHIFT          (0U)
#define FCCU_IRQ_STAT_CFG_TO_STAT_WIDTH          (1U)
#define FCCU_IRQ_STAT_CFG_TO_STAT(x)             (((uint32_t)(((uint32_t)(x)) << FCCU_IRQ_STAT_CFG_TO_STAT_SHIFT)) & FCCU_IRQ_STAT_CFG_TO_STAT_MASK)
#define FCCU_IRQ_STAT_ALRM_STAT_MASK             (0x2U)
#define FCCU_IRQ_STAT_ALRM_STAT_SHIFT            (1U)
#define FCCU_IRQ_STAT_ALRM_STAT_WIDTH            (1U)
#define FCCU_IRQ_STAT_ALRM_STAT(x)               (((uint32_t)(((uint32_t)(x)) << FCCU_IRQ_STAT_ALRM_STAT_SHIFT)) & FCCU_IRQ_STAT_ALRM_STAT_MASK)
#define FCCU_IRQ_STAT_NMI_STAT_MASK              (0x4U)
#define FCCU_IRQ_STAT_NMI_STAT_SHIFT             (2U)
#define FCCU_IRQ_STAT_NMI_STAT_WIDTH             (1U)
#define FCCU_IRQ_STAT_NMI_STAT(x)                (((uint32_t)(((uint32_t)(x)) << FCCU_IRQ_STAT_NMI_STAT_SHIFT)) & FCCU_IRQ_STAT_NMI_STAT_MASK)
/*! @} */

/*! @name IRQ_EN - IRQ Enable */
/*! @{ */
#define FCCU_IRQ_EN_CFG_TO_IEN_MASK              (0x1U)
#define FCCU_IRQ_EN_CFG_TO_IEN_SHIFT             (0U)
#define FCCU_IRQ_EN_CFG_TO_IEN_WIDTH             (1U)
#define FCCU_IRQ_EN_CFG_TO_IEN(x)                (((uint32_t)(((uint32_t)(x)) << FCCU_IRQ_EN_CFG_TO_IEN_SHIFT)) & FCCU_IRQ_EN_CFG_TO_IEN_MASK)
/*! @} */

/*! @name TRANS_LOCK - Transient Configuration Lock */
/*! @{ */
#define FCCU_TRANS_LOCK_TRANSKEY_MASK            (0x1FFU)
#define FCCU_TRANS_LOCK_TRANSKEY_SHIFT           (0U)
#define FCCU_TRANS_LOCK_TRANSKEY_WIDTH           (9U)
#define FCCU_TRANS_LOCK_TRANSKEY(x)              (((uint32_t)(((uint32_t)(x)) << FCCU_TRANS_LOCK_TRANSKEY_SHIFT)) & FCCU_TRANS_LOCK_TRANSKEY_MASK)
/*! @} */

/*! @name PERMNT_LOCK - Permanent Configuration Lock */
/*! @{ */
#define FCCU_PERMNT_LOCK_PERMNTKEY_MASK          (0x1FFU)
#define FCCU_PERMNT_LOCK_PERMNTKEY_SHIFT         (0U)
#define FCCU_PERMNT_LOCK_PERMNTKEY_WIDTH         (9U)
#define FCCU_PERMNT_LOCK_PERMNTKEY(x)            (((uint32_t)(((uint32_t)(x)) << FCCU_PERMNT_LOCK_PERMNTKEY_SHIFT)) & FCCU_PERMNT_LOCK_PERMNTKEY_MASK)
/*! @} */

/*! @name DELTA_T - Delta T */
/*! @{ */
#define FCCU_DELTA_T_DELTA_T_MASK                (0x3FFFU)
#define FCCU_DELTA_T_DELTA_T_SHIFT               (0U)
#define FCCU_DELTA_T_DELTA_T_WIDTH               (14U)
#define FCCU_DELTA_T_DELTA_T(x)                  (((uint32_t)(((uint32_t)(x)) << FCCU_DELTA_T_DELTA_T_SHIFT)) & FCCU_DELTA_T_DELTA_T_MASK)
/*! @} */

/*! @name IRQ_ALARM_EN - Non-critical Alarm-State Interrupt-Request Enable */
/*! @{ */
#define FCCU_IRQ_ALARM_EN_IRQEN0_MASK            (0x1U)
#define FCCU_IRQ_ALARM_EN_IRQEN0_SHIFT           (0U)
#define FCCU_IRQ_ALARM_EN_IRQEN0_WIDTH           (1U)
#define FCCU_IRQ_ALARM_EN_IRQEN0(x)              (((uint32_t)(((uint32_t)(x)) << FCCU_IRQ_ALARM_EN_IRQEN0_SHIFT)) & FCCU_IRQ_ALARM_EN_IRQEN0_MASK)
#define FCCU_IRQ_ALARM_EN_IRQEN1_MASK            (0x2U)
#define FCCU_IRQ_ALARM_EN_IRQEN1_SHIFT           (1U)
#define FCCU_IRQ_ALARM_EN_IRQEN1_WIDTH           (1U)
#define FCCU_IRQ_ALARM_EN_IRQEN1(x)              (((uint32_t)(((uint32_t)(x)) << FCCU_IRQ_ALARM_EN_IRQEN1_SHIFT)) & FCCU_IRQ_ALARM_EN_IRQEN1_MASK)
#define FCCU_IRQ_ALARM_EN_IRQEN2_MASK            (0x4U)
#define FCCU_IRQ_ALARM_EN_IRQEN2_SHIFT           (2U)
#define FCCU_IRQ_ALARM_EN_IRQEN2_WIDTH           (1U)
#define FCCU_IRQ_ALARM_EN_IRQEN2(x)              (((uint32_t)(((uint32_t)(x)) << FCCU_IRQ_ALARM_EN_IRQEN2_SHIFT)) & FCCU_IRQ_ALARM_EN_IRQEN2_MASK)
#define FCCU_IRQ_ALARM_EN_IRQEN3_MASK            (0x8U)
#define FCCU_IRQ_ALARM_EN_IRQEN3_SHIFT           (3U)
#define FCCU_IRQ_ALARM_EN_IRQEN3_WIDTH           (1U)
#define FCCU_IRQ_ALARM_EN_IRQEN3(x)              (((uint32_t)(((uint32_t)(x)) << FCCU_IRQ_ALARM_EN_IRQEN3_SHIFT)) & FCCU_IRQ_ALARM_EN_IRQEN3_MASK)
#define FCCU_IRQ_ALARM_EN_IRQEN4_MASK            (0x10U)
#define FCCU_IRQ_ALARM_EN_IRQEN4_SHIFT           (4U)
#define FCCU_IRQ_ALARM_EN_IRQEN4_WIDTH           (1U)
#define FCCU_IRQ_ALARM_EN_IRQEN4(x)              (((uint32_t)(((uint32_t)(x)) << FCCU_IRQ_ALARM_EN_IRQEN4_SHIFT)) & FCCU_IRQ_ALARM_EN_IRQEN4_MASK)
#define FCCU_IRQ_ALARM_EN_IRQEN5_MASK            (0x20U)
#define FCCU_IRQ_ALARM_EN_IRQEN5_SHIFT           (5U)
#define FCCU_IRQ_ALARM_EN_IRQEN5_WIDTH           (1U)
#define FCCU_IRQ_ALARM_EN_IRQEN5(x)              (((uint32_t)(((uint32_t)(x)) << FCCU_IRQ_ALARM_EN_IRQEN5_SHIFT)) & FCCU_IRQ_ALARM_EN_IRQEN5_MASK)
#define FCCU_IRQ_ALARM_EN_IRQEN6_MASK            (0x40U)
#define FCCU_IRQ_ALARM_EN_IRQEN6_SHIFT           (6U)
#define FCCU_IRQ_ALARM_EN_IRQEN6_WIDTH           (1U)
#define FCCU_IRQ_ALARM_EN_IRQEN6(x)              (((uint32_t)(((uint32_t)(x)) << FCCU_IRQ_ALARM_EN_IRQEN6_SHIFT)) & FCCU_IRQ_ALARM_EN_IRQEN6_MASK)
#define FCCU_IRQ_ALARM_EN_IRQEN7_MASK            (0x80U)
#define FCCU_IRQ_ALARM_EN_IRQEN7_SHIFT           (7U)
#define FCCU_IRQ_ALARM_EN_IRQEN7_WIDTH           (1U)
#define FCCU_IRQ_ALARM_EN_IRQEN7(x)              (((uint32_t)(((uint32_t)(x)) << FCCU_IRQ_ALARM_EN_IRQEN7_SHIFT)) & FCCU_IRQ_ALARM_EN_IRQEN7_MASK)
#define FCCU_IRQ_ALARM_EN_IRQEN8_MASK            (0x100U)
#define FCCU_IRQ_ALARM_EN_IRQEN8_SHIFT           (8U)
#define FCCU_IRQ_ALARM_EN_IRQEN8_WIDTH           (1U)
#define FCCU_IRQ_ALARM_EN_IRQEN8(x)              (((uint32_t)(((uint32_t)(x)) << FCCU_IRQ_ALARM_EN_IRQEN8_SHIFT)) & FCCU_IRQ_ALARM_EN_IRQEN8_MASK)
#define FCCU_IRQ_ALARM_EN_IRQEN9_MASK            (0x200U)
#define FCCU_IRQ_ALARM_EN_IRQEN9_SHIFT           (9U)
#define FCCU_IRQ_ALARM_EN_IRQEN9_WIDTH           (1U)
#define FCCU_IRQ_ALARM_EN_IRQEN9(x)              (((uint32_t)(((uint32_t)(x)) << FCCU_IRQ_ALARM_EN_IRQEN9_SHIFT)) & FCCU_IRQ_ALARM_EN_IRQEN9_MASK)
#define FCCU_IRQ_ALARM_EN_IRQEN10_MASK           (0x400U)
#define FCCU_IRQ_ALARM_EN_IRQEN10_SHIFT          (10U)
#define FCCU_IRQ_ALARM_EN_IRQEN10_WIDTH          (1U)
#define FCCU_IRQ_ALARM_EN_IRQEN10(x)             (((uint32_t)(((uint32_t)(x)) << FCCU_IRQ_ALARM_EN_IRQEN10_SHIFT)) & FCCU_IRQ_ALARM_EN_IRQEN10_MASK)
#define FCCU_IRQ_ALARM_EN_IRQEN11_MASK           (0x800U)
#define FCCU_IRQ_ALARM_EN_IRQEN11_SHIFT          (11U)
#define FCCU_IRQ_ALARM_EN_IRQEN11_WIDTH          (1U)
#define FCCU_IRQ_ALARM_EN_IRQEN11(x)             (((uint32_t)(((uint32_t)(x)) << FCCU_IRQ_ALARM_EN_IRQEN11_SHIFT)) & FCCU_IRQ_ALARM_EN_IRQEN11_MASK)
#define FCCU_IRQ_ALARM_EN_IRQEN12_MASK           (0x1000U)
#define FCCU_IRQ_ALARM_EN_IRQEN12_SHIFT          (12U)
#define FCCU_IRQ_ALARM_EN_IRQEN12_WIDTH          (1U)
#define FCCU_IRQ_ALARM_EN_IRQEN12(x)             (((uint32_t)(((uint32_t)(x)) << FCCU_IRQ_ALARM_EN_IRQEN12_SHIFT)) & FCCU_IRQ_ALARM_EN_IRQEN12_MASK)
#define FCCU_IRQ_ALARM_EN_IRQEN13_MASK           (0x2000U)
#define FCCU_IRQ_ALARM_EN_IRQEN13_SHIFT          (13U)
#define FCCU_IRQ_ALARM_EN_IRQEN13_WIDTH          (1U)
#define FCCU_IRQ_ALARM_EN_IRQEN13(x)             (((uint32_t)(((uint32_t)(x)) << FCCU_IRQ_ALARM_EN_IRQEN13_SHIFT)) & FCCU_IRQ_ALARM_EN_IRQEN13_MASK)
#define FCCU_IRQ_ALARM_EN_IRQEN14_MASK           (0x4000U)
#define FCCU_IRQ_ALARM_EN_IRQEN14_SHIFT          (14U)
#define FCCU_IRQ_ALARM_EN_IRQEN14_WIDTH          (1U)
#define FCCU_IRQ_ALARM_EN_IRQEN14(x)             (((uint32_t)(((uint32_t)(x)) << FCCU_IRQ_ALARM_EN_IRQEN14_SHIFT)) & FCCU_IRQ_ALARM_EN_IRQEN14_MASK)
#define FCCU_IRQ_ALARM_EN_IRQEN15_MASK           (0x8000U)
#define FCCU_IRQ_ALARM_EN_IRQEN15_SHIFT          (15U)
#define FCCU_IRQ_ALARM_EN_IRQEN15_WIDTH          (1U)
#define FCCU_IRQ_ALARM_EN_IRQEN15(x)             (((uint32_t)(((uint32_t)(x)) << FCCU_IRQ_ALARM_EN_IRQEN15_SHIFT)) & FCCU_IRQ_ALARM_EN_IRQEN15_MASK)
#define FCCU_IRQ_ALARM_EN_IRQEN16_MASK           (0x10000U)
#define FCCU_IRQ_ALARM_EN_IRQEN16_SHIFT          (16U)
#define FCCU_IRQ_ALARM_EN_IRQEN16_WIDTH          (1U)
#define FCCU_IRQ_ALARM_EN_IRQEN16(x)             (((uint32_t)(((uint32_t)(x)) << FCCU_IRQ_ALARM_EN_IRQEN16_SHIFT)) & FCCU_IRQ_ALARM_EN_IRQEN16_MASK)
#define FCCU_IRQ_ALARM_EN_IRQEN17_MASK           (0x20000U)
#define FCCU_IRQ_ALARM_EN_IRQEN17_SHIFT          (17U)
#define FCCU_IRQ_ALARM_EN_IRQEN17_WIDTH          (1U)
#define FCCU_IRQ_ALARM_EN_IRQEN17(x)             (((uint32_t)(((uint32_t)(x)) << FCCU_IRQ_ALARM_EN_IRQEN17_SHIFT)) & FCCU_IRQ_ALARM_EN_IRQEN17_MASK)
#define FCCU_IRQ_ALARM_EN_IRQEN18_MASK           (0x40000U)
#define FCCU_IRQ_ALARM_EN_IRQEN18_SHIFT          (18U)
#define FCCU_IRQ_ALARM_EN_IRQEN18_WIDTH          (1U)
#define FCCU_IRQ_ALARM_EN_IRQEN18(x)             (((uint32_t)(((uint32_t)(x)) << FCCU_IRQ_ALARM_EN_IRQEN18_SHIFT)) & FCCU_IRQ_ALARM_EN_IRQEN18_MASK)
#define FCCU_IRQ_ALARM_EN_IRQEN19_MASK           (0x80000U)
#define FCCU_IRQ_ALARM_EN_IRQEN19_SHIFT          (19U)
#define FCCU_IRQ_ALARM_EN_IRQEN19_WIDTH          (1U)
#define FCCU_IRQ_ALARM_EN_IRQEN19(x)             (((uint32_t)(((uint32_t)(x)) << FCCU_IRQ_ALARM_EN_IRQEN19_SHIFT)) & FCCU_IRQ_ALARM_EN_IRQEN19_MASK)
#define FCCU_IRQ_ALARM_EN_IRQEN20_MASK           (0x100000U)
#define FCCU_IRQ_ALARM_EN_IRQEN20_SHIFT          (20U)
#define FCCU_IRQ_ALARM_EN_IRQEN20_WIDTH          (1U)
#define FCCU_IRQ_ALARM_EN_IRQEN20(x)             (((uint32_t)(((uint32_t)(x)) << FCCU_IRQ_ALARM_EN_IRQEN20_SHIFT)) & FCCU_IRQ_ALARM_EN_IRQEN20_MASK)
#define FCCU_IRQ_ALARM_EN_IRQEN21_MASK           (0x200000U)
#define FCCU_IRQ_ALARM_EN_IRQEN21_SHIFT          (21U)
#define FCCU_IRQ_ALARM_EN_IRQEN21_WIDTH          (1U)
#define FCCU_IRQ_ALARM_EN_IRQEN21(x)             (((uint32_t)(((uint32_t)(x)) << FCCU_IRQ_ALARM_EN_IRQEN21_SHIFT)) & FCCU_IRQ_ALARM_EN_IRQEN21_MASK)
#define FCCU_IRQ_ALARM_EN_IRQEN22_MASK           (0x400000U)
#define FCCU_IRQ_ALARM_EN_IRQEN22_SHIFT          (22U)
#define FCCU_IRQ_ALARM_EN_IRQEN22_WIDTH          (1U)
#define FCCU_IRQ_ALARM_EN_IRQEN22(x)             (((uint32_t)(((uint32_t)(x)) << FCCU_IRQ_ALARM_EN_IRQEN22_SHIFT)) & FCCU_IRQ_ALARM_EN_IRQEN22_MASK)
#define FCCU_IRQ_ALARM_EN_IRQEN23_MASK           (0x800000U)
#define FCCU_IRQ_ALARM_EN_IRQEN23_SHIFT          (23U)
#define FCCU_IRQ_ALARM_EN_IRQEN23_WIDTH          (1U)
#define FCCU_IRQ_ALARM_EN_IRQEN23(x)             (((uint32_t)(((uint32_t)(x)) << FCCU_IRQ_ALARM_EN_IRQEN23_SHIFT)) & FCCU_IRQ_ALARM_EN_IRQEN23_MASK)
#define FCCU_IRQ_ALARM_EN_IRQEN24_MASK           (0x1000000U)
#define FCCU_IRQ_ALARM_EN_IRQEN24_SHIFT          (24U)
#define FCCU_IRQ_ALARM_EN_IRQEN24_WIDTH          (1U)
#define FCCU_IRQ_ALARM_EN_IRQEN24(x)             (((uint32_t)(((uint32_t)(x)) << FCCU_IRQ_ALARM_EN_IRQEN24_SHIFT)) & FCCU_IRQ_ALARM_EN_IRQEN24_MASK)
#define FCCU_IRQ_ALARM_EN_IRQEN25_MASK           (0x2000000U)
#define FCCU_IRQ_ALARM_EN_IRQEN25_SHIFT          (25U)
#define FCCU_IRQ_ALARM_EN_IRQEN25_WIDTH          (1U)
#define FCCU_IRQ_ALARM_EN_IRQEN25(x)             (((uint32_t)(((uint32_t)(x)) << FCCU_IRQ_ALARM_EN_IRQEN25_SHIFT)) & FCCU_IRQ_ALARM_EN_IRQEN25_MASK)
#define FCCU_IRQ_ALARM_EN_IRQEN26_MASK           (0x4000000U)
#define FCCU_IRQ_ALARM_EN_IRQEN26_SHIFT          (26U)
#define FCCU_IRQ_ALARM_EN_IRQEN26_WIDTH          (1U)
#define FCCU_IRQ_ALARM_EN_IRQEN26(x)             (((uint32_t)(((uint32_t)(x)) << FCCU_IRQ_ALARM_EN_IRQEN26_SHIFT)) & FCCU_IRQ_ALARM_EN_IRQEN26_MASK)
#define FCCU_IRQ_ALARM_EN_IRQEN27_MASK           (0x8000000U)
#define FCCU_IRQ_ALARM_EN_IRQEN27_SHIFT          (27U)
#define FCCU_IRQ_ALARM_EN_IRQEN27_WIDTH          (1U)
#define FCCU_IRQ_ALARM_EN_IRQEN27(x)             (((uint32_t)(((uint32_t)(x)) << FCCU_IRQ_ALARM_EN_IRQEN27_SHIFT)) & FCCU_IRQ_ALARM_EN_IRQEN27_MASK)
#define FCCU_IRQ_ALARM_EN_IRQEN28_MASK           (0x10000000U)
#define FCCU_IRQ_ALARM_EN_IRQEN28_SHIFT          (28U)
#define FCCU_IRQ_ALARM_EN_IRQEN28_WIDTH          (1U)
#define FCCU_IRQ_ALARM_EN_IRQEN28(x)             (((uint32_t)(((uint32_t)(x)) << FCCU_IRQ_ALARM_EN_IRQEN28_SHIFT)) & FCCU_IRQ_ALARM_EN_IRQEN28_MASK)
#define FCCU_IRQ_ALARM_EN_IRQEN29_MASK           (0x20000000U)
#define FCCU_IRQ_ALARM_EN_IRQEN29_SHIFT          (29U)
#define FCCU_IRQ_ALARM_EN_IRQEN29_WIDTH          (1U)
#define FCCU_IRQ_ALARM_EN_IRQEN29(x)             (((uint32_t)(((uint32_t)(x)) << FCCU_IRQ_ALARM_EN_IRQEN29_SHIFT)) & FCCU_IRQ_ALARM_EN_IRQEN29_MASK)
#define FCCU_IRQ_ALARM_EN_IRQEN30_MASK           (0x40000000U)
#define FCCU_IRQ_ALARM_EN_IRQEN30_SHIFT          (30U)
#define FCCU_IRQ_ALARM_EN_IRQEN30_WIDTH          (1U)
#define FCCU_IRQ_ALARM_EN_IRQEN30(x)             (((uint32_t)(((uint32_t)(x)) << FCCU_IRQ_ALARM_EN_IRQEN30_SHIFT)) & FCCU_IRQ_ALARM_EN_IRQEN30_MASK)
#define FCCU_IRQ_ALARM_EN_IRQEN31_MASK           (0x80000000U)
#define FCCU_IRQ_ALARM_EN_IRQEN31_SHIFT          (31U)
#define FCCU_IRQ_ALARM_EN_IRQEN31_WIDTH          (1U)
#define FCCU_IRQ_ALARM_EN_IRQEN31(x)             (((uint32_t)(((uint32_t)(x)) << FCCU_IRQ_ALARM_EN_IRQEN31_SHIFT)) & FCCU_IRQ_ALARM_EN_IRQEN31_MASK)
/*! @} */

/*! @name NMI_EN - Non-critical Fault-State Non-maskable-Interrupt-Request Enable */
/*! @{ */
#define FCCU_NMI_EN_NMIEN0_MASK                  (0x1U)
#define FCCU_NMI_EN_NMIEN0_SHIFT                 (0U)
#define FCCU_NMI_EN_NMIEN0_WIDTH                 (1U)
#define FCCU_NMI_EN_NMIEN0(x)                    (((uint32_t)(((uint32_t)(x)) << FCCU_NMI_EN_NMIEN0_SHIFT)) & FCCU_NMI_EN_NMIEN0_MASK)
#define FCCU_NMI_EN_NMIEN1_MASK                  (0x2U)
#define FCCU_NMI_EN_NMIEN1_SHIFT                 (1U)
#define FCCU_NMI_EN_NMIEN1_WIDTH                 (1U)
#define FCCU_NMI_EN_NMIEN1(x)                    (((uint32_t)(((uint32_t)(x)) << FCCU_NMI_EN_NMIEN1_SHIFT)) & FCCU_NMI_EN_NMIEN1_MASK)
#define FCCU_NMI_EN_NMIEN2_MASK                  (0x4U)
#define FCCU_NMI_EN_NMIEN2_SHIFT                 (2U)
#define FCCU_NMI_EN_NMIEN2_WIDTH                 (1U)
#define FCCU_NMI_EN_NMIEN2(x)                    (((uint32_t)(((uint32_t)(x)) << FCCU_NMI_EN_NMIEN2_SHIFT)) & FCCU_NMI_EN_NMIEN2_MASK)
#define FCCU_NMI_EN_NMIEN3_MASK                  (0x8U)
#define FCCU_NMI_EN_NMIEN3_SHIFT                 (3U)
#define FCCU_NMI_EN_NMIEN3_WIDTH                 (1U)
#define FCCU_NMI_EN_NMIEN3(x)                    (((uint32_t)(((uint32_t)(x)) << FCCU_NMI_EN_NMIEN3_SHIFT)) & FCCU_NMI_EN_NMIEN3_MASK)
#define FCCU_NMI_EN_NMIEN4_MASK                  (0x10U)
#define FCCU_NMI_EN_NMIEN4_SHIFT                 (4U)
#define FCCU_NMI_EN_NMIEN4_WIDTH                 (1U)
#define FCCU_NMI_EN_NMIEN4(x)                    (((uint32_t)(((uint32_t)(x)) << FCCU_NMI_EN_NMIEN4_SHIFT)) & FCCU_NMI_EN_NMIEN4_MASK)
#define FCCU_NMI_EN_NMIEN5_MASK                  (0x20U)
#define FCCU_NMI_EN_NMIEN5_SHIFT                 (5U)
#define FCCU_NMI_EN_NMIEN5_WIDTH                 (1U)
#define FCCU_NMI_EN_NMIEN5(x)                    (((uint32_t)(((uint32_t)(x)) << FCCU_NMI_EN_NMIEN5_SHIFT)) & FCCU_NMI_EN_NMIEN5_MASK)
#define FCCU_NMI_EN_NMIEN6_MASK                  (0x40U)
#define FCCU_NMI_EN_NMIEN6_SHIFT                 (6U)
#define FCCU_NMI_EN_NMIEN6_WIDTH                 (1U)
#define FCCU_NMI_EN_NMIEN6(x)                    (((uint32_t)(((uint32_t)(x)) << FCCU_NMI_EN_NMIEN6_SHIFT)) & FCCU_NMI_EN_NMIEN6_MASK)
#define FCCU_NMI_EN_NMIEN7_MASK                  (0x80U)
#define FCCU_NMI_EN_NMIEN7_SHIFT                 (7U)
#define FCCU_NMI_EN_NMIEN7_WIDTH                 (1U)
#define FCCU_NMI_EN_NMIEN7(x)                    (((uint32_t)(((uint32_t)(x)) << FCCU_NMI_EN_NMIEN7_SHIFT)) & FCCU_NMI_EN_NMIEN7_MASK)
#define FCCU_NMI_EN_NMIEN8_MASK                  (0x100U)
#define FCCU_NMI_EN_NMIEN8_SHIFT                 (8U)
#define FCCU_NMI_EN_NMIEN8_WIDTH                 (1U)
#define FCCU_NMI_EN_NMIEN8(x)                    (((uint32_t)(((uint32_t)(x)) << FCCU_NMI_EN_NMIEN8_SHIFT)) & FCCU_NMI_EN_NMIEN8_MASK)
#define FCCU_NMI_EN_NMIEN9_MASK                  (0x200U)
#define FCCU_NMI_EN_NMIEN9_SHIFT                 (9U)
#define FCCU_NMI_EN_NMIEN9_WIDTH                 (1U)
#define FCCU_NMI_EN_NMIEN9(x)                    (((uint32_t)(((uint32_t)(x)) << FCCU_NMI_EN_NMIEN9_SHIFT)) & FCCU_NMI_EN_NMIEN9_MASK)
#define FCCU_NMI_EN_NMIEN10_MASK                 (0x400U)
#define FCCU_NMI_EN_NMIEN10_SHIFT                (10U)
#define FCCU_NMI_EN_NMIEN10_WIDTH                (1U)
#define FCCU_NMI_EN_NMIEN10(x)                   (((uint32_t)(((uint32_t)(x)) << FCCU_NMI_EN_NMIEN10_SHIFT)) & FCCU_NMI_EN_NMIEN10_MASK)
#define FCCU_NMI_EN_NMIEN11_MASK                 (0x800U)
#define FCCU_NMI_EN_NMIEN11_SHIFT                (11U)
#define FCCU_NMI_EN_NMIEN11_WIDTH                (1U)
#define FCCU_NMI_EN_NMIEN11(x)                   (((uint32_t)(((uint32_t)(x)) << FCCU_NMI_EN_NMIEN11_SHIFT)) & FCCU_NMI_EN_NMIEN11_MASK)
#define FCCU_NMI_EN_NMIEN12_MASK                 (0x1000U)
#define FCCU_NMI_EN_NMIEN12_SHIFT                (12U)
#define FCCU_NMI_EN_NMIEN12_WIDTH                (1U)
#define FCCU_NMI_EN_NMIEN12(x)                   (((uint32_t)(((uint32_t)(x)) << FCCU_NMI_EN_NMIEN12_SHIFT)) & FCCU_NMI_EN_NMIEN12_MASK)
#define FCCU_NMI_EN_NMIEN13_MASK                 (0x2000U)
#define FCCU_NMI_EN_NMIEN13_SHIFT                (13U)
#define FCCU_NMI_EN_NMIEN13_WIDTH                (1U)
#define FCCU_NMI_EN_NMIEN13(x)                   (((uint32_t)(((uint32_t)(x)) << FCCU_NMI_EN_NMIEN13_SHIFT)) & FCCU_NMI_EN_NMIEN13_MASK)
#define FCCU_NMI_EN_NMIEN14_MASK                 (0x4000U)
#define FCCU_NMI_EN_NMIEN14_SHIFT                (14U)
#define FCCU_NMI_EN_NMIEN14_WIDTH                (1U)
#define FCCU_NMI_EN_NMIEN14(x)                   (((uint32_t)(((uint32_t)(x)) << FCCU_NMI_EN_NMIEN14_SHIFT)) & FCCU_NMI_EN_NMIEN14_MASK)
#define FCCU_NMI_EN_NMIEN15_MASK                 (0x8000U)
#define FCCU_NMI_EN_NMIEN15_SHIFT                (15U)
#define FCCU_NMI_EN_NMIEN15_WIDTH                (1U)
#define FCCU_NMI_EN_NMIEN15(x)                   (((uint32_t)(((uint32_t)(x)) << FCCU_NMI_EN_NMIEN15_SHIFT)) & FCCU_NMI_EN_NMIEN15_MASK)
#define FCCU_NMI_EN_NMIEN16_MASK                 (0x10000U)
#define FCCU_NMI_EN_NMIEN16_SHIFT                (16U)
#define FCCU_NMI_EN_NMIEN16_WIDTH                (1U)
#define FCCU_NMI_EN_NMIEN16(x)                   (((uint32_t)(((uint32_t)(x)) << FCCU_NMI_EN_NMIEN16_SHIFT)) & FCCU_NMI_EN_NMIEN16_MASK)
#define FCCU_NMI_EN_NMIEN17_MASK                 (0x20000U)
#define FCCU_NMI_EN_NMIEN17_SHIFT                (17U)
#define FCCU_NMI_EN_NMIEN17_WIDTH                (1U)
#define FCCU_NMI_EN_NMIEN17(x)                   (((uint32_t)(((uint32_t)(x)) << FCCU_NMI_EN_NMIEN17_SHIFT)) & FCCU_NMI_EN_NMIEN17_MASK)
#define FCCU_NMI_EN_NMIEN18_MASK                 (0x40000U)
#define FCCU_NMI_EN_NMIEN18_SHIFT                (18U)
#define FCCU_NMI_EN_NMIEN18_WIDTH                (1U)
#define FCCU_NMI_EN_NMIEN18(x)                   (((uint32_t)(((uint32_t)(x)) << FCCU_NMI_EN_NMIEN18_SHIFT)) & FCCU_NMI_EN_NMIEN18_MASK)
#define FCCU_NMI_EN_NMIEN19_MASK                 (0x80000U)
#define FCCU_NMI_EN_NMIEN19_SHIFT                (19U)
#define FCCU_NMI_EN_NMIEN19_WIDTH                (1U)
#define FCCU_NMI_EN_NMIEN19(x)                   (((uint32_t)(((uint32_t)(x)) << FCCU_NMI_EN_NMIEN19_SHIFT)) & FCCU_NMI_EN_NMIEN19_MASK)
#define FCCU_NMI_EN_NMIEN20_MASK                 (0x100000U)
#define FCCU_NMI_EN_NMIEN20_SHIFT                (20U)
#define FCCU_NMI_EN_NMIEN20_WIDTH                (1U)
#define FCCU_NMI_EN_NMIEN20(x)                   (((uint32_t)(((uint32_t)(x)) << FCCU_NMI_EN_NMIEN20_SHIFT)) & FCCU_NMI_EN_NMIEN20_MASK)
#define FCCU_NMI_EN_NMIEN21_MASK                 (0x200000U)
#define FCCU_NMI_EN_NMIEN21_SHIFT                (21U)
#define FCCU_NMI_EN_NMIEN21_WIDTH                (1U)
#define FCCU_NMI_EN_NMIEN21(x)                   (((uint32_t)(((uint32_t)(x)) << FCCU_NMI_EN_NMIEN21_SHIFT)) & FCCU_NMI_EN_NMIEN21_MASK)
#define FCCU_NMI_EN_NMIEN22_MASK                 (0x400000U)
#define FCCU_NMI_EN_NMIEN22_SHIFT                (22U)
#define FCCU_NMI_EN_NMIEN22_WIDTH                (1U)
#define FCCU_NMI_EN_NMIEN22(x)                   (((uint32_t)(((uint32_t)(x)) << FCCU_NMI_EN_NMIEN22_SHIFT)) & FCCU_NMI_EN_NMIEN22_MASK)
#define FCCU_NMI_EN_NMIEN23_MASK                 (0x800000U)
#define FCCU_NMI_EN_NMIEN23_SHIFT                (23U)
#define FCCU_NMI_EN_NMIEN23_WIDTH                (1U)
#define FCCU_NMI_EN_NMIEN23(x)                   (((uint32_t)(((uint32_t)(x)) << FCCU_NMI_EN_NMIEN23_SHIFT)) & FCCU_NMI_EN_NMIEN23_MASK)
#define FCCU_NMI_EN_NMIEN24_MASK                 (0x1000000U)
#define FCCU_NMI_EN_NMIEN24_SHIFT                (24U)
#define FCCU_NMI_EN_NMIEN24_WIDTH                (1U)
#define FCCU_NMI_EN_NMIEN24(x)                   (((uint32_t)(((uint32_t)(x)) << FCCU_NMI_EN_NMIEN24_SHIFT)) & FCCU_NMI_EN_NMIEN24_MASK)
#define FCCU_NMI_EN_NMIEN25_MASK                 (0x2000000U)
#define FCCU_NMI_EN_NMIEN25_SHIFT                (25U)
#define FCCU_NMI_EN_NMIEN25_WIDTH                (1U)
#define FCCU_NMI_EN_NMIEN25(x)                   (((uint32_t)(((uint32_t)(x)) << FCCU_NMI_EN_NMIEN25_SHIFT)) & FCCU_NMI_EN_NMIEN25_MASK)
#define FCCU_NMI_EN_NMIEN26_MASK                 (0x4000000U)
#define FCCU_NMI_EN_NMIEN26_SHIFT                (26U)
#define FCCU_NMI_EN_NMIEN26_WIDTH                (1U)
#define FCCU_NMI_EN_NMIEN26(x)                   (((uint32_t)(((uint32_t)(x)) << FCCU_NMI_EN_NMIEN26_SHIFT)) & FCCU_NMI_EN_NMIEN26_MASK)
#define FCCU_NMI_EN_NMIEN27_MASK                 (0x8000000U)
#define FCCU_NMI_EN_NMIEN27_SHIFT                (27U)
#define FCCU_NMI_EN_NMIEN27_WIDTH                (1U)
#define FCCU_NMI_EN_NMIEN27(x)                   (((uint32_t)(((uint32_t)(x)) << FCCU_NMI_EN_NMIEN27_SHIFT)) & FCCU_NMI_EN_NMIEN27_MASK)
#define FCCU_NMI_EN_NMIEN28_MASK                 (0x10000000U)
#define FCCU_NMI_EN_NMIEN28_SHIFT                (28U)
#define FCCU_NMI_EN_NMIEN28_WIDTH                (1U)
#define FCCU_NMI_EN_NMIEN28(x)                   (((uint32_t)(((uint32_t)(x)) << FCCU_NMI_EN_NMIEN28_SHIFT)) & FCCU_NMI_EN_NMIEN28_MASK)
#define FCCU_NMI_EN_NMIEN29_MASK                 (0x20000000U)
#define FCCU_NMI_EN_NMIEN29_SHIFT                (29U)
#define FCCU_NMI_EN_NMIEN29_WIDTH                (1U)
#define FCCU_NMI_EN_NMIEN29(x)                   (((uint32_t)(((uint32_t)(x)) << FCCU_NMI_EN_NMIEN29_SHIFT)) & FCCU_NMI_EN_NMIEN29_MASK)
#define FCCU_NMI_EN_NMIEN30_MASK                 (0x40000000U)
#define FCCU_NMI_EN_NMIEN30_SHIFT                (30U)
#define FCCU_NMI_EN_NMIEN30_WIDTH                (1U)
#define FCCU_NMI_EN_NMIEN30(x)                   (((uint32_t)(((uint32_t)(x)) << FCCU_NMI_EN_NMIEN30_SHIFT)) & FCCU_NMI_EN_NMIEN30_MASK)
#define FCCU_NMI_EN_NMIEN31_MASK                 (0x80000000U)
#define FCCU_NMI_EN_NMIEN31_SHIFT                (31U)
#define FCCU_NMI_EN_NMIEN31_WIDTH                (1U)
#define FCCU_NMI_EN_NMIEN31(x)                   (((uint32_t)(((uint32_t)(x)) << FCCU_NMI_EN_NMIEN31_SHIFT)) & FCCU_NMI_EN_NMIEN31_MASK)
/*! @} */

/*! @name EOUT_SIG_EN - Non-critical Fault-State EOUT Signaling Enable */
/*! @{ */
#define FCCU_EOUT_SIG_EN_EOUTEN0_MASK            (0x1U)
#define FCCU_EOUT_SIG_EN_EOUTEN0_SHIFT           (0U)
#define FCCU_EOUT_SIG_EN_EOUTEN0_WIDTH           (1U)
#define FCCU_EOUT_SIG_EN_EOUTEN0(x)              (((uint32_t)(((uint32_t)(x)) << FCCU_EOUT_SIG_EN_EOUTEN0_SHIFT)) & FCCU_EOUT_SIG_EN_EOUTEN0_MASK)
#define FCCU_EOUT_SIG_EN_EOUTEN1_MASK            (0x2U)
#define FCCU_EOUT_SIG_EN_EOUTEN1_SHIFT           (1U)
#define FCCU_EOUT_SIG_EN_EOUTEN1_WIDTH           (1U)
#define FCCU_EOUT_SIG_EN_EOUTEN1(x)              (((uint32_t)(((uint32_t)(x)) << FCCU_EOUT_SIG_EN_EOUTEN1_SHIFT)) & FCCU_EOUT_SIG_EN_EOUTEN1_MASK)
#define FCCU_EOUT_SIG_EN_EOUTEN2_MASK            (0x4U)
#define FCCU_EOUT_SIG_EN_EOUTEN2_SHIFT           (2U)
#define FCCU_EOUT_SIG_EN_EOUTEN2_WIDTH           (1U)
#define FCCU_EOUT_SIG_EN_EOUTEN2(x)              (((uint32_t)(((uint32_t)(x)) << FCCU_EOUT_SIG_EN_EOUTEN2_SHIFT)) & FCCU_EOUT_SIG_EN_EOUTEN2_MASK)
#define FCCU_EOUT_SIG_EN_EOUTEN3_MASK            (0x8U)
#define FCCU_EOUT_SIG_EN_EOUTEN3_SHIFT           (3U)
#define FCCU_EOUT_SIG_EN_EOUTEN3_WIDTH           (1U)
#define FCCU_EOUT_SIG_EN_EOUTEN3(x)              (((uint32_t)(((uint32_t)(x)) << FCCU_EOUT_SIG_EN_EOUTEN3_SHIFT)) & FCCU_EOUT_SIG_EN_EOUTEN3_MASK)
#define FCCU_EOUT_SIG_EN_EOUTEN4_MASK            (0x10U)
#define FCCU_EOUT_SIG_EN_EOUTEN4_SHIFT           (4U)
#define FCCU_EOUT_SIG_EN_EOUTEN4_WIDTH           (1U)
#define FCCU_EOUT_SIG_EN_EOUTEN4(x)              (((uint32_t)(((uint32_t)(x)) << FCCU_EOUT_SIG_EN_EOUTEN4_SHIFT)) & FCCU_EOUT_SIG_EN_EOUTEN4_MASK)
#define FCCU_EOUT_SIG_EN_EOUTEN5_MASK            (0x20U)
#define FCCU_EOUT_SIG_EN_EOUTEN5_SHIFT           (5U)
#define FCCU_EOUT_SIG_EN_EOUTEN5_WIDTH           (1U)
#define FCCU_EOUT_SIG_EN_EOUTEN5(x)              (((uint32_t)(((uint32_t)(x)) << FCCU_EOUT_SIG_EN_EOUTEN5_SHIFT)) & FCCU_EOUT_SIG_EN_EOUTEN5_MASK)
#define FCCU_EOUT_SIG_EN_EOUTEN6_MASK            (0x40U)
#define FCCU_EOUT_SIG_EN_EOUTEN6_SHIFT           (6U)
#define FCCU_EOUT_SIG_EN_EOUTEN6_WIDTH           (1U)
#define FCCU_EOUT_SIG_EN_EOUTEN6(x)              (((uint32_t)(((uint32_t)(x)) << FCCU_EOUT_SIG_EN_EOUTEN6_SHIFT)) & FCCU_EOUT_SIG_EN_EOUTEN6_MASK)
#define FCCU_EOUT_SIG_EN_EOUTEN7_MASK            (0x80U)
#define FCCU_EOUT_SIG_EN_EOUTEN7_SHIFT           (7U)
#define FCCU_EOUT_SIG_EN_EOUTEN7_WIDTH           (1U)
#define FCCU_EOUT_SIG_EN_EOUTEN7(x)              (((uint32_t)(((uint32_t)(x)) << FCCU_EOUT_SIG_EN_EOUTEN7_SHIFT)) & FCCU_EOUT_SIG_EN_EOUTEN7_MASK)
#define FCCU_EOUT_SIG_EN_EOUTEN8_MASK            (0x100U)
#define FCCU_EOUT_SIG_EN_EOUTEN8_SHIFT           (8U)
#define FCCU_EOUT_SIG_EN_EOUTEN8_WIDTH           (1U)
#define FCCU_EOUT_SIG_EN_EOUTEN8(x)              (((uint32_t)(((uint32_t)(x)) << FCCU_EOUT_SIG_EN_EOUTEN8_SHIFT)) & FCCU_EOUT_SIG_EN_EOUTEN8_MASK)
#define FCCU_EOUT_SIG_EN_EOUTEN9_MASK            (0x200U)
#define FCCU_EOUT_SIG_EN_EOUTEN9_SHIFT           (9U)
#define FCCU_EOUT_SIG_EN_EOUTEN9_WIDTH           (1U)
#define FCCU_EOUT_SIG_EN_EOUTEN9(x)              (((uint32_t)(((uint32_t)(x)) << FCCU_EOUT_SIG_EN_EOUTEN9_SHIFT)) & FCCU_EOUT_SIG_EN_EOUTEN9_MASK)
#define FCCU_EOUT_SIG_EN_EOUTEN10_MASK           (0x400U)
#define FCCU_EOUT_SIG_EN_EOUTEN10_SHIFT          (10U)
#define FCCU_EOUT_SIG_EN_EOUTEN10_WIDTH          (1U)
#define FCCU_EOUT_SIG_EN_EOUTEN10(x)             (((uint32_t)(((uint32_t)(x)) << FCCU_EOUT_SIG_EN_EOUTEN10_SHIFT)) & FCCU_EOUT_SIG_EN_EOUTEN10_MASK)
#define FCCU_EOUT_SIG_EN_EOUTEN11_MASK           (0x800U)
#define FCCU_EOUT_SIG_EN_EOUTEN11_SHIFT          (11U)
#define FCCU_EOUT_SIG_EN_EOUTEN11_WIDTH          (1U)
#define FCCU_EOUT_SIG_EN_EOUTEN11(x)             (((uint32_t)(((uint32_t)(x)) << FCCU_EOUT_SIG_EN_EOUTEN11_SHIFT)) & FCCU_EOUT_SIG_EN_EOUTEN11_MASK)
#define FCCU_EOUT_SIG_EN_EOUTEN12_MASK           (0x1000U)
#define FCCU_EOUT_SIG_EN_EOUTEN12_SHIFT          (12U)
#define FCCU_EOUT_SIG_EN_EOUTEN12_WIDTH          (1U)
#define FCCU_EOUT_SIG_EN_EOUTEN12(x)             (((uint32_t)(((uint32_t)(x)) << FCCU_EOUT_SIG_EN_EOUTEN12_SHIFT)) & FCCU_EOUT_SIG_EN_EOUTEN12_MASK)
#define FCCU_EOUT_SIG_EN_EOUTEN13_MASK           (0x2000U)
#define FCCU_EOUT_SIG_EN_EOUTEN13_SHIFT          (13U)
#define FCCU_EOUT_SIG_EN_EOUTEN13_WIDTH          (1U)
#define FCCU_EOUT_SIG_EN_EOUTEN13(x)             (((uint32_t)(((uint32_t)(x)) << FCCU_EOUT_SIG_EN_EOUTEN13_SHIFT)) & FCCU_EOUT_SIG_EN_EOUTEN13_MASK)
#define FCCU_EOUT_SIG_EN_EOUTEN14_MASK           (0x4000U)
#define FCCU_EOUT_SIG_EN_EOUTEN14_SHIFT          (14U)
#define FCCU_EOUT_SIG_EN_EOUTEN14_WIDTH          (1U)
#define FCCU_EOUT_SIG_EN_EOUTEN14(x)             (((uint32_t)(((uint32_t)(x)) << FCCU_EOUT_SIG_EN_EOUTEN14_SHIFT)) & FCCU_EOUT_SIG_EN_EOUTEN14_MASK)
#define FCCU_EOUT_SIG_EN_EOUTEN15_MASK           (0x8000U)
#define FCCU_EOUT_SIG_EN_EOUTEN15_SHIFT          (15U)
#define FCCU_EOUT_SIG_EN_EOUTEN15_WIDTH          (1U)
#define FCCU_EOUT_SIG_EN_EOUTEN15(x)             (((uint32_t)(((uint32_t)(x)) << FCCU_EOUT_SIG_EN_EOUTEN15_SHIFT)) & FCCU_EOUT_SIG_EN_EOUTEN15_MASK)
#define FCCU_EOUT_SIG_EN_EOUTEN16_MASK           (0x10000U)
#define FCCU_EOUT_SIG_EN_EOUTEN16_SHIFT          (16U)
#define FCCU_EOUT_SIG_EN_EOUTEN16_WIDTH          (1U)
#define FCCU_EOUT_SIG_EN_EOUTEN16(x)             (((uint32_t)(((uint32_t)(x)) << FCCU_EOUT_SIG_EN_EOUTEN16_SHIFT)) & FCCU_EOUT_SIG_EN_EOUTEN16_MASK)
#define FCCU_EOUT_SIG_EN_EOUTEN17_MASK           (0x20000U)
#define FCCU_EOUT_SIG_EN_EOUTEN17_SHIFT          (17U)
#define FCCU_EOUT_SIG_EN_EOUTEN17_WIDTH          (1U)
#define FCCU_EOUT_SIG_EN_EOUTEN17(x)             (((uint32_t)(((uint32_t)(x)) << FCCU_EOUT_SIG_EN_EOUTEN17_SHIFT)) & FCCU_EOUT_SIG_EN_EOUTEN17_MASK)
#define FCCU_EOUT_SIG_EN_EOUTEN18_MASK           (0x40000U)
#define FCCU_EOUT_SIG_EN_EOUTEN18_SHIFT          (18U)
#define FCCU_EOUT_SIG_EN_EOUTEN18_WIDTH          (1U)
#define FCCU_EOUT_SIG_EN_EOUTEN18(x)             (((uint32_t)(((uint32_t)(x)) << FCCU_EOUT_SIG_EN_EOUTEN18_SHIFT)) & FCCU_EOUT_SIG_EN_EOUTEN18_MASK)
#define FCCU_EOUT_SIG_EN_EOUTEN19_MASK           (0x80000U)
#define FCCU_EOUT_SIG_EN_EOUTEN19_SHIFT          (19U)
#define FCCU_EOUT_SIG_EN_EOUTEN19_WIDTH          (1U)
#define FCCU_EOUT_SIG_EN_EOUTEN19(x)             (((uint32_t)(((uint32_t)(x)) << FCCU_EOUT_SIG_EN_EOUTEN19_SHIFT)) & FCCU_EOUT_SIG_EN_EOUTEN19_MASK)
#define FCCU_EOUT_SIG_EN_EOUTEN20_MASK           (0x100000U)
#define FCCU_EOUT_SIG_EN_EOUTEN20_SHIFT          (20U)
#define FCCU_EOUT_SIG_EN_EOUTEN20_WIDTH          (1U)
#define FCCU_EOUT_SIG_EN_EOUTEN20(x)             (((uint32_t)(((uint32_t)(x)) << FCCU_EOUT_SIG_EN_EOUTEN20_SHIFT)) & FCCU_EOUT_SIG_EN_EOUTEN20_MASK)
#define FCCU_EOUT_SIG_EN_EOUTEN21_MASK           (0x200000U)
#define FCCU_EOUT_SIG_EN_EOUTEN21_SHIFT          (21U)
#define FCCU_EOUT_SIG_EN_EOUTEN21_WIDTH          (1U)
#define FCCU_EOUT_SIG_EN_EOUTEN21(x)             (((uint32_t)(((uint32_t)(x)) << FCCU_EOUT_SIG_EN_EOUTEN21_SHIFT)) & FCCU_EOUT_SIG_EN_EOUTEN21_MASK)
#define FCCU_EOUT_SIG_EN_EOUTEN22_MASK           (0x400000U)
#define FCCU_EOUT_SIG_EN_EOUTEN22_SHIFT          (22U)
#define FCCU_EOUT_SIG_EN_EOUTEN22_WIDTH          (1U)
#define FCCU_EOUT_SIG_EN_EOUTEN22(x)             (((uint32_t)(((uint32_t)(x)) << FCCU_EOUT_SIG_EN_EOUTEN22_SHIFT)) & FCCU_EOUT_SIG_EN_EOUTEN22_MASK)
#define FCCU_EOUT_SIG_EN_EOUTEN23_MASK           (0x800000U)
#define FCCU_EOUT_SIG_EN_EOUTEN23_SHIFT          (23U)
#define FCCU_EOUT_SIG_EN_EOUTEN23_WIDTH          (1U)
#define FCCU_EOUT_SIG_EN_EOUTEN23(x)             (((uint32_t)(((uint32_t)(x)) << FCCU_EOUT_SIG_EN_EOUTEN23_SHIFT)) & FCCU_EOUT_SIG_EN_EOUTEN23_MASK)
#define FCCU_EOUT_SIG_EN_EOUTEN24_MASK           (0x1000000U)
#define FCCU_EOUT_SIG_EN_EOUTEN24_SHIFT          (24U)
#define FCCU_EOUT_SIG_EN_EOUTEN24_WIDTH          (1U)
#define FCCU_EOUT_SIG_EN_EOUTEN24(x)             (((uint32_t)(((uint32_t)(x)) << FCCU_EOUT_SIG_EN_EOUTEN24_SHIFT)) & FCCU_EOUT_SIG_EN_EOUTEN24_MASK)
#define FCCU_EOUT_SIG_EN_EOUTEN25_MASK           (0x2000000U)
#define FCCU_EOUT_SIG_EN_EOUTEN25_SHIFT          (25U)
#define FCCU_EOUT_SIG_EN_EOUTEN25_WIDTH          (1U)
#define FCCU_EOUT_SIG_EN_EOUTEN25(x)             (((uint32_t)(((uint32_t)(x)) << FCCU_EOUT_SIG_EN_EOUTEN25_SHIFT)) & FCCU_EOUT_SIG_EN_EOUTEN25_MASK)
#define FCCU_EOUT_SIG_EN_EOUTEN26_MASK           (0x4000000U)
#define FCCU_EOUT_SIG_EN_EOUTEN26_SHIFT          (26U)
#define FCCU_EOUT_SIG_EN_EOUTEN26_WIDTH          (1U)
#define FCCU_EOUT_SIG_EN_EOUTEN26(x)             (((uint32_t)(((uint32_t)(x)) << FCCU_EOUT_SIG_EN_EOUTEN26_SHIFT)) & FCCU_EOUT_SIG_EN_EOUTEN26_MASK)
#define FCCU_EOUT_SIG_EN_EOUTEN27_MASK           (0x8000000U)
#define FCCU_EOUT_SIG_EN_EOUTEN27_SHIFT          (27U)
#define FCCU_EOUT_SIG_EN_EOUTEN27_WIDTH          (1U)
#define FCCU_EOUT_SIG_EN_EOUTEN27(x)             (((uint32_t)(((uint32_t)(x)) << FCCU_EOUT_SIG_EN_EOUTEN27_SHIFT)) & FCCU_EOUT_SIG_EN_EOUTEN27_MASK)
#define FCCU_EOUT_SIG_EN_EOUTEN28_MASK           (0x10000000U)
#define FCCU_EOUT_SIG_EN_EOUTEN28_SHIFT          (28U)
#define FCCU_EOUT_SIG_EN_EOUTEN28_WIDTH          (1U)
#define FCCU_EOUT_SIG_EN_EOUTEN28(x)             (((uint32_t)(((uint32_t)(x)) << FCCU_EOUT_SIG_EN_EOUTEN28_SHIFT)) & FCCU_EOUT_SIG_EN_EOUTEN28_MASK)
#define FCCU_EOUT_SIG_EN_EOUTEN29_MASK           (0x20000000U)
#define FCCU_EOUT_SIG_EN_EOUTEN29_SHIFT          (29U)
#define FCCU_EOUT_SIG_EN_EOUTEN29_WIDTH          (1U)
#define FCCU_EOUT_SIG_EN_EOUTEN29(x)             (((uint32_t)(((uint32_t)(x)) << FCCU_EOUT_SIG_EN_EOUTEN29_SHIFT)) & FCCU_EOUT_SIG_EN_EOUTEN29_MASK)
#define FCCU_EOUT_SIG_EN_EOUTEN30_MASK           (0x40000000U)
#define FCCU_EOUT_SIG_EN_EOUTEN30_SHIFT          (30U)
#define FCCU_EOUT_SIG_EN_EOUTEN30_WIDTH          (1U)
#define FCCU_EOUT_SIG_EN_EOUTEN30(x)             (((uint32_t)(((uint32_t)(x)) << FCCU_EOUT_SIG_EN_EOUTEN30_SHIFT)) & FCCU_EOUT_SIG_EN_EOUTEN30_MASK)
#define FCCU_EOUT_SIG_EN_EOUTEN31_MASK           (0x80000000U)
#define FCCU_EOUT_SIG_EN_EOUTEN31_SHIFT          (31U)
#define FCCU_EOUT_SIG_EN_EOUTEN31_WIDTH          (1U)
#define FCCU_EOUT_SIG_EN_EOUTEN31(x)             (((uint32_t)(((uint32_t)(x)) << FCCU_EOUT_SIG_EN_EOUTEN31_SHIFT)) & FCCU_EOUT_SIG_EN_EOUTEN31_MASK)
/*! @} */

/*! @name TMR_ALARM - Alarm-State Timer */
/*! @{ */
#define FCCU_TMR_ALARM_COUNT_MASK                (0xFFFFFFFFU)
#define FCCU_TMR_ALARM_COUNT_SHIFT               (0U)
#define FCCU_TMR_ALARM_COUNT_WIDTH               (32U)
#define FCCU_TMR_ALARM_COUNT(x)                  (((uint32_t)(((uint32_t)(x)) << FCCU_TMR_ALARM_COUNT_SHIFT)) & FCCU_TMR_ALARM_COUNT_MASK)
/*! @} */

/*! @name TMR_CFG - Configuration-State Timer */
/*! @{ */
#define FCCU_TMR_CFG_COUNT_MASK                  (0xFFFFFFFFU)
#define FCCU_TMR_CFG_COUNT_SHIFT                 (0U)
#define FCCU_TMR_CFG_COUNT_WIDTH                 (32U)
#define FCCU_TMR_CFG_COUNT(x)                    (((uint32_t)(((uint32_t)(x)) << FCCU_TMR_CFG_COUNT_SHIFT)) & FCCU_TMR_CFG_COUNT_MASK)
/*! @} */

/*! @name TMR_ETMR - Fault-Output Timer */
/*! @{ */
#define FCCU_TMR_ETMR_COUNT_MASK                 (0xFFFFFFFFU)
#define FCCU_TMR_ETMR_COUNT_SHIFT                (0U)
#define FCCU_TMR_ETMR_COUNT_WIDTH                (32U)
#define FCCU_TMR_ETMR_COUNT(x)                   (((uint32_t)(((uint32_t)(x)) << FCCU_TMR_ETMR_COUNT_SHIFT)) & FCCU_TMR_ETMR_COUNT_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group FCCU_Register_Masks */


/*!
 * @}
 */ /* end of group FCCU_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- CAN Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup CAN_Peripheral_Access_Layer CAN Peripheral Access Layer
 * @{
 */

/** CAN - Size of Registers Arrays */
#define CAN_RAMn_COUNT                            512u
#define CAN_RAM1n_COUNT                           512u
#define CAN_RAM2n_COUNT                           20u
#define CAN_RXIMR_COUNT                           128u
#define CAN_HR_TIME_STAMP_COUNT                   128u
#define CAN_ERFFEL_COUNT                          128u

/** CAN - Register Layout Typedef */
typedef struct {
  __IO uint32_t MCR;                               /**< Module Configuration register, offset: 0x0 */
  __IO uint32_t CTRL1;                             /**< Control 1 register, offset: 0x4 */
  __IO uint32_t TIMER;                             /**< Free Running Timer, offset: 0x8 */
  uint8_t RESERVED_0[4];
  __IO uint32_t RXMGMASK;                          /**< Rx Mailboxes Global Mask register, offset: 0x10 */
  __IO uint32_t RX14MASK;                          /**< Rx 14 Mask register, offset: 0x14 */
  __IO uint32_t RX15MASK;                          /**< Rx 15 Mask register, offset: 0x18 */
  __IO uint32_t ECR;                               /**< Error Counter, offset: 0x1C */
  __IO uint32_t ESR1;                              /**< Error and Status 1 register, offset: 0x20 */
  __IO uint32_t IMASK2;                            /**< Interrupt Masks 2 register, offset: 0x24 */
  __IO uint32_t IMASK1;                            /**< Interrupt Masks 1 register, offset: 0x28 */
  __IO uint32_t IFLAG2;                            /**< Interrupt Flags 2 register, offset: 0x2C */
  __IO uint32_t IFLAG1;                            /**< Interrupt Flags 1 register, offset: 0x30 */
  __IO uint32_t CTRL2;                             /**< Control 2 register, offset: 0x34 */
  __I  uint32_t ESR2;                              /**< Error and Status 2 register, offset: 0x38 */
  uint8_t RESERVED_1[8];
  __I  uint32_t CRCR;                              /**< CRC register, offset: 0x44 */
  __IO uint32_t RXFGMASK;                          /**< Legacy Rx FIFO Global Mask register, offset: 0x48 */
  __I  uint32_t RXFIR;                             /**< Legacy Rx FIFO Information register, offset: 0x4C */
  __IO uint32_t CBT;                               /**< CAN Bit Timing register, offset: 0x50 */
  uint8_t RESERVED_2[20];
  __IO uint32_t IMASK4;                            /**< Interrupt Masks 4 register, offset: 0x68 */
  __IO uint32_t IMASK3;                            /**< Interrupt Masks 3 register, offset: 0x6C */
  __IO uint32_t IFLAG4;                            /**< Interrupt Flags 4 register, offset: 0x70 */
  __IO uint32_t IFLAG3;                            /**< Interrupt Flags 3 register, offset: 0x74 */
  uint8_t RESERVED_3[8];
  __IO uint32_t RAMn[CAN_RAMn_COUNT];              /**< Embedded RAM, array offset: 0x80, array step: 0x4 */
  __IO uint32_t RXIMR[CAN_RXIMR_COUNT];            /**< Rx Individual Mask registers, array offset: 0x880, array step: 0x4 */
  uint8_t RESERVED_4[96];
  __IO uint32_t MECR;                              /**< Memory Error Control register, offset: 0xAE0 */
  __IO uint32_t ERRIAR;                            /**< Error Injection Address register, offset: 0xAE4 */
  __IO uint32_t ERRIDPR;                           /**< Error Injection Data Pattern register, offset: 0xAE8 */
  __IO uint32_t ERRIPPR;                           /**< Error Injection Parity Pattern register, offset: 0xAEC */
  __I  uint32_t RERRAR;                            /**< Error Report Address register, offset: 0xAF0 */
  __I  uint32_t RERRDR;                            /**< Error Report Data register, offset: 0xAF4 */
  __I  uint32_t RERRSYNR;                          /**< Error Report Syndrome register, offset: 0xAF8 */
  __IO uint32_t ERRSR;                             /**< Error Status register, offset: 0xAFC */
  uint8_t RESERVED_5[240];
  __IO uint32_t EPRS;                              /**< Enhanced CAN Bit Timing Prescalers, offset: 0xBF0 */
  __IO uint32_t ENCBT;                             /**< Enhanced Nominal CAN Bit Timing, offset: 0xBF4 */
  __IO uint32_t EDCBT;                             /**< Enhanced Data Phase CAN bit Timing, offset: 0xBF8 */
  __IO uint32_t ETDC;                              /**< Enhanced Transceiver Delay Compensation, offset: 0xBFC */
  __IO uint32_t FDCTRL;                            /**< CAN FD Control register, offset: 0xC00 */
  __IO uint32_t FDCBT;                             /**< CAN FD Bit Timing register, offset: 0xC04 */
  __I  uint32_t FDCRC;                             /**< CAN FD CRC register, offset: 0xC08 */
  __IO uint32_t ERFCR;                             /**< Enhanced Rx FIFO Control register, offset: 0xC0C */
  __IO uint32_t ERFIER;                            /**< Enhanced Rx FIFO Interrupt Enable register, offset: 0xC10 */
  __IO uint32_t ERFSR;                             /**< Enhanced Rx FIFO Status register, offset: 0xC14 */
  uint8_t RESERVED_6[24];
  __IO uint32_t HR_TIME_STAMP[CAN_HR_TIME_STAMP_COUNT]; /**< High Resolution Time Stamp, array offset: 0xC30, array step: 0x4 */
  uint8_t RESERVED_7[464];
  __IO uint32_t RAM1n[CAN_RAM1n_COUNT];            /**< Embedded RAM, offset: 0x1000, array step: 0x4 */
  uint8_t RESERVED_8[2048];
  __IO uint32_t RAM2n[CAN_RAM2n_COUNT];            /**< Embedded RAM, offset: 0x2000, array step: 0x4 */
  uint8_t RESERVED_9[4016];
  __IO uint32_t ERFFEL[CAN_ERFFEL_COUNT];          /**< Enhanced Rx FIFO Filter Element, array offset: 0x3000, array step: 0x4 */
} CAN_Type, *CAN_MemMapPtr;

/** Number of instances of the CAN module. */
#define CAN_INSTANCE_COUNT                       (4u)

/* CAN - Peripheral instance base addresses */
/** Peripheral CAN_0 base address */
#define CAN_0_BASE                               (0x401B4000u)
/** Peripheral CAN_0 base pointer */
#define CAN_0                                    ((CAN_Type *)CAN_0_BASE)
/** Peripheral CAN_1 base address */
#define CAN_1_BASE                               (0x401BE000u)
/** Peripheral CAN_1 base pointer */
#define CAN_1                                    ((CAN_Type *)CAN_1_BASE)
/** Peripheral CAN_2 base address */
#define CAN_2_BASE                               (0x402A8000u)
/** Peripheral CAN_2 base pointer */
#define CAN_2                                    ((CAN_Type *)CAN_2_BASE)
/** Peripheral CAN_3 base address */
#define CAN_3_BASE                               (0x402B2000u)
/** Peripheral CAN_3 base pointer */
#define CAN_3                                    ((CAN_Type *)CAN_3_BASE)
/** Array initializer of CAN peripheral base addresses */
#define CAN_BASE_ADDRS                           { CAN_0_BASE, CAN_1_BASE, CAN_2_BASE, CAN_3_BASE }
/** Array initializer of CAN peripheral base pointers */
#define CAN_BASE_PTRS                            { CAN_0, CAN_1, CAN_2, CAN_3 }
/** Array initializer of CAN peripheral base addresses has Enhanced Rx FIFO mode*/
#define CAN_BASE_PTRS_HAS_ENHANCED_RX_FIFO       { CAN_0, CAN_1, CAN_2, CAN_3 }
/** Array initializer of CAN peripheral base addresses has Enhanced Rx FIFO mode*/
#define CAN_BASE_PTRS_HAS_EXPANDABLE_MEMORY      { CAN_0, CAN_1, CAN_2, CAN_3 }
/** Interrupt vectors for the CAN peripheral type */
#define CAN_Rx_Warning_IRQS                      { CAN0_ORED_IRQn, \
                                                   CAN1_ORED_IRQn, \
                                                   CAN2_ORED_IRQn, \
                                                   CAN3_ORED_IRQn  }

#define CAN_Tx_Warning_IRQS                      { CAN0_ORED_IRQn, \
                                                   CAN1_ORED_IRQn, \
                                                   CAN2_ORED_IRQn, \
                                                   CAN3_ORED_IRQn }

#define CAN_Bus_Off_IRQS                         { CAN0_ORED_IRQn, \
                                                   CAN1_ORED_IRQn, \
                                                   CAN2_ORED_IRQn, \
                                                   CAN3_ORED_IRQn  }

#define CAN_Error_IRQS                           { CAN0_ERR_IRQn, \
                                                   CAN1_ERR_IRQn, \
                                                   CAN2_ERR_IRQn, \
                                                   CAN3_ERR_IRQn  }

#define CAN_ORED_0_7_MB_IRQn                     { CAN0_ORED_0_7_MB_IRQn, \
                                                   CAN1_ORED_0_7_MB_IRQn, \
                                                   CAN2_ORED_0_7_MB_IRQn, \
                                                   CAN3_ORED_0_7_MB_IRQn  }

#define CAN_ORED_8_127_MB_IRQn                   { CAN0_ORED_8_127_MB_IRQn, \
                                                   CAN1_ORED_8_127_MB_IRQn, \
                                                   CAN2_ORED_8_127_MB_IRQn, \
                                                   CAN3_ORED_8_127_MB_IRQn  }

/* ----------------------------------------------------------------------------
   -- CAN Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup CAN_Register_Masks CAN Register Masks
 * @{
 */

/*! @name MCR - Module Configuration register */
/*! @{ */
#define CAN_MCR_MAXMB_MASK                       (0x7FU)
#define CAN_MCR_MAXMB_SHIFT                      (0U)
#define CAN_MCR_MAXMB_WIDTH                      (7U)
#define CAN_MCR_MAXMB(x)                         (((uint32_t)(((uint32_t)(x)) << CAN_MCR_MAXMB_SHIFT)) & CAN_MCR_MAXMB_MASK)
#define CAN_MCR_IDAM_MASK                        (0x300U)
#define CAN_MCR_IDAM_SHIFT                       (8U)
#define CAN_MCR_IDAM_WIDTH                       (2U)
#define CAN_MCR_IDAM(x)                          (((uint32_t)(((uint32_t)(x)) << CAN_MCR_IDAM_SHIFT)) & CAN_MCR_IDAM_MASK)
#define CAN_MCR_FDEN_MASK                        (0x800U)
#define CAN_MCR_FDEN_SHIFT                       (11U)
#define CAN_MCR_FDEN_WIDTH                       (1U)
#define CAN_MCR_FDEN(x)                          (((uint32_t)(((uint32_t)(x)) << CAN_MCR_FDEN_SHIFT)) & CAN_MCR_FDEN_MASK)
#define CAN_MCR_AEN_MASK                         (0x1000U)
#define CAN_MCR_AEN_SHIFT                        (12U)
#define CAN_MCR_AEN_WIDTH                        (1U)
#define CAN_MCR_AEN(x)                           (((uint32_t)(((uint32_t)(x)) << CAN_MCR_AEN_SHIFT)) & CAN_MCR_AEN_MASK)
#define CAN_MCR_LPRIOEN_MASK                     (0x2000U)
#define CAN_MCR_LPRIOEN_SHIFT                    (13U)
#define CAN_MCR_LPRIOEN_WIDTH                    (1U)
#define CAN_MCR_LPRIOEN(x)                       (((uint32_t)(((uint32_t)(x)) << CAN_MCR_LPRIOEN_SHIFT)) & CAN_MCR_LPRIOEN_MASK)
#define CAN_MCR_DMA_MASK                         (0x8000U)
#define CAN_MCR_DMA_SHIFT                        (15U)
#define CAN_MCR_DMA_WIDTH                        (1U)
#define CAN_MCR_DMA(x)                           (((uint32_t)(((uint32_t)(x)) << CAN_MCR_DMA_SHIFT)) & CAN_MCR_DMA_MASK)
#define CAN_MCR_IRMQ_MASK                        (0x10000U)
#define CAN_MCR_IRMQ_SHIFT                       (16U)
#define CAN_MCR_IRMQ_WIDTH                       (1U)
#define CAN_MCR_IRMQ(x)                          (((uint32_t)(((uint32_t)(x)) << CAN_MCR_IRMQ_SHIFT)) & CAN_MCR_IRMQ_MASK)
#define CAN_MCR_SRXDIS_MASK                      (0x20000U)
#define CAN_MCR_SRXDIS_SHIFT                     (17U)
#define CAN_MCR_SRXDIS_WIDTH                     (1U)
#define CAN_MCR_SRXDIS(x)                        (((uint32_t)(((uint32_t)(x)) << CAN_MCR_SRXDIS_SHIFT)) & CAN_MCR_SRXDIS_MASK)
#define CAN_MCR_LPMACK_MASK                      (0x100000U)
#define CAN_MCR_LPMACK_SHIFT                     (20U)
#define CAN_MCR_LPMACK_WIDTH                     (1U)
#define CAN_MCR_LPMACK(x)                        (((uint32_t)(((uint32_t)(x)) << CAN_MCR_LPMACK_SHIFT)) & CAN_MCR_LPMACK_MASK)
#define CAN_MCR_WRNEN_MASK                       (0x200000U)
#define CAN_MCR_WRNEN_SHIFT                      (21U)
#define CAN_MCR_WRNEN_WIDTH                      (1U)
#define CAN_MCR_WRNEN(x)                         (((uint32_t)(((uint32_t)(x)) << CAN_MCR_WRNEN_SHIFT)) & CAN_MCR_WRNEN_MASK)
#define CAN_MCR_FRZACK_MASK                      (0x1000000U)
#define CAN_MCR_FRZACK_SHIFT                     (24U)
#define CAN_MCR_FRZACK_WIDTH                     (1U)
#define CAN_MCR_FRZACK(x)                        (((uint32_t)(((uint32_t)(x)) << CAN_MCR_FRZACK_SHIFT)) & CAN_MCR_FRZACK_MASK)
#define CAN_MCR_SOFTRST_MASK                     (0x2000000U)
#define CAN_MCR_SOFTRST_SHIFT                    (25U)
#define CAN_MCR_SOFTRST_WIDTH                    (1U)
#define CAN_MCR_SOFTRST(x)                       (((uint32_t)(((uint32_t)(x)) << CAN_MCR_SOFTRST_SHIFT)) & CAN_MCR_SOFTRST_MASK)
#define CAN_MCR_NOTRDY_MASK                      (0x8000000U)
#define CAN_MCR_NOTRDY_SHIFT                     (27U)
#define CAN_MCR_NOTRDY_WIDTH                     (1U)
#define CAN_MCR_NOTRDY(x)                        (((uint32_t)(((uint32_t)(x)) << CAN_MCR_NOTRDY_SHIFT)) & CAN_MCR_NOTRDY_MASK)
#define CAN_MCR_HALT_MASK                        (0x10000000U)
#define CAN_MCR_HALT_SHIFT                       (28U)
#define CAN_MCR_HALT_WIDTH                       (1U)
#define CAN_MCR_HALT(x)                          (((uint32_t)(((uint32_t)(x)) << CAN_MCR_HALT_SHIFT)) & CAN_MCR_HALT_MASK)
#define CAN_MCR_RFEN_MASK                        (0x20000000U)
#define CAN_MCR_RFEN_SHIFT                       (29U)
#define CAN_MCR_RFEN_WIDTH                       (1U)
#define CAN_MCR_RFEN(x)                          (((uint32_t)(((uint32_t)(x)) << CAN_MCR_RFEN_SHIFT)) & CAN_MCR_RFEN_MASK)
#define CAN_MCR_FRZ_MASK                         (0x40000000U)
#define CAN_MCR_FRZ_SHIFT                        (30U)
#define CAN_MCR_FRZ_WIDTH                        (1U)
#define CAN_MCR_FRZ(x)                           (((uint32_t)(((uint32_t)(x)) << CAN_MCR_FRZ_SHIFT)) & CAN_MCR_FRZ_MASK)
#define CAN_MCR_MDIS_MASK                        (0x80000000U)
#define CAN_MCR_MDIS_SHIFT                       (31U)
#define CAN_MCR_MDIS_WIDTH                       (1U)
#define CAN_MCR_MDIS(x)                          (((uint32_t)(((uint32_t)(x)) << CAN_MCR_MDIS_SHIFT)) & CAN_MCR_MDIS_MASK)
/*! @} */

/*! @name CTRL1 - Control 1 register */
/*! @{ */
#define CAN_CTRL1_PROPSEG_MASK                   (0x7U)
#define CAN_CTRL1_PROPSEG_SHIFT                  (0U)
#define CAN_CTRL1_PROPSEG_WIDTH                  (3U)
#define CAN_CTRL1_PROPSEG(x)                     (((uint32_t)(((uint32_t)(x)) << CAN_CTRL1_PROPSEG_SHIFT)) & CAN_CTRL1_PROPSEG_MASK)
#define CAN_CTRL1_LOM_MASK                       (0x8U)
#define CAN_CTRL1_LOM_SHIFT                      (3U)
#define CAN_CTRL1_LOM_WIDTH                      (1U)
#define CAN_CTRL1_LOM(x)                         (((uint32_t)(((uint32_t)(x)) << CAN_CTRL1_LOM_SHIFT)) & CAN_CTRL1_LOM_MASK)
#define CAN_CTRL1_LBUF_MASK                      (0x10U)
#define CAN_CTRL1_LBUF_SHIFT                     (4U)
#define CAN_CTRL1_LBUF_WIDTH                     (1U)
#define CAN_CTRL1_LBUF(x)                        (((uint32_t)(((uint32_t)(x)) << CAN_CTRL1_LBUF_SHIFT)) & CAN_CTRL1_LBUF_MASK)
#define CAN_CTRL1_TSYN_MASK                      (0x20U)
#define CAN_CTRL1_TSYN_SHIFT                     (5U)
#define CAN_CTRL1_TSYN_WIDTH                     (1U)
#define CAN_CTRL1_TSYN(x)                        (((uint32_t)(((uint32_t)(x)) << CAN_CTRL1_TSYN_SHIFT)) & CAN_CTRL1_TSYN_MASK)
#define CAN_CTRL1_BOFFREC_MASK                   (0x40U)
#define CAN_CTRL1_BOFFREC_SHIFT                  (6U)
#define CAN_CTRL1_BOFFREC_WIDTH                  (1U)
#define CAN_CTRL1_BOFFREC(x)                     (((uint32_t)(((uint32_t)(x)) << CAN_CTRL1_BOFFREC_SHIFT)) & CAN_CTRL1_BOFFREC_MASK)
#define CAN_CTRL1_SMP_MASK                       (0x80U)
#define CAN_CTRL1_SMP_SHIFT                      (7U)
#define CAN_CTRL1_SMP_WIDTH                      (1U)
#define CAN_CTRL1_SMP(x)                         (((uint32_t)(((uint32_t)(x)) << CAN_CTRL1_SMP_SHIFT)) & CAN_CTRL1_SMP_MASK)
#define CAN_CTRL1_RWRNMSK_MASK                   (0x400U)
#define CAN_CTRL1_RWRNMSK_SHIFT                  (10U)
#define CAN_CTRL1_RWRNMSK_WIDTH                  (1U)
#define CAN_CTRL1_RWRNMSK(x)                     (((uint32_t)(((uint32_t)(x)) << CAN_CTRL1_RWRNMSK_SHIFT)) & CAN_CTRL1_RWRNMSK_MASK)
#define CAN_CTRL1_TWRNMSK_MASK                   (0x800U)
#define CAN_CTRL1_TWRNMSK_SHIFT                  (11U)
#define CAN_CTRL1_TWRNMSK_WIDTH                  (1U)
#define CAN_CTRL1_TWRNMSK(x)                     (((uint32_t)(((uint32_t)(x)) << CAN_CTRL1_TWRNMSK_SHIFT)) & CAN_CTRL1_TWRNMSK_MASK)
#define CAN_CTRL1_LPB_MASK                       (0x1000U)
#define CAN_CTRL1_LPB_SHIFT                      (12U)
#define CAN_CTRL1_LPB_WIDTH                      (1U)
#define CAN_CTRL1_LPB(x)                         (((uint32_t)(((uint32_t)(x)) << CAN_CTRL1_LPB_SHIFT)) & CAN_CTRL1_LPB_MASK)
#define CAN_CTRL1_ERRMSK_MASK                    (0x4000U)
#define CAN_CTRL1_ERRMSK_SHIFT                   (14U)
#define CAN_CTRL1_ERRMSK_WIDTH                   (1U)
#define CAN_CTRL1_ERRMSK(x)                      (((uint32_t)(((uint32_t)(x)) << CAN_CTRL1_ERRMSK_SHIFT)) & CAN_CTRL1_ERRMSK_MASK)
#define CAN_CTRL1_BOFFMSK_MASK                   (0x8000U)
#define CAN_CTRL1_BOFFMSK_SHIFT                  (15U)
#define CAN_CTRL1_BOFFMSK_WIDTH                  (1U)
#define CAN_CTRL1_BOFFMSK(x)                     (((uint32_t)(((uint32_t)(x)) << CAN_CTRL1_BOFFMSK_SHIFT)) & CAN_CTRL1_BOFFMSK_MASK)
#define CAN_CTRL1_PSEG2_MASK                     (0x70000U)
#define CAN_CTRL1_PSEG2_SHIFT                    (16U)
#define CAN_CTRL1_PSEG2_WIDTH                    (3U)
#define CAN_CTRL1_PSEG2(x)                       (((uint32_t)(((uint32_t)(x)) << CAN_CTRL1_PSEG2_SHIFT)) & CAN_CTRL1_PSEG2_MASK)
#define CAN_CTRL1_PSEG1_MASK                     (0x380000U)
#define CAN_CTRL1_PSEG1_SHIFT                    (19U)
#define CAN_CTRL1_PSEG1_WIDTH                    (3U)
#define CAN_CTRL1_PSEG1(x)                       (((uint32_t)(((uint32_t)(x)) << CAN_CTRL1_PSEG1_SHIFT)) & CAN_CTRL1_PSEG1_MASK)
#define CAN_CTRL1_RJW_MASK                       (0xC00000U)
#define CAN_CTRL1_RJW_SHIFT                      (22U)
#define CAN_CTRL1_RJW_WIDTH                      (2U)
#define CAN_CTRL1_RJW(x)                         (((uint32_t)(((uint32_t)(x)) << CAN_CTRL1_RJW_SHIFT)) & CAN_CTRL1_RJW_MASK)
#define CAN_CTRL1_PRESDIV_MASK                   (0xFF000000U)
#define CAN_CTRL1_PRESDIV_SHIFT                  (24U)
#define CAN_CTRL1_PRESDIV_WIDTH                  (8U)
#define CAN_CTRL1_PRESDIV(x)                     (((uint32_t)(((uint32_t)(x)) << CAN_CTRL1_PRESDIV_SHIFT)) & CAN_CTRL1_PRESDIV_MASK)
/*! @} */

/*! @name TIMER - Free Running Timer */
/*! @{ */
#define CAN_TIMER_TIMER_MASK                     (0xFFFFU)
#define CAN_TIMER_TIMER_SHIFT                    (0U)
#define CAN_TIMER_TIMER_WIDTH                    (16U)
#define CAN_TIMER_TIMER(x)                       (((uint32_t)(((uint32_t)(x)) << CAN_TIMER_TIMER_SHIFT)) & CAN_TIMER_TIMER_MASK)
/*! @} */

/*! @name RXMGMASK - Rx Mailboxes Global Mask register */
/*! @{ */
#define CAN_RXMGMASK_MG_MASK                     (0xFFFFFFFFU)
#define CAN_RXMGMASK_MG_SHIFT                    (0U)
#define CAN_RXMGMASK_MG_WIDTH                    (32U)
#define CAN_RXMGMASK_MG(x)                       (((uint32_t)(((uint32_t)(x)) << CAN_RXMGMASK_MG_SHIFT)) & CAN_RXMGMASK_MG_MASK)
/*! @} */

/*! @name RX14MASK - Rx 14 Mask register */
/*! @{ */
#define CAN_RX14MASK_RX14M_MASK                  (0xFFFFFFFFU)
#define CAN_RX14MASK_RX14M_SHIFT                 (0U)
#define CAN_RX14MASK_RX14M_WIDTH                 (32U)
#define CAN_RX14MASK_RX14M(x)                    (((uint32_t)(((uint32_t)(x)) << CAN_RX14MASK_RX14M_SHIFT)) & CAN_RX14MASK_RX14M_MASK)
/*! @} */

/*! @name RX15MASK - Rx 15 Mask register */
/*! @{ */
#define CAN_RX15MASK_RX15M_MASK                  (0xFFFFFFFFU)
#define CAN_RX15MASK_RX15M_SHIFT                 (0U)
#define CAN_RX15MASK_RX15M_WIDTH                 (32U)
#define CAN_RX15MASK_RX15M(x)                    (((uint32_t)(((uint32_t)(x)) << CAN_RX15MASK_RX15M_SHIFT)) & CAN_RX15MASK_RX15M_MASK)
/*! @} */

/*! @name ECR - Error Counter */
/*! @{ */
#define CAN_ECR_TXERRCNT_MASK                    (0xFFU)
#define CAN_ECR_TXERRCNT_SHIFT                   (0U)
#define CAN_ECR_TXERRCNT_WIDTH                   (8U)
#define CAN_ECR_TXERRCNT(x)                      (((uint32_t)(((uint32_t)(x)) << CAN_ECR_TXERRCNT_SHIFT)) & CAN_ECR_TXERRCNT_MASK)
#define CAN_ECR_RXERRCNT_MASK                    (0xFF00U)
#define CAN_ECR_RXERRCNT_SHIFT                   (8U)
#define CAN_ECR_RXERRCNT_WIDTH                   (8U)
#define CAN_ECR_RXERRCNT(x)                      (((uint32_t)(((uint32_t)(x)) << CAN_ECR_RXERRCNT_SHIFT)) & CAN_ECR_RXERRCNT_MASK)
#define CAN_ECR_TXERRCNT_FAST_MASK               (0xFF0000U)
#define CAN_ECR_TXERRCNT_FAST_SHIFT              (16U)
#define CAN_ECR_TXERRCNT_FAST_WIDTH              (8U)
#define CAN_ECR_TXERRCNT_FAST(x)                 (((uint32_t)(((uint32_t)(x)) << CAN_ECR_TXERRCNT_FAST_SHIFT)) & CAN_ECR_TXERRCNT_FAST_MASK)
#define CAN_ECR_RXERRCNT_FAST_MASK               (0xFF000000U)
#define CAN_ECR_RXERRCNT_FAST_SHIFT              (24U)
#define CAN_ECR_RXERRCNT_FAST_WIDTH              (8U)
#define CAN_ECR_RXERRCNT_FAST(x)                 (((uint32_t)(((uint32_t)(x)) << CAN_ECR_RXERRCNT_FAST_SHIFT)) & CAN_ECR_RXERRCNT_FAST_MASK)
/*! @} */

/*! @name ESR1 - Error and Status 1 register */
/*! @{ */
#define CAN_ESR1_ERRINT_MASK                     (0x2U)
#define CAN_ESR1_ERRINT_SHIFT                    (1U)
#define CAN_ESR1_ERRINT_WIDTH                    (1U)
#define CAN_ESR1_ERRINT(x)                       (((uint32_t)(((uint32_t)(x)) << CAN_ESR1_ERRINT_SHIFT)) & CAN_ESR1_ERRINT_MASK)
#define CAN_ESR1_BOFFINT_MASK                    (0x4U)
#define CAN_ESR1_BOFFINT_SHIFT                   (2U)
#define CAN_ESR1_BOFFINT_WIDTH                   (1U)
#define CAN_ESR1_BOFFINT(x)                      (((uint32_t)(((uint32_t)(x)) << CAN_ESR1_BOFFINT_SHIFT)) & CAN_ESR1_BOFFINT_MASK)
#define CAN_ESR1_RX_MASK                         (0x8U)
#define CAN_ESR1_RX_SHIFT                        (3U)
#define CAN_ESR1_RX_WIDTH                        (1U)
#define CAN_ESR1_RX(x)                           (((uint32_t)(((uint32_t)(x)) << CAN_ESR1_RX_SHIFT)) & CAN_ESR1_RX_MASK)
#define CAN_ESR1_FLTCONF_MASK                    (0x30U)
#define CAN_ESR1_FLTCONF_SHIFT                   (4U)
#define CAN_ESR1_FLTCONF_WIDTH                   (2U)
#define CAN_ESR1_FLTCONF(x)                      (((uint32_t)(((uint32_t)(x)) << CAN_ESR1_FLTCONF_SHIFT)) & CAN_ESR1_FLTCONF_MASK)
#define CAN_ESR1_TX_MASK                         (0x40U)
#define CAN_ESR1_TX_SHIFT                        (6U)
#define CAN_ESR1_TX_WIDTH                        (1U)
#define CAN_ESR1_TX(x)                           (((uint32_t)(((uint32_t)(x)) << CAN_ESR1_TX_SHIFT)) & CAN_ESR1_TX_MASK)
#define CAN_ESR1_IDLE_MASK                       (0x80U)
#define CAN_ESR1_IDLE_SHIFT                      (7U)
#define CAN_ESR1_IDLE_WIDTH                      (1U)
#define CAN_ESR1_IDLE(x)                         (((uint32_t)(((uint32_t)(x)) << CAN_ESR1_IDLE_SHIFT)) & CAN_ESR1_IDLE_MASK)
#define CAN_ESR1_RXWRN_MASK                      (0x100U)
#define CAN_ESR1_RXWRN_SHIFT                     (8U)
#define CAN_ESR1_RXWRN_WIDTH                     (1U)
#define CAN_ESR1_RXWRN(x)                        (((uint32_t)(((uint32_t)(x)) << CAN_ESR1_RXWRN_SHIFT)) & CAN_ESR1_RXWRN_MASK)
#define CAN_ESR1_TXWRN_MASK                      (0x200U)
#define CAN_ESR1_TXWRN_SHIFT                     (9U)
#define CAN_ESR1_TXWRN_WIDTH                     (1U)
#define CAN_ESR1_TXWRN(x)                        (((uint32_t)(((uint32_t)(x)) << CAN_ESR1_TXWRN_SHIFT)) & CAN_ESR1_TXWRN_MASK)
#define CAN_ESR1_STFERR_MASK                     (0x400U)
#define CAN_ESR1_STFERR_SHIFT                    (10U)
#define CAN_ESR1_STFERR_WIDTH                    (1U)
#define CAN_ESR1_STFERR(x)                       (((uint32_t)(((uint32_t)(x)) << CAN_ESR1_STFERR_SHIFT)) & CAN_ESR1_STFERR_MASK)
#define CAN_ESR1_FRMERR_MASK                     (0x800U)
#define CAN_ESR1_FRMERR_SHIFT                    (11U)
#define CAN_ESR1_FRMERR_WIDTH                    (1U)
#define CAN_ESR1_FRMERR(x)                       (((uint32_t)(((uint32_t)(x)) << CAN_ESR1_FRMERR_SHIFT)) & CAN_ESR1_FRMERR_MASK)
#define CAN_ESR1_CRCERR_MASK                     (0x1000U)
#define CAN_ESR1_CRCERR_SHIFT                    (12U)
#define CAN_ESR1_CRCERR_WIDTH                    (1U)
#define CAN_ESR1_CRCERR(x)                       (((uint32_t)(((uint32_t)(x)) << CAN_ESR1_CRCERR_SHIFT)) & CAN_ESR1_CRCERR_MASK)
#define CAN_ESR1_ACKERR_MASK                     (0x2000U)
#define CAN_ESR1_ACKERR_SHIFT                    (13U)
#define CAN_ESR1_ACKERR_WIDTH                    (1U)
#define CAN_ESR1_ACKERR(x)                       (((uint32_t)(((uint32_t)(x)) << CAN_ESR1_ACKERR_SHIFT)) & CAN_ESR1_ACKERR_MASK)
#define CAN_ESR1_BIT0ERR_MASK                    (0x4000U)
#define CAN_ESR1_BIT0ERR_SHIFT                   (14U)
#define CAN_ESR1_BIT0ERR_WIDTH                   (1U)
#define CAN_ESR1_BIT0ERR(x)                      (((uint32_t)(((uint32_t)(x)) << CAN_ESR1_BIT0ERR_SHIFT)) & CAN_ESR1_BIT0ERR_MASK)
#define CAN_ESR1_BIT1ERR_MASK                    (0x8000U)
#define CAN_ESR1_BIT1ERR_SHIFT                   (15U)
#define CAN_ESR1_BIT1ERR_WIDTH                   (1U)
#define CAN_ESR1_BIT1ERR(x)                      (((uint32_t)(((uint32_t)(x)) << CAN_ESR1_BIT1ERR_SHIFT)) & CAN_ESR1_BIT1ERR_MASK)
#define CAN_ESR1_RWRNINT_MASK                    (0x10000U)
#define CAN_ESR1_RWRNINT_SHIFT                   (16U)
#define CAN_ESR1_RWRNINT_WIDTH                   (1U)
#define CAN_ESR1_RWRNINT(x)                      (((uint32_t)(((uint32_t)(x)) << CAN_ESR1_RWRNINT_SHIFT)) & CAN_ESR1_RWRNINT_MASK)
#define CAN_ESR1_TWRNINT_MASK                    (0x20000U)
#define CAN_ESR1_TWRNINT_SHIFT                   (17U)
#define CAN_ESR1_TWRNINT_WIDTH                   (1U)
#define CAN_ESR1_TWRNINT(x)                      (((uint32_t)(((uint32_t)(x)) << CAN_ESR1_TWRNINT_SHIFT)) & CAN_ESR1_TWRNINT_MASK)
#define CAN_ESR1_SYNCH_MASK                      (0x40000U)
#define CAN_ESR1_SYNCH_SHIFT                     (18U)
#define CAN_ESR1_SYNCH_WIDTH                     (1U)
#define CAN_ESR1_SYNCH(x)                        (((uint32_t)(((uint32_t)(x)) << CAN_ESR1_SYNCH_SHIFT)) & CAN_ESR1_SYNCH_MASK)
#define CAN_ESR1_BOFFDONEINT_MASK                (0x80000U)
#define CAN_ESR1_BOFFDONEINT_SHIFT               (19U)
#define CAN_ESR1_BOFFDONEINT_WIDTH               (1U)
#define CAN_ESR1_BOFFDONEINT(x)                  (((uint32_t)(((uint32_t)(x)) << CAN_ESR1_BOFFDONEINT_SHIFT)) & CAN_ESR1_BOFFDONEINT_MASK)
#define CAN_ESR1_ERRINT_FAST_MASK                (0x100000U)
#define CAN_ESR1_ERRINT_FAST_SHIFT               (20U)
#define CAN_ESR1_ERRINT_FAST_WIDTH               (1U)
#define CAN_ESR1_ERRINT_FAST(x)                  (((uint32_t)(((uint32_t)(x)) << CAN_ESR1_ERRINT_FAST_SHIFT)) & CAN_ESR1_ERRINT_FAST_MASK)
#define CAN_ESR1_ERROVR_MASK                     (0x200000U)
#define CAN_ESR1_ERROVR_SHIFT                    (21U)
#define CAN_ESR1_ERROVR_WIDTH                    (1U)
#define CAN_ESR1_ERROVR(x)                       (((uint32_t)(((uint32_t)(x)) << CAN_ESR1_ERROVR_SHIFT)) & CAN_ESR1_ERROVR_MASK)
#define CAN_ESR1_STFERR_FAST_MASK                (0x4000000U)
#define CAN_ESR1_STFERR_FAST_SHIFT               (26U)
#define CAN_ESR1_STFERR_FAST_WIDTH               (1U)
#define CAN_ESR1_STFERR_FAST(x)                  (((uint32_t)(((uint32_t)(x)) << CAN_ESR1_STFERR_FAST_SHIFT)) & CAN_ESR1_STFERR_FAST_MASK)
#define CAN_ESR1_FRMERR_FAST_MASK                (0x8000000U)
#define CAN_ESR1_FRMERR_FAST_SHIFT               (27U)
#define CAN_ESR1_FRMERR_FAST_WIDTH               (1U)
#define CAN_ESR1_FRMERR_FAST(x)                  (((uint32_t)(((uint32_t)(x)) << CAN_ESR1_FRMERR_FAST_SHIFT)) & CAN_ESR1_FRMERR_FAST_MASK)
#define CAN_ESR1_CRCERR_FAST_MASK                (0x10000000U)
#define CAN_ESR1_CRCERR_FAST_SHIFT               (28U)
#define CAN_ESR1_CRCERR_FAST_WIDTH               (1U)
#define CAN_ESR1_CRCERR_FAST(x)                  (((uint32_t)(((uint32_t)(x)) << CAN_ESR1_CRCERR_FAST_SHIFT)) & CAN_ESR1_CRCERR_FAST_MASK)
#define CAN_ESR1_BIT0ERR_FAST_MASK               (0x40000000U)
#define CAN_ESR1_BIT0ERR_FAST_SHIFT              (30U)
#define CAN_ESR1_BIT0ERR_FAST_WIDTH              (1U)
#define CAN_ESR1_BIT0ERR_FAST(x)                 (((uint32_t)(((uint32_t)(x)) << CAN_ESR1_BIT0ERR_FAST_SHIFT)) & CAN_ESR1_BIT0ERR_FAST_MASK)
#define CAN_ESR1_BIT1ERR_FAST_MASK               (0x80000000U)
#define CAN_ESR1_BIT1ERR_FAST_SHIFT              (31U)
#define CAN_ESR1_BIT1ERR_FAST_WIDTH              (1U)
#define CAN_ESR1_BIT1ERR_FAST(x)                 (((uint32_t)(((uint32_t)(x)) << CAN_ESR1_BIT1ERR_FAST_SHIFT)) & CAN_ESR1_BIT1ERR_FAST_MASK)
/*! @} */

/*! @name IMASK2 - Interrupt Masks 2 register */
/*! @{ */
#define CAN_IMASK2_BUF63TO32M_MASK               (0xFFFFFFFFU)
#define CAN_IMASK2_BUF63TO32M_SHIFT              (0U)
#define CAN_IMASK2_BUF63TO32M_WIDTH              (32U)
#define CAN_IMASK2_BUF63TO32M(x)                 (((uint32_t)(((uint32_t)(x)) << CAN_IMASK2_BUF63TO32M_SHIFT)) & CAN_IMASK2_BUF63TO32M_MASK)
/*! @} */

/*! @name IMASK1 - Interrupt Masks 1 register */
/*! @{ */
#define CAN_IMASK1_BUF31TO0M_MASK                (0xFFFFFFFFU)
#define CAN_IMASK1_BUF31TO0M_SHIFT               (0U)
#define CAN_IMASK1_BUF31TO0M_WIDTH               (32U)
#define CAN_IMASK1_BUF31TO0M(x)                  (((uint32_t)(((uint32_t)(x)) << CAN_IMASK1_BUF31TO0M_SHIFT)) & CAN_IMASK1_BUF31TO0M_MASK)
/*! @} */

/*! @name IFLAG2 - Interrupt Flags 2 register */
/*! @{ */
#define CAN_IFLAG2_BUF63TO32I_MASK               (0xFFFFFFFFU)
#define CAN_IFLAG2_BUF63TO32I_SHIFT              (0U)
#define CAN_IFLAG2_BUF63TO32I_WIDTH              (32U)
#define CAN_IFLAG2_BUF63TO32I(x)                 (((uint32_t)(((uint32_t)(x)) << CAN_IFLAG2_BUF63TO32I_SHIFT)) & CAN_IFLAG2_BUF63TO32I_MASK)
/*! @} */

/*! @name IFLAG1 - Interrupt Flags 1 register */
/*! @{ */
#define CAN_IFLAG1_BUF0I_MASK                    (0x1U)
#define CAN_IFLAG1_BUF0I_SHIFT                   (0U)
#define CAN_IFLAG1_BUF0I_WIDTH                   (1U)
#define CAN_IFLAG1_BUF0I(x)                      (((uint32_t)(((uint32_t)(x)) << CAN_IFLAG1_BUF0I_SHIFT)) & CAN_IFLAG1_BUF0I_MASK)
#define CAN_IFLAG1_BUF4TO1I_MASK                 (0x1EU)
#define CAN_IFLAG1_BUF4TO1I_SHIFT                (1U)
#define CAN_IFLAG1_BUF4TO1I_WIDTH                (4U)
#define CAN_IFLAG1_BUF4TO1I(x)                   (((uint32_t)(((uint32_t)(x)) << CAN_IFLAG1_BUF4TO1I_SHIFT)) & CAN_IFLAG1_BUF4TO1I_MASK)
#define CAN_IFLAG1_BUF5I_MASK                    (0x20U)
#define CAN_IFLAG1_BUF5I_SHIFT                   (5U)
#define CAN_IFLAG1_BUF5I_WIDTH                   (1U)
#define CAN_IFLAG1_BUF5I(x)                      (((uint32_t)(((uint32_t)(x)) << CAN_IFLAG1_BUF5I_SHIFT)) & CAN_IFLAG1_BUF5I_MASK)
#define CAN_IFLAG1_BUF6I_MASK                    (0x40U)
#define CAN_IFLAG1_BUF6I_SHIFT                   (6U)
#define CAN_IFLAG1_BUF6I_WIDTH                   (1U)
#define CAN_IFLAG1_BUF6I(x)                      (((uint32_t)(((uint32_t)(x)) << CAN_IFLAG1_BUF6I_SHIFT)) & CAN_IFLAG1_BUF6I_MASK)
#define CAN_IFLAG1_BUF7I_MASK                    (0x80U)
#define CAN_IFLAG1_BUF7I_SHIFT                   (7U)
#define CAN_IFLAG1_BUF7I_WIDTH                   (1U)
#define CAN_IFLAG1_BUF7I(x)                      (((uint32_t)(((uint32_t)(x)) << CAN_IFLAG1_BUF7I_SHIFT)) & CAN_IFLAG1_BUF7I_MASK)
#define CAN_IFLAG1_BUF31TO8I_MASK                (0xFFFFFF00U)
#define CAN_IFLAG1_BUF31TO8I_SHIFT               (8U)
#define CAN_IFLAG1_BUF31TO8I_WIDTH               (24U)
#define CAN_IFLAG1_BUF31TO8I(x)                  (((uint32_t)(((uint32_t)(x)) << CAN_IFLAG1_BUF31TO8I_SHIFT)) & CAN_IFLAG1_BUF31TO8I_MASK)
/*! @} */

/*! @name CTRL2 - Control 2 register */
/*! @{ */
#define CAN_CTRL2_TSTAMPCAP_MASK                 (0xC0U)
#define CAN_CTRL2_TSTAMPCAP_SHIFT                (6U)
#define CAN_CTRL2_TSTAMPCAP_WIDTH                (2U)
#define CAN_CTRL2_TSTAMPCAP(x)                   (((uint32_t)(((uint32_t)(x)) << CAN_CTRL2_TSTAMPCAP_SHIFT)) & CAN_CTRL2_TSTAMPCAP_MASK)
#define CAN_CTRL2_MBTSBASE_MASK                  (0x300U)
#define CAN_CTRL2_MBTSBASE_SHIFT                 (8U)
#define CAN_CTRL2_MBTSBASE_WIDTH                 (2U)
#define CAN_CTRL2_MBTSBASE(x)                    (((uint32_t)(((uint32_t)(x)) << CAN_CTRL2_MBTSBASE_SHIFT)) & CAN_CTRL2_MBTSBASE_MASK)
#define CAN_CTRL2_EDFLTDIS_MASK                  (0x800U)
#define CAN_CTRL2_EDFLTDIS_SHIFT                 (11U)
#define CAN_CTRL2_EDFLTDIS_WIDTH                 (1U)
#define CAN_CTRL2_EDFLTDIS(x)                    (((uint32_t)(((uint32_t)(x)) << CAN_CTRL2_EDFLTDIS_SHIFT)) & CAN_CTRL2_EDFLTDIS_MASK)
#define CAN_CTRL2_ISOCANFDEN_MASK                (0x1000U)
#define CAN_CTRL2_ISOCANFDEN_SHIFT               (12U)
#define CAN_CTRL2_ISOCANFDEN_WIDTH               (1U)
#define CAN_CTRL2_ISOCANFDEN(x)                  (((uint32_t)(((uint32_t)(x)) << CAN_CTRL2_ISOCANFDEN_SHIFT)) & CAN_CTRL2_ISOCANFDEN_MASK)
#define CAN_CTRL2_BTE_MASK                       (0x2000U)
#define CAN_CTRL2_BTE_SHIFT                      (13U)
#define CAN_CTRL2_BTE_WIDTH                      (1U)
#define CAN_CTRL2_BTE(x)                         (((uint32_t)(((uint32_t)(x)) << CAN_CTRL2_BTE_SHIFT)) & CAN_CTRL2_BTE_MASK)
#define CAN_CTRL2_PREXCEN_MASK                   (0x4000U)
#define CAN_CTRL2_PREXCEN_SHIFT                  (14U)
#define CAN_CTRL2_PREXCEN_WIDTH                  (1U)
#define CAN_CTRL2_PREXCEN(x)                     (((uint32_t)(((uint32_t)(x)) << CAN_CTRL2_PREXCEN_SHIFT)) & CAN_CTRL2_PREXCEN_MASK)
#define CAN_CTRL2_TIMER_SRC_MASK                 (0x8000U)
#define CAN_CTRL2_TIMER_SRC_SHIFT                (15U)
#define CAN_CTRL2_TIMER_SRC_WIDTH                (1U)
#define CAN_CTRL2_TIMER_SRC(x)                   (((uint32_t)(((uint32_t)(x)) << CAN_CTRL2_TIMER_SRC_SHIFT)) & CAN_CTRL2_TIMER_SRC_MASK)
#define CAN_CTRL2_EACEN_MASK                     (0x10000U)
#define CAN_CTRL2_EACEN_SHIFT                    (16U)
#define CAN_CTRL2_EACEN_WIDTH                    (1U)
#define CAN_CTRL2_EACEN(x)                       (((uint32_t)(((uint32_t)(x)) << CAN_CTRL2_EACEN_SHIFT)) & CAN_CTRL2_EACEN_MASK)
#define CAN_CTRL2_RRS_MASK                       (0x20000U)
#define CAN_CTRL2_RRS_SHIFT                      (17U)
#define CAN_CTRL2_RRS_WIDTH                      (1U)
#define CAN_CTRL2_RRS(x)                         (((uint32_t)(((uint32_t)(x)) << CAN_CTRL2_RRS_SHIFT)) & CAN_CTRL2_RRS_MASK)
#define CAN_CTRL2_MRP_MASK                       (0x40000U)
#define CAN_CTRL2_MRP_SHIFT                      (18U)
#define CAN_CTRL2_MRP_WIDTH                      (1U)
#define CAN_CTRL2_MRP(x)                         (((uint32_t)(((uint32_t)(x)) << CAN_CTRL2_MRP_SHIFT)) & CAN_CTRL2_MRP_MASK)
#define CAN_CTRL2_TASD_MASK                      (0xF80000U)
#define CAN_CTRL2_TASD_SHIFT                     (19U)
#define CAN_CTRL2_TASD_WIDTH                     (5U)
#define CAN_CTRL2_TASD(x)                        (((uint32_t)(((uint32_t)(x)) << CAN_CTRL2_TASD_SHIFT)) & CAN_CTRL2_TASD_MASK)
#define CAN_CTRL2_RFFN_MASK                      (0xF000000U)
#define CAN_CTRL2_RFFN_SHIFT                     (24U)
#define CAN_CTRL2_RFFN_WIDTH                     (4U)
#define CAN_CTRL2_RFFN(x)                        (((uint32_t)(((uint32_t)(x)) << CAN_CTRL2_RFFN_SHIFT)) & CAN_CTRL2_RFFN_MASK)
#define CAN_CTRL2_WRMFRZ_MASK                    (0x10000000U)
#define CAN_CTRL2_WRMFRZ_SHIFT                   (28U)
#define CAN_CTRL2_WRMFRZ_WIDTH                   (1U)
#define CAN_CTRL2_WRMFRZ(x)                      (((uint32_t)(((uint32_t)(x)) << CAN_CTRL2_WRMFRZ_SHIFT)) & CAN_CTRL2_WRMFRZ_MASK)
#define CAN_CTRL2_ECRWRE_MASK                    (0x20000000U)
#define CAN_CTRL2_ECRWRE_SHIFT                   (29U)
#define CAN_CTRL2_ECRWRE_WIDTH                   (1U)
#define CAN_CTRL2_ECRWRE(x)                      (((uint32_t)(((uint32_t)(x)) << CAN_CTRL2_ECRWRE_SHIFT)) & CAN_CTRL2_ECRWRE_MASK)
#define CAN_CTRL2_BOFFDONEMSK_MASK               (0x40000000U)
#define CAN_CTRL2_BOFFDONEMSK_SHIFT              (30U)
#define CAN_CTRL2_BOFFDONEMSK_WIDTH              (1U)
#define CAN_CTRL2_BOFFDONEMSK(x)                 (((uint32_t)(((uint32_t)(x)) << CAN_CTRL2_BOFFDONEMSK_SHIFT)) & CAN_CTRL2_BOFFDONEMSK_MASK)
#define CAN_CTRL2_ERRMSK_FAST_MASK               (0x80000000U)
#define CAN_CTRL2_ERRMSK_FAST_SHIFT              (31U)
#define CAN_CTRL2_ERRMSK_FAST_WIDTH              (1U)
#define CAN_CTRL2_ERRMSK_FAST(x)                 (((uint32_t)(((uint32_t)(x)) << CAN_CTRL2_ERRMSK_FAST_SHIFT)) & CAN_CTRL2_ERRMSK_FAST_MASK)
/*! @} */

/*! @name ESR2 - Error and Status 2 register */
/*! @{ */
#define CAN_ESR2_IMB_MASK                        (0x2000U)
#define CAN_ESR2_IMB_SHIFT                       (13U)
#define CAN_ESR2_IMB_WIDTH                       (1U)
#define CAN_ESR2_IMB(x)                          (((uint32_t)(((uint32_t)(x)) << CAN_ESR2_IMB_SHIFT)) & CAN_ESR2_IMB_MASK)
#define CAN_ESR2_VPS_MASK                        (0x4000U)
#define CAN_ESR2_VPS_SHIFT                       (14U)
#define CAN_ESR2_VPS_WIDTH                       (1U)
#define CAN_ESR2_VPS(x)                          (((uint32_t)(((uint32_t)(x)) << CAN_ESR2_VPS_SHIFT)) & CAN_ESR2_VPS_MASK)
#define CAN_ESR2_LPTM_MASK                       (0x7F0000U)
#define CAN_ESR2_LPTM_SHIFT                      (16U)
#define CAN_ESR2_LPTM_WIDTH                      (7U)
#define CAN_ESR2_LPTM(x)                         (((uint32_t)(((uint32_t)(x)) << CAN_ESR2_LPTM_SHIFT)) & CAN_ESR2_LPTM_MASK)
/*! @} */

/*! @name CRCR - CRC register */
/*! @{ */
#define CAN_CRCR_TXCRC_MASK                      (0x7FFFU)
#define CAN_CRCR_TXCRC_SHIFT                     (0U)
#define CAN_CRCR_TXCRC_WIDTH                     (15U)
#define CAN_CRCR_TXCRC(x)                        (((uint32_t)(((uint32_t)(x)) << CAN_CRCR_TXCRC_SHIFT)) & CAN_CRCR_TXCRC_MASK)
#define CAN_CRCR_MBCRC_MASK                      (0x7F0000U)
#define CAN_CRCR_MBCRC_SHIFT                     (16U)
#define CAN_CRCR_MBCRC_WIDTH                     (7U)
#define CAN_CRCR_MBCRC(x)                        (((uint32_t)(((uint32_t)(x)) << CAN_CRCR_MBCRC_SHIFT)) & CAN_CRCR_MBCRC_MASK)
/*! @} */

/*! @name RXFGMASK - Legacy Rx FIFO Global Mask register */
/*! @{ */
#define CAN_RXFGMASK_FGM_MASK                    (0xFFFFFFFFU)
#define CAN_RXFGMASK_FGM_SHIFT                   (0U)
#define CAN_RXFGMASK_FGM_WIDTH                   (32U)
#define CAN_RXFGMASK_FGM(x)                      (((uint32_t)(((uint32_t)(x)) << CAN_RXFGMASK_FGM_SHIFT)) & CAN_RXFGMASK_FGM_MASK)
/*! @} */

/*! @name RXFIR - Legacy Rx FIFO Information register */
/*! @{ */
#define CAN_RXFIR_IDHIT_MASK                     (0x1FFU)
#define CAN_RXFIR_IDHIT_SHIFT                    (0U)
#define CAN_RXFIR_IDHIT_WIDTH                    (9U)
#define CAN_RXFIR_IDHIT(x)                       (((uint32_t)(((uint32_t)(x)) << CAN_RXFIR_IDHIT_SHIFT)) & CAN_RXFIR_IDHIT_MASK)
/*! @} */

/*! @name CBT - CAN Bit Timing register */
/*! @{ */
#define CAN_CBT_EPSEG2_MASK                      (0x1FU)
#define CAN_CBT_EPSEG2_SHIFT                     (0U)
#define CAN_CBT_EPSEG2_WIDTH                     (5U)
#define CAN_CBT_EPSEG2(x)                        (((uint32_t)(((uint32_t)(x)) << CAN_CBT_EPSEG2_SHIFT)) & CAN_CBT_EPSEG2_MASK)
#define CAN_CBT_EPSEG1_MASK                      (0x3E0U)
#define CAN_CBT_EPSEG1_SHIFT                     (5U)
#define CAN_CBT_EPSEG1_WIDTH                     (5U)
#define CAN_CBT_EPSEG1(x)                        (((uint32_t)(((uint32_t)(x)) << CAN_CBT_EPSEG1_SHIFT)) & CAN_CBT_EPSEG1_MASK)
#define CAN_CBT_EPROPSEG_MASK                    (0xFC00U)
#define CAN_CBT_EPROPSEG_SHIFT                   (10U)
#define CAN_CBT_EPROPSEG_WIDTH                   (6U)
#define CAN_CBT_EPROPSEG(x)                      (((uint32_t)(((uint32_t)(x)) << CAN_CBT_EPROPSEG_SHIFT)) & CAN_CBT_EPROPSEG_MASK)
#define CAN_CBT_ERJW_MASK                        (0x1F0000U)
#define CAN_CBT_ERJW_SHIFT                       (16U)
#define CAN_CBT_ERJW_WIDTH                       (5U)
#define CAN_CBT_ERJW(x)                          (((uint32_t)(((uint32_t)(x)) << CAN_CBT_ERJW_SHIFT)) & CAN_CBT_ERJW_MASK)
#define CAN_CBT_EPRESDIV_MASK                    (0x7FE00000U)
#define CAN_CBT_EPRESDIV_SHIFT                   (21U)
#define CAN_CBT_EPRESDIV_WIDTH                   (10U)
#define CAN_CBT_EPRESDIV(x)                      (((uint32_t)(((uint32_t)(x)) << CAN_CBT_EPRESDIV_SHIFT)) & CAN_CBT_EPRESDIV_MASK)
#define CAN_CBT_BTF_MASK                         (0x80000000U)
#define CAN_CBT_BTF_SHIFT                        (31U)
#define CAN_CBT_BTF_WIDTH                        (1U)
#define CAN_CBT_BTF(x)                           (((uint32_t)(((uint32_t)(x)) << CAN_CBT_BTF_SHIFT)) & CAN_CBT_BTF_MASK)
/*! @} */

/*! @name IMASK4 - Interrupt Masks 4 register */
/*! @{ */
#define CAN_IMASK4_BUF127TO96M_MASK              (0xFFFFFFFFU)
#define CAN_IMASK4_BUF127TO96M_SHIFT             (0U)
#define CAN_IMASK4_BUF127TO96M_WIDTH             (32U)
#define CAN_IMASK4_BUF127TO96M(x)                (((uint32_t)(((uint32_t)(x)) << CAN_IMASK4_BUF127TO96M_SHIFT)) & CAN_IMASK4_BUF127TO96M_MASK)
/*! @} */

/*! @name IMASK3 - Interrupt Masks 3 register */
/*! @{ */
#define CAN_IMASK3_BUF95TO64M_MASK               (0xFFFFFFFFU)
#define CAN_IMASK3_BUF95TO64M_SHIFT              (0U)
#define CAN_IMASK3_BUF95TO64M_WIDTH              (32U)
#define CAN_IMASK3_BUF95TO64M(x)                 (((uint32_t)(((uint32_t)(x)) << CAN_IMASK3_BUF95TO64M_SHIFT)) & CAN_IMASK3_BUF95TO64M_MASK)
/*! @} */

/*! @name IFLAG4 - Interrupt Flags 4 register */
/*! @{ */
#define CAN_IFLAG4_BUF127TO96_MASK               (0xFFFFFFFFU)
#define CAN_IFLAG4_BUF127TO96_SHIFT              (0U)
#define CAN_IFLAG4_BUF127TO96_WIDTH              (32U)
#define CAN_IFLAG4_BUF127TO96(x)                 (((uint32_t)(((uint32_t)(x)) << CAN_IFLAG4_BUF127TO96_SHIFT)) & CAN_IFLAG4_BUF127TO96_MASK)
/*! @} */

/*! @name IFLAG3 - Interrupt Flags 3 register */
/*! @{ */
#define CAN_IFLAG3_BUF95TO64_MASK                (0xFFFFFFFFU)
#define CAN_IFLAG3_BUF95TO64_SHIFT               (0U)
#define CAN_IFLAG3_BUF95TO64_WIDTH               (32U)
#define CAN_IFLAG3_BUF95TO64(x)                  (((uint32_t)(((uint32_t)(x)) << CAN_IFLAG3_BUF95TO64_SHIFT)) & CAN_IFLAG3_BUF95TO64_MASK)
/*! @} */

/*! @name RXIMR - Rx Individual Mask registers */
/*! @{ */
#define CAN_RXIMR_MI_MASK                        (0xFFFFFFFFU)
#define CAN_RXIMR_MI_SHIFT                       (0U)
#define CAN_RXIMR_MI_WIDTH                       (32U)
#define CAN_RXIMR_MI(x)                          (((uint32_t)(((uint32_t)(x)) << CAN_RXIMR_MI_SHIFT)) & CAN_RXIMR_MI_MASK)
/*! @} */

/*! @name MECR - Memory Error Control register */
/*! @{ */
#define CAN_MECR_NCEFAFRZ_MASK                   (0x80U)
#define CAN_MECR_NCEFAFRZ_SHIFT                  (7U)
#define CAN_MECR_NCEFAFRZ_WIDTH                  (1U)
#define CAN_MECR_NCEFAFRZ(x)                     (((uint32_t)(((uint32_t)(x)) << CAN_MECR_NCEFAFRZ_SHIFT)) & CAN_MECR_NCEFAFRZ_MASK)
#define CAN_MECR_ECCDIS_MASK                     (0x100U)
#define CAN_MECR_ECCDIS_SHIFT                    (8U)
#define CAN_MECR_ECCDIS_WIDTH                    (1U)
#define CAN_MECR_ECCDIS(x)                       (((uint32_t)(((uint32_t)(x)) << CAN_MECR_ECCDIS_SHIFT)) & CAN_MECR_ECCDIS_MASK)
#define CAN_MECR_RERRDIS_MASK                    (0x200U)
#define CAN_MECR_RERRDIS_SHIFT                   (9U)
#define CAN_MECR_RERRDIS_WIDTH                   (1U)
#define CAN_MECR_RERRDIS(x)                      (((uint32_t)(((uint32_t)(x)) << CAN_MECR_RERRDIS_SHIFT)) & CAN_MECR_RERRDIS_MASK)
#define CAN_MECR_EXTERRIE_MASK                   (0x2000U)
#define CAN_MECR_EXTERRIE_SHIFT                  (13U)
#define CAN_MECR_EXTERRIE_WIDTH                  (1U)
#define CAN_MECR_EXTERRIE(x)                     (((uint32_t)(((uint32_t)(x)) << CAN_MECR_EXTERRIE_SHIFT)) & CAN_MECR_EXTERRIE_MASK)
#define CAN_MECR_FAERRIE_MASK                    (0x4000U)
#define CAN_MECR_FAERRIE_SHIFT                   (14U)
#define CAN_MECR_FAERRIE_WIDTH                   (1U)
#define CAN_MECR_FAERRIE(x)                      (((uint32_t)(((uint32_t)(x)) << CAN_MECR_FAERRIE_SHIFT)) & CAN_MECR_FAERRIE_MASK)
#define CAN_MECR_HAERRIE_MASK                    (0x8000U)
#define CAN_MECR_HAERRIE_SHIFT                   (15U)
#define CAN_MECR_HAERRIE_WIDTH                   (1U)
#define CAN_MECR_HAERRIE(x)                      (((uint32_t)(((uint32_t)(x)) << CAN_MECR_HAERRIE_SHIFT)) & CAN_MECR_HAERRIE_MASK)
#define CAN_MECR_CEI_MSK_MASK                    (0x10000U)
#define CAN_MECR_CEI_MSK_SHIFT                   (16U)
#define CAN_MECR_CEI_MSK_WIDTH                   (1U)
#define CAN_MECR_CEI_MSK(x)                      (((uint32_t)(((uint32_t)(x)) << CAN_MECR_CEI_MSK_SHIFT)) & CAN_MECR_CEI_MSK_MASK)
#define CAN_MECR_FANCEI_MSK_MASK                 (0x40000U)
#define CAN_MECR_FANCEI_MSK_SHIFT                (18U)
#define CAN_MECR_FANCEI_MSK_WIDTH                (1U)
#define CAN_MECR_FANCEI_MSK(x)                   (((uint32_t)(((uint32_t)(x)) << CAN_MECR_FANCEI_MSK_SHIFT)) & CAN_MECR_FANCEI_MSK_MASK)
#define CAN_MECR_HANCEI_MSK_MASK                 (0x80000U)
#define CAN_MECR_HANCEI_MSK_SHIFT                (19U)
#define CAN_MECR_HANCEI_MSK_WIDTH                (1U)
#define CAN_MECR_HANCEI_MSK(x)                   (((uint32_t)(((uint32_t)(x)) << CAN_MECR_HANCEI_MSK_SHIFT)) & CAN_MECR_HANCEI_MSK_MASK)
#define CAN_MECR_ECRWRDIS_MASK                   (0x80000000U)
#define CAN_MECR_ECRWRDIS_SHIFT                  (31U)
#define CAN_MECR_ECRWRDIS_WIDTH                  (1U)
#define CAN_MECR_ECRWRDIS(x)                     (((uint32_t)(((uint32_t)(x)) << CAN_MECR_ECRWRDIS_SHIFT)) & CAN_MECR_ECRWRDIS_MASK)
/*! @} */

/*! @name ERRIAR - Error Injection Address register */
/*! @{ */
#define CAN_ERRIAR_INJADDR_L_MASK                (0x3U)
#define CAN_ERRIAR_INJADDR_L_SHIFT               (0U)
#define CAN_ERRIAR_INJADDR_L_WIDTH               (2U)
#define CAN_ERRIAR_INJADDR_L(x)                  (((uint32_t)(((uint32_t)(x)) << CAN_ERRIAR_INJADDR_L_SHIFT)) & CAN_ERRIAR_INJADDR_L_MASK)
#define CAN_ERRIAR_INJADDR_H_MASK                (0x3FFCU)
#define CAN_ERRIAR_INJADDR_H_SHIFT               (2U)
#define CAN_ERRIAR_INJADDR_H_WIDTH               (12U)
#define CAN_ERRIAR_INJADDR_H(x)                  (((uint32_t)(((uint32_t)(x)) << CAN_ERRIAR_INJADDR_H_SHIFT)) & CAN_ERRIAR_INJADDR_H_MASK)
/*! @} */

/*! @name ERRIDPR - Error Injection Data Pattern register */
/*! @{ */
#define CAN_ERRIDPR_DFLIP_MASK                   (0xFFFFFFFFU)
#define CAN_ERRIDPR_DFLIP_SHIFT                  (0U)
#define CAN_ERRIDPR_DFLIP_WIDTH                  (32U)
#define CAN_ERRIDPR_DFLIP(x)                     (((uint32_t)(((uint32_t)(x)) << CAN_ERRIDPR_DFLIP_SHIFT)) & CAN_ERRIDPR_DFLIP_MASK)
/*! @} */

/*! @name ERRIPPR - Error Injection Parity Pattern register */
/*! @{ */
#define CAN_ERRIPPR_PFLIP0_MASK                  (0x1FU)
#define CAN_ERRIPPR_PFLIP0_SHIFT                 (0U)
#define CAN_ERRIPPR_PFLIP0_WIDTH                 (5U)
#define CAN_ERRIPPR_PFLIP0(x)                    (((uint32_t)(((uint32_t)(x)) << CAN_ERRIPPR_PFLIP0_SHIFT)) & CAN_ERRIPPR_PFLIP0_MASK)
#define CAN_ERRIPPR_PFLIP1_MASK                  (0x1F00U)
#define CAN_ERRIPPR_PFLIP1_SHIFT                 (8U)
#define CAN_ERRIPPR_PFLIP1_WIDTH                 (5U)
#define CAN_ERRIPPR_PFLIP1(x)                    (((uint32_t)(((uint32_t)(x)) << CAN_ERRIPPR_PFLIP1_SHIFT)) & CAN_ERRIPPR_PFLIP1_MASK)
#define CAN_ERRIPPR_PFLIP2_MASK                  (0x1F0000U)
#define CAN_ERRIPPR_PFLIP2_SHIFT                 (16U)
#define CAN_ERRIPPR_PFLIP2_WIDTH                 (5U)
#define CAN_ERRIPPR_PFLIP2(x)                    (((uint32_t)(((uint32_t)(x)) << CAN_ERRIPPR_PFLIP2_SHIFT)) & CAN_ERRIPPR_PFLIP2_MASK)
#define CAN_ERRIPPR_PFLIP3_MASK                  (0x1F000000U)
#define CAN_ERRIPPR_PFLIP3_SHIFT                 (24U)
#define CAN_ERRIPPR_PFLIP3_WIDTH                 (5U)
#define CAN_ERRIPPR_PFLIP3(x)                    (((uint32_t)(((uint32_t)(x)) << CAN_ERRIPPR_PFLIP3_SHIFT)) & CAN_ERRIPPR_PFLIP3_MASK)
/*! @} */

/*! @name RERRAR - Error Report Address register */
/*! @{ */
#define CAN_RERRAR_ERRADDR_MASK                  (0x3FFFU)
#define CAN_RERRAR_ERRADDR_SHIFT                 (0U)
#define CAN_RERRAR_ERRADDR_WIDTH                 (14U)
#define CAN_RERRAR_ERRADDR(x)                    (((uint32_t)(((uint32_t)(x)) << CAN_RERRAR_ERRADDR_SHIFT)) & CAN_RERRAR_ERRADDR_MASK)
#define CAN_RERRAR_SAID_MASK                     (0x70000U)
#define CAN_RERRAR_SAID_SHIFT                    (16U)
#define CAN_RERRAR_SAID_WIDTH                    (3U)
#define CAN_RERRAR_SAID(x)                       (((uint32_t)(((uint32_t)(x)) << CAN_RERRAR_SAID_SHIFT)) & CAN_RERRAR_SAID_MASK)
#define CAN_RERRAR_NCE_MASK                      (0x1000000U)
#define CAN_RERRAR_NCE_SHIFT                     (24U)
#define CAN_RERRAR_NCE_WIDTH                     (1U)
#define CAN_RERRAR_NCE(x)                        (((uint32_t)(((uint32_t)(x)) << CAN_RERRAR_NCE_SHIFT)) & CAN_RERRAR_NCE_MASK)
/*! @} */

/*! @name RERRDR - Error Report Data register */
/*! @{ */
#define CAN_RERRDR_RDATA_MASK                    (0xFFFFFFFFU)
#define CAN_RERRDR_RDATA_SHIFT                   (0U)
#define CAN_RERRDR_RDATA_WIDTH                   (32U)
#define CAN_RERRDR_RDATA(x)                      (((uint32_t)(((uint32_t)(x)) << CAN_RERRDR_RDATA_SHIFT)) & CAN_RERRDR_RDATA_MASK)
/*! @} */

/*! @name RERRSYNR - Error Report Syndrome register */
/*! @{ */
#define CAN_RERRSYNR_SYND0_MASK                  (0x1FU)
#define CAN_RERRSYNR_SYND0_SHIFT                 (0U)
#define CAN_RERRSYNR_SYND0_WIDTH                 (5U)
#define CAN_RERRSYNR_SYND0(x)                    (((uint32_t)(((uint32_t)(x)) << CAN_RERRSYNR_SYND0_SHIFT)) & CAN_RERRSYNR_SYND0_MASK)
#define CAN_RERRSYNR_BE0_MASK                    (0x80U)
#define CAN_RERRSYNR_BE0_SHIFT                   (7U)
#define CAN_RERRSYNR_BE0_WIDTH                   (1U)
#define CAN_RERRSYNR_BE0(x)                      (((uint32_t)(((uint32_t)(x)) << CAN_RERRSYNR_BE0_SHIFT)) & CAN_RERRSYNR_BE0_MASK)
#define CAN_RERRSYNR_SYND1_MASK                  (0x1F00U)
#define CAN_RERRSYNR_SYND1_SHIFT                 (8U)
#define CAN_RERRSYNR_SYND1_WIDTH                 (5U)
#define CAN_RERRSYNR_SYND1(x)                    (((uint32_t)(((uint32_t)(x)) << CAN_RERRSYNR_SYND1_SHIFT)) & CAN_RERRSYNR_SYND1_MASK)
#define CAN_RERRSYNR_BE1_MASK                    (0x8000U)
#define CAN_RERRSYNR_BE1_SHIFT                   (15U)
#define CAN_RERRSYNR_BE1_WIDTH                   (1U)
#define CAN_RERRSYNR_BE1(x)                      (((uint32_t)(((uint32_t)(x)) << CAN_RERRSYNR_BE1_SHIFT)) & CAN_RERRSYNR_BE1_MASK)
#define CAN_RERRSYNR_SYND2_MASK                  (0x1F0000U)
#define CAN_RERRSYNR_SYND2_SHIFT                 (16U)
#define CAN_RERRSYNR_SYND2_WIDTH                 (5U)
#define CAN_RERRSYNR_SYND2(x)                    (((uint32_t)(((uint32_t)(x)) << CAN_RERRSYNR_SYND2_SHIFT)) & CAN_RERRSYNR_SYND2_MASK)
#define CAN_RERRSYNR_BE2_MASK                    (0x800000U)
#define CAN_RERRSYNR_BE2_SHIFT                   (23U)
#define CAN_RERRSYNR_BE2_WIDTH                   (1U)
#define CAN_RERRSYNR_BE2(x)                      (((uint32_t)(((uint32_t)(x)) << CAN_RERRSYNR_BE2_SHIFT)) & CAN_RERRSYNR_BE2_MASK)
#define CAN_RERRSYNR_SYND3_MASK                  (0x1F000000U)
#define CAN_RERRSYNR_SYND3_SHIFT                 (24U)
#define CAN_RERRSYNR_SYND3_WIDTH                 (5U)
#define CAN_RERRSYNR_SYND3(x)                    (((uint32_t)(((uint32_t)(x)) << CAN_RERRSYNR_SYND3_SHIFT)) & CAN_RERRSYNR_SYND3_MASK)
#define CAN_RERRSYNR_BE3_MASK                    (0x80000000U)
#define CAN_RERRSYNR_BE3_SHIFT                   (31U)
#define CAN_RERRSYNR_BE3_WIDTH                   (1U)
#define CAN_RERRSYNR_BE3(x)                      (((uint32_t)(((uint32_t)(x)) << CAN_RERRSYNR_BE3_SHIFT)) & CAN_RERRSYNR_BE3_MASK)
/*! @} */

/*! @name ERRSR - Error Status register */
/*! @{ */
#define CAN_ERRSR_CEIOF_MASK                     (0x1U)
#define CAN_ERRSR_CEIOF_SHIFT                    (0U)
#define CAN_ERRSR_CEIOF_WIDTH                    (1U)
#define CAN_ERRSR_CEIOF(x)                       (((uint32_t)(((uint32_t)(x)) << CAN_ERRSR_CEIOF_SHIFT)) & CAN_ERRSR_CEIOF_MASK)
#define CAN_ERRSR_FANCEIOF_MASK                  (0x4U)
#define CAN_ERRSR_FANCEIOF_SHIFT                 (2U)
#define CAN_ERRSR_FANCEIOF_WIDTH                 (1U)
#define CAN_ERRSR_FANCEIOF(x)                    (((uint32_t)(((uint32_t)(x)) << CAN_ERRSR_FANCEIOF_SHIFT)) & CAN_ERRSR_FANCEIOF_MASK)
#define CAN_ERRSR_HANCEIOF_MASK                  (0x8U)
#define CAN_ERRSR_HANCEIOF_SHIFT                 (3U)
#define CAN_ERRSR_HANCEIOF_WIDTH                 (1U)
#define CAN_ERRSR_HANCEIOF(x)                    (((uint32_t)(((uint32_t)(x)) << CAN_ERRSR_HANCEIOF_SHIFT)) & CAN_ERRSR_HANCEIOF_MASK)
#define CAN_ERRSR_CEIF_MASK                      (0x10000U)
#define CAN_ERRSR_CEIF_SHIFT                     (16U)
#define CAN_ERRSR_CEIF_WIDTH                     (1U)
#define CAN_ERRSR_CEIF(x)                        (((uint32_t)(((uint32_t)(x)) << CAN_ERRSR_CEIF_SHIFT)) & CAN_ERRSR_CEIF_MASK)
#define CAN_ERRSR_FANCEIF_MASK                   (0x40000U)
#define CAN_ERRSR_FANCEIF_SHIFT                  (18U)
#define CAN_ERRSR_FANCEIF_WIDTH                  (1U)
#define CAN_ERRSR_FANCEIF(x)                     (((uint32_t)(((uint32_t)(x)) << CAN_ERRSR_FANCEIF_SHIFT)) & CAN_ERRSR_FANCEIF_MASK)
#define CAN_ERRSR_HANCEIF_MASK                   (0x80000U)
#define CAN_ERRSR_HANCEIF_SHIFT                  (19U)
#define CAN_ERRSR_HANCEIF_WIDTH                  (1U)
#define CAN_ERRSR_HANCEIF(x)                     (((uint32_t)(((uint32_t)(x)) << CAN_ERRSR_HANCEIF_SHIFT)) & CAN_ERRSR_HANCEIF_MASK)
/*! @} */

/*! @name EPRS - Enhanced CAN Bit Timing Prescalers */
/*! @{ */
#define CAN_EPRS_ENPRESDIV_MASK                  (0x3FFU)
#define CAN_EPRS_ENPRESDIV_SHIFT                 (0U)
#define CAN_EPRS_ENPRESDIV_WIDTH                 (10U)
#define CAN_EPRS_ENPRESDIV(x)                    (((uint32_t)(((uint32_t)(x)) << CAN_EPRS_ENPRESDIV_SHIFT)) & CAN_EPRS_ENPRESDIV_MASK)
#define CAN_EPRS_EDPRESDIV_MASK                  (0x3FF0000U)
#define CAN_EPRS_EDPRESDIV_SHIFT                 (16U)
#define CAN_EPRS_EDPRESDIV_WIDTH                 (10U)
#define CAN_EPRS_EDPRESDIV(x)                    (((uint32_t)(((uint32_t)(x)) << CAN_EPRS_EDPRESDIV_SHIFT)) & CAN_EPRS_EDPRESDIV_MASK)
/*! @} */

/*! @name ENCBT - Enhanced Nominal CAN Bit Timing */
/*! @{ */
#define CAN_ENCBT_NTSEG1_MASK                    (0xFFU)
#define CAN_ENCBT_NTSEG1_SHIFT                   (0U)
#define CAN_ENCBT_NTSEG1_WIDTH                   (8U)
#define CAN_ENCBT_NTSEG1(x)                      (((uint32_t)(((uint32_t)(x)) << CAN_ENCBT_NTSEG1_SHIFT)) & CAN_ENCBT_NTSEG1_MASK)
#define CAN_ENCBT_NTSEG2_MASK                    (0x7F000U)
#define CAN_ENCBT_NTSEG2_SHIFT                   (12U)
#define CAN_ENCBT_NTSEG2_WIDTH                   (7U)
#define CAN_ENCBT_NTSEG2(x)                      (((uint32_t)(((uint32_t)(x)) << CAN_ENCBT_NTSEG2_SHIFT)) & CAN_ENCBT_NTSEG2_MASK)
#define CAN_ENCBT_NRJW_MASK                      (0x1FC00000U)
#define CAN_ENCBT_NRJW_SHIFT                     (22U)
#define CAN_ENCBT_NRJW_WIDTH                     (7U)
#define CAN_ENCBT_NRJW(x)                        (((uint32_t)(((uint32_t)(x)) << CAN_ENCBT_NRJW_SHIFT)) & CAN_ENCBT_NRJW_MASK)
/*! @} */

/*! @name EDCBT - Enhanced Data Phase CAN bit Timing */
/*! @{ */
#define CAN_EDCBT_DTSEG1_MASK                    (0x1FU)
#define CAN_EDCBT_DTSEG1_SHIFT                   (0U)
#define CAN_EDCBT_DTSEG1_WIDTH                   (5U)
#define CAN_EDCBT_DTSEG1(x)                      (((uint32_t)(((uint32_t)(x)) << CAN_EDCBT_DTSEG1_SHIFT)) & CAN_EDCBT_DTSEG1_MASK)
#define CAN_EDCBT_DTSEG2_MASK                    (0xF000U)
#define CAN_EDCBT_DTSEG2_SHIFT                   (12U)
#define CAN_EDCBT_DTSEG2_WIDTH                   (4U)
#define CAN_EDCBT_DTSEG2(x)                      (((uint32_t)(((uint32_t)(x)) << CAN_EDCBT_DTSEG2_SHIFT)) & CAN_EDCBT_DTSEG2_MASK)
#define CAN_EDCBT_DRJW_MASK                      (0x3C00000U)
#define CAN_EDCBT_DRJW_SHIFT                     (22U)
#define CAN_EDCBT_DRJW_WIDTH                     (4U)
#define CAN_EDCBT_DRJW(x)                        (((uint32_t)(((uint32_t)(x)) << CAN_EDCBT_DRJW_SHIFT)) & CAN_EDCBT_DRJW_MASK)
/*! @} */

/*! @name ETDC - Enhanced Transceiver Delay Compensation */
/*! @{ */
#define CAN_ETDC_ETDCVAL_MASK                    (0xFFU)
#define CAN_ETDC_ETDCVAL_SHIFT                   (0U)
#define CAN_ETDC_ETDCVAL_WIDTH                   (8U)
#define CAN_ETDC_ETDCVAL(x)                      (((uint32_t)(((uint32_t)(x)) << CAN_ETDC_ETDCVAL_SHIFT)) & CAN_ETDC_ETDCVAL_MASK)
#define CAN_ETDC_ETDCFAIL_MASK                   (0x8000U)
#define CAN_ETDC_ETDCFAIL_SHIFT                  (15U)
#define CAN_ETDC_ETDCFAIL_WIDTH                  (1U)
#define CAN_ETDC_ETDCFAIL(x)                     (((uint32_t)(((uint32_t)(x)) << CAN_ETDC_ETDCFAIL_SHIFT)) & CAN_ETDC_ETDCFAIL_MASK)
#define CAN_ETDC_ETDCOFF_MASK                    (0x7F0000U)
#define CAN_ETDC_ETDCOFF_SHIFT                   (16U)
#define CAN_ETDC_ETDCOFF_WIDTH                   (7U)
#define CAN_ETDC_ETDCOFF(x)                      (((uint32_t)(((uint32_t)(x)) << CAN_ETDC_ETDCOFF_SHIFT)) & CAN_ETDC_ETDCOFF_MASK)
#define CAN_ETDC_TDMDIS_MASK                     (0x40000000U)
#define CAN_ETDC_TDMDIS_SHIFT                    (30U)
#define CAN_ETDC_TDMDIS_WIDTH                    (1U)
#define CAN_ETDC_TDMDIS(x)                       (((uint32_t)(((uint32_t)(x)) << CAN_ETDC_TDMDIS_SHIFT)) & CAN_ETDC_TDMDIS_MASK)
#define CAN_ETDC_ETDCEN_MASK                     (0x80000000U)
#define CAN_ETDC_ETDCEN_SHIFT                    (31U)
#define CAN_ETDC_ETDCEN_WIDTH                    (1U)
#define CAN_ETDC_ETDCEN(x)                       (((uint32_t)(((uint32_t)(x)) << CAN_ETDC_ETDCEN_SHIFT)) & CAN_ETDC_ETDCEN_MASK)
/*! @} */

/*! @name FDCTRL - CAN FD Control register */
/*! @{ */
#define CAN_FDCTRL_TDCVAL_MASK                   (0x3FU)
#define CAN_FDCTRL_TDCVAL_SHIFT                  (0U)
#define CAN_FDCTRL_TDCVAL_WIDTH                  (6U)
#define CAN_FDCTRL_TDCVAL(x)                     (((uint32_t)(((uint32_t)(x)) << CAN_FDCTRL_TDCVAL_SHIFT)) & CAN_FDCTRL_TDCVAL_MASK)
#define CAN_FDCTRL_TDCOFF_MASK                   (0x1F00U)
#define CAN_FDCTRL_TDCOFF_SHIFT                  (8U)
#define CAN_FDCTRL_TDCOFF_WIDTH                  (5U)
#define CAN_FDCTRL_TDCOFF(x)                     (((uint32_t)(((uint32_t)(x)) << CAN_FDCTRL_TDCOFF_SHIFT)) & CAN_FDCTRL_TDCOFF_MASK)
#define CAN_FDCTRL_TDCFAIL_MASK                  (0x4000U)
#define CAN_FDCTRL_TDCFAIL_SHIFT                 (14U)
#define CAN_FDCTRL_TDCFAIL_WIDTH                 (1U)
#define CAN_FDCTRL_TDCFAIL(x)                    (((uint32_t)(((uint32_t)(x)) << CAN_FDCTRL_TDCFAIL_SHIFT)) & CAN_FDCTRL_TDCFAIL_MASK)
#define CAN_FDCTRL_TDCEN_MASK                    (0x8000U)
#define CAN_FDCTRL_TDCEN_SHIFT                   (15U)
#define CAN_FDCTRL_TDCEN_WIDTH                   (1U)
#define CAN_FDCTRL_TDCEN(x)                      (((uint32_t)(((uint32_t)(x)) << CAN_FDCTRL_TDCEN_SHIFT)) & CAN_FDCTRL_TDCEN_MASK)
#define CAN_FDCTRL_MBDSR0_MASK                   (0x30000U)
#define CAN_FDCTRL_MBDSR0_SHIFT                  (16U)
#define CAN_FDCTRL_MBDSR0_WIDTH                  (2U)
#define CAN_FDCTRL_MBDSR0(x)                     (((uint32_t)(((uint32_t)(x)) << CAN_FDCTRL_MBDSR0_SHIFT)) & CAN_FDCTRL_MBDSR0_MASK)
#define CAN_FDCTRL_MBDSR1_MASK                   (0x180000U)
#define CAN_FDCTRL_MBDSR1_SHIFT                  (19U)
#define CAN_FDCTRL_MBDSR1_WIDTH                  (2U)
#define CAN_FDCTRL_MBDSR1(x)                     (((uint32_t)(((uint32_t)(x)) << CAN_FDCTRL_MBDSR1_SHIFT)) & CAN_FDCTRL_MBDSR1_MASK)
#define CAN_FDCTRL_MBDSR2_MASK                   (0xC00000U)
#define CAN_FDCTRL_MBDSR2_SHIFT                  (22U)
#define CAN_FDCTRL_MBDSR2_WIDTH                  (2U)
#define CAN_FDCTRL_MBDSR2(x)                     (((uint32_t)(((uint32_t)(x)) << CAN_FDCTRL_MBDSR2_SHIFT)) & CAN_FDCTRL_MBDSR2_MASK)
#define CAN_FDCTRL_MBDSR3_MASK                   (0x6000000U)
#define CAN_FDCTRL_MBDSR3_SHIFT                  (25U)
#define CAN_FDCTRL_MBDSR3_WIDTH                  (2U)
#define CAN_FDCTRL_MBDSR3(x)                     (((uint32_t)(((uint32_t)(x)) << CAN_FDCTRL_MBDSR3_SHIFT)) & CAN_FDCTRL_MBDSR3_MASK)
#define CAN_FDCTRL_FDRATE_MASK                   (0x80000000U)
#define CAN_FDCTRL_FDRATE_SHIFT                  (31U)
#define CAN_FDCTRL_FDRATE_WIDTH                  (1U)
#define CAN_FDCTRL_FDRATE(x)                     (((uint32_t)(((uint32_t)(x)) << CAN_FDCTRL_FDRATE_SHIFT)) & CAN_FDCTRL_FDRATE_MASK)
/*! @} */

/*! @name FDCBT - CAN FD Bit Timing register */
/*! @{ */
#define CAN_FDCBT_FPSEG2_MASK                    (0x7U)
#define CAN_FDCBT_FPSEG2_SHIFT                   (0U)
#define CAN_FDCBT_FPSEG2_WIDTH                   (3U)
#define CAN_FDCBT_FPSEG2(x)                      (((uint32_t)(((uint32_t)(x)) << CAN_FDCBT_FPSEG2_SHIFT)) & CAN_FDCBT_FPSEG2_MASK)
#define CAN_FDCBT_FPSEG1_MASK                    (0xE0U)
#define CAN_FDCBT_FPSEG1_SHIFT                   (5U)
#define CAN_FDCBT_FPSEG1_WIDTH                   (3U)
#define CAN_FDCBT_FPSEG1(x)                      (((uint32_t)(((uint32_t)(x)) << CAN_FDCBT_FPSEG1_SHIFT)) & CAN_FDCBT_FPSEG1_MASK)
#define CAN_FDCBT_FPROPSEG_MASK                  (0x7C00U)
#define CAN_FDCBT_FPROPSEG_SHIFT                 (10U)
#define CAN_FDCBT_FPROPSEG_WIDTH                 (5U)
#define CAN_FDCBT_FPROPSEG(x)                    (((uint32_t)(((uint32_t)(x)) << CAN_FDCBT_FPROPSEG_SHIFT)) & CAN_FDCBT_FPROPSEG_MASK)
#define CAN_FDCBT_FRJW_MASK                      (0x70000U)
#define CAN_FDCBT_FRJW_SHIFT                     (16U)
#define CAN_FDCBT_FRJW_WIDTH                     (3U)
#define CAN_FDCBT_FRJW(x)                        (((uint32_t)(((uint32_t)(x)) << CAN_FDCBT_FRJW_SHIFT)) & CAN_FDCBT_FRJW_MASK)
#define CAN_FDCBT_FPRESDIV_MASK                  (0x3FF00000U)
#define CAN_FDCBT_FPRESDIV_SHIFT                 (20U)
#define CAN_FDCBT_FPRESDIV_WIDTH                 (10U)
#define CAN_FDCBT_FPRESDIV(x)                    (((uint32_t)(((uint32_t)(x)) << CAN_FDCBT_FPRESDIV_SHIFT)) & CAN_FDCBT_FPRESDIV_MASK)
/*! @} */

/*! @name FDCRC - CAN FD CRC register */
/*! @{ */
#define CAN_FDCRC_FD_TXCRC_MASK                  (0x1FFFFFU)
#define CAN_FDCRC_FD_TXCRC_SHIFT                 (0U)
#define CAN_FDCRC_FD_TXCRC_WIDTH                 (21U)
#define CAN_FDCRC_FD_TXCRC(x)                    (((uint32_t)(((uint32_t)(x)) << CAN_FDCRC_FD_TXCRC_SHIFT)) & CAN_FDCRC_FD_TXCRC_MASK)
#define CAN_FDCRC_FD_MBCRC_MASK                  (0x7F000000U)
#define CAN_FDCRC_FD_MBCRC_SHIFT                 (24U)
#define CAN_FDCRC_FD_MBCRC_WIDTH                 (7U)
#define CAN_FDCRC_FD_MBCRC(x)                    (((uint32_t)(((uint32_t)(x)) << CAN_FDCRC_FD_MBCRC_SHIFT)) & CAN_FDCRC_FD_MBCRC_MASK)
/*! @} */

/*! @name ERFCR - Enhanced Rx FIFO Control register */
/*! @{ */
#define CAN_ERFCR_ERFWM_MASK                     (0x1FU)
#define CAN_ERFCR_ERFWM_SHIFT                    (0U)
#define CAN_ERFCR_ERFWM_WIDTH                    (5U)
#define CAN_ERFCR_ERFWM(x)                       (((uint32_t)(((uint32_t)(x)) << CAN_ERFCR_ERFWM_SHIFT)) & CAN_ERFCR_ERFWM_MASK)
#define CAN_ERFCR_NFE_MASK                       (0x3F00U)
#define CAN_ERFCR_NFE_SHIFT                      (8U)
#define CAN_ERFCR_NFE_WIDTH                      (6U)
#define CAN_ERFCR_NFE(x)                         (((uint32_t)(((uint32_t)(x)) << CAN_ERFCR_NFE_SHIFT)) & CAN_ERFCR_NFE_MASK)
#define CAN_ERFCR_NEXIF_MASK                     (0x7F0000U)
#define CAN_ERFCR_NEXIF_SHIFT                    (16U)
#define CAN_ERFCR_NEXIF_WIDTH                    (7U)
#define CAN_ERFCR_NEXIF(x)                       (((uint32_t)(((uint32_t)(x)) << CAN_ERFCR_NEXIF_SHIFT)) & CAN_ERFCR_NEXIF_MASK)
#define CAN_ERFCR_DMALW_MASK                     (0x7C000000U)
#define CAN_ERFCR_DMALW_SHIFT                    (26U)
#define CAN_ERFCR_DMALW_WIDTH                    (5U)
#define CAN_ERFCR_DMALW(x)                       (((uint32_t)(((uint32_t)(x)) << CAN_ERFCR_DMALW_SHIFT)) & CAN_ERFCR_DMALW_MASK)
#define CAN_ERFCR_ERFEN_MASK                     (0x80000000U)
#define CAN_ERFCR_ERFEN_SHIFT                    (31U)
#define CAN_ERFCR_ERFEN_WIDTH                    (1U)
#define CAN_ERFCR_ERFEN(x)                       (((uint32_t)(((uint32_t)(x)) << CAN_ERFCR_ERFEN_SHIFT)) & CAN_ERFCR_ERFEN_MASK)
/*! @} */

/*! @name ERFIER - Enhanced Rx FIFO Interrupt Enable register */
/*! @{ */
#define CAN_ERFIER_ERFDAIE_MASK                  (0x10000000U)
#define CAN_ERFIER_ERFDAIE_SHIFT                 (28U)
#define CAN_ERFIER_ERFDAIE_WIDTH                 (1U)
#define CAN_ERFIER_ERFDAIE(x)                    (((uint32_t)(((uint32_t)(x)) << CAN_ERFIER_ERFDAIE_SHIFT)) & CAN_ERFIER_ERFDAIE_MASK)
#define CAN_ERFIER_ERFWMIIE_MASK                 (0x20000000U)
#define CAN_ERFIER_ERFWMIIE_SHIFT                (29U)
#define CAN_ERFIER_ERFWMIIE_WIDTH                (1U)
#define CAN_ERFIER_ERFWMIIE(x)                   (((uint32_t)(((uint32_t)(x)) << CAN_ERFIER_ERFWMIIE_SHIFT)) & CAN_ERFIER_ERFWMIIE_MASK)
#define CAN_ERFIER_ERFOVFIE_MASK                 (0x40000000U)
#define CAN_ERFIER_ERFOVFIE_SHIFT                (30U)
#define CAN_ERFIER_ERFOVFIE_WIDTH                (1U)
#define CAN_ERFIER_ERFOVFIE(x)                   (((uint32_t)(((uint32_t)(x)) << CAN_ERFIER_ERFOVFIE_SHIFT)) & CAN_ERFIER_ERFOVFIE_MASK)
#define CAN_ERFIER_ERFUFWIE_MASK                 (0x80000000U)
#define CAN_ERFIER_ERFUFWIE_SHIFT                (31U)
#define CAN_ERFIER_ERFUFWIE_WIDTH                (1U)
#define CAN_ERFIER_ERFUFWIE(x)                   (((uint32_t)(((uint32_t)(x)) << CAN_ERFIER_ERFUFWIE_SHIFT)) & CAN_ERFIER_ERFUFWIE_MASK)
/*! @} */

/*! @name ERFSR - Enhanced Rx FIFO Status register */
/*! @{ */
#define CAN_ERFSR_ERFEL_MASK                     (0x3FU)
#define CAN_ERFSR_ERFEL_SHIFT                    (0U)
#define CAN_ERFSR_ERFEL_WIDTH                    (6U)
#define CAN_ERFSR_ERFEL(x)                       (((uint32_t)(((uint32_t)(x)) << CAN_ERFSR_ERFEL_SHIFT)) & CAN_ERFSR_ERFEL_MASK)
#define CAN_ERFSR_ERFF_MASK                      (0x10000U)
#define CAN_ERFSR_ERFF_SHIFT                     (16U)
#define CAN_ERFSR_ERFF_WIDTH                     (1U)
#define CAN_ERFSR_ERFF(x)                        (((uint32_t)(((uint32_t)(x)) << CAN_ERFSR_ERFF_SHIFT)) & CAN_ERFSR_ERFF_MASK)
#define CAN_ERFSR_ERFE_MASK                      (0x20000U)
#define CAN_ERFSR_ERFE_SHIFT                     (17U)
#define CAN_ERFSR_ERFE_WIDTH                     (1U)
#define CAN_ERFSR_ERFE(x)                        (((uint32_t)(((uint32_t)(x)) << CAN_ERFSR_ERFE_SHIFT)) & CAN_ERFSR_ERFE_MASK)
#define CAN_ERFSR_ERFCLR_MASK                    (0x8000000U)
#define CAN_ERFSR_ERFCLR_SHIFT                   (27U)
#define CAN_ERFSR_ERFCLR_WIDTH                   (1U)
#define CAN_ERFSR_ERFCLR(x)                      (((uint32_t)(((uint32_t)(x)) << CAN_ERFSR_ERFCLR_SHIFT)) & CAN_ERFSR_ERFCLR_MASK)
#define CAN_ERFSR_ERFDA_MASK                     (0x10000000U)
#define CAN_ERFSR_ERFDA_SHIFT                    (28U)
#define CAN_ERFSR_ERFDA_WIDTH                    (1U)
#define CAN_ERFSR_ERFDA(x)                       (((uint32_t)(((uint32_t)(x)) << CAN_ERFSR_ERFDA_SHIFT)) & CAN_ERFSR_ERFDA_MASK)
#define CAN_ERFSR_ERFWMI_MASK                    (0x20000000U)
#define CAN_ERFSR_ERFWMI_SHIFT                   (29U)
#define CAN_ERFSR_ERFWMI_WIDTH                   (1U)
#define CAN_ERFSR_ERFWMI(x)                      (((uint32_t)(((uint32_t)(x)) << CAN_ERFSR_ERFWMI_SHIFT)) & CAN_ERFSR_ERFWMI_MASK)
#define CAN_ERFSR_ERFOVF_MASK                    (0x40000000U)
#define CAN_ERFSR_ERFOVF_SHIFT                   (30U)
#define CAN_ERFSR_ERFOVF_WIDTH                   (1U)
#define CAN_ERFSR_ERFOVF(x)                      (((uint32_t)(((uint32_t)(x)) << CAN_ERFSR_ERFOVF_SHIFT)) & CAN_ERFSR_ERFOVF_MASK)
#define CAN_ERFSR_ERFUFW_MASK                    (0x80000000U)
#define CAN_ERFSR_ERFUFW_SHIFT                   (31U)
#define CAN_ERFSR_ERFUFW_WIDTH                   (1U)
#define CAN_ERFSR_ERFUFW(x)                      (((uint32_t)(((uint32_t)(x)) << CAN_ERFSR_ERFUFW_SHIFT)) & CAN_ERFSR_ERFUFW_MASK)
/*! @} */

/*! @name HR_TIME_STAMP - High Resolution Time Stamp */
/*! @{ */
#define CAN_HR_TIME_STAMP_TS_MASK                (0xFFFFFFFFU)
#define CAN_HR_TIME_STAMP_TS_SHIFT               (0U)
#define CAN_HR_TIME_STAMP_TS_WIDTH               (32U)
#define CAN_HR_TIME_STAMP_TS(x)                  (((uint32_t)(((uint32_t)(x)) << CAN_HR_TIME_STAMP_TS_SHIFT)) & CAN_HR_TIME_STAMP_TS_MASK)
/*! @} */

/*! @name ERFFEL - Enhanced Rx FIFO Filter Element */
/*! @{ */
#define CAN_ERFFEL_FEL_MASK                      (0xFFFFFFFFU)
#define CAN_ERFFEL_FEL_SHIFT                     (0U)
#define CAN_ERFFEL_FEL_WIDTH                     (32U)
#define CAN_ERFFEL_FEL(x)                        (((uint32_t)(((uint32_t)(x)) << CAN_ERFFEL_FEL_SHIFT)) & CAN_ERFFEL_FEL_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group CAN_Register_Masks */


/*!
 * @}
 */ /* end of group CAN_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- FLEXRAY Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup FR_Peripheral_Access_Layer FLEXRAY Peripheral Access Layer
 * @{
 */

/** FLEXRAY - Size of Registers Arrays */
#define FR_NMVR_COUNT                             6u
#define FR_SSR_COUNT                              8u
#define FR_SSCR_COUNT                             4u
#define FR_MB_COUNT                               256u
#define FR_MBDOR_COUNT                            260u
#define FR_LEETR_COUNT                            6u

/** FLEXRAY - Register Layout Typedef */
typedef struct {
  __I  uint16_t MVR;                               /**< Module Version Register, offset: 0x0 */
  __IO uint16_t MCR;                               /**< Module Configuration Register, offset: 0x2 */
  __IO uint16_t SYMBADHR;                          /**< System Memory Base Address High Register, offset: 0x4 */
  __IO uint16_t SYMBADLR;                          /**< System Memory Base Address Low Register, offset: 0x6 */
  __IO uint16_t STBSCR;                            /**< Strobe Signal Control Register, offset: 0x8 */
  uint8_t RESERVED_0[2];
  __IO uint16_t MBDSR;                             /**< Message Buffer Data Size Register, offset: 0xC */
  __IO uint16_t MBSSUTR;                           /**< Message Buffer Segment Size and Utilization Register, offset: 0xE */
  __IO uint16_t PEDRAR;                            /**< PE DRAM Access Register, offset: 0x10 */
  __IO uint16_t PEDRDR;                            /**< PE DRAM Data Register, offset: 0x12 */
  __IO uint16_t POCR;                              /**< Protocol Operation Control Register, offset: 0x14 */
  __IO uint16_t GIFER;                             /**< Global Interrupt Flag and Enable Register, offset: 0x16 */
  __IO uint16_t PIFR0;                             /**< Protocol Interrupt Flag Register 0, offset: 0x18 */
  __IO uint16_t PIFR1;                             /**< Protocol Interrupt Flag Register 1, offset: 0x1A */
  __IO uint16_t PIER0;                             /**< Protocol Interrupt Enable Register 0, offset: 0x1C */
  __IO uint16_t PIER1;                             /**< Protocol Interrupt Enable Register 1, offset: 0x1E */
  __IO uint16_t CHIERFR;                           /**< CHI Error Flag Register, offset: 0x20 */
  __I  uint16_t MBIVEC;                            /**< Message Buffer Interrupt Vector Register, offset: 0x22 */
  __I  uint16_t CASERCR;                           /**< Channel A Status Error Counter Register, offset: 0x24 */
  __I  uint16_t CBSERCR;                           /**< Channel B Status Error Counter Register, offset: 0x26 */
  __I  uint16_t PSR0;                              /**< Protocol Status Register 0, offset: 0x28 */
  __IO uint16_t PSR1;                              /**< Protocol Status Register 1, offset: 0x2A */
  __I  uint16_t PSR2;                              /**< Protocol Status Register 2, offset: 0x2C */
  __IO uint16_t PSR3;                              /**< Protocol Status Register 3, offset: 0x2E */
  __I  uint16_t MTCTR;                             /**< Macrotick Counter Register, offset: 0x30 */
  __I  uint16_t CYCTR;                             /**< Cycle Counter Register, offset: 0x32 */
  __I  uint16_t SLTCTAR;                           /**< Slot Counter Channel A Register, offset: 0x34 */
  __I  uint16_t SLTCTBR;                           /**< Slot Counter Channel B Register, offset: 0x36 */
  __I  uint16_t RTCORVR;                           /**< Rate Correction Value Register, offset: 0x38 */
  __I  uint16_t OFCORVR;                           /**< Offset Correction Value Register, offset: 0x3A */
  __I  uint16_t CIFR;                              /**< Combined Interrupt Flag Register, offset: 0x3C */
  __IO uint16_t SYMATOR;                           /**< System Memory Access Time-Out Register, offset: 0x3E */
  __I  uint16_t SFCNTR;                            /**< Sync Frame Counter Register, offset: 0x40 */
  __IO uint16_t SFTOR;                             /**< Sync Frame Table Offset Register, offset: 0x42 */
  __IO uint16_t SFTCCSR;                           /**< Sync Frame Table Configuration Control Status Register, offset: 0x44 */
  __IO uint16_t SFIDRFR;                           /**< Sync Frame ID Rejection Filter Register, offset: 0x46 */
  __IO uint16_t SFIDAFVR;                          /**< Sync Frame ID Acceptance Filter Value Register, offset: 0x48 */
  __IO uint16_t SFIDAFMR;                          /**< Sync Frame ID Acceptance Filter Mask Register, offset: 0x4A */
  __I  uint16_t NMVR[FR_NMVR_COUNT];               /**< Network Management Vector Register, array offset: 0x4C, array step: 0x2 */
  __IO uint16_t NMVLR;                             /**< Network Management Vector Length Register, offset: 0x58 */
  __IO uint16_t TICCR;                             /**< Timer Configuration and Control Register, offset: 0x5A */
  __IO uint16_t TI1CYSR;                           /**< Timer 1 Cycle Set Register, offset: 0x5C */
  __IO uint16_t TI1MTOR;                           /**< Timer 1 Macrotick Offset Register, offset: 0x5E */
  union {                                          /* offset: 0x60 */
    __IO uint16_t ABS;                               /**< Timer 2 Configuration Register 0 (Absolute Timer Configuration), offset: 0x60 */
    __IO uint16_t REL;                               /**< Timer 2 Configuration Register 0 (Relative Timer Configuration), offset: 0x60 */
  } TI2CR0;
  union {                                          /* offset: 0x62 */
    __IO uint16_t ABS;                               /**< Timer 2 Configuration Register 1 (Absolute Timer Configuration), offset: 0x62 */
    __IO uint16_t REL;                               /**< Timer 2 Configuration Register 1 (Relative Timer Configuration), offset: 0x62 */
  } TI2CR1;
  __IO uint16_t SSSR;                              /**< Slot Status Selection Register, offset: 0x64 */
  __IO uint16_t SSCCR;                             /**< Slot Status Counter Condition Register, offset: 0x66 */
  __I  uint16_t SSR[FR_SSR_COUNT];                 /**< Slot Status Register, array offset: 0x68, array step: 0x2 */
  __I  uint16_t SSCR[FR_SSCR_COUNT];               /**< Slot Status Counter Register, array offset: 0x78, array step: 0x2 */
  __IO uint16_t MTSACFR;                           /**< MTS A Configuration Register, offset: 0x80 */
  __IO uint16_t MTSBCFR;                           /**< MTS B Configuration Register, offset: 0x82 */
  __IO uint16_t RSBIR;                             /**< Receive Shadow Buffer Index Register, offset: 0x84 */
  __IO uint16_t RFWMSR;                            /**< Receive FIFO Watermark and Selection Register, offset: 0x86 */
  __IO uint16_t RFSIR;                             /**< Receive FIFO Start Index Register, offset: 0x88 */
  __IO uint16_t RFDSR;                             /**< Receive FIFO Depth and Size Register, offset: 0x8A */
  __I  uint16_t RFARIR;                            /**< Receive FIFO A Read Index Register, offset: 0x8C */
  __I  uint16_t RFBRIR;                            /**< Receive FIFO B Read Index Register, offset: 0x8E */
  __IO uint16_t RFMIDAFVR;                         /**< Receive FIFO Message ID Acceptance Filter Value Register, offset: 0x90 */
  __IO uint16_t RFMIDAFMR;                         /**< Receive FIFO Message ID Acceptance Filter Mask Register, offset: 0x92 */
  __IO uint16_t RFFIDRFVR;                         /**< Receive FIFO Frame ID Rejection Filter Value Register, offset: 0x94 */
  __IO uint16_t RFFIDRFMR;                         /**< Receive FIFO Frame ID Rejection Filter Mask Register, offset: 0x96 */
  __IO uint16_t RFRFCFR;                           /**< Receive FIFO Range Filter Configuration Register, offset: 0x98 */
  __IO uint16_t RFRFCTR;                           /**< Receive FIFO Range Filter Control Register, offset: 0x9A */
  __I  uint16_t LDTXSLAR;                          /**< Last Dynamic Transmit Slot Channel A Register, offset: 0x9C */
  __I  uint16_t LDTXSLBR;                          /**< Last Dynamic Transmit Slot Channel B Register, offset: 0x9E */
  __IO uint16_t PCR0;                              /**< Protocol Configuration Register 0, offset: 0xA0 */
  __IO uint16_t PCR1;                              /**< Protocol Configuration Register 1, offset: 0xA2 */
  __IO uint16_t PCR2;                              /**< Protocol Configuration Register 2, offset: 0xA4 */
  __IO uint16_t PCR3;                              /**< Protocol Configuration Register 3, offset: 0xA6 */
  __IO uint16_t PCR4;                              /**< Protocol Configuration Register 4, offset: 0xA8 */
  __IO uint16_t PCR5;                              /**< Protocol Configuration Register 5, offset: 0xAA */
  __IO uint16_t PCR6;                              /**< Protocol Configuration Register 6, offset: 0xAC */
  __IO uint16_t PCR7;                              /**< Protocol Configuration Register 7, offset: 0xAE */
  __IO uint16_t PCR8;                              /**< Protocol Configuration Register 8, offset: 0xB0 */
  __IO uint16_t PCR9;                              /**< Protocol Configuration Register 9, offset: 0xB2 */
  __IO uint16_t PCR10;                             /**< Protocol Configuration Register 10, offset: 0xB4 */
  __IO uint16_t PCR11;                             /**< Protocol Configuration Register 11, offset: 0xB6 */
  __IO uint16_t PCR12;                             /**< Protocol Configuration Register 12, offset: 0xB8 */
  __IO uint16_t PCR13;                             /**< Protocol Configuration Register 13, offset: 0xBA */
  __IO uint16_t PCR14;                             /**< Protocol Configuration Register 14, offset: 0xBC */
  __IO uint16_t PCR15;                             /**< Protocol Configuration Register 15, offset: 0xBE */
  __IO uint16_t PCR16;                             /**< Protocol Configuration Register 16, offset: 0xC0 */
  __IO uint16_t PCR17;                             /**< Protocol Configuration Register 17, offset: 0xC2 */
  __IO uint16_t PCR18;                             /**< Protocol Configuration Register 18, offset: 0xC4 */
  __IO uint16_t PCR19;                             /**< Protocol Configuration Register 19, offset: 0xC6 */
  __IO uint16_t PCR20;                             /**< Protocol Configuration Register 20, offset: 0xC8 */
  __IO uint16_t PCR21;                             /**< Protocol Configuration Register 21, offset: 0xCA */
  __IO uint16_t PCR22;                             /**< Protocol Configuration Register 22, offset: 0xCC */
  __IO uint16_t PCR23;                             /**< Protocol Configuration Register 23, offset: 0xCE */
  __IO uint16_t PCR24;                             /**< Protocol Configuration Register 24, offset: 0xD0 */
  __IO uint16_t PCR25;                             /**< Protocol Configuration Register 25, offset: 0xD2 */
  __IO uint16_t PCR26;                             /**< Protocol Configuration Register 26, offset: 0xD4 */
  __IO uint16_t PCR27;                             /**< Protocol Configuration Register 27, offset: 0xD6 */
  __IO uint16_t PCR28;                             /**< Protocol Configuration Register 28, offset: 0xD8 */
  __IO uint16_t PCR29;                             /**< Protocol Configuration Register 29, offset: 0xDA */
  __IO uint16_t PCR30;                             /**< Protocol Configuration Register 30, offset: 0xDC */
  __I  uint16_t STPWHR;                            /**< StopWatch Count High Register, offset: 0xDE */
  __I  uint16_t STPWLR;                            /**< Stop Watch Count Low Register, offset: 0xE0 */
  __IO uint16_t PEOER;                             /**< Protocol Event Output Enable and StopWatch Control Register, offset: 0xE2 */
  uint8_t RESERVED_1[2];
  __IO uint16_t RFSDOR;                            /**< Receive FIFO Start Data Offset Register, offset: 0xE6 */
  __IO uint16_t RFSYMBADHR;                        /**< Receive FIFO System Memory Base Address High Register, offset: 0xE8 */
  __IO uint16_t RFSYMBADLR;                        /**< Receive FIFO System Memory Base Address Low Register, offset: 0xEA */
  __IO uint16_t RFPTR;                             /**< Receive FIFO Periodic Timer Register, offset: 0xEC */
  __IO uint16_t RFFLPCR;                           /**< Receive FIFO Fill Level and POP Count Register, offset: 0xEE */
  __IO uint16_t EEIFER;                            /**< ECC Error Interrupt Flag and Enable Register, offset: 0xF0 */
  __IO uint16_t EERICR;                            /**< ECC Error Report and Injection Control Register, offset: 0xF2 */
  __I  uint16_t EERAR;                             /**< ECC Error Report Address Register, offset: 0xF4 */
  __I  uint16_t EERDR;                             /**< ECC Error Report Data Register, offset: 0xF6 */
  __I  uint16_t EERCR;                             /**< ECC Error Report Code Register, offset: 0xF8 */
  __IO uint16_t EEIAR;                             /**< ECC Error Injection Address Register, offset: 0xFA */
  __IO uint16_t EEIDR;                             /**< ECC Error Injection Data Register, offset: 0xFC */
  __IO uint16_t EEICR;                             /**< ECC Error Injection Code Register, offset: 0xFE */
  uint8_t RESERVED_2[1792];
  struct {                                         /* offset: 0x800, array step: 0x8 */
    __IO uint16_t CCSR;                              /**< Message Buffer Configuration Control Status Register, array offset: 0x800, array step: 0x8 */
    __IO uint16_t CCFR;                              /**< Message Buffer Cycle Counter Filter Register, array offset: 0x802, array step: 0x8 */
    __IO uint16_t FIDR;                              /**< Message Buffer Frame ID Register, array offset: 0x804, array step: 0x8 */
    __IO uint16_t IDXR;                              /**< Message Buffer Index Register, array offset: 0x806, array step: 0x8 */
  } MB[FR_MB_COUNT];
  __IO uint16_t MBDOR[FR_MBDOR_COUNT];             /**< Message Buffer Data Field Offset Register, array offset: 0x1000, array step: 0x2 */
  uint8_t RESERVED_3[8];
  __IO uint16_t LEETR[FR_LEETR_COUNT];             /**< LRAM ECC Error Test Register, array offset: 0x1108, array step: 0x2 */
} FR_Type, *FR_MemMapPtr;

/** Number of instances of the FR module. */
#define FR_INSTANCE_COUNT                        (1u)

/* FLEXRAY - Peripheral instance base addresses */
/** Peripheral FR base address */
#define FR_BASE                                  (0x402F8000u)
/** Peripheral FR base pointer */
#define FR_FLEXRAY                               ((FR_Type *)FR_BASE)
/** Array initializer of FLEXRAY peripheral base addresses */
#define FR_BASE_ADDRS                            { FR_BASE }
/** Array initializer of FLEXRAY peripheral base pointers */
#define FR_BASE_PTRS                             { FR_FLEXRAY }

/* ----------------------------------------------------------------------------
   -- FLEXRAY Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup FR_Register_Masks FLEXRAY Register Masks
 * @{
 */

/*! @name MVR - Module Version Register */
/*! @{ */
#define FR_MVR_PEVER_MASK                        (0xFFU)
#define FR_MVR_PEVER_SHIFT                       (0U)
#define FR_MVR_PEVER_WIDTH                       (8U)
#define FR_MVR_PEVER(x)                          (((uint16_t)(((uint16_t)(x)) << FR_MVR_PEVER_SHIFT)) & FR_MVR_PEVER_MASK)
#define FR_MVR_CHIVER_MASK                       (0xFF00U)
#define FR_MVR_CHIVER_SHIFT                      (8U)
#define FR_MVR_CHIVER_WIDTH                      (8U)
#define FR_MVR_CHIVER(x)                         (((uint16_t)(((uint16_t)(x)) << FR_MVR_CHIVER_SHIFT)) & FR_MVR_CHIVER_MASK)
/*! @} */

/*! @name MCR - Module Configuration Register */
/*! @{ */
#define FR_MCR_BITRATE_MASK                      (0xEU)
#define FR_MCR_BITRATE_SHIFT                     (1U)
#define FR_MCR_BITRATE_WIDTH                     (3U)
#define FR_MCR_BITRATE(x)                        (((uint16_t)(((uint16_t)(x)) << FR_MCR_BITRATE_SHIFT)) & FR_MCR_BITRATE_MASK)
#define FR_MCR_FAM_MASK                          (0x40U)
#define FR_MCR_FAM_SHIFT                         (6U)
#define FR_MCR_FAM_WIDTH                         (1U)
#define FR_MCR_FAM(x)                            (((uint16_t)(((uint16_t)(x)) << FR_MCR_FAM_SHIFT)) & FR_MCR_FAM_MASK)
#define FR_MCR_FUM_MASK                          (0x80U)
#define FR_MCR_FUM_SHIFT                         (7U)
#define FR_MCR_FUM_WIDTH                         (1U)
#define FR_MCR_FUM(x)                            (((uint16_t)(((uint16_t)(x)) << FR_MCR_FUM_SHIFT)) & FR_MCR_FUM_MASK)
#define FR_MCR_ECCE_MASK                         (0x200U)
#define FR_MCR_ECCE_SHIFT                        (9U)
#define FR_MCR_ECCE_WIDTH                        (1U)
#define FR_MCR_ECCE(x)                           (((uint16_t)(((uint16_t)(x)) << FR_MCR_ECCE_SHIFT)) & FR_MCR_ECCE_MASK)
#define FR_MCR_SFFE_MASK                         (0x400U)
#define FR_MCR_SFFE_SHIFT                        (10U)
#define FR_MCR_SFFE_WIDTH                        (1U)
#define FR_MCR_SFFE(x)                           (((uint16_t)(((uint16_t)(x)) << FR_MCR_SFFE_SHIFT)) & FR_MCR_SFFE_MASK)
#define FR_MCR_CHA_MASK                          (0x800U)
#define FR_MCR_CHA_SHIFT                         (11U)
#define FR_MCR_CHA_WIDTH                         (1U)
#define FR_MCR_CHA(x)                            (((uint16_t)(((uint16_t)(x)) << FR_MCR_CHA_SHIFT)) & FR_MCR_CHA_MASK)
#define FR_MCR_CHB_MASK                          (0x1000U)
#define FR_MCR_CHB_SHIFT                         (12U)
#define FR_MCR_CHB_WIDTH                         (1U)
#define FR_MCR_CHB(x)                            (((uint16_t)(((uint16_t)(x)) << FR_MCR_CHB_SHIFT)) & FR_MCR_CHB_MASK)
#define FR_MCR_SCM_MASK                          (0x2000U)
#define FR_MCR_SCM_SHIFT                         (13U)
#define FR_MCR_SCM_WIDTH                         (1U)
#define FR_MCR_SCM(x)                            (((uint16_t)(((uint16_t)(x)) << FR_MCR_SCM_SHIFT)) & FR_MCR_SCM_MASK)
#define FR_MCR_SBFF_MASK                         (0x4000U)
#define FR_MCR_SBFF_SHIFT                        (14U)
#define FR_MCR_SBFF_WIDTH                        (1U)
#define FR_MCR_SBFF(x)                           (((uint16_t)(((uint16_t)(x)) << FR_MCR_SBFF_SHIFT)) & FR_MCR_SBFF_MASK)
#define FR_MCR_MEN_MASK                          (0x8000U)
#define FR_MCR_MEN_SHIFT                         (15U)
#define FR_MCR_MEN_WIDTH                         (1U)
#define FR_MCR_MEN(x)                            (((uint16_t)(((uint16_t)(x)) << FR_MCR_MEN_SHIFT)) & FR_MCR_MEN_MASK)
/*! @} */

/*! @name SYMBADHR - System Memory Base Address High Register */
/*! @{ */
#define FR_SYMBADHR_SMBA_MASK                    (0xFFFFU)
#define FR_SYMBADHR_SMBA_SHIFT                   (0U)
#define FR_SYMBADHR_SMBA_WIDTH                   (16U)
#define FR_SYMBADHR_SMBA(x)                      (((uint16_t)(((uint16_t)(x)) << FR_SYMBADHR_SMBA_SHIFT)) & FR_SYMBADHR_SMBA_MASK)
/*! @} */

/*! @name SYMBADLR - System Memory Base Address Low Register */
/*! @{ */
#define FR_SYMBADLR_SMBA_MASK                    (0xFFF0U)
#define FR_SYMBADLR_SMBA_SHIFT                   (4U)
#define FR_SYMBADLR_SMBA_WIDTH                   (12U)
#define FR_SYMBADLR_SMBA(x)                      (((uint16_t)(((uint16_t)(x)) << FR_SYMBADLR_SMBA_SHIFT)) & FR_SYMBADLR_SMBA_MASK)
/*! @} */

/*! @name STBSCR - Strobe Signal Control Register */
/*! @{ */
#define FR_STBSCR_STBPSEL_MASK                   (0x3U)
#define FR_STBSCR_STBPSEL_SHIFT                  (0U)
#define FR_STBSCR_STBPSEL_WIDTH                  (2U)
#define FR_STBSCR_STBPSEL(x)                     (((uint16_t)(((uint16_t)(x)) << FR_STBSCR_STBPSEL_SHIFT)) & FR_STBSCR_STBPSEL_MASK)
#define FR_STBSCR_ENB_MASK                       (0x10U)
#define FR_STBSCR_ENB_SHIFT                      (4U)
#define FR_STBSCR_ENB_WIDTH                      (1U)
#define FR_STBSCR_ENB(x)                         (((uint16_t)(((uint16_t)(x)) << FR_STBSCR_ENB_SHIFT)) & FR_STBSCR_ENB_MASK)
#define FR_STBSCR_SEL_MASK                       (0xF00U)
#define FR_STBSCR_SEL_SHIFT                      (8U)
#define FR_STBSCR_SEL_WIDTH                      (4U)
#define FR_STBSCR_SEL(x)                         (((uint16_t)(((uint16_t)(x)) << FR_STBSCR_SEL_SHIFT)) & FR_STBSCR_SEL_MASK)
#define FR_STBSCR_WMD_MASK                       (0x8000U)
#define FR_STBSCR_WMD_SHIFT                      (15U)
#define FR_STBSCR_WMD_WIDTH                      (1U)
#define FR_STBSCR_WMD(x)                         (((uint16_t)(((uint16_t)(x)) << FR_STBSCR_WMD_SHIFT)) & FR_STBSCR_WMD_MASK)
/*! @} */

/*! @name MBDSR - Message Buffer Data Size Register */
/*! @{ */
#define FR_MBDSR_MBSEG1DS_MASK                   (0x7FU)
#define FR_MBDSR_MBSEG1DS_SHIFT                  (0U)
#define FR_MBDSR_MBSEG1DS_WIDTH                  (7U)
#define FR_MBDSR_MBSEG1DS(x)                     (((uint16_t)(((uint16_t)(x)) << FR_MBDSR_MBSEG1DS_SHIFT)) & FR_MBDSR_MBSEG1DS_MASK)
#define FR_MBDSR_MBSEG2DS_MASK                   (0x7F00U)
#define FR_MBDSR_MBSEG2DS_SHIFT                  (8U)
#define FR_MBDSR_MBSEG2DS_WIDTH                  (7U)
#define FR_MBDSR_MBSEG2DS(x)                     (((uint16_t)(((uint16_t)(x)) << FR_MBDSR_MBSEG2DS_SHIFT)) & FR_MBDSR_MBSEG2DS_MASK)
/*! @} */

/*! @name MBSSUTR - Message Buffer Segment Size and Utilization Register */
/*! @{ */
#define FR_MBSSUTR_LAST_MB_UTIL_MASK             (0xFFU)
#define FR_MBSSUTR_LAST_MB_UTIL_SHIFT            (0U)
#define FR_MBSSUTR_LAST_MB_UTIL_WIDTH            (8U)
#define FR_MBSSUTR_LAST_MB_UTIL(x)               (((uint16_t)(((uint16_t)(x)) << FR_MBSSUTR_LAST_MB_UTIL_SHIFT)) & FR_MBSSUTR_LAST_MB_UTIL_MASK)
#define FR_MBSSUTR_LAST_MB_SEG1_MASK             (0xFF00U)
#define FR_MBSSUTR_LAST_MB_SEG1_SHIFT            (8U)
#define FR_MBSSUTR_LAST_MB_SEG1_WIDTH            (8U)
#define FR_MBSSUTR_LAST_MB_SEG1(x)               (((uint16_t)(((uint16_t)(x)) << FR_MBSSUTR_LAST_MB_SEG1_SHIFT)) & FR_MBSSUTR_LAST_MB_SEG1_MASK)
/*! @} */

/*! @name PEDRAR - PE DRAM Access Register */
/*! @{ */
#define FR_PEDRAR_DAD_MASK                       (0x1U)
#define FR_PEDRAR_DAD_SHIFT                      (0U)
#define FR_PEDRAR_DAD_WIDTH                      (1U)
#define FR_PEDRAR_DAD(x)                         (((uint16_t)(((uint16_t)(x)) << FR_PEDRAR_DAD_SHIFT)) & FR_PEDRAR_DAD_MASK)
#define FR_PEDRAR_ADDR_MASK                      (0xFFEU)
#define FR_PEDRAR_ADDR_SHIFT                     (1U)
#define FR_PEDRAR_ADDR_WIDTH                     (11U)
#define FR_PEDRAR_ADDR(x)                        (((uint16_t)(((uint16_t)(x)) << FR_PEDRAR_ADDR_SHIFT)) & FR_PEDRAR_ADDR_MASK)
#define FR_PEDRAR_INST_MASK                      (0xF000U)
#define FR_PEDRAR_INST_SHIFT                     (12U)
#define FR_PEDRAR_INST_WIDTH                     (4U)
#define FR_PEDRAR_INST(x)                        (((uint16_t)(((uint16_t)(x)) << FR_PEDRAR_INST_SHIFT)) & FR_PEDRAR_INST_MASK)
/*! @} */

/*! @name PEDRDR - PE DRAM Data Register */
/*! @{ */
#define FR_PEDRDR_DATA_MASK                      (0xFFFFU)
#define FR_PEDRDR_DATA_SHIFT                     (0U)
#define FR_PEDRDR_DATA_WIDTH                     (16U)
#define FR_PEDRDR_DATA(x)                        (((uint16_t)(((uint16_t)(x)) << FR_PEDRDR_DATA_SHIFT)) & FR_PEDRDR_DATA_MASK)
/*! @} */

/*! @name POCR - Protocol Operation Control Register */
/*! @{ */
#define FR_POCR_POCCMD_MASK                      (0xFU)
#define FR_POCR_POCCMD_SHIFT                     (0U)
#define FR_POCR_POCCMD_WIDTH                     (4U)
#define FR_POCR_POCCMD(x)                        (((uint16_t)(((uint16_t)(x)) << FR_POCR_POCCMD_SHIFT)) & FR_POCR_POCCMD_MASK)
#define FR_POCR_BSY_WMC_MASK                     (0x80U)
#define FR_POCR_BSY_WMC_SHIFT                    (7U)
#define FR_POCR_BSY_WMC_WIDTH                    (1U)
#define FR_POCR_BSY_WMC(x)                       (((uint16_t)(((uint16_t)(x)) << FR_POCR_BSY_WMC_SHIFT)) & FR_POCR_BSY_WMC_MASK)
#define FR_POCR_ERC_AP_MASK                      (0x300U)
#define FR_POCR_ERC_AP_SHIFT                     (8U)
#define FR_POCR_ERC_AP_WIDTH                     (2U)
#define FR_POCR_ERC_AP(x)                        (((uint16_t)(((uint16_t)(x)) << FR_POCR_ERC_AP_SHIFT)) & FR_POCR_ERC_AP_MASK)
#define FR_POCR_EOC_AP_MASK                      (0xC00U)
#define FR_POCR_EOC_AP_SHIFT                     (10U)
#define FR_POCR_EOC_AP_WIDTH                     (2U)
#define FR_POCR_EOC_AP(x)                        (((uint16_t)(((uint16_t)(x)) << FR_POCR_EOC_AP_SHIFT)) & FR_POCR_EOC_AP_MASK)
#define FR_POCR_WME_MASK                         (0x8000U)
#define FR_POCR_WME_SHIFT                        (15U)
#define FR_POCR_WME_WIDTH                        (1U)
#define FR_POCR_WME(x)                           (((uint16_t)(((uint16_t)(x)) << FR_POCR_WME_SHIFT)) & FR_POCR_WME_MASK)
/*! @} */

/*! @name GIFER - Global Interrupt Flag and Enable Register */
/*! @{ */
#define FR_GIFER_TBIE_MASK                       (0x1U)
#define FR_GIFER_TBIE_SHIFT                      (0U)
#define FR_GIFER_TBIE_WIDTH                      (1U)
#define FR_GIFER_TBIE(x)                         (((uint16_t)(((uint16_t)(x)) << FR_GIFER_TBIE_SHIFT)) & FR_GIFER_TBIE_MASK)
#define FR_GIFER_RBIE_MASK                       (0x2U)
#define FR_GIFER_RBIE_SHIFT                      (1U)
#define FR_GIFER_RBIE_WIDTH                      (1U)
#define FR_GIFER_RBIE(x)                         (((uint16_t)(((uint16_t)(x)) << FR_GIFER_RBIE_SHIFT)) & FR_GIFER_RBIE_MASK)
#define FR_GIFER_FAFAIE_MASK                     (0x4U)
#define FR_GIFER_FAFAIE_SHIFT                    (2U)
#define FR_GIFER_FAFAIE_WIDTH                    (1U)
#define FR_GIFER_FAFAIE(x)                       (((uint16_t)(((uint16_t)(x)) << FR_GIFER_FAFAIE_SHIFT)) & FR_GIFER_FAFAIE_MASK)
#define FR_GIFER_FAFBIE_MASK                     (0x8U)
#define FR_GIFER_FAFBIE_SHIFT                    (3U)
#define FR_GIFER_FAFBIE_WIDTH                    (1U)
#define FR_GIFER_FAFBIE(x)                       (((uint16_t)(((uint16_t)(x)) << FR_GIFER_FAFBIE_SHIFT)) & FR_GIFER_FAFBIE_MASK)
#define FR_GIFER_WUPIE_MASK                      (0x10U)
#define FR_GIFER_WUPIE_SHIFT                     (4U)
#define FR_GIFER_WUPIE_WIDTH                     (1U)
#define FR_GIFER_WUPIE(x)                        (((uint16_t)(((uint16_t)(x)) << FR_GIFER_WUPIE_SHIFT)) & FR_GIFER_WUPIE_MASK)
#define FR_GIFER_CHIE_MASK                       (0x20U)
#define FR_GIFER_CHIE_SHIFT                      (5U)
#define FR_GIFER_CHIE_WIDTH                      (1U)
#define FR_GIFER_CHIE(x)                         (((uint16_t)(((uint16_t)(x)) << FR_GIFER_CHIE_SHIFT)) & FR_GIFER_CHIE_MASK)
#define FR_GIFER_PRIE_MASK                       (0x40U)
#define FR_GIFER_PRIE_SHIFT                      (6U)
#define FR_GIFER_PRIE_WIDTH                      (1U)
#define FR_GIFER_PRIE(x)                         (((uint16_t)(((uint16_t)(x)) << FR_GIFER_PRIE_SHIFT)) & FR_GIFER_PRIE_MASK)
#define FR_GIFER_MIE_MASK                        (0x80U)
#define FR_GIFER_MIE_SHIFT                       (7U)
#define FR_GIFER_MIE_WIDTH                       (1U)
#define FR_GIFER_MIE(x)                          (((uint16_t)(((uint16_t)(x)) << FR_GIFER_MIE_SHIFT)) & FR_GIFER_MIE_MASK)
#define FR_GIFER_TBIF_MASK                       (0x100U)
#define FR_GIFER_TBIF_SHIFT                      (8U)
#define FR_GIFER_TBIF_WIDTH                      (1U)
#define FR_GIFER_TBIF(x)                         (((uint16_t)(((uint16_t)(x)) << FR_GIFER_TBIF_SHIFT)) & FR_GIFER_TBIF_MASK)
#define FR_GIFER_RBIF_MASK                       (0x200U)
#define FR_GIFER_RBIF_SHIFT                      (9U)
#define FR_GIFER_RBIF_WIDTH                      (1U)
#define FR_GIFER_RBIF(x)                         (((uint16_t)(((uint16_t)(x)) << FR_GIFER_RBIF_SHIFT)) & FR_GIFER_RBIF_MASK)
#define FR_GIFER_FAFAIF_MASK                     (0x400U)
#define FR_GIFER_FAFAIF_SHIFT                    (10U)
#define FR_GIFER_FAFAIF_WIDTH                    (1U)
#define FR_GIFER_FAFAIF(x)                       (((uint16_t)(((uint16_t)(x)) << FR_GIFER_FAFAIF_SHIFT)) & FR_GIFER_FAFAIF_MASK)
#define FR_GIFER_FAFBIF_MASK                     (0x800U)
#define FR_GIFER_FAFBIF_SHIFT                    (11U)
#define FR_GIFER_FAFBIF_WIDTH                    (1U)
#define FR_GIFER_FAFBIF(x)                       (((uint16_t)(((uint16_t)(x)) << FR_GIFER_FAFBIF_SHIFT)) & FR_GIFER_FAFBIF_MASK)
#define FR_GIFER_WUPIF_MASK                      (0x1000U)
#define FR_GIFER_WUPIF_SHIFT                     (12U)
#define FR_GIFER_WUPIF_WIDTH                     (1U)
#define FR_GIFER_WUPIF(x)                        (((uint16_t)(((uint16_t)(x)) << FR_GIFER_WUPIF_SHIFT)) & FR_GIFER_WUPIF_MASK)
#define FR_GIFER_CHIF_MASK                       (0x2000U)
#define FR_GIFER_CHIF_SHIFT                      (13U)
#define FR_GIFER_CHIF_WIDTH                      (1U)
#define FR_GIFER_CHIF(x)                         (((uint16_t)(((uint16_t)(x)) << FR_GIFER_CHIF_SHIFT)) & FR_GIFER_CHIF_MASK)
#define FR_GIFER_PRIF_MASK                       (0x4000U)
#define FR_GIFER_PRIF_SHIFT                      (14U)
#define FR_GIFER_PRIF_WIDTH                      (1U)
#define FR_GIFER_PRIF(x)                         (((uint16_t)(((uint16_t)(x)) << FR_GIFER_PRIF_SHIFT)) & FR_GIFER_PRIF_MASK)
#define FR_GIFER_MIF_MASK                        (0x8000U)
#define FR_GIFER_MIF_SHIFT                       (15U)
#define FR_GIFER_MIF_WIDTH                       (1U)
#define FR_GIFER_MIF(x)                          (((uint16_t)(((uint16_t)(x)) << FR_GIFER_MIF_SHIFT)) & FR_GIFER_MIF_MASK)
/*! @} */

/*! @name PIFR0 - Protocol Interrupt Flag Register 0 */
/*! @{ */
#define FR_PIFR0_CYS_IF_MASK                     (0x1U)
#define FR_PIFR0_CYS_IF_SHIFT                    (0U)
#define FR_PIFR0_CYS_IF_WIDTH                    (1U)
#define FR_PIFR0_CYS_IF(x)                       (((uint16_t)(((uint16_t)(x)) << FR_PIFR0_CYS_IF_SHIFT)) & FR_PIFR0_CYS_IF_MASK)
#define FR_PIFR0_TI1_IF_MASK                     (0x2U)
#define FR_PIFR0_TI1_IF_SHIFT                    (1U)
#define FR_PIFR0_TI1_IF_WIDTH                    (1U)
#define FR_PIFR0_TI1_IF(x)                       (((uint16_t)(((uint16_t)(x)) << FR_PIFR0_TI1_IF_SHIFT)) & FR_PIFR0_TI1_IF_MASK)
#define FR_PIFR0_TI2_IF_MASK                     (0x4U)
#define FR_PIFR0_TI2_IF_SHIFT                    (2U)
#define FR_PIFR0_TI2_IF_WIDTH                    (1U)
#define FR_PIFR0_TI2_IF(x)                       (((uint16_t)(((uint16_t)(x)) << FR_PIFR0_TI2_IF_SHIFT)) & FR_PIFR0_TI2_IF_MASK)
#define FR_PIFR0_TBVA_IF_MASK                    (0x8U)
#define FR_PIFR0_TBVA_IF_SHIFT                   (3U)
#define FR_PIFR0_TBVA_IF_WIDTH                   (1U)
#define FR_PIFR0_TBVA_IF(x)                      (((uint16_t)(((uint16_t)(x)) << FR_PIFR0_TBVA_IF_SHIFT)) & FR_PIFR0_TBVA_IF_MASK)
#define FR_PIFR0_TBVB_IF_MASK                    (0x10U)
#define FR_PIFR0_TBVB_IF_SHIFT                   (4U)
#define FR_PIFR0_TBVB_IF_WIDTH                   (1U)
#define FR_PIFR0_TBVB_IF(x)                      (((uint16_t)(((uint16_t)(x)) << FR_PIFR0_TBVB_IF_SHIFT)) & FR_PIFR0_TBVB_IF_MASK)
#define FR_PIFR0_LTXA_IF_MASK                    (0x20U)
#define FR_PIFR0_LTXA_IF_SHIFT                   (5U)
#define FR_PIFR0_LTXA_IF_WIDTH                   (1U)
#define FR_PIFR0_LTXA_IF(x)                      (((uint16_t)(((uint16_t)(x)) << FR_PIFR0_LTXA_IF_SHIFT)) & FR_PIFR0_LTXA_IF_MASK)
#define FR_PIFR0_LTXB_IF_MASK                    (0x40U)
#define FR_PIFR0_LTXB_IF_SHIFT                   (6U)
#define FR_PIFR0_LTXB_IF_WIDTH                   (1U)
#define FR_PIFR0_LTXB_IF(x)                      (((uint16_t)(((uint16_t)(x)) << FR_PIFR0_LTXB_IF_SHIFT)) & FR_PIFR0_LTXB_IF_MASK)
#define FR_PIFR0_MTX_IF_MASK                     (0x80U)
#define FR_PIFR0_MTX_IF_SHIFT                    (7U)
#define FR_PIFR0_MTX_IF_WIDTH                    (1U)
#define FR_PIFR0_MTX_IF(x)                       (((uint16_t)(((uint16_t)(x)) << FR_PIFR0_MTX_IF_SHIFT)) & FR_PIFR0_MTX_IF_MASK)
#define FR_PIFR0_MXS_IF_MASK                     (0x100U)
#define FR_PIFR0_MXS_IF_SHIFT                    (8U)
#define FR_PIFR0_MXS_IF_WIDTH                    (1U)
#define FR_PIFR0_MXS_IF(x)                       (((uint16_t)(((uint16_t)(x)) << FR_PIFR0_MXS_IF_SHIFT)) & FR_PIFR0_MXS_IF_MASK)
#define FR_PIFR0_CCL_IF_MASK                     (0x200U)
#define FR_PIFR0_CCL_IF_SHIFT                    (9U)
#define FR_PIFR0_CCL_IF_WIDTH                    (1U)
#define FR_PIFR0_CCL_IF(x)                       (((uint16_t)(((uint16_t)(x)) << FR_PIFR0_CCL_IF_SHIFT)) & FR_PIFR0_CCL_IF_MASK)
#define FR_PIFR0_MOC_IF_MASK                     (0x400U)
#define FR_PIFR0_MOC_IF_SHIFT                    (10U)
#define FR_PIFR0_MOC_IF_WIDTH                    (1U)
#define FR_PIFR0_MOC_IF(x)                       (((uint16_t)(((uint16_t)(x)) << FR_PIFR0_MOC_IF_SHIFT)) & FR_PIFR0_MOC_IF_MASK)
#define FR_PIFR0_MRC_IF_MASK                     (0x800U)
#define FR_PIFR0_MRC_IF_SHIFT                    (11U)
#define FR_PIFR0_MRC_IF_WIDTH                    (1U)
#define FR_PIFR0_MRC_IF(x)                       (((uint16_t)(((uint16_t)(x)) << FR_PIFR0_MRC_IF_SHIFT)) & FR_PIFR0_MRC_IF_MASK)
#define FR_PIFR0_CSA_IF_MASK                     (0x1000U)
#define FR_PIFR0_CSA_IF_SHIFT                    (12U)
#define FR_PIFR0_CSA_IF_WIDTH                    (1U)
#define FR_PIFR0_CSA_IF(x)                       (((uint16_t)(((uint16_t)(x)) << FR_PIFR0_CSA_IF_SHIFT)) & FR_PIFR0_CSA_IF_MASK)
#define FR_PIFR0_ILCF_IF_MASK                    (0x2000U)
#define FR_PIFR0_ILCF_IF_SHIFT                   (13U)
#define FR_PIFR0_ILCF_IF_WIDTH                   (1U)
#define FR_PIFR0_ILCF_IF(x)                      (((uint16_t)(((uint16_t)(x)) << FR_PIFR0_ILCF_IF_SHIFT)) & FR_PIFR0_ILCF_IF_MASK)
#define FR_PIFR0_INTL_IF_MASK                    (0x4000U)
#define FR_PIFR0_INTL_IF_SHIFT                   (14U)
#define FR_PIFR0_INTL_IF_WIDTH                   (1U)
#define FR_PIFR0_INTL_IF(x)                      (((uint16_t)(((uint16_t)(x)) << FR_PIFR0_INTL_IF_SHIFT)) & FR_PIFR0_INTL_IF_MASK)
#define FR_PIFR0_FATL_IF_MASK                    (0x8000U)
#define FR_PIFR0_FATL_IF_SHIFT                   (15U)
#define FR_PIFR0_FATL_IF_WIDTH                   (1U)
#define FR_PIFR0_FATL_IF(x)                      (((uint16_t)(((uint16_t)(x)) << FR_PIFR0_FATL_IF_SHIFT)) & FR_PIFR0_FATL_IF_MASK)
/*! @} */

/*! @name PIFR1 - Protocol Interrupt Flag Register 1 */
/*! @{ */
#define FR_PIFR1_ODT_IF_MASK                     (0x10U)
#define FR_PIFR1_ODT_IF_SHIFT                    (4U)
#define FR_PIFR1_ODT_IF_WIDTH                    (1U)
#define FR_PIFR1_ODT_IF(x)                       (((uint16_t)(((uint16_t)(x)) << FR_PIFR1_ODT_IF_SHIFT)) & FR_PIFR1_ODT_IF_MASK)
#define FR_PIFR1_EVT_IF_MASK                     (0x20U)
#define FR_PIFR1_EVT_IF_SHIFT                    (5U)
#define FR_PIFR1_EVT_IF_WIDTH                    (1U)
#define FR_PIFR1_EVT_IF(x)                       (((uint16_t)(((uint16_t)(x)) << FR_PIFR1_EVT_IF_SHIFT)) & FR_PIFR1_EVT_IF_MASK)
#define FR_PIFR1_SSI0_IF_MASK                    (0x100U)
#define FR_PIFR1_SSI0_IF_SHIFT                   (8U)
#define FR_PIFR1_SSI0_IF_WIDTH                   (1U)
#define FR_PIFR1_SSI0_IF(x)                      (((uint16_t)(((uint16_t)(x)) << FR_PIFR1_SSI0_IF_SHIFT)) & FR_PIFR1_SSI0_IF_MASK)
#define FR_PIFR1_SSI1_IF_MASK                    (0x200U)
#define FR_PIFR1_SSI1_IF_SHIFT                   (9U)
#define FR_PIFR1_SSI1_IF_WIDTH                   (1U)
#define FR_PIFR1_SSI1_IF(x)                      (((uint16_t)(((uint16_t)(x)) << FR_PIFR1_SSI1_IF_SHIFT)) & FR_PIFR1_SSI1_IF_MASK)
#define FR_PIFR1_SSI2_IF_MASK                    (0x400U)
#define FR_PIFR1_SSI2_IF_SHIFT                   (10U)
#define FR_PIFR1_SSI2_IF_WIDTH                   (1U)
#define FR_PIFR1_SSI2_IF(x)                      (((uint16_t)(((uint16_t)(x)) << FR_PIFR1_SSI2_IF_SHIFT)) & FR_PIFR1_SSI2_IF_MASK)
#define FR_PIFR1_SSI3_IF_MASK                    (0x800U)
#define FR_PIFR1_SSI3_IF_SHIFT                   (11U)
#define FR_PIFR1_SSI3_IF_WIDTH                   (1U)
#define FR_PIFR1_SSI3_IF(x)                      (((uint16_t)(((uint16_t)(x)) << FR_PIFR1_SSI3_IF_SHIFT)) & FR_PIFR1_SSI3_IF_MASK)
#define FR_PIFR1_PSC_IF_MASK                     (0x1000U)
#define FR_PIFR1_PSC_IF_SHIFT                    (12U)
#define FR_PIFR1_PSC_IF_WIDTH                    (1U)
#define FR_PIFR1_PSC_IF(x)                       (((uint16_t)(((uint16_t)(x)) << FR_PIFR1_PSC_IF_SHIFT)) & FR_PIFR1_PSC_IF_MASK)
#define FR_PIFR1_PECF_IF_MASK                    (0x2000U)
#define FR_PIFR1_PECF_IF_SHIFT                   (13U)
#define FR_PIFR1_PECF_IF_WIDTH                   (1U)
#define FR_PIFR1_PECF_IF(x)                      (((uint16_t)(((uint16_t)(x)) << FR_PIFR1_PECF_IF_SHIFT)) & FR_PIFR1_PECF_IF_MASK)
#define FR_PIFR1_IPC_IF_MASK                     (0x4000U)
#define FR_PIFR1_IPC_IF_SHIFT                    (14U)
#define FR_PIFR1_IPC_IF_WIDTH                    (1U)
#define FR_PIFR1_IPC_IF(x)                       (((uint16_t)(((uint16_t)(x)) << FR_PIFR1_IPC_IF_SHIFT)) & FR_PIFR1_IPC_IF_MASK)
#define FR_PIFR1_EMC_IF_MASK                     (0x8000U)
#define FR_PIFR1_EMC_IF_SHIFT                    (15U)
#define FR_PIFR1_EMC_IF_WIDTH                    (1U)
#define FR_PIFR1_EMC_IF(x)                       (((uint16_t)(((uint16_t)(x)) << FR_PIFR1_EMC_IF_SHIFT)) & FR_PIFR1_EMC_IF_MASK)
/*! @} */

/*! @name PIER0 - Protocol Interrupt Enable Register 0 */
/*! @{ */
#define FR_PIER0_CYS_IE_MASK                     (0x1U)
#define FR_PIER0_CYS_IE_SHIFT                    (0U)
#define FR_PIER0_CYS_IE_WIDTH                    (1U)
#define FR_PIER0_CYS_IE(x)                       (((uint16_t)(((uint16_t)(x)) << FR_PIER0_CYS_IE_SHIFT)) & FR_PIER0_CYS_IE_MASK)
#define FR_PIER0_TI1_IE_MASK                     (0x2U)
#define FR_PIER0_TI1_IE_SHIFT                    (1U)
#define FR_PIER0_TI1_IE_WIDTH                    (1U)
#define FR_PIER0_TI1_IE(x)                       (((uint16_t)(((uint16_t)(x)) << FR_PIER0_TI1_IE_SHIFT)) & FR_PIER0_TI1_IE_MASK)
#define FR_PIER0_TI2_IE_MASK                     (0x4U)
#define FR_PIER0_TI2_IE_SHIFT                    (2U)
#define FR_PIER0_TI2_IE_WIDTH                    (1U)
#define FR_PIER0_TI2_IE(x)                       (((uint16_t)(((uint16_t)(x)) << FR_PIER0_TI2_IE_SHIFT)) & FR_PIER0_TI2_IE_MASK)
#define FR_PIER0_TBVA_IE_MASK                    (0x8U)
#define FR_PIER0_TBVA_IE_SHIFT                   (3U)
#define FR_PIER0_TBVA_IE_WIDTH                   (1U)
#define FR_PIER0_TBVA_IE(x)                      (((uint16_t)(((uint16_t)(x)) << FR_PIER0_TBVA_IE_SHIFT)) & FR_PIER0_TBVA_IE_MASK)
#define FR_PIER0_TBVB_IE_MASK                    (0x10U)
#define FR_PIER0_TBVB_IE_SHIFT                   (4U)
#define FR_PIER0_TBVB_IE_WIDTH                   (1U)
#define FR_PIER0_TBVB_IE(x)                      (((uint16_t)(((uint16_t)(x)) << FR_PIER0_TBVB_IE_SHIFT)) & FR_PIER0_TBVB_IE_MASK)
#define FR_PIER0_LTXA_IE_MASK                    (0x20U)
#define FR_PIER0_LTXA_IE_SHIFT                   (5U)
#define FR_PIER0_LTXA_IE_WIDTH                   (1U)
#define FR_PIER0_LTXA_IE(x)                      (((uint16_t)(((uint16_t)(x)) << FR_PIER0_LTXA_IE_SHIFT)) & FR_PIER0_LTXA_IE_MASK)
#define FR_PIER0_LTXB_IE_MASK                    (0x40U)
#define FR_PIER0_LTXB_IE_SHIFT                   (6U)
#define FR_PIER0_LTXB_IE_WIDTH                   (1U)
#define FR_PIER0_LTXB_IE(x)                      (((uint16_t)(((uint16_t)(x)) << FR_PIER0_LTXB_IE_SHIFT)) & FR_PIER0_LTXB_IE_MASK)
#define FR_PIER0_MTX_IE_MASK                     (0x80U)
#define FR_PIER0_MTX_IE_SHIFT                    (7U)
#define FR_PIER0_MTX_IE_WIDTH                    (1U)
#define FR_PIER0_MTX_IE(x)                       (((uint16_t)(((uint16_t)(x)) << FR_PIER0_MTX_IE_SHIFT)) & FR_PIER0_MTX_IE_MASK)
#define FR_PIER0_MXS_IE_MASK                     (0x100U)
#define FR_PIER0_MXS_IE_SHIFT                    (8U)
#define FR_PIER0_MXS_IE_WIDTH                    (1U)
#define FR_PIER0_MXS_IE(x)                       (((uint16_t)(((uint16_t)(x)) << FR_PIER0_MXS_IE_SHIFT)) & FR_PIER0_MXS_IE_MASK)
#define FR_PIER0_CCL_IE_MASK                     (0x200U)
#define FR_PIER0_CCL_IE_SHIFT                    (9U)
#define FR_PIER0_CCL_IE_WIDTH                    (1U)
#define FR_PIER0_CCL_IE(x)                       (((uint16_t)(((uint16_t)(x)) << FR_PIER0_CCL_IE_SHIFT)) & FR_PIER0_CCL_IE_MASK)
#define FR_PIER0_MOC_IE_MASK                     (0x400U)
#define FR_PIER0_MOC_IE_SHIFT                    (10U)
#define FR_PIER0_MOC_IE_WIDTH                    (1U)
#define FR_PIER0_MOC_IE(x)                       (((uint16_t)(((uint16_t)(x)) << FR_PIER0_MOC_IE_SHIFT)) & FR_PIER0_MOC_IE_MASK)
#define FR_PIER0_MRC_IE_MASK                     (0x800U)
#define FR_PIER0_MRC_IE_SHIFT                    (11U)
#define FR_PIER0_MRC_IE_WIDTH                    (1U)
#define FR_PIER0_MRC_IE(x)                       (((uint16_t)(((uint16_t)(x)) << FR_PIER0_MRC_IE_SHIFT)) & FR_PIER0_MRC_IE_MASK)
#define FR_PIER0_CSA_IE_MASK                     (0x1000U)
#define FR_PIER0_CSA_IE_SHIFT                    (12U)
#define FR_PIER0_CSA_IE_WIDTH                    (1U)
#define FR_PIER0_CSA_IE(x)                       (((uint16_t)(((uint16_t)(x)) << FR_PIER0_CSA_IE_SHIFT)) & FR_PIER0_CSA_IE_MASK)
#define FR_PIER0_ILCF_IE_MASK                    (0x2000U)
#define FR_PIER0_ILCF_IE_SHIFT                   (13U)
#define FR_PIER0_ILCF_IE_WIDTH                   (1U)
#define FR_PIER0_ILCF_IE(x)                      (((uint16_t)(((uint16_t)(x)) << FR_PIER0_ILCF_IE_SHIFT)) & FR_PIER0_ILCF_IE_MASK)
#define FR_PIER0_INTL_IE_MASK                    (0x4000U)
#define FR_PIER0_INTL_IE_SHIFT                   (14U)
#define FR_PIER0_INTL_IE_WIDTH                   (1U)
#define FR_PIER0_INTL_IE(x)                      (((uint16_t)(((uint16_t)(x)) << FR_PIER0_INTL_IE_SHIFT)) & FR_PIER0_INTL_IE_MASK)
#define FR_PIER0_FATL_IE_MASK                    (0x8000U)
#define FR_PIER0_FATL_IE_SHIFT                   (15U)
#define FR_PIER0_FATL_IE_WIDTH                   (1U)
#define FR_PIER0_FATL_IE(x)                      (((uint16_t)(((uint16_t)(x)) << FR_PIER0_FATL_IE_SHIFT)) & FR_PIER0_FATL_IE_MASK)
/*! @} */

/*! @name PIER1 - Protocol Interrupt Enable Register 1 */
/*! @{ */
#define FR_PIER1_ODT_IE_MASK                     (0x10U)
#define FR_PIER1_ODT_IE_SHIFT                    (4U)
#define FR_PIER1_ODT_IE_WIDTH                    (1U)
#define FR_PIER1_ODT_IE(x)                       (((uint16_t)(((uint16_t)(x)) << FR_PIER1_ODT_IE_SHIFT)) & FR_PIER1_ODT_IE_MASK)
#define FR_PIER1_EVT_IE_MASK                     (0x20U)
#define FR_PIER1_EVT_IE_SHIFT                    (5U)
#define FR_PIER1_EVT_IE_WIDTH                    (1U)
#define FR_PIER1_EVT_IE(x)                       (((uint16_t)(((uint16_t)(x)) << FR_PIER1_EVT_IE_SHIFT)) & FR_PIER1_EVT_IE_MASK)
#define FR_PIER1_SSI0_IE_MASK                    (0x100U)
#define FR_PIER1_SSI0_IE_SHIFT                   (8U)
#define FR_PIER1_SSI0_IE_WIDTH                   (1U)
#define FR_PIER1_SSI0_IE(x)                      (((uint16_t)(((uint16_t)(x)) << FR_PIER1_SSI0_IE_SHIFT)) & FR_PIER1_SSI0_IE_MASK)
#define FR_PIER1_SSI1_IE_MASK                    (0x200U)
#define FR_PIER1_SSI1_IE_SHIFT                   (9U)
#define FR_PIER1_SSI1_IE_WIDTH                   (1U)
#define FR_PIER1_SSI1_IE(x)                      (((uint16_t)(((uint16_t)(x)) << FR_PIER1_SSI1_IE_SHIFT)) & FR_PIER1_SSI1_IE_MASK)
#define FR_PIER1_SSI2_IE_MASK                    (0x400U)
#define FR_PIER1_SSI2_IE_SHIFT                   (10U)
#define FR_PIER1_SSI2_IE_WIDTH                   (1U)
#define FR_PIER1_SSI2_IE(x)                      (((uint16_t)(((uint16_t)(x)) << FR_PIER1_SSI2_IE_SHIFT)) & FR_PIER1_SSI2_IE_MASK)
#define FR_PIER1_SSI3_IE_MASK                    (0x800U)
#define FR_PIER1_SSI3_IE_SHIFT                   (11U)
#define FR_PIER1_SSI3_IE_WIDTH                   (1U)
#define FR_PIER1_SSI3_IE(x)                      (((uint16_t)(((uint16_t)(x)) << FR_PIER1_SSI3_IE_SHIFT)) & FR_PIER1_SSI3_IE_MASK)
#define FR_PIER1_PSC_IE_MASK                     (0x1000U)
#define FR_PIER1_PSC_IE_SHIFT                    (12U)
#define FR_PIER1_PSC_IE_WIDTH                    (1U)
#define FR_PIER1_PSC_IE(x)                       (((uint16_t)(((uint16_t)(x)) << FR_PIER1_PSC_IE_SHIFT)) & FR_PIER1_PSC_IE_MASK)
#define FR_PIER1_PECF_IE_MASK                    (0x2000U)
#define FR_PIER1_PECF_IE_SHIFT                   (13U)
#define FR_PIER1_PECF_IE_WIDTH                   (1U)
#define FR_PIER1_PECF_IE(x)                      (((uint16_t)(((uint16_t)(x)) << FR_PIER1_PECF_IE_SHIFT)) & FR_PIER1_PECF_IE_MASK)
#define FR_PIER1_IPC_IE_MASK                     (0x4000U)
#define FR_PIER1_IPC_IE_SHIFT                    (14U)
#define FR_PIER1_IPC_IE_WIDTH                    (1U)
#define FR_PIER1_IPC_IE(x)                       (((uint16_t)(((uint16_t)(x)) << FR_PIER1_IPC_IE_SHIFT)) & FR_PIER1_IPC_IE_MASK)
#define FR_PIER1_EMC_IE_MASK                     (0x8000U)
#define FR_PIER1_EMC_IE_SHIFT                    (15U)
#define FR_PIER1_EMC_IE_WIDTH                    (1U)
#define FR_PIER1_EMC_IE(x)                       (((uint16_t)(((uint16_t)(x)) << FR_PIER1_EMC_IE_SHIFT)) & FR_PIER1_EMC_IE_MASK)
/*! @} */

/*! @name CHIERFR - CHI Error Flag Register */
/*! @{ */
#define FR_CHIERFR_ILSA_EF_MASK                  (0x1U)
#define FR_CHIERFR_ILSA_EF_SHIFT                 (0U)
#define FR_CHIERFR_ILSA_EF_WIDTH                 (1U)
#define FR_CHIERFR_ILSA_EF(x)                    (((uint16_t)(((uint16_t)(x)) << FR_CHIERFR_ILSA_EF_SHIFT)) & FR_CHIERFR_ILSA_EF_MASK)
#define FR_CHIERFR_NMF_EF_MASK                   (0x2U)
#define FR_CHIERFR_NMF_EF_SHIFT                  (1U)
#define FR_CHIERFR_NMF_EF_WIDTH                  (1U)
#define FR_CHIERFR_NMF_EF(x)                     (((uint16_t)(((uint16_t)(x)) << FR_CHIERFR_NMF_EF_SHIFT)) & FR_CHIERFR_NMF_EF_MASK)
#define FR_CHIERFR_NML_EF_MASK                   (0x4U)
#define FR_CHIERFR_NML_EF_SHIFT                  (2U)
#define FR_CHIERFR_NML_EF_WIDTH                  (1U)
#define FR_CHIERFR_NML_EF(x)                     (((uint16_t)(((uint16_t)(x)) << FR_CHIERFR_NML_EF_SHIFT)) & FR_CHIERFR_NML_EF_MASK)
#define FR_CHIERFR_SPL_EF_MASK                   (0x8U)
#define FR_CHIERFR_SPL_EF_SHIFT                  (3U)
#define FR_CHIERFR_SPL_EF_WIDTH                  (1U)
#define FR_CHIERFR_SPL_EF(x)                     (((uint16_t)(((uint16_t)(x)) << FR_CHIERFR_SPL_EF_SHIFT)) & FR_CHIERFR_SPL_EF_MASK)
#define FR_CHIERFR_DPL_EF_MASK                   (0x10U)
#define FR_CHIERFR_DPL_EF_SHIFT                  (4U)
#define FR_CHIERFR_DPL_EF_WIDTH                  (1U)
#define FR_CHIERFR_DPL_EF(x)                     (((uint16_t)(((uint16_t)(x)) << FR_CHIERFR_DPL_EF_SHIFT)) & FR_CHIERFR_DPL_EF_MASK)
#define FR_CHIERFR_FID_EF_MASK                   (0x20U)
#define FR_CHIERFR_FID_EF_SHIFT                  (5U)
#define FR_CHIERFR_FID_EF_WIDTH                  (1U)
#define FR_CHIERFR_FID_EF(x)                     (((uint16_t)(((uint16_t)(x)) << FR_CHIERFR_FID_EF_SHIFT)) & FR_CHIERFR_FID_EF_MASK)
#define FR_CHIERFR_SBCF_EF_MASK                  (0x40U)
#define FR_CHIERFR_SBCF_EF_SHIFT                 (6U)
#define FR_CHIERFR_SBCF_EF_WIDTH                 (1U)
#define FR_CHIERFR_SBCF_EF(x)                    (((uint16_t)(((uint16_t)(x)) << FR_CHIERFR_SBCF_EF_SHIFT)) & FR_CHIERFR_SBCF_EF_MASK)
#define FR_CHIERFR_LCK_EF_MASK                   (0x100U)
#define FR_CHIERFR_LCK_EF_SHIFT                  (8U)
#define FR_CHIERFR_LCK_EF_WIDTH                  (1U)
#define FR_CHIERFR_LCK_EF(x)                     (((uint16_t)(((uint16_t)(x)) << FR_CHIERFR_LCK_EF_SHIFT)) & FR_CHIERFR_LCK_EF_MASK)
#define FR_CHIERFR_MBU_EF_MASK                   (0x200U)
#define FR_CHIERFR_MBU_EF_SHIFT                  (9U)
#define FR_CHIERFR_MBU_EF_WIDTH                  (1U)
#define FR_CHIERFR_MBU_EF(x)                     (((uint16_t)(((uint16_t)(x)) << FR_CHIERFR_MBU_EF_SHIFT)) & FR_CHIERFR_MBU_EF_MASK)
#define FR_CHIERFR_MBS_EF_MASK                   (0x400U)
#define FR_CHIERFR_MBS_EF_SHIFT                  (10U)
#define FR_CHIERFR_MBS_EF_WIDTH                  (1U)
#define FR_CHIERFR_MBS_EF(x)                     (((uint16_t)(((uint16_t)(x)) << FR_CHIERFR_MBS_EF_SHIFT)) & FR_CHIERFR_MBS_EF_MASK)
#define FR_CHIERFR_FOVA_EF_MASK                  (0x800U)
#define FR_CHIERFR_FOVA_EF_SHIFT                 (11U)
#define FR_CHIERFR_FOVA_EF_WIDTH                 (1U)
#define FR_CHIERFR_FOVA_EF(x)                    (((uint16_t)(((uint16_t)(x)) << FR_CHIERFR_FOVA_EF_SHIFT)) & FR_CHIERFR_FOVA_EF_MASK)
#define FR_CHIERFR_FOVB_EF_MASK                  (0x1000U)
#define FR_CHIERFR_FOVB_EF_SHIFT                 (12U)
#define FR_CHIERFR_FOVB_EF_WIDTH                 (1U)
#define FR_CHIERFR_FOVB_EF(x)                    (((uint16_t)(((uint16_t)(x)) << FR_CHIERFR_FOVB_EF_SHIFT)) & FR_CHIERFR_FOVB_EF_MASK)
#define FR_CHIERFR_PCMI_EF_MASK                  (0x2000U)
#define FR_CHIERFR_PCMI_EF_SHIFT                 (13U)
#define FR_CHIERFR_PCMI_EF_WIDTH                 (1U)
#define FR_CHIERFR_PCMI_EF(x)                    (((uint16_t)(((uint16_t)(x)) << FR_CHIERFR_PCMI_EF_SHIFT)) & FR_CHIERFR_PCMI_EF_MASK)
#define FR_CHIERFR_FRLA_EF_MASK                  (0x4000U)
#define FR_CHIERFR_FRLA_EF_SHIFT                 (14U)
#define FR_CHIERFR_FRLA_EF_WIDTH                 (1U)
#define FR_CHIERFR_FRLA_EF(x)                    (((uint16_t)(((uint16_t)(x)) << FR_CHIERFR_FRLA_EF_SHIFT)) & FR_CHIERFR_FRLA_EF_MASK)
#define FR_CHIERFR_FRLB_EF_MASK                  (0x8000U)
#define FR_CHIERFR_FRLB_EF_SHIFT                 (15U)
#define FR_CHIERFR_FRLB_EF_WIDTH                 (1U)
#define FR_CHIERFR_FRLB_EF(x)                    (((uint16_t)(((uint16_t)(x)) << FR_CHIERFR_FRLB_EF_SHIFT)) & FR_CHIERFR_FRLB_EF_MASK)
/*! @} */

/*! @name MBIVEC - Message Buffer Interrupt Vector Register */
/*! @{ */
#define FR_MBIVEC_RBIVEC_MASK                    (0xFFU)
#define FR_MBIVEC_RBIVEC_SHIFT                   (0U)
#define FR_MBIVEC_RBIVEC_WIDTH                   (8U)
#define FR_MBIVEC_RBIVEC(x)                      (((uint16_t)(((uint16_t)(x)) << FR_MBIVEC_RBIVEC_SHIFT)) & FR_MBIVEC_RBIVEC_MASK)
#define FR_MBIVEC_TBIVEC_MASK                    (0xFF00U)
#define FR_MBIVEC_TBIVEC_SHIFT                   (8U)
#define FR_MBIVEC_TBIVEC_WIDTH                   (8U)
#define FR_MBIVEC_TBIVEC(x)                      (((uint16_t)(((uint16_t)(x)) << FR_MBIVEC_TBIVEC_SHIFT)) & FR_MBIVEC_TBIVEC_MASK)
/*! @} */

/*! @name CASERCR - Channel A Status Error Counter Register */
/*! @{ */
#define FR_CASERCR_CHAERSCNT_MASK                (0xFFFFU)
#define FR_CASERCR_CHAERSCNT_SHIFT               (0U)
#define FR_CASERCR_CHAERSCNT_WIDTH               (16U)
#define FR_CASERCR_CHAERSCNT(x)                  (((uint16_t)(((uint16_t)(x)) << FR_CASERCR_CHAERSCNT_SHIFT)) & FR_CASERCR_CHAERSCNT_MASK)
/*! @} */

/*! @name CBSERCR - Channel B Status Error Counter Register */
/*! @{ */
#define FR_CBSERCR_CHBERSCNT_MASK                (0xFFFFU)
#define FR_CBSERCR_CHBERSCNT_SHIFT               (0U)
#define FR_CBSERCR_CHBERSCNT_WIDTH               (16U)
#define FR_CBSERCR_CHBERSCNT(x)                  (((uint16_t)(((uint16_t)(x)) << FR_CBSERCR_CHBERSCNT_SHIFT)) & FR_CBSERCR_CHBERSCNT_MASK)
/*! @} */

/*! @name PSR0 - Protocol Status Register 0 */
/*! @{ */
#define FR_PSR0_WAKEUPSTATUS_MASK                (0x7U)
#define FR_PSR0_WAKEUPSTATUS_SHIFT               (0U)
#define FR_PSR0_WAKEUPSTATUS_WIDTH               (3U)
#define FR_PSR0_WAKEUPSTATUS(x)                  (((uint16_t)(((uint16_t)(x)) << FR_PSR0_WAKEUPSTATUS_SHIFT)) & FR_PSR0_WAKEUPSTATUS_MASK)
#define FR_PSR0_STARTUPSTATE_MASK                (0xF0U)
#define FR_PSR0_STARTUPSTATE_SHIFT               (4U)
#define FR_PSR0_STARTUPSTATE_WIDTH               (4U)
#define FR_PSR0_STARTUPSTATE(x)                  (((uint16_t)(((uint16_t)(x)) << FR_PSR0_STARTUPSTATE_SHIFT)) & FR_PSR0_STARTUPSTATE_MASK)
#define FR_PSR0_PROTSTATE_MASK                   (0x700U)
#define FR_PSR0_PROTSTATE_SHIFT                  (8U)
#define FR_PSR0_PROTSTATE_WIDTH                  (3U)
#define FR_PSR0_PROTSTATE(x)                     (((uint16_t)(((uint16_t)(x)) << FR_PSR0_PROTSTATE_SHIFT)) & FR_PSR0_PROTSTATE_MASK)
#define FR_PSR0_SLOTMODE_MASK                    (0x3000U)
#define FR_PSR0_SLOTMODE_SHIFT                   (12U)
#define FR_PSR0_SLOTMODE_WIDTH                   (2U)
#define FR_PSR0_SLOTMODE(x)                      (((uint16_t)(((uint16_t)(x)) << FR_PSR0_SLOTMODE_SHIFT)) & FR_PSR0_SLOTMODE_MASK)
#define FR_PSR0_ERRMODE_MASK                     (0xC000U)
#define FR_PSR0_ERRMODE_SHIFT                    (14U)
#define FR_PSR0_ERRMODE_WIDTH                    (2U)
#define FR_PSR0_ERRMODE(x)                       (((uint16_t)(((uint16_t)(x)) << FR_PSR0_ERRMODE_SHIFT)) & FR_PSR0_ERRMODE_MASK)
/*! @} */

/*! @name PSR1 - Protocol Status Register 1 */
/*! @{ */
#define FR_PSR1_APTAC_MASK                       (0x1FU)
#define FR_PSR1_APTAC_SHIFT                      (0U)
#define FR_PSR1_APTAC_WIDTH                      (5U)
#define FR_PSR1_APTAC(x)                         (((uint16_t)(((uint16_t)(x)) << FR_PSR1_APTAC_SHIFT)) & FR_PSR1_APTAC_MASK)
#define FR_PSR1_FRZ_MASK                         (0x20U)
#define FR_PSR1_FRZ_SHIFT                        (5U)
#define FR_PSR1_FRZ_WIDTH                        (1U)
#define FR_PSR1_FRZ(x)                           (((uint16_t)(((uint16_t)(x)) << FR_PSR1_FRZ_SHIFT)) & FR_PSR1_FRZ_MASK)
#define FR_PSR1_HHR_MASK                         (0x40U)
#define FR_PSR1_HHR_SHIFT                        (6U)
#define FR_PSR1_HHR_WIDTH                        (1U)
#define FR_PSR1_HHR(x)                           (((uint16_t)(((uint16_t)(x)) << FR_PSR1_HHR_SHIFT)) & FR_PSR1_HHR_MASK)
#define FR_PSR1_CPN_MASK                         (0x80U)
#define FR_PSR1_CPN_SHIFT                        (7U)
#define FR_PSR1_CPN_WIDTH                        (1U)
#define FR_PSR1_CPN(x)                           (((uint16_t)(((uint16_t)(x)) << FR_PSR1_CPN_SHIFT)) & FR_PSR1_CPN_MASK)
#define FR_PSR1_REMCSAT_MASK                     (0x1F00U)
#define FR_PSR1_REMCSAT_SHIFT                    (8U)
#define FR_PSR1_REMCSAT_WIDTH                    (5U)
#define FR_PSR1_REMCSAT(x)                       (((uint16_t)(((uint16_t)(x)) << FR_PSR1_REMCSAT_SHIFT)) & FR_PSR1_REMCSAT_MASK)
#define FR_PSR1_CSP_MASK                         (0x4000U)
#define FR_PSR1_CSP_SHIFT                        (14U)
#define FR_PSR1_CSP_WIDTH                        (1U)
#define FR_PSR1_CSP(x)                           (((uint16_t)(((uint16_t)(x)) << FR_PSR1_CSP_SHIFT)) & FR_PSR1_CSP_MASK)
#define FR_PSR1_CSAA_MASK                        (0x8000U)
#define FR_PSR1_CSAA_SHIFT                       (15U)
#define FR_PSR1_CSAA_WIDTH                       (1U)
#define FR_PSR1_CSAA(x)                          (((uint16_t)(((uint16_t)(x)) << FR_PSR1_CSAA_SHIFT)) & FR_PSR1_CSAA_MASK)
/*! @} */

/*! @name PSR2 - Protocol Status Register 2 */
/*! @{ */
#define FR_PSR2_CKCORFCNT_MASK                   (0xFU)
#define FR_PSR2_CKCORFCNT_SHIFT                  (0U)
#define FR_PSR2_CKCORFCNT_WIDTH                  (4U)
#define FR_PSR2_CKCORFCNT(x)                     (((uint16_t)(((uint16_t)(x)) << FR_PSR2_CKCORFCNT_SHIFT)) & FR_PSR2_CKCORFCNT_MASK)
#define FR_PSR2_MTA_MASK                         (0x10U)
#define FR_PSR2_MTA_SHIFT                        (4U)
#define FR_PSR2_MTA_WIDTH                        (1U)
#define FR_PSR2_MTA(x)                           (((uint16_t)(((uint16_t)(x)) << FR_PSR2_MTA_SHIFT)) & FR_PSR2_MTA_MASK)
#define FR_PSR2_SSEA_MASK                        (0x20U)
#define FR_PSR2_SSEA_SHIFT                       (5U)
#define FR_PSR2_SSEA_WIDTH                       (1U)
#define FR_PSR2_SSEA(x)                          (((uint16_t)(((uint16_t)(x)) << FR_PSR2_SSEA_SHIFT)) & FR_PSR2_SSEA_MASK)
#define FR_PSR2_SBVA_MASK                        (0x40U)
#define FR_PSR2_SBVA_SHIFT                       (6U)
#define FR_PSR2_SBVA_WIDTH                       (1U)
#define FR_PSR2_SBVA(x)                          (((uint16_t)(((uint16_t)(x)) << FR_PSR2_SBVA_SHIFT)) & FR_PSR2_SBVA_MASK)
#define FR_PSR2_STCA_MASK                        (0x80U)
#define FR_PSR2_STCA_SHIFT                       (7U)
#define FR_PSR2_STCA_WIDTH                       (1U)
#define FR_PSR2_STCA(x)                          (((uint16_t)(((uint16_t)(x)) << FR_PSR2_STCA_SHIFT)) & FR_PSR2_STCA_MASK)
#define FR_PSR2_NSEA_MASK                        (0x100U)
#define FR_PSR2_NSEA_SHIFT                       (8U)
#define FR_PSR2_NSEA_WIDTH                       (1U)
#define FR_PSR2_NSEA(x)                          (((uint16_t)(((uint16_t)(x)) << FR_PSR2_NSEA_SHIFT)) & FR_PSR2_NSEA_MASK)
#define FR_PSR2_NBVA_MASK                        (0x200U)
#define FR_PSR2_NBVA_SHIFT                       (9U)
#define FR_PSR2_NBVA_WIDTH                       (1U)
#define FR_PSR2_NBVA(x)                          (((uint16_t)(((uint16_t)(x)) << FR_PSR2_NBVA_SHIFT)) & FR_PSR2_NBVA_MASK)
#define FR_PSR2_MTB_MASK                         (0x400U)
#define FR_PSR2_MTB_SHIFT                        (10U)
#define FR_PSR2_MTB_WIDTH                        (1U)
#define FR_PSR2_MTB(x)                           (((uint16_t)(((uint16_t)(x)) << FR_PSR2_MTB_SHIFT)) & FR_PSR2_MTB_MASK)
#define FR_PSR2_SSEB_MASK                        (0x800U)
#define FR_PSR2_SSEB_SHIFT                       (11U)
#define FR_PSR2_SSEB_WIDTH                       (1U)
#define FR_PSR2_SSEB(x)                          (((uint16_t)(((uint16_t)(x)) << FR_PSR2_SSEB_SHIFT)) & FR_PSR2_SSEB_MASK)
#define FR_PSR2_SBVB_MASK                        (0x1000U)
#define FR_PSR2_SBVB_SHIFT                       (12U)
#define FR_PSR2_SBVB_WIDTH                       (1U)
#define FR_PSR2_SBVB(x)                          (((uint16_t)(((uint16_t)(x)) << FR_PSR2_SBVB_SHIFT)) & FR_PSR2_SBVB_MASK)
#define FR_PSR2_STCB_MASK                        (0x2000U)
#define FR_PSR2_STCB_SHIFT                       (13U)
#define FR_PSR2_STCB_WIDTH                       (1U)
#define FR_PSR2_STCB(x)                          (((uint16_t)(((uint16_t)(x)) << FR_PSR2_STCB_SHIFT)) & FR_PSR2_STCB_MASK)
#define FR_PSR2_NSEB_MASK                        (0x4000U)
#define FR_PSR2_NSEB_SHIFT                       (14U)
#define FR_PSR2_NSEB_WIDTH                       (1U)
#define FR_PSR2_NSEB(x)                          (((uint16_t)(((uint16_t)(x)) << FR_PSR2_NSEB_SHIFT)) & FR_PSR2_NSEB_MASK)
#define FR_PSR2_NBVB_MASK                        (0x8000U)
#define FR_PSR2_NBVB_SHIFT                       (15U)
#define FR_PSR2_NBVB_WIDTH                       (1U)
#define FR_PSR2_NBVB(x)                          (((uint16_t)(((uint16_t)(x)) << FR_PSR2_NBVB_SHIFT)) & FR_PSR2_NBVB_MASK)
/*! @} */

/*! @name PSR3 - Protocol Status Register 3 */
/*! @{ */
#define FR_PSR3_AVFA_MASK                        (0x1U)
#define FR_PSR3_AVFA_SHIFT                       (0U)
#define FR_PSR3_AVFA_WIDTH                       (1U)
#define FR_PSR3_AVFA(x)                          (((uint16_t)(((uint16_t)(x)) << FR_PSR3_AVFA_SHIFT)) & FR_PSR3_AVFA_MASK)
#define FR_PSR3_ASEA_MASK                        (0x2U)
#define FR_PSR3_ASEA_SHIFT                       (1U)
#define FR_PSR3_ASEA_WIDTH                       (1U)
#define FR_PSR3_ASEA(x)                          (((uint16_t)(((uint16_t)(x)) << FR_PSR3_ASEA_SHIFT)) & FR_PSR3_ASEA_MASK)
#define FR_PSR3_ACEA_MASK                        (0x4U)
#define FR_PSR3_ACEA_SHIFT                       (2U)
#define FR_PSR3_ACEA_WIDTH                       (1U)
#define FR_PSR3_ACEA(x)                          (((uint16_t)(((uint16_t)(x)) << FR_PSR3_ACEA_SHIFT)) & FR_PSR3_ACEA_MASK)
#define FR_PSR3_AACA_MASK                        (0x8U)
#define FR_PSR3_AACA_SHIFT                       (3U)
#define FR_PSR3_AACA_WIDTH                       (1U)
#define FR_PSR3_AACA(x)                          (((uint16_t)(((uint16_t)(x)) << FR_PSR3_AACA_SHIFT)) & FR_PSR3_AACA_MASK)
#define FR_PSR3_ABVA_MASK                        (0x10U)
#define FR_PSR3_ABVA_SHIFT                       (4U)
#define FR_PSR3_ABVA_WIDTH                       (1U)
#define FR_PSR3_ABVA(x)                          (((uint16_t)(((uint16_t)(x)) << FR_PSR3_ABVA_SHIFT)) & FR_PSR3_ABVA_MASK)
#define FR_PSR3_WUA_MASK                         (0x20U)
#define FR_PSR3_WUA_SHIFT                        (5U)
#define FR_PSR3_WUA_WIDTH                        (1U)
#define FR_PSR3_WUA(x)                           (((uint16_t)(((uint16_t)(x)) << FR_PSR3_WUA_SHIFT)) & FR_PSR3_WUA_MASK)
#define FR_PSR3_AVFB_MASK                        (0x100U)
#define FR_PSR3_AVFB_SHIFT                       (8U)
#define FR_PSR3_AVFB_WIDTH                       (1U)
#define FR_PSR3_AVFB(x)                          (((uint16_t)(((uint16_t)(x)) << FR_PSR3_AVFB_SHIFT)) & FR_PSR3_AVFB_MASK)
#define FR_PSR3_ASEB_MASK                        (0x200U)
#define FR_PSR3_ASEB_SHIFT                       (9U)
#define FR_PSR3_ASEB_WIDTH                       (1U)
#define FR_PSR3_ASEB(x)                          (((uint16_t)(((uint16_t)(x)) << FR_PSR3_ASEB_SHIFT)) & FR_PSR3_ASEB_MASK)
#define FR_PSR3_ACEB_MASK                        (0x400U)
#define FR_PSR3_ACEB_SHIFT                       (10U)
#define FR_PSR3_ACEB_WIDTH                       (1U)
#define FR_PSR3_ACEB(x)                          (((uint16_t)(((uint16_t)(x)) << FR_PSR3_ACEB_SHIFT)) & FR_PSR3_ACEB_MASK)
#define FR_PSR3_AACB_MASK                        (0x800U)
#define FR_PSR3_AACB_SHIFT                       (11U)
#define FR_PSR3_AACB_WIDTH                       (1U)
#define FR_PSR3_AACB(x)                          (((uint16_t)(((uint16_t)(x)) << FR_PSR3_AACB_SHIFT)) & FR_PSR3_AACB_MASK)
#define FR_PSR3_ABVB_MASK                        (0x1000U)
#define FR_PSR3_ABVB_SHIFT                       (12U)
#define FR_PSR3_ABVB_WIDTH                       (1U)
#define FR_PSR3_ABVB(x)                          (((uint16_t)(((uint16_t)(x)) << FR_PSR3_ABVB_SHIFT)) & FR_PSR3_ABVB_MASK)
#define FR_PSR3_WUB_MASK                         (0x2000U)
#define FR_PSR3_WUB_SHIFT                        (13U)
#define FR_PSR3_WUB_WIDTH                        (1U)
#define FR_PSR3_WUB(x)                           (((uint16_t)(((uint16_t)(x)) << FR_PSR3_WUB_SHIFT)) & FR_PSR3_WUB_MASK)
/*! @} */

/*! @name MTCTR - Macrotick Counter Register */
/*! @{ */
#define FR_MTCTR_MTCT_MASK                       (0x3FFFU)
#define FR_MTCTR_MTCT_SHIFT                      (0U)
#define FR_MTCTR_MTCT_WIDTH                      (14U)
#define FR_MTCTR_MTCT(x)                         (((uint16_t)(((uint16_t)(x)) << FR_MTCTR_MTCT_SHIFT)) & FR_MTCTR_MTCT_MASK)
/*! @} */

/*! @name CYCTR - Cycle Counter Register */
/*! @{ */
#define FR_CYCTR_CYCCNT_MASK                     (0x3FU)
#define FR_CYCTR_CYCCNT_SHIFT                    (0U)
#define FR_CYCTR_CYCCNT_WIDTH                    (6U)
#define FR_CYCTR_CYCCNT(x)                       (((uint16_t)(((uint16_t)(x)) << FR_CYCTR_CYCCNT_SHIFT)) & FR_CYCTR_CYCCNT_MASK)
/*! @} */

/*! @name SLTCTAR - Slot Counter Channel A Register */
/*! @{ */
#define FR_SLTCTAR_SLOTCNTA_MASK                 (0x7FFU)
#define FR_SLTCTAR_SLOTCNTA_SHIFT                (0U)
#define FR_SLTCTAR_SLOTCNTA_WIDTH                (11U)
#define FR_SLTCTAR_SLOTCNTA(x)                   (((uint16_t)(((uint16_t)(x)) << FR_SLTCTAR_SLOTCNTA_SHIFT)) & FR_SLTCTAR_SLOTCNTA_MASK)
/*! @} */

/*! @name SLTCTBR - Slot Counter Channel B Register */
/*! @{ */
#define FR_SLTCTBR_SLOTCNTB_MASK                 (0x7FFU)
#define FR_SLTCTBR_SLOTCNTB_SHIFT                (0U)
#define FR_SLTCTBR_SLOTCNTB_WIDTH                (11U)
#define FR_SLTCTBR_SLOTCNTB(x)                   (((uint16_t)(((uint16_t)(x)) << FR_SLTCTBR_SLOTCNTB_SHIFT)) & FR_SLTCTBR_SLOTCNTB_MASK)
/*! @} */

/*! @name RTCORVR - Rate Correction Value Register */
/*! @{ */
#define FR_RTCORVR_RATECORR_MASK                 (0xFFFFU)
#define FR_RTCORVR_RATECORR_SHIFT                (0U)
#define FR_RTCORVR_RATECORR_WIDTH                (16U)
#define FR_RTCORVR_RATECORR(x)                   (((uint16_t)(((uint16_t)(x)) << FR_RTCORVR_RATECORR_SHIFT)) & FR_RTCORVR_RATECORR_MASK)
/*! @} */

/*! @name OFCORVR - Offset Correction Value Register */
/*! @{ */
#define FR_OFCORVR_OFFSETCORR_MASK               (0xFFFFU)
#define FR_OFCORVR_OFFSETCORR_SHIFT              (0U)
#define FR_OFCORVR_OFFSETCORR_WIDTH              (16U)
#define FR_OFCORVR_OFFSETCORR(x)                 (((uint16_t)(((uint16_t)(x)) << FR_OFCORVR_OFFSETCORR_SHIFT)) & FR_OFCORVR_OFFSETCORR_MASK)
/*! @} */

/*! @name CIFR - Combined Interrupt Flag Register */
/*! @{ */
#define FR_CIFR_TBIF_MASK                        (0x1U)
#define FR_CIFR_TBIF_SHIFT                       (0U)
#define FR_CIFR_TBIF_WIDTH                       (1U)
#define FR_CIFR_TBIF(x)                          (((uint16_t)(((uint16_t)(x)) << FR_CIFR_TBIF_SHIFT)) & FR_CIFR_TBIF_MASK)
#define FR_CIFR_RBIF_MASK                        (0x2U)
#define FR_CIFR_RBIF_SHIFT                       (1U)
#define FR_CIFR_RBIF_WIDTH                       (1U)
#define FR_CIFR_RBIF(x)                          (((uint16_t)(((uint16_t)(x)) << FR_CIFR_RBIF_SHIFT)) & FR_CIFR_RBIF_MASK)
#define FR_CIFR_FAFAIF_MASK                      (0x4U)
#define FR_CIFR_FAFAIF_SHIFT                     (2U)
#define FR_CIFR_FAFAIF_WIDTH                     (1U)
#define FR_CIFR_FAFAIF(x)                        (((uint16_t)(((uint16_t)(x)) << FR_CIFR_FAFAIF_SHIFT)) & FR_CIFR_FAFAIF_MASK)
#define FR_CIFR_FAFBIF_MASK                      (0x8U)
#define FR_CIFR_FAFBIF_SHIFT                     (3U)
#define FR_CIFR_FAFBIF_WIDTH                     (1U)
#define FR_CIFR_FAFBIF(x)                        (((uint16_t)(((uint16_t)(x)) << FR_CIFR_FAFBIF_SHIFT)) & FR_CIFR_FAFBIF_MASK)
#define FR_CIFR_WUPIF_MASK                       (0x10U)
#define FR_CIFR_WUPIF_SHIFT                      (4U)
#define FR_CIFR_WUPIF_WIDTH                      (1U)
#define FR_CIFR_WUPIF(x)                         (((uint16_t)(((uint16_t)(x)) << FR_CIFR_WUPIF_SHIFT)) & FR_CIFR_WUPIF_MASK)
#define FR_CIFR_CHIF_MASK                        (0x20U)
#define FR_CIFR_CHIF_SHIFT                       (5U)
#define FR_CIFR_CHIF_WIDTH                       (1U)
#define FR_CIFR_CHIF(x)                          (((uint16_t)(((uint16_t)(x)) << FR_CIFR_CHIF_SHIFT)) & FR_CIFR_CHIF_MASK)
#define FR_CIFR_PRIF_MASK                        (0x40U)
#define FR_CIFR_PRIF_SHIFT                       (6U)
#define FR_CIFR_PRIF_WIDTH                       (1U)
#define FR_CIFR_PRIF(x)                          (((uint16_t)(((uint16_t)(x)) << FR_CIFR_PRIF_SHIFT)) & FR_CIFR_PRIF_MASK)
#define FR_CIFR_MIF_MASK                         (0x80U)
#define FR_CIFR_MIF_SHIFT                        (7U)
#define FR_CIFR_MIF_WIDTH                        (1U)
#define FR_CIFR_MIF(x)                           (((uint16_t)(((uint16_t)(x)) << FR_CIFR_MIF_SHIFT)) & FR_CIFR_MIF_MASK)
/*! @} */

/*! @name SYMATOR - System Memory Access Time-Out Register */
/*! @{ */
#define FR_SYMATOR_TIMEOUT_MASK                  (0xFFU)
#define FR_SYMATOR_TIMEOUT_SHIFT                 (0U)
#define FR_SYMATOR_TIMEOUT_WIDTH                 (8U)
#define FR_SYMATOR_TIMEOUT(x)                    (((uint16_t)(((uint16_t)(x)) << FR_SYMATOR_TIMEOUT_SHIFT)) & FR_SYMATOR_TIMEOUT_MASK)
/*! @} */

/*! @name SFCNTR - Sync Frame Counter Register */
/*! @{ */
#define FR_SFCNTR_SFODA_MASK                     (0xFU)
#define FR_SFCNTR_SFODA_SHIFT                    (0U)
#define FR_SFCNTR_SFODA_WIDTH                    (4U)
#define FR_SFCNTR_SFODA(x)                       (((uint16_t)(((uint16_t)(x)) << FR_SFCNTR_SFODA_SHIFT)) & FR_SFCNTR_SFODA_MASK)
#define FR_SFCNTR_SFODB_MASK                     (0xF0U)
#define FR_SFCNTR_SFODB_SHIFT                    (4U)
#define FR_SFCNTR_SFODB_WIDTH                    (4U)
#define FR_SFCNTR_SFODB(x)                       (((uint16_t)(((uint16_t)(x)) << FR_SFCNTR_SFODB_SHIFT)) & FR_SFCNTR_SFODB_MASK)
#define FR_SFCNTR_SFEVA_MASK                     (0xF00U)
#define FR_SFCNTR_SFEVA_SHIFT                    (8U)
#define FR_SFCNTR_SFEVA_WIDTH                    (4U)
#define FR_SFCNTR_SFEVA(x)                       (((uint16_t)(((uint16_t)(x)) << FR_SFCNTR_SFEVA_SHIFT)) & FR_SFCNTR_SFEVA_MASK)
#define FR_SFCNTR_SFEVB_MASK                     (0xF000U)
#define FR_SFCNTR_SFEVB_SHIFT                    (12U)
#define FR_SFCNTR_SFEVB_WIDTH                    (4U)
#define FR_SFCNTR_SFEVB(x)                       (((uint16_t)(((uint16_t)(x)) << FR_SFCNTR_SFEVB_SHIFT)) & FR_SFCNTR_SFEVB_MASK)
/*! @} */

/*! @name SFTOR - Sync Frame Table Offset Register */
/*! @{ */
#define FR_SFTOR_SFT_OFFSET_MASK                 (0xFFFEU)
#define FR_SFTOR_SFT_OFFSET_SHIFT                (1U)
#define FR_SFTOR_SFT_OFFSET_WIDTH                (15U)
#define FR_SFTOR_SFT_OFFSET(x)                   (((uint16_t)(((uint16_t)(x)) << FR_SFTOR_SFT_OFFSET_SHIFT)) & FR_SFTOR_SFT_OFFSET_MASK)
/*! @} */

/*! @name SFTCCSR - Sync Frame Table Configuration Control Status Register */
/*! @{ */
#define FR_SFTCCSR_SIDEN_MASK                    (0x1U)
#define FR_SFTCCSR_SIDEN_SHIFT                   (0U)
#define FR_SFTCCSR_SIDEN_WIDTH                   (1U)
#define FR_SFTCCSR_SIDEN(x)                      (((uint16_t)(((uint16_t)(x)) << FR_SFTCCSR_SIDEN_SHIFT)) & FR_SFTCCSR_SIDEN_MASK)
#define FR_SFTCCSR_SDVEN_MASK                    (0x2U)
#define FR_SFTCCSR_SDVEN_SHIFT                   (1U)
#define FR_SFTCCSR_SDVEN_WIDTH                   (1U)
#define FR_SFTCCSR_SDVEN(x)                      (((uint16_t)(((uint16_t)(x)) << FR_SFTCCSR_SDVEN_SHIFT)) & FR_SFTCCSR_SDVEN_MASK)
#define FR_SFTCCSR_OPT_MASK                      (0x4U)
#define FR_SFTCCSR_OPT_SHIFT                     (2U)
#define FR_SFTCCSR_OPT_WIDTH                     (1U)
#define FR_SFTCCSR_OPT(x)                        (((uint16_t)(((uint16_t)(x)) << FR_SFTCCSR_OPT_SHIFT)) & FR_SFTCCSR_OPT_MASK)
#define FR_SFTCCSR_OVAL_MASK                     (0x10U)
#define FR_SFTCCSR_OVAL_SHIFT                    (4U)
#define FR_SFTCCSR_OVAL_WIDTH                    (1U)
#define FR_SFTCCSR_OVAL(x)                       (((uint16_t)(((uint16_t)(x)) << FR_SFTCCSR_OVAL_SHIFT)) & FR_SFTCCSR_OVAL_MASK)
#define FR_SFTCCSR_EVAL_MASK                     (0x20U)
#define FR_SFTCCSR_EVAL_SHIFT                    (5U)
#define FR_SFTCCSR_EVAL_WIDTH                    (1U)
#define FR_SFTCCSR_EVAL(x)                       (((uint16_t)(((uint16_t)(x)) << FR_SFTCCSR_EVAL_SHIFT)) & FR_SFTCCSR_EVAL_MASK)
#define FR_SFTCCSR_OLKS_MASK                     (0x40U)
#define FR_SFTCCSR_OLKS_SHIFT                    (6U)
#define FR_SFTCCSR_OLKS_WIDTH                    (1U)
#define FR_SFTCCSR_OLKS(x)                       (((uint16_t)(((uint16_t)(x)) << FR_SFTCCSR_OLKS_SHIFT)) & FR_SFTCCSR_OLKS_MASK)
#define FR_SFTCCSR_ELKS_MASK                     (0x80U)
#define FR_SFTCCSR_ELKS_SHIFT                    (7U)
#define FR_SFTCCSR_ELKS_WIDTH                    (1U)
#define FR_SFTCCSR_ELKS(x)                       (((uint16_t)(((uint16_t)(x)) << FR_SFTCCSR_ELKS_SHIFT)) & FR_SFTCCSR_ELKS_MASK)
#define FR_SFTCCSR_CYCNUM_MASK                   (0x3F00U)
#define FR_SFTCCSR_CYCNUM_SHIFT                  (8U)
#define FR_SFTCCSR_CYCNUM_WIDTH                  (6U)
#define FR_SFTCCSR_CYCNUM(x)                     (((uint16_t)(((uint16_t)(x)) << FR_SFTCCSR_CYCNUM_SHIFT)) & FR_SFTCCSR_CYCNUM_MASK)
#define FR_SFTCCSR_OLKT_MASK                     (0x4000U)
#define FR_SFTCCSR_OLKT_SHIFT                    (14U)
#define FR_SFTCCSR_OLKT_WIDTH                    (1U)
#define FR_SFTCCSR_OLKT(x)                       (((uint16_t)(((uint16_t)(x)) << FR_SFTCCSR_OLKT_SHIFT)) & FR_SFTCCSR_OLKT_MASK)
#define FR_SFTCCSR_ELKT_MASK                     (0x8000U)
#define FR_SFTCCSR_ELKT_SHIFT                    (15U)
#define FR_SFTCCSR_ELKT_WIDTH                    (1U)
#define FR_SFTCCSR_ELKT(x)                       (((uint16_t)(((uint16_t)(x)) << FR_SFTCCSR_ELKT_SHIFT)) & FR_SFTCCSR_ELKT_MASK)
/*! @} */

/*! @name SFIDRFR - Sync Frame ID Rejection Filter Register */
/*! @{ */
#define FR_SFIDRFR_SYNFRID_MASK                  (0x3FFU)
#define FR_SFIDRFR_SYNFRID_SHIFT                 (0U)
#define FR_SFIDRFR_SYNFRID_WIDTH                 (10U)
#define FR_SFIDRFR_SYNFRID(x)                    (((uint16_t)(((uint16_t)(x)) << FR_SFIDRFR_SYNFRID_SHIFT)) & FR_SFIDRFR_SYNFRID_MASK)
/*! @} */

/*! @name SFIDAFVR - Sync Frame ID Acceptance Filter Value Register */
/*! @{ */
#define FR_SFIDAFVR_FVAL_MASK                    (0x3FFU)
#define FR_SFIDAFVR_FVAL_SHIFT                   (0U)
#define FR_SFIDAFVR_FVAL_WIDTH                   (10U)
#define FR_SFIDAFVR_FVAL(x)                      (((uint16_t)(((uint16_t)(x)) << FR_SFIDAFVR_FVAL_SHIFT)) & FR_SFIDAFVR_FVAL_MASK)
/*! @} */

/*! @name SFIDAFMR - Sync Frame ID Acceptance Filter Mask Register */
/*! @{ */
#define FR_SFIDAFMR_FMSK_MASK                    (0x3FFU)
#define FR_SFIDAFMR_FMSK_SHIFT                   (0U)
#define FR_SFIDAFMR_FMSK_WIDTH                   (10U)
#define FR_SFIDAFMR_FMSK(x)                      (((uint16_t)(((uint16_t)(x)) << FR_SFIDAFMR_FMSK_SHIFT)) & FR_SFIDAFMR_FMSK_MASK)
/*! @} */

/*! @name NMVR - Network Management Vector Register */
/*! @{ */
#define FR_NMVR_NMVP_MASK                        (0xFFFFU)
#define FR_NMVR_NMVP_SHIFT                       (0U)
#define FR_NMVR_NMVP_WIDTH                       (16U)
#define FR_NMVR_NMVP(x)                          (((uint16_t)(((uint16_t)(x)) << FR_NMVR_NMVP_SHIFT)) & FR_NMVR_NMVP_MASK)
/*! @} */

/*! @name NMVLR - Network Management Vector Length Register */
/*! @{ */
#define FR_NMVLR_NMVL_MASK                       (0xFU)
#define FR_NMVLR_NMVL_SHIFT                      (0U)
#define FR_NMVLR_NMVL_WIDTH                      (4U)
#define FR_NMVLR_NMVL(x)                         (((uint16_t)(((uint16_t)(x)) << FR_NMVLR_NMVL_SHIFT)) & FR_NMVLR_NMVL_MASK)
/*! @} */

/*! @name TICCR - Timer Configuration and Control Register */
/*! @{ */
#define FR_TICCR_T1ST_MASK                       (0x1U)
#define FR_TICCR_T1ST_SHIFT                      (0U)
#define FR_TICCR_T1ST_WIDTH                      (1U)
#define FR_TICCR_T1ST(x)                         (((uint16_t)(((uint16_t)(x)) << FR_TICCR_T1ST_SHIFT)) & FR_TICCR_T1ST_MASK)
#define FR_TICCR_T1TR_MASK                       (0x2U)
#define FR_TICCR_T1TR_SHIFT                      (1U)
#define FR_TICCR_T1TR_WIDTH                      (1U)
#define FR_TICCR_T1TR(x)                         (((uint16_t)(((uint16_t)(x)) << FR_TICCR_T1TR_SHIFT)) & FR_TICCR_T1TR_MASK)
#define FR_TICCR_T1SP_MASK                       (0x4U)
#define FR_TICCR_T1SP_SHIFT                      (2U)
#define FR_TICCR_T1SP_WIDTH                      (1U)
#define FR_TICCR_T1SP(x)                         (((uint16_t)(((uint16_t)(x)) << FR_TICCR_T1SP_SHIFT)) & FR_TICCR_T1SP_MASK)
#define FR_TICCR_T1_REP_MASK                     (0x10U)
#define FR_TICCR_T1_REP_SHIFT                    (4U)
#define FR_TICCR_T1_REP_WIDTH                    (1U)
#define FR_TICCR_T1_REP(x)                       (((uint16_t)(((uint16_t)(x)) << FR_TICCR_T1_REP_SHIFT)) & FR_TICCR_T1_REP_MASK)
#define FR_TICCR_T2ST_MASK                       (0x100U)
#define FR_TICCR_T2ST_SHIFT                      (8U)
#define FR_TICCR_T2ST_WIDTH                      (1U)
#define FR_TICCR_T2ST(x)                         (((uint16_t)(((uint16_t)(x)) << FR_TICCR_T2ST_SHIFT)) & FR_TICCR_T2ST_MASK)
#define FR_TICCR_T2TR_MASK                       (0x200U)
#define FR_TICCR_T2TR_SHIFT                      (9U)
#define FR_TICCR_T2TR_WIDTH                      (1U)
#define FR_TICCR_T2TR(x)                         (((uint16_t)(((uint16_t)(x)) << FR_TICCR_T2TR_SHIFT)) & FR_TICCR_T2TR_MASK)
#define FR_TICCR_T2SP_MASK                       (0x400U)
#define FR_TICCR_T2SP_SHIFT                      (10U)
#define FR_TICCR_T2SP_WIDTH                      (1U)
#define FR_TICCR_T2SP(x)                         (((uint16_t)(((uint16_t)(x)) << FR_TICCR_T2SP_SHIFT)) & FR_TICCR_T2SP_MASK)
#define FR_TICCR_T2_REP_MASK                     (0x1000U)
#define FR_TICCR_T2_REP_SHIFT                    (12U)
#define FR_TICCR_T2_REP_WIDTH                    (1U)
#define FR_TICCR_T2_REP(x)                       (((uint16_t)(((uint16_t)(x)) << FR_TICCR_T2_REP_SHIFT)) & FR_TICCR_T2_REP_MASK)
#define FR_TICCR_T2_CFG_MASK                     (0x2000U)
#define FR_TICCR_T2_CFG_SHIFT                    (13U)
#define FR_TICCR_T2_CFG_WIDTH                    (1U)
#define FR_TICCR_T2_CFG(x)                       (((uint16_t)(((uint16_t)(x)) << FR_TICCR_T2_CFG_SHIFT)) & FR_TICCR_T2_CFG_MASK)
/*! @} */

/*! @name TI1CYSR - Timer 1 Cycle Set Register */
/*! @{ */
#define FR_TI1CYSR_T1_CYC_MSK_MASK               (0x3FU)
#define FR_TI1CYSR_T1_CYC_MSK_SHIFT              (0U)
#define FR_TI1CYSR_T1_CYC_MSK_WIDTH              (6U)
#define FR_TI1CYSR_T1_CYC_MSK(x)                 (((uint16_t)(((uint16_t)(x)) << FR_TI1CYSR_T1_CYC_MSK_SHIFT)) & FR_TI1CYSR_T1_CYC_MSK_MASK)
#define FR_TI1CYSR_T1_CYC_VAL_MASK               (0x3F00U)
#define FR_TI1CYSR_T1_CYC_VAL_SHIFT              (8U)
#define FR_TI1CYSR_T1_CYC_VAL_WIDTH              (6U)
#define FR_TI1CYSR_T1_CYC_VAL(x)                 (((uint16_t)(((uint16_t)(x)) << FR_TI1CYSR_T1_CYC_VAL_SHIFT)) & FR_TI1CYSR_T1_CYC_VAL_MASK)
/*! @} */

/*! @name TI1MTOR - Timer 1 Macrotick Offset Register */
/*! @{ */
#define FR_TI1MTOR_T1_MTOFFSET_MASK              (0x3FFFU)
#define FR_TI1MTOR_T1_MTOFFSET_SHIFT             (0U)
#define FR_TI1MTOR_T1_MTOFFSET_WIDTH             (14U)
#define FR_TI1MTOR_T1_MTOFFSET(x)                (((uint16_t)(((uint16_t)(x)) << FR_TI1MTOR_T1_MTOFFSET_SHIFT)) & FR_TI1MTOR_T1_MTOFFSET_MASK)
/*! @} */

/*! @name TI2CR0_ABS - Timer 2 Configuration Register 0 (Absolute Timer Configuration) */
/*! @{ */
#define FR_TI2CR0_ABS_T2CYCMSK_MASK              (0x3FU)
#define FR_TI2CR0_ABS_T2CYCMSK_SHIFT             (0U)
#define FR_TI2CR0_ABS_T2CYCMSK_WIDTH             (6U)
#define FR_TI2CR0_ABS_T2CYCMSK(x)                (((uint16_t)(((uint16_t)(x)) << FR_TI2CR0_ABS_T2CYCMSK_SHIFT)) & FR_TI2CR0_ABS_T2CYCMSK_MASK)
#define FR_TI2CR0_ABS_T2CYCVAL_MASK              (0x3F00U)
#define FR_TI2CR0_ABS_T2CYCVAL_SHIFT             (8U)
#define FR_TI2CR0_ABS_T2CYCVAL_WIDTH             (6U)
#define FR_TI2CR0_ABS_T2CYCVAL(x)                (((uint16_t)(((uint16_t)(x)) << FR_TI2CR0_ABS_T2CYCVAL_SHIFT)) & FR_TI2CR0_ABS_T2CYCVAL_MASK)
/*! @} */

/*! @name TI2CR0_REL - Timer 2 Configuration Register 0 (Relative Timer Configuration) */
/*! @{ */
#define FR_TI2CR0_REL_T2MTCNT_MASK               (0xFFFFU)
#define FR_TI2CR0_REL_T2MTCNT_SHIFT              (0U)
#define FR_TI2CR0_REL_T2MTCNT_WIDTH              (16U)
#define FR_TI2CR0_REL_T2MTCNT(x)                 (((uint16_t)(((uint16_t)(x)) << FR_TI2CR0_REL_T2MTCNT_SHIFT)) & FR_TI2CR0_REL_T2MTCNT_MASK)
/*! @} */

/*! @name TI2CR1_ABS - Timer 2 Configuration Register 1 (Absolute Timer Configuration) */
/*! @{ */
#define FR_TI2CR1_ABS_T2MOFF_MASK                (0x3FFFU)
#define FR_TI2CR1_ABS_T2MOFF_SHIFT               (0U)
#define FR_TI2CR1_ABS_T2MOFF_WIDTH               (14U)
#define FR_TI2CR1_ABS_T2MOFF(x)                  (((uint16_t)(((uint16_t)(x)) << FR_TI2CR1_ABS_T2MOFF_SHIFT)) & FR_TI2CR1_ABS_T2MOFF_MASK)
/*! @} */

/*! @name TI2CR1_REL - Timer 2 Configuration Register 1 (Relative Timer Configuration) */
/*! @{ */
#define FR_TI2CR1_REL_T2MTCNT_MASK               (0xFFFFU)
#define FR_TI2CR1_REL_T2MTCNT_SHIFT              (0U)
#define FR_TI2CR1_REL_T2MTCNT_WIDTH              (16U)
#define FR_TI2CR1_REL_T2MTCNT(x)                 (((uint16_t)(((uint16_t)(x)) << FR_TI2CR1_REL_T2MTCNT_SHIFT)) & FR_TI2CR1_REL_T2MTCNT_MASK)
/*! @} */

/*! @name SSSR - Slot Status Selection Register */
/*! @{ */
#define FR_SSSR_SLOTNUMBER_MASK                  (0x7FFU)
#define FR_SSSR_SLOTNUMBER_SHIFT                 (0U)
#define FR_SSSR_SLOTNUMBER_WIDTH                 (11U)
#define FR_SSSR_SLOTNUMBER(x)                    (((uint16_t)(((uint16_t)(x)) << FR_SSSR_SLOTNUMBER_SHIFT)) & FR_SSSR_SLOTNUMBER_MASK)
#define FR_SSSR_SEL_MASK                         (0x3000U)
#define FR_SSSR_SEL_SHIFT                        (12U)
#define FR_SSSR_SEL_WIDTH                        (2U)
#define FR_SSSR_SEL(x)                           (((uint16_t)(((uint16_t)(x)) << FR_SSSR_SEL_SHIFT)) & FR_SSSR_SEL_MASK)
#define FR_SSSR_WMD_MASK                         (0x8000U)
#define FR_SSSR_WMD_SHIFT                        (15U)
#define FR_SSSR_WMD_WIDTH                        (1U)
#define FR_SSSR_WMD(x)                           (((uint16_t)(((uint16_t)(x)) << FR_SSSR_WMD_SHIFT)) & FR_SSSR_WMD_MASK)
/*! @} */

/*! @name SSCCR - Slot Status Counter Condition Register */
/*! @{ */
#define FR_SSCCR_STATUSMASK_MASK                 (0xFU)
#define FR_SSCCR_STATUSMASK_SHIFT                (0U)
#define FR_SSCCR_STATUSMASK_WIDTH                (4U)
#define FR_SSCCR_STATUSMASK(x)                   (((uint16_t)(((uint16_t)(x)) << FR_SSCCR_STATUSMASK_SHIFT)) & FR_SSCCR_STATUSMASK_MASK)
#define FR_SSCCR_SUF_MASK                        (0x10U)
#define FR_SSCCR_SUF_SHIFT                       (4U)
#define FR_SSCCR_SUF_WIDTH                       (1U)
#define FR_SSCCR_SUF(x)                          (((uint16_t)(((uint16_t)(x)) << FR_SSCCR_SUF_SHIFT)) & FR_SSCCR_SUF_MASK)
#define FR_SSCCR_NUF_MASK                        (0x20U)
#define FR_SSCCR_NUF_SHIFT                       (5U)
#define FR_SSCCR_NUF_WIDTH                       (1U)
#define FR_SSCCR_NUF(x)                          (((uint16_t)(((uint16_t)(x)) << FR_SSCCR_NUF_SHIFT)) & FR_SSCCR_NUF_MASK)
#define FR_SSCCR_SYF_MASK                        (0x40U)
#define FR_SSCCR_SYF_SHIFT                       (6U)
#define FR_SSCCR_SYF_WIDTH                       (1U)
#define FR_SSCCR_SYF(x)                          (((uint16_t)(((uint16_t)(x)) << FR_SSCCR_SYF_SHIFT)) & FR_SSCCR_SYF_MASK)
#define FR_SSCCR_VFR_MASK                        (0x80U)
#define FR_SSCCR_VFR_SHIFT                       (7U)
#define FR_SSCCR_VFR_WIDTH                       (1U)
#define FR_SSCCR_VFR(x)                          (((uint16_t)(((uint16_t)(x)) << FR_SSCCR_VFR_SHIFT)) & FR_SSCCR_VFR_MASK)
#define FR_SSCCR_MCY_MASK                        (0x100U)
#define FR_SSCCR_MCY_SHIFT                       (8U)
#define FR_SSCCR_MCY_WIDTH                       (1U)
#define FR_SSCCR_MCY(x)                          (((uint16_t)(((uint16_t)(x)) << FR_SSCCR_MCY_SHIFT)) & FR_SSCCR_MCY_MASK)
#define FR_SSCCR_CNTCFG_MASK                     (0x600U)
#define FR_SSCCR_CNTCFG_SHIFT                    (9U)
#define FR_SSCCR_CNTCFG_WIDTH                    (2U)
#define FR_SSCCR_CNTCFG(x)                       (((uint16_t)(((uint16_t)(x)) << FR_SSCCR_CNTCFG_SHIFT)) & FR_SSCCR_CNTCFG_MASK)
#define FR_SSCCR_SEL_MASK                        (0x3000U)
#define FR_SSCCR_SEL_SHIFT                       (12U)
#define FR_SSCCR_SEL_WIDTH                       (2U)
#define FR_SSCCR_SEL(x)                          (((uint16_t)(((uint16_t)(x)) << FR_SSCCR_SEL_SHIFT)) & FR_SSCCR_SEL_MASK)
#define FR_SSCCR_WMD_MASK                        (0x8000U)
#define FR_SSCCR_WMD_SHIFT                       (15U)
#define FR_SSCCR_WMD_WIDTH                       (1U)
#define FR_SSCCR_WMD(x)                          (((uint16_t)(((uint16_t)(x)) << FR_SSCCR_WMD_SHIFT)) & FR_SSCCR_WMD_MASK)
/*! @} */

/*! @name SSR - Slot Status Register */
/*! @{ */
#define FR_SSR_TCA_MASK                          (0x1U)
#define FR_SSR_TCA_SHIFT                         (0U)
#define FR_SSR_TCA_WIDTH                         (1U)
#define FR_SSR_TCA(x)                            (((uint16_t)(((uint16_t)(x)) << FR_SSR_TCA_SHIFT)) & FR_SSR_TCA_MASK)
#define FR_SSR_BVA_MASK                          (0x2U)
#define FR_SSR_BVA_SHIFT                         (1U)
#define FR_SSR_BVA_WIDTH                         (1U)
#define FR_SSR_BVA(x)                            (((uint16_t)(((uint16_t)(x)) << FR_SSR_BVA_SHIFT)) & FR_SSR_BVA_MASK)
#define FR_SSR_CEA_MASK                          (0x4U)
#define FR_SSR_CEA_SHIFT                         (2U)
#define FR_SSR_CEA_WIDTH                         (1U)
#define FR_SSR_CEA(x)                            (((uint16_t)(((uint16_t)(x)) << FR_SSR_CEA_SHIFT)) & FR_SSR_CEA_MASK)
#define FR_SSR_SEA_MASK                          (0x8U)
#define FR_SSR_SEA_SHIFT                         (3U)
#define FR_SSR_SEA_WIDTH                         (1U)
#define FR_SSR_SEA(x)                            (((uint16_t)(((uint16_t)(x)) << FR_SSR_SEA_SHIFT)) & FR_SSR_SEA_MASK)
#define FR_SSR_SUA_MASK                          (0x10U)
#define FR_SSR_SUA_SHIFT                         (4U)
#define FR_SSR_SUA_WIDTH                         (1U)
#define FR_SSR_SUA(x)                            (((uint16_t)(((uint16_t)(x)) << FR_SSR_SUA_SHIFT)) & FR_SSR_SUA_MASK)
#define FR_SSR_NFA_MASK                          (0x20U)
#define FR_SSR_NFA_SHIFT                         (5U)
#define FR_SSR_NFA_WIDTH                         (1U)
#define FR_SSR_NFA(x)                            (((uint16_t)(((uint16_t)(x)) << FR_SSR_NFA_SHIFT)) & FR_SSR_NFA_MASK)
#define FR_SSR_SYA_MASK                          (0x40U)
#define FR_SSR_SYA_SHIFT                         (6U)
#define FR_SSR_SYA_WIDTH                         (1U)
#define FR_SSR_SYA(x)                            (((uint16_t)(((uint16_t)(x)) << FR_SSR_SYA_SHIFT)) & FR_SSR_SYA_MASK)
#define FR_SSR_VFA_MASK                          (0x80U)
#define FR_SSR_VFA_SHIFT                         (7U)
#define FR_SSR_VFA_WIDTH                         (1U)
#define FR_SSR_VFA(x)                            (((uint16_t)(((uint16_t)(x)) << FR_SSR_VFA_SHIFT)) & FR_SSR_VFA_MASK)
#define FR_SSR_TCB_MASK                          (0x100U)
#define FR_SSR_TCB_SHIFT                         (8U)
#define FR_SSR_TCB_WIDTH                         (1U)
#define FR_SSR_TCB(x)                            (((uint16_t)(((uint16_t)(x)) << FR_SSR_TCB_SHIFT)) & FR_SSR_TCB_MASK)
#define FR_SSR_BVB_MASK                          (0x200U)
#define FR_SSR_BVB_SHIFT                         (9U)
#define FR_SSR_BVB_WIDTH                         (1U)
#define FR_SSR_BVB(x)                            (((uint16_t)(((uint16_t)(x)) << FR_SSR_BVB_SHIFT)) & FR_SSR_BVB_MASK)
#define FR_SSR_CEB_MASK                          (0x400U)
#define FR_SSR_CEB_SHIFT                         (10U)
#define FR_SSR_CEB_WIDTH                         (1U)
#define FR_SSR_CEB(x)                            (((uint16_t)(((uint16_t)(x)) << FR_SSR_CEB_SHIFT)) & FR_SSR_CEB_MASK)
#define FR_SSR_SEB_MASK                          (0x800U)
#define FR_SSR_SEB_SHIFT                         (11U)
#define FR_SSR_SEB_WIDTH                         (1U)
#define FR_SSR_SEB(x)                            (((uint16_t)(((uint16_t)(x)) << FR_SSR_SEB_SHIFT)) & FR_SSR_SEB_MASK)
#define FR_SSR_SUB_MASK                          (0x1000U)
#define FR_SSR_SUB_SHIFT                         (12U)
#define FR_SSR_SUB_WIDTH                         (1U)
#define FR_SSR_SUB(x)                            (((uint16_t)(((uint16_t)(x)) << FR_SSR_SUB_SHIFT)) & FR_SSR_SUB_MASK)
#define FR_SSR_NFB_MASK                          (0x2000U)
#define FR_SSR_NFB_SHIFT                         (13U)
#define FR_SSR_NFB_WIDTH                         (1U)
#define FR_SSR_NFB(x)                            (((uint16_t)(((uint16_t)(x)) << FR_SSR_NFB_SHIFT)) & FR_SSR_NFB_MASK)
#define FR_SSR_SYB_MASK                          (0x4000U)
#define FR_SSR_SYB_SHIFT                         (14U)
#define FR_SSR_SYB_WIDTH                         (1U)
#define FR_SSR_SYB(x)                            (((uint16_t)(((uint16_t)(x)) << FR_SSR_SYB_SHIFT)) & FR_SSR_SYB_MASK)
#define FR_SSR_VFB_MASK                          (0x8000U)
#define FR_SSR_VFB_SHIFT                         (15U)
#define FR_SSR_VFB_WIDTH                         (1U)
#define FR_SSR_VFB(x)                            (((uint16_t)(((uint16_t)(x)) << FR_SSR_VFB_SHIFT)) & FR_SSR_VFB_MASK)
/*! @} */

/*! @name SSCR - Slot Status Counter Register */
/*! @{ */
#define FR_SSCR_SLOTSTATUSCNT_MASK               (0xFFFFU)
#define FR_SSCR_SLOTSTATUSCNT_SHIFT              (0U)
#define FR_SSCR_SLOTSTATUSCNT_WIDTH              (16U)
#define FR_SSCR_SLOTSTATUSCNT(x)                 (((uint16_t)(((uint16_t)(x)) << FR_SSCR_SLOTSTATUSCNT_SHIFT)) & FR_SSCR_SLOTSTATUSCNT_MASK)
/*! @} */

/*! @name MTSACFR - MTS A Configuration Register */
/*! @{ */
#define FR_MTSACFR_CYCCNTVAL_MASK                (0x3FU)
#define FR_MTSACFR_CYCCNTVAL_SHIFT               (0U)
#define FR_MTSACFR_CYCCNTVAL_WIDTH               (6U)
#define FR_MTSACFR_CYCCNTVAL(x)                  (((uint16_t)(((uint16_t)(x)) << FR_MTSACFR_CYCCNTVAL_SHIFT)) & FR_MTSACFR_CYCCNTVAL_MASK)
#define FR_MTSACFR_CYCCNTMSK_MASK                (0x3F00U)
#define FR_MTSACFR_CYCCNTMSK_SHIFT               (8U)
#define FR_MTSACFR_CYCCNTMSK_WIDTH               (6U)
#define FR_MTSACFR_CYCCNTMSK(x)                  (((uint16_t)(((uint16_t)(x)) << FR_MTSACFR_CYCCNTMSK_SHIFT)) & FR_MTSACFR_CYCCNTMSK_MASK)
#define FR_MTSACFR_MTE_MASK                      (0x8000U)
#define FR_MTSACFR_MTE_SHIFT                     (15U)
#define FR_MTSACFR_MTE_WIDTH                     (1U)
#define FR_MTSACFR_MTE(x)                        (((uint16_t)(((uint16_t)(x)) << FR_MTSACFR_MTE_SHIFT)) & FR_MTSACFR_MTE_MASK)
/*! @} */

/*! @name MTSBCFR - MTS B Configuration Register */
/*! @{ */
#define FR_MTSBCFR_CYCCNTVAL_MASK                (0x3FU)
#define FR_MTSBCFR_CYCCNTVAL_SHIFT               (0U)
#define FR_MTSBCFR_CYCCNTVAL_WIDTH               (6U)
#define FR_MTSBCFR_CYCCNTVAL(x)                  (((uint16_t)(((uint16_t)(x)) << FR_MTSBCFR_CYCCNTVAL_SHIFT)) & FR_MTSBCFR_CYCCNTVAL_MASK)
#define FR_MTSBCFR_CYCCNTMSK_MASK                (0x3F00U)
#define FR_MTSBCFR_CYCCNTMSK_SHIFT               (8U)
#define FR_MTSBCFR_CYCCNTMSK_WIDTH               (6U)
#define FR_MTSBCFR_CYCCNTMSK(x)                  (((uint16_t)(((uint16_t)(x)) << FR_MTSBCFR_CYCCNTMSK_SHIFT)) & FR_MTSBCFR_CYCCNTMSK_MASK)
#define FR_MTSBCFR_MTE_MASK                      (0x8000U)
#define FR_MTSBCFR_MTE_SHIFT                     (15U)
#define FR_MTSBCFR_MTE_WIDTH                     (1U)
#define FR_MTSBCFR_MTE(x)                        (((uint16_t)(((uint16_t)(x)) << FR_MTSBCFR_MTE_SHIFT)) & FR_MTSBCFR_MTE_MASK)
/*! @} */

/*! @name RSBIR - Receive Shadow Buffer Index Register */
/*! @{ */
#define FR_RSBIR_RSBIDX_MASK                     (0x1FFU)
#define FR_RSBIR_RSBIDX_SHIFT                    (0U)
#define FR_RSBIR_RSBIDX_WIDTH                    (9U)
#define FR_RSBIR_RSBIDX(x)                       (((uint16_t)(((uint16_t)(x)) << FR_RSBIR_RSBIDX_SHIFT)) & FR_RSBIR_RSBIDX_MASK)
#define FR_RSBIR_SEL_MASK                        (0x3000U)
#define FR_RSBIR_SEL_SHIFT                       (12U)
#define FR_RSBIR_SEL_WIDTH                       (2U)
#define FR_RSBIR_SEL(x)                          (((uint16_t)(((uint16_t)(x)) << FR_RSBIR_SEL_SHIFT)) & FR_RSBIR_SEL_MASK)
#define FR_RSBIR_WMD_MASK                        (0x8000U)
#define FR_RSBIR_WMD_SHIFT                       (15U)
#define FR_RSBIR_WMD_WIDTH                       (1U)
#define FR_RSBIR_WMD(x)                          (((uint16_t)(((uint16_t)(x)) << FR_RSBIR_WMD_SHIFT)) & FR_RSBIR_WMD_MASK)
/*! @} */

/*! @name RFWMSR - Receive FIFO Watermark and Selection Register */
/*! @{ */
#define FR_RFWMSR_SEL_MASK                       (0x1U)
#define FR_RFWMSR_SEL_SHIFT                      (0U)
#define FR_RFWMSR_SEL_WIDTH                      (1U)
#define FR_RFWMSR_SEL(x)                         (((uint16_t)(((uint16_t)(x)) << FR_RFWMSR_SEL_SHIFT)) & FR_RFWMSR_SEL_MASK)
#define FR_RFWMSR_WM_MASK                        (0xFF00U)
#define FR_RFWMSR_WM_SHIFT                       (8U)
#define FR_RFWMSR_WM_WIDTH                       (8U)
#define FR_RFWMSR_WM(x)                          (((uint16_t)(((uint16_t)(x)) << FR_RFWMSR_WM_SHIFT)) & FR_RFWMSR_WM_MASK)
/*! @} */

/*! @name RFSIR - Receive FIFO Start Index Register */
/*! @{ */
#define FR_RFSIR_SIDX_MASK                       (0x3FFU)
#define FR_RFSIR_SIDX_SHIFT                      (0U)
#define FR_RFSIR_SIDX_WIDTH                      (10U)
#define FR_RFSIR_SIDX(x)                         (((uint16_t)(((uint16_t)(x)) << FR_RFSIR_SIDX_SHIFT)) & FR_RFSIR_SIDX_MASK)
/*! @} */

/*! @name RFDSR - Receive FIFO Depth and Size Register */
/*! @{ */
#define FR_RFDSR_ENTRY_SIZE_MASK                 (0x7FU)
#define FR_RFDSR_ENTRY_SIZE_SHIFT                (0U)
#define FR_RFDSR_ENTRY_SIZE_WIDTH                (7U)
#define FR_RFDSR_ENTRY_SIZE(x)                   (((uint16_t)(((uint16_t)(x)) << FR_RFDSR_ENTRY_SIZE_SHIFT)) & FR_RFDSR_ENTRY_SIZE_MASK)
#define FR_RFDSR_FIFO_DEPTH_MASK                 (0xFF00U)
#define FR_RFDSR_FIFO_DEPTH_SHIFT                (8U)
#define FR_RFDSR_FIFO_DEPTH_WIDTH                (8U)
#define FR_RFDSR_FIFO_DEPTH(x)                   (((uint16_t)(((uint16_t)(x)) << FR_RFDSR_FIFO_DEPTH_SHIFT)) & FR_RFDSR_FIFO_DEPTH_MASK)
/*! @} */

/*! @name RFARIR - Receive FIFO A Read Index Register */
/*! @{ */
#define FR_RFARIR_RDIDX_MASK                     (0x3FFU)
#define FR_RFARIR_RDIDX_SHIFT                    (0U)
#define FR_RFARIR_RDIDX_WIDTH                    (10U)
#define FR_RFARIR_RDIDX(x)                       (((uint16_t)(((uint16_t)(x)) << FR_RFARIR_RDIDX_SHIFT)) & FR_RFARIR_RDIDX_MASK)
/*! @} */

/*! @name RFBRIR - Receive FIFO B Read Index Register */
/*! @{ */
#define FR_RFBRIR_RDIDX_MASK                     (0x3FFU)
#define FR_RFBRIR_RDIDX_SHIFT                    (0U)
#define FR_RFBRIR_RDIDX_WIDTH                    (10U)
#define FR_RFBRIR_RDIDX(x)                       (((uint16_t)(((uint16_t)(x)) << FR_RFBRIR_RDIDX_SHIFT)) & FR_RFBRIR_RDIDX_MASK)
/*! @} */

/*! @name RFMIDAFVR - Receive FIFO Message ID Acceptance Filter Value Register */
/*! @{ */
#define FR_RFMIDAFVR_MIDAFVAL_MASK               (0xFFFFU)
#define FR_RFMIDAFVR_MIDAFVAL_SHIFT              (0U)
#define FR_RFMIDAFVR_MIDAFVAL_WIDTH              (16U)
#define FR_RFMIDAFVR_MIDAFVAL(x)                 (((uint16_t)(((uint16_t)(x)) << FR_RFMIDAFVR_MIDAFVAL_SHIFT)) & FR_RFMIDAFVR_MIDAFVAL_MASK)
/*! @} */

/*! @name RFMIDAFMR - Receive FIFO Message ID Acceptance Filter Mask Register */
/*! @{ */
#define FR_RFMIDAFMR_MIDAFMSK_MASK               (0xFFFFU)
#define FR_RFMIDAFMR_MIDAFMSK_SHIFT              (0U)
#define FR_RFMIDAFMR_MIDAFMSK_WIDTH              (16U)
#define FR_RFMIDAFMR_MIDAFMSK(x)                 (((uint16_t)(((uint16_t)(x)) << FR_RFMIDAFMR_MIDAFMSK_SHIFT)) & FR_RFMIDAFMR_MIDAFMSK_MASK)
/*! @} */

/*! @name RFFIDRFVR - Receive FIFO Frame ID Rejection Filter Value Register */
/*! @{ */
#define FR_RFFIDRFVR_FIDRFVAL_MASK               (0x7FFU)
#define FR_RFFIDRFVR_FIDRFVAL_SHIFT              (0U)
#define FR_RFFIDRFVR_FIDRFVAL_WIDTH              (11U)
#define FR_RFFIDRFVR_FIDRFVAL(x)                 (((uint16_t)(((uint16_t)(x)) << FR_RFFIDRFVR_FIDRFVAL_SHIFT)) & FR_RFFIDRFVR_FIDRFVAL_MASK)
/*! @} */

/*! @name RFFIDRFMR - Receive FIFO Frame ID Rejection Filter Mask Register */
/*! @{ */
#define FR_RFFIDRFMR_FIDRFMSK_MASK               (0x7FFU)
#define FR_RFFIDRFMR_FIDRFMSK_SHIFT              (0U)
#define FR_RFFIDRFMR_FIDRFMSK_WIDTH              (11U)
#define FR_RFFIDRFMR_FIDRFMSK(x)                 (((uint16_t)(((uint16_t)(x)) << FR_RFFIDRFMR_FIDRFMSK_SHIFT)) & FR_RFFIDRFMR_FIDRFMSK_MASK)
/*! @} */

/*! @name RFRFCFR - Receive FIFO Range Filter Configuration Register */
/*! @{ */
#define FR_RFRFCFR_SID_MASK                      (0x7FFU)
#define FR_RFRFCFR_SID_SHIFT                     (0U)
#define FR_RFRFCFR_SID_WIDTH                     (11U)
#define FR_RFRFCFR_SID(x)                        (((uint16_t)(((uint16_t)(x)) << FR_RFRFCFR_SID_SHIFT)) & FR_RFRFCFR_SID_MASK)
#define FR_RFRFCFR_SEL_MASK                      (0x3000U)
#define FR_RFRFCFR_SEL_SHIFT                     (12U)
#define FR_RFRFCFR_SEL_WIDTH                     (2U)
#define FR_RFRFCFR_SEL(x)                        (((uint16_t)(((uint16_t)(x)) << FR_RFRFCFR_SEL_SHIFT)) & FR_RFRFCFR_SEL_MASK)
#define FR_RFRFCFR_IBD_MASK                      (0x4000U)
#define FR_RFRFCFR_IBD_SHIFT                     (14U)
#define FR_RFRFCFR_IBD_WIDTH                     (1U)
#define FR_RFRFCFR_IBD(x)                        (((uint16_t)(((uint16_t)(x)) << FR_RFRFCFR_IBD_SHIFT)) & FR_RFRFCFR_IBD_MASK)
#define FR_RFRFCFR_WMD_MASK                      (0x8000U)
#define FR_RFRFCFR_WMD_SHIFT                     (15U)
#define FR_RFRFCFR_WMD_WIDTH                     (1U)
#define FR_RFRFCFR_WMD(x)                        (((uint16_t)(((uint16_t)(x)) << FR_RFRFCFR_WMD_SHIFT)) & FR_RFRFCFR_WMD_MASK)
/*! @} */

/*! @name RFRFCTR - Receive FIFO Range Filter Control Register */
/*! @{ */
#define FR_RFRFCTR_F0EN_MASK                     (0x1U)
#define FR_RFRFCTR_F0EN_SHIFT                    (0U)
#define FR_RFRFCTR_F0EN_WIDTH                    (1U)
#define FR_RFRFCTR_F0EN(x)                       (((uint16_t)(((uint16_t)(x)) << FR_RFRFCTR_F0EN_SHIFT)) & FR_RFRFCTR_F0EN_MASK)
#define FR_RFRFCTR_F1EN_MASK                     (0x2U)
#define FR_RFRFCTR_F1EN_SHIFT                    (1U)
#define FR_RFRFCTR_F1EN_WIDTH                    (1U)
#define FR_RFRFCTR_F1EN(x)                       (((uint16_t)(((uint16_t)(x)) << FR_RFRFCTR_F1EN_SHIFT)) & FR_RFRFCTR_F1EN_MASK)
#define FR_RFRFCTR_F2EN_MASK                     (0x4U)
#define FR_RFRFCTR_F2EN_SHIFT                    (2U)
#define FR_RFRFCTR_F2EN_WIDTH                    (1U)
#define FR_RFRFCTR_F2EN(x)                       (((uint16_t)(((uint16_t)(x)) << FR_RFRFCTR_F2EN_SHIFT)) & FR_RFRFCTR_F2EN_MASK)
#define FR_RFRFCTR_F3EN_MASK                     (0x8U)
#define FR_RFRFCTR_F3EN_SHIFT                    (3U)
#define FR_RFRFCTR_F3EN_WIDTH                    (1U)
#define FR_RFRFCTR_F3EN(x)                       (((uint16_t)(((uint16_t)(x)) << FR_RFRFCTR_F3EN_SHIFT)) & FR_RFRFCTR_F3EN_MASK)
#define FR_RFRFCTR_F0MD_MASK                     (0x100U)
#define FR_RFRFCTR_F0MD_SHIFT                    (8U)
#define FR_RFRFCTR_F0MD_WIDTH                    (1U)
#define FR_RFRFCTR_F0MD(x)                       (((uint16_t)(((uint16_t)(x)) << FR_RFRFCTR_F0MD_SHIFT)) & FR_RFRFCTR_F0MD_MASK)
#define FR_RFRFCTR_F1MD_MASK                     (0x200U)
#define FR_RFRFCTR_F1MD_SHIFT                    (9U)
#define FR_RFRFCTR_F1MD_WIDTH                    (1U)
#define FR_RFRFCTR_F1MD(x)                       (((uint16_t)(((uint16_t)(x)) << FR_RFRFCTR_F1MD_SHIFT)) & FR_RFRFCTR_F1MD_MASK)
#define FR_RFRFCTR_F2MD_MASK                     (0x400U)
#define FR_RFRFCTR_F2MD_SHIFT                    (10U)
#define FR_RFRFCTR_F2MD_WIDTH                    (1U)
#define FR_RFRFCTR_F2MD(x)                       (((uint16_t)(((uint16_t)(x)) << FR_RFRFCTR_F2MD_SHIFT)) & FR_RFRFCTR_F2MD_MASK)
#define FR_RFRFCTR_F3MD_MASK                     (0x800U)
#define FR_RFRFCTR_F3MD_SHIFT                    (11U)
#define FR_RFRFCTR_F3MD_WIDTH                    (1U)
#define FR_RFRFCTR_F3MD(x)                       (((uint16_t)(((uint16_t)(x)) << FR_RFRFCTR_F3MD_SHIFT)) & FR_RFRFCTR_F3MD_MASK)
/*! @} */

/*! @name LDTXSLAR - Last Dynamic Transmit Slot Channel A Register */
/*! @{ */
#define FR_LDTXSLAR_LDYNTXSLOTA_MASK             (0x7FFU)
#define FR_LDTXSLAR_LDYNTXSLOTA_SHIFT            (0U)
#define FR_LDTXSLAR_LDYNTXSLOTA_WIDTH            (11U)
#define FR_LDTXSLAR_LDYNTXSLOTA(x)               (((uint16_t)(((uint16_t)(x)) << FR_LDTXSLAR_LDYNTXSLOTA_SHIFT)) & FR_LDTXSLAR_LDYNTXSLOTA_MASK)
/*! @} */

/*! @name LDTXSLBR - Last Dynamic Transmit Slot Channel B Register */
/*! @{ */
#define FR_LDTXSLBR_LDYNTXSLOTB_MASK             (0x7FFU)
#define FR_LDTXSLBR_LDYNTXSLOTB_SHIFT            (0U)
#define FR_LDTXSLBR_LDYNTXSLOTB_WIDTH            (11U)
#define FR_LDTXSLBR_LDYNTXSLOTB(x)               (((uint16_t)(((uint16_t)(x)) << FR_LDTXSLBR_LDYNTXSLOTB_SHIFT)) & FR_LDTXSLBR_LDYNTXSLOTB_MASK)
/*! @} */

/*! @name PCR0 - Protocol Configuration Register 0 */
/*! @{ */
#define FR_PCR0_static_slot_length_MASK          (0x3FFU)
#define FR_PCR0_static_slot_length_SHIFT         (0U)
#define FR_PCR0_static_slot_length_WIDTH         (10U)
#define FR_PCR0_static_slot_length(x)            (((uint16_t)(((uint16_t)(x)) << FR_PCR0_static_slot_length_SHIFT)) & FR_PCR0_static_slot_length_MASK)
#define FR_PCR0_action_point_offset_MASK         (0xFC00U)
#define FR_PCR0_action_point_offset_SHIFT        (10U)
#define FR_PCR0_action_point_offset_WIDTH        (6U)
#define FR_PCR0_action_point_offset(x)           (((uint16_t)(((uint16_t)(x)) << FR_PCR0_action_point_offset_SHIFT)) & FR_PCR0_action_point_offset_MASK)
/*! @} */

/*! @name PCR1 - Protocol Configuration Register 1 */
/*! @{ */
#define FR_PCR1_macro_after_first_static_slot_MASK (0x3FFFU)
#define FR_PCR1_macro_after_first_static_slot_SHIFT (0U)
#define FR_PCR1_macro_after_first_static_slot_WIDTH (14U)
#define FR_PCR1_macro_after_first_static_slot(x) (((uint16_t)(((uint16_t)(x)) << FR_PCR1_macro_after_first_static_slot_SHIFT)) & FR_PCR1_macro_after_first_static_slot_MASK)
/*! @} */

/*! @name PCR2 - Protocol Configuration Register 2 */
/*! @{ */
#define FR_PCR2_number_of_static_slots_MASK      (0x3FFU)
#define FR_PCR2_number_of_static_slots_SHIFT     (0U)
#define FR_PCR2_number_of_static_slots_WIDTH     (10U)
#define FR_PCR2_number_of_static_slots(x)        (((uint16_t)(((uint16_t)(x)) << FR_PCR2_number_of_static_slots_SHIFT)) & FR_PCR2_number_of_static_slots_MASK)
#define FR_PCR2_minislot_after_action_point_MASK (0xFC00U)
#define FR_PCR2_minislot_after_action_point_SHIFT (10U)
#define FR_PCR2_minislot_after_action_point_WIDTH (6U)
#define FR_PCR2_minislot_after_action_point(x)   (((uint16_t)(((uint16_t)(x)) << FR_PCR2_minislot_after_action_point_SHIFT)) & FR_PCR2_minislot_after_action_point_MASK)
/*! @} */

/*! @name PCR3 - Protocol Configuration Register 3 */
/*! @{ */
#define FR_PCR3_coldstart_attempts_MASK          (0x1FU)
#define FR_PCR3_coldstart_attempts_SHIFT         (0U)
#define FR_PCR3_coldstart_attempts_WIDTH         (5U)
#define FR_PCR3_coldstart_attempts(x)            (((uint16_t)(((uint16_t)(x)) << FR_PCR3_coldstart_attempts_SHIFT)) & FR_PCR3_coldstart_attempts_MASK)
#define FR_PCR3_minislot_action_point_offset_MASK (0x3E0U)
#define FR_PCR3_minislot_action_point_offset_SHIFT (5U)
#define FR_PCR3_minislot_action_point_offset_WIDTH (5U)
#define FR_PCR3_minislot_action_point_offset(x)  (((uint16_t)(((uint16_t)(x)) << FR_PCR3_minislot_action_point_offset_SHIFT)) & FR_PCR3_minislot_action_point_offset_MASK)
#define FR_PCR3_wakeup_symbol_rx_low_MASK        (0xFC00U)
#define FR_PCR3_wakeup_symbol_rx_low_SHIFT       (10U)
#define FR_PCR3_wakeup_symbol_rx_low_WIDTH       (6U)
#define FR_PCR3_wakeup_symbol_rx_low(x)          (((uint16_t)(((uint16_t)(x)) << FR_PCR3_wakeup_symbol_rx_low_SHIFT)) & FR_PCR3_wakeup_symbol_rx_low_MASK)
/*! @} */

/*! @name PCR4 - Protocol Configuration Register 4 */
/*! @{ */
#define FR_PCR4_wakeup_symbol_rx_window_MASK     (0x1FFU)
#define FR_PCR4_wakeup_symbol_rx_window_SHIFT    (0U)
#define FR_PCR4_wakeup_symbol_rx_window_WIDTH    (9U)
#define FR_PCR4_wakeup_symbol_rx_window(x)       (((uint16_t)(((uint16_t)(x)) << FR_PCR4_wakeup_symbol_rx_window_SHIFT)) & FR_PCR4_wakeup_symbol_rx_window_MASK)
#define FR_PCR4_cas_rx_low_max_MASK              (0xFE00U)
#define FR_PCR4_cas_rx_low_max_SHIFT             (9U)
#define FR_PCR4_cas_rx_low_max_WIDTH             (7U)
#define FR_PCR4_cas_rx_low_max(x)                (((uint16_t)(((uint16_t)(x)) << FR_PCR4_cas_rx_low_max_SHIFT)) & FR_PCR4_cas_rx_low_max_MASK)
/*! @} */

/*! @name PCR5 - Protocol Configuration Register 5 */
/*! @{ */
#define FR_PCR5_wakeup_symbol_rx_idle_MASK       (0x3FU)
#define FR_PCR5_wakeup_symbol_rx_idle_SHIFT      (0U)
#define FR_PCR5_wakeup_symbol_rx_idle_WIDTH      (6U)
#define FR_PCR5_wakeup_symbol_rx_idle(x)         (((uint16_t)(((uint16_t)(x)) << FR_PCR5_wakeup_symbol_rx_idle_SHIFT)) & FR_PCR5_wakeup_symbol_rx_idle_MASK)
#define FR_PCR5_wakeup_symbol_tx_low_MASK        (0xFC0U)
#define FR_PCR5_wakeup_symbol_tx_low_SHIFT       (6U)
#define FR_PCR5_wakeup_symbol_tx_low_WIDTH       (6U)
#define FR_PCR5_wakeup_symbol_tx_low(x)          (((uint16_t)(((uint16_t)(x)) << FR_PCR5_wakeup_symbol_tx_low_SHIFT)) & FR_PCR5_wakeup_symbol_tx_low_MASK)
#define FR_PCR5_tss_transmitter_MASK             (0xF000U)
#define FR_PCR5_tss_transmitter_SHIFT            (12U)
#define FR_PCR5_tss_transmitter_WIDTH            (4U)
#define FR_PCR5_tss_transmitter(x)               (((uint16_t)(((uint16_t)(x)) << FR_PCR5_tss_transmitter_SHIFT)) & FR_PCR5_tss_transmitter_MASK)
/*! @} */

/*! @name PCR6 - Protocol Configuration Register 6 */
/*! @{ */
#define FR_PCR6_macro_initial_offset_a_MASK      (0x7FU)
#define FR_PCR6_macro_initial_offset_a_SHIFT     (0U)
#define FR_PCR6_macro_initial_offset_a_WIDTH     (7U)
#define FR_PCR6_macro_initial_offset_a(x)        (((uint16_t)(((uint16_t)(x)) << FR_PCR6_macro_initial_offset_a_SHIFT)) & FR_PCR6_macro_initial_offset_a_MASK)
#define FR_PCR6_symbol_window_after_action_point_MASK (0x7F80U)
#define FR_PCR6_symbol_window_after_action_point_SHIFT (7U)
#define FR_PCR6_symbol_window_after_action_point_WIDTH (8U)
#define FR_PCR6_symbol_window_after_action_point(x) (((uint16_t)(((uint16_t)(x)) << FR_PCR6_symbol_window_after_action_point_SHIFT)) & FR_PCR6_symbol_window_after_action_point_MASK)
/*! @} */

/*! @name PCR7 - Protocol Configuration Register 7 */
/*! @{ */
#define FR_PCR7_micro_per_macro_nom_half_MASK    (0x7FU)
#define FR_PCR7_micro_per_macro_nom_half_SHIFT   (0U)
#define FR_PCR7_micro_per_macro_nom_half_WIDTH   (7U)
#define FR_PCR7_micro_per_macro_nom_half(x)      (((uint16_t)(((uint16_t)(x)) << FR_PCR7_micro_per_macro_nom_half_SHIFT)) & FR_PCR7_micro_per_macro_nom_half_MASK)
#define FR_PCR7_decoding_correction_b_MASK       (0xFF80U)
#define FR_PCR7_decoding_correction_b_SHIFT      (7U)
#define FR_PCR7_decoding_correction_b_WIDTH      (9U)
#define FR_PCR7_decoding_correction_b(x)         (((uint16_t)(((uint16_t)(x)) << FR_PCR7_decoding_correction_b_SHIFT)) & FR_PCR7_decoding_correction_b_MASK)
/*! @} */

/*! @name PCR8 - Protocol Configuration Register 8 */
/*! @{ */
#define FR_PCR8_wakeup_symbol_tx_idle_MASK       (0xFFU)
#define FR_PCR8_wakeup_symbol_tx_idle_SHIFT      (0U)
#define FR_PCR8_wakeup_symbol_tx_idle_WIDTH      (8U)
#define FR_PCR8_wakeup_symbol_tx_idle(x)         (((uint16_t)(((uint16_t)(x)) << FR_PCR8_wakeup_symbol_tx_idle_SHIFT)) & FR_PCR8_wakeup_symbol_tx_idle_MASK)
#define FR_PCR8_max_without_clock_correction_passive_MASK (0xF00U)
#define FR_PCR8_max_without_clock_correction_passive_SHIFT (8U)
#define FR_PCR8_max_without_clock_correction_passive_WIDTH (4U)
#define FR_PCR8_max_without_clock_correction_passive(x) (((uint16_t)(((uint16_t)(x)) << FR_PCR8_max_without_clock_correction_passive_SHIFT)) & FR_PCR8_max_without_clock_correction_passive_MASK)
#define FR_PCR8_max_without_clock_correction_fatal_MASK (0xF000U)
#define FR_PCR8_max_without_clock_correction_fatal_SHIFT (12U)
#define FR_PCR8_max_without_clock_correction_fatal_WIDTH (4U)
#define FR_PCR8_max_without_clock_correction_fatal(x) (((uint16_t)(((uint16_t)(x)) << FR_PCR8_max_without_clock_correction_fatal_SHIFT)) & FR_PCR8_max_without_clock_correction_fatal_MASK)
/*! @} */

/*! @name PCR9 - Protocol Configuration Register 9 */
/*! @{ */
#define FR_PCR9_offset_correction_out_MASK       (0x3FFFU)
#define FR_PCR9_offset_correction_out_SHIFT      (0U)
#define FR_PCR9_offset_correction_out_WIDTH      (14U)
#define FR_PCR9_offset_correction_out(x)         (((uint16_t)(((uint16_t)(x)) << FR_PCR9_offset_correction_out_SHIFT)) & FR_PCR9_offset_correction_out_MASK)
#define FR_PCR9_symbol_window_exists_MASK        (0x4000U)
#define FR_PCR9_symbol_window_exists_SHIFT       (14U)
#define FR_PCR9_symbol_window_exists_WIDTH       (1U)
#define FR_PCR9_symbol_window_exists(x)          (((uint16_t)(((uint16_t)(x)) << FR_PCR9_symbol_window_exists_SHIFT)) & FR_PCR9_symbol_window_exists_MASK)
#define FR_PCR9_minislot_exists_MASK             (0x8000U)
#define FR_PCR9_minislot_exists_SHIFT            (15U)
#define FR_PCR9_minislot_exists_WIDTH            (1U)
#define FR_PCR9_minislot_exists(x)               (((uint16_t)(((uint16_t)(x)) << FR_PCR9_minislot_exists_SHIFT)) & FR_PCR9_minislot_exists_MASK)
/*! @} */

/*! @name PCR10 - Protocol Configuration Register 10 */
/*! @{ */
#define FR_PCR10_macro_per_cycle_MASK            (0x3FFFU)
#define FR_PCR10_macro_per_cycle_SHIFT           (0U)
#define FR_PCR10_macro_per_cycle_WIDTH           (14U)
#define FR_PCR10_macro_per_cycle(x)              (((uint16_t)(((uint16_t)(x)) << FR_PCR10_macro_per_cycle_SHIFT)) & FR_PCR10_macro_per_cycle_MASK)
#define FR_PCR10_wakeup_channel_MASK             (0x4000U)
#define FR_PCR10_wakeup_channel_SHIFT            (14U)
#define FR_PCR10_wakeup_channel_WIDTH            (1U)
#define FR_PCR10_wakeup_channel(x)               (((uint16_t)(((uint16_t)(x)) << FR_PCR10_wakeup_channel_SHIFT)) & FR_PCR10_wakeup_channel_MASK)
#define FR_PCR10_single_slot_enabled_MASK        (0x8000U)
#define FR_PCR10_single_slot_enabled_SHIFT       (15U)
#define FR_PCR10_single_slot_enabled_WIDTH       (1U)
#define FR_PCR10_single_slot_enabled(x)          (((uint16_t)(((uint16_t)(x)) << FR_PCR10_single_slot_enabled_SHIFT)) & FR_PCR10_single_slot_enabled_MASK)
/*! @} */

/*! @name PCR11 - Protocol Configuration Register 11 */
/*! @{ */
#define FR_PCR11_offset_correction_start_MASK    (0x3FFFU)
#define FR_PCR11_offset_correction_start_SHIFT   (0U)
#define FR_PCR11_offset_correction_start_WIDTH   (14U)
#define FR_PCR11_offset_correction_start(x)      (((uint16_t)(((uint16_t)(x)) << FR_PCR11_offset_correction_start_SHIFT)) & FR_PCR11_offset_correction_start_MASK)
#define FR_PCR11_key_slot_used_for_sync_MASK     (0x4000U)
#define FR_PCR11_key_slot_used_for_sync_SHIFT    (14U)
#define FR_PCR11_key_slot_used_for_sync_WIDTH    (1U)
#define FR_PCR11_key_slot_used_for_sync(x)       (((uint16_t)(((uint16_t)(x)) << FR_PCR11_key_slot_used_for_sync_SHIFT)) & FR_PCR11_key_slot_used_for_sync_MASK)
#define FR_PCR11_key_slot_used_for_startup_MASK  (0x8000U)
#define FR_PCR11_key_slot_used_for_startup_SHIFT (15U)
#define FR_PCR11_key_slot_used_for_startup_WIDTH (1U)
#define FR_PCR11_key_slot_used_for_startup(x)    (((uint16_t)(((uint16_t)(x)) << FR_PCR11_key_slot_used_for_startup_SHIFT)) & FR_PCR11_key_slot_used_for_startup_MASK)
/*! @} */

/*! @name PCR12 - Protocol Configuration Register 12 */
/*! @{ */
#define FR_PCR12_key_slot_header_crc_MASK        (0x7FFU)
#define FR_PCR12_key_slot_header_crc_SHIFT       (0U)
#define FR_PCR12_key_slot_header_crc_WIDTH       (11U)
#define FR_PCR12_key_slot_header_crc(x)          (((uint16_t)(((uint16_t)(x)) << FR_PCR12_key_slot_header_crc_SHIFT)) & FR_PCR12_key_slot_header_crc_MASK)
#define FR_PCR12_allow_passive_to_active_MASK    (0xF800U)
#define FR_PCR12_allow_passive_to_active_SHIFT   (11U)
#define FR_PCR12_allow_passive_to_active_WIDTH   (5U)
#define FR_PCR12_allow_passive_to_active(x)      (((uint16_t)(((uint16_t)(x)) << FR_PCR12_allow_passive_to_active_SHIFT)) & FR_PCR12_allow_passive_to_active_MASK)
/*! @} */

/*! @name PCR13 - Protocol Configuration Register 13 */
/*! @{ */
#define FR_PCR13_static_slot_after_action_point_MASK (0x3FFU)
#define FR_PCR13_static_slot_after_action_point_SHIFT (0U)
#define FR_PCR13_static_slot_after_action_point_WIDTH (10U)
#define FR_PCR13_static_slot_after_action_point(x) (((uint16_t)(((uint16_t)(x)) << FR_PCR13_static_slot_after_action_point_SHIFT)) & FR_PCR13_static_slot_after_action_point_MASK)
#define FR_PCR13_first_minislot_action_point_offset_MASK (0xFC00U)
#define FR_PCR13_first_minislot_action_point_offset_SHIFT (10U)
#define FR_PCR13_first_minislot_action_point_offset_WIDTH (6U)
#define FR_PCR13_first_minislot_action_point_offset(x) (((uint16_t)(((uint16_t)(x)) << FR_PCR13_first_minislot_action_point_offset_SHIFT)) & FR_PCR13_first_minislot_action_point_offset_MASK)
/*! @} */

/*! @name PCR14 - Protocol Configuration Register 14 */
/*! @{ */
#define FR_PCR14_listen_timeout_MASK             (0x1FU)
#define FR_PCR14_listen_timeout_SHIFT            (0U)
#define FR_PCR14_listen_timeout_WIDTH            (5U)
#define FR_PCR14_listen_timeout(x)               (((uint16_t)(((uint16_t)(x)) << FR_PCR14_listen_timeout_SHIFT)) & FR_PCR14_listen_timeout_MASK)
#define FR_PCR14_rate_correction_out_MASK        (0xFFE0U)
#define FR_PCR14_rate_correction_out_SHIFT       (5U)
#define FR_PCR14_rate_correction_out_WIDTH       (11U)
#define FR_PCR14_rate_correction_out(x)          (((uint16_t)(((uint16_t)(x)) << FR_PCR14_rate_correction_out_SHIFT)) & FR_PCR14_rate_correction_out_MASK)
/*! @} */

/*! @name PCR15 - Protocol Configuration Register 15 */
/*! @{ */
#define FR_PCR15_listen_timeout_MASK             (0xFFFFU)
#define FR_PCR15_listen_timeout_SHIFT            (0U)
#define FR_PCR15_listen_timeout_WIDTH            (16U)
#define FR_PCR15_listen_timeout(x)               (((uint16_t)(((uint16_t)(x)) << FR_PCR15_listen_timeout_SHIFT)) & FR_PCR15_listen_timeout_MASK)
/*! @} */

/*! @name PCR16 - Protocol Configuration Register 16 */
/*! @{ */
#define FR_PCR16_noise_listen_timeout_MASK       (0x1FFU)
#define FR_PCR16_noise_listen_timeout_SHIFT      (0U)
#define FR_PCR16_noise_listen_timeout_WIDTH      (9U)
#define FR_PCR16_noise_listen_timeout(x)         (((uint16_t)(((uint16_t)(x)) << FR_PCR16_noise_listen_timeout_SHIFT)) & FR_PCR16_noise_listen_timeout_MASK)
#define FR_PCR16_macro_initial_offset_b_MASK     (0xFE00U)
#define FR_PCR16_macro_initial_offset_b_SHIFT    (9U)
#define FR_PCR16_macro_initial_offset_b_WIDTH    (7U)
#define FR_PCR16_macro_initial_offset_b(x)       (((uint16_t)(((uint16_t)(x)) << FR_PCR16_macro_initial_offset_b_SHIFT)) & FR_PCR16_macro_initial_offset_b_MASK)
/*! @} */

/*! @name PCR17 - Protocol Configuration Register 17 */
/*! @{ */
#define FR_PCR17_noise_listen_timeout_MASK       (0xFFFFU)
#define FR_PCR17_noise_listen_timeout_SHIFT      (0U)
#define FR_PCR17_noise_listen_timeout_WIDTH      (16U)
#define FR_PCR17_noise_listen_timeout(x)         (((uint16_t)(((uint16_t)(x)) << FR_PCR17_noise_listen_timeout_SHIFT)) & FR_PCR17_noise_listen_timeout_MASK)
/*! @} */

/*! @name PCR18 - Protocol Configuration Register 18 */
/*! @{ */
#define FR_PCR18_key_slot_id_MASK                (0x3FFU)
#define FR_PCR18_key_slot_id_SHIFT               (0U)
#define FR_PCR18_key_slot_id_WIDTH               (10U)
#define FR_PCR18_key_slot_id(x)                  (((uint16_t)(((uint16_t)(x)) << FR_PCR18_key_slot_id_SHIFT)) & FR_PCR18_key_slot_id_MASK)
#define FR_PCR18_wakeup_pattern_MASK             (0xFC00U)
#define FR_PCR18_wakeup_pattern_SHIFT            (10U)
#define FR_PCR18_wakeup_pattern_WIDTH            (6U)
#define FR_PCR18_wakeup_pattern(x)               (((uint16_t)(((uint16_t)(x)) << FR_PCR18_wakeup_pattern_SHIFT)) & FR_PCR18_wakeup_pattern_MASK)
/*! @} */

/*! @name PCR19 - Protocol Configuration Register 19 */
/*! @{ */
#define FR_PCR19_payload_length_static_MASK      (0x7FU)
#define FR_PCR19_payload_length_static_SHIFT     (0U)
#define FR_PCR19_payload_length_static_WIDTH     (7U)
#define FR_PCR19_payload_length_static(x)        (((uint16_t)(((uint16_t)(x)) << FR_PCR19_payload_length_static_SHIFT)) & FR_PCR19_payload_length_static_MASK)
#define FR_PCR19_decoding_correction_a_MASK      (0xFF80U)
#define FR_PCR19_decoding_correction_a_SHIFT     (7U)
#define FR_PCR19_decoding_correction_a_WIDTH     (9U)
#define FR_PCR19_decoding_correction_a(x)        (((uint16_t)(((uint16_t)(x)) << FR_PCR19_decoding_correction_a_SHIFT)) & FR_PCR19_decoding_correction_a_MASK)
/*! @} */

/*! @name PCR20 - Protocol Configuration Register 20 */
/*! @{ */
#define FR_PCR20_micro_initial_offset_a_MASK     (0xFFU)
#define FR_PCR20_micro_initial_offset_a_SHIFT    (0U)
#define FR_PCR20_micro_initial_offset_a_WIDTH    (8U)
#define FR_PCR20_micro_initial_offset_a(x)       (((uint16_t)(((uint16_t)(x)) << FR_PCR20_micro_initial_offset_a_SHIFT)) & FR_PCR20_micro_initial_offset_a_MASK)
#define FR_PCR20_micro_initial_offset_b_MASK     (0xFF00U)
#define FR_PCR20_micro_initial_offset_b_SHIFT    (8U)
#define FR_PCR20_micro_initial_offset_b_WIDTH    (8U)
#define FR_PCR20_micro_initial_offset_b(x)       (((uint16_t)(((uint16_t)(x)) << FR_PCR20_micro_initial_offset_b_SHIFT)) & FR_PCR20_micro_initial_offset_b_MASK)
/*! @} */

/*! @name PCR21 - Protocol Configuration Register 21 */
/*! @{ */
#define FR_PCR21_latest_tx_MASK                  (0x1FFFU)
#define FR_PCR21_latest_tx_SHIFT                 (0U)
#define FR_PCR21_latest_tx_WIDTH                 (13U)
#define FR_PCR21_latest_tx(x)                    (((uint16_t)(((uint16_t)(x)) << FR_PCR21_latest_tx_SHIFT)) & FR_PCR21_latest_tx_MASK)
#define FR_PCR21_extern_rate_correction_MASK     (0xE000U)
#define FR_PCR21_extern_rate_correction_SHIFT    (13U)
#define FR_PCR21_extern_rate_correction_WIDTH    (3U)
#define FR_PCR21_extern_rate_correction(x)       (((uint16_t)(((uint16_t)(x)) << FR_PCR21_extern_rate_correction_SHIFT)) & FR_PCR21_extern_rate_correction_MASK)
/*! @} */

/*! @name PCR22 - Protocol Configuration Register 22 */
/*! @{ */
#define FR_PCR22_micro_per_cycle_MASK            (0xFU)
#define FR_PCR22_micro_per_cycle_SHIFT           (0U)
#define FR_PCR22_micro_per_cycle_WIDTH           (4U)
#define FR_PCR22_micro_per_cycle(x)              (((uint16_t)(((uint16_t)(x)) << FR_PCR22_micro_per_cycle_SHIFT)) & FR_PCR22_micro_per_cycle_MASK)
#define FR_PCR22_comp_accepted_startup_range_a_MASK (0x7FF0U)
#define FR_PCR22_comp_accepted_startup_range_a_SHIFT (4U)
#define FR_PCR22_comp_accepted_startup_range_a_WIDTH (11U)
#define FR_PCR22_comp_accepted_startup_range_a(x) (((uint16_t)(((uint16_t)(x)) << FR_PCR22_comp_accepted_startup_range_a_SHIFT)) & FR_PCR22_comp_accepted_startup_range_a_MASK)
/*! @} */

/*! @name PCR23 - Protocol Configuration Register 23 */
/*! @{ */
#define FR_PCR23_micro_per_cycle_MASK            (0xFFFFU)
#define FR_PCR23_micro_per_cycle_SHIFT           (0U)
#define FR_PCR23_micro_per_cycle_WIDTH           (16U)
#define FR_PCR23_micro_per_cycle(x)              (((uint16_t)(((uint16_t)(x)) << FR_PCR23_micro_per_cycle_SHIFT)) & FR_PCR23_micro_per_cycle_MASK)
/*! @} */

/*! @name PCR24 - Protocol Configuration Register 24 */
/*! @{ */
#define FR_PCR24_micro_per_cycle_min_MASK        (0xFU)
#define FR_PCR24_micro_per_cycle_min_SHIFT       (0U)
#define FR_PCR24_micro_per_cycle_min_WIDTH       (4U)
#define FR_PCR24_micro_per_cycle_min(x)          (((uint16_t)(((uint16_t)(x)) << FR_PCR24_micro_per_cycle_min_SHIFT)) & FR_PCR24_micro_per_cycle_min_MASK)
#define FR_PCR24_max_payload_length_dynamic_MASK (0x7F0U)
#define FR_PCR24_max_payload_length_dynamic_SHIFT (4U)
#define FR_PCR24_max_payload_length_dynamic_WIDTH (7U)
#define FR_PCR24_max_payload_length_dynamic(x)   (((uint16_t)(((uint16_t)(x)) << FR_PCR24_max_payload_length_dynamic_SHIFT)) & FR_PCR24_max_payload_length_dynamic_MASK)
#define FR_PCR24_cluster_drift_damping_MASK      (0xF800U)
#define FR_PCR24_cluster_drift_damping_SHIFT     (11U)
#define FR_PCR24_cluster_drift_damping_WIDTH     (5U)
#define FR_PCR24_cluster_drift_damping(x)        (((uint16_t)(((uint16_t)(x)) << FR_PCR24_cluster_drift_damping_SHIFT)) & FR_PCR24_cluster_drift_damping_MASK)
/*! @} */

/*! @name PCR25 - Protocol Configuration Register 25 */
/*! @{ */
#define FR_PCR25_micro_per_cycle_min_MASK        (0xFFFFU)
#define FR_PCR25_micro_per_cycle_min_SHIFT       (0U)
#define FR_PCR25_micro_per_cycle_min_WIDTH       (16U)
#define FR_PCR25_micro_per_cycle_min(x)          (((uint16_t)(((uint16_t)(x)) << FR_PCR25_micro_per_cycle_min_SHIFT)) & FR_PCR25_micro_per_cycle_min_MASK)
/*! @} */

/*! @name PCR26 - Protocol Configuration Register 26 */
/*! @{ */
#define FR_PCR26_micro_per_cycle_max_MASK        (0xFU)
#define FR_PCR26_micro_per_cycle_max_SHIFT       (0U)
#define FR_PCR26_micro_per_cycle_max_WIDTH       (4U)
#define FR_PCR26_micro_per_cycle_max(x)          (((uint16_t)(((uint16_t)(x)) << FR_PCR26_micro_per_cycle_max_SHIFT)) & FR_PCR26_micro_per_cycle_max_MASK)
#define FR_PCR26_comp_accepted_startup_range_b_MASK (0x7FF0U)
#define FR_PCR26_comp_accepted_startup_range_b_SHIFT (4U)
#define FR_PCR26_comp_accepted_startup_range_b_WIDTH (11U)
#define FR_PCR26_comp_accepted_startup_range_b(x) (((uint16_t)(((uint16_t)(x)) << FR_PCR26_comp_accepted_startup_range_b_SHIFT)) & FR_PCR26_comp_accepted_startup_range_b_MASK)
#define FR_PCR26_allow_halt_due_to_clock_MASK    (0x8000U)
#define FR_PCR26_allow_halt_due_to_clock_SHIFT   (15U)
#define FR_PCR26_allow_halt_due_to_clock_WIDTH   (1U)
#define FR_PCR26_allow_halt_due_to_clock(x)      (((uint16_t)(((uint16_t)(x)) << FR_PCR26_allow_halt_due_to_clock_SHIFT)) & FR_PCR26_allow_halt_due_to_clock_MASK)
/*! @} */

/*! @name PCR27 - Protocol Configuration Register 27 */
/*! @{ */
#define FR_PCR27_micro_per_cycle_max_MASK        (0xFFFFU)
#define FR_PCR27_micro_per_cycle_max_SHIFT       (0U)
#define FR_PCR27_micro_per_cycle_max_WIDTH       (16U)
#define FR_PCR27_micro_per_cycle_max(x)          (((uint16_t)(((uint16_t)(x)) << FR_PCR27_micro_per_cycle_max_SHIFT)) & FR_PCR27_micro_per_cycle_max_MASK)
/*! @} */

/*! @name PCR28 - Protocol Configuration Register 28 */
/*! @{ */
#define FR_PCR28_macro_after_offset_correction_MASK (0x3FFFU)
#define FR_PCR28_macro_after_offset_correction_SHIFT (0U)
#define FR_PCR28_macro_after_offset_correction_WIDTH (14U)
#define FR_PCR28_macro_after_offset_correction(x) (((uint16_t)(((uint16_t)(x)) << FR_PCR28_macro_after_offset_correction_SHIFT)) & FR_PCR28_macro_after_offset_correction_MASK)
#define FR_PCR28_dynamic_slot_idle_phase_MASK    (0xC000U)
#define FR_PCR28_dynamic_slot_idle_phase_SHIFT   (14U)
#define FR_PCR28_dynamic_slot_idle_phase_WIDTH   (2U)
#define FR_PCR28_dynamic_slot_idle_phase(x)      (((uint16_t)(((uint16_t)(x)) << FR_PCR28_dynamic_slot_idle_phase_SHIFT)) & FR_PCR28_dynamic_slot_idle_phase_MASK)
/*! @} */

/*! @name PCR29 - Protocol Configuration Register 29 */
/*! @{ */
#define FR_PCR29_minislots_max_MASK              (0x1FFFU)
#define FR_PCR29_minislots_max_SHIFT             (0U)
#define FR_PCR29_minislots_max_WIDTH             (13U)
#define FR_PCR29_minislots_max(x)                (((uint16_t)(((uint16_t)(x)) << FR_PCR29_minislots_max_SHIFT)) & FR_PCR29_minislots_max_MASK)
#define FR_PCR29_extern_offset_correction_MASK   (0xE000U)
#define FR_PCR29_extern_offset_correction_SHIFT  (13U)
#define FR_PCR29_extern_offset_correction_WIDTH  (3U)
#define FR_PCR29_extern_offset_correction(x)     (((uint16_t)(((uint16_t)(x)) << FR_PCR29_extern_offset_correction_SHIFT)) & FR_PCR29_extern_offset_correction_MASK)
/*! @} */

/*! @name PCR30 - Protocol Configuration Register 30 */
/*! @{ */
#define FR_PCR30_sync_node_max_MASK              (0xFU)
#define FR_PCR30_sync_node_max_SHIFT             (0U)
#define FR_PCR30_sync_node_max_WIDTH             (4U)
#define FR_PCR30_sync_node_max(x)                (((uint16_t)(((uint16_t)(x)) << FR_PCR30_sync_node_max_SHIFT)) & FR_PCR30_sync_node_max_MASK)
/*! @} */

/*! @name STPWHR - StopWatch Count High Register */
/*! @{ */
#define FR_STPWHR_STPW_S_H_MASK                  (0xFFFFU)
#define FR_STPWHR_STPW_S_H_SHIFT                 (0U)
#define FR_STPWHR_STPW_S_H_WIDTH                 (16U)
#define FR_STPWHR_STPW_S_H(x)                    (((uint16_t)(((uint16_t)(x)) << FR_STPWHR_STPW_S_H_SHIFT)) & FR_STPWHR_STPW_S_H_MASK)
/*! @} */

/*! @name STPWLR - Stop Watch Count Low Register */
/*! @{ */
#define FR_STPWLR_STPW_S_L_MASK                  (0xFFFFU)
#define FR_STPWLR_STPW_S_L_SHIFT                 (0U)
#define FR_STPWLR_STPW_S_L_WIDTH                 (16U)
#define FR_STPWLR_STPW_S_L(x)                    (((uint16_t)(((uint16_t)(x)) << FR_STPWLR_STPW_S_L_SHIFT)) & FR_STPWLR_STPW_S_L_MASK)
/*! @} */

/*! @name PEOER - Protocol Event Output Enable and StopWatch Control Register */
/*! @{ */
#define FR_PEOER_CYC_EE_MASK                     (0x1U)
#define FR_PEOER_CYC_EE_SHIFT                    (0U)
#define FR_PEOER_CYC_EE_WIDTH                    (1U)
#define FR_PEOER_CYC_EE(x)                       (((uint16_t)(((uint16_t)(x)) << FR_PEOER_CYC_EE_SHIFT)) & FR_PEOER_CYC_EE_MASK)
#define FR_PEOER_TIM1_EE_MASK                    (0x2U)
#define FR_PEOER_TIM1_EE_SHIFT                   (1U)
#define FR_PEOER_TIM1_EE_WIDTH                   (1U)
#define FR_PEOER_TIM1_EE(x)                      (((uint16_t)(((uint16_t)(x)) << FR_PEOER_TIM1_EE_SHIFT)) & FR_PEOER_TIM1_EE_MASK)
#define FR_PEOER_TIM2_EE_MASK                    (0x4U)
#define FR_PEOER_TIM2_EE_SHIFT                   (2U)
#define FR_PEOER_TIM2_EE_WIDTH                   (1U)
#define FR_PEOER_TIM2_EE(x)                      (((uint16_t)(((uint16_t)(x)) << FR_PEOER_TIM2_EE_SHIFT)) & FR_PEOER_TIM2_EE_MASK)
#define FR_PEOER_STPW_EN_MASK                    (0x100U)
#define FR_PEOER_STPW_EN_SHIFT                   (8U)
#define FR_PEOER_STPW_EN_WIDTH                   (1U)
#define FR_PEOER_STPW_EN(x)                      (((uint16_t)(((uint16_t)(x)) << FR_PEOER_STPW_EN_SHIFT)) & FR_PEOER_STPW_EN_MASK)
/*! @} */

/*! @name RFSDOR - Receive FIFO Start Data Offset Register */
/*! @{ */
#define FR_RFSDOR_SDO_MASK                       (0xFFFFU)
#define FR_RFSDOR_SDO_SHIFT                      (0U)
#define FR_RFSDOR_SDO_WIDTH                      (16U)
#define FR_RFSDOR_SDO(x)                         (((uint16_t)(((uint16_t)(x)) << FR_RFSDOR_SDO_SHIFT)) & FR_RFSDOR_SDO_MASK)
/*! @} */

/*! @name RFSYMBADHR - Receive FIFO System Memory Base Address High Register */
/*! @{ */
#define FR_RFSYMBADHR_SMBA_MASK                  (0xFFFFU)
#define FR_RFSYMBADHR_SMBA_SHIFT                 (0U)
#define FR_RFSYMBADHR_SMBA_WIDTH                 (16U)
#define FR_RFSYMBADHR_SMBA(x)                    (((uint16_t)(((uint16_t)(x)) << FR_RFSYMBADHR_SMBA_SHIFT)) & FR_RFSYMBADHR_SMBA_MASK)
/*! @} */

/*! @name RFSYMBADLR - Receive FIFO System Memory Base Address Low Register */
/*! @{ */
#define FR_RFSYMBADLR_SMBA_MASK                  (0xFFF0U)
#define FR_RFSYMBADLR_SMBA_SHIFT                 (4U)
#define FR_RFSYMBADLR_SMBA_WIDTH                 (12U)
#define FR_RFSYMBADLR_SMBA(x)                    (((uint16_t)(((uint16_t)(x)) << FR_RFSYMBADLR_SMBA_SHIFT)) & FR_RFSYMBADLR_SMBA_MASK)
/*! @} */

/*! @name RFPTR - Receive FIFO Periodic Timer Register */
/*! @{ */
#define FR_RFPTR_PTD_MASK                        (0x3FFFU)
#define FR_RFPTR_PTD_SHIFT                       (0U)
#define FR_RFPTR_PTD_WIDTH                       (14U)
#define FR_RFPTR_PTD(x)                          (((uint16_t)(((uint16_t)(x)) << FR_RFPTR_PTD_SHIFT)) & FR_RFPTR_PTD_MASK)
/*! @} */

/*! @name RFFLPCR - Receive FIFO Fill Level and POP Count Register */
/*! @{ */
#define FR_RFFLPCR_FLA_or_PCA_MASK               (0xFFU)
#define FR_RFFLPCR_FLA_or_PCA_SHIFT              (0U)
#define FR_RFFLPCR_FLA_or_PCA_WIDTH              (8U)
#define FR_RFFLPCR_FLA_or_PCA(x)                 (((uint16_t)(((uint16_t)(x)) << FR_RFFLPCR_FLA_or_PCA_SHIFT)) & FR_RFFLPCR_FLA_or_PCA_MASK)
#define FR_RFFLPCR_FLB_or_PCB_MASK               (0xFF00U)
#define FR_RFFLPCR_FLB_or_PCB_SHIFT              (8U)
#define FR_RFFLPCR_FLB_or_PCB_WIDTH              (8U)
#define FR_RFFLPCR_FLB_or_PCB(x)                 (((uint16_t)(((uint16_t)(x)) << FR_RFFLPCR_FLB_or_PCB_SHIFT)) & FR_RFFLPCR_FLB_or_PCB_MASK)
/*! @} */

/*! @name EEIFER - ECC Error Interrupt Flag and Enable Register */
/*! @{ */
#define FR_EEIFER_DRCE_IE_MASK                   (0x1U)
#define FR_EEIFER_DRCE_IE_SHIFT                  (0U)
#define FR_EEIFER_DRCE_IE_WIDTH                  (1U)
#define FR_EEIFER_DRCE_IE(x)                     (((uint16_t)(((uint16_t)(x)) << FR_EEIFER_DRCE_IE_SHIFT)) & FR_EEIFER_DRCE_IE_MASK)
#define FR_EEIFER_DRNE_IE_MASK                   (0x2U)
#define FR_EEIFER_DRNE_IE_SHIFT                  (1U)
#define FR_EEIFER_DRNE_IE_WIDTH                  (1U)
#define FR_EEIFER_DRNE_IE(x)                     (((uint16_t)(((uint16_t)(x)) << FR_EEIFER_DRNE_IE_SHIFT)) & FR_EEIFER_DRNE_IE_MASK)
#define FR_EEIFER_LRCE_IE_MASK                   (0x4U)
#define FR_EEIFER_LRCE_IE_SHIFT                  (2U)
#define FR_EEIFER_LRCE_IE_WIDTH                  (1U)
#define FR_EEIFER_LRCE_IE(x)                     (((uint16_t)(((uint16_t)(x)) << FR_EEIFER_LRCE_IE_SHIFT)) & FR_EEIFER_LRCE_IE_MASK)
#define FR_EEIFER_LRNE_IE_MASK                   (0x8U)
#define FR_EEIFER_LRNE_IE_SHIFT                  (3U)
#define FR_EEIFER_LRNE_IE_WIDTH                  (1U)
#define FR_EEIFER_LRNE_IE(x)                     (((uint16_t)(((uint16_t)(x)) << FR_EEIFER_LRNE_IE_SHIFT)) & FR_EEIFER_LRNE_IE_MASK)
#define FR_EEIFER_DRCE_IF_MASK                   (0x100U)
#define FR_EEIFER_DRCE_IF_SHIFT                  (8U)
#define FR_EEIFER_DRCE_IF_WIDTH                  (1U)
#define FR_EEIFER_DRCE_IF(x)                     (((uint16_t)(((uint16_t)(x)) << FR_EEIFER_DRCE_IF_SHIFT)) & FR_EEIFER_DRCE_IF_MASK)
#define FR_EEIFER_DRNE_IF_MASK                   (0x200U)
#define FR_EEIFER_DRNE_IF_SHIFT                  (9U)
#define FR_EEIFER_DRNE_IF_WIDTH                  (1U)
#define FR_EEIFER_DRNE_IF(x)                     (((uint16_t)(((uint16_t)(x)) << FR_EEIFER_DRNE_IF_SHIFT)) & FR_EEIFER_DRNE_IF_MASK)
#define FR_EEIFER_LRCE_IF_MASK                   (0x400U)
#define FR_EEIFER_LRCE_IF_SHIFT                  (10U)
#define FR_EEIFER_LRCE_IF_WIDTH                  (1U)
#define FR_EEIFER_LRCE_IF(x)                     (((uint16_t)(((uint16_t)(x)) << FR_EEIFER_LRCE_IF_SHIFT)) & FR_EEIFER_LRCE_IF_MASK)
#define FR_EEIFER_LRNE_IF_MASK                   (0x800U)
#define FR_EEIFER_LRNE_IF_SHIFT                  (11U)
#define FR_EEIFER_LRNE_IF_WIDTH                  (1U)
#define FR_EEIFER_LRNE_IF(x)                     (((uint16_t)(((uint16_t)(x)) << FR_EEIFER_LRNE_IF_SHIFT)) & FR_EEIFER_LRNE_IF_MASK)
#define FR_EEIFER_DRCE_OF_MASK                   (0x1000U)
#define FR_EEIFER_DRCE_OF_SHIFT                  (12U)
#define FR_EEIFER_DRCE_OF_WIDTH                  (1U)
#define FR_EEIFER_DRCE_OF(x)                     (((uint16_t)(((uint16_t)(x)) << FR_EEIFER_DRCE_OF_SHIFT)) & FR_EEIFER_DRCE_OF_MASK)
#define FR_EEIFER_DRNE_OF_MASK                   (0x2000U)
#define FR_EEIFER_DRNE_OF_SHIFT                  (13U)
#define FR_EEIFER_DRNE_OF_WIDTH                  (1U)
#define FR_EEIFER_DRNE_OF(x)                     (((uint16_t)(((uint16_t)(x)) << FR_EEIFER_DRNE_OF_SHIFT)) & FR_EEIFER_DRNE_OF_MASK)
#define FR_EEIFER_LRCE_OF_MASK                   (0x4000U)
#define FR_EEIFER_LRCE_OF_SHIFT                  (14U)
#define FR_EEIFER_LRCE_OF_WIDTH                  (1U)
#define FR_EEIFER_LRCE_OF(x)                     (((uint16_t)(((uint16_t)(x)) << FR_EEIFER_LRCE_OF_SHIFT)) & FR_EEIFER_LRCE_OF_MASK)
#define FR_EEIFER_LRNE_OF_MASK                   (0x8000U)
#define FR_EEIFER_LRNE_OF_SHIFT                  (15U)
#define FR_EEIFER_LRNE_OF_WIDTH                  (1U)
#define FR_EEIFER_LRNE_OF(x)                     (((uint16_t)(((uint16_t)(x)) << FR_EEIFER_LRNE_OF_SHIFT)) & FR_EEIFER_LRNE_OF_MASK)
/*! @} */

/*! @name EERICR - ECC Error Report and Injection Control Register */
/*! @{ */
#define FR_EERICR_EIE_MASK                       (0x1U)
#define FR_EERICR_EIE_SHIFT                      (0U)
#define FR_EERICR_EIE_WIDTH                      (1U)
#define FR_EERICR_EIE(x)                         (((uint16_t)(((uint16_t)(x)) << FR_EERICR_EIE_SHIFT)) & FR_EERICR_EIE_MASK)
#define FR_EERICR_EIM_MASK                       (0x2U)
#define FR_EERICR_EIM_SHIFT                      (1U)
#define FR_EERICR_EIM_WIDTH                      (1U)
#define FR_EERICR_EIM(x)                         (((uint16_t)(((uint16_t)(x)) << FR_EERICR_EIM_SHIFT)) & FR_EERICR_EIM_MASK)
#define FR_EERICR_ERM_MASK                       (0x10U)
#define FR_EERICR_ERM_SHIFT                      (4U)
#define FR_EERICR_ERM_WIDTH                      (1U)
#define FR_EERICR_ERM(x)                         (((uint16_t)(((uint16_t)(x)) << FR_EERICR_ERM_SHIFT)) & FR_EERICR_ERM_MASK)
#define FR_EERICR_ERS_MASK                       (0x300U)
#define FR_EERICR_ERS_SHIFT                      (8U)
#define FR_EERICR_ERS_WIDTH                      (2U)
#define FR_EERICR_ERS(x)                         (((uint16_t)(((uint16_t)(x)) << FR_EERICR_ERS_SHIFT)) & FR_EERICR_ERS_MASK)
#define FR_EERICR_BSY_MASK                       (0x8000U)
#define FR_EERICR_BSY_SHIFT                      (15U)
#define FR_EERICR_BSY_WIDTH                      (1U)
#define FR_EERICR_BSY(x)                         (((uint16_t)(((uint16_t)(x)) << FR_EERICR_BSY_SHIFT)) & FR_EERICR_BSY_MASK)
/*! @} */

/*! @name EERAR - ECC Error Report Address Register */
/*! @{ */
#define FR_EERAR_ADDR_MASK                       (0xFFFU)
#define FR_EERAR_ADDR_SHIFT                      (0U)
#define FR_EERAR_ADDR_WIDTH                      (12U)
#define FR_EERAR_ADDR(x)                         (((uint16_t)(((uint16_t)(x)) << FR_EERAR_ADDR_SHIFT)) & FR_EERAR_ADDR_MASK)
#define FR_EERAR_BANK_MASK                       (0x7000U)
#define FR_EERAR_BANK_SHIFT                      (12U)
#define FR_EERAR_BANK_WIDTH                      (3U)
#define FR_EERAR_BANK(x)                         (((uint16_t)(((uint16_t)(x)) << FR_EERAR_BANK_SHIFT)) & FR_EERAR_BANK_MASK)
#define FR_EERAR_MID_MASK                        (0x8000U)
#define FR_EERAR_MID_SHIFT                       (15U)
#define FR_EERAR_MID_WIDTH                       (1U)
#define FR_EERAR_MID(x)                          (((uint16_t)(((uint16_t)(x)) << FR_EERAR_MID_SHIFT)) & FR_EERAR_MID_MASK)
/*! @} */

/*! @name EERDR - ECC Error Report Data Register */
/*! @{ */
#define FR_EERDR_DATA_MASK                       (0xFFFFU)
#define FR_EERDR_DATA_SHIFT                      (0U)
#define FR_EERDR_DATA_WIDTH                      (16U)
#define FR_EERDR_DATA(x)                         (((uint16_t)(((uint16_t)(x)) << FR_EERDR_DATA_SHIFT)) & FR_EERDR_DATA_MASK)
/*! @} */

/*! @name EERCR - ECC Error Report Code Register */
/*! @{ */
#define FR_EERCR_CODE_MASK                       (0x1FU)
#define FR_EERCR_CODE_SHIFT                      (0U)
#define FR_EERCR_CODE_WIDTH                      (5U)
#define FR_EERCR_CODE(x)                         (((uint16_t)(((uint16_t)(x)) << FR_EERCR_CODE_SHIFT)) & FR_EERCR_CODE_MASK)
/*! @} */

/*! @name EEIAR - ECC Error Injection Address Register */
/*! @{ */
#define FR_EEIAR_ADDR_MASK                       (0xFFFU)
#define FR_EEIAR_ADDR_SHIFT                      (0U)
#define FR_EEIAR_ADDR_WIDTH                      (12U)
#define FR_EEIAR_ADDR(x)                         (((uint16_t)(((uint16_t)(x)) << FR_EEIAR_ADDR_SHIFT)) & FR_EEIAR_ADDR_MASK)
#define FR_EEIAR_BANK_MASK                       (0x7000U)
#define FR_EEIAR_BANK_SHIFT                      (12U)
#define FR_EEIAR_BANK_WIDTH                      (3U)
#define FR_EEIAR_BANK(x)                         (((uint16_t)(((uint16_t)(x)) << FR_EEIAR_BANK_SHIFT)) & FR_EEIAR_BANK_MASK)
#define FR_EEIAR_MID_MASK                        (0x8000U)
#define FR_EEIAR_MID_SHIFT                       (15U)
#define FR_EEIAR_MID_WIDTH                       (1U)
#define FR_EEIAR_MID(x)                          (((uint16_t)(((uint16_t)(x)) << FR_EEIAR_MID_SHIFT)) & FR_EEIAR_MID_MASK)
/*! @} */

/*! @name EEIDR - ECC Error Injection Data Register */
/*! @{ */
#define FR_EEIDR_DATA_MASK                       (0xFFFFU)
#define FR_EEIDR_DATA_SHIFT                      (0U)
#define FR_EEIDR_DATA_WIDTH                      (16U)
#define FR_EEIDR_DATA(x)                         (((uint16_t)(((uint16_t)(x)) << FR_EEIDR_DATA_SHIFT)) & FR_EEIDR_DATA_MASK)
/*! @} */

/*! @name EEICR - ECC Error Injection Code Register */
/*! @{ */
#define FR_EEICR_CODE_MASK                       (0x1FU)
#define FR_EEICR_CODE_SHIFT                      (0U)
#define FR_EEICR_CODE_WIDTH                      (5U)
#define FR_EEICR_CODE(x)                         (((uint16_t)(((uint16_t)(x)) << FR_EEICR_CODE_SHIFT)) & FR_EEICR_CODE_MASK)
/*! @} */

/*! @name CCSR - Message Buffer Configuration Control Status Register */
/*! @{ */
#define FR_CCSR_MBIF_MASK                        (0x1U)
#define FR_CCSR_MBIF_SHIFT                       (0U)
#define FR_CCSR_MBIF_WIDTH                       (1U)
#define FR_CCSR_MBIF(x)                          (((uint16_t)(((uint16_t)(x)) << FR_CCSR_MBIF_SHIFT)) & FR_CCSR_MBIF_MASK)
#define FR_CCSR_LCKS_MASK                        (0x2U)
#define FR_CCSR_LCKS_SHIFT                       (1U)
#define FR_CCSR_LCKS_WIDTH                       (1U)
#define FR_CCSR_LCKS(x)                          (((uint16_t)(((uint16_t)(x)) << FR_CCSR_LCKS_SHIFT)) & FR_CCSR_LCKS_MASK)
#define FR_CCSR_EDS_MASK                         (0x4U)
#define FR_CCSR_EDS_SHIFT                        (2U)
#define FR_CCSR_EDS_WIDTH                        (1U)
#define FR_CCSR_EDS(x)                           (((uint16_t)(((uint16_t)(x)) << FR_CCSR_EDS_SHIFT)) & FR_CCSR_EDS_MASK)
#define FR_CCSR_DVAL_MASK                        (0x8U)
#define FR_CCSR_DVAL_SHIFT                       (3U)
#define FR_CCSR_DVAL_WIDTH                       (1U)
#define FR_CCSR_DVAL(x)                          (((uint16_t)(((uint16_t)(x)) << FR_CCSR_DVAL_SHIFT)) & FR_CCSR_DVAL_MASK)
#define FR_CCSR_DUP_MASK                         (0x10U)
#define FR_CCSR_DUP_SHIFT                        (4U)
#define FR_CCSR_DUP_WIDTH                        (1U)
#define FR_CCSR_DUP(x)                           (((uint16_t)(((uint16_t)(x)) << FR_CCSR_DUP_SHIFT)) & FR_CCSR_DUP_MASK)
#define FR_CCSR_MBIE_MASK                        (0x100U)
#define FR_CCSR_MBIE_SHIFT                       (8U)
#define FR_CCSR_MBIE_WIDTH                       (1U)
#define FR_CCSR_MBIE(x)                          (((uint16_t)(((uint16_t)(x)) << FR_CCSR_MBIE_SHIFT)) & FR_CCSR_MBIE_MASK)
#define FR_CCSR_LCKT_MASK                        (0x200U)
#define FR_CCSR_LCKT_SHIFT                       (9U)
#define FR_CCSR_LCKT_WIDTH                       (1U)
#define FR_CCSR_LCKT(x)                          (((uint16_t)(((uint16_t)(x)) << FR_CCSR_LCKT_SHIFT)) & FR_CCSR_LCKT_MASK)
#define FR_CCSR_EDT_MASK                         (0x400U)
#define FR_CCSR_EDT_SHIFT                        (10U)
#define FR_CCSR_EDT_WIDTH                        (1U)
#define FR_CCSR_EDT(x)                           (((uint16_t)(((uint16_t)(x)) << FR_CCSR_EDT_SHIFT)) & FR_CCSR_EDT_MASK)
#define FR_CCSR_CMT_MASK                         (0x800U)
#define FR_CCSR_CMT_SHIFT                        (11U)
#define FR_CCSR_CMT_WIDTH                        (1U)
#define FR_CCSR_CMT(x)                           (((uint16_t)(((uint16_t)(x)) << FR_CCSR_CMT_SHIFT)) & FR_CCSR_CMT_MASK)
#define FR_CCSR_MTD_MASK                         (0x1000U)
#define FR_CCSR_MTD_SHIFT                        (12U)
#define FR_CCSR_MTD_WIDTH                        (1U)
#define FR_CCSR_MTD(x)                           (((uint16_t)(((uint16_t)(x)) << FR_CCSR_MTD_SHIFT)) & FR_CCSR_MTD_MASK)
/*! @} */

/*! @name CCFR - Message Buffer Cycle Counter Filter Register */
/*! @{ */
#define FR_CCFR_CCFVAL_MASK                      (0x3FU)
#define FR_CCFR_CCFVAL_SHIFT                     (0U)
#define FR_CCFR_CCFVAL_WIDTH                     (6U)
#define FR_CCFR_CCFVAL(x)                        (((uint16_t)(((uint16_t)(x)) << FR_CCFR_CCFVAL_SHIFT)) & FR_CCFR_CCFVAL_MASK)
#define FR_CCFR_CCFMSK_MASK                      (0xFC0U)
#define FR_CCFR_CCFMSK_SHIFT                     (6U)
#define FR_CCFR_CCFMSK_WIDTH                     (6U)
#define FR_CCFR_CCFMSK(x)                        (((uint16_t)(((uint16_t)(x)) << FR_CCFR_CCFMSK_SHIFT)) & FR_CCFR_CCFMSK_MASK)
#define FR_CCFR_CCFE_MASK                        (0x1000U)
#define FR_CCFR_CCFE_SHIFT                       (12U)
#define FR_CCFR_CCFE_WIDTH                       (1U)
#define FR_CCFR_CCFE(x)                          (((uint16_t)(((uint16_t)(x)) << FR_CCFR_CCFE_SHIFT)) & FR_CCFR_CCFE_MASK)
#define FR_CCFR_CHB_MASK                         (0x2000U)
#define FR_CCFR_CHB_SHIFT                        (13U)
#define FR_CCFR_CHB_WIDTH                        (1U)
#define FR_CCFR_CHB(x)                           (((uint16_t)(((uint16_t)(x)) << FR_CCFR_CHB_SHIFT)) & FR_CCFR_CHB_MASK)
#define FR_CCFR_CHA_MASK                         (0x4000U)
#define FR_CCFR_CHA_SHIFT                        (14U)
#define FR_CCFR_CHA_WIDTH                        (1U)
#define FR_CCFR_CHA(x)                           (((uint16_t)(((uint16_t)(x)) << FR_CCFR_CHA_SHIFT)) & FR_CCFR_CHA_MASK)
#define FR_CCFR_MTM_MASK                         (0x8000U)
#define FR_CCFR_MTM_SHIFT                        (15U)
#define FR_CCFR_MTM_WIDTH                        (1U)
#define FR_CCFR_MTM(x)                           (((uint16_t)(((uint16_t)(x)) << FR_CCFR_MTM_SHIFT)) & FR_CCFR_MTM_MASK)
/*! @} */

/*! @name FIDR - Message Buffer Frame ID Register */
/*! @{ */
#define FR_FIDR_FID_MASK                         (0x7FFU)
#define FR_FIDR_FID_SHIFT                        (0U)
#define FR_FIDR_FID_WIDTH                        (11U)
#define FR_FIDR_FID(x)                           (((uint16_t)(((uint16_t)(x)) << FR_FIDR_FID_SHIFT)) & FR_FIDR_FID_MASK)
/*! @} */

/*! @name IDXR - Message Buffer Index Register */
/*! @{ */
#define FR_IDXR_MBIDX_MASK                       (0x1FFU)
#define FR_IDXR_MBIDX_SHIFT                      (0U)
#define FR_IDXR_MBIDX_WIDTH                      (9U)
#define FR_IDXR_MBIDX(x)                         (((uint16_t)(((uint16_t)(x)) << FR_IDXR_MBIDX_SHIFT)) & FR_IDXR_MBIDX_MASK)
/*! @} */

/*! @name MBDOR - Message Buffer Data Field Offset Register */
/*! @{ */
#define FR_MBDOR_MBDO_MASK                       (0xFFFFU)
#define FR_MBDOR_MBDO_SHIFT                      (0U)
#define FR_MBDOR_MBDO_WIDTH                      (16U)
#define FR_MBDOR_MBDO(x)                         (((uint16_t)(((uint16_t)(x)) << FR_MBDOR_MBDO_SHIFT)) & FR_MBDOR_MBDO_MASK)
/*! @} */

/*! @name LEETR - LRAM ECC Error Test Register */
/*! @{ */
#define FR_LEETR_LEETD_MASK                      (0xFFFFU)
#define FR_LEETR_LEETD_SHIFT                     (0U)
#define FR_LEETR_LEETD_WIDTH                     (16U)
#define FR_LEETR_LEETD(x)                        (((uint16_t)(((uint16_t)(x)) << FR_LEETR_LEETD_SHIFT)) & FR_LEETR_LEETD_MASK)
/*! @} */



/*!
 * @}
 */ /* end of group FLEXRAY_Register_Masks */


/*!
 * @}
 */ /* end of group FLEXRAY_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- FLEXTIMER Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup FTM_Peripheral_Access_Layer FLEXTIMER Peripheral Access Layer
 * @{
 */

/** FLEXTIMER - Size of Registers Arrays */
#define FTM_CONTROLS_COUNT                       6u
#define FTM_CV_MIRROR_COUNT                      6u

/** FLEXTIMER - Register Layout Typedef */
typedef struct {
  __IO uint32_t SC;                                /**< Status And Control, offset: 0x0 */
  __IO uint32_t CNT;                               /**< Counter, offset: 0x4 */
  __IO uint32_t MOD;                               /**< Modulo, offset: 0x8 */
  struct {                                         /* offset: 0xC, array step: 0x8 */
    __IO uint32_t CnSC;                               /**< Channel (n) Status And Control, array offset: 0xC, array step: 0x8 */
    __IO uint32_t CnV;                                /**< Channel (n) Value, array offset: 0x10, array step: 0x8 */
  } CONTROLS[FTM_CONTROLS_COUNT];
  uint8_t RESERVED_0[16];
  __IO uint32_t CNTIN;                             /**< Counter Initial Value, offset: 0x4C */
  __IO uint32_t STATUS;                            /**< Capture And Compare Status, offset: 0x50 */
  __IO uint32_t MODE;                              /**< Features Mode Selection, offset: 0x54 */
  __IO uint32_t SYNC;                              /**< Synchronization, offset: 0x58 */
  __IO uint32_t OUTINIT;                           /**< Initial State For Channels Output, offset: 0x5C */
  __IO uint32_t OUTMASK;                           /**< Output Mask, offset: 0x60 */
  __IO uint32_t COMBINE;                           /**< Function For Linked Channels, offset: 0x64 */
  __IO uint32_t DEADTIME;                          /**< Deadtime Configuration, offset: 0x68 */
  __IO uint32_t EXTTRIG;                           /**< FTM External Trigger, offset: 0x6C */
  __IO uint32_t POL;                               /**< Channels Polarity, offset: 0x70 */
  __IO uint32_t FMS;                               /**< Fault Mode Status, offset: 0x74 */
  __IO uint32_t FILTER;                            /**< Input Capture Filter Control, offset: 0x78 */
  uint8_t RESERVED_1[4];
  __IO uint32_t QDCTRL;                            /**< Quadrature Decoder Control And Status, offset: 0x80 */
  __IO uint32_t CONF;                              /**< Configuration, offset: 0x84 */
  uint8_t RESERVED_2[4];
  __IO uint32_t SYNCONF;                           /**< Synchronization Configuration, offset: 0x8C */
  __IO uint32_t INVCTRL;                           /**< FTM Inverting Control, offset: 0x90 */
  __IO uint32_t SWOCTRL;                           /**< FTM Software Output Control, offset: 0x94 */
  __IO uint32_t PWMLOAD;                           /**< FTM PWM Load, offset: 0x98 */
  __IO uint32_t HCR;                               /**< Half Cycle Register, offset: 0x9C */
  uint8_t RESERVED_3[352];
  __IO uint32_t MOD_MIRROR;                        /**< Mirror of Modulo Value, offset: 0x200 */
  __IO uint32_t CV_MIRROR[FTM_CV_MIRROR_COUNT]; /**< Mirror of Channel (n) Match Value, array offset: 0x204, array step: 0x4 */
} FTM_Type, *FTM_MemMapPtr;

/** Number of instances of the FLEXTIMER module. */
#define FTM_INSTANCE_COUNT                       (2u)

/* FLEXTIMER - Peripheral instance base addresses */
/** Peripheral FTM_0 base address */
#define FTM0_BASE                                (0x401F4000u)
/** Peripheral FTM_0 base pointer */
#define FTM0                                     ((FTM_Type *)FTM0_BASE)
/** Peripheral FTM_1 base address */
#define FTM1_BASE                                (0x402E4000u)
/** Peripheral FTM_1 base pointer */
#define FTM1                                     ((FTM_Type *)FTM1_BASE)
/** Array initializer of FLEXTIMER peripheral base addresses */
#define FTM_BASE_ADDRS                           { FTM0_BASE, FTM1_BASE }
/** Array initializer of FLEXTIMER peripheral base pointers */
#define FTM_BASE_PTRS                            { FTM0, FTM1 }
 /** Number of interrupt vector arrays for the FTM module. */
#define FTM_IRQS_ARR_COUNT                       (2u)
 /** Number of interrupt channels for the FTM module. */
#define FTM_IRQS_CH_COUNT                        (6u)
/** Interrupt vectors for the FTM peripheral type */
#define FTM_IRQS                                 { { FTM0_IRQn, FTM0_IRQn, FTM0_IRQn, FTM0_IRQn, FTM0_IRQn, FTM0_IRQn }, \
                                                   { FTM1_IRQn, FTM1_IRQn, FTM1_IRQn, FTM1_IRQn, FTM1_IRQn, FTM1_IRQn } }
#define FTM_Overflow_IRQS                        { FTM0_IRQn, FTM1_IRQn }
#define FTM_Reload_IRQS                          { FTM0_IRQn, FTM1_IRQn }

/* ----------------------------------------------------------------------------
   -- FLEXTIMER Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup FTM_Register_Masks FLEXTIMER Register Masks
 * @{
 */

/*! @name SC - Status And Control */
/*! @{ */
#define FTM_SC_PS_MASK                     (0x7U)
#define FTM_SC_PS_SHIFT                    (0U)
#define FTM_SC_PS_WIDTH                    (3U)
#define FTM_SC_PS(x)                       (((uint32_t)(((uint32_t)(x)) << FTM_SC_PS_SHIFT)) & FTM_SC_PS_MASK)
#define FTM_SC_CLKS_MASK                   (0x18U)
#define FTM_SC_CLKS_SHIFT                  (3U)
#define FTM_SC_CLKS_WIDTH                  (2U)
#define FTM_SC_CLKS(x)                     (((uint32_t)(((uint32_t)(x)) << FTM_SC_CLKS_SHIFT)) & FTM_SC_CLKS_MASK)
#define FTM_SC_CPWMS_MASK                  (0x20U)
#define FTM_SC_CPWMS_SHIFT                 (5U)
#define FTM_SC_CPWMS_WIDTH                 (1U)
#define FTM_SC_CPWMS(x)                    (((uint32_t)(((uint32_t)(x)) << FTM_SC_CPWMS_SHIFT)) & FTM_SC_CPWMS_MASK)
#define FTM_SC_RIE_MASK                    (0x40U)
#define FTM_SC_RIE_SHIFT                   (6U)
#define FTM_SC_RIE_WIDTH                   (1U)
#define FTM_SC_RIE(x)                      (((uint32_t)(((uint32_t)(x)) << FTM_SC_RIE_SHIFT)) & FTM_SC_RIE_MASK)
#define FTM_SC_RF_MASK                     (0x80U)
#define FTM_SC_RF_SHIFT                    (7U)
#define FTM_SC_RF_WIDTH                    (1U)
#define FTM_SC_RF(x)                       (((uint32_t)(((uint32_t)(x)) << FTM_SC_RF_SHIFT)) & FTM_SC_RF_MASK)
#define FTM_SC_TOIE_MASK                   (0x100U)
#define FTM_SC_TOIE_SHIFT                  (8U)
#define FTM_SC_TOIE_WIDTH                  (1U)
#define FTM_SC_TOIE(x)                     (((uint32_t)(((uint32_t)(x)) << FTM_SC_TOIE_SHIFT)) & FTM_SC_TOIE_MASK)
#define FTM_SC_TOF_MASK                    (0x200U)
#define FTM_SC_TOF_SHIFT                   (9U)
#define FTM_SC_TOF_WIDTH                   (1U)
#define FTM_SC_TOF(x)                      (((uint32_t)(((uint32_t)(x)) << FTM_SC_TOF_SHIFT)) & FTM_SC_TOF_MASK)
#define FTM_SC_PWMEN0_MASK                 (0x10000U)
#define FTM_SC_PWMEN0_SHIFT                (16U)
#define FTM_SC_PWMEN0_WIDTH                (1U)
#define FTM_SC_PWMEN0(x)                   (((uint32_t)(((uint32_t)(x)) << FTM_SC_PWMEN0_SHIFT)) & FTM_SC_PWMEN0_MASK)
#define FTM_SC_PWMEN1_MASK                 (0x20000U)
#define FTM_SC_PWMEN1_SHIFT                (17U)
#define FTM_SC_PWMEN1_WIDTH                (1U)
#define FTM_SC_PWMEN1(x)                   (((uint32_t)(((uint32_t)(x)) << FTM_SC_PWMEN1_SHIFT)) & FTM_SC_PWMEN1_MASK)
#define FTM_SC_PWMEN2_MASK                 (0x40000U)
#define FTM_SC_PWMEN2_SHIFT                (18U)
#define FTM_SC_PWMEN2_WIDTH                (1U)
#define FTM_SC_PWMEN2(x)                   (((uint32_t)(((uint32_t)(x)) << FTM_SC_PWMEN2_SHIFT)) & FTM_SC_PWMEN2_MASK)
#define FTM_SC_PWMEN3_MASK                 (0x80000U)
#define FTM_SC_PWMEN3_SHIFT                (19U)
#define FTM_SC_PWMEN3_WIDTH                (1U)
#define FTM_SC_PWMEN3(x)                   (((uint32_t)(((uint32_t)(x)) << FTM_SC_PWMEN3_SHIFT)) & FTM_SC_PWMEN3_MASK)
#define FTM_SC_PWMEN4_MASK                 (0x100000U)
#define FTM_SC_PWMEN4_SHIFT                (20U)
#define FTM_SC_PWMEN4_WIDTH                (1U)
#define FTM_SC_PWMEN4(x)                   (((uint32_t)(((uint32_t)(x)) << FTM_SC_PWMEN4_SHIFT)) & FTM_SC_PWMEN4_MASK)
#define FTM_SC_PWMEN5_MASK                 (0x200000U)
#define FTM_SC_PWMEN5_SHIFT                (21U)
#define FTM_SC_PWMEN5_WIDTH                (1U)
#define FTM_SC_PWMEN5(x)                   (((uint32_t)(((uint32_t)(x)) << FTM_SC_PWMEN5_SHIFT)) & FTM_SC_PWMEN5_MASK)
#define FTM_SC_FLTPS_MASK                  (0xF000000U)
#define FTM_SC_FLTPS_SHIFT                 (24U)
#define FTM_SC_FLTPS_WIDTH                 (4U)
#define FTM_SC_FLTPS(x)                    (((uint32_t)(((uint32_t)(x)) << FTM_SC_FLTPS_SHIFT)) & FTM_SC_FLTPS_MASK)
/*! @} */

/*! @name CNT - Counter */
/*! @{ */
#define FTM_CNT_COUNT_MASK                 (0xFFFFU)
#define FTM_CNT_COUNT_SHIFT                (0U)
#define FTM_CNT_COUNT_WIDTH                (16U)
#define FTM_CNT_COUNT(x)                   (((uint32_t)(((uint32_t)(x)) << FTM_CNT_COUNT_SHIFT)) & FTM_CNT_COUNT_MASK)
/*! @} */

/*! @name MOD - Modulo */
/*! @{ */
#define FTM_MOD_MOD_MASK                   (0xFFFFU)
#define FTM_MOD_MOD_SHIFT                  (0U)
#define FTM_MOD_MOD_WIDTH                  (16U)
#define FTM_MOD_MOD(x)                     (((uint32_t)(((uint32_t)(x)) << FTM_MOD_MOD_SHIFT)) & FTM_MOD_MOD_MASK)
/*! @} */

/*! @name CSC - Channel (n) Status And Control */
/*! @{ */
#define FTM_CnSC_DMA_MASK                   (0x1U)
#define FTM_CnSC_DMA_SHIFT                  (0U)
#define FTM_CnSC_DMA_WIDTH                  (1U)
#define FTM_CnSC_DMA(x)                     (((uint32_t)(((uint32_t)(x)) << FTM_CnSC_DMA_SHIFT)) & FTM_CnSC_DMA_MASK)
#define FTM_CnSC_ICRST_MASK                 (0x2U)
#define FTM_CnSC_ICRST_SHIFT                (1U)
#define FTM_CnSC_ICRST_WIDTH                (1U)
#define FTM_CnSC_ICRST(x)                   (((uint32_t)(((uint32_t)(x)) << FTM_CnSC_ICRST_SHIFT)) & FTM_CnSC_ICRST_MASK)
#define FTM_CnSC_ELSA_MASK                  (0x4U)
#define FTM_CnSC_ELSA_SHIFT                 (2U)
#define FTM_CnSC_ELSA_WIDTH                 (1U)
#define FTM_CnSC_ELSA(x)                    (((uint32_t)(((uint32_t)(x)) << FTM_CnSC_ELSA_SHIFT)) & FTM_CnSC_ELSA_MASK)
#define FTM_CnSC_ELSB_MASK                  (0x8U)
#define FTM_CnSC_ELSB_SHIFT                 (3U)
#define FTM_CnSC_ELSB_WIDTH                 (1U)
#define FTM_CnSC_ELSB(x)                    (((uint32_t)(((uint32_t)(x)) << FTM_CnSC_ELSB_SHIFT)) & FTM_CnSC_ELSB_MASK)
#define FTM_CnSC_MSA_MASK                   (0x10U)
#define FTM_CnSC_MSA_SHIFT                  (4U)
#define FTM_CnSC_MSA_WIDTH                  (1U)
#define FTM_CnSC_MSA(x)                     (((uint32_t)(((uint32_t)(x)) << FTM_CnSC_MSA_SHIFT)) & FTM_CnSC_MSA_MASK)
#define FTM_CnSC_MSB_MASK                   (0x20U)
#define FTM_CnSC_MSB_SHIFT                  (5U)
#define FTM_CnSC_MSB_WIDTH                  (1U)
#define FTM_CnSC_MSB(x)                     (((uint32_t)(((uint32_t)(x)) << FTM_CnSC_MSB_SHIFT)) & FTM_CnSC_MSB_MASK)
#define FTM_CnSC_CHIE_MASK                  (0x40U)
#define FTM_CnSC_CHIE_SHIFT                 (6U)
#define FTM_CnSC_CHIE_WIDTH                 (1U)
#define FTM_CnSC_CHIE(x)                    (((uint32_t)(((uint32_t)(x)) << FTM_CnSC_CHIE_SHIFT)) & FTM_CnSC_CHIE_MASK)
#define FTM_CnSC_CHF_MASK                   (0x80U)
#define FTM_CnSC_CHF_SHIFT                  (7U)
#define FTM_CnSC_CHF_WIDTH                  (1U)
#define FTM_CnSC_CHF(x)                     (((uint32_t)(((uint32_t)(x)) << FTM_CnSC_CHF_SHIFT)) & FTM_CnSC_CHF_MASK)
#define FTM_CnSC_TRIGMODE_MASK              (0x100U)
#define FTM_CnSC_TRIGMODE_SHIFT             (8U)
#define FTM_CnSC_TRIGMODE_WIDTH             (1U)
#define FTM_CnSC_TRIGMODE(x)                (((uint32_t)(((uint32_t)(x)) << FTM_CnSC_TRIGMODE_SHIFT)) & FTM_CnSC_TRIGMODE_MASK)
#define FTM_CnSC_CHIS_MASK                  (0x200U)
#define FTM_CnSC_CHIS_SHIFT                 (9U)
#define FTM_CnSC_CHIS_WIDTH                 (1U)
#define FTM_CnSC_CHIS(x)                    (((uint32_t)(((uint32_t)(x)) << FTM_CnSC_CHIS_SHIFT)) & FTM_CnSC_CHIS_MASK)
#define FTM_CnSC_CHOV_MASK                  (0x400U)
#define FTM_CnSC_CHOV_SHIFT                 (10U)
#define FTM_CnSC_CHOV_WIDTH                 (1U)
#define FTM_CnSC_CHOV(x)                    (((uint32_t)(((uint32_t)(x)) << FTM_CnSC_CHOV_SHIFT)) & FTM_CnSC_CHOV_MASK)
/*! @} */

/*! @name CV - Channel (n) Value */
/*! @{ */
#define FTM_CnV_VAL_MASK                    (0xFFFFU)
#define FTM_CnV_VAL_SHIFT                   (0U)
#define FTM_CnV_VAL_WIDTH                   (16U)
#define FTM_CnV_VAL(x)                      (((uint32_t)(((uint32_t)(x)) << FTM_CnV_VAL_SHIFT)) & FTM_CnV_VAL_MASK)
/*! @} */

/*! @name CNTIN - Counter Initial Value */
/*! @{ */
#define FTM_CNTIN_INIT_MASK                (0xFFFFU)
#define FTM_CNTIN_INIT_SHIFT               (0U)
#define FTM_CNTIN_INIT_WIDTH               (16U)
#define FTM_CNTIN_INIT(x)                  (((uint32_t)(((uint32_t)(x)) << FTM_CNTIN_INIT_SHIFT)) & FTM_CNTIN_INIT_MASK)
/*! @} */

/*! @name STATUS - Capture And Compare Status */
/*! @{ */
#define FTM_STATUS_CH0F_MASK               (0x1U)
#define FTM_STATUS_CH0F_SHIFT              (0U)
#define FTM_STATUS_CH0F_WIDTH              (1U)
#define FTM_STATUS_CH0F(x)                 (((uint32_t)(((uint32_t)(x)) << FTM_STATUS_CH0F_SHIFT)) & FTM_STATUS_CH0F_MASK)
#define FTM_STATUS_CH1F_MASK               (0x2U)
#define FTM_STATUS_CH1F_SHIFT              (1U)
#define FTM_STATUS_CH1F_WIDTH              (1U)
#define FTM_STATUS_CH1F(x)                 (((uint32_t)(((uint32_t)(x)) << FTM_STATUS_CH1F_SHIFT)) & FTM_STATUS_CH1F_MASK)
#define FTM_STATUS_CH2F_MASK               (0x4U)
#define FTM_STATUS_CH2F_SHIFT              (2U)
#define FTM_STATUS_CH2F_WIDTH              (1U)
#define FTM_STATUS_CH2F(x)                 (((uint32_t)(((uint32_t)(x)) << FTM_STATUS_CH2F_SHIFT)) & FTM_STATUS_CH2F_MASK)
#define FTM_STATUS_CH3F_MASK               (0x8U)
#define FTM_STATUS_CH3F_SHIFT              (3U)
#define FTM_STATUS_CH3F_WIDTH              (1U)
#define FTM_STATUS_CH3F(x)                 (((uint32_t)(((uint32_t)(x)) << FTM_STATUS_CH3F_SHIFT)) & FTM_STATUS_CH3F_MASK)
#define FTM_STATUS_CH4F_MASK               (0x10U)
#define FTM_STATUS_CH4F_SHIFT              (4U)
#define FTM_STATUS_CH4F_WIDTH              (1U)
#define FTM_STATUS_CH4F(x)                 (((uint32_t)(((uint32_t)(x)) << FTM_STATUS_CH4F_SHIFT)) & FTM_STATUS_CH4F_MASK)
#define FTM_STATUS_CH5F_MASK               (0x20U)
#define FTM_STATUS_CH5F_SHIFT              (5U)
#define FTM_STATUS_CH5F_WIDTH              (1U)
#define FTM_STATUS_CH5F(x)                 (((uint32_t)(((uint32_t)(x)) << FTM_STATUS_CH5F_SHIFT)) & FTM_STATUS_CH5F_MASK)
/*! @} */

/*! @name MODE - Features Mode Selection */
/*! @{ */
#define FTM_MODE_FTMEN_MASK                (0x1U)
#define FTM_MODE_FTMEN_SHIFT               (0U)
#define FTM_MODE_FTMEN_WIDTH               (1U)
#define FTM_MODE_FTMEN(x)                  (((uint32_t)(((uint32_t)(x)) << FTM_MODE_FTMEN_SHIFT)) & FTM_MODE_FTMEN_MASK)
#define FTM_MODE_INIT_MASK                 (0x2U)
#define FTM_MODE_INIT_SHIFT                (1U)
#define FTM_MODE_INIT_WIDTH                (1U)
#define FTM_MODE_INIT(x)                   (((uint32_t)(((uint32_t)(x)) << FTM_MODE_INIT_SHIFT)) & FTM_MODE_INIT_MASK)
#define FTM_MODE_WPDIS_MASK                (0x4U)
#define FTM_MODE_WPDIS_SHIFT               (2U)
#define FTM_MODE_WPDIS_WIDTH               (1U)
#define FTM_MODE_WPDIS(x)                  (((uint32_t)(((uint32_t)(x)) << FTM_MODE_WPDIS_SHIFT)) & FTM_MODE_WPDIS_MASK)
#define FTM_MODE_PWMSYNC_MASK              (0x8U)
#define FTM_MODE_PWMSYNC_SHIFT             (3U)
#define FTM_MODE_PWMSYNC_WIDTH             (1U)
#define FTM_MODE_PWMSYNC(x)                (((uint32_t)(((uint32_t)(x)) << FTM_MODE_PWMSYNC_SHIFT)) & FTM_MODE_PWMSYNC_MASK)
#define FTM_MODE_CAPTEST_MASK              (0x10U)
#define FTM_MODE_CAPTEST_SHIFT             (4U)
#define FTM_MODE_CAPTEST_WIDTH             (1U)
#define FTM_MODE_CAPTEST(x)                (((uint32_t)(((uint32_t)(x)) << FTM_MODE_CAPTEST_SHIFT)) & FTM_MODE_CAPTEST_MASK)
/*! @} */

/*! @name SYNC - Synchronization */
/*! @{ */
#define FTM_SYNC_CNTMIN_MASK               (0x1U)
#define FTM_SYNC_CNTMIN_SHIFT              (0U)
#define FTM_SYNC_CNTMIN_WIDTH              (1U)
#define FTM_SYNC_CNTMIN(x)                 (((uint32_t)(((uint32_t)(x)) << FTM_SYNC_CNTMIN_SHIFT)) & FTM_SYNC_CNTMIN_MASK)
#define FTM_SYNC_CNTMAX_MASK               (0x2U)
#define FTM_SYNC_CNTMAX_SHIFT              (1U)
#define FTM_SYNC_CNTMAX_WIDTH              (1U)
#define FTM_SYNC_CNTMAX(x)                 (((uint32_t)(((uint32_t)(x)) << FTM_SYNC_CNTMAX_SHIFT)) & FTM_SYNC_CNTMAX_MASK)
#define FTM_SYNC_REINIT_MASK               (0x4U)
#define FTM_SYNC_REINIT_SHIFT              (2U)
#define FTM_SYNC_REINIT_WIDTH              (1U)
#define FTM_SYNC_REINIT(x)                 (((uint32_t)(((uint32_t)(x)) << FTM_SYNC_REINIT_SHIFT)) & FTM_SYNC_REINIT_MASK)
#define FTM_SYNC_SYNCHOM_MASK              (0x8U)
#define FTM_SYNC_SYNCHOM_SHIFT             (3U)
#define FTM_SYNC_SYNCHOM_WIDTH             (1U)
#define FTM_SYNC_SYNCHOM(x)                (((uint32_t)(((uint32_t)(x)) << FTM_SYNC_SYNCHOM_SHIFT)) & FTM_SYNC_SYNCHOM_MASK)
#define FTM_SYNC_TRIG0_MASK                (0x10U)
#define FTM_SYNC_TRIG0_SHIFT               (4U)
#define FTM_SYNC_TRIG0_WIDTH               (1U)
#define FTM_SYNC_TRIG0(x)                  (((uint32_t)(((uint32_t)(x)) << FTM_SYNC_TRIG0_SHIFT)) & FTM_SYNC_TRIG0_MASK)
#define FTM_SYNC_TRIG1_MASK                (0x20U)
#define FTM_SYNC_TRIG1_SHIFT               (5U)
#define FTM_SYNC_TRIG1_WIDTH               (1U)
#define FTM_SYNC_TRIG1(x)                  (((uint32_t)(((uint32_t)(x)) << FTM_SYNC_TRIG1_SHIFT)) & FTM_SYNC_TRIG1_MASK)
#define FTM_SYNC_TRIG2_MASK                (0x40U)
#define FTM_SYNC_TRIG2_SHIFT               (6U)
#define FTM_SYNC_TRIG2_WIDTH               (1U)
#define FTM_SYNC_TRIG2(x)                  (((uint32_t)(((uint32_t)(x)) << FTM_SYNC_TRIG2_SHIFT)) & FTM_SYNC_TRIG2_MASK)
#define FTM_SYNC_SWSYNC_MASK               (0x80U)
#define FTM_SYNC_SWSYNC_SHIFT              (7U)
#define FTM_SYNC_SWSYNC_WIDTH              (1U)
#define FTM_SYNC_SWSYNC(x)                 (((uint32_t)(((uint32_t)(x)) << FTM_SYNC_SWSYNC_SHIFT)) & FTM_SYNC_SWSYNC_MASK)
/*! @} */

/*! @name OUTINIT - Initial State For Channels Output */
/*! @{ */
#define FTM_OUTINIT_CH0OI_MASK             (0x1U)
#define FTM_OUTINIT_CH0OI_SHIFT            (0U)
#define FTM_OUTINIT_CH0OI_WIDTH            (1U)
#define FTM_OUTINIT_CH0OI(x)               (((uint32_t)(((uint32_t)(x)) << FTM_OUTINIT_CH0OI_SHIFT)) & FTM_OUTINIT_CH0OI_MASK)
#define FTM_OUTINIT_CH1OI_MASK             (0x2U)
#define FTM_OUTINIT_CH1OI_SHIFT            (1U)
#define FTM_OUTINIT_CH1OI_WIDTH            (1U)
#define FTM_OUTINIT_CH1OI(x)               (((uint32_t)(((uint32_t)(x)) << FTM_OUTINIT_CH1OI_SHIFT)) & FTM_OUTINIT_CH1OI_MASK)
#define FTM_OUTINIT_CH2OI_MASK             (0x4U)
#define FTM_OUTINIT_CH2OI_SHIFT            (2U)
#define FTM_OUTINIT_CH2OI_WIDTH            (1U)
#define FTM_OUTINIT_CH2OI(x)               (((uint32_t)(((uint32_t)(x)) << FTM_OUTINIT_CH2OI_SHIFT)) & FTM_OUTINIT_CH2OI_MASK)
#define FTM_OUTINIT_CH3OI_MASK             (0x8U)
#define FTM_OUTINIT_CH3OI_SHIFT            (3U)
#define FTM_OUTINIT_CH3OI_WIDTH            (1U)
#define FTM_OUTINIT_CH3OI(x)               (((uint32_t)(((uint32_t)(x)) << FTM_OUTINIT_CH3OI_SHIFT)) & FTM_OUTINIT_CH3OI_MASK)
#define FTM_OUTINIT_CH4OI_MASK             (0x10U)
#define FTM_OUTINIT_CH4OI_SHIFT            (4U)
#define FTM_OUTINIT_CH4OI_WIDTH            (1U)
#define FTM_OUTINIT_CH4OI(x)               (((uint32_t)(((uint32_t)(x)) << FTM_OUTINIT_CH4OI_SHIFT)) & FTM_OUTINIT_CH4OI_MASK)
#define FTM_OUTINIT_CH5OI_MASK             (0x20U)
#define FTM_OUTINIT_CH5OI_SHIFT            (5U)
#define FTM_OUTINIT_CH5OI_WIDTH            (1U)
#define FTM_OUTINIT_CH5OI(x)               (((uint32_t)(((uint32_t)(x)) << FTM_OUTINIT_CH5OI_SHIFT)) & FTM_OUTINIT_CH5OI_MASK)
/*! @} */

/*! @name OUTMASK - Output Mask */
/*! @{ */
#define FTM_OUTMASK_CH0OM_MASK             (0x1U)
#define FTM_OUTMASK_CH0OM_SHIFT            (0U)
#define FTM_OUTMASK_CH0OM_WIDTH            (1U)
#define FTM_OUTMASK_CH0OM(x)               (((uint32_t)(((uint32_t)(x)) << FTM_OUTMASK_CH0OM_SHIFT)) & FTM_OUTMASK_CH0OM_MASK)
#define FTM_OUTMASK_CH1OM_MASK             (0x2U)
#define FTM_OUTMASK_CH1OM_SHIFT            (1U)
#define FTM_OUTMASK_CH1OM_WIDTH            (1U)
#define FTM_OUTMASK_CH1OM(x)               (((uint32_t)(((uint32_t)(x)) << FTM_OUTMASK_CH1OM_SHIFT)) & FTM_OUTMASK_CH1OM_MASK)
#define FTM_OUTMASK_CH2OM_MASK             (0x4U)
#define FTM_OUTMASK_CH2OM_SHIFT            (2U)
#define FTM_OUTMASK_CH2OM_WIDTH            (1U)
#define FTM_OUTMASK_CH2OM(x)               (((uint32_t)(((uint32_t)(x)) << FTM_OUTMASK_CH2OM_SHIFT)) & FTM_OUTMASK_CH2OM_MASK)
#define FTM_OUTMASK_CH3OM_MASK             (0x8U)
#define FTM_OUTMASK_CH3OM_SHIFT            (3U)
#define FTM_OUTMASK_CH3OM_WIDTH            (1U)
#define FTM_OUTMASK_CH3OM(x)               (((uint32_t)(((uint32_t)(x)) << FTM_OUTMASK_CH3OM_SHIFT)) & FTM_OUTMASK_CH3OM_MASK)
#define FTM_OUTMASK_CH4OM_MASK             (0x10U)
#define FTM_OUTMASK_CH4OM_SHIFT            (4U)
#define FTM_OUTMASK_CH4OM_WIDTH            (1U)
#define FTM_OUTMASK_CH4OM(x)               (((uint32_t)(((uint32_t)(x)) << FTM_OUTMASK_CH4OM_SHIFT)) & FTM_OUTMASK_CH4OM_MASK)
#define FTM_OUTMASK_CH5OM_MASK             (0x20U)
#define FTM_OUTMASK_CH5OM_SHIFT            (5U)
#define FTM_OUTMASK_CH5OM_WIDTH            (1U)
#define FTM_OUTMASK_CH5OM(x)               (((uint32_t)(((uint32_t)(x)) << FTM_OUTMASK_CH5OM_SHIFT)) & FTM_OUTMASK_CH5OM_MASK)
/*! @} */

/*! @name COMBINE - Function For Linked Channels */
/*! @{ */
#define FTM_COMBINE_COMBINE0_MASK          (0x1U)
#define FTM_COMBINE_COMBINE0_SHIFT         (0U)
#define FTM_COMBINE_COMBINE0_WIDTH         (1U)
#define FTM_COMBINE_COMBINE0(x)            (((uint32_t)(((uint32_t)(x)) << FTM_COMBINE_COMBINE0_SHIFT)) & FTM_COMBINE_COMBINE0_MASK)
#define FTM_COMBINE_COMP0_MASK             (0x2U)
#define FTM_COMBINE_COMP0_SHIFT            (1U)
#define FTM_COMBINE_COMP0_WIDTH            (1U)
#define FTM_COMBINE_COMP0(x)               (((uint32_t)(((uint32_t)(x)) << FTM_COMBINE_COMP0_SHIFT)) & FTM_COMBINE_COMP0_MASK)
#define FTM_COMBINE_DECAPEN0_MASK          (0x4U)
#define FTM_COMBINE_DECAPEN0_SHIFT         (2U)
#define FTM_COMBINE_DECAPEN0_WIDTH         (1U)
#define FTM_COMBINE_DECAPEN0(x)            (((uint32_t)(((uint32_t)(x)) << FTM_COMBINE_DECAPEN0_SHIFT)) & FTM_COMBINE_DECAPEN0_MASK)
#define FTM_COMBINE_DECAP0_MASK            (0x8U)
#define FTM_COMBINE_DECAP0_SHIFT           (3U)
#define FTM_COMBINE_DECAP0_WIDTH           (1U)
#define FTM_COMBINE_DECAP0(x)              (((uint32_t)(((uint32_t)(x)) << FTM_COMBINE_DECAP0_SHIFT)) & FTM_COMBINE_DECAP0_MASK)
#define FTM_COMBINE_DTEN0_MASK             (0x10U)
#define FTM_COMBINE_DTEN0_SHIFT            (4U)
#define FTM_COMBINE_DTEN0_WIDTH            (1U)
#define FTM_COMBINE_DTEN0(x)               (((uint32_t)(((uint32_t)(x)) << FTM_COMBINE_DTEN0_SHIFT)) & FTM_COMBINE_DTEN0_MASK)
#define FTM_COMBINE_SYNCEN0_MASK           (0x20U)
#define FTM_COMBINE_SYNCEN0_SHIFT          (5U)
#define FTM_COMBINE_SYNCEN0_WIDTH          (1U)
#define FTM_COMBINE_SYNCEN0(x)             (((uint32_t)(((uint32_t)(x)) << FTM_COMBINE_SYNCEN0_SHIFT)) & FTM_COMBINE_SYNCEN0_MASK)
#define FTM_COMBINE_MCOMBINE0_MASK         (0x80U)
#define FTM_COMBINE_MCOMBINE0_SHIFT        (7U)
#define FTM_COMBINE_MCOMBINE0_WIDTH        (1U)
#define FTM_COMBINE_MCOMBINE0(x)           (((uint32_t)(((uint32_t)(x)) << FTM_COMBINE_MCOMBINE0_SHIFT)) & FTM_COMBINE_MCOMBINE0_MASK)
#define FTM_COMBINE_COMBINE1_MASK          (0x100U)
#define FTM_COMBINE_COMBINE1_SHIFT         (8U)
#define FTM_COMBINE_COMBINE1_WIDTH         (1U)
#define FTM_COMBINE_COMBINE1(x)            (((uint32_t)(((uint32_t)(x)) << FTM_COMBINE_COMBINE1_SHIFT)) & FTM_COMBINE_COMBINE1_MASK)
#define FTM_COMBINE_COMP1_MASK             (0x200U)
#define FTM_COMBINE_COMP1_SHIFT            (9U)
#define FTM_COMBINE_COMP1_WIDTH            (1U)
#define FTM_COMBINE_COMP1(x)               (((uint32_t)(((uint32_t)(x)) << FTM_COMBINE_COMP1_SHIFT)) & FTM_COMBINE_COMP1_MASK)
#define FTM_COMBINE_DECAPEN1_MASK          (0x400U)
#define FTM_COMBINE_DECAPEN1_SHIFT         (10U)
#define FTM_COMBINE_DECAPEN1_WIDTH         (1U)
#define FTM_COMBINE_DECAPEN1(x)            (((uint32_t)(((uint32_t)(x)) << FTM_COMBINE_DECAPEN1_SHIFT)) & FTM_COMBINE_DECAPEN1_MASK)
#define FTM_COMBINE_DECAP1_MASK            (0x800U)
#define FTM_COMBINE_DECAP1_SHIFT           (11U)
#define FTM_COMBINE_DECAP1_WIDTH           (1U)
#define FTM_COMBINE_DECAP1(x)              (((uint32_t)(((uint32_t)(x)) << FTM_COMBINE_DECAP1_SHIFT)) & FTM_COMBINE_DECAP1_MASK)
#define FTM_COMBINE_DTEN1_MASK             (0x1000U)
#define FTM_COMBINE_DTEN1_SHIFT            (12U)
#define FTM_COMBINE_DTEN1_WIDTH            (1U)
#define FTM_COMBINE_DTEN1(x)               (((uint32_t)(((uint32_t)(x)) << FTM_COMBINE_DTEN1_SHIFT)) & FTM_COMBINE_DTEN1_MASK)
#define FTM_COMBINE_SYNCEN1_MASK           (0x2000U)
#define FTM_COMBINE_SYNCEN1_SHIFT          (13U)
#define FTM_COMBINE_SYNCEN1_WIDTH          (1U)
#define FTM_COMBINE_SYNCEN1(x)             (((uint32_t)(((uint32_t)(x)) << FTM_COMBINE_SYNCEN1_SHIFT)) & FTM_COMBINE_SYNCEN1_MASK)
#define FTM_COMBINE_MCOMBINE1_MASK         (0x8000U)
#define FTM_COMBINE_MCOMBINE1_SHIFT        (15U)
#define FTM_COMBINE_MCOMBINE1_WIDTH        (1U)
#define FTM_COMBINE_MCOMBINE1(x)           (((uint32_t)(((uint32_t)(x)) << FTM_COMBINE_MCOMBINE1_SHIFT)) & FTM_COMBINE_MCOMBINE1_MASK)
#define FTM_COMBINE_COMBINE2_MASK          (0x10000U)
#define FTM_COMBINE_COMBINE2_SHIFT         (16U)
#define FTM_COMBINE_COMBINE2_WIDTH         (1U)
#define FTM_COMBINE_COMBINE2(x)            (((uint32_t)(((uint32_t)(x)) << FTM_COMBINE_COMBINE2_SHIFT)) & FTM_COMBINE_COMBINE2_MASK)
#define FTM_COMBINE_COMP2_MASK             (0x20000U)
#define FTM_COMBINE_COMP2_SHIFT            (17U)
#define FTM_COMBINE_COMP2_WIDTH            (1U)
#define FTM_COMBINE_COMP2(x)               (((uint32_t)(((uint32_t)(x)) << FTM_COMBINE_COMP2_SHIFT)) & FTM_COMBINE_COMP2_MASK)
#define FTM_COMBINE_DECAPEN2_MASK          (0x40000U)
#define FTM_COMBINE_DECAPEN2_SHIFT         (18U)
#define FTM_COMBINE_DECAPEN2_WIDTH         (1U)
#define FTM_COMBINE_DECAPEN2(x)            (((uint32_t)(((uint32_t)(x)) << FTM_COMBINE_DECAPEN2_SHIFT)) & FTM_COMBINE_DECAPEN2_MASK)
#define FTM_COMBINE_DECAP2_MASK            (0x80000U)
#define FTM_COMBINE_DECAP2_SHIFT           (19U)
#define FTM_COMBINE_DECAP2_WIDTH           (1U)
#define FTM_COMBINE_DECAP2(x)              (((uint32_t)(((uint32_t)(x)) << FTM_COMBINE_DECAP2_SHIFT)) & FTM_COMBINE_DECAP2_MASK)
#define FTM_COMBINE_DTEN2_MASK             (0x100000U)
#define FTM_COMBINE_DTEN2_SHIFT            (20U)
#define FTM_COMBINE_DTEN2_WIDTH            (1U)
#define FTM_COMBINE_DTEN2(x)               (((uint32_t)(((uint32_t)(x)) << FTM_COMBINE_DTEN2_SHIFT)) & FTM_COMBINE_DTEN2_MASK)
#define FTM_COMBINE_SYNCEN2_MASK           (0x200000U)
#define FTM_COMBINE_SYNCEN2_SHIFT          (21U)
#define FTM_COMBINE_SYNCEN2_WIDTH          (1U)
#define FTM_COMBINE_SYNCEN2(x)             (((uint32_t)(((uint32_t)(x)) << FTM_COMBINE_SYNCEN2_SHIFT)) & FTM_COMBINE_SYNCEN2_MASK)
#define FTM_COMBINE_MCOMBINE2_MASK         (0x800000U)
#define FTM_COMBINE_MCOMBINE2_SHIFT        (23U)
#define FTM_COMBINE_MCOMBINE2_WIDTH        (1U)
#define FTM_COMBINE_MCOMBINE2(x)           (((uint32_t)(((uint32_t)(x)) << FTM_COMBINE_MCOMBINE2_SHIFT)) & FTM_COMBINE_MCOMBINE2_MASK)
/*! @} */

/*! @name DEADTIME - Deadtime Configuration */
/*! @{ */
#define FTM_DEADTIME_DTVAL_MASK            (0x3FU)
#define FTM_DEADTIME_DTVAL_SHIFT           (0U)
#define FTM_DEADTIME_DTVAL_WIDTH           (6U)
#define FTM_DEADTIME_DTVAL(x)              (((uint32_t)(((uint32_t)(x)) << FTM_DEADTIME_DTVAL_SHIFT)) & FTM_DEADTIME_DTVAL_MASK)
#define FTM_DEADTIME_DTPS_MASK             (0xC0U)
#define FTM_DEADTIME_DTPS_SHIFT            (6U)
#define FTM_DEADTIME_DTPS_WIDTH            (2U)
#define FTM_DEADTIME_DTPS(x)               (((uint32_t)(((uint32_t)(x)) << FTM_DEADTIME_DTPS_SHIFT)) & FTM_DEADTIME_DTPS_MASK)
#define FTM_DEADTIME_DTVALEX_MASK          (0xF0000U)
#define FTM_DEADTIME_DTVALEX_SHIFT         (16U)
#define FTM_DEADTIME_DTVALEX_WIDTH         (4U)
#define FTM_DEADTIME_DTVALEX(x)            (((uint32_t)(((uint32_t)(x)) << FTM_DEADTIME_DTVALEX_SHIFT)) & FTM_DEADTIME_DTVALEX_MASK)
/*! @} */

/*! @name EXTTRIG - FTM External Trigger */
/*! @{ */
#define FTM_EXTTRIG_CH2TRIG_MASK           (0x1U)
#define FTM_EXTTRIG_CH2TRIG_SHIFT          (0U)
#define FTM_EXTTRIG_CH2TRIG_WIDTH          (1U)
#define FTM_EXTTRIG_CH2TRIG(x)             (((uint32_t)(((uint32_t)(x)) << FTM_EXTTRIG_CH2TRIG_SHIFT)) & FTM_EXTTRIG_CH2TRIG_MASK)
#define FTM_EXTTRIG_CH3TRIG_MASK           (0x2U)
#define FTM_EXTTRIG_CH3TRIG_SHIFT          (1U)
#define FTM_EXTTRIG_CH3TRIG_WIDTH          (1U)
#define FTM_EXTTRIG_CH3TRIG(x)             (((uint32_t)(((uint32_t)(x)) << FTM_EXTTRIG_CH3TRIG_SHIFT)) & FTM_EXTTRIG_CH3TRIG_MASK)
#define FTM_EXTTRIG_CH4TRIG_MASK           (0x4U)
#define FTM_EXTTRIG_CH4TRIG_SHIFT          (2U)
#define FTM_EXTTRIG_CH4TRIG_WIDTH          (1U)
#define FTM_EXTTRIG_CH4TRIG(x)             (((uint32_t)(((uint32_t)(x)) << FTM_EXTTRIG_CH4TRIG_SHIFT)) & FTM_EXTTRIG_CH4TRIG_MASK)
#define FTM_EXTTRIG_CH5TRIG_MASK           (0x8U)
#define FTM_EXTTRIG_CH5TRIG_SHIFT          (3U)
#define FTM_EXTTRIG_CH5TRIG_WIDTH          (1U)
#define FTM_EXTTRIG_CH5TRIG(x)             (((uint32_t)(((uint32_t)(x)) << FTM_EXTTRIG_CH5TRIG_SHIFT)) & FTM_EXTTRIG_CH5TRIG_MASK)
#define FTM_EXTTRIG_CH0TRIG_MASK           (0x10U)
#define FTM_EXTTRIG_CH0TRIG_SHIFT          (4U)
#define FTM_EXTTRIG_CH0TRIG_WIDTH          (1U)
#define FTM_EXTTRIG_CH0TRIG(x)             (((uint32_t)(((uint32_t)(x)) << FTM_EXTTRIG_CH0TRIG_SHIFT)) & FTM_EXTTRIG_CH0TRIG_MASK)
#define FTM_EXTTRIG_CH1TRIG_MASK           (0x20U)
#define FTM_EXTTRIG_CH1TRIG_SHIFT          (5U)
#define FTM_EXTTRIG_CH1TRIG_WIDTH          (1U)
#define FTM_EXTTRIG_CH1TRIG(x)             (((uint32_t)(((uint32_t)(x)) << FTM_EXTTRIG_CH1TRIG_SHIFT)) & FTM_EXTTRIG_CH1TRIG_MASK)
#define FTM_EXTTRIG_INITTRIGEN_MASK        (0x40U)
#define FTM_EXTTRIG_INITTRIGEN_SHIFT       (6U)
#define FTM_EXTTRIG_INITTRIGEN_WIDTH       (1U)
#define FTM_EXTTRIG_INITTRIGEN(x)          (((uint32_t)(((uint32_t)(x)) << FTM_EXTTRIG_INITTRIGEN_SHIFT)) & FTM_EXTTRIG_INITTRIGEN_MASK)
#define FTM_EXTTRIG_TRIGF_MASK             (0x80U)
#define FTM_EXTTRIG_TRIGF_SHIFT            (7U)
#define FTM_EXTTRIG_TRIGF_WIDTH            (1U)
#define FTM_EXTTRIG_TRIGF(x)               (((uint32_t)(((uint32_t)(x)) << FTM_EXTTRIG_TRIGF_SHIFT)) & FTM_EXTTRIG_TRIGF_MASK)
/*! @} */

/*! @name POL - Channels Polarity */
/*! @{ */
#define FTM_POL_POL0_MASK                  (0x1U)
#define FTM_POL_POL0_SHIFT                 (0U)
#define FTM_POL_POL0_WIDTH                 (1U)
#define FTM_POL_POL0(x)                    (((uint32_t)(((uint32_t)(x)) << FTM_POL_POL0_SHIFT)) & FTM_POL_POL0_MASK)
#define FTM_POL_POL1_MASK                  (0x2U)
#define FTM_POL_POL1_SHIFT                 (1U)
#define FTM_POL_POL1_WIDTH                 (1U)
#define FTM_POL_POL1(x)                    (((uint32_t)(((uint32_t)(x)) << FTM_POL_POL1_SHIFT)) & FTM_POL_POL1_MASK)
#define FTM_POL_POL2_MASK                  (0x4U)
#define FTM_POL_POL2_SHIFT                 (2U)
#define FTM_POL_POL2_WIDTH                 (1U)
#define FTM_POL_POL2(x)                    (((uint32_t)(((uint32_t)(x)) << FTM_POL_POL2_SHIFT)) & FTM_POL_POL2_MASK)
#define FTM_POL_POL3_MASK                  (0x8U)
#define FTM_POL_POL3_SHIFT                 (3U)
#define FTM_POL_POL3_WIDTH                 (1U)
#define FTM_POL_POL3(x)                    (((uint32_t)(((uint32_t)(x)) << FTM_POL_POL3_SHIFT)) & FTM_POL_POL3_MASK)
#define FTM_POL_POL4_MASK                  (0x10U)
#define FTM_POL_POL4_SHIFT                 (4U)
#define FTM_POL_POL4_WIDTH                 (1U)
#define FTM_POL_POL4(x)                    (((uint32_t)(((uint32_t)(x)) << FTM_POL_POL4_SHIFT)) & FTM_POL_POL4_MASK)
#define FTM_POL_POL5_MASK                  (0x20U)
#define FTM_POL_POL5_SHIFT                 (5U)
#define FTM_POL_POL5_WIDTH                 (1U)
#define FTM_POL_POL5(x)                    (((uint32_t)(((uint32_t)(x)) << FTM_POL_POL5_SHIFT)) & FTM_POL_POL5_MASK)
/*! @} */

/*! @name FMS - Fault Mode Status */
/*! @{ */
#define FTM_FMS_WPEN_MASK                  (0x40U)
#define FTM_FMS_WPEN_SHIFT                 (6U)
#define FTM_FMS_WPEN_WIDTH                 (1U)
#define FTM_FMS_WPEN(x)                    (((uint32_t)(((uint32_t)(x)) << FTM_FMS_WPEN_SHIFT)) & FTM_FMS_WPEN_MASK)
/*! @} */

/*! @name FILTER - Input Capture Filter Control */
/*! @{ */
#define FTM_FILTER_CH0FVAL_MASK            (0xFU)
#define FTM_FILTER_CH0FVAL_SHIFT           (0U)
#define FTM_FILTER_CH0FVAL_WIDTH           (4U)
#define FTM_FILTER_CH0FVAL(x)              (((uint32_t)(((uint32_t)(x)) << FTM_FILTER_CH0FVAL_SHIFT)) & FTM_FILTER_CH0FVAL_MASK)
#define FTM_FILTER_CH1FVAL_MASK            (0xF0U)
#define FTM_FILTER_CH1FVAL_SHIFT           (4U)
#define FTM_FILTER_CH1FVAL_WIDTH           (4U)
#define FTM_FILTER_CH1FVAL(x)              (((uint32_t)(((uint32_t)(x)) << FTM_FILTER_CH1FVAL_SHIFT)) & FTM_FILTER_CH1FVAL_MASK)
#define FTM_FILTER_CH2FVAL_MASK            (0xF00U)
#define FTM_FILTER_CH2FVAL_SHIFT           (8U)
#define FTM_FILTER_CH2FVAL_WIDTH           (4U)
#define FTM_FILTER_CH2FVAL(x)              (((uint32_t)(((uint32_t)(x)) << FTM_FILTER_CH2FVAL_SHIFT)) & FTM_FILTER_CH2FVAL_MASK)
#define FTM_FILTER_CH3FVAL_MASK            (0xF000U)
#define FTM_FILTER_CH3FVAL_SHIFT           (12U)
#define FTM_FILTER_CH3FVAL_WIDTH           (4U)
#define FTM_FILTER_CH3FVAL(x)              (((uint32_t)(((uint32_t)(x)) << FTM_FILTER_CH3FVAL_SHIFT)) & FTM_FILTER_CH3FVAL_MASK)
/*! @} */

/*! @name QDCTRL - Quadrature Decoder Control And Status */
/*! @{ */
#define FTM_QDCTRL_QUADEN_MASK             (0x1U)
#define FTM_QDCTRL_QUADEN_SHIFT            (0U)
#define FTM_QDCTRL_QUADEN_WIDTH            (1U)
#define FTM_QDCTRL_QUADEN(x)               (((uint32_t)(((uint32_t)(x)) << FTM_QDCTRL_QUADEN_SHIFT)) & FTM_QDCTRL_QUADEN_MASK)
#define FTM_QDCTRL_TOFDIR_MASK             (0x2U)
#define FTM_QDCTRL_TOFDIR_SHIFT            (1U)
#define FTM_QDCTRL_TOFDIR_WIDTH            (1U)
#define FTM_QDCTRL_TOFDIR(x)               (((uint32_t)(((uint32_t)(x)) << FTM_QDCTRL_TOFDIR_SHIFT)) & FTM_QDCTRL_TOFDIR_MASK)
#define FTM_QDCTRL_QUADIR_MASK             (0x4U)
#define FTM_QDCTRL_QUADIR_SHIFT            (2U)
#define FTM_QDCTRL_QUADIR_WIDTH            (1U)
#define FTM_QDCTRL_QUADIR(x)               (((uint32_t)(((uint32_t)(x)) << FTM_QDCTRL_QUADIR_SHIFT)) & FTM_QDCTRL_QUADIR_MASK)
#define FTM_QDCTRL_QUADMODE_MASK           (0x8U)
#define FTM_QDCTRL_QUADMODE_SHIFT          (3U)
#define FTM_QDCTRL_QUADMODE_WIDTH          (1U)
#define FTM_QDCTRL_QUADMODE(x)             (((uint32_t)(((uint32_t)(x)) << FTM_QDCTRL_QUADMODE_SHIFT)) & FTM_QDCTRL_QUADMODE_MASK)
#define FTM_QDCTRL_PHBPOL_MASK             (0x10U)
#define FTM_QDCTRL_PHBPOL_SHIFT            (4U)
#define FTM_QDCTRL_PHBPOL_WIDTH            (1U)
#define FTM_QDCTRL_PHBPOL(x)               (((uint32_t)(((uint32_t)(x)) << FTM_QDCTRL_PHBPOL_SHIFT)) & FTM_QDCTRL_PHBPOL_MASK)
#define FTM_QDCTRL_PHAPOL_MASK             (0x20U)
#define FTM_QDCTRL_PHAPOL_SHIFT            (5U)
#define FTM_QDCTRL_PHAPOL_WIDTH            (1U)
#define FTM_QDCTRL_PHAPOL(x)               (((uint32_t)(((uint32_t)(x)) << FTM_QDCTRL_PHAPOL_SHIFT)) & FTM_QDCTRL_PHAPOL_MASK)
#define FTM_QDCTRL_PHBFLTREN_MASK          (0x40U)
#define FTM_QDCTRL_PHBFLTREN_SHIFT         (6U)
#define FTM_QDCTRL_PHBFLTREN_WIDTH         (1U)
#define FTM_QDCTRL_PHBFLTREN(x)            (((uint32_t)(((uint32_t)(x)) << FTM_QDCTRL_PHBFLTREN_SHIFT)) & FTM_QDCTRL_PHBFLTREN_MASK)
#define FTM_QDCTRL_PHAFLTREN_MASK          (0x80U)
#define FTM_QDCTRL_PHAFLTREN_SHIFT         (7U)
#define FTM_QDCTRL_PHAFLTREN_WIDTH         (1U)
#define FTM_QDCTRL_PHAFLTREN(x)            (((uint32_t)(((uint32_t)(x)) << FTM_QDCTRL_PHAFLTREN_SHIFT)) & FTM_QDCTRL_PHAFLTREN_MASK)
/*! @} */

/*! @name CONF - Configuration */
/*! @{ */
#define FTM_CONF_LDFQ_MASK                 (0x1FU)
#define FTM_CONF_LDFQ_SHIFT                (0U)
#define FTM_CONF_LDFQ_WIDTH                (5U)
#define FTM_CONF_LDFQ(x)                   (((uint32_t)(((uint32_t)(x)) << FTM_CONF_LDFQ_SHIFT)) & FTM_CONF_LDFQ_MASK)
#define FTM_CONF_BDMMODE_MASK              (0xC0U)
#define FTM_CONF_BDMMODE_SHIFT             (6U)
#define FTM_CONF_BDMMODE_WIDTH             (2U)
#define FTM_CONF_BDMMODE(x)                (((uint32_t)(((uint32_t)(x)) << FTM_CONF_BDMMODE_SHIFT)) & FTM_CONF_BDMMODE_MASK)
#define FTM_CONF_GTBEEN_MASK               (0x200U)
#define FTM_CONF_GTBEEN_SHIFT              (9U)
#define FTM_CONF_GTBEEN_WIDTH              (1U)
#define FTM_CONF_GTBEEN(x)                 (((uint32_t)(((uint32_t)(x)) << FTM_CONF_GTBEEN_SHIFT)) & FTM_CONF_GTBEEN_MASK)
#define FTM_CONF_GTBEOUT_MASK              (0x400U)
#define FTM_CONF_GTBEOUT_SHIFT             (10U)
#define FTM_CONF_GTBEOUT_WIDTH             (1U)
#define FTM_CONF_GTBEOUT(x)                (((uint32_t)(((uint32_t)(x)) << FTM_CONF_GTBEOUT_SHIFT)) & FTM_CONF_GTBEOUT_MASK)
#define FTM_CONF_ITRIGR_MASK               (0x800U)
#define FTM_CONF_ITRIGR_SHIFT              (11U)
#define FTM_CONF_ITRIGR_WIDTH              (1U)
#define FTM_CONF_ITRIGR(x)                 (((uint32_t)(((uint32_t)(x)) << FTM_CONF_ITRIGR_SHIFT)) & FTM_CONF_ITRIGR_MASK)
/*! @} */

/*! @name SYNCONF - Synchronization Configuration */
/*! @{ */
#define FTM_SYNCONF_HWTRIGMODE_MASK        (0x1U)
#define FTM_SYNCONF_HWTRIGMODE_SHIFT       (0U)
#define FTM_SYNCONF_HWTRIGMODE_WIDTH       (1U)
#define FTM_SYNCONF_HWTRIGMODE(x)          (((uint32_t)(((uint32_t)(x)) << FTM_SYNCONF_HWTRIGMODE_SHIFT)) & FTM_SYNCONF_HWTRIGMODE_MASK)
#define FTM_SYNCONF_CNTINC_MASK            (0x4U)
#define FTM_SYNCONF_CNTINC_SHIFT           (2U)
#define FTM_SYNCONF_CNTINC_WIDTH           (1U)
#define FTM_SYNCONF_CNTINC(x)              (((uint32_t)(((uint32_t)(x)) << FTM_SYNCONF_CNTINC_SHIFT)) & FTM_SYNCONF_CNTINC_MASK)
#define FTM_SYNCONF_INVC_MASK              (0x10U)
#define FTM_SYNCONF_INVC_SHIFT             (4U)
#define FTM_SYNCONF_INVC_WIDTH             (1U)
#define FTM_SYNCONF_INVC(x)                (((uint32_t)(((uint32_t)(x)) << FTM_SYNCONF_INVC_SHIFT)) & FTM_SYNCONF_INVC_MASK)
#define FTM_SYNCONF_SWOC_MASK              (0x20U)
#define FTM_SYNCONF_SWOC_SHIFT             (5U)
#define FTM_SYNCONF_SWOC_WIDTH             (1U)
#define FTM_SYNCONF_SWOC(x)                (((uint32_t)(((uint32_t)(x)) << FTM_SYNCONF_SWOC_SHIFT)) & FTM_SYNCONF_SWOC_MASK)
#define FTM_SYNCONF_SYNCMODE_MASK          (0x80U)
#define FTM_SYNCONF_SYNCMODE_SHIFT         (7U)
#define FTM_SYNCONF_SYNCMODE_WIDTH         (1U)
#define FTM_SYNCONF_SYNCMODE(x)            (((uint32_t)(((uint32_t)(x)) << FTM_SYNCONF_SYNCMODE_SHIFT)) & FTM_SYNCONF_SYNCMODE_MASK)
#define FTM_SYNCONF_SWRSTCNT_MASK          (0x100U)
#define FTM_SYNCONF_SWRSTCNT_SHIFT         (8U)
#define FTM_SYNCONF_SWRSTCNT_WIDTH         (1U)
#define FTM_SYNCONF_SWRSTCNT(x)            (((uint32_t)(((uint32_t)(x)) << FTM_SYNCONF_SWRSTCNT_SHIFT)) & FTM_SYNCONF_SWRSTCNT_MASK)
#define FTM_SYNCONF_SWWRBUF_MASK           (0x200U)
#define FTM_SYNCONF_SWWRBUF_SHIFT          (9U)
#define FTM_SYNCONF_SWWRBUF_WIDTH          (1U)
#define FTM_SYNCONF_SWWRBUF(x)             (((uint32_t)(((uint32_t)(x)) << FTM_SYNCONF_SWWRBUF_SHIFT)) & FTM_SYNCONF_SWWRBUF_MASK)
#define FTM_SYNCONF_SWOM_MASK              (0x400U)
#define FTM_SYNCONF_SWOM_SHIFT             (10U)
#define FTM_SYNCONF_SWOM_WIDTH             (1U)
#define FTM_SYNCONF_SWOM(x)                (((uint32_t)(((uint32_t)(x)) << FTM_SYNCONF_SWOM_SHIFT)) & FTM_SYNCONF_SWOM_MASK)
#define FTM_SYNCONF_SWINVC_MASK            (0x800U)
#define FTM_SYNCONF_SWINVC_SHIFT           (11U)
#define FTM_SYNCONF_SWINVC_WIDTH           (1U)
#define FTM_SYNCONF_SWINVC(x)              (((uint32_t)(((uint32_t)(x)) << FTM_SYNCONF_SWINVC_SHIFT)) & FTM_SYNCONF_SWINVC_MASK)
#define FTM_SYNCONF_SWSOC_MASK             (0x1000U)
#define FTM_SYNCONF_SWSOC_SHIFT            (12U)
#define FTM_SYNCONF_SWSOC_WIDTH            (1U)
#define FTM_SYNCONF_SWSOC(x)               (((uint32_t)(((uint32_t)(x)) << FTM_SYNCONF_SWSOC_SHIFT)) & FTM_SYNCONF_SWSOC_MASK)
#define FTM_SYNCONF_HWRSTCNT_MASK          (0x10000U)
#define FTM_SYNCONF_HWRSTCNT_SHIFT         (16U)
#define FTM_SYNCONF_HWRSTCNT_WIDTH         (1U)
#define FTM_SYNCONF_HWRSTCNT(x)            (((uint32_t)(((uint32_t)(x)) << FTM_SYNCONF_HWRSTCNT_SHIFT)) & FTM_SYNCONF_HWRSTCNT_MASK)
#define FTM_SYNCONF_HWWRBUF_MASK           (0x20000U)
#define FTM_SYNCONF_HWWRBUF_SHIFT          (17U)
#define FTM_SYNCONF_HWWRBUF_WIDTH          (1U)
#define FTM_SYNCONF_HWWRBUF(x)             (((uint32_t)(((uint32_t)(x)) << FTM_SYNCONF_HWWRBUF_SHIFT)) & FTM_SYNCONF_HWWRBUF_MASK)
#define FTM_SYNCONF_HWOM_MASK              (0x40000U)
#define FTM_SYNCONF_HWOM_SHIFT             (18U)
#define FTM_SYNCONF_HWOM_WIDTH             (1U)
#define FTM_SYNCONF_HWOM(x)                (((uint32_t)(((uint32_t)(x)) << FTM_SYNCONF_HWOM_SHIFT)) & FTM_SYNCONF_HWOM_MASK)
#define FTM_SYNCONF_HWINVC_MASK            (0x80000U)
#define FTM_SYNCONF_HWINVC_SHIFT           (19U)
#define FTM_SYNCONF_HWINVC_WIDTH           (1U)
#define FTM_SYNCONF_HWINVC(x)              (((uint32_t)(((uint32_t)(x)) << FTM_SYNCONF_HWINVC_SHIFT)) & FTM_SYNCONF_HWINVC_MASK)
#define FTM_SYNCONF_HWSOC_MASK             (0x100000U)
#define FTM_SYNCONF_HWSOC_SHIFT            (20U)
#define FTM_SYNCONF_HWSOC_WIDTH            (1U)
#define FTM_SYNCONF_HWSOC(x)               (((uint32_t)(((uint32_t)(x)) << FTM_SYNCONF_HWSOC_SHIFT)) & FTM_SYNCONF_HWSOC_MASK)
/*! @} */

/*! @name INVCTRL - FTM Inverting Control */
/*! @{ */
#define FTM_INVCTRL_INV0EN_MASK            (0x1U)
#define FTM_INVCTRL_INV0EN_SHIFT           (0U)
#define FTM_INVCTRL_INV0EN_WIDTH           (1U)
#define FTM_INVCTRL_INV0EN(x)              (((uint32_t)(((uint32_t)(x)) << FTM_INVCTRL_INV0EN_SHIFT)) & FTM_INVCTRL_INV0EN_MASK)
#define FTM_INVCTRL_INV1EN_MASK            (0x2U)
#define FTM_INVCTRL_INV1EN_SHIFT           (1U)
#define FTM_INVCTRL_INV1EN_WIDTH           (1U)
#define FTM_INVCTRL_INV1EN(x)              (((uint32_t)(((uint32_t)(x)) << FTM_INVCTRL_INV1EN_SHIFT)) & FTM_INVCTRL_INV1EN_MASK)
#define FTM_INVCTRL_INV2EN_MASK            (0x4U)
#define FTM_INVCTRL_INV2EN_SHIFT           (2U)
#define FTM_INVCTRL_INV2EN_WIDTH           (1U)
#define FTM_INVCTRL_INV2EN(x)              (((uint32_t)(((uint32_t)(x)) << FTM_INVCTRL_INV2EN_SHIFT)) & FTM_INVCTRL_INV2EN_MASK)
/*! @} */

/*! @name SWOCTRL - FTM Software Output Control */
/*! @{ */
#define FTM_SWOCTRL_CH0OC_MASK             (0x1U)
#define FTM_SWOCTRL_CH0OC_SHIFT            (0U)
#define FTM_SWOCTRL_CH0OC_WIDTH            (1U)
#define FTM_SWOCTRL_CH0OC(x)               (((uint32_t)(((uint32_t)(x)) << FTM_SWOCTRL_CH0OC_SHIFT)) & FTM_SWOCTRL_CH0OC_MASK)
#define FTM_SWOCTRL_CH1OC_MASK             (0x2U)
#define FTM_SWOCTRL_CH1OC_SHIFT            (1U)
#define FTM_SWOCTRL_CH1OC_WIDTH            (1U)
#define FTM_SWOCTRL_CH1OC(x)               (((uint32_t)(((uint32_t)(x)) << FTM_SWOCTRL_CH1OC_SHIFT)) & FTM_SWOCTRL_CH1OC_MASK)
#define FTM_SWOCTRL_CH2OC_MASK             (0x4U)
#define FTM_SWOCTRL_CH2OC_SHIFT            (2U)
#define FTM_SWOCTRL_CH2OC_WIDTH            (1U)
#define FTM_SWOCTRL_CH2OC(x)               (((uint32_t)(((uint32_t)(x)) << FTM_SWOCTRL_CH2OC_SHIFT)) & FTM_SWOCTRL_CH2OC_MASK)
#define FTM_SWOCTRL_CH3OC_MASK             (0x8U)
#define FTM_SWOCTRL_CH3OC_SHIFT            (3U)
#define FTM_SWOCTRL_CH3OC_WIDTH            (1U)
#define FTM_SWOCTRL_CH3OC(x)               (((uint32_t)(((uint32_t)(x)) << FTM_SWOCTRL_CH3OC_SHIFT)) & FTM_SWOCTRL_CH3OC_MASK)
#define FTM_SWOCTRL_CH4OC_MASK             (0x10U)
#define FTM_SWOCTRL_CH4OC_SHIFT            (4U)
#define FTM_SWOCTRL_CH4OC_WIDTH            (1U)
#define FTM_SWOCTRL_CH4OC(x)               (((uint32_t)(((uint32_t)(x)) << FTM_SWOCTRL_CH4OC_SHIFT)) & FTM_SWOCTRL_CH4OC_MASK)
#define FTM_SWOCTRL_CH5OC_MASK             (0x20U)
#define FTM_SWOCTRL_CH5OC_SHIFT            (5U)
#define FTM_SWOCTRL_CH5OC_WIDTH            (1U)
#define FTM_SWOCTRL_CH5OC(x)               (((uint32_t)(((uint32_t)(x)) << FTM_SWOCTRL_CH5OC_SHIFT)) & FTM_SWOCTRL_CH5OC_MASK)
#define FTM_SWOCTRL_CH0OCV_MASK            (0x100U)
#define FTM_SWOCTRL_CH0OCV_SHIFT           (8U)
#define FTM_SWOCTRL_CH0OCV_WIDTH           (1U)
#define FTM_SWOCTRL_CH0OCV(x)              (((uint32_t)(((uint32_t)(x)) << FTM_SWOCTRL_CH0OCV_SHIFT)) & FTM_SWOCTRL_CH0OCV_MASK)
#define FTM_SWOCTRL_CH1OCV_MASK            (0x200U)
#define FTM_SWOCTRL_CH1OCV_SHIFT           (9U)
#define FTM_SWOCTRL_CH1OCV_WIDTH           (1U)
#define FTM_SWOCTRL_CH1OCV(x)              (((uint32_t)(((uint32_t)(x)) << FTM_SWOCTRL_CH1OCV_SHIFT)) & FTM_SWOCTRL_CH1OCV_MASK)
#define FTM_SWOCTRL_CH2OCV_MASK            (0x400U)
#define FTM_SWOCTRL_CH2OCV_SHIFT           (10U)
#define FTM_SWOCTRL_CH2OCV_WIDTH           (1U)
#define FTM_SWOCTRL_CH2OCV(x)              (((uint32_t)(((uint32_t)(x)) << FTM_SWOCTRL_CH2OCV_SHIFT)) & FTM_SWOCTRL_CH2OCV_MASK)
#define FTM_SWOCTRL_CH3OCV_MASK            (0x800U)
#define FTM_SWOCTRL_CH3OCV_SHIFT           (11U)
#define FTM_SWOCTRL_CH3OCV_WIDTH           (1U)
#define FTM_SWOCTRL_CH3OCV(x)              (((uint32_t)(((uint32_t)(x)) << FTM_SWOCTRL_CH3OCV_SHIFT)) & FTM_SWOCTRL_CH3OCV_MASK)
#define FTM_SWOCTRL_CH4OCV_MASK            (0x1000U)
#define FTM_SWOCTRL_CH4OCV_SHIFT           (12U)
#define FTM_SWOCTRL_CH4OCV_WIDTH           (1U)
#define FTM_SWOCTRL_CH4OCV(x)              (((uint32_t)(((uint32_t)(x)) << FTM_SWOCTRL_CH4OCV_SHIFT)) & FTM_SWOCTRL_CH4OCV_MASK)
#define FTM_SWOCTRL_CH5OCV_MASK            (0x2000U)
#define FTM_SWOCTRL_CH5OCV_SHIFT           (13U)
#define FTM_SWOCTRL_CH5OCV_WIDTH           (1U)
#define FTM_SWOCTRL_CH5OCV(x)              (((uint32_t)(((uint32_t)(x)) << FTM_SWOCTRL_CH5OCV_SHIFT)) & FTM_SWOCTRL_CH5OCV_MASK)
/*! @} */

/*! @name PWMLOAD - FTM PWM Load */
/*! @{ */
#define FTM_PWMLOAD_CH0SEL_MASK            (0x1U)
#define FTM_PWMLOAD_CH0SEL_SHIFT           (0U)
#define FTM_PWMLOAD_CH0SEL_WIDTH           (1U)
#define FTM_PWMLOAD_CH0SEL(x)              (((uint32_t)(((uint32_t)(x)) << FTM_PWMLOAD_CH0SEL_SHIFT)) & FTM_PWMLOAD_CH0SEL_MASK)
#define FTM_PWMLOAD_CH1SEL_MASK            (0x2U)
#define FTM_PWMLOAD_CH1SEL_SHIFT           (1U)
#define FTM_PWMLOAD_CH1SEL_WIDTH           (1U)
#define FTM_PWMLOAD_CH1SEL(x)              (((uint32_t)(((uint32_t)(x)) << FTM_PWMLOAD_CH1SEL_SHIFT)) & FTM_PWMLOAD_CH1SEL_MASK)
#define FTM_PWMLOAD_CH2SEL_MASK            (0x4U)
#define FTM_PWMLOAD_CH2SEL_SHIFT           (2U)
#define FTM_PWMLOAD_CH2SEL_WIDTH           (1U)
#define FTM_PWMLOAD_CH2SEL(x)              (((uint32_t)(((uint32_t)(x)) << FTM_PWMLOAD_CH2SEL_SHIFT)) & FTM_PWMLOAD_CH2SEL_MASK)
#define FTM_PWMLOAD_CH3SEL_MASK            (0x8U)
#define FTM_PWMLOAD_CH3SEL_SHIFT           (3U)
#define FTM_PWMLOAD_CH3SEL_WIDTH           (1U)
#define FTM_PWMLOAD_CH3SEL(x)              (((uint32_t)(((uint32_t)(x)) << FTM_PWMLOAD_CH3SEL_SHIFT)) & FTM_PWMLOAD_CH3SEL_MASK)
#define FTM_PWMLOAD_CH4SEL_MASK            (0x10U)
#define FTM_PWMLOAD_CH4SEL_SHIFT           (4U)
#define FTM_PWMLOAD_CH4SEL_WIDTH           (1U)
#define FTM_PWMLOAD_CH4SEL(x)              (((uint32_t)(((uint32_t)(x)) << FTM_PWMLOAD_CH4SEL_SHIFT)) & FTM_PWMLOAD_CH4SEL_MASK)
#define FTM_PWMLOAD_CH5SEL_MASK            (0x20U)
#define FTM_PWMLOAD_CH5SEL_SHIFT           (5U)
#define FTM_PWMLOAD_CH5SEL_WIDTH           (1U)
#define FTM_PWMLOAD_CH5SEL(x)              (((uint32_t)(((uint32_t)(x)) << FTM_PWMLOAD_CH5SEL_SHIFT)) & FTM_PWMLOAD_CH5SEL_MASK)
#define FTM_PWMLOAD_HCSEL_MASK             (0x100U)
#define FTM_PWMLOAD_HCSEL_SHIFT            (8U)
#define FTM_PWMLOAD_HCSEL_WIDTH            (1U)
#define FTM_PWMLOAD_HCSEL(x)               (((uint32_t)(((uint32_t)(x)) << FTM_PWMLOAD_HCSEL_SHIFT)) & FTM_PWMLOAD_HCSEL_MASK)
#define FTM_PWMLOAD_LDOK_MASK              (0x200U)
#define FTM_PWMLOAD_LDOK_SHIFT             (9U)
#define FTM_PWMLOAD_LDOK_WIDTH             (1U)
#define FTM_PWMLOAD_LDOK(x)                (((uint32_t)(((uint32_t)(x)) << FTM_PWMLOAD_LDOK_SHIFT)) & FTM_PWMLOAD_LDOK_MASK)
#define FTM_PWMLOAD_GLEN_MASK              (0x400U)
#define FTM_PWMLOAD_GLEN_SHIFT             (10U)
#define FTM_PWMLOAD_GLEN_WIDTH             (1U)
#define FTM_PWMLOAD_GLEN(x)                (((uint32_t)(((uint32_t)(x)) << FTM_PWMLOAD_GLEN_SHIFT)) & FTM_PWMLOAD_GLEN_MASK)
#define FTM_PWMLOAD_GLDOK_MASK             (0x800U)
#define FTM_PWMLOAD_GLDOK_SHIFT            (11U)
#define FTM_PWMLOAD_GLDOK_WIDTH            (1U)
#define FTM_PWMLOAD_GLDOK(x)               (((uint32_t)(((uint32_t)(x)) << FTM_PWMLOAD_GLDOK_SHIFT)) & FTM_PWMLOAD_GLDOK_MASK)
/*! @} */

/*! @name HCR - Half Cycle Register */
/*! @{ */
#define FTM_HCR_HCVAL_MASK                 (0xFFFFU)
#define FTM_HCR_HCVAL_SHIFT                (0U)
#define FTM_HCR_HCVAL_WIDTH                (16U)
#define FTM_HCR_HCVAL(x)                   (((uint32_t)(((uint32_t)(x)) << FTM_HCR_HCVAL_SHIFT)) & FTM_HCR_HCVAL_MASK)
/*! @} */

/*! @name MOD_MIRROR - Mirror of Modulo Value */
/*! @{ */
#define FTM_MOD_MIRROR_FRACMOD_MASK        (0xF800U)
#define FTM_MOD_MIRROR_FRACMOD_SHIFT       (11U)
#define FTM_MOD_MIRROR_FRACMOD_WIDTH       (5U)
#define FTM_MOD_MIRROR_FRACMOD(x)          (((uint32_t)(((uint32_t)(x)) << FTM_MOD_MIRROR_FRACMOD_SHIFT)) & FTM_MOD_MIRROR_FRACMOD_MASK)
#define FTM_MOD_MIRROR_MOD_MASK            (0xFFFF0000U)
#define FTM_MOD_MIRROR_MOD_SHIFT           (16U)
#define FTM_MOD_MIRROR_MOD_WIDTH           (16U)
#define FTM_MOD_MIRROR_MOD(x)              (((uint32_t)(((uint32_t)(x)) << FTM_MOD_MIRROR_MOD_SHIFT)) & FTM_MOD_MIRROR_MOD_MASK)
/*! @} */

/*! @name CV_MIRROR - Mirror of Channel (n) Match Value */
/*! @{ */
#define FTM_CV_MIRROR_FRACVAL_MASK         (0xF800U)
#define FTM_CV_MIRROR_FRACVAL_SHIFT        (11U)
#define FTM_CV_MIRROR_FRACVAL_WIDTH        (5U)
#define FTM_CV_MIRROR_FRACVAL(x)           (((uint32_t)(((uint32_t)(x)) << FTM_CV_MIRROR_FRACVAL_SHIFT)) & FTM_CV_MIRROR_FRACVAL_MASK)
#define FTM_CV_MIRROR_VAL_MASK             (0xFFFF0000U)
#define FTM_CV_MIRROR_VAL_SHIFT            (16U)
#define FTM_CV_MIRROR_VAL_WIDTH            (16U)
#define FTM_CV_MIRROR_VAL(x)               (((uint32_t)(((uint32_t)(x)) << FTM_CV_MIRROR_VAL_SHIFT)) & FTM_CV_MIRROR_VAL_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group FTM_Register_Masks */


/*!
 * @}
 */ /* end of group FTM_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- FSC Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup FSC_Peripheral_Access_Layer FSC Peripheral Access Layer
 * @{
 */

/** FSC - Register Layout Typedef */
typedef struct {
  __O  uint32_t SCBISTC;                           /**< FSC BIST Control, offset: 0x0 */
  __I  uint32_t SCBISTA;                           /**< FSC BIST Activity, offset: 0x4 */
  __IO uint32_t SCCETH;                            /**< FSC Correctable Errors Threshold, offset: 0x8 */
  uint8_t RESERVED_0[4];
  __I  uint32_t SCLF0;                             /**< FSC Latent Fault, offset: 0x10 */
  uint8_t RESERVED_1[12];
  __I  uint32_t SCMF0;                             /**< FSC Mission Fault, offset: 0x20 */
  uint8_t RESERVED_2[12];
  __I  uint32_t SCCETHF0;                          /**< FSC Correctble Error Threshold Fault, offset: 0x30 */
} FSC_Type, *FSC_MemMapPtr;

/** Number of instances of the FSC module. */
#define FSC_INSTANCE_COUNT                       (1u)

/* FSC - Peripheral instance base addresses */
/** Peripheral FSC base address */
#define FSC_BASE                                 (0x50600000u)
/** Peripheral FSC base pointer */
#define FSC                                      ((FSC_Type *)FSC_BASE)
/** Array initializer of FSC peripheral base addresses */
#define FSC_BASE_ADDRS                           { FSC_BASE }
/** Array initializer of FSC peripheral base pointers */
#define FSC_BASE_PTRS                            { FSC }

/* ----------------------------------------------------------------------------
   -- FSC Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup FSC_Register_Masks FSC Register Masks
 * @{
 */

/*! @name SCBISTC - FSC BIST Control */
/*! @{ */
#define FSC_SCBISTC_BISTSTART_MASK               (0x1U)
#define FSC_SCBISTC_BISTSTART_SHIFT              (0U)
#define FSC_SCBISTC_BISTSTART_WIDTH              (1U)
#define FSC_SCBISTC_BISTSTART(x)                 (((uint32_t)(((uint32_t)(x)) << FSC_SCBISTC_BISTSTART_SHIFT)) & FSC_SCBISTC_BISTSTART_MASK)
#define FSC_SCBISTC_BISTSTEP_MASK                (0x2U)
#define FSC_SCBISTC_BISTSTEP_SHIFT               (1U)
#define FSC_SCBISTC_BISTSTEP_WIDTH               (1U)
#define FSC_SCBISTC_BISTSTEP(x)                  (((uint32_t)(((uint32_t)(x)) << FSC_SCBISTC_BISTSTEP_SHIFT)) & FSC_SCBISTC_BISTSTEP_MASK)
/*! @} */

/*! @name SCBISTA - FSC BIST Activity */
/*! @{ */
#define FSC_SCBISTA_BISTDONE_MASK                (0x1FU)
#define FSC_SCBISTA_BISTDONE_SHIFT               (0U)
#define FSC_SCBISTA_BISTDONE_WIDTH               (5U)
#define FSC_SCBISTA_BISTDONE(x)                  (((uint32_t)(((uint32_t)(x)) << FSC_SCBISTA_BISTDONE_SHIFT)) & FSC_SCBISTA_BISTDONE_MASK)
#define FSC_SCBISTA_BISTERR_MASK                 (0x3E0U)
#define FSC_SCBISTA_BISTERR_SHIFT                (5U)
#define FSC_SCBISTA_BISTERR_WIDTH                (5U)
#define FSC_SCBISTA_BISTERR(x)                   (((uint32_t)(((uint32_t)(x)) << FSC_SCBISTA_BISTERR_SHIFT)) & FSC_SCBISTA_BISTERR_MASK)
/*! @} */

/*! @name SCCETH - FSC Correctable Errors Threshold */
/*! @{ */
#define FSC_SCCETH_CERRTHRES_MASK                (0xFFU)
#define FSC_SCCETH_CERRTHRES_SHIFT               (0U)
#define FSC_SCCETH_CERRTHRES_WIDTH               (8U)
#define FSC_SCCETH_CERRTHRES(x)                  (((uint32_t)(((uint32_t)(x)) << FSC_SCCETH_CERRTHRES_SHIFT)) & FSC_SCCETH_CERRTHRES_MASK)
/*! @} */

/*! @name SCLF0 - FSC Latent Fault */
/*! @{ */
#define FSC_SCLF0_LATENTFAULT_MASK               (0x3FU)
#define FSC_SCLF0_LATENTFAULT_SHIFT              (0U)
#define FSC_SCLF0_LATENTFAULT_WIDTH              (6U)
#define FSC_SCLF0_LATENTFAULT(x)                 (((uint32_t)(((uint32_t)(x)) << FSC_SCLF0_LATENTFAULT_SHIFT)) & FSC_SCLF0_LATENTFAULT_MASK)
/*! @} */

/*! @name SCMF0 - FSC Mission Fault */
/*! @{ */
#define FSC_SCMF0_MISSIONFAULT_MASK              (0x3FU)
#define FSC_SCMF0_MISSIONFAULT_SHIFT             (0U)
#define FSC_SCMF0_MISSIONFAULT_WIDTH             (6U)
#define FSC_SCMF0_MISSIONFAULT(x)                (((uint32_t)(((uint32_t)(x)) << FSC_SCMF0_MISSIONFAULT_SHIFT)) & FSC_SCMF0_MISSIONFAULT_MASK)
/*! @} */

/*! @name SCCETHF0 - FSC Correctble Error Threshold Fault */
/*! @{ */
#define FSC_SCCETHF0_CERRTHFAULT_MASK            (0x3FU)
#define FSC_SCCETHF0_CERRTHFAULT_SHIFT           (0U)
#define FSC_SCCETHF0_CERRTHFAULT_WIDTH           (6U)
#define FSC_SCCETHF0_CERRTHFAULT(x)              (((uint32_t)(((uint32_t)(x)) << FSC_SCCETHF0_CERRTHFAULT_SHIFT)) & FSC_SCCETHF0_CERRTHFAULT_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group FSC_Register_Masks */


/*!
 * @}
 */ /* end of group FSC_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- FXOSC Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup FXOSC_Peripheral_Access_Layer FXOSC Peripheral Access Layer
 * @{
 */

/** FXOSC - Register Layout Typedef */
typedef struct {
  __IO uint32_t FXOSC_CTRL;                        /**< FXOSC Control Register, offset: 0x0 */
  __I  uint32_t FXOSC_STAT;                        /**< Oscillator Status Register, offset: 0x4 */
} FXOSC_Type, *FXOSC_MemMapPtr;

/** Number of instances of the FXOSC module. */
#define FXOSC_INSTANCE_COUNT                     (1u)

/* FXOSC - Peripheral instance base addresses */
/** Peripheral FXOSC base address */
#define FXOSC_BASE                               (0x40050000u)
/** Peripheral FXOSC base pointer */
#define FXOSC                                    ((FXOSC_Type *)FXOSC_BASE)
/** Array initializer of FXOSC peripheral base addresses */
#define FXOSC_BASE_ADDRS                         { FXOSC_BASE }
/** Array initializer of FXOSC peripheral base pointers */
#define FXOSC_BASE_PTRS                          { FXOSC }

/* ----------------------------------------------------------------------------
   -- FXOSC Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup FXOSC_Register_Masks FXOSC Register Masks
 * @{
 */

/*! @name FXOSC_CTRL - FXOSC Control Register */
/*! @{ */
#define FXOSC_CTRL_OSCON_MASK              (0x1U)
#define FXOSC_CTRL_OSCON_SHIFT             (0U)
#define FXOSC_CTRL_OSCON_WIDTH             (1U)
#define FXOSC_CTRL_OSCON(x)                (((uint32_t)(((uint32_t)(x)) << FXOSC_CTRL_OSCON_SHIFT)) & FXOSC_CTRL_OSCON_MASK)
#define FXOSC_CTRL_GM_SEL_MASK             (0xF0U)
#define FXOSC_CTRL_GM_SEL_SHIFT            (4U)
#define FXOSC_CTRL_GM_SEL_WIDTH            (4U)
#define FXOSC_CTRL_GM_SEL(x)               (((uint32_t)(((uint32_t)(x)) << FXOSC_CTRL_GM_SEL_SHIFT)) & FXOSC_CTRL_GM_SEL_MASK)
#define FXOSC_CTRL_EOCV_MASK               (0xFF0000U)
#define FXOSC_CTRL_EOCV_SHIFT              (16U)
#define FXOSC_CTRL_EOCV_WIDTH              (8U)
#define FXOSC_CTRL_EOCV(x)                 (((uint32_t)(((uint32_t)(x)) << FXOSC_CTRL_EOCV_SHIFT)) & FXOSC_CTRL_EOCV_MASK)
#define FXOSC_CTRL_COMP_EN_MASK            (0x1000000U)
#define FXOSC_CTRL_COMP_EN_SHIFT           (24U)
#define FXOSC_CTRL_COMP_EN_WIDTH           (1U)
#define FXOSC_CTRL_COMP_EN(x)              (((uint32_t)(((uint32_t)(x)) << FXOSC_CTRL_COMP_EN_SHIFT)) & FXOSC_CTRL_COMP_EN_MASK)
#define FXOSC_CTRL_OSC_BYP_MASK            (0x80000000U)
#define FXOSC_CTRL_OSC_BYP_SHIFT           (31U)
#define FXOSC_CTRL_OSC_BYP_WIDTH           (1U)
#define FXOSC_CTRL_OSC_BYP(x)              (((uint32_t)(((uint32_t)(x)) << FXOSC_CTRL_OSC_BYP_SHIFT)) & FXOSC_CTRL_OSC_BYP_MASK)
/*! @} */

/*! @name FXOSC_STAT - Oscillator Status Register */
/*! @{ */
#define FXOSC_STAT_OSC_STAT_MASK           (0x80000000U)
#define FXOSC_STAT_OSC_STAT_SHIFT          (31U)
#define FXOSC_STAT_OSC_STAT_WIDTH          (1U)
#define FXOSC_STAT_OSC_STAT(x)             (((uint32_t)(((uint32_t)(x)) << FXOSC_STAT_OSC_STAT_SHIFT)) & FXOSC_STAT_OSC_STAT_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group FXOSC_Register_Masks */


/*!
 * @}
 */ /* end of group FXOSC_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- GMAC Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup GMAC_Peripheral_Access_Layer GMAC Peripheral Access Layer
 * @{
 */

/** GMAC - Register Layout Typedef */
typedef struct {
  __IO uint32_t MAC_CONFIGURATION;                 /**< , offset: 0x0 */
  __IO uint32_t MAC_EXT_CONFIGURATION;             /**< , offset: 0x4 */
  __IO uint32_t MAC_PACKET_FILTER;                 /**< , offset: 0x8 */
  __IO uint32_t MAC_WATCHDOG_TIMEOUT;              /**< , offset: 0xC */
  __IO uint32_t MAC_HASH_TABLE_REG0;               /**< , offset: 0x10 */
  __IO uint32_t MAC_HASH_TABLE_REG1;               /**< , offset: 0x14 */
  __IO uint32_t MAC_HASH_TABLE_REG2;               /**< , offset: 0x18 */
  __IO uint32_t MAC_HASH_TABLE_REG3;               /**< , offset: 0x1C */
  __IO uint32_t MAC_HASH_TABLE_REG4;               /**< , offset: 0x20 */
  __IO uint32_t MAC_HASH_TABLE_REG5;               /**< , offset: 0x24 */
  __IO uint32_t MAC_HASH_TABLE_REG6;               /**< , offset: 0x28 */
  __IO uint32_t MAC_HASH_TABLE_REG7;               /**< , offset: 0x2C */
  uint8_t RESERVED_0[32];
  __IO uint32_t MAC_VLAN_TAG_CTRL;                 /**< , offset: 0x50 */
  __IO uint32_t MAC_VLAN_TAG_DATA;                 /**< , offset: 0x54 */
  __IO uint32_t MAC_VLAN_HASH_TABLE;               /**< , offset: 0x58 */
  uint8_t RESERVED_1[4];
  __IO uint32_t MAC_VLAN_INCL;                     /**< , offset: 0x60 */
  __IO uint32_t MAC_INNER_VLAN_INCL;               /**< , offset: 0x64 */
  uint8_t RESERVED_2[8];
  __IO uint32_t MAC_Q0_TX_FLOW_CTRL;               /**< , offset: 0x70 */
  __IO uint32_t MAC_Q1_TX_FLOW_CTRL;               /**< , offset: 0x74 */
  __IO uint32_t MAC_Q2_TX_FLOW_CTRL;               /**< , offset: 0x78 */
  __IO uint32_t MAC_Q3_TX_FLOW_CTRL;               /**< , offset: 0x7C */
  __IO uint32_t MAC_Q4_TX_FLOW_CTRL;               /**< , offset: 0x80 */
  uint8_t RESERVED_3[12];
  __IO uint32_t MAC_RX_FLOW_CTRL;                  /**< , offset: 0x90 */
  __IO uint32_t MAC_RXQ_CTRL4;                     /**< , offset: 0x94 */
  __IO uint32_t MAC_TXQ_PRTY_MAP0;                 /**< , offset: 0x98 */
  __IO uint32_t MAC_TXQ_PRTY_MAP1;                 /**< , offset: 0x9C */
  __IO uint32_t MAC_RXQ_CTRL0;                     /**< , offset: 0xA0 */
  __IO uint32_t MAC_RXQ_CTRL1;                     /**< , offset: 0xA4 */
  __IO uint32_t MAC_RXQ_CTRL2;                     /**< , offset: 0xA8 */
  __IO uint32_t MAC_RXQ_CTRL3;                     /**< , offset: 0xAC */
  __I  uint32_t MAC_INTERRUPT_STATUS;              /**< , offset: 0xB0 */
  __IO uint32_t MAC_INTERRUPT_ENABLE;              /**< , offset: 0xB4 */
  __I  uint32_t MAC_RX_TX_STATUS;                  /**< , offset: 0xB8 */
  uint8_t RESERVED_4[4];
  __IO uint32_t MAC_PMT_CONTROL_STATUS;            /**< , offset: 0xC0 */
  __IO uint32_t MAC_RWK_PACKET_FILTER;             /**< , offset: 0xC4 */
  uint8_t RESERVED_5[48];
  __IO uint32_t MAC_PHYIF_CONTROL_STATUS;          /**< , offset: 0xF8 */
  uint8_t RESERVED_6[20];
  __I  uint32_t MAC_VERSION;                       /**< , offset: 0x110 */
  __I  uint32_t MAC_DEBUG;                         /**< , offset: 0x114 */
  uint8_t RESERVED_7[4];
  __I  uint32_t MAC_HW_FEATURE0;                   /**< , offset: 0x11C */
  __I  uint32_t MAC_HW_FEATURE1;                   /**< , offset: 0x120 */
  __I  uint32_t MAC_HW_FEATURE2;                   /**< , offset: 0x124 */
  __I  uint32_t MAC_HW_FEATURE3;                   /**< , offset: 0x128 */
  uint8_t RESERVED_8[20];
  __IO uint32_t MAC_DPP_FSM_INTERRUPT_STATUS;      /**< , offset: 0x140 */
  uint8_t RESERVED_9[4];
  __IO uint32_t MAC_FSM_CONTROL;                   /**< , offset: 0x148 */
  __IO uint32_t MAC_FSM_ACT_TIMER;                 /**< , offset: 0x14C */
  __IO uint32_t SCS_REG1;                          /**< , offset: 0x150 */
  uint8_t RESERVED_10[172];
  __IO uint32_t MAC_MDIO_ADDRESS;                  /**< , offset: 0x200 */
  __IO uint32_t MAC_MDIO_DATA;                     /**< , offset: 0x204 */
  uint8_t RESERVED_11[8];
  __IO uint32_t MAC_ARP_ADDRESS;                   /**< , offset: 0x210 */
  uint8_t RESERVED_12[28];
  __IO uint32_t MAC_CSR_SW_CTRL;                   /**< , offset: 0x230 */
  __IO uint32_t MAC_FPE_CTRL_STS;                  /**< , offset: 0x234 */
  __IO uint32_t MAC_EXT_CFG1;                      /**< , offset: 0x238 */
  uint8_t RESERVED_13[4];
  __I  uint32_t MAC_PRESN_TIME_NS;                 /**< , offset: 0x240 */
  __IO uint32_t MAC_PRESN_TIME_UPDT;               /**< , offset: 0x244 */
  uint8_t RESERVED_14[184];
  __IO uint32_t MAC_ADDRESS0_HIGH;                 /**< , offset: 0x300 */
  __IO uint32_t MAC_ADDRESS0_LOW;                  /**< , offset: 0x304 */
  __IO uint32_t MAC_ADDRESS1_HIGH;                 /**< , offset: 0x308 */
  __IO uint32_t MAC_ADDRESS1_LOW;                  /**< , offset: 0x30C */
  uint8_t RESERVED_15[1008];
  __IO uint32_t MMC_CONTROL;                       /**< , offset: 0x700 */
  __I  uint32_t MMC_RX_INTERRUPT;                  /**< , offset: 0x704 */
  __I  uint32_t MMC_TX_INTERRUPT;                  /**< , offset: 0x708 */
  __IO uint32_t MMC_RX_INTERRUPT_MASK;             /**< , offset: 0x70C */
  __IO uint32_t MMC_TX_INTERRUPT_MASK;             /**< , offset: 0x710 */
  __I  uint32_t TX_OCTET_COUNT_GOOD_BAD;           /**< , offset: 0x714 */
  __I  uint32_t TX_PACKET_COUNT_GOOD_BAD;          /**< , offset: 0x718 */
  __I  uint32_t TX_BROADCAST_PACKETS_GOOD;         /**< , offset: 0x71C */
  __I  uint32_t TX_MULTICAST_PACKETS_GOOD;         /**< , offset: 0x720 */
  __I  uint32_t TX_64OCTETS_PACKETS_GOOD_BAD;      /**< , offset: 0x724 */
  __I  uint32_t TX_65TO127OCTETS_PACKETS_GOOD_BAD; /**< , offset: 0x728 */
  __I  uint32_t TX_128TO255OCTETS_PACKETS_GOOD_BAD; /**< , offset: 0x72C */
  __I  uint32_t TX_256TO511OCTETS_PACKETS_GOOD_BAD; /**< , offset: 0x730 */
  __I  uint32_t TX_512TO1023OCTETS_PACKETS_GOOD_BAD; /**< , offset: 0x734 */
  __I  uint32_t TX_1024TOMAXOCTETS_PACKETS_GOOD_BAD; /**< , offset: 0x738 */
  __I  uint32_t TX_UNICAST_PACKETS_GOOD_BAD;       /**< , offset: 0x73C */
  __I  uint32_t TX_MULTICAST_PACKETS_GOOD_BAD;     /**< , offset: 0x740 */
  __I  uint32_t TX_BROADCAST_PACKETS_GOOD_BAD;     /**< , offset: 0x744 */
  __I  uint32_t TX_UNDERFLOW_ERROR_PACKETS;        /**< , offset: 0x748 */
  __I  uint32_t TX_SINGLE_COLLISION_GOOD_PACKETS;  /**< , offset: 0x74C */
  __I  uint32_t TX_MULTIPLE_COLLISION_GOOD_PACKETS; /**< , offset: 0x750 */
  __I  uint32_t TX_DEFERRED_PACKETS;               /**< , offset: 0x754 */
  __I  uint32_t TX_LATE_COLLISION_PACKETS;         /**< , offset: 0x758 */
  __I  uint32_t TX_EXCESSIVE_COLLISION_PACKETS;    /**< , offset: 0x75C */
  __I  uint32_t TX_CARRIER_ERROR_PACKETS;          /**< , offset: 0x760 */
  __I  uint32_t TX_OCTET_COUNT_GOOD;               /**< , offset: 0x764 */
  __I  uint32_t TX_PACKET_COUNT_GOOD;              /**< , offset: 0x768 */
  __I  uint32_t TX_EXCESSIVE_DEFERRAL_ERROR;       /**< , offset: 0x76C */
  __I  uint32_t TX_PAUSE_PACKETS;                  /**< , offset: 0x770 */
  __I  uint32_t TX_VLAN_PACKETS_GOOD;              /**< , offset: 0x774 */
  __I  uint32_t TX_OSIZE_PACKETS_GOOD;             /**< , offset: 0x778 */
  uint8_t RESERVED_16[4];
  __I  uint32_t RX_PACKETS_COUNT_GOOD_BAD;         /**< , offset: 0x780 */
  __I  uint32_t RX_OCTET_COUNT_GOOD_BAD;           /**< , offset: 0x784 */
  __I  uint32_t RX_OCTET_COUNT_GOOD;               /**< , offset: 0x788 */
  __I  uint32_t RX_BROADCAST_PACKETS_GOOD;         /**< , offset: 0x78C */
  __I  uint32_t RX_MULTICAST_PACKETS_GOOD;         /**< , offset: 0x790 */
  __I  uint32_t RX_CRC_ERROR_PACKETS;              /**< , offset: 0x794 */
  __I  uint32_t RX_ALIGNMENT_ERROR_PACKETS;        /**< , offset: 0x798 */
  __I  uint32_t RX_RUNT_ERROR_PACKETS;             /**< , offset: 0x79C */
  __I  uint32_t RX_JABBER_ERROR_PACKETS;           /**< , offset: 0x7A0 */
  __I  uint32_t RX_UNDERSIZE_PACKETS_GOOD;         /**< , offset: 0x7A4 */
  __I  uint32_t RX_OVERSIZE_PACKETS_GOOD;          /**< , offset: 0x7A8 */
  __I  uint32_t RX_64OCTETS_PACKETS_GOOD_BAD;      /**< , offset: 0x7AC */
  __I  uint32_t RX_65TO127OCTETS_PACKETS_GOOD_BAD; /**< , offset: 0x7B0 */
  __I  uint32_t RX_128TO255OCTETS_PACKETS_GOOD_BAD; /**< , offset: 0x7B4 */
  __I  uint32_t RX_256TO511OCTETS_PACKETS_GOOD_BAD; /**< , offset: 0x7B8 */
  __I  uint32_t RX_512TO1023OCTETS_PACKETS_GOOD_BAD; /**< , offset: 0x7BC */
  __I  uint32_t RX_1024TOMAXOCTETS_PACKETS_GOOD_BAD; /**< , offset: 0x7C0 */
  __I  uint32_t RX_UNICAST_PACKETS_GOOD;           /**< , offset: 0x7C4 */
  __I  uint32_t RX_LENGTH_ERROR_PACKETS;           /**< , offset: 0x7C8 */
  __I  uint32_t RX_OUT_OF_RANGE_TYPE_PACKETS;      /**< , offset: 0x7CC */
  __I  uint32_t RX_PAUSE_PACKETS;                  /**< , offset: 0x7D0 */
  __I  uint32_t RX_FIFO_OVERFLOW_PACKETS;          /**< , offset: 0x7D4 */
  __I  uint32_t RX_VLAN_PACKETS_GOOD_BAD;          /**< , offset: 0x7D8 */
  __I  uint32_t RX_WATCHDOG_ERROR_PACKETS;         /**< , offset: 0x7DC */
  __I  uint32_t RX_RECEIVE_ERROR_PACKETS;          /**< , offset: 0x7E0 */
  __I  uint32_t RX_CONTROL_PACKETS_GOOD;           /**< , offset: 0x7E4 */
  uint8_t RESERVED_17[184];
  __I  uint32_t MMC_FPE_TX_INTERRUPT;              /**< , offset: 0x8A0 */
  __IO uint32_t MMC_FPE_TX_INTERRUPT_MASK;         /**< , offset: 0x8A4 */
  __I  uint32_t MMC_TX_FPE_FRAGMENT_CNTR;          /**< , offset: 0x8A8 */
  __I  uint32_t MMC_TX_HOLD_REQ_CNTR;              /**< , offset: 0x8AC */
  uint8_t RESERVED_18[16];
  __I  uint32_t MMC_FPE_RX_INTERRUPT;              /**< , offset: 0x8C0 */
  __IO uint32_t MMC_FPE_RX_INTERRUPT_MASK;         /**< , offset: 0x8C4 */
  __I  uint32_t MMC_RX_PACKET_ASSEMBLY_ERR_CNTR;   /**< , offset: 0x8C8 */
  __I  uint32_t MMC_RX_PACKET_SMD_ERR_CNTR;        /**< , offset: 0x8CC */
  __I  uint32_t MMC_RX_PACKET_ASSEMBLY_OK_CNTR;    /**< , offset: 0x8D0 */
  __I  uint32_t MMC_RX_FPE_FRAGMENT_CNTR;          /**< , offset: 0x8D4 */
  uint8_t RESERVED_19[40];
  __IO uint32_t MAC_L3_L4_CONTROL0;                /**< , offset: 0x900 */
  __IO uint32_t MAC_LAYER4_ADDRESS0;               /**< , offset: 0x904 */
  uint8_t RESERVED_20[8];
  __IO uint32_t MAC_LAYER3_ADDR0_REG0;             /**< , offset: 0x910 */
  __IO uint32_t MAC_LAYER3_ADDR1_REG0;             /**< , offset: 0x914 */
  __IO uint32_t MAC_LAYER3_ADDR2_REG0;             /**< , offset: 0x918 */
  __IO uint32_t MAC_LAYER3_ADDR3_REG0;             /**< , offset: 0x91C */
  uint8_t RESERVED_21[16];
  __IO uint32_t MAC_L3_L4_CONTROL1;                /**< , offset: 0x930 */
  __IO uint32_t MAC_LAYER4_ADDRESS1;               /**< , offset: 0x934 */
  uint8_t RESERVED_22[8];
  __IO uint32_t MAC_LAYER3_ADDR0_REG1;             /**< , offset: 0x940 */
  __IO uint32_t MAC_LAYER3_ADDR1_REG1;             /**< , offset: 0x944 */
  __IO uint32_t MAC_LAYER3_ADDR2_REG1;             /**< , offset: 0x948 */
  __IO uint32_t MAC_LAYER3_ADDR3_REG1;             /**< , offset: 0x94C */
  uint8_t RESERVED_23[16];
  __IO uint32_t MAC_L3_L4_CONTROL2;                /**< , offset: 0x960 */
  __IO uint32_t MAC_LAYER4_ADDRESS2;               /**< , offset: 0x964 */
  uint8_t RESERVED_24[8];
  __IO uint32_t MAC_LAYER3_ADDR0_REG2;             /**< , offset: 0x970 */
  __IO uint32_t MAC_LAYER3_ADDR1_REG2;             /**< , offset: 0x974 */
  __IO uint32_t MAC_LAYER3_ADDR2_REG2;             /**< , offset: 0x978 */
  __IO uint32_t MAC_LAYER3_ADDR3_REG2;             /**< , offset: 0x97C */
  uint8_t RESERVED_25[16];
  __IO uint32_t MAC_L3_L4_CONTROL3;                /**< , offset: 0x990 */
  __IO uint32_t MAC_LAYER4_ADDRESS3;               /**< , offset: 0x994 */
  uint8_t RESERVED_26[8];
  __IO uint32_t MAC_LAYER3_ADDR0_REG3;             /**< , offset: 0x9A0 */
  __IO uint32_t MAC_LAYER3_ADDR1_REG3;             /**< , offset: 0x9A4 */
  __IO uint32_t MAC_LAYER3_ADDR2_REG3;             /**< , offset: 0x9A8 */
  __IO uint32_t MAC_LAYER3_ADDR3_REG3;             /**< , offset: 0x9AC */
  uint8_t RESERVED_27[16];
  __IO uint32_t MAC_L3_L4_CONTROL4;                /**< , offset: 0x9C0 */
  __IO uint32_t MAC_LAYER4_ADDRESS4;               /**< , offset: 0x9C4 */
  uint8_t RESERVED_28[8];
  __IO uint32_t MAC_LAYER3_ADDR0_REG4;             /**< , offset: 0x9D0 */
  __IO uint32_t MAC_LAYER3_ADDR1_REG4;             /**< , offset: 0x9D4 */
  __IO uint32_t MAC_LAYER3_ADDR2_REG4;             /**< , offset: 0x9D8 */
  __IO uint32_t MAC_LAYER3_ADDR3_REG4;             /**< , offset: 0x9DC */
  uint8_t RESERVED_29[16];
  __IO uint32_t MAC_L3_L4_CONTROL5;                /**< , offset: 0x9F0 */
  __IO uint32_t MAC_LAYER4_ADDRESS5;               /**< , offset: 0x9F4 */
  uint8_t RESERVED_30[8];
  __IO uint32_t MAC_LAYER3_ADDR0_REG5;             /**< , offset: 0xA00 */
  __IO uint32_t MAC_LAYER3_ADDR1_REG5;             /**< , offset: 0xA04 */
  __IO uint32_t MAC_LAYER3_ADDR2_REG5;             /**< , offset: 0xA08 */
  __IO uint32_t MAC_LAYER3_ADDR3_REG5;             /**< , offset: 0xA0C */
  uint8_t RESERVED_31[16];
  __IO uint32_t MAC_L3_L4_CONTROL6;                /**< , offset: 0xA20 */
  __IO uint32_t MAC_LAYER4_ADDRESS6;               /**< , offset: 0xA24 */
  uint8_t RESERVED_32[8];
  __IO uint32_t MAC_LAYER3_ADDR0_REG6;             /**< , offset: 0xA30 */
  __IO uint32_t MAC_LAYER3_ADDR1_REG6;             /**< , offset: 0xA34 */
  __IO uint32_t MAC_LAYER3_ADDR2_REG6;             /**< , offset: 0xA38 */
  __IO uint32_t MAC_LAYER3_ADDR3_REG6;             /**< , offset: 0xA3C */
  uint8_t RESERVED_33[16];
  __IO uint32_t MAC_L3_L4_CONTROL7;                /**< , offset: 0xA50 */
  __IO uint32_t MAC_LAYER4_ADDRESS7;               /**< , offset: 0xA54 */
  uint8_t RESERVED_34[8];
  __IO uint32_t MAC_LAYER3_ADDR0_REG7;             /**< , offset: 0xA60 */
  __IO uint32_t MAC_LAYER3_ADDR1_REG7;             /**< , offset: 0xA64 */
  __IO uint32_t MAC_LAYER3_ADDR2_REG7;             /**< , offset: 0xA68 */
  __IO uint32_t MAC_LAYER3_ADDR3_REG7;             /**< , offset: 0xA6C */
  uint8_t RESERVED_35[144];
  __IO uint32_t MAC_TIMESTAMP_CONTROL;             /**< , offset: 0xB00 */
  __IO uint32_t MAC_SUB_SECOND_INCREMENT;          /**< , offset: 0xB04 */
  __I  uint32_t MAC_SYSTEM_TIME_SECONDS;           /**< , offset: 0xB08 */
  __I  uint32_t MAC_SYSTEM_TIME_NANOSECONDS;       /**< , offset: 0xB0C */
  __IO uint32_t MAC_SYSTEM_TIME_SECONDS_UPDATE;    /**< , offset: 0xB10 */
  __IO uint32_t MAC_SYSTEM_TIME_NANOSECONDS_UPDATE; /**< , offset: 0xB14 */
  __IO uint32_t MAC_TIMESTAMP_ADDEND;              /**< , offset: 0xB18 */
  __IO uint32_t MAC_SYSTEM_TIME_HIGHER_WORD_SECONDS; /**< , offset: 0xB1C */
  __I  uint32_t MAC_TIMESTAMP_STATUS;              /**< , offset: 0xB20 */
  uint8_t RESERVED_36[12];
  __I  uint32_t MAC_TX_TIMESTAMP_STATUS_NANOSECONDS; /**< , offset: 0xB30 */
  __I  uint32_t MAC_TX_TIMESTAMP_STATUS_SECONDS;   /**< , offset: 0xB34 */
  uint8_t RESERVED_37[8];
  __IO uint32_t MAC_AUXILIARY_CONTROL;             /**< , offset: 0xB40 */
  uint8_t RESERVED_38[4];
  __I  uint32_t MAC_AUXILIARY_TIMESTAMP_NANOSECONDS; /**< , offset: 0xB48 */
  __I  uint32_t MAC_AUXILIARY_TIMESTAMP_SECONDS;   /**< , offset: 0xB4C */
  __IO uint32_t MAC_TIMESTAMP_INGRESS_ASYM_CORR;   /**< , offset: 0xB50 */
  __IO uint32_t MAC_TIMESTAMP_EGRESS_ASYM_CORR;    /**< , offset: 0xB54 */
  __IO uint32_t MAC_TIMESTAMP_INGRESS_CORR_NANOSECOND; /**< , offset: 0xB58 */
  __IO uint32_t MAC_TIMESTAMP_EGRESS_CORR_NANOSECOND; /**< , offset: 0xB5C */
  __IO uint32_t MAC_TIMESTAMP_INGRESS_CORR_SUBNANOSEC; /**< , offset: 0xB60 */
  __IO uint32_t MAC_TIMESTAMP_EGRESS_CORR_SUBNANOSEC; /**< , offset: 0xB64 */
  __I  uint32_t MAC_TIMESTAMP_INGRESS_LATENCY;     /**< , offset: 0xB68 */
  __I  uint32_t MAC_TIMESTAMP_EGRESS_LATENCY;      /**< , offset: 0xB6C */
  __IO uint32_t MAC_PPS_CONTROL;                   /**< , offset: 0xB70 */
  uint8_t RESERVED_39[12];
  __IO uint32_t MAC_PPS0_TARGET_TIME_SECONDS;      /**< , offset: 0xB80 */
  __IO uint32_t MAC_PPS0_TARGET_TIME_NANOSECONDS;  /**< , offset: 0xB84 */
  __IO uint32_t MAC_PPS0_INTERVAL;                 /**< , offset: 0xB88 */
  __IO uint32_t MAC_PPS0_WIDTH;                    /**< , offset: 0xB8C */
  __IO uint32_t MAC_PPS1_TARGET_TIME_SECONDS;      /**< , offset: 0xB90 */
  __IO uint32_t MAC_PPS1_TARGET_TIME_NANOSECONDS;  /**< , offset: 0xB94 */
  __IO uint32_t MAC_PPS1_INTERVAL;                 /**< , offset: 0xB98 */
  __IO uint32_t MAC_PPS1_WIDTH;                    /**< , offset: 0xB9C */
  __IO uint32_t MAC_PPS2_TARGET_TIME_SECONDS;      /**< , offset: 0xBA0 */
  __IO uint32_t MAC_PPS2_TARGET_TIME_NANOSECONDS;  /**< , offset: 0xBA4 */
  __IO uint32_t MAC_PPS2_INTERVAL;                 /**< , offset: 0xBA8 */
  __IO uint32_t MAC_PPS2_WIDTH;                    /**< , offset: 0xBAC */
  __IO uint32_t MAC_PPS3_TARGET_TIME_SECONDS;      /**< , offset: 0xBB0 */
  __IO uint32_t MAC_PPS3_TARGET_TIME_NANOSECONDS;  /**< , offset: 0xBB4 */
  __IO uint32_t MAC_PPS3_INTERVAL;                 /**< , offset: 0xBB8 */
  __IO uint32_t MAC_PPS3_WIDTH;                    /**< , offset: 0xBBC */
  __IO uint32_t MAC_PTO_CONTROL;                   /**< , offset: 0xBC0 */
  __IO uint32_t MAC_SOURCE_PORT_IDENTITY0;         /**< , offset: 0xBC4 */
  __IO uint32_t MAC_SOURCE_PORT_IDENTITY1;         /**< , offset: 0xBC8 */
  __IO uint32_t MAC_SOURCE_PORT_IDENTITY2;         /**< , offset: 0xBCC */
  __IO uint32_t MAC_LOG_MESSAGE_INTERVAL;          /**< , offset: 0xBD0 */
  uint8_t RESERVED_40[44];
  __IO uint32_t MTL_OPERATION_MODE;                /**< , offset: 0xC00 */
  uint8_t RESERVED_41[4];
  __IO uint32_t MTL_DBG_CTL;                       /**< , offset: 0xC08 */
  __IO uint32_t MTL_DBG_STS;                       /**< , offset: 0xC0C */
  __IO uint32_t MTL_FIFO_DEBUG_DATA;               /**< , offset: 0xC10 */
  uint8_t RESERVED_42[12];
  __I  uint32_t MTL_INTERRUPT_STATUS;              /**< , offset: 0xC20 */
  uint8_t RESERVED_43[12];
  __IO uint32_t MTL_RXQ_DMA_MAP0;                  /**< , offset: 0xC30 */
  __IO uint32_t MTL_RXQ_DMA_MAP1;                  /**< , offset: 0xC34 */
  uint8_t RESERVED_44[8];
  __IO uint32_t MTL_TBS_CTRL;                      /**< , offset: 0xC40 */
  uint8_t RESERVED_45[12];
  __IO uint32_t MTL_EST_CONTROL;                   /**< , offset: 0xC50 */
  uint8_t RESERVED_46[4];
  __IO uint32_t MTL_EST_STATUS;                    /**< , offset: 0xC58 */
  uint8_t RESERVED_47[4];
  __IO uint32_t MTL_EST_SCH_ERROR;                 /**< , offset: 0xC60 */
  __IO uint32_t MTL_EST_FRM_SIZE_ERROR;            /**< , offset: 0xC64 */
  __I  uint32_t MTL_EST_FRM_SIZE_CAPTURE;          /**< , offset: 0xC68 */
  uint8_t RESERVED_48[4];
  __IO uint32_t MTL_EST_INTR_ENABLE;               /**< , offset: 0xC70 */
  uint8_t RESERVED_49[12];
  __IO uint32_t MTL_EST_GCL_CONTROL;               /**< , offset: 0xC80 */
  __IO uint32_t MTL_EST_GCL_DATA;                  /**< , offset: 0xC84 */
  uint8_t RESERVED_50[8];
  __IO uint32_t MTL_FPE_CTRL_STS;                  /**< , offset: 0xC90 */
  __IO uint32_t MTL_FPE_ADVANCE;                   /**< , offset: 0xC94 */
  uint8_t RESERVED_51[8];
  __IO uint32_t MTL_RXP_CONTROL_STATUS;            /**< , offset: 0xCA0 */
  __IO uint32_t MTL_RXP_INTERRUPT_CONTROL_STATUS;  /**< , offset: 0xCA4 */
  __I  uint32_t MTL_RXP_DROP_CNT;                  /**< , offset: 0xCA8 */
  __I  uint32_t MTL_RXP_ERROR_CNT;                 /**< , offset: 0xCAC */
  __IO uint32_t MTL_RXP_INDIRECT_ACC_CONTROL_STATUS; /**< , offset: 0xCB0 */
  __I  uint32_t MTL_RXP_INDIRECT_ACC_DATA;         /**< , offset: 0xCB4 */
  uint8_t RESERVED_52[8];
  __IO uint32_t MTL_ECC_CONTROL;                   /**< , offset: 0xCC0 */
  __I  uint32_t MTL_SAFETY_INTERRUPT_STATUS;       /**< , offset: 0xCC4 */
  __IO uint32_t MTL_ECC_INTERRUPT_ENABLE;          /**< , offset: 0xCC8 */
  __IO uint32_t MTL_ECC_INTERRUPT_STATUS;          /**< , offset: 0xCCC */
  __IO uint32_t MTL_ECC_ERR_STS_RCTL;              /**< , offset: 0xCD0 */
  __I  uint32_t MTL_ECC_ERR_ADDR_STATUS;           /**< , offset: 0xCD4 */
  __I  uint32_t MTL_ECC_ERR_CNTR_STATUS;           /**< , offset: 0xCD8 */
  uint8_t RESERVED_53[4];
  __IO uint32_t MTL_DPP_CONTROL;                   /**< , offset: 0xCE0 */
  uint8_t RESERVED_54[28];
  __IO uint32_t MTL_TXQ0_OPERATION_MODE;           /**< , offset: 0xD00 */
  __I  uint32_t MTL_TXQ0_UNDERFLOW;                /**< , offset: 0xD04 */
  __I  uint32_t MTL_TXQ0_DEBUG;                    /**< , offset: 0xD08 */
  uint8_t RESERVED_55[8];
  __I  uint32_t MTL_TXQ0_ETS_STATUS;               /**< , offset: 0xD14 */
  __IO uint32_t MTL_TXQ0_QUANTUM_WEIGHT;           /**< , offset: 0xD18 */
  uint8_t RESERVED_56[16];
  __IO uint32_t MTL_Q0_INTERRUPT_CONTROL_STATUS;   /**< , offset: 0xD2C */
  __IO uint32_t MTL_RXQ0_OPERATION_MODE;           /**< , offset: 0xD30 */
  __I  uint32_t MTL_RXQ0_MISSED_PACKET_OVERFLOW_CNT; /**< , offset: 0xD34 */
  __I  uint32_t MTL_RXQ0_DEBUG;                    /**< , offset: 0xD38 */
  __IO uint32_t MTL_RXQ0_CONTROL;                  /**< , offset: 0xD3C */
  __IO uint32_t MTL_TXQ1_OPERATION_MODE;           /**< , offset: 0xD40 */
  __I  uint32_t MTL_TXQ1_UNDERFLOW;                /**< , offset: 0xD44 */
  __I  uint32_t MTL_TXQ1_DEBUG;                    /**< , offset: 0xD48 */
  uint8_t RESERVED_57[4];
  __IO uint32_t MTL_TXQ1_ETS_CONTROL;              /**< , offset: 0xD50 */
  __I  uint32_t MTL_TXQ1_ETS_STATUS;               /**< , offset: 0xD54 */
  __IO uint32_t MTL_TXQ1_QUANTUM_WEIGHT;           /**< , offset: 0xD58 */
  __IO uint32_t MTL_TXQ1_SENDSLOPECREDIT;          /**< , offset: 0xD5C */
  __IO uint32_t MTL_TXQ1_HICREDIT;                 /**< , offset: 0xD60 */
  __IO uint32_t MTL_TXQ1_LOCREDIT;                 /**< , offset: 0xD64 */
  uint8_t RESERVED_58[4];
  __IO uint32_t MTL_Q1_INTERRUPT_CONTROL_STATUS;   /**< , offset: 0xD6C */
  __IO uint32_t MTL_RXQ1_OPERATION_MODE;           /**< , offset: 0xD70 */
  __I  uint32_t MTL_RXQ1_MISSED_PACKET_OVERFLOW_CNT; /**< , offset: 0xD74 */
  __I  uint32_t MTL_RXQ1_DEBUG;                    /**< , offset: 0xD78 */
  __IO uint32_t MTL_RXQ1_CONTROL;                  /**< , offset: 0xD7C */
  __IO uint32_t MTL_TXQ2_OPERATION_MODE;           /**< , offset: 0xD80 */
  __I  uint32_t MTL_TXQ2_UNDERFLOW;                /**< , offset: 0xD84 */
  __I  uint32_t MTL_TXQ2_DEBUG;                    /**< , offset: 0xD88 */
  uint8_t RESERVED_59[4];
  __IO uint32_t MTL_TXQ2_ETS_CONTROL;              /**< , offset: 0xD90 */
  __I  uint32_t MTL_TXQ2_ETS_STATUS;               /**< , offset: 0xD94 */
  __IO uint32_t MTL_TXQ2_QUANTUM_WEIGHT;           /**< , offset: 0xD98 */
  __IO uint32_t MTL_TXQ2_SENDSLOPECREDIT;          /**< , offset: 0xD9C */
  __IO uint32_t MTL_TXQ2_HICREDIT;                 /**< , offset: 0xDA0 */
  __IO uint32_t MTL_TXQ2_LOCREDIT;                 /**< , offset: 0xDA4 */
  uint8_t RESERVED_60[4];
  __IO uint32_t MTL_Q2_INTERRUPT_CONTROL_STATUS;   /**< , offset: 0xDAC */
  __IO uint32_t MTL_RXQ2_OPERATION_MODE;           /**< , offset: 0xDB0 */
  __I  uint32_t MTL_RXQ2_MISSED_PACKET_OVERFLOW_CNT; /**< , offset: 0xDB4 */
  __I  uint32_t MTL_RXQ2_DEBUG;                    /**< , offset: 0xDB8 */
  __IO uint32_t MTL_RXQ2_CONTROL;                  /**< , offset: 0xDBC */
  __IO uint32_t MTL_TXQ3_OPERATION_MODE;           /**< , offset: 0xDC0 */
  __I  uint32_t MTL_TXQ3_UNDERFLOW;                /**< , offset: 0xDC4 */
  __I  uint32_t MTL_TXQ3_DEBUG;                    /**< , offset: 0xDC8 */
  uint8_t RESERVED_61[4];
  __IO uint32_t MTL_TXQ3_ETS_CONTROL;              /**< , offset: 0xDD0 */
  __I  uint32_t MTL_TXQ3_ETS_STATUS;               /**< , offset: 0xDD4 */
  __IO uint32_t MTL_TXQ3_QUANTUM_WEIGHT;           /**< , offset: 0xDD8 */
  __IO uint32_t MTL_TXQ3_SENDSLOPECREDIT;          /**< , offset: 0xDDC */
  __IO uint32_t MTL_TXQ3_HICREDIT;                 /**< , offset: 0xDE0 */
  __IO uint32_t MTL_TXQ3_LOCREDIT;                 /**< , offset: 0xDE4 */
  uint8_t RESERVED_62[4];
  __IO uint32_t MTL_Q3_INTERRUPT_CONTROL_STATUS;   /**< , offset: 0xDEC */
  __IO uint32_t MTL_RXQ3_OPERATION_MODE;           /**< , offset: 0xDF0 */
  __I  uint32_t MTL_RXQ3_MISSED_PACKET_OVERFLOW_CNT; /**< , offset: 0xDF4 */
  __I  uint32_t MTL_RXQ3_DEBUG;                    /**< , offset: 0xDF8 */
  __IO uint32_t MTL_RXQ3_CONTROL;                  /**< , offset: 0xDFC */
  __IO uint32_t MTL_TXQ4_OPERATION_MODE;           /**< , offset: 0xE00 */
  __I  uint32_t MTL_TXQ4_UNDERFLOW;                /**< , offset: 0xE04 */
  __I  uint32_t MTL_TXQ4_DEBUG;                    /**< , offset: 0xE08 */
  uint8_t RESERVED_63[4];
  __IO uint32_t MTL_TXQ4_ETS_CONTROL;              /**< , offset: 0xE10 */
  __I  uint32_t MTL_TXQ4_ETS_STATUS;               /**< , offset: 0xE14 */
  __IO uint32_t MTL_TXQ4_QUANTUM_WEIGHT;           /**< , offset: 0xE18 */
  __IO uint32_t MTL_TXQ4_SENDSLOPECREDIT;          /**< , offset: 0xE1C */
  __IO uint32_t MTL_TXQ4_HICREDIT;                 /**< , offset: 0xE20 */
  __IO uint32_t MTL_TXQ4_LOCREDIT;                 /**< , offset: 0xE24 */
  uint8_t RESERVED_64[4];
  __IO uint32_t MTL_Q4_INTERRUPT_CONTROL_STATUS;   /**< , offset: 0xE2C */
  __IO uint32_t MTL_RXQ4_OPERATION_MODE;           /**< , offset: 0xE30 */
  __I  uint32_t MTL_RXQ4_MISSED_PACKET_OVERFLOW_CNT; /**< , offset: 0xE34 */
  __I  uint32_t MTL_RXQ4_DEBUG;                    /**< , offset: 0xE38 */
  __IO uint32_t MTL_RXQ4_CONTROL;                  /**< , offset: 0xE3C */
  uint8_t RESERVED_65[448];
  __IO uint32_t DMA_MODE;                          /**< , offset: 0x1000 */
  __IO uint32_t DMA_SYSBUS_MODE;                   /**< , offset: 0x1004 */
  __I  uint32_t DMA_INTERRUPT_STATUS;              /**< , offset: 0x1008 */
  __I  uint32_t DMA_DEBUG_STATUS0;                 /**< , offset: 0x100C */
  __I  uint32_t DMA_DEBUG_STATUS1;                 /**< , offset: 0x1010 */
  uint8_t RESERVED_66[12];
  __IO uint32_t AXI4_TX_AR_ACE_CONTROL;            /**< , offset: 0x1020 */
  __IO uint32_t AXI4_RX_AW_ACE_CONTROL;            /**< , offset: 0x1024 */
  __IO uint32_t AXI4_TXRX_AWAR_ACE_CONTROL;        /**< , offset: 0x1028 */
  uint8_t RESERVED_67[20];
  __IO uint32_t AXI_LPI_ENTRY_INTERVAL;            /**< , offset: 0x1040 */
  uint8_t RESERVED_68[12];
  __IO uint32_t DMA_TBS_CTRL;                      /**< , offset: 0x1050 */
  uint8_t RESERVED_69[44];
  __I  uint32_t DMA_SAFETY_INTERRUPT_STATUS;       /**< , offset: 0x1080 */
  uint8_t RESERVED_70[124];
  __IO uint32_t DMA_CH0_CONTROL;                   /**< , offset: 0x1100 */
  __IO uint32_t DMA_CH0_TX_CONTROL;                /**< , offset: 0x1104 */
  __IO uint32_t DMA_CH0_RX_CONTROL;                /**< , offset: 0x1108 */
  uint8_t RESERVED_71[8];
  __IO uint32_t DMA_CH0_TXDESC_LIST_ADDRESS;       /**< , offset: 0x1114 */
  uint8_t RESERVED_72[4];
  __IO uint32_t DMA_CH0_RXDESC_LIST_ADDRESS;       /**< , offset: 0x111C */
  __IO uint32_t DMA_CH0_TXDESC_TAIL_POINTER;       /**< , offset: 0x1120 */
  uint8_t RESERVED_73[4];
  __IO uint32_t DMA_CH0_RXDESC_TAIL_POINTER;       /**< , offset: 0x1128 */
  __IO uint32_t DMA_CH0_TXDESC_RING_LENGTH;        /**< , offset: 0x112C */
  __IO uint32_t DMA_CH0_RXDESC_RING_LENGTH;        /**< , offset: 0x1130 */
  __IO uint32_t DMA_CH0_INTERRUPT_ENABLE;          /**< , offset: 0x1134 */
  __IO uint32_t DMA_CH0_RX_INTERRUPT_WATCHDOG_TIMER; /**< , offset: 0x1138 */
  __IO uint32_t DMA_CH0_SLOT_FUNCTION_CONTROL_STATUS; /**< , offset: 0x113C */
  uint8_t RESERVED_74[4];
  __I  uint32_t DMA_CH0_CURRENT_APP_TXDESC;        /**< , offset: 0x1144 */
  uint8_t RESERVED_75[4];
  __I  uint32_t DMA_CH0_CURRENT_APP_RXDESC;        /**< , offset: 0x114C */
  uint8_t RESERVED_76[4];
  __I  uint32_t DMA_CH0_CURRENT_APP_TXBUFFER;      /**< , offset: 0x1154 */
  uint8_t RESERVED_77[4];
  __I  uint32_t DMA_CH0_CURRENT_APP_RXBUFFER;      /**< , offset: 0x115C */
  __IO uint32_t DMA_CH0_STATUS;                    /**< , offset: 0x1160 */
  __I  uint32_t DMA_CH0_MISS_FRAME_CNT;            /**< , offset: 0x1164 */
  __I  uint32_t DMA_CH0_RXP_ACCEPT_CNT;            /**< , offset: 0x1168 */
  __I  uint32_t DMA_CH0_RX_ERI_CNT;                /**< , offset: 0x116C */
  uint8_t RESERVED_78[16];
  __IO uint32_t DMA_CH1_CONTROL;                   /**< , offset: 0x1180 */
  __IO uint32_t DMA_CH1_TX_CONTROL;                /**< , offset: 0x1184 */
  __IO uint32_t DMA_CH1_RX_CONTROL;                /**< , offset: 0x1188 */
  uint8_t RESERVED_79[8];
  __IO uint32_t DMA_CH1_TXDESC_LIST_ADDRESS;       /**< , offset: 0x1194 */
  uint8_t RESERVED_80[4];
  __IO uint32_t DMA_CH1_RXDESC_LIST_ADDRESS;       /**< , offset: 0x119C */
  __IO uint32_t DMA_CH1_TXDESC_TAIL_POINTER;       /**< , offset: 0x11A0 */
  uint8_t RESERVED_81[4];
  __IO uint32_t DMA_CH1_RXDESC_TAIL_POINTER;       /**< , offset: 0x11A8 */
  __IO uint32_t DMA_CH1_TXDESC_RING_LENGTH;        /**< , offset: 0x11AC */
  __IO uint32_t DMA_CH1_RXDESC_RING_LENGTH;        /**< , offset: 0x11B0 */
  __IO uint32_t DMA_CH1_INTERRUPT_ENABLE;          /**< , offset: 0x11B4 */
  __IO uint32_t DMA_CH1_RX_INTERRUPT_WATCHDOG_TIMER; /**< , offset: 0x11B8 */
  __IO uint32_t DMA_CH1_SLOT_FUNCTION_CONTROL_STATUS; /**< , offset: 0x11BC */
  uint8_t RESERVED_82[4];
  __I  uint32_t DMA_CH1_CURRENT_APP_TXDESC;        /**< , offset: 0x11C4 */
  uint8_t RESERVED_83[4];
  __I  uint32_t DMA_CH1_CURRENT_APP_RXDESC;        /**< , offset: 0x11CC */
  uint8_t RESERVED_84[4];
  __I  uint32_t DMA_CH1_CURRENT_APP_TXBUFFER;      /**< , offset: 0x11D4 */
  uint8_t RESERVED_85[4];
  __I  uint32_t DMA_CH1_CURRENT_APP_RXBUFFER;      /**< , offset: 0x11DC */
  __IO uint32_t DMA_CH1_STATUS;                    /**< , offset: 0x11E0 */
  __I  uint32_t DMA_CH1_MISS_FRAME_CNT;            /**< , offset: 0x11E4 */
  __I  uint32_t DMA_CH1_RXP_ACCEPT_CNT;            /**< , offset: 0x11E8 */
  __I  uint32_t DMA_CH1_RX_ERI_CNT;                /**< , offset: 0x11EC */
  uint8_t RESERVED_86[16];
  __IO uint32_t DMA_CH2_CONTROL;                   /**< , offset: 0x1200 */
  __IO uint32_t DMA_CH2_TX_CONTROL;                /**< , offset: 0x1204 */
  __IO uint32_t DMA_CH2_RX_CONTROL;                /**< , offset: 0x1208 */
  uint8_t RESERVED_87[8];
  __IO uint32_t DMA_CH2_TXDESC_LIST_ADDRESS;       /**< , offset: 0x1214 */
  uint8_t RESERVED_88[4];
  __IO uint32_t DMA_CH2_RXDESC_LIST_ADDRESS;       /**< , offset: 0x121C */
  __IO uint32_t DMA_CH2_TXDESC_TAIL_POINTER;       /**< , offset: 0x1220 */
  uint8_t RESERVED_89[4];
  __IO uint32_t DMA_CH2_RXDESC_TAIL_POINTER;       /**< , offset: 0x1228 */
  __IO uint32_t DMA_CH2_TXDESC_RING_LENGTH;        /**< , offset: 0x122C */
  __IO uint32_t DMA_CH2_RXDESC_RING_LENGTH;        /**< , offset: 0x1230 */
  __IO uint32_t DMA_CH2_INTERRUPT_ENABLE;          /**< , offset: 0x1234 */
  __IO uint32_t DMA_CH2_RX_INTERRUPT_WATCHDOG_TIMER; /**< , offset: 0x1238 */
  __IO uint32_t DMA_CH2_SLOT_FUNCTION_CONTROL_STATUS; /**< , offset: 0x123C */
  uint8_t RESERVED_90[4];
  __I  uint32_t DMA_CH2_CURRENT_APP_TXDESC;        /**< , offset: 0x1244 */
  uint8_t RESERVED_91[4];
  __I  uint32_t DMA_CH2_CURRENT_APP_RXDESC;        /**< , offset: 0x124C */
  uint8_t RESERVED_92[4];
  __I  uint32_t DMA_CH2_CURRENT_APP_TXBUFFER;      /**< , offset: 0x1254 */
  uint8_t RESERVED_93[4];
  __I  uint32_t DMA_CH2_CURRENT_APP_RXBUFFER;      /**< , offset: 0x125C */
  __IO uint32_t DMA_CH2_STATUS;                    /**< , offset: 0x1260 */
  __I  uint32_t DMA_CH2_MISS_FRAME_CNT;            /**< , offset: 0x1264 */
  __I  uint32_t DMA_CH2_RXP_ACCEPT_CNT;            /**< , offset: 0x1268 */
  __I  uint32_t DMA_CH2_RX_ERI_CNT;                /**< , offset: 0x126C */
  uint8_t RESERVED_94[16];
  __IO uint32_t DMA_CH3_CONTROL;                   /**< , offset: 0x1280 */
  __IO uint32_t DMA_CH3_TX_CONTROL;                /**< , offset: 0x1284 */
  __IO uint32_t DMA_CH3_RX_CONTROL;                /**< , offset: 0x1288 */
  uint8_t RESERVED_95[8];
  __IO uint32_t DMA_CH3_TXDESC_LIST_ADDRESS;       /**< , offset: 0x1294 */
  uint8_t RESERVED_96[4];
  __IO uint32_t DMA_CH3_RXDESC_LIST_ADDRESS;       /**< , offset: 0x129C */
  __IO uint32_t DMA_CH3_TXDESC_TAIL_POINTER;       /**< , offset: 0x12A0 */
  uint8_t RESERVED_97[4];
  __IO uint32_t DMA_CH3_RXDESC_TAIL_POINTER;       /**< , offset: 0x12A8 */
  __IO uint32_t DMA_CH3_TXDESC_RING_LENGTH;        /**< , offset: 0x12AC */
  __IO uint32_t DMA_CH3_RXDESC_RING_LENGTH;        /**< , offset: 0x12B0 */
  __IO uint32_t DMA_CH3_INTERRUPT_ENABLE;          /**< , offset: 0x12B4 */
  __IO uint32_t DMA_CH3_RX_INTERRUPT_WATCHDOG_TIMER; /**< , offset: 0x12B8 */
  __IO uint32_t DMA_CH3_SLOT_FUNCTION_CONTROL_STATUS; /**< , offset: 0x12BC */
  uint8_t RESERVED_98[4];
  __I  uint32_t DMA_CH3_CURRENT_APP_TXDESC;        /**< , offset: 0x12C4 */
  uint8_t RESERVED_99[4];
  __I  uint32_t DMA_CH3_CURRENT_APP_RXDESC;        /**< , offset: 0x12CC */
  uint8_t RESERVED_100[4];
  __I  uint32_t DMA_CH3_CURRENT_APP_TXBUFFER;      /**< , offset: 0x12D4 */
  uint8_t RESERVED_101[4];
  __I  uint32_t DMA_CH3_CURRENT_APP_RXBUFFER;      /**< , offset: 0x12DC */
  __IO uint32_t DMA_CH3_STATUS;                    /**< , offset: 0x12E0 */
  __I  uint32_t DMA_CH3_MISS_FRAME_CNT;            /**< , offset: 0x12E4 */
  __I  uint32_t DMA_CH3_RXP_ACCEPT_CNT;            /**< , offset: 0x12E8 */
  __I  uint32_t DMA_CH3_RX_ERI_CNT;                /**< , offset: 0x12EC */
  uint8_t RESERVED_102[16];
  __IO uint32_t DMA_CH4_CONTROL;                   /**< , offset: 0x1300 */
  __IO uint32_t DMA_CH4_TX_CONTROL;                /**< , offset: 0x1304 */
  __IO uint32_t DMA_CH4_RX_CONTROL;                /**< , offset: 0x1308 */
  uint8_t RESERVED_103[8];
  __IO uint32_t DMA_CH4_TXDESC_LIST_ADDRESS;       /**< , offset: 0x1314 */
  uint8_t RESERVED_104[4];
  __IO uint32_t DMA_CH4_RXDESC_LIST_ADDRESS;       /**< , offset: 0x131C */
  __IO uint32_t DMA_CH4_TXDESC_TAIL_POINTER;       /**< , offset: 0x1320 */
  uint8_t RESERVED_105[4];
  __IO uint32_t DMA_CH4_RXDESC_TAIL_POINTER;       /**< , offset: 0x1328 */
  __IO uint32_t DMA_CH4_TXDESC_RING_LENGTH;        /**< , offset: 0x132C */
  __IO uint32_t DMA_CH4_RXDESC_RING_LENGTH;        /**< , offset: 0x1330 */
  __IO uint32_t DMA_CH4_INTERRUPT_ENABLE;          /**< , offset: 0x1334 */
  __IO uint32_t DMA_CH4_RX_INTERRUPT_WATCHDOG_TIMER; /**< , offset: 0x1338 */
  __IO uint32_t DMA_CH4_SLOT_FUNCTION_CONTROL_STATUS; /**< , offset: 0x133C */
  uint8_t RESERVED_106[4];
  __I  uint32_t DMA_CH4_CURRENT_APP_TXDESC;        /**< , offset: 0x1344 */
  uint8_t RESERVED_107[4];
  __I  uint32_t DMA_CH4_CURRENT_APP_RXDESC;        /**< , offset: 0x134C */
  uint8_t RESERVED_108[4];
  __I  uint32_t DMA_CH4_CURRENT_APP_TXBUFFER;      /**< , offset: 0x1354 */
  uint8_t RESERVED_109[4];
  __I  uint32_t DMA_CH4_CURRENT_APP_RXBUFFER;      /**< , offset: 0x135C */
  __IO uint32_t DMA_CH4_STATUS;                    /**< , offset: 0x1360 */
  __I  uint32_t DMA_CH4_MISS_FRAME_CNT;            /**< , offset: 0x1364 */
  __I  uint32_t DMA_CH4_RXP_ACCEPT_CNT;            /**< , offset: 0x1368 */
  __I  uint32_t DMA_CH4_RX_ERI_CNT;                /**< , offset: 0x136C */
} GMAC_Type, *GMAC_MemMapPtr;

/** Number of instances of the GMAC module. */
#define GMAC_INSTANCE_COUNT                      (1u)

/* GMAC - Peripheral instance base addresses */
/** Peripheral GMAC_0 base address */
#define GMAC_0_BASE                              (0x4033C000u)
/** Peripheral GMAC_0 base pointer */
#define GMAC_0                                   ((GMAC_Type *)GMAC_0_BASE)
/** Array initializer of GMAC peripheral base addresses */
#define GMAC_BASE_ADDRS                          { GMAC_0_BASE }
/** Array initializer of GMAC peripheral base pointers */
#define GMAC_BASE_PTRS                           { GMAC_0 }

/* ----------------------------------------------------------------------------
   -- GMAC Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup GMAC_Register_Masks GMAC Register Masks
 * @{
 */

/*! @name MAC_CONFIGURATION -  */
/*! @{ */
#define GMAC_MAC_CONFIGURATION_RE_MASK           (0x1U)
#define GMAC_MAC_CONFIGURATION_RE_SHIFT          (0U)
#define GMAC_MAC_CONFIGURATION_RE_WIDTH          (1U)
#define GMAC_MAC_CONFIGURATION_RE(x)             (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_CONFIGURATION_RE_SHIFT)) & GMAC_MAC_CONFIGURATION_RE_MASK)
#define GMAC_MAC_CONFIGURATION_TE_MASK           (0x2U)
#define GMAC_MAC_CONFIGURATION_TE_SHIFT          (1U)
#define GMAC_MAC_CONFIGURATION_TE_WIDTH          (1U)
#define GMAC_MAC_CONFIGURATION_TE(x)             (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_CONFIGURATION_TE_SHIFT)) & GMAC_MAC_CONFIGURATION_TE_MASK)
#define GMAC_MAC_CONFIGURATION_PRELEN_MASK       (0xCU)
#define GMAC_MAC_CONFIGURATION_PRELEN_SHIFT      (2U)
#define GMAC_MAC_CONFIGURATION_PRELEN_WIDTH      (2U)
#define GMAC_MAC_CONFIGURATION_PRELEN(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_CONFIGURATION_PRELEN_SHIFT)) & GMAC_MAC_CONFIGURATION_PRELEN_MASK)
#define GMAC_MAC_CONFIGURATION_DC_MASK           (0x10U)
#define GMAC_MAC_CONFIGURATION_DC_SHIFT          (4U)
#define GMAC_MAC_CONFIGURATION_DC_WIDTH          (1U)
#define GMAC_MAC_CONFIGURATION_DC(x)             (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_CONFIGURATION_DC_SHIFT)) & GMAC_MAC_CONFIGURATION_DC_MASK)
#define GMAC_MAC_CONFIGURATION_BL_MASK           (0x60U)
#define GMAC_MAC_CONFIGURATION_BL_SHIFT          (5U)
#define GMAC_MAC_CONFIGURATION_BL_WIDTH          (2U)
#define GMAC_MAC_CONFIGURATION_BL(x)             (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_CONFIGURATION_BL_SHIFT)) & GMAC_MAC_CONFIGURATION_BL_MASK)
#define GMAC_MAC_CONFIGURATION_DR_MASK           (0x100U)
#define GMAC_MAC_CONFIGURATION_DR_SHIFT          (8U)
#define GMAC_MAC_CONFIGURATION_DR_WIDTH          (1U)
#define GMAC_MAC_CONFIGURATION_DR(x)             (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_CONFIGURATION_DR_SHIFT)) & GMAC_MAC_CONFIGURATION_DR_MASK)
#define GMAC_MAC_CONFIGURATION_DCRS_MASK         (0x200U)
#define GMAC_MAC_CONFIGURATION_DCRS_SHIFT        (9U)
#define GMAC_MAC_CONFIGURATION_DCRS_WIDTH        (1U)
#define GMAC_MAC_CONFIGURATION_DCRS(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_CONFIGURATION_DCRS_SHIFT)) & GMAC_MAC_CONFIGURATION_DCRS_MASK)
#define GMAC_MAC_CONFIGURATION_DO_MASK           (0x400U)
#define GMAC_MAC_CONFIGURATION_DO_SHIFT          (10U)
#define GMAC_MAC_CONFIGURATION_DO_WIDTH          (1U)
#define GMAC_MAC_CONFIGURATION_DO(x)             (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_CONFIGURATION_DO_SHIFT)) & GMAC_MAC_CONFIGURATION_DO_MASK)
#define GMAC_MAC_CONFIGURATION_ECRSFD_MASK       (0x800U)
#define GMAC_MAC_CONFIGURATION_ECRSFD_SHIFT      (11U)
#define GMAC_MAC_CONFIGURATION_ECRSFD_WIDTH      (1U)
#define GMAC_MAC_CONFIGURATION_ECRSFD(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_CONFIGURATION_ECRSFD_SHIFT)) & GMAC_MAC_CONFIGURATION_ECRSFD_MASK)
#define GMAC_MAC_CONFIGURATION_LM_MASK           (0x1000U)
#define GMAC_MAC_CONFIGURATION_LM_SHIFT          (12U)
#define GMAC_MAC_CONFIGURATION_LM_WIDTH          (1U)
#define GMAC_MAC_CONFIGURATION_LM(x)             (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_CONFIGURATION_LM_SHIFT)) & GMAC_MAC_CONFIGURATION_LM_MASK)
#define GMAC_MAC_CONFIGURATION_DM_MASK           (0x2000U)
#define GMAC_MAC_CONFIGURATION_DM_SHIFT          (13U)
#define GMAC_MAC_CONFIGURATION_DM_WIDTH          (1U)
#define GMAC_MAC_CONFIGURATION_DM(x)             (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_CONFIGURATION_DM_SHIFT)) & GMAC_MAC_CONFIGURATION_DM_MASK)
#define GMAC_MAC_CONFIGURATION_FES_MASK          (0x4000U)
#define GMAC_MAC_CONFIGURATION_FES_SHIFT         (14U)
#define GMAC_MAC_CONFIGURATION_FES_WIDTH         (1U)
#define GMAC_MAC_CONFIGURATION_FES(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_CONFIGURATION_FES_SHIFT)) & GMAC_MAC_CONFIGURATION_FES_MASK)
#define GMAC_MAC_CONFIGURATION_PS_MASK           (0x8000U)
#define GMAC_MAC_CONFIGURATION_PS_SHIFT          (15U)
#define GMAC_MAC_CONFIGURATION_PS_WIDTH          (1U)
#define GMAC_MAC_CONFIGURATION_PS(x)             (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_CONFIGURATION_PS_SHIFT)) & GMAC_MAC_CONFIGURATION_PS_MASK)
#define GMAC_MAC_CONFIGURATION_JE_MASK           (0x10000U)
#define GMAC_MAC_CONFIGURATION_JE_SHIFT          (16U)
#define GMAC_MAC_CONFIGURATION_JE_WIDTH          (1U)
#define GMAC_MAC_CONFIGURATION_JE(x)             (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_CONFIGURATION_JE_SHIFT)) & GMAC_MAC_CONFIGURATION_JE_MASK)
#define GMAC_MAC_CONFIGURATION_JD_MASK           (0x20000U)
#define GMAC_MAC_CONFIGURATION_JD_SHIFT          (17U)
#define GMAC_MAC_CONFIGURATION_JD_WIDTH          (1U)
#define GMAC_MAC_CONFIGURATION_JD(x)             (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_CONFIGURATION_JD_SHIFT)) & GMAC_MAC_CONFIGURATION_JD_MASK)
#define GMAC_MAC_CONFIGURATION_BE_MASK           (0x40000U)
#define GMAC_MAC_CONFIGURATION_BE_SHIFT          (18U)
#define GMAC_MAC_CONFIGURATION_BE_WIDTH          (1U)
#define GMAC_MAC_CONFIGURATION_BE(x)             (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_CONFIGURATION_BE_SHIFT)) & GMAC_MAC_CONFIGURATION_BE_MASK)
#define GMAC_MAC_CONFIGURATION_WD_MASK           (0x80000U)
#define GMAC_MAC_CONFIGURATION_WD_SHIFT          (19U)
#define GMAC_MAC_CONFIGURATION_WD_WIDTH          (1U)
#define GMAC_MAC_CONFIGURATION_WD(x)             (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_CONFIGURATION_WD_SHIFT)) & GMAC_MAC_CONFIGURATION_WD_MASK)
#define GMAC_MAC_CONFIGURATION_ACS_MASK          (0x100000U)
#define GMAC_MAC_CONFIGURATION_ACS_SHIFT         (20U)
#define GMAC_MAC_CONFIGURATION_ACS_WIDTH         (1U)
#define GMAC_MAC_CONFIGURATION_ACS(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_CONFIGURATION_ACS_SHIFT)) & GMAC_MAC_CONFIGURATION_ACS_MASK)
#define GMAC_MAC_CONFIGURATION_CST_MASK          (0x200000U)
#define GMAC_MAC_CONFIGURATION_CST_SHIFT         (21U)
#define GMAC_MAC_CONFIGURATION_CST_WIDTH         (1U)
#define GMAC_MAC_CONFIGURATION_CST(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_CONFIGURATION_CST_SHIFT)) & GMAC_MAC_CONFIGURATION_CST_MASK)
#define GMAC_MAC_CONFIGURATION_S2KP_MASK         (0x400000U)
#define GMAC_MAC_CONFIGURATION_S2KP_SHIFT        (22U)
#define GMAC_MAC_CONFIGURATION_S2KP_WIDTH        (1U)
#define GMAC_MAC_CONFIGURATION_S2KP(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_CONFIGURATION_S2KP_SHIFT)) & GMAC_MAC_CONFIGURATION_S2KP_MASK)
#define GMAC_MAC_CONFIGURATION_GPSLCE_MASK       (0x800000U)
#define GMAC_MAC_CONFIGURATION_GPSLCE_SHIFT      (23U)
#define GMAC_MAC_CONFIGURATION_GPSLCE_WIDTH      (1U)
#define GMAC_MAC_CONFIGURATION_GPSLCE(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_CONFIGURATION_GPSLCE_SHIFT)) & GMAC_MAC_CONFIGURATION_GPSLCE_MASK)
#define GMAC_MAC_CONFIGURATION_IPG_MASK          (0x7000000U)
#define GMAC_MAC_CONFIGURATION_IPG_SHIFT         (24U)
#define GMAC_MAC_CONFIGURATION_IPG_WIDTH         (3U)
#define GMAC_MAC_CONFIGURATION_IPG(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_CONFIGURATION_IPG_SHIFT)) & GMAC_MAC_CONFIGURATION_IPG_MASK)
#define GMAC_MAC_CONFIGURATION_IPC_MASK          (0x8000000U)
#define GMAC_MAC_CONFIGURATION_IPC_SHIFT         (27U)
#define GMAC_MAC_CONFIGURATION_IPC_WIDTH         (1U)
#define GMAC_MAC_CONFIGURATION_IPC(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_CONFIGURATION_IPC_SHIFT)) & GMAC_MAC_CONFIGURATION_IPC_MASK)
#define GMAC_MAC_CONFIGURATION_SARC_MASK         (0x70000000U)
#define GMAC_MAC_CONFIGURATION_SARC_SHIFT        (28U)
#define GMAC_MAC_CONFIGURATION_SARC_WIDTH        (3U)
#define GMAC_MAC_CONFIGURATION_SARC(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_CONFIGURATION_SARC_SHIFT)) & GMAC_MAC_CONFIGURATION_SARC_MASK)
#define GMAC_MAC_CONFIGURATION_ARPEN_MASK        (0x80000000U)
#define GMAC_MAC_CONFIGURATION_ARPEN_SHIFT       (31U)
#define GMAC_MAC_CONFIGURATION_ARPEN_WIDTH       (1U)
#define GMAC_MAC_CONFIGURATION_ARPEN(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_CONFIGURATION_ARPEN_SHIFT)) & GMAC_MAC_CONFIGURATION_ARPEN_MASK)
/*! @} */

/*! @name MAC_EXT_CONFIGURATION -  */
/*! @{ */
#define GMAC_MAC_EXT_CONFIGURATION_GPSL_MASK     (0x3FFFU)
#define GMAC_MAC_EXT_CONFIGURATION_GPSL_SHIFT    (0U)
#define GMAC_MAC_EXT_CONFIGURATION_GPSL_WIDTH    (14U)
#define GMAC_MAC_EXT_CONFIGURATION_GPSL(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_EXT_CONFIGURATION_GPSL_SHIFT)) & GMAC_MAC_EXT_CONFIGURATION_GPSL_MASK)
#define GMAC_MAC_EXT_CONFIGURATION_DCRCC_MASK    (0x10000U)
#define GMAC_MAC_EXT_CONFIGURATION_DCRCC_SHIFT   (16U)
#define GMAC_MAC_EXT_CONFIGURATION_DCRCC_WIDTH   (1U)
#define GMAC_MAC_EXT_CONFIGURATION_DCRCC(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_EXT_CONFIGURATION_DCRCC_SHIFT)) & GMAC_MAC_EXT_CONFIGURATION_DCRCC_MASK)
#define GMAC_MAC_EXT_CONFIGURATION_SPEN_MASK     (0x20000U)
#define GMAC_MAC_EXT_CONFIGURATION_SPEN_SHIFT    (17U)
#define GMAC_MAC_EXT_CONFIGURATION_SPEN_WIDTH    (1U)
#define GMAC_MAC_EXT_CONFIGURATION_SPEN(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_EXT_CONFIGURATION_SPEN_SHIFT)) & GMAC_MAC_EXT_CONFIGURATION_SPEN_MASK)
#define GMAC_MAC_EXT_CONFIGURATION_USP_MASK      (0x40000U)
#define GMAC_MAC_EXT_CONFIGURATION_USP_SHIFT     (18U)
#define GMAC_MAC_EXT_CONFIGURATION_USP_WIDTH     (1U)
#define GMAC_MAC_EXT_CONFIGURATION_USP(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_EXT_CONFIGURATION_USP_SHIFT)) & GMAC_MAC_EXT_CONFIGURATION_USP_MASK)
#define GMAC_MAC_EXT_CONFIGURATION_PDC_MASK      (0x80000U)
#define GMAC_MAC_EXT_CONFIGURATION_PDC_SHIFT     (19U)
#define GMAC_MAC_EXT_CONFIGURATION_PDC_WIDTH     (1U)
#define GMAC_MAC_EXT_CONFIGURATION_PDC(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_EXT_CONFIGURATION_PDC_SHIFT)) & GMAC_MAC_EXT_CONFIGURATION_PDC_MASK)
#define GMAC_MAC_EXT_CONFIGURATION_HDSMS_MASK    (0x700000U)
#define GMAC_MAC_EXT_CONFIGURATION_HDSMS_SHIFT   (20U)
#define GMAC_MAC_EXT_CONFIGURATION_HDSMS_WIDTH   (3U)
#define GMAC_MAC_EXT_CONFIGURATION_HDSMS(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_EXT_CONFIGURATION_HDSMS_SHIFT)) & GMAC_MAC_EXT_CONFIGURATION_HDSMS_MASK)
#define GMAC_MAC_EXT_CONFIGURATION_EIPGEN_MASK   (0x1000000U)
#define GMAC_MAC_EXT_CONFIGURATION_EIPGEN_SHIFT  (24U)
#define GMAC_MAC_EXT_CONFIGURATION_EIPGEN_WIDTH  (1U)
#define GMAC_MAC_EXT_CONFIGURATION_EIPGEN(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_EXT_CONFIGURATION_EIPGEN_SHIFT)) & GMAC_MAC_EXT_CONFIGURATION_EIPGEN_MASK)
#define GMAC_MAC_EXT_CONFIGURATION_EIPG_MASK     (0x3E000000U)
#define GMAC_MAC_EXT_CONFIGURATION_EIPG_SHIFT    (25U)
#define GMAC_MAC_EXT_CONFIGURATION_EIPG_WIDTH    (5U)
#define GMAC_MAC_EXT_CONFIGURATION_EIPG(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_EXT_CONFIGURATION_EIPG_SHIFT)) & GMAC_MAC_EXT_CONFIGURATION_EIPG_MASK)
/*! @} */

/*! @name MAC_PACKET_FILTER -  */
/*! @{ */
#define GMAC_MAC_PACKET_FILTER_PR_MASK           (0x1U)
#define GMAC_MAC_PACKET_FILTER_PR_SHIFT          (0U)
#define GMAC_MAC_PACKET_FILTER_PR_WIDTH          (1U)
#define GMAC_MAC_PACKET_FILTER_PR(x)             (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PACKET_FILTER_PR_SHIFT)) & GMAC_MAC_PACKET_FILTER_PR_MASK)
#define GMAC_MAC_PACKET_FILTER_HUC_MASK          (0x2U)
#define GMAC_MAC_PACKET_FILTER_HUC_SHIFT         (1U)
#define GMAC_MAC_PACKET_FILTER_HUC_WIDTH         (1U)
#define GMAC_MAC_PACKET_FILTER_HUC(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PACKET_FILTER_HUC_SHIFT)) & GMAC_MAC_PACKET_FILTER_HUC_MASK)
#define GMAC_MAC_PACKET_FILTER_HMC_MASK          (0x4U)
#define GMAC_MAC_PACKET_FILTER_HMC_SHIFT         (2U)
#define GMAC_MAC_PACKET_FILTER_HMC_WIDTH         (1U)
#define GMAC_MAC_PACKET_FILTER_HMC(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PACKET_FILTER_HMC_SHIFT)) & GMAC_MAC_PACKET_FILTER_HMC_MASK)
#define GMAC_MAC_PACKET_FILTER_DAIF_MASK         (0x8U)
#define GMAC_MAC_PACKET_FILTER_DAIF_SHIFT        (3U)
#define GMAC_MAC_PACKET_FILTER_DAIF_WIDTH        (1U)
#define GMAC_MAC_PACKET_FILTER_DAIF(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PACKET_FILTER_DAIF_SHIFT)) & GMAC_MAC_PACKET_FILTER_DAIF_MASK)
#define GMAC_MAC_PACKET_FILTER_PM_MASK           (0x10U)
#define GMAC_MAC_PACKET_FILTER_PM_SHIFT          (4U)
#define GMAC_MAC_PACKET_FILTER_PM_WIDTH          (1U)
#define GMAC_MAC_PACKET_FILTER_PM(x)             (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PACKET_FILTER_PM_SHIFT)) & GMAC_MAC_PACKET_FILTER_PM_MASK)
#define GMAC_MAC_PACKET_FILTER_DBF_MASK          (0x20U)
#define GMAC_MAC_PACKET_FILTER_DBF_SHIFT         (5U)
#define GMAC_MAC_PACKET_FILTER_DBF_WIDTH         (1U)
#define GMAC_MAC_PACKET_FILTER_DBF(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PACKET_FILTER_DBF_SHIFT)) & GMAC_MAC_PACKET_FILTER_DBF_MASK)
#define GMAC_MAC_PACKET_FILTER_PCF_MASK          (0xC0U)
#define GMAC_MAC_PACKET_FILTER_PCF_SHIFT         (6U)
#define GMAC_MAC_PACKET_FILTER_PCF_WIDTH         (2U)
#define GMAC_MAC_PACKET_FILTER_PCF(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PACKET_FILTER_PCF_SHIFT)) & GMAC_MAC_PACKET_FILTER_PCF_MASK)
#define GMAC_MAC_PACKET_FILTER_SAIF_MASK         (0x100U)
#define GMAC_MAC_PACKET_FILTER_SAIF_SHIFT        (8U)
#define GMAC_MAC_PACKET_FILTER_SAIF_WIDTH        (1U)
#define GMAC_MAC_PACKET_FILTER_SAIF(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PACKET_FILTER_SAIF_SHIFT)) & GMAC_MAC_PACKET_FILTER_SAIF_MASK)
#define GMAC_MAC_PACKET_FILTER_SAF_MASK          (0x200U)
#define GMAC_MAC_PACKET_FILTER_SAF_SHIFT         (9U)
#define GMAC_MAC_PACKET_FILTER_SAF_WIDTH         (1U)
#define GMAC_MAC_PACKET_FILTER_SAF(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PACKET_FILTER_SAF_SHIFT)) & GMAC_MAC_PACKET_FILTER_SAF_MASK)
#define GMAC_MAC_PACKET_FILTER_HPF_MASK          (0x400U)
#define GMAC_MAC_PACKET_FILTER_HPF_SHIFT         (10U)
#define GMAC_MAC_PACKET_FILTER_HPF_WIDTH         (1U)
#define GMAC_MAC_PACKET_FILTER_HPF(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PACKET_FILTER_HPF_SHIFT)) & GMAC_MAC_PACKET_FILTER_HPF_MASK)
#define GMAC_MAC_PACKET_FILTER_VTFE_MASK         (0x10000U)
#define GMAC_MAC_PACKET_FILTER_VTFE_SHIFT        (16U)
#define GMAC_MAC_PACKET_FILTER_VTFE_WIDTH        (1U)
#define GMAC_MAC_PACKET_FILTER_VTFE(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PACKET_FILTER_VTFE_SHIFT)) & GMAC_MAC_PACKET_FILTER_VTFE_MASK)
#define GMAC_MAC_PACKET_FILTER_IPFE_MASK         (0x100000U)
#define GMAC_MAC_PACKET_FILTER_IPFE_SHIFT        (20U)
#define GMAC_MAC_PACKET_FILTER_IPFE_WIDTH        (1U)
#define GMAC_MAC_PACKET_FILTER_IPFE(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PACKET_FILTER_IPFE_SHIFT)) & GMAC_MAC_PACKET_FILTER_IPFE_MASK)
#define GMAC_MAC_PACKET_FILTER_DNTU_MASK         (0x200000U)
#define GMAC_MAC_PACKET_FILTER_DNTU_SHIFT        (21U)
#define GMAC_MAC_PACKET_FILTER_DNTU_WIDTH        (1U)
#define GMAC_MAC_PACKET_FILTER_DNTU(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PACKET_FILTER_DNTU_SHIFT)) & GMAC_MAC_PACKET_FILTER_DNTU_MASK)
#define GMAC_MAC_PACKET_FILTER_RA_MASK           (0x80000000U)
#define GMAC_MAC_PACKET_FILTER_RA_SHIFT          (31U)
#define GMAC_MAC_PACKET_FILTER_RA_WIDTH          (1U)
#define GMAC_MAC_PACKET_FILTER_RA(x)             (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PACKET_FILTER_RA_SHIFT)) & GMAC_MAC_PACKET_FILTER_RA_MASK)
/*! @} */

/*! @name MAC_WATCHDOG_TIMEOUT -  */
/*! @{ */
#define GMAC_MAC_WATCHDOG_TIMEOUT_WTO_MASK       (0xFU)
#define GMAC_MAC_WATCHDOG_TIMEOUT_WTO_SHIFT      (0U)
#define GMAC_MAC_WATCHDOG_TIMEOUT_WTO_WIDTH      (4U)
#define GMAC_MAC_WATCHDOG_TIMEOUT_WTO(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_WATCHDOG_TIMEOUT_WTO_SHIFT)) & GMAC_MAC_WATCHDOG_TIMEOUT_WTO_MASK)
#define GMAC_MAC_WATCHDOG_TIMEOUT_PWE_MASK       (0x100U)
#define GMAC_MAC_WATCHDOG_TIMEOUT_PWE_SHIFT      (8U)
#define GMAC_MAC_WATCHDOG_TIMEOUT_PWE_WIDTH      (1U)
#define GMAC_MAC_WATCHDOG_TIMEOUT_PWE(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_WATCHDOG_TIMEOUT_PWE_SHIFT)) & GMAC_MAC_WATCHDOG_TIMEOUT_PWE_MASK)
/*! @} */

/*! @name MAC_HASH_TABLE_REG0 -  */
/*! @{ */
#define GMAC_MAC_HASH_TABLE_REG0_HT31T0_MASK     (0xFFFFFFFFU)
#define GMAC_MAC_HASH_TABLE_REG0_HT31T0_SHIFT    (0U)
#define GMAC_MAC_HASH_TABLE_REG0_HT31T0_WIDTH    (32U)
#define GMAC_MAC_HASH_TABLE_REG0_HT31T0(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_HASH_TABLE_REG0_HT31T0_SHIFT)) & GMAC_MAC_HASH_TABLE_REG0_HT31T0_MASK)
/*! @} */

/*! @name MAC_HASH_TABLE_REG1 -  */
/*! @{ */
#define GMAC_MAC_HASH_TABLE_REG1_HT63T32_MASK    (0xFFFFFFFFU)
#define GMAC_MAC_HASH_TABLE_REG1_HT63T32_SHIFT   (0U)
#define GMAC_MAC_HASH_TABLE_REG1_HT63T32_WIDTH   (32U)
#define GMAC_MAC_HASH_TABLE_REG1_HT63T32(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_HASH_TABLE_REG1_HT63T32_SHIFT)) & GMAC_MAC_HASH_TABLE_REG1_HT63T32_MASK)
/*! @} */

/*! @name MAC_HASH_TABLE_REG2 -  */
/*! @{ */
#define GMAC_MAC_HASH_TABLE_REG2_HT95T64_MASK    (0xFFFFFFFFU)
#define GMAC_MAC_HASH_TABLE_REG2_HT95T64_SHIFT   (0U)
#define GMAC_MAC_HASH_TABLE_REG2_HT95T64_WIDTH   (32U)
#define GMAC_MAC_HASH_TABLE_REG2_HT95T64(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_HASH_TABLE_REG2_HT95T64_SHIFT)) & GMAC_MAC_HASH_TABLE_REG2_HT95T64_MASK)
/*! @} */

/*! @name MAC_HASH_TABLE_REG3 -  */
/*! @{ */
#define GMAC_MAC_HASH_TABLE_REG3_HT127T96_MASK   (0xFFFFFFFFU)
#define GMAC_MAC_HASH_TABLE_REG3_HT127T96_SHIFT  (0U)
#define GMAC_MAC_HASH_TABLE_REG3_HT127T96_WIDTH  (32U)
#define GMAC_MAC_HASH_TABLE_REG3_HT127T96(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_HASH_TABLE_REG3_HT127T96_SHIFT)) & GMAC_MAC_HASH_TABLE_REG3_HT127T96_MASK)
/*! @} */

/*! @name MAC_HASH_TABLE_REG4 -  */
/*! @{ */
#define GMAC_MAC_HASH_TABLE_REG4_HT159T128_MASK  (0xFFFFFFFFU)
#define GMAC_MAC_HASH_TABLE_REG4_HT159T128_SHIFT (0U)
#define GMAC_MAC_HASH_TABLE_REG4_HT159T128_WIDTH (32U)
#define GMAC_MAC_HASH_TABLE_REG4_HT159T128(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_HASH_TABLE_REG4_HT159T128_SHIFT)) & GMAC_MAC_HASH_TABLE_REG4_HT159T128_MASK)
/*! @} */

/*! @name MAC_HASH_TABLE_REG5 -  */
/*! @{ */
#define GMAC_MAC_HASH_TABLE_REG5_HT191T160_MASK  (0xFFFFFFFFU)
#define GMAC_MAC_HASH_TABLE_REG5_HT191T160_SHIFT (0U)
#define GMAC_MAC_HASH_TABLE_REG5_HT191T160_WIDTH (32U)
#define GMAC_MAC_HASH_TABLE_REG5_HT191T160(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_HASH_TABLE_REG5_HT191T160_SHIFT)) & GMAC_MAC_HASH_TABLE_REG5_HT191T160_MASK)
/*! @} */

/*! @name MAC_HASH_TABLE_REG6 -  */
/*! @{ */
#define GMAC_MAC_HASH_TABLE_REG6_HT223T192_MASK  (0xFFFFFFFFU)
#define GMAC_MAC_HASH_TABLE_REG6_HT223T192_SHIFT (0U)
#define GMAC_MAC_HASH_TABLE_REG6_HT223T192_WIDTH (32U)
#define GMAC_MAC_HASH_TABLE_REG6_HT223T192(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_HASH_TABLE_REG6_HT223T192_SHIFT)) & GMAC_MAC_HASH_TABLE_REG6_HT223T192_MASK)
/*! @} */

/*! @name MAC_HASH_TABLE_REG7 -  */
/*! @{ */
#define GMAC_MAC_HASH_TABLE_REG7_HT255T224_MASK  (0xFFFFFFFFU)
#define GMAC_MAC_HASH_TABLE_REG7_HT255T224_SHIFT (0U)
#define GMAC_MAC_HASH_TABLE_REG7_HT255T224_WIDTH (32U)
#define GMAC_MAC_HASH_TABLE_REG7_HT255T224(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_HASH_TABLE_REG7_HT255T224_SHIFT)) & GMAC_MAC_HASH_TABLE_REG7_HT255T224_MASK)
/*! @} */

/*! @name MAC_VLAN_TAG_CTRL -  */
/*! @{ */
#define GMAC_MAC_VLAN_TAG_CTRL_OB_MASK           (0x1U)
#define GMAC_MAC_VLAN_TAG_CTRL_OB_SHIFT          (0U)
#define GMAC_MAC_VLAN_TAG_CTRL_OB_WIDTH          (1U)
#define GMAC_MAC_VLAN_TAG_CTRL_OB(x)             (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_VLAN_TAG_CTRL_OB_SHIFT)) & GMAC_MAC_VLAN_TAG_CTRL_OB_MASK)
#define GMAC_MAC_VLAN_TAG_CTRL_CT_MASK           (0x2U)
#define GMAC_MAC_VLAN_TAG_CTRL_CT_SHIFT          (1U)
#define GMAC_MAC_VLAN_TAG_CTRL_CT_WIDTH          (1U)
#define GMAC_MAC_VLAN_TAG_CTRL_CT(x)             (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_VLAN_TAG_CTRL_CT_SHIFT)) & GMAC_MAC_VLAN_TAG_CTRL_CT_MASK)
#define GMAC_MAC_VLAN_TAG_CTRL_OFS_MASK          (0x7CU)
#define GMAC_MAC_VLAN_TAG_CTRL_OFS_SHIFT         (2U)
#define GMAC_MAC_VLAN_TAG_CTRL_OFS_WIDTH         (5U)
#define GMAC_MAC_VLAN_TAG_CTRL_OFS(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_VLAN_TAG_CTRL_OFS_SHIFT)) & GMAC_MAC_VLAN_TAG_CTRL_OFS_MASK)
#define GMAC_MAC_VLAN_TAG_CTRL_VTIM_MASK         (0x20000U)
#define GMAC_MAC_VLAN_TAG_CTRL_VTIM_SHIFT        (17U)
#define GMAC_MAC_VLAN_TAG_CTRL_VTIM_WIDTH        (1U)
#define GMAC_MAC_VLAN_TAG_CTRL_VTIM(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_VLAN_TAG_CTRL_VTIM_SHIFT)) & GMAC_MAC_VLAN_TAG_CTRL_VTIM_MASK)
#define GMAC_MAC_VLAN_TAG_CTRL_ESVL_MASK         (0x40000U)
#define GMAC_MAC_VLAN_TAG_CTRL_ESVL_SHIFT        (18U)
#define GMAC_MAC_VLAN_TAG_CTRL_ESVL_WIDTH        (1U)
#define GMAC_MAC_VLAN_TAG_CTRL_ESVL(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_VLAN_TAG_CTRL_ESVL_SHIFT)) & GMAC_MAC_VLAN_TAG_CTRL_ESVL_MASK)
#define GMAC_MAC_VLAN_TAG_CTRL_EVLS_MASK         (0x600000U)
#define GMAC_MAC_VLAN_TAG_CTRL_EVLS_SHIFT        (21U)
#define GMAC_MAC_VLAN_TAG_CTRL_EVLS_WIDTH        (2U)
#define GMAC_MAC_VLAN_TAG_CTRL_EVLS(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_VLAN_TAG_CTRL_EVLS_SHIFT)) & GMAC_MAC_VLAN_TAG_CTRL_EVLS_MASK)
#define GMAC_MAC_VLAN_TAG_CTRL_EVLRXS_MASK       (0x1000000U)
#define GMAC_MAC_VLAN_TAG_CTRL_EVLRXS_SHIFT      (24U)
#define GMAC_MAC_VLAN_TAG_CTRL_EVLRXS_WIDTH      (1U)
#define GMAC_MAC_VLAN_TAG_CTRL_EVLRXS(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_VLAN_TAG_CTRL_EVLRXS_SHIFT)) & GMAC_MAC_VLAN_TAG_CTRL_EVLRXS_MASK)
#define GMAC_MAC_VLAN_TAG_CTRL_VTHM_MASK         (0x2000000U)
#define GMAC_MAC_VLAN_TAG_CTRL_VTHM_SHIFT        (25U)
#define GMAC_MAC_VLAN_TAG_CTRL_VTHM_WIDTH        (1U)
#define GMAC_MAC_VLAN_TAG_CTRL_VTHM(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_VLAN_TAG_CTRL_VTHM_SHIFT)) & GMAC_MAC_VLAN_TAG_CTRL_VTHM_MASK)
#define GMAC_MAC_VLAN_TAG_CTRL_EDVLP_MASK        (0x4000000U)
#define GMAC_MAC_VLAN_TAG_CTRL_EDVLP_SHIFT       (26U)
#define GMAC_MAC_VLAN_TAG_CTRL_EDVLP_WIDTH       (1U)
#define GMAC_MAC_VLAN_TAG_CTRL_EDVLP(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_VLAN_TAG_CTRL_EDVLP_SHIFT)) & GMAC_MAC_VLAN_TAG_CTRL_EDVLP_MASK)
#define GMAC_MAC_VLAN_TAG_CTRL_ERIVLT_MASK       (0x8000000U)
#define GMAC_MAC_VLAN_TAG_CTRL_ERIVLT_SHIFT      (27U)
#define GMAC_MAC_VLAN_TAG_CTRL_ERIVLT_WIDTH      (1U)
#define GMAC_MAC_VLAN_TAG_CTRL_ERIVLT(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_VLAN_TAG_CTRL_ERIVLT_SHIFT)) & GMAC_MAC_VLAN_TAG_CTRL_ERIVLT_MASK)
#define GMAC_MAC_VLAN_TAG_CTRL_EIVLS_MASK        (0x30000000U)
#define GMAC_MAC_VLAN_TAG_CTRL_EIVLS_SHIFT       (28U)
#define GMAC_MAC_VLAN_TAG_CTRL_EIVLS_WIDTH       (2U)
#define GMAC_MAC_VLAN_TAG_CTRL_EIVLS(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_VLAN_TAG_CTRL_EIVLS_SHIFT)) & GMAC_MAC_VLAN_TAG_CTRL_EIVLS_MASK)
#define GMAC_MAC_VLAN_TAG_CTRL_EIVLRXS_MASK      (0x80000000U)
#define GMAC_MAC_VLAN_TAG_CTRL_EIVLRXS_SHIFT     (31U)
#define GMAC_MAC_VLAN_TAG_CTRL_EIVLRXS_WIDTH     (1U)
#define GMAC_MAC_VLAN_TAG_CTRL_EIVLRXS(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_VLAN_TAG_CTRL_EIVLRXS_SHIFT)) & GMAC_MAC_VLAN_TAG_CTRL_EIVLRXS_MASK)
/*! @} */

/*! @name MAC_VLAN_TAG_DATA -  */
/*! @{ */
#define GMAC_MAC_VLAN_TAG_DATA_VID_MASK          (0xFFFFU)
#define GMAC_MAC_VLAN_TAG_DATA_VID_SHIFT         (0U)
#define GMAC_MAC_VLAN_TAG_DATA_VID_WIDTH         (16U)
#define GMAC_MAC_VLAN_TAG_DATA_VID(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_VLAN_TAG_DATA_VID_SHIFT)) & GMAC_MAC_VLAN_TAG_DATA_VID_MASK)
#define GMAC_MAC_VLAN_TAG_DATA_VEN_MASK          (0x10000U)
#define GMAC_MAC_VLAN_TAG_DATA_VEN_SHIFT         (16U)
#define GMAC_MAC_VLAN_TAG_DATA_VEN_WIDTH         (1U)
#define GMAC_MAC_VLAN_TAG_DATA_VEN(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_VLAN_TAG_DATA_VEN_SHIFT)) & GMAC_MAC_VLAN_TAG_DATA_VEN_MASK)
#define GMAC_MAC_VLAN_TAG_DATA_ETV_MASK          (0x20000U)
#define GMAC_MAC_VLAN_TAG_DATA_ETV_SHIFT         (17U)
#define GMAC_MAC_VLAN_TAG_DATA_ETV_WIDTH         (1U)
#define GMAC_MAC_VLAN_TAG_DATA_ETV(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_VLAN_TAG_DATA_ETV_SHIFT)) & GMAC_MAC_VLAN_TAG_DATA_ETV_MASK)
#define GMAC_MAC_VLAN_TAG_DATA_DOVLTC_MASK       (0x40000U)
#define GMAC_MAC_VLAN_TAG_DATA_DOVLTC_SHIFT      (18U)
#define GMAC_MAC_VLAN_TAG_DATA_DOVLTC_WIDTH      (1U)
#define GMAC_MAC_VLAN_TAG_DATA_DOVLTC(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_VLAN_TAG_DATA_DOVLTC_SHIFT)) & GMAC_MAC_VLAN_TAG_DATA_DOVLTC_MASK)
#define GMAC_MAC_VLAN_TAG_DATA_ERSVLM_MASK       (0x80000U)
#define GMAC_MAC_VLAN_TAG_DATA_ERSVLM_SHIFT      (19U)
#define GMAC_MAC_VLAN_TAG_DATA_ERSVLM_WIDTH      (1U)
#define GMAC_MAC_VLAN_TAG_DATA_ERSVLM(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_VLAN_TAG_DATA_ERSVLM_SHIFT)) & GMAC_MAC_VLAN_TAG_DATA_ERSVLM_MASK)
#define GMAC_MAC_VLAN_TAG_DATA_ERIVLT_MASK       (0x100000U)
#define GMAC_MAC_VLAN_TAG_DATA_ERIVLT_SHIFT      (20U)
#define GMAC_MAC_VLAN_TAG_DATA_ERIVLT_WIDTH      (1U)
#define GMAC_MAC_VLAN_TAG_DATA_ERIVLT(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_VLAN_TAG_DATA_ERIVLT_SHIFT)) & GMAC_MAC_VLAN_TAG_DATA_ERIVLT_MASK)
#define GMAC_MAC_VLAN_TAG_DATA_DMACHEN_MASK      (0x1000000U)
#define GMAC_MAC_VLAN_TAG_DATA_DMACHEN_SHIFT     (24U)
#define GMAC_MAC_VLAN_TAG_DATA_DMACHEN_WIDTH     (1U)
#define GMAC_MAC_VLAN_TAG_DATA_DMACHEN(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_VLAN_TAG_DATA_DMACHEN_SHIFT)) & GMAC_MAC_VLAN_TAG_DATA_DMACHEN_MASK)
#define GMAC_MAC_VLAN_TAG_DATA_DMACHN_MASK       (0xE000000U)
#define GMAC_MAC_VLAN_TAG_DATA_DMACHN_SHIFT      (25U)
#define GMAC_MAC_VLAN_TAG_DATA_DMACHN_WIDTH      (3U)
#define GMAC_MAC_VLAN_TAG_DATA_DMACHN(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_VLAN_TAG_DATA_DMACHN_SHIFT)) & GMAC_MAC_VLAN_TAG_DATA_DMACHN_MASK)
/*! @} */

/*! @name MAC_VLAN_HASH_TABLE -  */
/*! @{ */
#define GMAC_MAC_VLAN_HASH_TABLE_VLHT_MASK       (0xFFFFU)
#define GMAC_MAC_VLAN_HASH_TABLE_VLHT_SHIFT      (0U)
#define GMAC_MAC_VLAN_HASH_TABLE_VLHT_WIDTH      (16U)
#define GMAC_MAC_VLAN_HASH_TABLE_VLHT(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_VLAN_HASH_TABLE_VLHT_SHIFT)) & GMAC_MAC_VLAN_HASH_TABLE_VLHT_MASK)
/*! @} */

/*! @name MAC_VLAN_INCL -  */
/*! @{ */
#define GMAC_MAC_VLAN_INCL_VLT_MASK              (0xFFFFU)
#define GMAC_MAC_VLAN_INCL_VLT_SHIFT             (0U)
#define GMAC_MAC_VLAN_INCL_VLT_WIDTH             (16U)
#define GMAC_MAC_VLAN_INCL_VLT(x)                (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_VLAN_INCL_VLT_SHIFT)) & GMAC_MAC_VLAN_INCL_VLT_MASK)
#define GMAC_MAC_VLAN_INCL_VLC_MASK              (0x30000U)
#define GMAC_MAC_VLAN_INCL_VLC_SHIFT             (16U)
#define GMAC_MAC_VLAN_INCL_VLC_WIDTH             (2U)
#define GMAC_MAC_VLAN_INCL_VLC(x)                (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_VLAN_INCL_VLC_SHIFT)) & GMAC_MAC_VLAN_INCL_VLC_MASK)
#define GMAC_MAC_VLAN_INCL_VLP_MASK              (0x40000U)
#define GMAC_MAC_VLAN_INCL_VLP_SHIFT             (18U)
#define GMAC_MAC_VLAN_INCL_VLP_WIDTH             (1U)
#define GMAC_MAC_VLAN_INCL_VLP(x)                (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_VLAN_INCL_VLP_SHIFT)) & GMAC_MAC_VLAN_INCL_VLP_MASK)
#define GMAC_MAC_VLAN_INCL_CSVL_MASK             (0x80000U)
#define GMAC_MAC_VLAN_INCL_CSVL_SHIFT            (19U)
#define GMAC_MAC_VLAN_INCL_CSVL_WIDTH            (1U)
#define GMAC_MAC_VLAN_INCL_CSVL(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_VLAN_INCL_CSVL_SHIFT)) & GMAC_MAC_VLAN_INCL_CSVL_MASK)
#define GMAC_MAC_VLAN_INCL_VLTI_MASK             (0x100000U)
#define GMAC_MAC_VLAN_INCL_VLTI_SHIFT            (20U)
#define GMAC_MAC_VLAN_INCL_VLTI_WIDTH            (1U)
#define GMAC_MAC_VLAN_INCL_VLTI(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_VLAN_INCL_VLTI_SHIFT)) & GMAC_MAC_VLAN_INCL_VLTI_MASK)
#define GMAC_MAC_VLAN_INCL_CBTI_MASK             (0x200000U)
#define GMAC_MAC_VLAN_INCL_CBTI_SHIFT            (21U)
#define GMAC_MAC_VLAN_INCL_CBTI_WIDTH            (1U)
#define GMAC_MAC_VLAN_INCL_CBTI(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_VLAN_INCL_CBTI_SHIFT)) & GMAC_MAC_VLAN_INCL_CBTI_MASK)
#define GMAC_MAC_VLAN_INCL_ADDR_MASK             (0x7000000U)
#define GMAC_MAC_VLAN_INCL_ADDR_SHIFT            (24U)
#define GMAC_MAC_VLAN_INCL_ADDR_WIDTH            (3U)
#define GMAC_MAC_VLAN_INCL_ADDR(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_VLAN_INCL_ADDR_SHIFT)) & GMAC_MAC_VLAN_INCL_ADDR_MASK)
#define GMAC_MAC_VLAN_INCL_RDWR_MASK             (0x40000000U)
#define GMAC_MAC_VLAN_INCL_RDWR_SHIFT            (30U)
#define GMAC_MAC_VLAN_INCL_RDWR_WIDTH            (1U)
#define GMAC_MAC_VLAN_INCL_RDWR(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_VLAN_INCL_RDWR_SHIFT)) & GMAC_MAC_VLAN_INCL_RDWR_MASK)
#define GMAC_MAC_VLAN_INCL_BUSY_MASK             (0x80000000U)
#define GMAC_MAC_VLAN_INCL_BUSY_SHIFT            (31U)
#define GMAC_MAC_VLAN_INCL_BUSY_WIDTH            (1U)
#define GMAC_MAC_VLAN_INCL_BUSY(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_VLAN_INCL_BUSY_SHIFT)) & GMAC_MAC_VLAN_INCL_BUSY_MASK)
/*! @} */

/*! @name MAC_INNER_VLAN_INCL -  */
/*! @{ */
#define GMAC_MAC_INNER_VLAN_INCL_VLT_MASK        (0xFFFFU)
#define GMAC_MAC_INNER_VLAN_INCL_VLT_SHIFT       (0U)
#define GMAC_MAC_INNER_VLAN_INCL_VLT_WIDTH       (16U)
#define GMAC_MAC_INNER_VLAN_INCL_VLT(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_INNER_VLAN_INCL_VLT_SHIFT)) & GMAC_MAC_INNER_VLAN_INCL_VLT_MASK)
#define GMAC_MAC_INNER_VLAN_INCL_VLC_MASK        (0x30000U)
#define GMAC_MAC_INNER_VLAN_INCL_VLC_SHIFT       (16U)
#define GMAC_MAC_INNER_VLAN_INCL_VLC_WIDTH       (2U)
#define GMAC_MAC_INNER_VLAN_INCL_VLC(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_INNER_VLAN_INCL_VLC_SHIFT)) & GMAC_MAC_INNER_VLAN_INCL_VLC_MASK)
#define GMAC_MAC_INNER_VLAN_INCL_VLP_MASK        (0x40000U)
#define GMAC_MAC_INNER_VLAN_INCL_VLP_SHIFT       (18U)
#define GMAC_MAC_INNER_VLAN_INCL_VLP_WIDTH       (1U)
#define GMAC_MAC_INNER_VLAN_INCL_VLP(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_INNER_VLAN_INCL_VLP_SHIFT)) & GMAC_MAC_INNER_VLAN_INCL_VLP_MASK)
#define GMAC_MAC_INNER_VLAN_INCL_CSVL_MASK       (0x80000U)
#define GMAC_MAC_INNER_VLAN_INCL_CSVL_SHIFT      (19U)
#define GMAC_MAC_INNER_VLAN_INCL_CSVL_WIDTH      (1U)
#define GMAC_MAC_INNER_VLAN_INCL_CSVL(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_INNER_VLAN_INCL_CSVL_SHIFT)) & GMAC_MAC_INNER_VLAN_INCL_CSVL_MASK)
#define GMAC_MAC_INNER_VLAN_INCL_VLTI_MASK       (0x100000U)
#define GMAC_MAC_INNER_VLAN_INCL_VLTI_SHIFT      (20U)
#define GMAC_MAC_INNER_VLAN_INCL_VLTI_WIDTH      (1U)
#define GMAC_MAC_INNER_VLAN_INCL_VLTI(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_INNER_VLAN_INCL_VLTI_SHIFT)) & GMAC_MAC_INNER_VLAN_INCL_VLTI_MASK)
/*! @} */

/*! @name MAC_Q0_TX_FLOW_CTRL -  */
/*! @{ */
#define GMAC_MAC_Q0_TX_FLOW_CTRL_FCB_BPA_MASK    (0x1U)
#define GMAC_MAC_Q0_TX_FLOW_CTRL_FCB_BPA_SHIFT   (0U)
#define GMAC_MAC_Q0_TX_FLOW_CTRL_FCB_BPA_WIDTH   (1U)
#define GMAC_MAC_Q0_TX_FLOW_CTRL_FCB_BPA(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_Q0_TX_FLOW_CTRL_FCB_BPA_SHIFT)) & GMAC_MAC_Q0_TX_FLOW_CTRL_FCB_BPA_MASK)
#define GMAC_MAC_Q0_TX_FLOW_CTRL_TFE_MASK        (0x2U)
#define GMAC_MAC_Q0_TX_FLOW_CTRL_TFE_SHIFT       (1U)
#define GMAC_MAC_Q0_TX_FLOW_CTRL_TFE_WIDTH       (1U)
#define GMAC_MAC_Q0_TX_FLOW_CTRL_TFE(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_Q0_TX_FLOW_CTRL_TFE_SHIFT)) & GMAC_MAC_Q0_TX_FLOW_CTRL_TFE_MASK)
#define GMAC_MAC_Q0_TX_FLOW_CTRL_PLT_MASK        (0x70U)
#define GMAC_MAC_Q0_TX_FLOW_CTRL_PLT_SHIFT       (4U)
#define GMAC_MAC_Q0_TX_FLOW_CTRL_PLT_WIDTH       (3U)
#define GMAC_MAC_Q0_TX_FLOW_CTRL_PLT(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_Q0_TX_FLOW_CTRL_PLT_SHIFT)) & GMAC_MAC_Q0_TX_FLOW_CTRL_PLT_MASK)
#define GMAC_MAC_Q0_TX_FLOW_CTRL_DZPQ_MASK       (0x80U)
#define GMAC_MAC_Q0_TX_FLOW_CTRL_DZPQ_SHIFT      (7U)
#define GMAC_MAC_Q0_TX_FLOW_CTRL_DZPQ_WIDTH      (1U)
#define GMAC_MAC_Q0_TX_FLOW_CTRL_DZPQ(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_Q0_TX_FLOW_CTRL_DZPQ_SHIFT)) & GMAC_MAC_Q0_TX_FLOW_CTRL_DZPQ_MASK)
#define GMAC_MAC_Q0_TX_FLOW_CTRL_PT_MASK         (0xFFFF0000U)
#define GMAC_MAC_Q0_TX_FLOW_CTRL_PT_SHIFT        (16U)
#define GMAC_MAC_Q0_TX_FLOW_CTRL_PT_WIDTH        (16U)
#define GMAC_MAC_Q0_TX_FLOW_CTRL_PT(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_Q0_TX_FLOW_CTRL_PT_SHIFT)) & GMAC_MAC_Q0_TX_FLOW_CTRL_PT_MASK)
/*! @} */

/*! @name MAC_Q1_TX_FLOW_CTRL -  */
/*! @{ */
#define GMAC_MAC_Q1_TX_FLOW_CTRL_FCB_BPA_MASK    (0x1U)
#define GMAC_MAC_Q1_TX_FLOW_CTRL_FCB_BPA_SHIFT   (0U)
#define GMAC_MAC_Q1_TX_FLOW_CTRL_FCB_BPA_WIDTH   (1U)
#define GMAC_MAC_Q1_TX_FLOW_CTRL_FCB_BPA(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_Q1_TX_FLOW_CTRL_FCB_BPA_SHIFT)) & GMAC_MAC_Q1_TX_FLOW_CTRL_FCB_BPA_MASK)
#define GMAC_MAC_Q1_TX_FLOW_CTRL_TFE_MASK        (0x2U)
#define GMAC_MAC_Q1_TX_FLOW_CTRL_TFE_SHIFT       (1U)
#define GMAC_MAC_Q1_TX_FLOW_CTRL_TFE_WIDTH       (1U)
#define GMAC_MAC_Q1_TX_FLOW_CTRL_TFE(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_Q1_TX_FLOW_CTRL_TFE_SHIFT)) & GMAC_MAC_Q1_TX_FLOW_CTRL_TFE_MASK)
#define GMAC_MAC_Q1_TX_FLOW_CTRL_PLT_MASK        (0x70U)
#define GMAC_MAC_Q1_TX_FLOW_CTRL_PLT_SHIFT       (4U)
#define GMAC_MAC_Q1_TX_FLOW_CTRL_PLT_WIDTH       (3U)
#define GMAC_MAC_Q1_TX_FLOW_CTRL_PLT(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_Q1_TX_FLOW_CTRL_PLT_SHIFT)) & GMAC_MAC_Q1_TX_FLOW_CTRL_PLT_MASK)
#define GMAC_MAC_Q1_TX_FLOW_CTRL_DZPQ_MASK       (0x80U)
#define GMAC_MAC_Q1_TX_FLOW_CTRL_DZPQ_SHIFT      (7U)
#define GMAC_MAC_Q1_TX_FLOW_CTRL_DZPQ_WIDTH      (1U)
#define GMAC_MAC_Q1_TX_FLOW_CTRL_DZPQ(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_Q1_TX_FLOW_CTRL_DZPQ_SHIFT)) & GMAC_MAC_Q1_TX_FLOW_CTRL_DZPQ_MASK)
#define GMAC_MAC_Q1_TX_FLOW_CTRL_PT_MASK         (0xFFFF0000U)
#define GMAC_MAC_Q1_TX_FLOW_CTRL_PT_SHIFT        (16U)
#define GMAC_MAC_Q1_TX_FLOW_CTRL_PT_WIDTH        (16U)
#define GMAC_MAC_Q1_TX_FLOW_CTRL_PT(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_Q1_TX_FLOW_CTRL_PT_SHIFT)) & GMAC_MAC_Q1_TX_FLOW_CTRL_PT_MASK)
/*! @} */

/*! @name MAC_Q2_TX_FLOW_CTRL -  */
/*! @{ */
#define GMAC_MAC_Q2_TX_FLOW_CTRL_FCB_BPA_MASK    (0x1U)
#define GMAC_MAC_Q2_TX_FLOW_CTRL_FCB_BPA_SHIFT   (0U)
#define GMAC_MAC_Q2_TX_FLOW_CTRL_FCB_BPA_WIDTH   (1U)
#define GMAC_MAC_Q2_TX_FLOW_CTRL_FCB_BPA(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_Q2_TX_FLOW_CTRL_FCB_BPA_SHIFT)) & GMAC_MAC_Q2_TX_FLOW_CTRL_FCB_BPA_MASK)
#define GMAC_MAC_Q2_TX_FLOW_CTRL_TFE_MASK        (0x2U)
#define GMAC_MAC_Q2_TX_FLOW_CTRL_TFE_SHIFT       (1U)
#define GMAC_MAC_Q2_TX_FLOW_CTRL_TFE_WIDTH       (1U)
#define GMAC_MAC_Q2_TX_FLOW_CTRL_TFE(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_Q2_TX_FLOW_CTRL_TFE_SHIFT)) & GMAC_MAC_Q2_TX_FLOW_CTRL_TFE_MASK)
#define GMAC_MAC_Q2_TX_FLOW_CTRL_PLT_MASK        (0x70U)
#define GMAC_MAC_Q2_TX_FLOW_CTRL_PLT_SHIFT       (4U)
#define GMAC_MAC_Q2_TX_FLOW_CTRL_PLT_WIDTH       (3U)
#define GMAC_MAC_Q2_TX_FLOW_CTRL_PLT(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_Q2_TX_FLOW_CTRL_PLT_SHIFT)) & GMAC_MAC_Q2_TX_FLOW_CTRL_PLT_MASK)
#define GMAC_MAC_Q2_TX_FLOW_CTRL_DZPQ_MASK       (0x80U)
#define GMAC_MAC_Q2_TX_FLOW_CTRL_DZPQ_SHIFT      (7U)
#define GMAC_MAC_Q2_TX_FLOW_CTRL_DZPQ_WIDTH      (1U)
#define GMAC_MAC_Q2_TX_FLOW_CTRL_DZPQ(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_Q2_TX_FLOW_CTRL_DZPQ_SHIFT)) & GMAC_MAC_Q2_TX_FLOW_CTRL_DZPQ_MASK)
#define GMAC_MAC_Q2_TX_FLOW_CTRL_PT_MASK         (0xFFFF0000U)
#define GMAC_MAC_Q2_TX_FLOW_CTRL_PT_SHIFT        (16U)
#define GMAC_MAC_Q2_TX_FLOW_CTRL_PT_WIDTH        (16U)
#define GMAC_MAC_Q2_TX_FLOW_CTRL_PT(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_Q2_TX_FLOW_CTRL_PT_SHIFT)) & GMAC_MAC_Q2_TX_FLOW_CTRL_PT_MASK)
/*! @} */

/*! @name MAC_Q3_TX_FLOW_CTRL -  */
/*! @{ */
#define GMAC_MAC_Q3_TX_FLOW_CTRL_FCB_BPA_MASK    (0x1U)
#define GMAC_MAC_Q3_TX_FLOW_CTRL_FCB_BPA_SHIFT   (0U)
#define GMAC_MAC_Q3_TX_FLOW_CTRL_FCB_BPA_WIDTH   (1U)
#define GMAC_MAC_Q3_TX_FLOW_CTRL_FCB_BPA(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_Q3_TX_FLOW_CTRL_FCB_BPA_SHIFT)) & GMAC_MAC_Q3_TX_FLOW_CTRL_FCB_BPA_MASK)
#define GMAC_MAC_Q3_TX_FLOW_CTRL_TFE_MASK        (0x2U)
#define GMAC_MAC_Q3_TX_FLOW_CTRL_TFE_SHIFT       (1U)
#define GMAC_MAC_Q3_TX_FLOW_CTRL_TFE_WIDTH       (1U)
#define GMAC_MAC_Q3_TX_FLOW_CTRL_TFE(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_Q3_TX_FLOW_CTRL_TFE_SHIFT)) & GMAC_MAC_Q3_TX_FLOW_CTRL_TFE_MASK)
#define GMAC_MAC_Q3_TX_FLOW_CTRL_PLT_MASK        (0x70U)
#define GMAC_MAC_Q3_TX_FLOW_CTRL_PLT_SHIFT       (4U)
#define GMAC_MAC_Q3_TX_FLOW_CTRL_PLT_WIDTH       (3U)
#define GMAC_MAC_Q3_TX_FLOW_CTRL_PLT(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_Q3_TX_FLOW_CTRL_PLT_SHIFT)) & GMAC_MAC_Q3_TX_FLOW_CTRL_PLT_MASK)
#define GMAC_MAC_Q3_TX_FLOW_CTRL_DZPQ_MASK       (0x80U)
#define GMAC_MAC_Q3_TX_FLOW_CTRL_DZPQ_SHIFT      (7U)
#define GMAC_MAC_Q3_TX_FLOW_CTRL_DZPQ_WIDTH      (1U)
#define GMAC_MAC_Q3_TX_FLOW_CTRL_DZPQ(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_Q3_TX_FLOW_CTRL_DZPQ_SHIFT)) & GMAC_MAC_Q3_TX_FLOW_CTRL_DZPQ_MASK)
#define GMAC_MAC_Q3_TX_FLOW_CTRL_PT_MASK         (0xFFFF0000U)
#define GMAC_MAC_Q3_TX_FLOW_CTRL_PT_SHIFT        (16U)
#define GMAC_MAC_Q3_TX_FLOW_CTRL_PT_WIDTH        (16U)
#define GMAC_MAC_Q3_TX_FLOW_CTRL_PT(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_Q3_TX_FLOW_CTRL_PT_SHIFT)) & GMAC_MAC_Q3_TX_FLOW_CTRL_PT_MASK)
/*! @} */

/*! @name MAC_Q4_TX_FLOW_CTRL -  */
/*! @{ */
#define GMAC_MAC_Q4_TX_FLOW_CTRL_FCB_BPA_MASK    (0x1U)
#define GMAC_MAC_Q4_TX_FLOW_CTRL_FCB_BPA_SHIFT   (0U)
#define GMAC_MAC_Q4_TX_FLOW_CTRL_FCB_BPA_WIDTH   (1U)
#define GMAC_MAC_Q4_TX_FLOW_CTRL_FCB_BPA(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_Q4_TX_FLOW_CTRL_FCB_BPA_SHIFT)) & GMAC_MAC_Q4_TX_FLOW_CTRL_FCB_BPA_MASK)
#define GMAC_MAC_Q4_TX_FLOW_CTRL_TFE_MASK        (0x2U)
#define GMAC_MAC_Q4_TX_FLOW_CTRL_TFE_SHIFT       (1U)
#define GMAC_MAC_Q4_TX_FLOW_CTRL_TFE_WIDTH       (1U)
#define GMAC_MAC_Q4_TX_FLOW_CTRL_TFE(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_Q4_TX_FLOW_CTRL_TFE_SHIFT)) & GMAC_MAC_Q4_TX_FLOW_CTRL_TFE_MASK)
#define GMAC_MAC_Q4_TX_FLOW_CTRL_PLT_MASK        (0x70U)
#define GMAC_MAC_Q4_TX_FLOW_CTRL_PLT_SHIFT       (4U)
#define GMAC_MAC_Q4_TX_FLOW_CTRL_PLT_WIDTH       (3U)
#define GMAC_MAC_Q4_TX_FLOW_CTRL_PLT(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_Q4_TX_FLOW_CTRL_PLT_SHIFT)) & GMAC_MAC_Q4_TX_FLOW_CTRL_PLT_MASK)
#define GMAC_MAC_Q4_TX_FLOW_CTRL_DZPQ_MASK       (0x80U)
#define GMAC_MAC_Q4_TX_FLOW_CTRL_DZPQ_SHIFT      (7U)
#define GMAC_MAC_Q4_TX_FLOW_CTRL_DZPQ_WIDTH      (1U)
#define GMAC_MAC_Q4_TX_FLOW_CTRL_DZPQ(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_Q4_TX_FLOW_CTRL_DZPQ_SHIFT)) & GMAC_MAC_Q4_TX_FLOW_CTRL_DZPQ_MASK)
#define GMAC_MAC_Q4_TX_FLOW_CTRL_PT_MASK         (0xFFFF0000U)
#define GMAC_MAC_Q4_TX_FLOW_CTRL_PT_SHIFT        (16U)
#define GMAC_MAC_Q4_TX_FLOW_CTRL_PT_WIDTH        (16U)
#define GMAC_MAC_Q4_TX_FLOW_CTRL_PT(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_Q4_TX_FLOW_CTRL_PT_SHIFT)) & GMAC_MAC_Q4_TX_FLOW_CTRL_PT_MASK)
/*! @} */

/*! @name MAC_RX_FLOW_CTRL -  */
/*! @{ */
#define GMAC_MAC_RX_FLOW_CTRL_RFE_MASK           (0x1U)
#define GMAC_MAC_RX_FLOW_CTRL_RFE_SHIFT          (0U)
#define GMAC_MAC_RX_FLOW_CTRL_RFE_WIDTH          (1U)
#define GMAC_MAC_RX_FLOW_CTRL_RFE(x)             (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_RX_FLOW_CTRL_RFE_SHIFT)) & GMAC_MAC_RX_FLOW_CTRL_RFE_MASK)
#define GMAC_MAC_RX_FLOW_CTRL_UP_MASK            (0x2U)
#define GMAC_MAC_RX_FLOW_CTRL_UP_SHIFT           (1U)
#define GMAC_MAC_RX_FLOW_CTRL_UP_WIDTH           (1U)
#define GMAC_MAC_RX_FLOW_CTRL_UP(x)              (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_RX_FLOW_CTRL_UP_SHIFT)) & GMAC_MAC_RX_FLOW_CTRL_UP_MASK)
#define GMAC_MAC_RX_FLOW_CTRL_PFCE_MASK          (0x100U)
#define GMAC_MAC_RX_FLOW_CTRL_PFCE_SHIFT         (8U)
#define GMAC_MAC_RX_FLOW_CTRL_PFCE_WIDTH         (1U)
#define GMAC_MAC_RX_FLOW_CTRL_PFCE(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_RX_FLOW_CTRL_PFCE_SHIFT)) & GMAC_MAC_RX_FLOW_CTRL_PFCE_MASK)
/*! @} */

/*! @name MAC_RXQ_CTRL4 -  */
/*! @{ */
#define GMAC_MAC_RXQ_CTRL4_UFFQE_MASK            (0x1U)
#define GMAC_MAC_RXQ_CTRL4_UFFQE_SHIFT           (0U)
#define GMAC_MAC_RXQ_CTRL4_UFFQE_WIDTH           (1U)
#define GMAC_MAC_RXQ_CTRL4_UFFQE(x)              (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_RXQ_CTRL4_UFFQE_SHIFT)) & GMAC_MAC_RXQ_CTRL4_UFFQE_MASK)
#define GMAC_MAC_RXQ_CTRL4_UFFQ_MASK             (0xEU)
#define GMAC_MAC_RXQ_CTRL4_UFFQ_SHIFT            (1U)
#define GMAC_MAC_RXQ_CTRL4_UFFQ_WIDTH            (3U)
#define GMAC_MAC_RXQ_CTRL4_UFFQ(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_RXQ_CTRL4_UFFQ_SHIFT)) & GMAC_MAC_RXQ_CTRL4_UFFQ_MASK)
#define GMAC_MAC_RXQ_CTRL4_MFFQE_MASK            (0x100U)
#define GMAC_MAC_RXQ_CTRL4_MFFQE_SHIFT           (8U)
#define GMAC_MAC_RXQ_CTRL4_MFFQE_WIDTH           (1U)
#define GMAC_MAC_RXQ_CTRL4_MFFQE(x)              (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_RXQ_CTRL4_MFFQE_SHIFT)) & GMAC_MAC_RXQ_CTRL4_MFFQE_MASK)
#define GMAC_MAC_RXQ_CTRL4_MFFQ_MASK             (0xE00U)
#define GMAC_MAC_RXQ_CTRL4_MFFQ_SHIFT            (9U)
#define GMAC_MAC_RXQ_CTRL4_MFFQ_WIDTH            (3U)
#define GMAC_MAC_RXQ_CTRL4_MFFQ(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_RXQ_CTRL4_MFFQ_SHIFT)) & GMAC_MAC_RXQ_CTRL4_MFFQ_MASK)
#define GMAC_MAC_RXQ_CTRL4_VFFQE_MASK            (0x10000U)
#define GMAC_MAC_RXQ_CTRL4_VFFQE_SHIFT           (16U)
#define GMAC_MAC_RXQ_CTRL4_VFFQE_WIDTH           (1U)
#define GMAC_MAC_RXQ_CTRL4_VFFQE(x)              (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_RXQ_CTRL4_VFFQE_SHIFT)) & GMAC_MAC_RXQ_CTRL4_VFFQE_MASK)
#define GMAC_MAC_RXQ_CTRL4_VFFQ_MASK             (0xE0000U)
#define GMAC_MAC_RXQ_CTRL4_VFFQ_SHIFT            (17U)
#define GMAC_MAC_RXQ_CTRL4_VFFQ_WIDTH            (3U)
#define GMAC_MAC_RXQ_CTRL4_VFFQ(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_RXQ_CTRL4_VFFQ_SHIFT)) & GMAC_MAC_RXQ_CTRL4_VFFQ_MASK)
/*! @} */

/*! @name MAC_TXQ_PRTY_MAP0 -  */
/*! @{ */
#define GMAC_MAC_TXQ_PRTY_MAP0_PSTQ0_MASK        (0xFFU)
#define GMAC_MAC_TXQ_PRTY_MAP0_PSTQ0_SHIFT       (0U)
#define GMAC_MAC_TXQ_PRTY_MAP0_PSTQ0_WIDTH       (8U)
#define GMAC_MAC_TXQ_PRTY_MAP0_PSTQ0(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_TXQ_PRTY_MAP0_PSTQ0_SHIFT)) & GMAC_MAC_TXQ_PRTY_MAP0_PSTQ0_MASK)
#define GMAC_MAC_TXQ_PRTY_MAP0_PSTQ1_MASK        (0xFF00U)
#define GMAC_MAC_TXQ_PRTY_MAP0_PSTQ1_SHIFT       (8U)
#define GMAC_MAC_TXQ_PRTY_MAP0_PSTQ1_WIDTH       (8U)
#define GMAC_MAC_TXQ_PRTY_MAP0_PSTQ1(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_TXQ_PRTY_MAP0_PSTQ1_SHIFT)) & GMAC_MAC_TXQ_PRTY_MAP0_PSTQ1_MASK)
#define GMAC_MAC_TXQ_PRTY_MAP0_PSTQ2_MASK        (0xFF0000U)
#define GMAC_MAC_TXQ_PRTY_MAP0_PSTQ2_SHIFT       (16U)
#define GMAC_MAC_TXQ_PRTY_MAP0_PSTQ2_WIDTH       (8U)
#define GMAC_MAC_TXQ_PRTY_MAP0_PSTQ2(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_TXQ_PRTY_MAP0_PSTQ2_SHIFT)) & GMAC_MAC_TXQ_PRTY_MAP0_PSTQ2_MASK)
#define GMAC_MAC_TXQ_PRTY_MAP0_PSTQ3_MASK        (0xFF000000U)
#define GMAC_MAC_TXQ_PRTY_MAP0_PSTQ3_SHIFT       (24U)
#define GMAC_MAC_TXQ_PRTY_MAP0_PSTQ3_WIDTH       (8U)
#define GMAC_MAC_TXQ_PRTY_MAP0_PSTQ3(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_TXQ_PRTY_MAP0_PSTQ3_SHIFT)) & GMAC_MAC_TXQ_PRTY_MAP0_PSTQ3_MASK)
/*! @} */

/*! @name MAC_TXQ_PRTY_MAP1 -  */
/*! @{ */
#define GMAC_MAC_TXQ_PRTY_MAP1_PSTQ4_MASK        (0xFFU)
#define GMAC_MAC_TXQ_PRTY_MAP1_PSTQ4_SHIFT       (0U)
#define GMAC_MAC_TXQ_PRTY_MAP1_PSTQ4_WIDTH       (8U)
#define GMAC_MAC_TXQ_PRTY_MAP1_PSTQ4(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_TXQ_PRTY_MAP1_PSTQ4_SHIFT)) & GMAC_MAC_TXQ_PRTY_MAP1_PSTQ4_MASK)
/*! @} */

/*! @name MAC_RXQ_CTRL0 -  */
/*! @{ */
#define GMAC_MAC_RXQ_CTRL0_RXQ0EN_MASK           (0x3U)
#define GMAC_MAC_RXQ_CTRL0_RXQ0EN_SHIFT          (0U)
#define GMAC_MAC_RXQ_CTRL0_RXQ0EN_WIDTH          (2U)
#define GMAC_MAC_RXQ_CTRL0_RXQ0EN(x)             (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_RXQ_CTRL0_RXQ0EN_SHIFT)) & GMAC_MAC_RXQ_CTRL0_RXQ0EN_MASK)
#define GMAC_MAC_RXQ_CTRL0_RXQ1EN_MASK           (0xCU)
#define GMAC_MAC_RXQ_CTRL0_RXQ1EN_SHIFT          (2U)
#define GMAC_MAC_RXQ_CTRL0_RXQ1EN_WIDTH          (2U)
#define GMAC_MAC_RXQ_CTRL0_RXQ1EN(x)             (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_RXQ_CTRL0_RXQ1EN_SHIFT)) & GMAC_MAC_RXQ_CTRL0_RXQ1EN_MASK)
#define GMAC_MAC_RXQ_CTRL0_RXQ2EN_MASK           (0x30U)
#define GMAC_MAC_RXQ_CTRL0_RXQ2EN_SHIFT          (4U)
#define GMAC_MAC_RXQ_CTRL0_RXQ2EN_WIDTH          (2U)
#define GMAC_MAC_RXQ_CTRL0_RXQ2EN(x)             (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_RXQ_CTRL0_RXQ2EN_SHIFT)) & GMAC_MAC_RXQ_CTRL0_RXQ2EN_MASK)
#define GMAC_MAC_RXQ_CTRL0_RXQ3EN_MASK           (0xC0U)
#define GMAC_MAC_RXQ_CTRL0_RXQ3EN_SHIFT          (6U)
#define GMAC_MAC_RXQ_CTRL0_RXQ3EN_WIDTH          (2U)
#define GMAC_MAC_RXQ_CTRL0_RXQ3EN(x)             (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_RXQ_CTRL0_RXQ3EN_SHIFT)) & GMAC_MAC_RXQ_CTRL0_RXQ3EN_MASK)
#define GMAC_MAC_RXQ_CTRL0_RXQ4EN_MASK           (0x300U)
#define GMAC_MAC_RXQ_CTRL0_RXQ4EN_SHIFT          (8U)
#define GMAC_MAC_RXQ_CTRL0_RXQ4EN_WIDTH          (2U)
#define GMAC_MAC_RXQ_CTRL0_RXQ4EN(x)             (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_RXQ_CTRL0_RXQ4EN_SHIFT)) & GMAC_MAC_RXQ_CTRL0_RXQ4EN_MASK)
/*! @} */

/*! @name MAC_RXQ_CTRL1 -  */
/*! @{ */
#define GMAC_MAC_RXQ_CTRL1_AVCPQ_MASK            (0x7U)
#define GMAC_MAC_RXQ_CTRL1_AVCPQ_SHIFT           (0U)
#define GMAC_MAC_RXQ_CTRL1_AVCPQ_WIDTH           (3U)
#define GMAC_MAC_RXQ_CTRL1_AVCPQ(x)              (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_RXQ_CTRL1_AVCPQ_SHIFT)) & GMAC_MAC_RXQ_CTRL1_AVCPQ_MASK)
#define GMAC_MAC_RXQ_CTRL1_PTPQ_MASK             (0x70U)
#define GMAC_MAC_RXQ_CTRL1_PTPQ_SHIFT            (4U)
#define GMAC_MAC_RXQ_CTRL1_PTPQ_WIDTH            (3U)
#define GMAC_MAC_RXQ_CTRL1_PTPQ(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_RXQ_CTRL1_PTPQ_SHIFT)) & GMAC_MAC_RXQ_CTRL1_PTPQ_MASK)
#define GMAC_MAC_RXQ_CTRL1_DCBCPQ_MASK           (0x700U)
#define GMAC_MAC_RXQ_CTRL1_DCBCPQ_SHIFT          (8U)
#define GMAC_MAC_RXQ_CTRL1_DCBCPQ_WIDTH          (3U)
#define GMAC_MAC_RXQ_CTRL1_DCBCPQ(x)             (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_RXQ_CTRL1_DCBCPQ_SHIFT)) & GMAC_MAC_RXQ_CTRL1_DCBCPQ_MASK)
#define GMAC_MAC_RXQ_CTRL1_UPQ_MASK              (0x7000U)
#define GMAC_MAC_RXQ_CTRL1_UPQ_SHIFT             (12U)
#define GMAC_MAC_RXQ_CTRL1_UPQ_WIDTH             (3U)
#define GMAC_MAC_RXQ_CTRL1_UPQ(x)                (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_RXQ_CTRL1_UPQ_SHIFT)) & GMAC_MAC_RXQ_CTRL1_UPQ_MASK)
#define GMAC_MAC_RXQ_CTRL1_MCBCQ_MASK            (0x70000U)
#define GMAC_MAC_RXQ_CTRL1_MCBCQ_SHIFT           (16U)
#define GMAC_MAC_RXQ_CTRL1_MCBCQ_WIDTH           (3U)
#define GMAC_MAC_RXQ_CTRL1_MCBCQ(x)              (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_RXQ_CTRL1_MCBCQ_SHIFT)) & GMAC_MAC_RXQ_CTRL1_MCBCQ_MASK)
#define GMAC_MAC_RXQ_CTRL1_MCBCQEN_MASK          (0x100000U)
#define GMAC_MAC_RXQ_CTRL1_MCBCQEN_SHIFT         (20U)
#define GMAC_MAC_RXQ_CTRL1_MCBCQEN_WIDTH         (1U)
#define GMAC_MAC_RXQ_CTRL1_MCBCQEN(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_RXQ_CTRL1_MCBCQEN_SHIFT)) & GMAC_MAC_RXQ_CTRL1_MCBCQEN_MASK)
#define GMAC_MAC_RXQ_CTRL1_TACPQE_MASK           (0x200000U)
#define GMAC_MAC_RXQ_CTRL1_TACPQE_SHIFT          (21U)
#define GMAC_MAC_RXQ_CTRL1_TACPQE_WIDTH          (1U)
#define GMAC_MAC_RXQ_CTRL1_TACPQE(x)             (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_RXQ_CTRL1_TACPQE_SHIFT)) & GMAC_MAC_RXQ_CTRL1_TACPQE_MASK)
#define GMAC_MAC_RXQ_CTRL1_TPQC_MASK             (0xC00000U)
#define GMAC_MAC_RXQ_CTRL1_TPQC_SHIFT            (22U)
#define GMAC_MAC_RXQ_CTRL1_TPQC_WIDTH            (2U)
#define GMAC_MAC_RXQ_CTRL1_TPQC(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_RXQ_CTRL1_TPQC_SHIFT)) & GMAC_MAC_RXQ_CTRL1_TPQC_MASK)
#define GMAC_MAC_RXQ_CTRL1_FPRQ_MASK             (0x7000000U)
#define GMAC_MAC_RXQ_CTRL1_FPRQ_SHIFT            (24U)
#define GMAC_MAC_RXQ_CTRL1_FPRQ_WIDTH            (3U)
#define GMAC_MAC_RXQ_CTRL1_FPRQ(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_RXQ_CTRL1_FPRQ_SHIFT)) & GMAC_MAC_RXQ_CTRL1_FPRQ_MASK)
/*! @} */

/*! @name MAC_RXQ_CTRL2 -  */
/*! @{ */
#define GMAC_MAC_RXQ_CTRL2_PSRQ0_MASK            (0xFFU)
#define GMAC_MAC_RXQ_CTRL2_PSRQ0_SHIFT           (0U)
#define GMAC_MAC_RXQ_CTRL2_PSRQ0_WIDTH           (8U)
#define GMAC_MAC_RXQ_CTRL2_PSRQ0(x)              (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_RXQ_CTRL2_PSRQ0_SHIFT)) & GMAC_MAC_RXQ_CTRL2_PSRQ0_MASK)
#define GMAC_MAC_RXQ_CTRL2_PSRQ1_MASK            (0xFF00U)
#define GMAC_MAC_RXQ_CTRL2_PSRQ1_SHIFT           (8U)
#define GMAC_MAC_RXQ_CTRL2_PSRQ1_WIDTH           (8U)
#define GMAC_MAC_RXQ_CTRL2_PSRQ1(x)              (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_RXQ_CTRL2_PSRQ1_SHIFT)) & GMAC_MAC_RXQ_CTRL2_PSRQ1_MASK)
#define GMAC_MAC_RXQ_CTRL2_PSRQ2_MASK            (0xFF0000U)
#define GMAC_MAC_RXQ_CTRL2_PSRQ2_SHIFT           (16U)
#define GMAC_MAC_RXQ_CTRL2_PSRQ2_WIDTH           (8U)
#define GMAC_MAC_RXQ_CTRL2_PSRQ2(x)              (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_RXQ_CTRL2_PSRQ2_SHIFT)) & GMAC_MAC_RXQ_CTRL2_PSRQ2_MASK)
#define GMAC_MAC_RXQ_CTRL2_PSRQ3_MASK            (0xFF000000U)
#define GMAC_MAC_RXQ_CTRL2_PSRQ3_SHIFT           (24U)
#define GMAC_MAC_RXQ_CTRL2_PSRQ3_WIDTH           (8U)
#define GMAC_MAC_RXQ_CTRL2_PSRQ3(x)              (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_RXQ_CTRL2_PSRQ3_SHIFT)) & GMAC_MAC_RXQ_CTRL2_PSRQ3_MASK)
/*! @} */

/*! @name MAC_RXQ_CTRL3 -  */
/*! @{ */
#define GMAC_MAC_RXQ_CTRL3_PSRQ4_MASK            (0xFFU)
#define GMAC_MAC_RXQ_CTRL3_PSRQ4_SHIFT           (0U)
#define GMAC_MAC_RXQ_CTRL3_PSRQ4_WIDTH           (8U)
#define GMAC_MAC_RXQ_CTRL3_PSRQ4(x)              (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_RXQ_CTRL3_PSRQ4_SHIFT)) & GMAC_MAC_RXQ_CTRL3_PSRQ4_MASK)
/*! @} */

/*! @name MAC_INTERRUPT_STATUS -  */
/*! @{ */
#define GMAC_MAC_INTERRUPT_STATUS_RGSMIIIS_MASK  (0x1U)
#define GMAC_MAC_INTERRUPT_STATUS_RGSMIIIS_SHIFT (0U)
#define GMAC_MAC_INTERRUPT_STATUS_RGSMIIIS_WIDTH (1U)
#define GMAC_MAC_INTERRUPT_STATUS_RGSMIIIS(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_INTERRUPT_STATUS_RGSMIIIS_SHIFT)) & GMAC_MAC_INTERRUPT_STATUS_RGSMIIIS_MASK)
#define GMAC_MAC_INTERRUPT_STATUS_PHYIS_MASK     (0x8U)
#define GMAC_MAC_INTERRUPT_STATUS_PHYIS_SHIFT    (3U)
#define GMAC_MAC_INTERRUPT_STATUS_PHYIS_WIDTH    (1U)
#define GMAC_MAC_INTERRUPT_STATUS_PHYIS(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_INTERRUPT_STATUS_PHYIS_SHIFT)) & GMAC_MAC_INTERRUPT_STATUS_PHYIS_MASK)
#define GMAC_MAC_INTERRUPT_STATUS_PMTIS_MASK     (0x10U)
#define GMAC_MAC_INTERRUPT_STATUS_PMTIS_SHIFT    (4U)
#define GMAC_MAC_INTERRUPT_STATUS_PMTIS_WIDTH    (1U)
#define GMAC_MAC_INTERRUPT_STATUS_PMTIS(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_INTERRUPT_STATUS_PMTIS_SHIFT)) & GMAC_MAC_INTERRUPT_STATUS_PMTIS_MASK)
#define GMAC_MAC_INTERRUPT_STATUS_MMCIS_MASK     (0x100U)
#define GMAC_MAC_INTERRUPT_STATUS_MMCIS_SHIFT    (8U)
#define GMAC_MAC_INTERRUPT_STATUS_MMCIS_WIDTH    (1U)
#define GMAC_MAC_INTERRUPT_STATUS_MMCIS(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_INTERRUPT_STATUS_MMCIS_SHIFT)) & GMAC_MAC_INTERRUPT_STATUS_MMCIS_MASK)
#define GMAC_MAC_INTERRUPT_STATUS_MMCRXIS_MASK   (0x200U)
#define GMAC_MAC_INTERRUPT_STATUS_MMCRXIS_SHIFT  (9U)
#define GMAC_MAC_INTERRUPT_STATUS_MMCRXIS_WIDTH  (1U)
#define GMAC_MAC_INTERRUPT_STATUS_MMCRXIS(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_INTERRUPT_STATUS_MMCRXIS_SHIFT)) & GMAC_MAC_INTERRUPT_STATUS_MMCRXIS_MASK)
#define GMAC_MAC_INTERRUPT_STATUS_MMCTXIS_MASK   (0x400U)
#define GMAC_MAC_INTERRUPT_STATUS_MMCTXIS_SHIFT  (10U)
#define GMAC_MAC_INTERRUPT_STATUS_MMCTXIS_WIDTH  (1U)
#define GMAC_MAC_INTERRUPT_STATUS_MMCTXIS(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_INTERRUPT_STATUS_MMCTXIS_SHIFT)) & GMAC_MAC_INTERRUPT_STATUS_MMCTXIS_MASK)
#define GMAC_MAC_INTERRUPT_STATUS_TSIS_MASK      (0x1000U)
#define GMAC_MAC_INTERRUPT_STATUS_TSIS_SHIFT     (12U)
#define GMAC_MAC_INTERRUPT_STATUS_TSIS_WIDTH     (1U)
#define GMAC_MAC_INTERRUPT_STATUS_TSIS(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_INTERRUPT_STATUS_TSIS_SHIFT)) & GMAC_MAC_INTERRUPT_STATUS_TSIS_MASK)
#define GMAC_MAC_INTERRUPT_STATUS_TXSTSIS_MASK   (0x2000U)
#define GMAC_MAC_INTERRUPT_STATUS_TXSTSIS_SHIFT  (13U)
#define GMAC_MAC_INTERRUPT_STATUS_TXSTSIS_WIDTH  (1U)
#define GMAC_MAC_INTERRUPT_STATUS_TXSTSIS(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_INTERRUPT_STATUS_TXSTSIS_SHIFT)) & GMAC_MAC_INTERRUPT_STATUS_TXSTSIS_MASK)
#define GMAC_MAC_INTERRUPT_STATUS_RXSTSIS_MASK   (0x4000U)
#define GMAC_MAC_INTERRUPT_STATUS_RXSTSIS_SHIFT  (14U)
#define GMAC_MAC_INTERRUPT_STATUS_RXSTSIS_WIDTH  (1U)
#define GMAC_MAC_INTERRUPT_STATUS_RXSTSIS(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_INTERRUPT_STATUS_RXSTSIS_SHIFT)) & GMAC_MAC_INTERRUPT_STATUS_RXSTSIS_MASK)
#define GMAC_MAC_INTERRUPT_STATUS_FPEIS_MASK     (0x20000U)
#define GMAC_MAC_INTERRUPT_STATUS_FPEIS_SHIFT    (17U)
#define GMAC_MAC_INTERRUPT_STATUS_FPEIS_WIDTH    (1U)
#define GMAC_MAC_INTERRUPT_STATUS_FPEIS(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_INTERRUPT_STATUS_FPEIS_SHIFT)) & GMAC_MAC_INTERRUPT_STATUS_FPEIS_MASK)
#define GMAC_MAC_INTERRUPT_STATUS_MDIOIS_MASK    (0x40000U)
#define GMAC_MAC_INTERRUPT_STATUS_MDIOIS_SHIFT   (18U)
#define GMAC_MAC_INTERRUPT_STATUS_MDIOIS_WIDTH   (1U)
#define GMAC_MAC_INTERRUPT_STATUS_MDIOIS(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_INTERRUPT_STATUS_MDIOIS_SHIFT)) & GMAC_MAC_INTERRUPT_STATUS_MDIOIS_MASK)
#define GMAC_MAC_INTERRUPT_STATUS_MFTIS_MASK     (0x80000U)
#define GMAC_MAC_INTERRUPT_STATUS_MFTIS_SHIFT    (19U)
#define GMAC_MAC_INTERRUPT_STATUS_MFTIS_WIDTH    (1U)
#define GMAC_MAC_INTERRUPT_STATUS_MFTIS(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_INTERRUPT_STATUS_MFTIS_SHIFT)) & GMAC_MAC_INTERRUPT_STATUS_MFTIS_MASK)
#define GMAC_MAC_INTERRUPT_STATUS_MFRIS_MASK     (0x100000U)
#define GMAC_MAC_INTERRUPT_STATUS_MFRIS_SHIFT    (20U)
#define GMAC_MAC_INTERRUPT_STATUS_MFRIS_WIDTH    (1U)
#define GMAC_MAC_INTERRUPT_STATUS_MFRIS(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_INTERRUPT_STATUS_MFRIS_SHIFT)) & GMAC_MAC_INTERRUPT_STATUS_MFRIS_MASK)
/*! @} */

/*! @name MAC_INTERRUPT_ENABLE -  */
/*! @{ */
#define GMAC_MAC_INTERRUPT_ENABLE_RGSMIIIE_MASK  (0x1U)
#define GMAC_MAC_INTERRUPT_ENABLE_RGSMIIIE_SHIFT (0U)
#define GMAC_MAC_INTERRUPT_ENABLE_RGSMIIIE_WIDTH (1U)
#define GMAC_MAC_INTERRUPT_ENABLE_RGSMIIIE(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_INTERRUPT_ENABLE_RGSMIIIE_SHIFT)) & GMAC_MAC_INTERRUPT_ENABLE_RGSMIIIE_MASK)
#define GMAC_MAC_INTERRUPT_ENABLE_PHYIE_MASK     (0x8U)
#define GMAC_MAC_INTERRUPT_ENABLE_PHYIE_SHIFT    (3U)
#define GMAC_MAC_INTERRUPT_ENABLE_PHYIE_WIDTH    (1U)
#define GMAC_MAC_INTERRUPT_ENABLE_PHYIE(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_INTERRUPT_ENABLE_PHYIE_SHIFT)) & GMAC_MAC_INTERRUPT_ENABLE_PHYIE_MASK)
#define GMAC_MAC_INTERRUPT_ENABLE_PMTIE_MASK     (0x10U)
#define GMAC_MAC_INTERRUPT_ENABLE_PMTIE_SHIFT    (4U)
#define GMAC_MAC_INTERRUPT_ENABLE_PMTIE_WIDTH    (1U)
#define GMAC_MAC_INTERRUPT_ENABLE_PMTIE(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_INTERRUPT_ENABLE_PMTIE_SHIFT)) & GMAC_MAC_INTERRUPT_ENABLE_PMTIE_MASK)
#define GMAC_MAC_INTERRUPT_ENABLE_TSIE_MASK      (0x1000U)
#define GMAC_MAC_INTERRUPT_ENABLE_TSIE_SHIFT     (12U)
#define GMAC_MAC_INTERRUPT_ENABLE_TSIE_WIDTH     (1U)
#define GMAC_MAC_INTERRUPT_ENABLE_TSIE(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_INTERRUPT_ENABLE_TSIE_SHIFT)) & GMAC_MAC_INTERRUPT_ENABLE_TSIE_MASK)
#define GMAC_MAC_INTERRUPT_ENABLE_TXSTSIE_MASK   (0x2000U)
#define GMAC_MAC_INTERRUPT_ENABLE_TXSTSIE_SHIFT  (13U)
#define GMAC_MAC_INTERRUPT_ENABLE_TXSTSIE_WIDTH  (1U)
#define GMAC_MAC_INTERRUPT_ENABLE_TXSTSIE(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_INTERRUPT_ENABLE_TXSTSIE_SHIFT)) & GMAC_MAC_INTERRUPT_ENABLE_TXSTSIE_MASK)
#define GMAC_MAC_INTERRUPT_ENABLE_RXSTSIE_MASK   (0x4000U)
#define GMAC_MAC_INTERRUPT_ENABLE_RXSTSIE_SHIFT  (14U)
#define GMAC_MAC_INTERRUPT_ENABLE_RXSTSIE_WIDTH  (1U)
#define GMAC_MAC_INTERRUPT_ENABLE_RXSTSIE(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_INTERRUPT_ENABLE_RXSTSIE_SHIFT)) & GMAC_MAC_INTERRUPT_ENABLE_RXSTSIE_MASK)
#define GMAC_MAC_INTERRUPT_ENABLE_FPEIE_MASK     (0x20000U)
#define GMAC_MAC_INTERRUPT_ENABLE_FPEIE_SHIFT    (17U)
#define GMAC_MAC_INTERRUPT_ENABLE_FPEIE_WIDTH    (1U)
#define GMAC_MAC_INTERRUPT_ENABLE_FPEIE(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_INTERRUPT_ENABLE_FPEIE_SHIFT)) & GMAC_MAC_INTERRUPT_ENABLE_FPEIE_MASK)
#define GMAC_MAC_INTERRUPT_ENABLE_MDIOIE_MASK    (0x40000U)
#define GMAC_MAC_INTERRUPT_ENABLE_MDIOIE_SHIFT   (18U)
#define GMAC_MAC_INTERRUPT_ENABLE_MDIOIE_WIDTH   (1U)
#define GMAC_MAC_INTERRUPT_ENABLE_MDIOIE(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_INTERRUPT_ENABLE_MDIOIE_SHIFT)) & GMAC_MAC_INTERRUPT_ENABLE_MDIOIE_MASK)
/*! @} */

/*! @name MAC_RX_TX_STATUS -  */
/*! @{ */
#define GMAC_MAC_RX_TX_STATUS_TJT_MASK           (0x1U)
#define GMAC_MAC_RX_TX_STATUS_TJT_SHIFT          (0U)
#define GMAC_MAC_RX_TX_STATUS_TJT_WIDTH          (1U)
#define GMAC_MAC_RX_TX_STATUS_TJT(x)             (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_RX_TX_STATUS_TJT_SHIFT)) & GMAC_MAC_RX_TX_STATUS_TJT_MASK)
#define GMAC_MAC_RX_TX_STATUS_NCARR_MASK         (0x2U)
#define GMAC_MAC_RX_TX_STATUS_NCARR_SHIFT        (1U)
#define GMAC_MAC_RX_TX_STATUS_NCARR_WIDTH        (1U)
#define GMAC_MAC_RX_TX_STATUS_NCARR(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_RX_TX_STATUS_NCARR_SHIFT)) & GMAC_MAC_RX_TX_STATUS_NCARR_MASK)
#define GMAC_MAC_RX_TX_STATUS_LCARR_MASK         (0x4U)
#define GMAC_MAC_RX_TX_STATUS_LCARR_SHIFT        (2U)
#define GMAC_MAC_RX_TX_STATUS_LCARR_WIDTH        (1U)
#define GMAC_MAC_RX_TX_STATUS_LCARR(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_RX_TX_STATUS_LCARR_SHIFT)) & GMAC_MAC_RX_TX_STATUS_LCARR_MASK)
#define GMAC_MAC_RX_TX_STATUS_EXDEF_MASK         (0x8U)
#define GMAC_MAC_RX_TX_STATUS_EXDEF_SHIFT        (3U)
#define GMAC_MAC_RX_TX_STATUS_EXDEF_WIDTH        (1U)
#define GMAC_MAC_RX_TX_STATUS_EXDEF(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_RX_TX_STATUS_EXDEF_SHIFT)) & GMAC_MAC_RX_TX_STATUS_EXDEF_MASK)
#define GMAC_MAC_RX_TX_STATUS_LCOL_MASK          (0x10U)
#define GMAC_MAC_RX_TX_STATUS_LCOL_SHIFT         (4U)
#define GMAC_MAC_RX_TX_STATUS_LCOL_WIDTH         (1U)
#define GMAC_MAC_RX_TX_STATUS_LCOL(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_RX_TX_STATUS_LCOL_SHIFT)) & GMAC_MAC_RX_TX_STATUS_LCOL_MASK)
#define GMAC_MAC_RX_TX_STATUS_EXCOL_MASK         (0x20U)
#define GMAC_MAC_RX_TX_STATUS_EXCOL_SHIFT        (5U)
#define GMAC_MAC_RX_TX_STATUS_EXCOL_WIDTH        (1U)
#define GMAC_MAC_RX_TX_STATUS_EXCOL(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_RX_TX_STATUS_EXCOL_SHIFT)) & GMAC_MAC_RX_TX_STATUS_EXCOL_MASK)
#define GMAC_MAC_RX_TX_STATUS_RWT_MASK           (0x100U)
#define GMAC_MAC_RX_TX_STATUS_RWT_SHIFT          (8U)
#define GMAC_MAC_RX_TX_STATUS_RWT_WIDTH          (1U)
#define GMAC_MAC_RX_TX_STATUS_RWT(x)             (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_RX_TX_STATUS_RWT_SHIFT)) & GMAC_MAC_RX_TX_STATUS_RWT_MASK)
/*! @} */

/*! @name MAC_PMT_CONTROL_STATUS -  */
/*! @{ */
#define GMAC_MAC_PMT_CONTROL_STATUS_PWRDWN_MASK  (0x1U)
#define GMAC_MAC_PMT_CONTROL_STATUS_PWRDWN_SHIFT (0U)
#define GMAC_MAC_PMT_CONTROL_STATUS_PWRDWN_WIDTH (1U)
#define GMAC_MAC_PMT_CONTROL_STATUS_PWRDWN(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PMT_CONTROL_STATUS_PWRDWN_SHIFT)) & GMAC_MAC_PMT_CONTROL_STATUS_PWRDWN_MASK)
#define GMAC_MAC_PMT_CONTROL_STATUS_MGKPKTEN_MASK (0x2U)
#define GMAC_MAC_PMT_CONTROL_STATUS_MGKPKTEN_SHIFT (1U)
#define GMAC_MAC_PMT_CONTROL_STATUS_MGKPKTEN_WIDTH (1U)
#define GMAC_MAC_PMT_CONTROL_STATUS_MGKPKTEN(x)  (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PMT_CONTROL_STATUS_MGKPKTEN_SHIFT)) & GMAC_MAC_PMT_CONTROL_STATUS_MGKPKTEN_MASK)
#define GMAC_MAC_PMT_CONTROL_STATUS_RWKPKTEN_MASK (0x4U)
#define GMAC_MAC_PMT_CONTROL_STATUS_RWKPKTEN_SHIFT (2U)
#define GMAC_MAC_PMT_CONTROL_STATUS_RWKPKTEN_WIDTH (1U)
#define GMAC_MAC_PMT_CONTROL_STATUS_RWKPKTEN(x)  (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PMT_CONTROL_STATUS_RWKPKTEN_SHIFT)) & GMAC_MAC_PMT_CONTROL_STATUS_RWKPKTEN_MASK)
#define GMAC_MAC_PMT_CONTROL_STATUS_MGKPRCVD_MASK (0x20U)
#define GMAC_MAC_PMT_CONTROL_STATUS_MGKPRCVD_SHIFT (5U)
#define GMAC_MAC_PMT_CONTROL_STATUS_MGKPRCVD_WIDTH (1U)
#define GMAC_MAC_PMT_CONTROL_STATUS_MGKPRCVD(x)  (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PMT_CONTROL_STATUS_MGKPRCVD_SHIFT)) & GMAC_MAC_PMT_CONTROL_STATUS_MGKPRCVD_MASK)
#define GMAC_MAC_PMT_CONTROL_STATUS_RWKPRCVD_MASK (0x40U)
#define GMAC_MAC_PMT_CONTROL_STATUS_RWKPRCVD_SHIFT (6U)
#define GMAC_MAC_PMT_CONTROL_STATUS_RWKPRCVD_WIDTH (1U)
#define GMAC_MAC_PMT_CONTROL_STATUS_RWKPRCVD(x)  (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PMT_CONTROL_STATUS_RWKPRCVD_SHIFT)) & GMAC_MAC_PMT_CONTROL_STATUS_RWKPRCVD_MASK)
#define GMAC_MAC_PMT_CONTROL_STATUS_GLBLUCAST_MASK (0x200U)
#define GMAC_MAC_PMT_CONTROL_STATUS_GLBLUCAST_SHIFT (9U)
#define GMAC_MAC_PMT_CONTROL_STATUS_GLBLUCAST_WIDTH (1U)
#define GMAC_MAC_PMT_CONTROL_STATUS_GLBLUCAST(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PMT_CONTROL_STATUS_GLBLUCAST_SHIFT)) & GMAC_MAC_PMT_CONTROL_STATUS_GLBLUCAST_MASK)
#define GMAC_MAC_PMT_CONTROL_STATUS_RWKPFE_MASK  (0x400U)
#define GMAC_MAC_PMT_CONTROL_STATUS_RWKPFE_SHIFT (10U)
#define GMAC_MAC_PMT_CONTROL_STATUS_RWKPFE_WIDTH (1U)
#define GMAC_MAC_PMT_CONTROL_STATUS_RWKPFE(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PMT_CONTROL_STATUS_RWKPFE_SHIFT)) & GMAC_MAC_PMT_CONTROL_STATUS_RWKPFE_MASK)
#define GMAC_MAC_PMT_CONTROL_STATUS_RWKPTR_MASK  (0x1F000000U)
#define GMAC_MAC_PMT_CONTROL_STATUS_RWKPTR_SHIFT (24U)
#define GMAC_MAC_PMT_CONTROL_STATUS_RWKPTR_WIDTH (5U)
#define GMAC_MAC_PMT_CONTROL_STATUS_RWKPTR(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PMT_CONTROL_STATUS_RWKPTR_SHIFT)) & GMAC_MAC_PMT_CONTROL_STATUS_RWKPTR_MASK)
#define GMAC_MAC_PMT_CONTROL_STATUS_RWKFILTRST_MASK (0x80000000U)
#define GMAC_MAC_PMT_CONTROL_STATUS_RWKFILTRST_SHIFT (31U)
#define GMAC_MAC_PMT_CONTROL_STATUS_RWKFILTRST_WIDTH (1U)
#define GMAC_MAC_PMT_CONTROL_STATUS_RWKFILTRST(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PMT_CONTROL_STATUS_RWKFILTRST_SHIFT)) & GMAC_MAC_PMT_CONTROL_STATUS_RWKFILTRST_MASK)
/*! @} */

/*! @name MAC_RWK_PACKET_FILTER -  */
/*! @{ */
#define GMAC_MAC_RWK_PACKET_FILTER_WKUPFRMFTR_MASK (0xFFFFFFFFU)
#define GMAC_MAC_RWK_PACKET_FILTER_WKUPFRMFTR_SHIFT (0U)
#define GMAC_MAC_RWK_PACKET_FILTER_WKUPFRMFTR_WIDTH (32U)
#define GMAC_MAC_RWK_PACKET_FILTER_WKUPFRMFTR(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_RWK_PACKET_FILTER_WKUPFRMFTR_SHIFT)) & GMAC_MAC_RWK_PACKET_FILTER_WKUPFRMFTR_MASK)
/*! @} */

/*! @name MAC_PHYIF_CONTROL_STATUS -  */
/*! @{ */
#define GMAC_MAC_PHYIF_CONTROL_STATUS_TC_MASK    (0x1U)
#define GMAC_MAC_PHYIF_CONTROL_STATUS_TC_SHIFT   (0U)
#define GMAC_MAC_PHYIF_CONTROL_STATUS_TC_WIDTH   (1U)
#define GMAC_MAC_PHYIF_CONTROL_STATUS_TC(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PHYIF_CONTROL_STATUS_TC_SHIFT)) & GMAC_MAC_PHYIF_CONTROL_STATUS_TC_MASK)
#define GMAC_MAC_PHYIF_CONTROL_STATUS_LUD_MASK   (0x2U)
#define GMAC_MAC_PHYIF_CONTROL_STATUS_LUD_SHIFT  (1U)
#define GMAC_MAC_PHYIF_CONTROL_STATUS_LUD_WIDTH  (1U)
#define GMAC_MAC_PHYIF_CONTROL_STATUS_LUD(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PHYIF_CONTROL_STATUS_LUD_SHIFT)) & GMAC_MAC_PHYIF_CONTROL_STATUS_LUD_MASK)
#define GMAC_MAC_PHYIF_CONTROL_STATUS_LNKMOD_MASK (0x10000U)
#define GMAC_MAC_PHYIF_CONTROL_STATUS_LNKMOD_SHIFT (16U)
#define GMAC_MAC_PHYIF_CONTROL_STATUS_LNKMOD_WIDTH (1U)
#define GMAC_MAC_PHYIF_CONTROL_STATUS_LNKMOD(x)  (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PHYIF_CONTROL_STATUS_LNKMOD_SHIFT)) & GMAC_MAC_PHYIF_CONTROL_STATUS_LNKMOD_MASK)
#define GMAC_MAC_PHYIF_CONTROL_STATUS_LNKSPEED_MASK (0x60000U)
#define GMAC_MAC_PHYIF_CONTROL_STATUS_LNKSPEED_SHIFT (17U)
#define GMAC_MAC_PHYIF_CONTROL_STATUS_LNKSPEED_WIDTH (2U)
#define GMAC_MAC_PHYIF_CONTROL_STATUS_LNKSPEED(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PHYIF_CONTROL_STATUS_LNKSPEED_SHIFT)) & GMAC_MAC_PHYIF_CONTROL_STATUS_LNKSPEED_MASK)
#define GMAC_MAC_PHYIF_CONTROL_STATUS_LNKSTS_MASK (0x80000U)
#define GMAC_MAC_PHYIF_CONTROL_STATUS_LNKSTS_SHIFT (19U)
#define GMAC_MAC_PHYIF_CONTROL_STATUS_LNKSTS_WIDTH (1U)
#define GMAC_MAC_PHYIF_CONTROL_STATUS_LNKSTS(x)  (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PHYIF_CONTROL_STATUS_LNKSTS_SHIFT)) & GMAC_MAC_PHYIF_CONTROL_STATUS_LNKSTS_MASK)
/*! @} */

/*! @name MAC_VERSION -  */
/*! @{ */
#define GMAC_MAC_VERSION_IPVER_MASK              (0xFFU)
#define GMAC_MAC_VERSION_IPVER_SHIFT             (0U)
#define GMAC_MAC_VERSION_IPVER_WIDTH             (8U)
#define GMAC_MAC_VERSION_IPVER(x)                (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_VERSION_IPVER_SHIFT)) & GMAC_MAC_VERSION_IPVER_MASK)
#define GMAC_MAC_VERSION_CFGVER_MASK             (0xFF00U)
#define GMAC_MAC_VERSION_CFGVER_SHIFT            (8U)
#define GMAC_MAC_VERSION_CFGVER_WIDTH            (8U)
#define GMAC_MAC_VERSION_CFGVER(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_VERSION_CFGVER_SHIFT)) & GMAC_MAC_VERSION_CFGVER_MASK)
/*! @} */

/*! @name MAC_DEBUG -  */
/*! @{ */
#define GMAC_MAC_DEBUG_RPESTS_MASK               (0x1U)
#define GMAC_MAC_DEBUG_RPESTS_SHIFT              (0U)
#define GMAC_MAC_DEBUG_RPESTS_WIDTH              (1U)
#define GMAC_MAC_DEBUG_RPESTS(x)                 (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_DEBUG_RPESTS_SHIFT)) & GMAC_MAC_DEBUG_RPESTS_MASK)
#define GMAC_MAC_DEBUG_RFCFCSTS_MASK             (0x6U)
#define GMAC_MAC_DEBUG_RFCFCSTS_SHIFT            (1U)
#define GMAC_MAC_DEBUG_RFCFCSTS_WIDTH            (2U)
#define GMAC_MAC_DEBUG_RFCFCSTS(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_DEBUG_RFCFCSTS_SHIFT)) & GMAC_MAC_DEBUG_RFCFCSTS_MASK)
#define GMAC_MAC_DEBUG_TPESTS_MASK               (0x10000U)
#define GMAC_MAC_DEBUG_TPESTS_SHIFT              (16U)
#define GMAC_MAC_DEBUG_TPESTS_WIDTH              (1U)
#define GMAC_MAC_DEBUG_TPESTS(x)                 (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_DEBUG_TPESTS_SHIFT)) & GMAC_MAC_DEBUG_TPESTS_MASK)
#define GMAC_MAC_DEBUG_TFCSTS_MASK               (0x60000U)
#define GMAC_MAC_DEBUG_TFCSTS_SHIFT              (17U)
#define GMAC_MAC_DEBUG_TFCSTS_WIDTH              (2U)
#define GMAC_MAC_DEBUG_TFCSTS(x)                 (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_DEBUG_TFCSTS_SHIFT)) & GMAC_MAC_DEBUG_TFCSTS_MASK)
/*! @} */

/*! @name MAC_HW_FEATURE0 -  */
/*! @{ */
#define GMAC_MAC_HW_FEATURE0_MIISEL_MASK         (0x1U)
#define GMAC_MAC_HW_FEATURE0_MIISEL_SHIFT        (0U)
#define GMAC_MAC_HW_FEATURE0_MIISEL_WIDTH        (1U)
#define GMAC_MAC_HW_FEATURE0_MIISEL(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_HW_FEATURE0_MIISEL_SHIFT)) & GMAC_MAC_HW_FEATURE0_MIISEL_MASK)
#define GMAC_MAC_HW_FEATURE0_GMIISEL_MASK        (0x2U)
#define GMAC_MAC_HW_FEATURE0_GMIISEL_SHIFT       (1U)
#define GMAC_MAC_HW_FEATURE0_GMIISEL_WIDTH       (1U)
#define GMAC_MAC_HW_FEATURE0_GMIISEL(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_HW_FEATURE0_GMIISEL_SHIFT)) & GMAC_MAC_HW_FEATURE0_GMIISEL_MASK)
#define GMAC_MAC_HW_FEATURE0_HDSEL_MASK          (0x4U)
#define GMAC_MAC_HW_FEATURE0_HDSEL_SHIFT         (2U)
#define GMAC_MAC_HW_FEATURE0_HDSEL_WIDTH         (1U)
#define GMAC_MAC_HW_FEATURE0_HDSEL(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_HW_FEATURE0_HDSEL_SHIFT)) & GMAC_MAC_HW_FEATURE0_HDSEL_MASK)
#define GMAC_MAC_HW_FEATURE0_PCSSEL_MASK         (0x8U)
#define GMAC_MAC_HW_FEATURE0_PCSSEL_SHIFT        (3U)
#define GMAC_MAC_HW_FEATURE0_PCSSEL_WIDTH        (1U)
#define GMAC_MAC_HW_FEATURE0_PCSSEL(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_HW_FEATURE0_PCSSEL_SHIFT)) & GMAC_MAC_HW_FEATURE0_PCSSEL_MASK)
#define GMAC_MAC_HW_FEATURE0_VLHASH_MASK         (0x10U)
#define GMAC_MAC_HW_FEATURE0_VLHASH_SHIFT        (4U)
#define GMAC_MAC_HW_FEATURE0_VLHASH_WIDTH        (1U)
#define GMAC_MAC_HW_FEATURE0_VLHASH(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_HW_FEATURE0_VLHASH_SHIFT)) & GMAC_MAC_HW_FEATURE0_VLHASH_MASK)
#define GMAC_MAC_HW_FEATURE0_SMASEL_MASK         (0x20U)
#define GMAC_MAC_HW_FEATURE0_SMASEL_SHIFT        (5U)
#define GMAC_MAC_HW_FEATURE0_SMASEL_WIDTH        (1U)
#define GMAC_MAC_HW_FEATURE0_SMASEL(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_HW_FEATURE0_SMASEL_SHIFT)) & GMAC_MAC_HW_FEATURE0_SMASEL_MASK)
#define GMAC_MAC_HW_FEATURE0_RWKSEL_MASK         (0x40U)
#define GMAC_MAC_HW_FEATURE0_RWKSEL_SHIFT        (6U)
#define GMAC_MAC_HW_FEATURE0_RWKSEL_WIDTH        (1U)
#define GMAC_MAC_HW_FEATURE0_RWKSEL(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_HW_FEATURE0_RWKSEL_SHIFT)) & GMAC_MAC_HW_FEATURE0_RWKSEL_MASK)
#define GMAC_MAC_HW_FEATURE0_MGKSEL_MASK         (0x80U)
#define GMAC_MAC_HW_FEATURE0_MGKSEL_SHIFT        (7U)
#define GMAC_MAC_HW_FEATURE0_MGKSEL_WIDTH        (1U)
#define GMAC_MAC_HW_FEATURE0_MGKSEL(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_HW_FEATURE0_MGKSEL_SHIFT)) & GMAC_MAC_HW_FEATURE0_MGKSEL_MASK)
#define GMAC_MAC_HW_FEATURE0_MMCSEL_MASK         (0x100U)
#define GMAC_MAC_HW_FEATURE0_MMCSEL_SHIFT        (8U)
#define GMAC_MAC_HW_FEATURE0_MMCSEL_WIDTH        (1U)
#define GMAC_MAC_HW_FEATURE0_MMCSEL(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_HW_FEATURE0_MMCSEL_SHIFT)) & GMAC_MAC_HW_FEATURE0_MMCSEL_MASK)
#define GMAC_MAC_HW_FEATURE0_ARPOFFSEL_MASK      (0x200U)
#define GMAC_MAC_HW_FEATURE0_ARPOFFSEL_SHIFT     (9U)
#define GMAC_MAC_HW_FEATURE0_ARPOFFSEL_WIDTH     (1U)
#define GMAC_MAC_HW_FEATURE0_ARPOFFSEL(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_HW_FEATURE0_ARPOFFSEL_SHIFT)) & GMAC_MAC_HW_FEATURE0_ARPOFFSEL_MASK)
#define GMAC_MAC_HW_FEATURE0_TSSEL_MASK          (0x1000U)
#define GMAC_MAC_HW_FEATURE0_TSSEL_SHIFT         (12U)
#define GMAC_MAC_HW_FEATURE0_TSSEL_WIDTH         (1U)
#define GMAC_MAC_HW_FEATURE0_TSSEL(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_HW_FEATURE0_TSSEL_SHIFT)) & GMAC_MAC_HW_FEATURE0_TSSEL_MASK)
#define GMAC_MAC_HW_FEATURE0_TXCOESEL_MASK       (0x4000U)
#define GMAC_MAC_HW_FEATURE0_TXCOESEL_SHIFT      (14U)
#define GMAC_MAC_HW_FEATURE0_TXCOESEL_WIDTH      (1U)
#define GMAC_MAC_HW_FEATURE0_TXCOESEL(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_HW_FEATURE0_TXCOESEL_SHIFT)) & GMAC_MAC_HW_FEATURE0_TXCOESEL_MASK)
#define GMAC_MAC_HW_FEATURE0_RXCOESEL_MASK       (0x10000U)
#define GMAC_MAC_HW_FEATURE0_RXCOESEL_SHIFT      (16U)
#define GMAC_MAC_HW_FEATURE0_RXCOESEL_WIDTH      (1U)
#define GMAC_MAC_HW_FEATURE0_RXCOESEL(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_HW_FEATURE0_RXCOESEL_SHIFT)) & GMAC_MAC_HW_FEATURE0_RXCOESEL_MASK)
#define GMAC_MAC_HW_FEATURE0_ADDMACADRSEL_MASK   (0x7C0000U)
#define GMAC_MAC_HW_FEATURE0_ADDMACADRSEL_SHIFT  (18U)
#define GMAC_MAC_HW_FEATURE0_ADDMACADRSEL_WIDTH  (5U)
#define GMAC_MAC_HW_FEATURE0_ADDMACADRSEL(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_HW_FEATURE0_ADDMACADRSEL_SHIFT)) & GMAC_MAC_HW_FEATURE0_ADDMACADRSEL_MASK)
#define GMAC_MAC_HW_FEATURE0_MACADR32SEL_MASK    (0x800000U)
#define GMAC_MAC_HW_FEATURE0_MACADR32SEL_SHIFT   (23U)
#define GMAC_MAC_HW_FEATURE0_MACADR32SEL_WIDTH   (1U)
#define GMAC_MAC_HW_FEATURE0_MACADR32SEL(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_HW_FEATURE0_MACADR32SEL_SHIFT)) & GMAC_MAC_HW_FEATURE0_MACADR32SEL_MASK)
#define GMAC_MAC_HW_FEATURE0_MACADR64SEL_MASK    (0x1000000U)
#define GMAC_MAC_HW_FEATURE0_MACADR64SEL_SHIFT   (24U)
#define GMAC_MAC_HW_FEATURE0_MACADR64SEL_WIDTH   (1U)
#define GMAC_MAC_HW_FEATURE0_MACADR64SEL(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_HW_FEATURE0_MACADR64SEL_SHIFT)) & GMAC_MAC_HW_FEATURE0_MACADR64SEL_MASK)
#define GMAC_MAC_HW_FEATURE0_TSSTSSEL_MASK       (0x6000000U)
#define GMAC_MAC_HW_FEATURE0_TSSTSSEL_SHIFT      (25U)
#define GMAC_MAC_HW_FEATURE0_TSSTSSEL_WIDTH      (2U)
#define GMAC_MAC_HW_FEATURE0_TSSTSSEL(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_HW_FEATURE0_TSSTSSEL_SHIFT)) & GMAC_MAC_HW_FEATURE0_TSSTSSEL_MASK)
#define GMAC_MAC_HW_FEATURE0_SAVLANINS_MASK      (0x8000000U)
#define GMAC_MAC_HW_FEATURE0_SAVLANINS_SHIFT     (27U)
#define GMAC_MAC_HW_FEATURE0_SAVLANINS_WIDTH     (1U)
#define GMAC_MAC_HW_FEATURE0_SAVLANINS(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_HW_FEATURE0_SAVLANINS_SHIFT)) & GMAC_MAC_HW_FEATURE0_SAVLANINS_MASK)
#define GMAC_MAC_HW_FEATURE0_ACTPHYSEL_MASK      (0x70000000U)
#define GMAC_MAC_HW_FEATURE0_ACTPHYSEL_SHIFT     (28U)
#define GMAC_MAC_HW_FEATURE0_ACTPHYSEL_WIDTH     (3U)
#define GMAC_MAC_HW_FEATURE0_ACTPHYSEL(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_HW_FEATURE0_ACTPHYSEL_SHIFT)) & GMAC_MAC_HW_FEATURE0_ACTPHYSEL_MASK)
/*! @} */

/*! @name MAC_HW_FEATURE1 -  */
/*! @{ */
#define GMAC_MAC_HW_FEATURE1_RXFIFOSIZE_MASK     (0x1FU)
#define GMAC_MAC_HW_FEATURE1_RXFIFOSIZE_SHIFT    (0U)
#define GMAC_MAC_HW_FEATURE1_RXFIFOSIZE_WIDTH    (5U)
#define GMAC_MAC_HW_FEATURE1_RXFIFOSIZE(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_HW_FEATURE1_RXFIFOSIZE_SHIFT)) & GMAC_MAC_HW_FEATURE1_RXFIFOSIZE_MASK)
#define GMAC_MAC_HW_FEATURE1_SPRAM_MASK          (0x20U)
#define GMAC_MAC_HW_FEATURE1_SPRAM_SHIFT         (5U)
#define GMAC_MAC_HW_FEATURE1_SPRAM_WIDTH         (1U)
#define GMAC_MAC_HW_FEATURE1_SPRAM(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_HW_FEATURE1_SPRAM_SHIFT)) & GMAC_MAC_HW_FEATURE1_SPRAM_MASK)
#define GMAC_MAC_HW_FEATURE1_TXFIFOSIZE_MASK     (0x7C0U)
#define GMAC_MAC_HW_FEATURE1_TXFIFOSIZE_SHIFT    (6U)
#define GMAC_MAC_HW_FEATURE1_TXFIFOSIZE_WIDTH    (5U)
#define GMAC_MAC_HW_FEATURE1_TXFIFOSIZE(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_HW_FEATURE1_TXFIFOSIZE_SHIFT)) & GMAC_MAC_HW_FEATURE1_TXFIFOSIZE_MASK)
#define GMAC_MAC_HW_FEATURE1_OSTEN_MASK          (0x800U)
#define GMAC_MAC_HW_FEATURE1_OSTEN_SHIFT         (11U)
#define GMAC_MAC_HW_FEATURE1_OSTEN_WIDTH         (1U)
#define GMAC_MAC_HW_FEATURE1_OSTEN(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_HW_FEATURE1_OSTEN_SHIFT)) & GMAC_MAC_HW_FEATURE1_OSTEN_MASK)
#define GMAC_MAC_HW_FEATURE1_PTOEN_MASK          (0x1000U)
#define GMAC_MAC_HW_FEATURE1_PTOEN_SHIFT         (12U)
#define GMAC_MAC_HW_FEATURE1_PTOEN_WIDTH         (1U)
#define GMAC_MAC_HW_FEATURE1_PTOEN(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_HW_FEATURE1_PTOEN_SHIFT)) & GMAC_MAC_HW_FEATURE1_PTOEN_MASK)
#define GMAC_MAC_HW_FEATURE1_ADVTHWORD_MASK      (0x2000U)
#define GMAC_MAC_HW_FEATURE1_ADVTHWORD_SHIFT     (13U)
#define GMAC_MAC_HW_FEATURE1_ADVTHWORD_WIDTH     (1U)
#define GMAC_MAC_HW_FEATURE1_ADVTHWORD(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_HW_FEATURE1_ADVTHWORD_SHIFT)) & GMAC_MAC_HW_FEATURE1_ADVTHWORD_MASK)
#define GMAC_MAC_HW_FEATURE1_ADDR64_MASK         (0xC000U)
#define GMAC_MAC_HW_FEATURE1_ADDR64_SHIFT        (14U)
#define GMAC_MAC_HW_FEATURE1_ADDR64_WIDTH        (2U)
#define GMAC_MAC_HW_FEATURE1_ADDR64(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_HW_FEATURE1_ADDR64_SHIFT)) & GMAC_MAC_HW_FEATURE1_ADDR64_MASK)
#define GMAC_MAC_HW_FEATURE1_DCBEN_MASK          (0x10000U)
#define GMAC_MAC_HW_FEATURE1_DCBEN_SHIFT         (16U)
#define GMAC_MAC_HW_FEATURE1_DCBEN_WIDTH         (1U)
#define GMAC_MAC_HW_FEATURE1_DCBEN(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_HW_FEATURE1_DCBEN_SHIFT)) & GMAC_MAC_HW_FEATURE1_DCBEN_MASK)
#define GMAC_MAC_HW_FEATURE1_SPHEN_MASK          (0x20000U)
#define GMAC_MAC_HW_FEATURE1_SPHEN_SHIFT         (17U)
#define GMAC_MAC_HW_FEATURE1_SPHEN_WIDTH         (1U)
#define GMAC_MAC_HW_FEATURE1_SPHEN(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_HW_FEATURE1_SPHEN_SHIFT)) & GMAC_MAC_HW_FEATURE1_SPHEN_MASK)
#define GMAC_MAC_HW_FEATURE1_DBGMEMA_MASK        (0x80000U)
#define GMAC_MAC_HW_FEATURE1_DBGMEMA_SHIFT       (19U)
#define GMAC_MAC_HW_FEATURE1_DBGMEMA_WIDTH       (1U)
#define GMAC_MAC_HW_FEATURE1_DBGMEMA(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_HW_FEATURE1_DBGMEMA_SHIFT)) & GMAC_MAC_HW_FEATURE1_DBGMEMA_MASK)
#define GMAC_MAC_HW_FEATURE1_AVSEL_MASK          (0x100000U)
#define GMAC_MAC_HW_FEATURE1_AVSEL_SHIFT         (20U)
#define GMAC_MAC_HW_FEATURE1_AVSEL_WIDTH         (1U)
#define GMAC_MAC_HW_FEATURE1_AVSEL(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_HW_FEATURE1_AVSEL_SHIFT)) & GMAC_MAC_HW_FEATURE1_AVSEL_MASK)
#define GMAC_MAC_HW_FEATURE1_RAVSEL_MASK         (0x200000U)
#define GMAC_MAC_HW_FEATURE1_RAVSEL_SHIFT        (21U)
#define GMAC_MAC_HW_FEATURE1_RAVSEL_WIDTH        (1U)
#define GMAC_MAC_HW_FEATURE1_RAVSEL(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_HW_FEATURE1_RAVSEL_SHIFT)) & GMAC_MAC_HW_FEATURE1_RAVSEL_MASK)
#define GMAC_MAC_HW_FEATURE1_POUOST_MASK         (0x800000U)
#define GMAC_MAC_HW_FEATURE1_POUOST_SHIFT        (23U)
#define GMAC_MAC_HW_FEATURE1_POUOST_WIDTH        (1U)
#define GMAC_MAC_HW_FEATURE1_POUOST(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_HW_FEATURE1_POUOST_SHIFT)) & GMAC_MAC_HW_FEATURE1_POUOST_MASK)
#define GMAC_MAC_HW_FEATURE1_HASHTBLSZ_MASK      (0x3000000U)
#define GMAC_MAC_HW_FEATURE1_HASHTBLSZ_SHIFT     (24U)
#define GMAC_MAC_HW_FEATURE1_HASHTBLSZ_WIDTH     (2U)
#define GMAC_MAC_HW_FEATURE1_HASHTBLSZ(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_HW_FEATURE1_HASHTBLSZ_SHIFT)) & GMAC_MAC_HW_FEATURE1_HASHTBLSZ_MASK)
#define GMAC_MAC_HW_FEATURE1_L3L4FNUM_MASK       (0x78000000U)
#define GMAC_MAC_HW_FEATURE1_L3L4FNUM_SHIFT      (27U)
#define GMAC_MAC_HW_FEATURE1_L3L4FNUM_WIDTH      (4U)
#define GMAC_MAC_HW_FEATURE1_L3L4FNUM(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_HW_FEATURE1_L3L4FNUM_SHIFT)) & GMAC_MAC_HW_FEATURE1_L3L4FNUM_MASK)
/*! @} */

/*! @name MAC_HW_FEATURE2 -  */
/*! @{ */
#define GMAC_MAC_HW_FEATURE2_RXQCNT_MASK         (0xFU)
#define GMAC_MAC_HW_FEATURE2_RXQCNT_SHIFT        (0U)
#define GMAC_MAC_HW_FEATURE2_RXQCNT_WIDTH        (4U)
#define GMAC_MAC_HW_FEATURE2_RXQCNT(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_HW_FEATURE2_RXQCNT_SHIFT)) & GMAC_MAC_HW_FEATURE2_RXQCNT_MASK)
#define GMAC_MAC_HW_FEATURE2_TXQCNT_MASK         (0x3C0U)
#define GMAC_MAC_HW_FEATURE2_TXQCNT_SHIFT        (6U)
#define GMAC_MAC_HW_FEATURE2_TXQCNT_WIDTH        (4U)
#define GMAC_MAC_HW_FEATURE2_TXQCNT(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_HW_FEATURE2_TXQCNT_SHIFT)) & GMAC_MAC_HW_FEATURE2_TXQCNT_MASK)
#define GMAC_MAC_HW_FEATURE2_RXCHCNT_MASK        (0xF000U)
#define GMAC_MAC_HW_FEATURE2_RXCHCNT_SHIFT       (12U)
#define GMAC_MAC_HW_FEATURE2_RXCHCNT_WIDTH       (4U)
#define GMAC_MAC_HW_FEATURE2_RXCHCNT(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_HW_FEATURE2_RXCHCNT_SHIFT)) & GMAC_MAC_HW_FEATURE2_RXCHCNT_MASK)
#define GMAC_MAC_HW_FEATURE2_TXCHCNT_MASK        (0x3C0000U)
#define GMAC_MAC_HW_FEATURE2_TXCHCNT_SHIFT       (18U)
#define GMAC_MAC_HW_FEATURE2_TXCHCNT_WIDTH       (4U)
#define GMAC_MAC_HW_FEATURE2_TXCHCNT(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_HW_FEATURE2_TXCHCNT_SHIFT)) & GMAC_MAC_HW_FEATURE2_TXCHCNT_MASK)
#define GMAC_MAC_HW_FEATURE2_PPSOUTNUM_MASK      (0x7000000U)
#define GMAC_MAC_HW_FEATURE2_PPSOUTNUM_SHIFT     (24U)
#define GMAC_MAC_HW_FEATURE2_PPSOUTNUM_WIDTH     (3U)
#define GMAC_MAC_HW_FEATURE2_PPSOUTNUM(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_HW_FEATURE2_PPSOUTNUM_SHIFT)) & GMAC_MAC_HW_FEATURE2_PPSOUTNUM_MASK)
#define GMAC_MAC_HW_FEATURE2_AUXSNAPNUM_MASK     (0x70000000U)
#define GMAC_MAC_HW_FEATURE2_AUXSNAPNUM_SHIFT    (28U)
#define GMAC_MAC_HW_FEATURE2_AUXSNAPNUM_WIDTH    (3U)
#define GMAC_MAC_HW_FEATURE2_AUXSNAPNUM(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_HW_FEATURE2_AUXSNAPNUM_SHIFT)) & GMAC_MAC_HW_FEATURE2_AUXSNAPNUM_MASK)
/*! @} */

/*! @name MAC_HW_FEATURE3 -  */
/*! @{ */
#define GMAC_MAC_HW_FEATURE3_NRVF_MASK           (0x7U)
#define GMAC_MAC_HW_FEATURE3_NRVF_SHIFT          (0U)
#define GMAC_MAC_HW_FEATURE3_NRVF_WIDTH          (3U)
#define GMAC_MAC_HW_FEATURE3_NRVF(x)             (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_HW_FEATURE3_NRVF_SHIFT)) & GMAC_MAC_HW_FEATURE3_NRVF_MASK)
#define GMAC_MAC_HW_FEATURE3_CBTISEL_MASK        (0x10U)
#define GMAC_MAC_HW_FEATURE3_CBTISEL_SHIFT       (4U)
#define GMAC_MAC_HW_FEATURE3_CBTISEL_WIDTH       (1U)
#define GMAC_MAC_HW_FEATURE3_CBTISEL(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_HW_FEATURE3_CBTISEL_SHIFT)) & GMAC_MAC_HW_FEATURE3_CBTISEL_MASK)
#define GMAC_MAC_HW_FEATURE3_DVLAN_MASK          (0x20U)
#define GMAC_MAC_HW_FEATURE3_DVLAN_SHIFT         (5U)
#define GMAC_MAC_HW_FEATURE3_DVLAN_WIDTH         (1U)
#define GMAC_MAC_HW_FEATURE3_DVLAN(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_HW_FEATURE3_DVLAN_SHIFT)) & GMAC_MAC_HW_FEATURE3_DVLAN_MASK)
#define GMAC_MAC_HW_FEATURE3_PDUPSEL_MASK        (0x200U)
#define GMAC_MAC_HW_FEATURE3_PDUPSEL_SHIFT       (9U)
#define GMAC_MAC_HW_FEATURE3_PDUPSEL_WIDTH       (1U)
#define GMAC_MAC_HW_FEATURE3_PDUPSEL(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_HW_FEATURE3_PDUPSEL_SHIFT)) & GMAC_MAC_HW_FEATURE3_PDUPSEL_MASK)
#define GMAC_MAC_HW_FEATURE3_FRPSEL_MASK         (0x400U)
#define GMAC_MAC_HW_FEATURE3_FRPSEL_SHIFT        (10U)
#define GMAC_MAC_HW_FEATURE3_FRPSEL_WIDTH        (1U)
#define GMAC_MAC_HW_FEATURE3_FRPSEL(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_HW_FEATURE3_FRPSEL_SHIFT)) & GMAC_MAC_HW_FEATURE3_FRPSEL_MASK)
#define GMAC_MAC_HW_FEATURE3_FRPBS_MASK          (0x1800U)
#define GMAC_MAC_HW_FEATURE3_FRPBS_SHIFT         (11U)
#define GMAC_MAC_HW_FEATURE3_FRPBS_WIDTH         (2U)
#define GMAC_MAC_HW_FEATURE3_FRPBS(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_HW_FEATURE3_FRPBS_SHIFT)) & GMAC_MAC_HW_FEATURE3_FRPBS_MASK)
#define GMAC_MAC_HW_FEATURE3_FRPES_MASK          (0x6000U)
#define GMAC_MAC_HW_FEATURE3_FRPES_SHIFT         (13U)
#define GMAC_MAC_HW_FEATURE3_FRPES_WIDTH         (2U)
#define GMAC_MAC_HW_FEATURE3_FRPES(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_HW_FEATURE3_FRPES_SHIFT)) & GMAC_MAC_HW_FEATURE3_FRPES_MASK)
#define GMAC_MAC_HW_FEATURE3_ESTSEL_MASK         (0x10000U)
#define GMAC_MAC_HW_FEATURE3_ESTSEL_SHIFT        (16U)
#define GMAC_MAC_HW_FEATURE3_ESTSEL_WIDTH        (1U)
#define GMAC_MAC_HW_FEATURE3_ESTSEL(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_HW_FEATURE3_ESTSEL_SHIFT)) & GMAC_MAC_HW_FEATURE3_ESTSEL_MASK)
#define GMAC_MAC_HW_FEATURE3_ESTDEP_MASK         (0xE0000U)
#define GMAC_MAC_HW_FEATURE3_ESTDEP_SHIFT        (17U)
#define GMAC_MAC_HW_FEATURE3_ESTDEP_WIDTH        (3U)
#define GMAC_MAC_HW_FEATURE3_ESTDEP(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_HW_FEATURE3_ESTDEP_SHIFT)) & GMAC_MAC_HW_FEATURE3_ESTDEP_MASK)
#define GMAC_MAC_HW_FEATURE3_ESTWID_MASK         (0x300000U)
#define GMAC_MAC_HW_FEATURE3_ESTWID_SHIFT        (20U)
#define GMAC_MAC_HW_FEATURE3_ESTWID_WIDTH        (2U)
#define GMAC_MAC_HW_FEATURE3_ESTWID(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_HW_FEATURE3_ESTWID_SHIFT)) & GMAC_MAC_HW_FEATURE3_ESTWID_MASK)
#define GMAC_MAC_HW_FEATURE3_FPESEL_MASK         (0x4000000U)
#define GMAC_MAC_HW_FEATURE3_FPESEL_SHIFT        (26U)
#define GMAC_MAC_HW_FEATURE3_FPESEL_WIDTH        (1U)
#define GMAC_MAC_HW_FEATURE3_FPESEL(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_HW_FEATURE3_FPESEL_SHIFT)) & GMAC_MAC_HW_FEATURE3_FPESEL_MASK)
#define GMAC_MAC_HW_FEATURE3_TBSSEL_MASK         (0x8000000U)
#define GMAC_MAC_HW_FEATURE3_TBSSEL_SHIFT        (27U)
#define GMAC_MAC_HW_FEATURE3_TBSSEL_WIDTH        (1U)
#define GMAC_MAC_HW_FEATURE3_TBSSEL(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_HW_FEATURE3_TBSSEL_SHIFT)) & GMAC_MAC_HW_FEATURE3_TBSSEL_MASK)
#define GMAC_MAC_HW_FEATURE3_ASP_MASK            (0x30000000U)
#define GMAC_MAC_HW_FEATURE3_ASP_SHIFT           (28U)
#define GMAC_MAC_HW_FEATURE3_ASP_WIDTH           (2U)
#define GMAC_MAC_HW_FEATURE3_ASP(x)              (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_HW_FEATURE3_ASP_SHIFT)) & GMAC_MAC_HW_FEATURE3_ASP_MASK)
/*! @} */

/*! @name MAC_DPP_FSM_INTERRUPT_STATUS -  */
/*! @{ */
#define GMAC_MAC_DPP_FSM_INTERRUPT_STATUS_RDPES_MASK (0x4U)
#define GMAC_MAC_DPP_FSM_INTERRUPT_STATUS_RDPES_SHIFT (2U)
#define GMAC_MAC_DPP_FSM_INTERRUPT_STATUS_RDPES_WIDTH (1U)
#define GMAC_MAC_DPP_FSM_INTERRUPT_STATUS_RDPES(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_DPP_FSM_INTERRUPT_STATUS_RDPES_SHIFT)) & GMAC_MAC_DPP_FSM_INTERRUPT_STATUS_RDPES_MASK)
#define GMAC_MAC_DPP_FSM_INTERRUPT_STATUS_MPES_MASK (0x8U)
#define GMAC_MAC_DPP_FSM_INTERRUPT_STATUS_MPES_SHIFT (3U)
#define GMAC_MAC_DPP_FSM_INTERRUPT_STATUS_MPES_WIDTH (1U)
#define GMAC_MAC_DPP_FSM_INTERRUPT_STATUS_MPES(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_DPP_FSM_INTERRUPT_STATUS_MPES_SHIFT)) & GMAC_MAC_DPP_FSM_INTERRUPT_STATUS_MPES_MASK)
#define GMAC_MAC_DPP_FSM_INTERRUPT_STATUS_MTSPES_MASK (0x10U)
#define GMAC_MAC_DPP_FSM_INTERRUPT_STATUS_MTSPES_SHIFT (4U)
#define GMAC_MAC_DPP_FSM_INTERRUPT_STATUS_MTSPES_WIDTH (1U)
#define GMAC_MAC_DPP_FSM_INTERRUPT_STATUS_MTSPES(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_DPP_FSM_INTERRUPT_STATUS_MTSPES_SHIFT)) & GMAC_MAC_DPP_FSM_INTERRUPT_STATUS_MTSPES_MASK)
#define GMAC_MAC_DPP_FSM_INTERRUPT_STATUS_ARPES_MASK (0x20U)
#define GMAC_MAC_DPP_FSM_INTERRUPT_STATUS_ARPES_SHIFT (5U)
#define GMAC_MAC_DPP_FSM_INTERRUPT_STATUS_ARPES_WIDTH (1U)
#define GMAC_MAC_DPP_FSM_INTERRUPT_STATUS_ARPES(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_DPP_FSM_INTERRUPT_STATUS_ARPES_SHIFT)) & GMAC_MAC_DPP_FSM_INTERRUPT_STATUS_ARPES_MASK)
#define GMAC_MAC_DPP_FSM_INTERRUPT_STATUS_TTES_MASK (0x100U)
#define GMAC_MAC_DPP_FSM_INTERRUPT_STATUS_TTES_SHIFT (8U)
#define GMAC_MAC_DPP_FSM_INTERRUPT_STATUS_TTES_WIDTH (1U)
#define GMAC_MAC_DPP_FSM_INTERRUPT_STATUS_TTES(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_DPP_FSM_INTERRUPT_STATUS_TTES_SHIFT)) & GMAC_MAC_DPP_FSM_INTERRUPT_STATUS_TTES_MASK)
#define GMAC_MAC_DPP_FSM_INTERRUPT_STATUS_RTES_MASK (0x200U)
#define GMAC_MAC_DPP_FSM_INTERRUPT_STATUS_RTES_SHIFT (9U)
#define GMAC_MAC_DPP_FSM_INTERRUPT_STATUS_RTES_WIDTH (1U)
#define GMAC_MAC_DPP_FSM_INTERRUPT_STATUS_RTES(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_DPP_FSM_INTERRUPT_STATUS_RTES_SHIFT)) & GMAC_MAC_DPP_FSM_INTERRUPT_STATUS_RTES_MASK)
#define GMAC_MAC_DPP_FSM_INTERRUPT_STATUS_ATES_MASK (0x800U)
#define GMAC_MAC_DPP_FSM_INTERRUPT_STATUS_ATES_SHIFT (11U)
#define GMAC_MAC_DPP_FSM_INTERRUPT_STATUS_ATES_WIDTH (1U)
#define GMAC_MAC_DPP_FSM_INTERRUPT_STATUS_ATES(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_DPP_FSM_INTERRUPT_STATUS_ATES_SHIFT)) & GMAC_MAC_DPP_FSM_INTERRUPT_STATUS_ATES_MASK)
#define GMAC_MAC_DPP_FSM_INTERRUPT_STATUS_PTES_MASK (0x1000U)
#define GMAC_MAC_DPP_FSM_INTERRUPT_STATUS_PTES_SHIFT (12U)
#define GMAC_MAC_DPP_FSM_INTERRUPT_STATUS_PTES_WIDTH (1U)
#define GMAC_MAC_DPP_FSM_INTERRUPT_STATUS_PTES(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_DPP_FSM_INTERRUPT_STATUS_PTES_SHIFT)) & GMAC_MAC_DPP_FSM_INTERRUPT_STATUS_PTES_MASK)
#define GMAC_MAC_DPP_FSM_INTERRUPT_STATUS_MSTTES_MASK (0x10000U)
#define GMAC_MAC_DPP_FSM_INTERRUPT_STATUS_MSTTES_SHIFT (16U)
#define GMAC_MAC_DPP_FSM_INTERRUPT_STATUS_MSTTES_WIDTH (1U)
#define GMAC_MAC_DPP_FSM_INTERRUPT_STATUS_MSTTES(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_DPP_FSM_INTERRUPT_STATUS_MSTTES_SHIFT)) & GMAC_MAC_DPP_FSM_INTERRUPT_STATUS_MSTTES_MASK)
#define GMAC_MAC_DPP_FSM_INTERRUPT_STATUS_FSMPES_MASK (0x1000000U)
#define GMAC_MAC_DPP_FSM_INTERRUPT_STATUS_FSMPES_SHIFT (24U)
#define GMAC_MAC_DPP_FSM_INTERRUPT_STATUS_FSMPES_WIDTH (1U)
#define GMAC_MAC_DPP_FSM_INTERRUPT_STATUS_FSMPES(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_DPP_FSM_INTERRUPT_STATUS_FSMPES_SHIFT)) & GMAC_MAC_DPP_FSM_INTERRUPT_STATUS_FSMPES_MASK)
/*! @} */

/*! @name MAC_FSM_CONTROL -  */
/*! @{ */
#define GMAC_MAC_FSM_CONTROL_TMOUTEN_MASK        (0x1U)
#define GMAC_MAC_FSM_CONTROL_TMOUTEN_SHIFT       (0U)
#define GMAC_MAC_FSM_CONTROL_TMOUTEN_WIDTH       (1U)
#define GMAC_MAC_FSM_CONTROL_TMOUTEN(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_FSM_CONTROL_TMOUTEN_SHIFT)) & GMAC_MAC_FSM_CONTROL_TMOUTEN_MASK)
#define GMAC_MAC_FSM_CONTROL_PRTYEN_MASK         (0x2U)
#define GMAC_MAC_FSM_CONTROL_PRTYEN_SHIFT        (1U)
#define GMAC_MAC_FSM_CONTROL_PRTYEN_WIDTH        (1U)
#define GMAC_MAC_FSM_CONTROL_PRTYEN(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_FSM_CONTROL_PRTYEN_SHIFT)) & GMAC_MAC_FSM_CONTROL_PRTYEN_MASK)
#define GMAC_MAC_FSM_CONTROL_TTEIN_MASK          (0x100U)
#define GMAC_MAC_FSM_CONTROL_TTEIN_SHIFT         (8U)
#define GMAC_MAC_FSM_CONTROL_TTEIN_WIDTH         (1U)
#define GMAC_MAC_FSM_CONTROL_TTEIN(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_FSM_CONTROL_TTEIN_SHIFT)) & GMAC_MAC_FSM_CONTROL_TTEIN_MASK)
#define GMAC_MAC_FSM_CONTROL_RTEIN_MASK          (0x200U)
#define GMAC_MAC_FSM_CONTROL_RTEIN_SHIFT         (9U)
#define GMAC_MAC_FSM_CONTROL_RTEIN_WIDTH         (1U)
#define GMAC_MAC_FSM_CONTROL_RTEIN(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_FSM_CONTROL_RTEIN_SHIFT)) & GMAC_MAC_FSM_CONTROL_RTEIN_MASK)
#define GMAC_MAC_FSM_CONTROL_ATEIN_MASK          (0x800U)
#define GMAC_MAC_FSM_CONTROL_ATEIN_SHIFT         (11U)
#define GMAC_MAC_FSM_CONTROL_ATEIN_WIDTH         (1U)
#define GMAC_MAC_FSM_CONTROL_ATEIN(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_FSM_CONTROL_ATEIN_SHIFT)) & GMAC_MAC_FSM_CONTROL_ATEIN_MASK)
#define GMAC_MAC_FSM_CONTROL_PTEIN_MASK          (0x1000U)
#define GMAC_MAC_FSM_CONTROL_PTEIN_SHIFT         (12U)
#define GMAC_MAC_FSM_CONTROL_PTEIN_WIDTH         (1U)
#define GMAC_MAC_FSM_CONTROL_PTEIN(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_FSM_CONTROL_PTEIN_SHIFT)) & GMAC_MAC_FSM_CONTROL_PTEIN_MASK)
#define GMAC_MAC_FSM_CONTROL_TPEIN_MASK          (0x10000U)
#define GMAC_MAC_FSM_CONTROL_TPEIN_SHIFT         (16U)
#define GMAC_MAC_FSM_CONTROL_TPEIN_WIDTH         (1U)
#define GMAC_MAC_FSM_CONTROL_TPEIN(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_FSM_CONTROL_TPEIN_SHIFT)) & GMAC_MAC_FSM_CONTROL_TPEIN_MASK)
#define GMAC_MAC_FSM_CONTROL_RPEIN_MASK          (0x20000U)
#define GMAC_MAC_FSM_CONTROL_RPEIN_SHIFT         (17U)
#define GMAC_MAC_FSM_CONTROL_RPEIN_WIDTH         (1U)
#define GMAC_MAC_FSM_CONTROL_RPEIN(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_FSM_CONTROL_RPEIN_SHIFT)) & GMAC_MAC_FSM_CONTROL_RPEIN_MASK)
#define GMAC_MAC_FSM_CONTROL_APEIN_MASK          (0x80000U)
#define GMAC_MAC_FSM_CONTROL_APEIN_SHIFT         (19U)
#define GMAC_MAC_FSM_CONTROL_APEIN_WIDTH         (1U)
#define GMAC_MAC_FSM_CONTROL_APEIN(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_FSM_CONTROL_APEIN_SHIFT)) & GMAC_MAC_FSM_CONTROL_APEIN_MASK)
#define GMAC_MAC_FSM_CONTROL_PPEIN_MASK          (0x100000U)
#define GMAC_MAC_FSM_CONTROL_PPEIN_SHIFT         (20U)
#define GMAC_MAC_FSM_CONTROL_PPEIN_WIDTH         (1U)
#define GMAC_MAC_FSM_CONTROL_PPEIN(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_FSM_CONTROL_PPEIN_SHIFT)) & GMAC_MAC_FSM_CONTROL_PPEIN_MASK)
#define GMAC_MAC_FSM_CONTROL_TLGRNML_MASK        (0x1000000U)
#define GMAC_MAC_FSM_CONTROL_TLGRNML_SHIFT       (24U)
#define GMAC_MAC_FSM_CONTROL_TLGRNML_WIDTH       (1U)
#define GMAC_MAC_FSM_CONTROL_TLGRNML(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_FSM_CONTROL_TLGRNML_SHIFT)) & GMAC_MAC_FSM_CONTROL_TLGRNML_MASK)
#define GMAC_MAC_FSM_CONTROL_RLGRNML_MASK        (0x2000000U)
#define GMAC_MAC_FSM_CONTROL_RLGRNML_SHIFT       (25U)
#define GMAC_MAC_FSM_CONTROL_RLGRNML_WIDTH       (1U)
#define GMAC_MAC_FSM_CONTROL_RLGRNML(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_FSM_CONTROL_RLGRNML_SHIFT)) & GMAC_MAC_FSM_CONTROL_RLGRNML_MASK)
#define GMAC_MAC_FSM_CONTROL_ALGRNML_MASK        (0x8000000U)
#define GMAC_MAC_FSM_CONTROL_ALGRNML_SHIFT       (27U)
#define GMAC_MAC_FSM_CONTROL_ALGRNML_WIDTH       (1U)
#define GMAC_MAC_FSM_CONTROL_ALGRNML(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_FSM_CONTROL_ALGRNML_SHIFT)) & GMAC_MAC_FSM_CONTROL_ALGRNML_MASK)
#define GMAC_MAC_FSM_CONTROL_PLGRNML_MASK        (0x10000000U)
#define GMAC_MAC_FSM_CONTROL_PLGRNML_SHIFT       (28U)
#define GMAC_MAC_FSM_CONTROL_PLGRNML_WIDTH       (1U)
#define GMAC_MAC_FSM_CONTROL_PLGRNML(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_FSM_CONTROL_PLGRNML_SHIFT)) & GMAC_MAC_FSM_CONTROL_PLGRNML_MASK)
/*! @} */

/*! @name MAC_FSM_ACT_TIMER -  */
/*! @{ */
#define GMAC_MAC_FSM_ACT_TIMER_TMR_MASK          (0x3FFU)
#define GMAC_MAC_FSM_ACT_TIMER_TMR_SHIFT         (0U)
#define GMAC_MAC_FSM_ACT_TIMER_TMR_WIDTH         (10U)
#define GMAC_MAC_FSM_ACT_TIMER_TMR(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_FSM_ACT_TIMER_TMR_SHIFT)) & GMAC_MAC_FSM_ACT_TIMER_TMR_MASK)
#define GMAC_MAC_FSM_ACT_TIMER_NTMRMD_MASK       (0xF0000U)
#define GMAC_MAC_FSM_ACT_TIMER_NTMRMD_SHIFT      (16U)
#define GMAC_MAC_FSM_ACT_TIMER_NTMRMD_WIDTH      (4U)
#define GMAC_MAC_FSM_ACT_TIMER_NTMRMD(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_FSM_ACT_TIMER_NTMRMD_SHIFT)) & GMAC_MAC_FSM_ACT_TIMER_NTMRMD_MASK)
#define GMAC_MAC_FSM_ACT_TIMER_LTMRMD_MASK       (0xF00000U)
#define GMAC_MAC_FSM_ACT_TIMER_LTMRMD_SHIFT      (20U)
#define GMAC_MAC_FSM_ACT_TIMER_LTMRMD_WIDTH      (4U)
#define GMAC_MAC_FSM_ACT_TIMER_LTMRMD(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_FSM_ACT_TIMER_LTMRMD_SHIFT)) & GMAC_MAC_FSM_ACT_TIMER_LTMRMD_MASK)
/*! @} */

/*! @name SCS_REG1 -  */
/*! @{ */
#define GMAC_SCS_REG1_MAC_SCS1_MASK              (0xFFFFFFFFU)
#define GMAC_SCS_REG1_MAC_SCS1_SHIFT             (0U)
#define GMAC_SCS_REG1_MAC_SCS1_WIDTH             (32U)
#define GMAC_SCS_REG1_MAC_SCS1(x)                (((uint32_t)(((uint32_t)(x)) << GMAC_SCS_REG1_MAC_SCS1_SHIFT)) & GMAC_SCS_REG1_MAC_SCS1_MASK)
/*! @} */

/*! @name MAC_MDIO_ADDRESS -  */
/*! @{ */
#define GMAC_MAC_MDIO_ADDRESS_GB_MASK            (0x1U)
#define GMAC_MAC_MDIO_ADDRESS_GB_SHIFT           (0U)
#define GMAC_MAC_MDIO_ADDRESS_GB_WIDTH           (1U)
#define GMAC_MAC_MDIO_ADDRESS_GB(x)              (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_MDIO_ADDRESS_GB_SHIFT)) & GMAC_MAC_MDIO_ADDRESS_GB_MASK)
#define GMAC_MAC_MDIO_ADDRESS_C45E_MASK          (0x2U)
#define GMAC_MAC_MDIO_ADDRESS_C45E_SHIFT         (1U)
#define GMAC_MAC_MDIO_ADDRESS_C45E_WIDTH         (1U)
#define GMAC_MAC_MDIO_ADDRESS_C45E(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_MDIO_ADDRESS_C45E_SHIFT)) & GMAC_MAC_MDIO_ADDRESS_C45E_MASK)
#define GMAC_MAC_MDIO_ADDRESS_GOC_0_MASK         (0x4U)
#define GMAC_MAC_MDIO_ADDRESS_GOC_0_SHIFT        (2U)
#define GMAC_MAC_MDIO_ADDRESS_GOC_0_WIDTH        (1U)
#define GMAC_MAC_MDIO_ADDRESS_GOC_0(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_MDIO_ADDRESS_GOC_0_SHIFT)) & GMAC_MAC_MDIO_ADDRESS_GOC_0_MASK)
#define GMAC_MAC_MDIO_ADDRESS_GOC_1_MASK         (0x8U)
#define GMAC_MAC_MDIO_ADDRESS_GOC_1_SHIFT        (3U)
#define GMAC_MAC_MDIO_ADDRESS_GOC_1_WIDTH        (1U)
#define GMAC_MAC_MDIO_ADDRESS_GOC_1(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_MDIO_ADDRESS_GOC_1_SHIFT)) & GMAC_MAC_MDIO_ADDRESS_GOC_1_MASK)
#define GMAC_MAC_MDIO_ADDRESS_SKAP_MASK          (0x10U)
#define GMAC_MAC_MDIO_ADDRESS_SKAP_SHIFT         (4U)
#define GMAC_MAC_MDIO_ADDRESS_SKAP_WIDTH         (1U)
#define GMAC_MAC_MDIO_ADDRESS_SKAP(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_MDIO_ADDRESS_SKAP_SHIFT)) & GMAC_MAC_MDIO_ADDRESS_SKAP_MASK)
#define GMAC_MAC_MDIO_ADDRESS_CR_MASK            (0xF00U)
#define GMAC_MAC_MDIO_ADDRESS_CR_SHIFT           (8U)
#define GMAC_MAC_MDIO_ADDRESS_CR_WIDTH           (4U)
#define GMAC_MAC_MDIO_ADDRESS_CR(x)              (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_MDIO_ADDRESS_CR_SHIFT)) & GMAC_MAC_MDIO_ADDRESS_CR_MASK)
#define GMAC_MAC_MDIO_ADDRESS_NTC_MASK           (0x7000U)
#define GMAC_MAC_MDIO_ADDRESS_NTC_SHIFT          (12U)
#define GMAC_MAC_MDIO_ADDRESS_NTC_WIDTH          (3U)
#define GMAC_MAC_MDIO_ADDRESS_NTC(x)             (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_MDIO_ADDRESS_NTC_SHIFT)) & GMAC_MAC_MDIO_ADDRESS_NTC_MASK)
#define GMAC_MAC_MDIO_ADDRESS_RDA_MASK           (0x1F0000U)
#define GMAC_MAC_MDIO_ADDRESS_RDA_SHIFT          (16U)
#define GMAC_MAC_MDIO_ADDRESS_RDA_WIDTH          (5U)
#define GMAC_MAC_MDIO_ADDRESS_RDA(x)             (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_MDIO_ADDRESS_RDA_SHIFT)) & GMAC_MAC_MDIO_ADDRESS_RDA_MASK)
#define GMAC_MAC_MDIO_ADDRESS_PA_MASK            (0x3E00000U)
#define GMAC_MAC_MDIO_ADDRESS_PA_SHIFT           (21U)
#define GMAC_MAC_MDIO_ADDRESS_PA_WIDTH           (5U)
#define GMAC_MAC_MDIO_ADDRESS_PA(x)              (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_MDIO_ADDRESS_PA_SHIFT)) & GMAC_MAC_MDIO_ADDRESS_PA_MASK)
#define GMAC_MAC_MDIO_ADDRESS_BTB_MASK           (0x4000000U)
#define GMAC_MAC_MDIO_ADDRESS_BTB_SHIFT          (26U)
#define GMAC_MAC_MDIO_ADDRESS_BTB_WIDTH          (1U)
#define GMAC_MAC_MDIO_ADDRESS_BTB(x)             (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_MDIO_ADDRESS_BTB_SHIFT)) & GMAC_MAC_MDIO_ADDRESS_BTB_MASK)
#define GMAC_MAC_MDIO_ADDRESS_PSE_MASK           (0x8000000U)
#define GMAC_MAC_MDIO_ADDRESS_PSE_SHIFT          (27U)
#define GMAC_MAC_MDIO_ADDRESS_PSE_WIDTH          (1U)
#define GMAC_MAC_MDIO_ADDRESS_PSE(x)             (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_MDIO_ADDRESS_PSE_SHIFT)) & GMAC_MAC_MDIO_ADDRESS_PSE_MASK)
/*! @} */

/*! @name MAC_MDIO_DATA -  */
/*! @{ */
#define GMAC_MAC_MDIO_DATA_GD_MASK               (0xFFFFU)
#define GMAC_MAC_MDIO_DATA_GD_SHIFT              (0U)
#define GMAC_MAC_MDIO_DATA_GD_WIDTH              (16U)
#define GMAC_MAC_MDIO_DATA_GD(x)                 (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_MDIO_DATA_GD_SHIFT)) & GMAC_MAC_MDIO_DATA_GD_MASK)
#define GMAC_MAC_MDIO_DATA_RA_MASK               (0xFFFF0000U)
#define GMAC_MAC_MDIO_DATA_RA_SHIFT              (16U)
#define GMAC_MAC_MDIO_DATA_RA_WIDTH              (16U)
#define GMAC_MAC_MDIO_DATA_RA(x)                 (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_MDIO_DATA_RA_SHIFT)) & GMAC_MAC_MDIO_DATA_RA_MASK)
/*! @} */

/*! @name MAC_ARP_ADDRESS -  */
/*! @{ */
#define GMAC_MAC_ARP_ADDRESS_ARPPA_MASK          (0xFFFFFFFFU)
#define GMAC_MAC_ARP_ADDRESS_ARPPA_SHIFT         (0U)
#define GMAC_MAC_ARP_ADDRESS_ARPPA_WIDTH         (32U)
#define GMAC_MAC_ARP_ADDRESS_ARPPA(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_ARP_ADDRESS_ARPPA_SHIFT)) & GMAC_MAC_ARP_ADDRESS_ARPPA_MASK)
/*! @} */

/*! @name MAC_CSR_SW_CTRL -  */
/*! @{ */
#define GMAC_MAC_CSR_SW_CTRL_RCWE_MASK           (0x1U)
#define GMAC_MAC_CSR_SW_CTRL_RCWE_SHIFT          (0U)
#define GMAC_MAC_CSR_SW_CTRL_RCWE_WIDTH          (1U)
#define GMAC_MAC_CSR_SW_CTRL_RCWE(x)             (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_CSR_SW_CTRL_RCWE_SHIFT)) & GMAC_MAC_CSR_SW_CTRL_RCWE_MASK)
#define GMAC_MAC_CSR_SW_CTRL_SEEN_MASK           (0x100U)
#define GMAC_MAC_CSR_SW_CTRL_SEEN_SHIFT          (8U)
#define GMAC_MAC_CSR_SW_CTRL_SEEN_WIDTH          (1U)
#define GMAC_MAC_CSR_SW_CTRL_SEEN(x)             (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_CSR_SW_CTRL_SEEN_SHIFT)) & GMAC_MAC_CSR_SW_CTRL_SEEN_MASK)
/*! @} */

/*! @name MAC_FPE_CTRL_STS -  */
/*! @{ */
#define GMAC_MAC_FPE_CTRL_STS_EFPE_MASK          (0x1U)
#define GMAC_MAC_FPE_CTRL_STS_EFPE_SHIFT         (0U)
#define GMAC_MAC_FPE_CTRL_STS_EFPE_WIDTH         (1U)
#define GMAC_MAC_FPE_CTRL_STS_EFPE(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_FPE_CTRL_STS_EFPE_SHIFT)) & GMAC_MAC_FPE_CTRL_STS_EFPE_MASK)
#define GMAC_MAC_FPE_CTRL_STS_SVER_MASK          (0x2U)
#define GMAC_MAC_FPE_CTRL_STS_SVER_SHIFT         (1U)
#define GMAC_MAC_FPE_CTRL_STS_SVER_WIDTH         (1U)
#define GMAC_MAC_FPE_CTRL_STS_SVER(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_FPE_CTRL_STS_SVER_SHIFT)) & GMAC_MAC_FPE_CTRL_STS_SVER_MASK)
#define GMAC_MAC_FPE_CTRL_STS_SRSP_MASK          (0x4U)
#define GMAC_MAC_FPE_CTRL_STS_SRSP_SHIFT         (2U)
#define GMAC_MAC_FPE_CTRL_STS_SRSP_WIDTH         (1U)
#define GMAC_MAC_FPE_CTRL_STS_SRSP(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_FPE_CTRL_STS_SRSP_SHIFT)) & GMAC_MAC_FPE_CTRL_STS_SRSP_MASK)
#define GMAC_MAC_FPE_CTRL_STS_S1_SET_0_MASK      (0x8U)
#define GMAC_MAC_FPE_CTRL_STS_S1_SET_0_SHIFT     (3U)
#define GMAC_MAC_FPE_CTRL_STS_S1_SET_0_WIDTH     (1U)
#define GMAC_MAC_FPE_CTRL_STS_S1_SET_0(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_FPE_CTRL_STS_S1_SET_0_SHIFT)) & GMAC_MAC_FPE_CTRL_STS_S1_SET_0_MASK)
#define GMAC_MAC_FPE_CTRL_STS_RVER_MASK          (0x10000U)
#define GMAC_MAC_FPE_CTRL_STS_RVER_SHIFT         (16U)
#define GMAC_MAC_FPE_CTRL_STS_RVER_WIDTH         (1U)
#define GMAC_MAC_FPE_CTRL_STS_RVER(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_FPE_CTRL_STS_RVER_SHIFT)) & GMAC_MAC_FPE_CTRL_STS_RVER_MASK)
#define GMAC_MAC_FPE_CTRL_STS_RRSP_MASK          (0x20000U)
#define GMAC_MAC_FPE_CTRL_STS_RRSP_SHIFT         (17U)
#define GMAC_MAC_FPE_CTRL_STS_RRSP_WIDTH         (1U)
#define GMAC_MAC_FPE_CTRL_STS_RRSP(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_FPE_CTRL_STS_RRSP_SHIFT)) & GMAC_MAC_FPE_CTRL_STS_RRSP_MASK)
#define GMAC_MAC_FPE_CTRL_STS_TVER_MASK          (0x40000U)
#define GMAC_MAC_FPE_CTRL_STS_TVER_SHIFT         (18U)
#define GMAC_MAC_FPE_CTRL_STS_TVER_WIDTH         (1U)
#define GMAC_MAC_FPE_CTRL_STS_TVER(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_FPE_CTRL_STS_TVER_SHIFT)) & GMAC_MAC_FPE_CTRL_STS_TVER_MASK)
#define GMAC_MAC_FPE_CTRL_STS_TRSP_MASK          (0x80000U)
#define GMAC_MAC_FPE_CTRL_STS_TRSP_SHIFT         (19U)
#define GMAC_MAC_FPE_CTRL_STS_TRSP_WIDTH         (1U)
#define GMAC_MAC_FPE_CTRL_STS_TRSP(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_FPE_CTRL_STS_TRSP_SHIFT)) & GMAC_MAC_FPE_CTRL_STS_TRSP_MASK)
/*! @} */

/*! @name MAC_EXT_CFG1 -  */
/*! @{ */
#define GMAC_MAC_EXT_CFG1_SPLOFST_MASK           (0x7FU)
#define GMAC_MAC_EXT_CFG1_SPLOFST_SHIFT          (0U)
#define GMAC_MAC_EXT_CFG1_SPLOFST_WIDTH          (7U)
#define GMAC_MAC_EXT_CFG1_SPLOFST(x)             (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_EXT_CFG1_SPLOFST_SHIFT)) & GMAC_MAC_EXT_CFG1_SPLOFST_MASK)
#define GMAC_MAC_EXT_CFG1_SPLM_MASK              (0x300U)
#define GMAC_MAC_EXT_CFG1_SPLM_SHIFT             (8U)
#define GMAC_MAC_EXT_CFG1_SPLM_WIDTH             (2U)
#define GMAC_MAC_EXT_CFG1_SPLM(x)                (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_EXT_CFG1_SPLM_SHIFT)) & GMAC_MAC_EXT_CFG1_SPLM_MASK)
/*! @} */

/*! @name MAC_PRESN_TIME_NS -  */
/*! @{ */
#define GMAC_MAC_PRESN_TIME_NS_MPTN_MASK         (0xFFFFFFFFU)
#define GMAC_MAC_PRESN_TIME_NS_MPTN_SHIFT        (0U)
#define GMAC_MAC_PRESN_TIME_NS_MPTN_WIDTH        (32U)
#define GMAC_MAC_PRESN_TIME_NS_MPTN(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PRESN_TIME_NS_MPTN_SHIFT)) & GMAC_MAC_PRESN_TIME_NS_MPTN_MASK)
/*! @} */

/*! @name MAC_PRESN_TIME_UPDT -  */
/*! @{ */
#define GMAC_MAC_PRESN_TIME_UPDT_MPTU_MASK       (0xFFFFFFFFU)
#define GMAC_MAC_PRESN_TIME_UPDT_MPTU_SHIFT      (0U)
#define GMAC_MAC_PRESN_TIME_UPDT_MPTU_WIDTH      (32U)
#define GMAC_MAC_PRESN_TIME_UPDT_MPTU(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PRESN_TIME_UPDT_MPTU_SHIFT)) & GMAC_MAC_PRESN_TIME_UPDT_MPTU_MASK)
/*! @} */

/*! @name MAC_ADDRESS0_HIGH -  */
/*! @{ */
#define GMAC_MAC_ADDRESS0_HIGH_ADDRHI_MASK       (0xFFFFU)
#define GMAC_MAC_ADDRESS0_HIGH_ADDRHI_SHIFT      (0U)
#define GMAC_MAC_ADDRESS0_HIGH_ADDRHI_WIDTH      (16U)
#define GMAC_MAC_ADDRESS0_HIGH_ADDRHI(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_ADDRESS0_HIGH_ADDRHI_SHIFT)) & GMAC_MAC_ADDRESS0_HIGH_ADDRHI_MASK)
#define GMAC_MAC_ADDRESS0_HIGH_DCS_MASK          (0x1F0000U)
#define GMAC_MAC_ADDRESS0_HIGH_DCS_SHIFT         (16U)
#define GMAC_MAC_ADDRESS0_HIGH_DCS_WIDTH         (5U)
#define GMAC_MAC_ADDRESS0_HIGH_DCS(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_ADDRESS0_HIGH_DCS_SHIFT)) & GMAC_MAC_ADDRESS0_HIGH_DCS_MASK)
#define GMAC_MAC_ADDRESS0_HIGH_AE_MASK           (0x80000000U)
#define GMAC_MAC_ADDRESS0_HIGH_AE_SHIFT          (31U)
#define GMAC_MAC_ADDRESS0_HIGH_AE_WIDTH          (1U)
#define GMAC_MAC_ADDRESS0_HIGH_AE(x)             (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_ADDRESS0_HIGH_AE_SHIFT)) & GMAC_MAC_ADDRESS0_HIGH_AE_MASK)
/*! @} */

/*! @name MAC_ADDRESS0_LOW -  */
/*! @{ */
#define GMAC_MAC_ADDRESS0_LOW_ADDRLO_MASK        (0xFFFFFFFFU)
#define GMAC_MAC_ADDRESS0_LOW_ADDRLO_SHIFT       (0U)
#define GMAC_MAC_ADDRESS0_LOW_ADDRLO_WIDTH       (32U)
#define GMAC_MAC_ADDRESS0_LOW_ADDRLO(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_ADDRESS0_LOW_ADDRLO_SHIFT)) & GMAC_MAC_ADDRESS0_LOW_ADDRLO_MASK)
/*! @} */

/*! @name MAC_ADDRESS1_HIGH -  */
/*! @{ */
#define GMAC_MAC_ADDRESS1_HIGH_ADDRHI_MASK       (0xFFFFU)
#define GMAC_MAC_ADDRESS1_HIGH_ADDRHI_SHIFT      (0U)
#define GMAC_MAC_ADDRESS1_HIGH_ADDRHI_WIDTH      (16U)
#define GMAC_MAC_ADDRESS1_HIGH_ADDRHI(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_ADDRESS1_HIGH_ADDRHI_SHIFT)) & GMAC_MAC_ADDRESS1_HIGH_ADDRHI_MASK)
#define GMAC_MAC_ADDRESS1_HIGH_DCS_MASK          (0x1F0000U)
#define GMAC_MAC_ADDRESS1_HIGH_DCS_SHIFT         (16U)
#define GMAC_MAC_ADDRESS1_HIGH_DCS_WIDTH         (5U)
#define GMAC_MAC_ADDRESS1_HIGH_DCS(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_ADDRESS1_HIGH_DCS_SHIFT)) & GMAC_MAC_ADDRESS1_HIGH_DCS_MASK)
#define GMAC_MAC_ADDRESS1_HIGH_MBC_MASK          (0x3F000000U)
#define GMAC_MAC_ADDRESS1_HIGH_MBC_SHIFT         (24U)
#define GMAC_MAC_ADDRESS1_HIGH_MBC_WIDTH         (6U)
#define GMAC_MAC_ADDRESS1_HIGH_MBC(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_ADDRESS1_HIGH_MBC_SHIFT)) & GMAC_MAC_ADDRESS1_HIGH_MBC_MASK)
#define GMAC_MAC_ADDRESS1_HIGH_SA_MASK           (0x40000000U)
#define GMAC_MAC_ADDRESS1_HIGH_SA_SHIFT          (30U)
#define GMAC_MAC_ADDRESS1_HIGH_SA_WIDTH          (1U)
#define GMAC_MAC_ADDRESS1_HIGH_SA(x)             (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_ADDRESS1_HIGH_SA_SHIFT)) & GMAC_MAC_ADDRESS1_HIGH_SA_MASK)
#define GMAC_MAC_ADDRESS1_HIGH_AE_MASK           (0x80000000U)
#define GMAC_MAC_ADDRESS1_HIGH_AE_SHIFT          (31U)
#define GMAC_MAC_ADDRESS1_HIGH_AE_WIDTH          (1U)
#define GMAC_MAC_ADDRESS1_HIGH_AE(x)             (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_ADDRESS1_HIGH_AE_SHIFT)) & GMAC_MAC_ADDRESS1_HIGH_AE_MASK)
/*! @} */

/*! @name MAC_ADDRESS1_LOW -  */
/*! @{ */
#define GMAC_MAC_ADDRESS1_LOW_ADDRLO_MASK        (0xFFFFFFFFU)
#define GMAC_MAC_ADDRESS1_LOW_ADDRLO_SHIFT       (0U)
#define GMAC_MAC_ADDRESS1_LOW_ADDRLO_WIDTH       (32U)
#define GMAC_MAC_ADDRESS1_LOW_ADDRLO(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_ADDRESS1_LOW_ADDRLO_SHIFT)) & GMAC_MAC_ADDRESS1_LOW_ADDRLO_MASK)
/*! @} */

/*! @name MMC_CONTROL -  */
/*! @{ */
#define GMAC_MMC_CONTROL_CNTRST_MASK             (0x1U)
#define GMAC_MMC_CONTROL_CNTRST_SHIFT            (0U)
#define GMAC_MMC_CONTROL_CNTRST_WIDTH            (1U)
#define GMAC_MMC_CONTROL_CNTRST(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_CONTROL_CNTRST_SHIFT)) & GMAC_MMC_CONTROL_CNTRST_MASK)
#define GMAC_MMC_CONTROL_CNTSTOPRO_MASK          (0x2U)
#define GMAC_MMC_CONTROL_CNTSTOPRO_SHIFT         (1U)
#define GMAC_MMC_CONTROL_CNTSTOPRO_WIDTH         (1U)
#define GMAC_MMC_CONTROL_CNTSTOPRO(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_CONTROL_CNTSTOPRO_SHIFT)) & GMAC_MMC_CONTROL_CNTSTOPRO_MASK)
#define GMAC_MMC_CONTROL_RSTONRD_MASK            (0x4U)
#define GMAC_MMC_CONTROL_RSTONRD_SHIFT           (2U)
#define GMAC_MMC_CONTROL_RSTONRD_WIDTH           (1U)
#define GMAC_MMC_CONTROL_RSTONRD(x)              (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_CONTROL_RSTONRD_SHIFT)) & GMAC_MMC_CONTROL_RSTONRD_MASK)
#define GMAC_MMC_CONTROL_CNTFREEZ_MASK           (0x8U)
#define GMAC_MMC_CONTROL_CNTFREEZ_SHIFT          (3U)
#define GMAC_MMC_CONTROL_CNTFREEZ_WIDTH          (1U)
#define GMAC_MMC_CONTROL_CNTFREEZ(x)             (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_CONTROL_CNTFREEZ_SHIFT)) & GMAC_MMC_CONTROL_CNTFREEZ_MASK)
#define GMAC_MMC_CONTROL_CNTPRST_MASK            (0x10U)
#define GMAC_MMC_CONTROL_CNTPRST_SHIFT           (4U)
#define GMAC_MMC_CONTROL_CNTPRST_WIDTH           (1U)
#define GMAC_MMC_CONTROL_CNTPRST(x)              (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_CONTROL_CNTPRST_SHIFT)) & GMAC_MMC_CONTROL_CNTPRST_MASK)
#define GMAC_MMC_CONTROL_CNTPRSTLVL_MASK         (0x20U)
#define GMAC_MMC_CONTROL_CNTPRSTLVL_SHIFT        (5U)
#define GMAC_MMC_CONTROL_CNTPRSTLVL_WIDTH        (1U)
#define GMAC_MMC_CONTROL_CNTPRSTLVL(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_CONTROL_CNTPRSTLVL_SHIFT)) & GMAC_MMC_CONTROL_CNTPRSTLVL_MASK)
#define GMAC_MMC_CONTROL_UCDBC_MASK              (0x100U)
#define GMAC_MMC_CONTROL_UCDBC_SHIFT             (8U)
#define GMAC_MMC_CONTROL_UCDBC_WIDTH             (1U)
#define GMAC_MMC_CONTROL_UCDBC(x)                (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_CONTROL_UCDBC_SHIFT)) & GMAC_MMC_CONTROL_UCDBC_MASK)
/*! @} */

/*! @name MMC_RX_INTERRUPT -  */
/*! @{ */
#define GMAC_MMC_RX_INTERRUPT_RXGBPKTIS_MASK     (0x1U)
#define GMAC_MMC_RX_INTERRUPT_RXGBPKTIS_SHIFT    (0U)
#define GMAC_MMC_RX_INTERRUPT_RXGBPKTIS_WIDTH    (1U)
#define GMAC_MMC_RX_INTERRUPT_RXGBPKTIS(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_RX_INTERRUPT_RXGBPKTIS_SHIFT)) & GMAC_MMC_RX_INTERRUPT_RXGBPKTIS_MASK)
#define GMAC_MMC_RX_INTERRUPT_RXGBOCTIS_MASK     (0x2U)
#define GMAC_MMC_RX_INTERRUPT_RXGBOCTIS_SHIFT    (1U)
#define GMAC_MMC_RX_INTERRUPT_RXGBOCTIS_WIDTH    (1U)
#define GMAC_MMC_RX_INTERRUPT_RXGBOCTIS(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_RX_INTERRUPT_RXGBOCTIS_SHIFT)) & GMAC_MMC_RX_INTERRUPT_RXGBOCTIS_MASK)
#define GMAC_MMC_RX_INTERRUPT_RXGOCTIS_MASK      (0x4U)
#define GMAC_MMC_RX_INTERRUPT_RXGOCTIS_SHIFT     (2U)
#define GMAC_MMC_RX_INTERRUPT_RXGOCTIS_WIDTH     (1U)
#define GMAC_MMC_RX_INTERRUPT_RXGOCTIS(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_RX_INTERRUPT_RXGOCTIS_SHIFT)) & GMAC_MMC_RX_INTERRUPT_RXGOCTIS_MASK)
#define GMAC_MMC_RX_INTERRUPT_RXBCGPIS_MASK      (0x8U)
#define GMAC_MMC_RX_INTERRUPT_RXBCGPIS_SHIFT     (3U)
#define GMAC_MMC_RX_INTERRUPT_RXBCGPIS_WIDTH     (1U)
#define GMAC_MMC_RX_INTERRUPT_RXBCGPIS(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_RX_INTERRUPT_RXBCGPIS_SHIFT)) & GMAC_MMC_RX_INTERRUPT_RXBCGPIS_MASK)
#define GMAC_MMC_RX_INTERRUPT_RXMCGPIS_MASK      (0x10U)
#define GMAC_MMC_RX_INTERRUPT_RXMCGPIS_SHIFT     (4U)
#define GMAC_MMC_RX_INTERRUPT_RXMCGPIS_WIDTH     (1U)
#define GMAC_MMC_RX_INTERRUPT_RXMCGPIS(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_RX_INTERRUPT_RXMCGPIS_SHIFT)) & GMAC_MMC_RX_INTERRUPT_RXMCGPIS_MASK)
#define GMAC_MMC_RX_INTERRUPT_RXCRCERPIS_MASK    (0x20U)
#define GMAC_MMC_RX_INTERRUPT_RXCRCERPIS_SHIFT   (5U)
#define GMAC_MMC_RX_INTERRUPT_RXCRCERPIS_WIDTH   (1U)
#define GMAC_MMC_RX_INTERRUPT_RXCRCERPIS(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_RX_INTERRUPT_RXCRCERPIS_SHIFT)) & GMAC_MMC_RX_INTERRUPT_RXCRCERPIS_MASK)
#define GMAC_MMC_RX_INTERRUPT_RXALGNERPIS_MASK   (0x40U)
#define GMAC_MMC_RX_INTERRUPT_RXALGNERPIS_SHIFT  (6U)
#define GMAC_MMC_RX_INTERRUPT_RXALGNERPIS_WIDTH  (1U)
#define GMAC_MMC_RX_INTERRUPT_RXALGNERPIS(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_RX_INTERRUPT_RXALGNERPIS_SHIFT)) & GMAC_MMC_RX_INTERRUPT_RXALGNERPIS_MASK)
#define GMAC_MMC_RX_INTERRUPT_RXRUNTPIS_MASK     (0x80U)
#define GMAC_MMC_RX_INTERRUPT_RXRUNTPIS_SHIFT    (7U)
#define GMAC_MMC_RX_INTERRUPT_RXRUNTPIS_WIDTH    (1U)
#define GMAC_MMC_RX_INTERRUPT_RXRUNTPIS(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_RX_INTERRUPT_RXRUNTPIS_SHIFT)) & GMAC_MMC_RX_INTERRUPT_RXRUNTPIS_MASK)
#define GMAC_MMC_RX_INTERRUPT_RXJABERPIS_MASK    (0x100U)
#define GMAC_MMC_RX_INTERRUPT_RXJABERPIS_SHIFT   (8U)
#define GMAC_MMC_RX_INTERRUPT_RXJABERPIS_WIDTH   (1U)
#define GMAC_MMC_RX_INTERRUPT_RXJABERPIS(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_RX_INTERRUPT_RXJABERPIS_SHIFT)) & GMAC_MMC_RX_INTERRUPT_RXJABERPIS_MASK)
#define GMAC_MMC_RX_INTERRUPT_RXUSIZEGPIS_MASK   (0x200U)
#define GMAC_MMC_RX_INTERRUPT_RXUSIZEGPIS_SHIFT  (9U)
#define GMAC_MMC_RX_INTERRUPT_RXUSIZEGPIS_WIDTH  (1U)
#define GMAC_MMC_RX_INTERRUPT_RXUSIZEGPIS(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_RX_INTERRUPT_RXUSIZEGPIS_SHIFT)) & GMAC_MMC_RX_INTERRUPT_RXUSIZEGPIS_MASK)
#define GMAC_MMC_RX_INTERRUPT_RXOSIZEGPIS_MASK   (0x400U)
#define GMAC_MMC_RX_INTERRUPT_RXOSIZEGPIS_SHIFT  (10U)
#define GMAC_MMC_RX_INTERRUPT_RXOSIZEGPIS_WIDTH  (1U)
#define GMAC_MMC_RX_INTERRUPT_RXOSIZEGPIS(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_RX_INTERRUPT_RXOSIZEGPIS_SHIFT)) & GMAC_MMC_RX_INTERRUPT_RXOSIZEGPIS_MASK)
#define GMAC_MMC_RX_INTERRUPT_RX64OCTGBPIS_MASK  (0x800U)
#define GMAC_MMC_RX_INTERRUPT_RX64OCTGBPIS_SHIFT (11U)
#define GMAC_MMC_RX_INTERRUPT_RX64OCTGBPIS_WIDTH (1U)
#define GMAC_MMC_RX_INTERRUPT_RX64OCTGBPIS(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_RX_INTERRUPT_RX64OCTGBPIS_SHIFT)) & GMAC_MMC_RX_INTERRUPT_RX64OCTGBPIS_MASK)
#define GMAC_MMC_RX_INTERRUPT_RX65T127OCTGBPIS_MASK (0x1000U)
#define GMAC_MMC_RX_INTERRUPT_RX65T127OCTGBPIS_SHIFT (12U)
#define GMAC_MMC_RX_INTERRUPT_RX65T127OCTGBPIS_WIDTH (1U)
#define GMAC_MMC_RX_INTERRUPT_RX65T127OCTGBPIS(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_RX_INTERRUPT_RX65T127OCTGBPIS_SHIFT)) & GMAC_MMC_RX_INTERRUPT_RX65T127OCTGBPIS_MASK)
#define GMAC_MMC_RX_INTERRUPT_RX128T255OCTGBPIS_MASK (0x2000U)
#define GMAC_MMC_RX_INTERRUPT_RX128T255OCTGBPIS_SHIFT (13U)
#define GMAC_MMC_RX_INTERRUPT_RX128T255OCTGBPIS_WIDTH (1U)
#define GMAC_MMC_RX_INTERRUPT_RX128T255OCTGBPIS(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_RX_INTERRUPT_RX128T255OCTGBPIS_SHIFT)) & GMAC_MMC_RX_INTERRUPT_RX128T255OCTGBPIS_MASK)
#define GMAC_MMC_RX_INTERRUPT_RX256T511OCTGBPIS_MASK (0x4000U)
#define GMAC_MMC_RX_INTERRUPT_RX256T511OCTGBPIS_SHIFT (14U)
#define GMAC_MMC_RX_INTERRUPT_RX256T511OCTGBPIS_WIDTH (1U)
#define GMAC_MMC_RX_INTERRUPT_RX256T511OCTGBPIS(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_RX_INTERRUPT_RX256T511OCTGBPIS_SHIFT)) & GMAC_MMC_RX_INTERRUPT_RX256T511OCTGBPIS_MASK)
#define GMAC_MMC_RX_INTERRUPT_RX512T1023OCTGBPIS_MASK (0x8000U)
#define GMAC_MMC_RX_INTERRUPT_RX512T1023OCTGBPIS_SHIFT (15U)
#define GMAC_MMC_RX_INTERRUPT_RX512T1023OCTGBPIS_WIDTH (1U)
#define GMAC_MMC_RX_INTERRUPT_RX512T1023OCTGBPIS(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_RX_INTERRUPT_RX512T1023OCTGBPIS_SHIFT)) & GMAC_MMC_RX_INTERRUPT_RX512T1023OCTGBPIS_MASK)
#define GMAC_MMC_RX_INTERRUPT_RX1024TMAXOCTGBPIS_MASK (0x10000U)
#define GMAC_MMC_RX_INTERRUPT_RX1024TMAXOCTGBPIS_SHIFT (16U)
#define GMAC_MMC_RX_INTERRUPT_RX1024TMAXOCTGBPIS_WIDTH (1U)
#define GMAC_MMC_RX_INTERRUPT_RX1024TMAXOCTGBPIS(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_RX_INTERRUPT_RX1024TMAXOCTGBPIS_SHIFT)) & GMAC_MMC_RX_INTERRUPT_RX1024TMAXOCTGBPIS_MASK)
#define GMAC_MMC_RX_INTERRUPT_RXUCGPIS_MASK      (0x20000U)
#define GMAC_MMC_RX_INTERRUPT_RXUCGPIS_SHIFT     (17U)
#define GMAC_MMC_RX_INTERRUPT_RXUCGPIS_WIDTH     (1U)
#define GMAC_MMC_RX_INTERRUPT_RXUCGPIS(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_RX_INTERRUPT_RXUCGPIS_SHIFT)) & GMAC_MMC_RX_INTERRUPT_RXUCGPIS_MASK)
#define GMAC_MMC_RX_INTERRUPT_RXLENERPIS_MASK    (0x40000U)
#define GMAC_MMC_RX_INTERRUPT_RXLENERPIS_SHIFT   (18U)
#define GMAC_MMC_RX_INTERRUPT_RXLENERPIS_WIDTH   (1U)
#define GMAC_MMC_RX_INTERRUPT_RXLENERPIS(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_RX_INTERRUPT_RXLENERPIS_SHIFT)) & GMAC_MMC_RX_INTERRUPT_RXLENERPIS_MASK)
#define GMAC_MMC_RX_INTERRUPT_RXORANGEPIS_MASK   (0x80000U)
#define GMAC_MMC_RX_INTERRUPT_RXORANGEPIS_SHIFT  (19U)
#define GMAC_MMC_RX_INTERRUPT_RXORANGEPIS_WIDTH  (1U)
#define GMAC_MMC_RX_INTERRUPT_RXORANGEPIS(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_RX_INTERRUPT_RXORANGEPIS_SHIFT)) & GMAC_MMC_RX_INTERRUPT_RXORANGEPIS_MASK)
#define GMAC_MMC_RX_INTERRUPT_RXPAUSPIS_MASK     (0x100000U)
#define GMAC_MMC_RX_INTERRUPT_RXPAUSPIS_SHIFT    (20U)
#define GMAC_MMC_RX_INTERRUPT_RXPAUSPIS_WIDTH    (1U)
#define GMAC_MMC_RX_INTERRUPT_RXPAUSPIS(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_RX_INTERRUPT_RXPAUSPIS_SHIFT)) & GMAC_MMC_RX_INTERRUPT_RXPAUSPIS_MASK)
#define GMAC_MMC_RX_INTERRUPT_RXFOVPIS_MASK      (0x200000U)
#define GMAC_MMC_RX_INTERRUPT_RXFOVPIS_SHIFT     (21U)
#define GMAC_MMC_RX_INTERRUPT_RXFOVPIS_WIDTH     (1U)
#define GMAC_MMC_RX_INTERRUPT_RXFOVPIS(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_RX_INTERRUPT_RXFOVPIS_SHIFT)) & GMAC_MMC_RX_INTERRUPT_RXFOVPIS_MASK)
#define GMAC_MMC_RX_INTERRUPT_RXVLANGBPIS_MASK   (0x400000U)
#define GMAC_MMC_RX_INTERRUPT_RXVLANGBPIS_SHIFT  (22U)
#define GMAC_MMC_RX_INTERRUPT_RXVLANGBPIS_WIDTH  (1U)
#define GMAC_MMC_RX_INTERRUPT_RXVLANGBPIS(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_RX_INTERRUPT_RXVLANGBPIS_SHIFT)) & GMAC_MMC_RX_INTERRUPT_RXVLANGBPIS_MASK)
#define GMAC_MMC_RX_INTERRUPT_RXWDOGPIS_MASK     (0x800000U)
#define GMAC_MMC_RX_INTERRUPT_RXWDOGPIS_SHIFT    (23U)
#define GMAC_MMC_RX_INTERRUPT_RXWDOGPIS_WIDTH    (1U)
#define GMAC_MMC_RX_INTERRUPT_RXWDOGPIS(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_RX_INTERRUPT_RXWDOGPIS_SHIFT)) & GMAC_MMC_RX_INTERRUPT_RXWDOGPIS_MASK)
#define GMAC_MMC_RX_INTERRUPT_RXRCVERRPIS_MASK   (0x1000000U)
#define GMAC_MMC_RX_INTERRUPT_RXRCVERRPIS_SHIFT  (24U)
#define GMAC_MMC_RX_INTERRUPT_RXRCVERRPIS_WIDTH  (1U)
#define GMAC_MMC_RX_INTERRUPT_RXRCVERRPIS(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_RX_INTERRUPT_RXRCVERRPIS_SHIFT)) & GMAC_MMC_RX_INTERRUPT_RXRCVERRPIS_MASK)
#define GMAC_MMC_RX_INTERRUPT_RXCTRLPIS_MASK     (0x2000000U)
#define GMAC_MMC_RX_INTERRUPT_RXCTRLPIS_SHIFT    (25U)
#define GMAC_MMC_RX_INTERRUPT_RXCTRLPIS_WIDTH    (1U)
#define GMAC_MMC_RX_INTERRUPT_RXCTRLPIS(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_RX_INTERRUPT_RXCTRLPIS_SHIFT)) & GMAC_MMC_RX_INTERRUPT_RXCTRLPIS_MASK)
/*! @} */

/*! @name MMC_TX_INTERRUPT -  */
/*! @{ */
#define GMAC_MMC_TX_INTERRUPT_TXGBOCTIS_MASK     (0x1U)
#define GMAC_MMC_TX_INTERRUPT_TXGBOCTIS_SHIFT    (0U)
#define GMAC_MMC_TX_INTERRUPT_TXGBOCTIS_WIDTH    (1U)
#define GMAC_MMC_TX_INTERRUPT_TXGBOCTIS(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_TX_INTERRUPT_TXGBOCTIS_SHIFT)) & GMAC_MMC_TX_INTERRUPT_TXGBOCTIS_MASK)
#define GMAC_MMC_TX_INTERRUPT_TXGBPKTIS_MASK     (0x2U)
#define GMAC_MMC_TX_INTERRUPT_TXGBPKTIS_SHIFT    (1U)
#define GMAC_MMC_TX_INTERRUPT_TXGBPKTIS_WIDTH    (1U)
#define GMAC_MMC_TX_INTERRUPT_TXGBPKTIS(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_TX_INTERRUPT_TXGBPKTIS_SHIFT)) & GMAC_MMC_TX_INTERRUPT_TXGBPKTIS_MASK)
#define GMAC_MMC_TX_INTERRUPT_TXBCGPIS_MASK      (0x4U)
#define GMAC_MMC_TX_INTERRUPT_TXBCGPIS_SHIFT     (2U)
#define GMAC_MMC_TX_INTERRUPT_TXBCGPIS_WIDTH     (1U)
#define GMAC_MMC_TX_INTERRUPT_TXBCGPIS(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_TX_INTERRUPT_TXBCGPIS_SHIFT)) & GMAC_MMC_TX_INTERRUPT_TXBCGPIS_MASK)
#define GMAC_MMC_TX_INTERRUPT_TXMCGPIS_MASK      (0x8U)
#define GMAC_MMC_TX_INTERRUPT_TXMCGPIS_SHIFT     (3U)
#define GMAC_MMC_TX_INTERRUPT_TXMCGPIS_WIDTH     (1U)
#define GMAC_MMC_TX_INTERRUPT_TXMCGPIS(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_TX_INTERRUPT_TXMCGPIS_SHIFT)) & GMAC_MMC_TX_INTERRUPT_TXMCGPIS_MASK)
#define GMAC_MMC_TX_INTERRUPT_TX64OCTGBPIS_MASK  (0x10U)
#define GMAC_MMC_TX_INTERRUPT_TX64OCTGBPIS_SHIFT (4U)
#define GMAC_MMC_TX_INTERRUPT_TX64OCTGBPIS_WIDTH (1U)
#define GMAC_MMC_TX_INTERRUPT_TX64OCTGBPIS(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_TX_INTERRUPT_TX64OCTGBPIS_SHIFT)) & GMAC_MMC_TX_INTERRUPT_TX64OCTGBPIS_MASK)
#define GMAC_MMC_TX_INTERRUPT_TX65T127OCTGBPIS_MASK (0x20U)
#define GMAC_MMC_TX_INTERRUPT_TX65T127OCTGBPIS_SHIFT (5U)
#define GMAC_MMC_TX_INTERRUPT_TX65T127OCTGBPIS_WIDTH (1U)
#define GMAC_MMC_TX_INTERRUPT_TX65T127OCTGBPIS(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_TX_INTERRUPT_TX65T127OCTGBPIS_SHIFT)) & GMAC_MMC_TX_INTERRUPT_TX65T127OCTGBPIS_MASK)
#define GMAC_MMC_TX_INTERRUPT_TX128T255OCTGBPIS_MASK (0x40U)
#define GMAC_MMC_TX_INTERRUPT_TX128T255OCTGBPIS_SHIFT (6U)
#define GMAC_MMC_TX_INTERRUPT_TX128T255OCTGBPIS_WIDTH (1U)
#define GMAC_MMC_TX_INTERRUPT_TX128T255OCTGBPIS(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_TX_INTERRUPT_TX128T255OCTGBPIS_SHIFT)) & GMAC_MMC_TX_INTERRUPT_TX128T255OCTGBPIS_MASK)
#define GMAC_MMC_TX_INTERRUPT_TX256T511OCTGBPIS_MASK (0x80U)
#define GMAC_MMC_TX_INTERRUPT_TX256T511OCTGBPIS_SHIFT (7U)
#define GMAC_MMC_TX_INTERRUPT_TX256T511OCTGBPIS_WIDTH (1U)
#define GMAC_MMC_TX_INTERRUPT_TX256T511OCTGBPIS(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_TX_INTERRUPT_TX256T511OCTGBPIS_SHIFT)) & GMAC_MMC_TX_INTERRUPT_TX256T511OCTGBPIS_MASK)
#define GMAC_MMC_TX_INTERRUPT_TX512T1023OCTGBPIS_MASK (0x100U)
#define GMAC_MMC_TX_INTERRUPT_TX512T1023OCTGBPIS_SHIFT (8U)
#define GMAC_MMC_TX_INTERRUPT_TX512T1023OCTGBPIS_WIDTH (1U)
#define GMAC_MMC_TX_INTERRUPT_TX512T1023OCTGBPIS(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_TX_INTERRUPT_TX512T1023OCTGBPIS_SHIFT)) & GMAC_MMC_TX_INTERRUPT_TX512T1023OCTGBPIS_MASK)
#define GMAC_MMC_TX_INTERRUPT_TX1024TMAXOCTGBPIS_MASK (0x200U)
#define GMAC_MMC_TX_INTERRUPT_TX1024TMAXOCTGBPIS_SHIFT (9U)
#define GMAC_MMC_TX_INTERRUPT_TX1024TMAXOCTGBPIS_WIDTH (1U)
#define GMAC_MMC_TX_INTERRUPT_TX1024TMAXOCTGBPIS(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_TX_INTERRUPT_TX1024TMAXOCTGBPIS_SHIFT)) & GMAC_MMC_TX_INTERRUPT_TX1024TMAXOCTGBPIS_MASK)
#define GMAC_MMC_TX_INTERRUPT_TXUCGBPIS_MASK     (0x400U)
#define GMAC_MMC_TX_INTERRUPT_TXUCGBPIS_SHIFT    (10U)
#define GMAC_MMC_TX_INTERRUPT_TXUCGBPIS_WIDTH    (1U)
#define GMAC_MMC_TX_INTERRUPT_TXUCGBPIS(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_TX_INTERRUPT_TXUCGBPIS_SHIFT)) & GMAC_MMC_TX_INTERRUPT_TXUCGBPIS_MASK)
#define GMAC_MMC_TX_INTERRUPT_TXMCGBPIS_MASK     (0x800U)
#define GMAC_MMC_TX_INTERRUPT_TXMCGBPIS_SHIFT    (11U)
#define GMAC_MMC_TX_INTERRUPT_TXMCGBPIS_WIDTH    (1U)
#define GMAC_MMC_TX_INTERRUPT_TXMCGBPIS(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_TX_INTERRUPT_TXMCGBPIS_SHIFT)) & GMAC_MMC_TX_INTERRUPT_TXMCGBPIS_MASK)
#define GMAC_MMC_TX_INTERRUPT_TXBCGBPIS_MASK     (0x1000U)
#define GMAC_MMC_TX_INTERRUPT_TXBCGBPIS_SHIFT    (12U)
#define GMAC_MMC_TX_INTERRUPT_TXBCGBPIS_WIDTH    (1U)
#define GMAC_MMC_TX_INTERRUPT_TXBCGBPIS(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_TX_INTERRUPT_TXBCGBPIS_SHIFT)) & GMAC_MMC_TX_INTERRUPT_TXBCGBPIS_MASK)
#define GMAC_MMC_TX_INTERRUPT_TXUFLOWERPIS_MASK  (0x2000U)
#define GMAC_MMC_TX_INTERRUPT_TXUFLOWERPIS_SHIFT (13U)
#define GMAC_MMC_TX_INTERRUPT_TXUFLOWERPIS_WIDTH (1U)
#define GMAC_MMC_TX_INTERRUPT_TXUFLOWERPIS(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_TX_INTERRUPT_TXUFLOWERPIS_SHIFT)) & GMAC_MMC_TX_INTERRUPT_TXUFLOWERPIS_MASK)
#define GMAC_MMC_TX_INTERRUPT_TXSCOLGPIS_MASK    (0x4000U)
#define GMAC_MMC_TX_INTERRUPT_TXSCOLGPIS_SHIFT   (14U)
#define GMAC_MMC_TX_INTERRUPT_TXSCOLGPIS_WIDTH   (1U)
#define GMAC_MMC_TX_INTERRUPT_TXSCOLGPIS(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_TX_INTERRUPT_TXSCOLGPIS_SHIFT)) & GMAC_MMC_TX_INTERRUPT_TXSCOLGPIS_MASK)
#define GMAC_MMC_TX_INTERRUPT_TXMCOLGPIS_MASK    (0x8000U)
#define GMAC_MMC_TX_INTERRUPT_TXMCOLGPIS_SHIFT   (15U)
#define GMAC_MMC_TX_INTERRUPT_TXMCOLGPIS_WIDTH   (1U)
#define GMAC_MMC_TX_INTERRUPT_TXMCOLGPIS(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_TX_INTERRUPT_TXMCOLGPIS_SHIFT)) & GMAC_MMC_TX_INTERRUPT_TXMCOLGPIS_MASK)
#define GMAC_MMC_TX_INTERRUPT_TXDEFPIS_MASK      (0x10000U)
#define GMAC_MMC_TX_INTERRUPT_TXDEFPIS_SHIFT     (16U)
#define GMAC_MMC_TX_INTERRUPT_TXDEFPIS_WIDTH     (1U)
#define GMAC_MMC_TX_INTERRUPT_TXDEFPIS(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_TX_INTERRUPT_TXDEFPIS_SHIFT)) & GMAC_MMC_TX_INTERRUPT_TXDEFPIS_MASK)
#define GMAC_MMC_TX_INTERRUPT_TXLATCOLPIS_MASK   (0x20000U)
#define GMAC_MMC_TX_INTERRUPT_TXLATCOLPIS_SHIFT  (17U)
#define GMAC_MMC_TX_INTERRUPT_TXLATCOLPIS_WIDTH  (1U)
#define GMAC_MMC_TX_INTERRUPT_TXLATCOLPIS(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_TX_INTERRUPT_TXLATCOLPIS_SHIFT)) & GMAC_MMC_TX_INTERRUPT_TXLATCOLPIS_MASK)
#define GMAC_MMC_TX_INTERRUPT_TXEXCOLPIS_MASK    (0x40000U)
#define GMAC_MMC_TX_INTERRUPT_TXEXCOLPIS_SHIFT   (18U)
#define GMAC_MMC_TX_INTERRUPT_TXEXCOLPIS_WIDTH   (1U)
#define GMAC_MMC_TX_INTERRUPT_TXEXCOLPIS(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_TX_INTERRUPT_TXEXCOLPIS_SHIFT)) & GMAC_MMC_TX_INTERRUPT_TXEXCOLPIS_MASK)
#define GMAC_MMC_TX_INTERRUPT_TXCARERPIS_MASK    (0x80000U)
#define GMAC_MMC_TX_INTERRUPT_TXCARERPIS_SHIFT   (19U)
#define GMAC_MMC_TX_INTERRUPT_TXCARERPIS_WIDTH   (1U)
#define GMAC_MMC_TX_INTERRUPT_TXCARERPIS(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_TX_INTERRUPT_TXCARERPIS_SHIFT)) & GMAC_MMC_TX_INTERRUPT_TXCARERPIS_MASK)
#define GMAC_MMC_TX_INTERRUPT_TXGOCTIS_MASK      (0x100000U)
#define GMAC_MMC_TX_INTERRUPT_TXGOCTIS_SHIFT     (20U)
#define GMAC_MMC_TX_INTERRUPT_TXGOCTIS_WIDTH     (1U)
#define GMAC_MMC_TX_INTERRUPT_TXGOCTIS(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_TX_INTERRUPT_TXGOCTIS_SHIFT)) & GMAC_MMC_TX_INTERRUPT_TXGOCTIS_MASK)
#define GMAC_MMC_TX_INTERRUPT_TXGPKTIS_MASK      (0x200000U)
#define GMAC_MMC_TX_INTERRUPT_TXGPKTIS_SHIFT     (21U)
#define GMAC_MMC_TX_INTERRUPT_TXGPKTIS_WIDTH     (1U)
#define GMAC_MMC_TX_INTERRUPT_TXGPKTIS(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_TX_INTERRUPT_TXGPKTIS_SHIFT)) & GMAC_MMC_TX_INTERRUPT_TXGPKTIS_MASK)
#define GMAC_MMC_TX_INTERRUPT_TXEXDEFPIS_MASK    (0x400000U)
#define GMAC_MMC_TX_INTERRUPT_TXEXDEFPIS_SHIFT   (22U)
#define GMAC_MMC_TX_INTERRUPT_TXEXDEFPIS_WIDTH   (1U)
#define GMAC_MMC_TX_INTERRUPT_TXEXDEFPIS(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_TX_INTERRUPT_TXEXDEFPIS_SHIFT)) & GMAC_MMC_TX_INTERRUPT_TXEXDEFPIS_MASK)
#define GMAC_MMC_TX_INTERRUPT_TXPAUSPIS_MASK     (0x800000U)
#define GMAC_MMC_TX_INTERRUPT_TXPAUSPIS_SHIFT    (23U)
#define GMAC_MMC_TX_INTERRUPT_TXPAUSPIS_WIDTH    (1U)
#define GMAC_MMC_TX_INTERRUPT_TXPAUSPIS(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_TX_INTERRUPT_TXPAUSPIS_SHIFT)) & GMAC_MMC_TX_INTERRUPT_TXPAUSPIS_MASK)
#define GMAC_MMC_TX_INTERRUPT_TXVLANGPIS_MASK    (0x1000000U)
#define GMAC_MMC_TX_INTERRUPT_TXVLANGPIS_SHIFT   (24U)
#define GMAC_MMC_TX_INTERRUPT_TXVLANGPIS_WIDTH   (1U)
#define GMAC_MMC_TX_INTERRUPT_TXVLANGPIS(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_TX_INTERRUPT_TXVLANGPIS_SHIFT)) & GMAC_MMC_TX_INTERRUPT_TXVLANGPIS_MASK)
#define GMAC_MMC_TX_INTERRUPT_TXOSIZEGPIS_MASK   (0x2000000U)
#define GMAC_MMC_TX_INTERRUPT_TXOSIZEGPIS_SHIFT  (25U)
#define GMAC_MMC_TX_INTERRUPT_TXOSIZEGPIS_WIDTH  (1U)
#define GMAC_MMC_TX_INTERRUPT_TXOSIZEGPIS(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_TX_INTERRUPT_TXOSIZEGPIS_SHIFT)) & GMAC_MMC_TX_INTERRUPT_TXOSIZEGPIS_MASK)
/*! @} */

/*! @name MMC_RX_INTERRUPT_MASK -  */
/*! @{ */
#define GMAC_MMC_RX_INTERRUPT_MASK_RXGBPKTIM_MASK (0x1U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXGBPKTIM_SHIFT (0U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXGBPKTIM_WIDTH (1U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXGBPKTIM(x)  (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_RX_INTERRUPT_MASK_RXGBPKTIM_SHIFT)) & GMAC_MMC_RX_INTERRUPT_MASK_RXGBPKTIM_MASK)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXGBOCTIM_MASK (0x2U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXGBOCTIM_SHIFT (1U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXGBOCTIM_WIDTH (1U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXGBOCTIM(x)  (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_RX_INTERRUPT_MASK_RXGBOCTIM_SHIFT)) & GMAC_MMC_RX_INTERRUPT_MASK_RXGBOCTIM_MASK)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXGOCTIM_MASK (0x4U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXGOCTIM_SHIFT (2U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXGOCTIM_WIDTH (1U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXGOCTIM(x)   (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_RX_INTERRUPT_MASK_RXGOCTIM_SHIFT)) & GMAC_MMC_RX_INTERRUPT_MASK_RXGOCTIM_MASK)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXBCGPIM_MASK (0x8U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXBCGPIM_SHIFT (3U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXBCGPIM_WIDTH (1U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXBCGPIM(x)   (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_RX_INTERRUPT_MASK_RXBCGPIM_SHIFT)) & GMAC_MMC_RX_INTERRUPT_MASK_RXBCGPIM_MASK)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXMCGPIM_MASK (0x10U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXMCGPIM_SHIFT (4U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXMCGPIM_WIDTH (1U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXMCGPIM(x)   (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_RX_INTERRUPT_MASK_RXMCGPIM_SHIFT)) & GMAC_MMC_RX_INTERRUPT_MASK_RXMCGPIM_MASK)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXCRCERPIM_MASK (0x20U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXCRCERPIM_SHIFT (5U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXCRCERPIM_WIDTH (1U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXCRCERPIM(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_RX_INTERRUPT_MASK_RXCRCERPIM_SHIFT)) & GMAC_MMC_RX_INTERRUPT_MASK_RXCRCERPIM_MASK)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXALGNERPIM_MASK (0x40U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXALGNERPIM_SHIFT (6U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXALGNERPIM_WIDTH (1U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXALGNERPIM(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_RX_INTERRUPT_MASK_RXALGNERPIM_SHIFT)) & GMAC_MMC_RX_INTERRUPT_MASK_RXALGNERPIM_MASK)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXRUNTPIM_MASK (0x80U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXRUNTPIM_SHIFT (7U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXRUNTPIM_WIDTH (1U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXRUNTPIM(x)  (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_RX_INTERRUPT_MASK_RXRUNTPIM_SHIFT)) & GMAC_MMC_RX_INTERRUPT_MASK_RXRUNTPIM_MASK)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXJABERPIM_MASK (0x100U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXJABERPIM_SHIFT (8U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXJABERPIM_WIDTH (1U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXJABERPIM(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_RX_INTERRUPT_MASK_RXJABERPIM_SHIFT)) & GMAC_MMC_RX_INTERRUPT_MASK_RXJABERPIM_MASK)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXUSIZEGPIM_MASK (0x200U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXUSIZEGPIM_SHIFT (9U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXUSIZEGPIM_WIDTH (1U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXUSIZEGPIM(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_RX_INTERRUPT_MASK_RXUSIZEGPIM_SHIFT)) & GMAC_MMC_RX_INTERRUPT_MASK_RXUSIZEGPIM_MASK)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXOSIZEGPIM_MASK (0x400U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXOSIZEGPIM_SHIFT (10U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXOSIZEGPIM_WIDTH (1U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXOSIZEGPIM(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_RX_INTERRUPT_MASK_RXOSIZEGPIM_SHIFT)) & GMAC_MMC_RX_INTERRUPT_MASK_RXOSIZEGPIM_MASK)
#define GMAC_MMC_RX_INTERRUPT_MASK_RX64OCTGBPIM_MASK (0x800U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RX64OCTGBPIM_SHIFT (11U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RX64OCTGBPIM_WIDTH (1U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RX64OCTGBPIM(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_RX_INTERRUPT_MASK_RX64OCTGBPIM_SHIFT)) & GMAC_MMC_RX_INTERRUPT_MASK_RX64OCTGBPIM_MASK)
#define GMAC_MMC_RX_INTERRUPT_MASK_RX65T127OCTGBPIM_MASK (0x1000U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RX65T127OCTGBPIM_SHIFT (12U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RX65T127OCTGBPIM_WIDTH (1U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RX65T127OCTGBPIM(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_RX_INTERRUPT_MASK_RX65T127OCTGBPIM_SHIFT)) & GMAC_MMC_RX_INTERRUPT_MASK_RX65T127OCTGBPIM_MASK)
#define GMAC_MMC_RX_INTERRUPT_MASK_RX128T255OCTGBPIM_MASK (0x2000U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RX128T255OCTGBPIM_SHIFT (13U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RX128T255OCTGBPIM_WIDTH (1U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RX128T255OCTGBPIM(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_RX_INTERRUPT_MASK_RX128T255OCTGBPIM_SHIFT)) & GMAC_MMC_RX_INTERRUPT_MASK_RX128T255OCTGBPIM_MASK)
#define GMAC_MMC_RX_INTERRUPT_MASK_RX256T511OCTGBPIM_MASK (0x4000U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RX256T511OCTGBPIM_SHIFT (14U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RX256T511OCTGBPIM_WIDTH (1U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RX256T511OCTGBPIM(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_RX_INTERRUPT_MASK_RX256T511OCTGBPIM_SHIFT)) & GMAC_MMC_RX_INTERRUPT_MASK_RX256T511OCTGBPIM_MASK)
#define GMAC_MMC_RX_INTERRUPT_MASK_RX512T1023OCTGBPIM_MASK (0x8000U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RX512T1023OCTGBPIM_SHIFT (15U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RX512T1023OCTGBPIM_WIDTH (1U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RX512T1023OCTGBPIM(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_RX_INTERRUPT_MASK_RX512T1023OCTGBPIM_SHIFT)) & GMAC_MMC_RX_INTERRUPT_MASK_RX512T1023OCTGBPIM_MASK)
#define GMAC_MMC_RX_INTERRUPT_MASK_RX1024TMAXOCTGBPIM_MASK (0x10000U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RX1024TMAXOCTGBPIM_SHIFT (16U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RX1024TMAXOCTGBPIM_WIDTH (1U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RX1024TMAXOCTGBPIM(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_RX_INTERRUPT_MASK_RX1024TMAXOCTGBPIM_SHIFT)) & GMAC_MMC_RX_INTERRUPT_MASK_RX1024TMAXOCTGBPIM_MASK)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXUCGPIM_MASK (0x20000U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXUCGPIM_SHIFT (17U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXUCGPIM_WIDTH (1U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXUCGPIM(x)   (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_RX_INTERRUPT_MASK_RXUCGPIM_SHIFT)) & GMAC_MMC_RX_INTERRUPT_MASK_RXUCGPIM_MASK)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXLENERPIM_MASK (0x40000U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXLENERPIM_SHIFT (18U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXLENERPIM_WIDTH (1U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXLENERPIM(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_RX_INTERRUPT_MASK_RXLENERPIM_SHIFT)) & GMAC_MMC_RX_INTERRUPT_MASK_RXLENERPIM_MASK)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXORANGEPIM_MASK (0x80000U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXORANGEPIM_SHIFT (19U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXORANGEPIM_WIDTH (1U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXORANGEPIM(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_RX_INTERRUPT_MASK_RXORANGEPIM_SHIFT)) & GMAC_MMC_RX_INTERRUPT_MASK_RXORANGEPIM_MASK)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXPAUSPIM_MASK (0x100000U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXPAUSPIM_SHIFT (20U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXPAUSPIM_WIDTH (1U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXPAUSPIM(x)  (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_RX_INTERRUPT_MASK_RXPAUSPIM_SHIFT)) & GMAC_MMC_RX_INTERRUPT_MASK_RXPAUSPIM_MASK)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXFOVPIM_MASK (0x200000U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXFOVPIM_SHIFT (21U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXFOVPIM_WIDTH (1U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXFOVPIM(x)   (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_RX_INTERRUPT_MASK_RXFOVPIM_SHIFT)) & GMAC_MMC_RX_INTERRUPT_MASK_RXFOVPIM_MASK)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXVLANGBPIM_MASK (0x400000U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXVLANGBPIM_SHIFT (22U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXVLANGBPIM_WIDTH (1U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXVLANGBPIM(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_RX_INTERRUPT_MASK_RXVLANGBPIM_SHIFT)) & GMAC_MMC_RX_INTERRUPT_MASK_RXVLANGBPIM_MASK)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXWDOGPIM_MASK (0x800000U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXWDOGPIM_SHIFT (23U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXWDOGPIM_WIDTH (1U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXWDOGPIM(x)  (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_RX_INTERRUPT_MASK_RXWDOGPIM_SHIFT)) & GMAC_MMC_RX_INTERRUPT_MASK_RXWDOGPIM_MASK)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXRCVERRPIM_MASK (0x1000000U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXRCVERRPIM_SHIFT (24U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXRCVERRPIM_WIDTH (1U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXRCVERRPIM(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_RX_INTERRUPT_MASK_RXRCVERRPIM_SHIFT)) & GMAC_MMC_RX_INTERRUPT_MASK_RXRCVERRPIM_MASK)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXCTRLPIM_MASK (0x2000000U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXCTRLPIM_SHIFT (25U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXCTRLPIM_WIDTH (1U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXCTRLPIM(x)  (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_RX_INTERRUPT_MASK_RXCTRLPIM_SHIFT)) & GMAC_MMC_RX_INTERRUPT_MASK_RXCTRLPIM_MASK)
/*! @} */

/*! @name MMC_TX_INTERRUPT_MASK -  */
/*! @{ */
#define GMAC_MMC_TX_INTERRUPT_MASK_TXGBOCTIM_MASK (0x1U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXGBOCTIM_SHIFT (0U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXGBOCTIM_WIDTH (1U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXGBOCTIM(x)  (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_TX_INTERRUPT_MASK_TXGBOCTIM_SHIFT)) & GMAC_MMC_TX_INTERRUPT_MASK_TXGBOCTIM_MASK)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXGBPKTIM_MASK (0x2U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXGBPKTIM_SHIFT (1U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXGBPKTIM_WIDTH (1U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXGBPKTIM(x)  (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_TX_INTERRUPT_MASK_TXGBPKTIM_SHIFT)) & GMAC_MMC_TX_INTERRUPT_MASK_TXGBPKTIM_MASK)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXBCGPIM_MASK (0x4U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXBCGPIM_SHIFT (2U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXBCGPIM_WIDTH (1U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXBCGPIM(x)   (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_TX_INTERRUPT_MASK_TXBCGPIM_SHIFT)) & GMAC_MMC_TX_INTERRUPT_MASK_TXBCGPIM_MASK)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXMCGPIM_MASK (0x8U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXMCGPIM_SHIFT (3U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXMCGPIM_WIDTH (1U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXMCGPIM(x)   (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_TX_INTERRUPT_MASK_TXMCGPIM_SHIFT)) & GMAC_MMC_TX_INTERRUPT_MASK_TXMCGPIM_MASK)
#define GMAC_MMC_TX_INTERRUPT_MASK_TX64OCTGBPIM_MASK (0x10U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TX64OCTGBPIM_SHIFT (4U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TX64OCTGBPIM_WIDTH (1U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TX64OCTGBPIM(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_TX_INTERRUPT_MASK_TX64OCTGBPIM_SHIFT)) & GMAC_MMC_TX_INTERRUPT_MASK_TX64OCTGBPIM_MASK)
#define GMAC_MMC_TX_INTERRUPT_MASK_TX65T127OCTGBPIM_MASK (0x20U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TX65T127OCTGBPIM_SHIFT (5U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TX65T127OCTGBPIM_WIDTH (1U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TX65T127OCTGBPIM(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_TX_INTERRUPT_MASK_TX65T127OCTGBPIM_SHIFT)) & GMAC_MMC_TX_INTERRUPT_MASK_TX65T127OCTGBPIM_MASK)
#define GMAC_MMC_TX_INTERRUPT_MASK_TX128T255OCTGBPIM_MASK (0x40U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TX128T255OCTGBPIM_SHIFT (6U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TX128T255OCTGBPIM_WIDTH (1U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TX128T255OCTGBPIM(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_TX_INTERRUPT_MASK_TX128T255OCTGBPIM_SHIFT)) & GMAC_MMC_TX_INTERRUPT_MASK_TX128T255OCTGBPIM_MASK)
#define GMAC_MMC_TX_INTERRUPT_MASK_TX256T511OCTGBPIM_MASK (0x80U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TX256T511OCTGBPIM_SHIFT (7U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TX256T511OCTGBPIM_WIDTH (1U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TX256T511OCTGBPIM(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_TX_INTERRUPT_MASK_TX256T511OCTGBPIM_SHIFT)) & GMAC_MMC_TX_INTERRUPT_MASK_TX256T511OCTGBPIM_MASK)
#define GMAC_MMC_TX_INTERRUPT_MASK_TX512T1023OCTGBPIM_MASK (0x100U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TX512T1023OCTGBPIM_SHIFT (8U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TX512T1023OCTGBPIM_WIDTH (1U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TX512T1023OCTGBPIM(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_TX_INTERRUPT_MASK_TX512T1023OCTGBPIM_SHIFT)) & GMAC_MMC_TX_INTERRUPT_MASK_TX512T1023OCTGBPIM_MASK)
#define GMAC_MMC_TX_INTERRUPT_MASK_TX1024TMAXOCTGBPIM_MASK (0x200U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TX1024TMAXOCTGBPIM_SHIFT (9U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TX1024TMAXOCTGBPIM_WIDTH (1U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TX1024TMAXOCTGBPIM(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_TX_INTERRUPT_MASK_TX1024TMAXOCTGBPIM_SHIFT)) & GMAC_MMC_TX_INTERRUPT_MASK_TX1024TMAXOCTGBPIM_MASK)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXUCGBPIM_MASK (0x400U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXUCGBPIM_SHIFT (10U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXUCGBPIM_WIDTH (1U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXUCGBPIM(x)  (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_TX_INTERRUPT_MASK_TXUCGBPIM_SHIFT)) & GMAC_MMC_TX_INTERRUPT_MASK_TXUCGBPIM_MASK)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXMCGBPIM_MASK (0x800U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXMCGBPIM_SHIFT (11U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXMCGBPIM_WIDTH (1U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXMCGBPIM(x)  (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_TX_INTERRUPT_MASK_TXMCGBPIM_SHIFT)) & GMAC_MMC_TX_INTERRUPT_MASK_TXMCGBPIM_MASK)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXBCGBPIM_MASK (0x1000U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXBCGBPIM_SHIFT (12U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXBCGBPIM_WIDTH (1U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXBCGBPIM(x)  (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_TX_INTERRUPT_MASK_TXBCGBPIM_SHIFT)) & GMAC_MMC_TX_INTERRUPT_MASK_TXBCGBPIM_MASK)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXUFLOWERPIM_MASK (0x2000U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXUFLOWERPIM_SHIFT (13U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXUFLOWERPIM_WIDTH (1U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXUFLOWERPIM(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_TX_INTERRUPT_MASK_TXUFLOWERPIM_SHIFT)) & GMAC_MMC_TX_INTERRUPT_MASK_TXUFLOWERPIM_MASK)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXSCOLGPIM_MASK (0x4000U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXSCOLGPIM_SHIFT (14U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXSCOLGPIM_WIDTH (1U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXSCOLGPIM(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_TX_INTERRUPT_MASK_TXSCOLGPIM_SHIFT)) & GMAC_MMC_TX_INTERRUPT_MASK_TXSCOLGPIM_MASK)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXMCOLGPIM_MASK (0x8000U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXMCOLGPIM_SHIFT (15U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXMCOLGPIM_WIDTH (1U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXMCOLGPIM(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_TX_INTERRUPT_MASK_TXMCOLGPIM_SHIFT)) & GMAC_MMC_TX_INTERRUPT_MASK_TXMCOLGPIM_MASK)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXDEFPIM_MASK (0x10000U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXDEFPIM_SHIFT (16U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXDEFPIM_WIDTH (1U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXDEFPIM(x)   (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_TX_INTERRUPT_MASK_TXDEFPIM_SHIFT)) & GMAC_MMC_TX_INTERRUPT_MASK_TXDEFPIM_MASK)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXLATCOLPIM_MASK (0x20000U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXLATCOLPIM_SHIFT (17U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXLATCOLPIM_WIDTH (1U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXLATCOLPIM(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_TX_INTERRUPT_MASK_TXLATCOLPIM_SHIFT)) & GMAC_MMC_TX_INTERRUPT_MASK_TXLATCOLPIM_MASK)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXEXCOLPIM_MASK (0x40000U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXEXCOLPIM_SHIFT (18U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXEXCOLPIM_WIDTH (1U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXEXCOLPIM(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_TX_INTERRUPT_MASK_TXEXCOLPIM_SHIFT)) & GMAC_MMC_TX_INTERRUPT_MASK_TXEXCOLPIM_MASK)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXCARERPIM_MASK (0x80000U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXCARERPIM_SHIFT (19U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXCARERPIM_WIDTH (1U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXCARERPIM(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_TX_INTERRUPT_MASK_TXCARERPIM_SHIFT)) & GMAC_MMC_TX_INTERRUPT_MASK_TXCARERPIM_MASK)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXGOCTIM_MASK (0x100000U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXGOCTIM_SHIFT (20U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXGOCTIM_WIDTH (1U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXGOCTIM(x)   (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_TX_INTERRUPT_MASK_TXGOCTIM_SHIFT)) & GMAC_MMC_TX_INTERRUPT_MASK_TXGOCTIM_MASK)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXGPKTIM_MASK (0x200000U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXGPKTIM_SHIFT (21U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXGPKTIM_WIDTH (1U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXGPKTIM(x)   (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_TX_INTERRUPT_MASK_TXGPKTIM_SHIFT)) & GMAC_MMC_TX_INTERRUPT_MASK_TXGPKTIM_MASK)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXEXDEFPIM_MASK (0x400000U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXEXDEFPIM_SHIFT (22U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXEXDEFPIM_WIDTH (1U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXEXDEFPIM(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_TX_INTERRUPT_MASK_TXEXDEFPIM_SHIFT)) & GMAC_MMC_TX_INTERRUPT_MASK_TXEXDEFPIM_MASK)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXPAUSPIM_MASK (0x800000U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXPAUSPIM_SHIFT (23U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXPAUSPIM_WIDTH (1U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXPAUSPIM(x)  (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_TX_INTERRUPT_MASK_TXPAUSPIM_SHIFT)) & GMAC_MMC_TX_INTERRUPT_MASK_TXPAUSPIM_MASK)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXVLANGPIM_MASK (0x1000000U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXVLANGPIM_SHIFT (24U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXVLANGPIM_WIDTH (1U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXVLANGPIM(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_TX_INTERRUPT_MASK_TXVLANGPIM_SHIFT)) & GMAC_MMC_TX_INTERRUPT_MASK_TXVLANGPIM_MASK)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXOSIZEGPIM_MASK (0x2000000U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXOSIZEGPIM_SHIFT (25U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXOSIZEGPIM_WIDTH (1U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXOSIZEGPIM(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_TX_INTERRUPT_MASK_TXOSIZEGPIM_SHIFT)) & GMAC_MMC_TX_INTERRUPT_MASK_TXOSIZEGPIM_MASK)
/*! @} */

/*! @name TX_OCTET_COUNT_GOOD_BAD -  */
/*! @{ */
#define GMAC_TX_OCTET_COUNT_GOOD_BAD_TXOCTGB_MASK (0xFFFFFFFFU)
#define GMAC_TX_OCTET_COUNT_GOOD_BAD_TXOCTGB_SHIFT (0U)
#define GMAC_TX_OCTET_COUNT_GOOD_BAD_TXOCTGB_WIDTH (32U)
#define GMAC_TX_OCTET_COUNT_GOOD_BAD_TXOCTGB(x)  (((uint32_t)(((uint32_t)(x)) << GMAC_TX_OCTET_COUNT_GOOD_BAD_TXOCTGB_SHIFT)) & GMAC_TX_OCTET_COUNT_GOOD_BAD_TXOCTGB_MASK)
/*! @} */

/*! @name TX_PACKET_COUNT_GOOD_BAD -  */
/*! @{ */
#define GMAC_TX_PACKET_COUNT_GOOD_BAD_TXPKTGB_MASK (0xFFFFFFFFU)
#define GMAC_TX_PACKET_COUNT_GOOD_BAD_TXPKTGB_SHIFT (0U)
#define GMAC_TX_PACKET_COUNT_GOOD_BAD_TXPKTGB_WIDTH (32U)
#define GMAC_TX_PACKET_COUNT_GOOD_BAD_TXPKTGB(x) (((uint32_t)(((uint32_t)(x)) << GMAC_TX_PACKET_COUNT_GOOD_BAD_TXPKTGB_SHIFT)) & GMAC_TX_PACKET_COUNT_GOOD_BAD_TXPKTGB_MASK)
/*! @} */

/*! @name TX_BROADCAST_PACKETS_GOOD -  */
/*! @{ */
#define GMAC_TX_BROADCAST_PACKETS_GOOD_TXBCASTG_MASK (0xFFFFFFFFU)
#define GMAC_TX_BROADCAST_PACKETS_GOOD_TXBCASTG_SHIFT (0U)
#define GMAC_TX_BROADCAST_PACKETS_GOOD_TXBCASTG_WIDTH (32U)
#define GMAC_TX_BROADCAST_PACKETS_GOOD_TXBCASTG(x) (((uint32_t)(((uint32_t)(x)) << GMAC_TX_BROADCAST_PACKETS_GOOD_TXBCASTG_SHIFT)) & GMAC_TX_BROADCAST_PACKETS_GOOD_TXBCASTG_MASK)
/*! @} */

/*! @name TX_MULTICAST_PACKETS_GOOD -  */
/*! @{ */
#define GMAC_TX_MULTICAST_PACKETS_GOOD_TXMCASTG_MASK (0xFFFFFFFFU)
#define GMAC_TX_MULTICAST_PACKETS_GOOD_TXMCASTG_SHIFT (0U)
#define GMAC_TX_MULTICAST_PACKETS_GOOD_TXMCASTG_WIDTH (32U)
#define GMAC_TX_MULTICAST_PACKETS_GOOD_TXMCASTG(x) (((uint32_t)(((uint32_t)(x)) << GMAC_TX_MULTICAST_PACKETS_GOOD_TXMCASTG_SHIFT)) & GMAC_TX_MULTICAST_PACKETS_GOOD_TXMCASTG_MASK)
/*! @} */

/*! @name TX_64OCTETS_PACKETS_GOOD_BAD -  */
/*! @{ */
#define GMAC_TX_64OCTETS_PACKETS_GOOD_BAD_TX64OCTGB_MASK (0xFFFFFFFFU)
#define GMAC_TX_64OCTETS_PACKETS_GOOD_BAD_TX64OCTGB_SHIFT (0U)
#define GMAC_TX_64OCTETS_PACKETS_GOOD_BAD_TX64OCTGB_WIDTH (32U)
#define GMAC_TX_64OCTETS_PACKETS_GOOD_BAD_TX64OCTGB(x) (((uint32_t)(((uint32_t)(x)) << GMAC_TX_64OCTETS_PACKETS_GOOD_BAD_TX64OCTGB_SHIFT)) & GMAC_TX_64OCTETS_PACKETS_GOOD_BAD_TX64OCTGB_MASK)
/*! @} */

/*! @name TX_65TO127OCTETS_PACKETS_GOOD_BAD -  */
/*! @{ */
#define GMAC_TX_65TO127OCTETS_PACKETS_GOOD_BAD_TX65_127OCTGB_MASK (0xFFFFFFFFU)
#define GMAC_TX_65TO127OCTETS_PACKETS_GOOD_BAD_TX65_127OCTGB_SHIFT (0U)
#define GMAC_TX_65TO127OCTETS_PACKETS_GOOD_BAD_TX65_127OCTGB_WIDTH (32U)
#define GMAC_TX_65TO127OCTETS_PACKETS_GOOD_BAD_TX65_127OCTGB(x) (((uint32_t)(((uint32_t)(x)) << GMAC_TX_65TO127OCTETS_PACKETS_GOOD_BAD_TX65_127OCTGB_SHIFT)) & GMAC_TX_65TO127OCTETS_PACKETS_GOOD_BAD_TX65_127OCTGB_MASK)
/*! @} */

/*! @name TX_128TO255OCTETS_PACKETS_GOOD_BAD -  */
/*! @{ */
#define GMAC_TX_128TO255OCTETS_PACKETS_GOOD_BAD_TX128_255OCTGB_MASK (0xFFFFFFFFU)
#define GMAC_TX_128TO255OCTETS_PACKETS_GOOD_BAD_TX128_255OCTGB_SHIFT (0U)
#define GMAC_TX_128TO255OCTETS_PACKETS_GOOD_BAD_TX128_255OCTGB_WIDTH (32U)
#define GMAC_TX_128TO255OCTETS_PACKETS_GOOD_BAD_TX128_255OCTGB(x) (((uint32_t)(((uint32_t)(x)) << GMAC_TX_128TO255OCTETS_PACKETS_GOOD_BAD_TX128_255OCTGB_SHIFT)) & GMAC_TX_128TO255OCTETS_PACKETS_GOOD_BAD_TX128_255OCTGB_MASK)
/*! @} */

/*! @name TX_256TO511OCTETS_PACKETS_GOOD_BAD -  */
/*! @{ */
#define GMAC_TX_256TO511OCTETS_PACKETS_GOOD_BAD_TX256_511OCTGB_MASK (0xFFFFFFFFU)
#define GMAC_TX_256TO511OCTETS_PACKETS_GOOD_BAD_TX256_511OCTGB_SHIFT (0U)
#define GMAC_TX_256TO511OCTETS_PACKETS_GOOD_BAD_TX256_511OCTGB_WIDTH (32U)
#define GMAC_TX_256TO511OCTETS_PACKETS_GOOD_BAD_TX256_511OCTGB(x) (((uint32_t)(((uint32_t)(x)) << GMAC_TX_256TO511OCTETS_PACKETS_GOOD_BAD_TX256_511OCTGB_SHIFT)) & GMAC_TX_256TO511OCTETS_PACKETS_GOOD_BAD_TX256_511OCTGB_MASK)
/*! @} */

/*! @name TX_512TO1023OCTETS_PACKETS_GOOD_BAD -  */
/*! @{ */
#define GMAC_TX_512TO1023OCTETS_PACKETS_GOOD_BAD_TX512_1023OCTGB_MASK (0xFFFFFFFFU)
#define GMAC_TX_512TO1023OCTETS_PACKETS_GOOD_BAD_TX512_1023OCTGB_SHIFT (0U)
#define GMAC_TX_512TO1023OCTETS_PACKETS_GOOD_BAD_TX512_1023OCTGB_WIDTH (32U)
#define GMAC_TX_512TO1023OCTETS_PACKETS_GOOD_BAD_TX512_1023OCTGB(x) (((uint32_t)(((uint32_t)(x)) << GMAC_TX_512TO1023OCTETS_PACKETS_GOOD_BAD_TX512_1023OCTGB_SHIFT)) & GMAC_TX_512TO1023OCTETS_PACKETS_GOOD_BAD_TX512_1023OCTGB_MASK)
/*! @} */

/*! @name TX_1024TOMAXOCTETS_PACKETS_GOOD_BAD -  */
/*! @{ */
#define GMAC_TX_1024TOMAXOCTETS_PACKETS_GOOD_BAD_TX1024_MAXOCTGB_MASK (0xFFFFFFFFU)
#define GMAC_TX_1024TOMAXOCTETS_PACKETS_GOOD_BAD_TX1024_MAXOCTGB_SHIFT (0U)
#define GMAC_TX_1024TOMAXOCTETS_PACKETS_GOOD_BAD_TX1024_MAXOCTGB_WIDTH (32U)
#define GMAC_TX_1024TOMAXOCTETS_PACKETS_GOOD_BAD_TX1024_MAXOCTGB(x) (((uint32_t)(((uint32_t)(x)) << GMAC_TX_1024TOMAXOCTETS_PACKETS_GOOD_BAD_TX1024_MAXOCTGB_SHIFT)) & GMAC_TX_1024TOMAXOCTETS_PACKETS_GOOD_BAD_TX1024_MAXOCTGB_MASK)
/*! @} */

/*! @name TX_UNICAST_PACKETS_GOOD_BAD -  */
/*! @{ */
#define GMAC_TX_UNICAST_PACKETS_GOOD_BAD_TXUCASTGB_MASK (0xFFFFFFFFU)
#define GMAC_TX_UNICAST_PACKETS_GOOD_BAD_TXUCASTGB_SHIFT (0U)
#define GMAC_TX_UNICAST_PACKETS_GOOD_BAD_TXUCASTGB_WIDTH (32U)
#define GMAC_TX_UNICAST_PACKETS_GOOD_BAD_TXUCASTGB(x) (((uint32_t)(((uint32_t)(x)) << GMAC_TX_UNICAST_PACKETS_GOOD_BAD_TXUCASTGB_SHIFT)) & GMAC_TX_UNICAST_PACKETS_GOOD_BAD_TXUCASTGB_MASK)
/*! @} */

/*! @name TX_MULTICAST_PACKETS_GOOD_BAD -  */
/*! @{ */
#define GMAC_TX_MULTICAST_PACKETS_GOOD_BAD_TXMCASTGB_MASK (0xFFFFFFFFU)
#define GMAC_TX_MULTICAST_PACKETS_GOOD_BAD_TXMCASTGB_SHIFT (0U)
#define GMAC_TX_MULTICAST_PACKETS_GOOD_BAD_TXMCASTGB_WIDTH (32U)
#define GMAC_TX_MULTICAST_PACKETS_GOOD_BAD_TXMCASTGB(x) (((uint32_t)(((uint32_t)(x)) << GMAC_TX_MULTICAST_PACKETS_GOOD_BAD_TXMCASTGB_SHIFT)) & GMAC_TX_MULTICAST_PACKETS_GOOD_BAD_TXMCASTGB_MASK)
/*! @} */

/*! @name TX_BROADCAST_PACKETS_GOOD_BAD -  */
/*! @{ */
#define GMAC_TX_BROADCAST_PACKETS_GOOD_BAD_TXBCASTGB_MASK (0xFFFFFFFFU)
#define GMAC_TX_BROADCAST_PACKETS_GOOD_BAD_TXBCASTGB_SHIFT (0U)
#define GMAC_TX_BROADCAST_PACKETS_GOOD_BAD_TXBCASTGB_WIDTH (32U)
#define GMAC_TX_BROADCAST_PACKETS_GOOD_BAD_TXBCASTGB(x) (((uint32_t)(((uint32_t)(x)) << GMAC_TX_BROADCAST_PACKETS_GOOD_BAD_TXBCASTGB_SHIFT)) & GMAC_TX_BROADCAST_PACKETS_GOOD_BAD_TXBCASTGB_MASK)
/*! @} */

/*! @name TX_UNDERFLOW_ERROR_PACKETS -  */
/*! @{ */
#define GMAC_TX_UNDERFLOW_ERROR_PACKETS_TXUNDRFLW_MASK (0xFFFFFFFFU)
#define GMAC_TX_UNDERFLOW_ERROR_PACKETS_TXUNDRFLW_SHIFT (0U)
#define GMAC_TX_UNDERFLOW_ERROR_PACKETS_TXUNDRFLW_WIDTH (32U)
#define GMAC_TX_UNDERFLOW_ERROR_PACKETS_TXUNDRFLW(x) (((uint32_t)(((uint32_t)(x)) << GMAC_TX_UNDERFLOW_ERROR_PACKETS_TXUNDRFLW_SHIFT)) & GMAC_TX_UNDERFLOW_ERROR_PACKETS_TXUNDRFLW_MASK)
/*! @} */

/*! @name TX_SINGLE_COLLISION_GOOD_PACKETS -  */
/*! @{ */
#define GMAC_TX_SINGLE_COLLISION_GOOD_PACKETS_TXSNGLCOLG_MASK (0xFFFFFFFFU)
#define GMAC_TX_SINGLE_COLLISION_GOOD_PACKETS_TXSNGLCOLG_SHIFT (0U)
#define GMAC_TX_SINGLE_COLLISION_GOOD_PACKETS_TXSNGLCOLG_WIDTH (32U)
#define GMAC_TX_SINGLE_COLLISION_GOOD_PACKETS_TXSNGLCOLG(x) (((uint32_t)(((uint32_t)(x)) << GMAC_TX_SINGLE_COLLISION_GOOD_PACKETS_TXSNGLCOLG_SHIFT)) & GMAC_TX_SINGLE_COLLISION_GOOD_PACKETS_TXSNGLCOLG_MASK)
/*! @} */

/*! @name TX_MULTIPLE_COLLISION_GOOD_PACKETS -  */
/*! @{ */
#define GMAC_TX_MULTIPLE_COLLISION_GOOD_PACKETS_TXMULTCOLG_MASK (0xFFFFFFFFU)
#define GMAC_TX_MULTIPLE_COLLISION_GOOD_PACKETS_TXMULTCOLG_SHIFT (0U)
#define GMAC_TX_MULTIPLE_COLLISION_GOOD_PACKETS_TXMULTCOLG_WIDTH (32U)
#define GMAC_TX_MULTIPLE_COLLISION_GOOD_PACKETS_TXMULTCOLG(x) (((uint32_t)(((uint32_t)(x)) << GMAC_TX_MULTIPLE_COLLISION_GOOD_PACKETS_TXMULTCOLG_SHIFT)) & GMAC_TX_MULTIPLE_COLLISION_GOOD_PACKETS_TXMULTCOLG_MASK)
/*! @} */

/*! @name TX_DEFERRED_PACKETS -  */
/*! @{ */
#define GMAC_TX_DEFERRED_PACKETS_TXDEFRD_MASK    (0xFFFFFFFFU)
#define GMAC_TX_DEFERRED_PACKETS_TXDEFRD_SHIFT   (0U)
#define GMAC_TX_DEFERRED_PACKETS_TXDEFRD_WIDTH   (32U)
#define GMAC_TX_DEFERRED_PACKETS_TXDEFRD(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_TX_DEFERRED_PACKETS_TXDEFRD_SHIFT)) & GMAC_TX_DEFERRED_PACKETS_TXDEFRD_MASK)
/*! @} */

/*! @name TX_LATE_COLLISION_PACKETS -  */
/*! @{ */
#define GMAC_TX_LATE_COLLISION_PACKETS_TXLATECOL_MASK (0xFFFFFFFFU)
#define GMAC_TX_LATE_COLLISION_PACKETS_TXLATECOL_SHIFT (0U)
#define GMAC_TX_LATE_COLLISION_PACKETS_TXLATECOL_WIDTH (32U)
#define GMAC_TX_LATE_COLLISION_PACKETS_TXLATECOL(x) (((uint32_t)(((uint32_t)(x)) << GMAC_TX_LATE_COLLISION_PACKETS_TXLATECOL_SHIFT)) & GMAC_TX_LATE_COLLISION_PACKETS_TXLATECOL_MASK)
/*! @} */

/*! @name TX_EXCESSIVE_COLLISION_PACKETS -  */
/*! @{ */
#define GMAC_TX_EXCESSIVE_COLLISION_PACKETS_TXEXSCOL_MASK (0xFFFFFFFFU)
#define GMAC_TX_EXCESSIVE_COLLISION_PACKETS_TXEXSCOL_SHIFT (0U)
#define GMAC_TX_EXCESSIVE_COLLISION_PACKETS_TXEXSCOL_WIDTH (32U)
#define GMAC_TX_EXCESSIVE_COLLISION_PACKETS_TXEXSCOL(x) (((uint32_t)(((uint32_t)(x)) << GMAC_TX_EXCESSIVE_COLLISION_PACKETS_TXEXSCOL_SHIFT)) & GMAC_TX_EXCESSIVE_COLLISION_PACKETS_TXEXSCOL_MASK)
/*! @} */

/*! @name TX_CARRIER_ERROR_PACKETS -  */
/*! @{ */
#define GMAC_TX_CARRIER_ERROR_PACKETS_TXCARR_MASK (0xFFFFFFFFU)
#define GMAC_TX_CARRIER_ERROR_PACKETS_TXCARR_SHIFT (0U)
#define GMAC_TX_CARRIER_ERROR_PACKETS_TXCARR_WIDTH (32U)
#define GMAC_TX_CARRIER_ERROR_PACKETS_TXCARR(x)  (((uint32_t)(((uint32_t)(x)) << GMAC_TX_CARRIER_ERROR_PACKETS_TXCARR_SHIFT)) & GMAC_TX_CARRIER_ERROR_PACKETS_TXCARR_MASK)
/*! @} */

/*! @name TX_OCTET_COUNT_GOOD -  */
/*! @{ */
#define GMAC_TX_OCTET_COUNT_GOOD_TXOCTG_MASK     (0xFFFFFFFFU)
#define GMAC_TX_OCTET_COUNT_GOOD_TXOCTG_SHIFT    (0U)
#define GMAC_TX_OCTET_COUNT_GOOD_TXOCTG_WIDTH    (32U)
#define GMAC_TX_OCTET_COUNT_GOOD_TXOCTG(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_TX_OCTET_COUNT_GOOD_TXOCTG_SHIFT)) & GMAC_TX_OCTET_COUNT_GOOD_TXOCTG_MASK)
/*! @} */

/*! @name TX_PACKET_COUNT_GOOD -  */
/*! @{ */
#define GMAC_TX_PACKET_COUNT_GOOD_TXPKTG_MASK    (0xFFFFFFFFU)
#define GMAC_TX_PACKET_COUNT_GOOD_TXPKTG_SHIFT   (0U)
#define GMAC_TX_PACKET_COUNT_GOOD_TXPKTG_WIDTH   (32U)
#define GMAC_TX_PACKET_COUNT_GOOD_TXPKTG(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_TX_PACKET_COUNT_GOOD_TXPKTG_SHIFT)) & GMAC_TX_PACKET_COUNT_GOOD_TXPKTG_MASK)
/*! @} */

/*! @name TX_EXCESSIVE_DEFERRAL_ERROR -  */
/*! @{ */
#define GMAC_TX_EXCESSIVE_DEFERRAL_ERROR_TXEXSDEF_MASK (0xFFFFFFFFU)
#define GMAC_TX_EXCESSIVE_DEFERRAL_ERROR_TXEXSDEF_SHIFT (0U)
#define GMAC_TX_EXCESSIVE_DEFERRAL_ERROR_TXEXSDEF_WIDTH (32U)
#define GMAC_TX_EXCESSIVE_DEFERRAL_ERROR_TXEXSDEF(x) (((uint32_t)(((uint32_t)(x)) << GMAC_TX_EXCESSIVE_DEFERRAL_ERROR_TXEXSDEF_SHIFT)) & GMAC_TX_EXCESSIVE_DEFERRAL_ERROR_TXEXSDEF_MASK)
/*! @} */

/*! @name TX_PAUSE_PACKETS -  */
/*! @{ */
#define GMAC_TX_PAUSE_PACKETS_TXPAUSE_MASK       (0xFFFFFFFFU)
#define GMAC_TX_PAUSE_PACKETS_TXPAUSE_SHIFT      (0U)
#define GMAC_TX_PAUSE_PACKETS_TXPAUSE_WIDTH      (32U)
#define GMAC_TX_PAUSE_PACKETS_TXPAUSE(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_TX_PAUSE_PACKETS_TXPAUSE_SHIFT)) & GMAC_TX_PAUSE_PACKETS_TXPAUSE_MASK)
/*! @} */

/*! @name TX_VLAN_PACKETS_GOOD -  */
/*! @{ */
#define GMAC_TX_VLAN_PACKETS_GOOD_TXVLANG_MASK   (0xFFFFFFFFU)
#define GMAC_TX_VLAN_PACKETS_GOOD_TXVLANG_SHIFT  (0U)
#define GMAC_TX_VLAN_PACKETS_GOOD_TXVLANG_WIDTH  (32U)
#define GMAC_TX_VLAN_PACKETS_GOOD_TXVLANG(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_TX_VLAN_PACKETS_GOOD_TXVLANG_SHIFT)) & GMAC_TX_VLAN_PACKETS_GOOD_TXVLANG_MASK)
/*! @} */

/*! @name TX_OSIZE_PACKETS_GOOD -  */
/*! @{ */
#define GMAC_TX_OSIZE_PACKETS_GOOD_TXOSIZG_MASK  (0xFFFFFFFFU)
#define GMAC_TX_OSIZE_PACKETS_GOOD_TXOSIZG_SHIFT (0U)
#define GMAC_TX_OSIZE_PACKETS_GOOD_TXOSIZG_WIDTH (32U)
#define GMAC_TX_OSIZE_PACKETS_GOOD_TXOSIZG(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_TX_OSIZE_PACKETS_GOOD_TXOSIZG_SHIFT)) & GMAC_TX_OSIZE_PACKETS_GOOD_TXOSIZG_MASK)
/*! @} */

/*! @name RX_PACKETS_COUNT_GOOD_BAD -  */
/*! @{ */
#define GMAC_RX_PACKETS_COUNT_GOOD_BAD_RXPKTGB_MASK (0xFFFFFFFFU)
#define GMAC_RX_PACKETS_COUNT_GOOD_BAD_RXPKTGB_SHIFT (0U)
#define GMAC_RX_PACKETS_COUNT_GOOD_BAD_RXPKTGB_WIDTH (32U)
#define GMAC_RX_PACKETS_COUNT_GOOD_BAD_RXPKTGB(x) (((uint32_t)(((uint32_t)(x)) << GMAC_RX_PACKETS_COUNT_GOOD_BAD_RXPKTGB_SHIFT)) & GMAC_RX_PACKETS_COUNT_GOOD_BAD_RXPKTGB_MASK)
/*! @} */

/*! @name RX_OCTET_COUNT_GOOD_BAD -  */
/*! @{ */
#define GMAC_RX_OCTET_COUNT_GOOD_BAD_RXOCTGB_MASK (0xFFFFFFFFU)
#define GMAC_RX_OCTET_COUNT_GOOD_BAD_RXOCTGB_SHIFT (0U)
#define GMAC_RX_OCTET_COUNT_GOOD_BAD_RXOCTGB_WIDTH (32U)
#define GMAC_RX_OCTET_COUNT_GOOD_BAD_RXOCTGB(x)  (((uint32_t)(((uint32_t)(x)) << GMAC_RX_OCTET_COUNT_GOOD_BAD_RXOCTGB_SHIFT)) & GMAC_RX_OCTET_COUNT_GOOD_BAD_RXOCTGB_MASK)
/*! @} */

/*! @name RX_OCTET_COUNT_GOOD -  */
/*! @{ */
#define GMAC_RX_OCTET_COUNT_GOOD_RXOCTG_MASK     (0xFFFFFFFFU)
#define GMAC_RX_OCTET_COUNT_GOOD_RXOCTG_SHIFT    (0U)
#define GMAC_RX_OCTET_COUNT_GOOD_RXOCTG_WIDTH    (32U)
#define GMAC_RX_OCTET_COUNT_GOOD_RXOCTG(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_RX_OCTET_COUNT_GOOD_RXOCTG_SHIFT)) & GMAC_RX_OCTET_COUNT_GOOD_RXOCTG_MASK)
/*! @} */

/*! @name RX_BROADCAST_PACKETS_GOOD -  */
/*! @{ */
#define GMAC_RX_BROADCAST_PACKETS_GOOD_RXBCASTG_MASK (0xFFFFFFFFU)
#define GMAC_RX_BROADCAST_PACKETS_GOOD_RXBCASTG_SHIFT (0U)
#define GMAC_RX_BROADCAST_PACKETS_GOOD_RXBCASTG_WIDTH (32U)
#define GMAC_RX_BROADCAST_PACKETS_GOOD_RXBCASTG(x) (((uint32_t)(((uint32_t)(x)) << GMAC_RX_BROADCAST_PACKETS_GOOD_RXBCASTG_SHIFT)) & GMAC_RX_BROADCAST_PACKETS_GOOD_RXBCASTG_MASK)
/*! @} */

/*! @name RX_MULTICAST_PACKETS_GOOD -  */
/*! @{ */
#define GMAC_RX_MULTICAST_PACKETS_GOOD_RXMCASTG_MASK (0xFFFFFFFFU)
#define GMAC_RX_MULTICAST_PACKETS_GOOD_RXMCASTG_SHIFT (0U)
#define GMAC_RX_MULTICAST_PACKETS_GOOD_RXMCASTG_WIDTH (32U)
#define GMAC_RX_MULTICAST_PACKETS_GOOD_RXMCASTG(x) (((uint32_t)(((uint32_t)(x)) << GMAC_RX_MULTICAST_PACKETS_GOOD_RXMCASTG_SHIFT)) & GMAC_RX_MULTICAST_PACKETS_GOOD_RXMCASTG_MASK)
/*! @} */

/*! @name RX_CRC_ERROR_PACKETS -  */
/*! @{ */
#define GMAC_RX_CRC_ERROR_PACKETS_RXCRCERR_MASK  (0xFFFFFFFFU)
#define GMAC_RX_CRC_ERROR_PACKETS_RXCRCERR_SHIFT (0U)
#define GMAC_RX_CRC_ERROR_PACKETS_RXCRCERR_WIDTH (32U)
#define GMAC_RX_CRC_ERROR_PACKETS_RXCRCERR(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_RX_CRC_ERROR_PACKETS_RXCRCERR_SHIFT)) & GMAC_RX_CRC_ERROR_PACKETS_RXCRCERR_MASK)
/*! @} */

/*! @name RX_ALIGNMENT_ERROR_PACKETS -  */
/*! @{ */
#define GMAC_RX_ALIGNMENT_ERROR_PACKETS_RXALGNERR_MASK (0xFFFFFFFFU)
#define GMAC_RX_ALIGNMENT_ERROR_PACKETS_RXALGNERR_SHIFT (0U)
#define GMAC_RX_ALIGNMENT_ERROR_PACKETS_RXALGNERR_WIDTH (32U)
#define GMAC_RX_ALIGNMENT_ERROR_PACKETS_RXALGNERR(x) (((uint32_t)(((uint32_t)(x)) << GMAC_RX_ALIGNMENT_ERROR_PACKETS_RXALGNERR_SHIFT)) & GMAC_RX_ALIGNMENT_ERROR_PACKETS_RXALGNERR_MASK)
/*! @} */

/*! @name RX_RUNT_ERROR_PACKETS -  */
/*! @{ */
#define GMAC_RX_RUNT_ERROR_PACKETS_RXRUNTERR_MASK (0xFFFFFFFFU)
#define GMAC_RX_RUNT_ERROR_PACKETS_RXRUNTERR_SHIFT (0U)
#define GMAC_RX_RUNT_ERROR_PACKETS_RXRUNTERR_WIDTH (32U)
#define GMAC_RX_RUNT_ERROR_PACKETS_RXRUNTERR(x)  (((uint32_t)(((uint32_t)(x)) << GMAC_RX_RUNT_ERROR_PACKETS_RXRUNTERR_SHIFT)) & GMAC_RX_RUNT_ERROR_PACKETS_RXRUNTERR_MASK)
/*! @} */

/*! @name RX_JABBER_ERROR_PACKETS -  */
/*! @{ */
#define GMAC_RX_JABBER_ERROR_PACKETS_RXJABERR_MASK (0xFFFFFFFFU)
#define GMAC_RX_JABBER_ERROR_PACKETS_RXJABERR_SHIFT (0U)
#define GMAC_RX_JABBER_ERROR_PACKETS_RXJABERR_WIDTH (32U)
#define GMAC_RX_JABBER_ERROR_PACKETS_RXJABERR(x) (((uint32_t)(((uint32_t)(x)) << GMAC_RX_JABBER_ERROR_PACKETS_RXJABERR_SHIFT)) & GMAC_RX_JABBER_ERROR_PACKETS_RXJABERR_MASK)
/*! @} */

/*! @name RX_UNDERSIZE_PACKETS_GOOD -  */
/*! @{ */
#define GMAC_RX_UNDERSIZE_PACKETS_GOOD_RXUNDERSZG_MASK (0xFFFFFFFFU)
#define GMAC_RX_UNDERSIZE_PACKETS_GOOD_RXUNDERSZG_SHIFT (0U)
#define GMAC_RX_UNDERSIZE_PACKETS_GOOD_RXUNDERSZG_WIDTH (32U)
#define GMAC_RX_UNDERSIZE_PACKETS_GOOD_RXUNDERSZG(x) (((uint32_t)(((uint32_t)(x)) << GMAC_RX_UNDERSIZE_PACKETS_GOOD_RXUNDERSZG_SHIFT)) & GMAC_RX_UNDERSIZE_PACKETS_GOOD_RXUNDERSZG_MASK)
/*! @} */

/*! @name RX_OVERSIZE_PACKETS_GOOD -  */
/*! @{ */
#define GMAC_RX_OVERSIZE_PACKETS_GOOD_RXOVERSZG_MASK (0xFFFFFFFFU)
#define GMAC_RX_OVERSIZE_PACKETS_GOOD_RXOVERSZG_SHIFT (0U)
#define GMAC_RX_OVERSIZE_PACKETS_GOOD_RXOVERSZG_WIDTH (32U)
#define GMAC_RX_OVERSIZE_PACKETS_GOOD_RXOVERSZG(x) (((uint32_t)(((uint32_t)(x)) << GMAC_RX_OVERSIZE_PACKETS_GOOD_RXOVERSZG_SHIFT)) & GMAC_RX_OVERSIZE_PACKETS_GOOD_RXOVERSZG_MASK)
/*! @} */

/*! @name RX_64OCTETS_PACKETS_GOOD_BAD -  */
/*! @{ */
#define GMAC_RX_64OCTETS_PACKETS_GOOD_BAD_RX64OCTGB_MASK (0xFFFFFFFFU)
#define GMAC_RX_64OCTETS_PACKETS_GOOD_BAD_RX64OCTGB_SHIFT (0U)
#define GMAC_RX_64OCTETS_PACKETS_GOOD_BAD_RX64OCTGB_WIDTH (32U)
#define GMAC_RX_64OCTETS_PACKETS_GOOD_BAD_RX64OCTGB(x) (((uint32_t)(((uint32_t)(x)) << GMAC_RX_64OCTETS_PACKETS_GOOD_BAD_RX64OCTGB_SHIFT)) & GMAC_RX_64OCTETS_PACKETS_GOOD_BAD_RX64OCTGB_MASK)
/*! @} */

/*! @name RX_65TO127OCTETS_PACKETS_GOOD_BAD -  */
/*! @{ */
#define GMAC_RX_65TO127OCTETS_PACKETS_GOOD_BAD_RX65_127OCTGB_MASK (0xFFFFFFFFU)
#define GMAC_RX_65TO127OCTETS_PACKETS_GOOD_BAD_RX65_127OCTGB_SHIFT (0U)
#define GMAC_RX_65TO127OCTETS_PACKETS_GOOD_BAD_RX65_127OCTGB_WIDTH (32U)
#define GMAC_RX_65TO127OCTETS_PACKETS_GOOD_BAD_RX65_127OCTGB(x) (((uint32_t)(((uint32_t)(x)) << GMAC_RX_65TO127OCTETS_PACKETS_GOOD_BAD_RX65_127OCTGB_SHIFT)) & GMAC_RX_65TO127OCTETS_PACKETS_GOOD_BAD_RX65_127OCTGB_MASK)
/*! @} */

/*! @name RX_128TO255OCTETS_PACKETS_GOOD_BAD -  */
/*! @{ */
#define GMAC_RX_128TO255OCTETS_PACKETS_GOOD_BAD_RX128_255OCTGB_MASK (0xFFFFFFFFU)
#define GMAC_RX_128TO255OCTETS_PACKETS_GOOD_BAD_RX128_255OCTGB_SHIFT (0U)
#define GMAC_RX_128TO255OCTETS_PACKETS_GOOD_BAD_RX128_255OCTGB_WIDTH (32U)
#define GMAC_RX_128TO255OCTETS_PACKETS_GOOD_BAD_RX128_255OCTGB(x) (((uint32_t)(((uint32_t)(x)) << GMAC_RX_128TO255OCTETS_PACKETS_GOOD_BAD_RX128_255OCTGB_SHIFT)) & GMAC_RX_128TO255OCTETS_PACKETS_GOOD_BAD_RX128_255OCTGB_MASK)
/*! @} */

/*! @name RX_256TO511OCTETS_PACKETS_GOOD_BAD -  */
/*! @{ */
#define GMAC_RX_256TO511OCTETS_PACKETS_GOOD_BAD_RX256_511OCTGB_MASK (0xFFFFFFFFU)
#define GMAC_RX_256TO511OCTETS_PACKETS_GOOD_BAD_RX256_511OCTGB_SHIFT (0U)
#define GMAC_RX_256TO511OCTETS_PACKETS_GOOD_BAD_RX256_511OCTGB_WIDTH (32U)
#define GMAC_RX_256TO511OCTETS_PACKETS_GOOD_BAD_RX256_511OCTGB(x) (((uint32_t)(((uint32_t)(x)) << GMAC_RX_256TO511OCTETS_PACKETS_GOOD_BAD_RX256_511OCTGB_SHIFT)) & GMAC_RX_256TO511OCTETS_PACKETS_GOOD_BAD_RX256_511OCTGB_MASK)
/*! @} */

/*! @name RX_512TO1023OCTETS_PACKETS_GOOD_BAD -  */
/*! @{ */
#define GMAC_RX_512TO1023OCTETS_PACKETS_GOOD_BAD_RX512_1023OCTGB_MASK (0xFFFFFFFFU)
#define GMAC_RX_512TO1023OCTETS_PACKETS_GOOD_BAD_RX512_1023OCTGB_SHIFT (0U)
#define GMAC_RX_512TO1023OCTETS_PACKETS_GOOD_BAD_RX512_1023OCTGB_WIDTH (32U)
#define GMAC_RX_512TO1023OCTETS_PACKETS_GOOD_BAD_RX512_1023OCTGB(x) (((uint32_t)(((uint32_t)(x)) << GMAC_RX_512TO1023OCTETS_PACKETS_GOOD_BAD_RX512_1023OCTGB_SHIFT)) & GMAC_RX_512TO1023OCTETS_PACKETS_GOOD_BAD_RX512_1023OCTGB_MASK)
/*! @} */

/*! @name RX_1024TOMAXOCTETS_PACKETS_GOOD_BAD -  */
/*! @{ */
#define GMAC_RX_1024TOMAXOCTETS_PACKETS_GOOD_BAD_RX1024_MAXOCTGB_MASK (0xFFFFFFFFU)
#define GMAC_RX_1024TOMAXOCTETS_PACKETS_GOOD_BAD_RX1024_MAXOCTGB_SHIFT (0U)
#define GMAC_RX_1024TOMAXOCTETS_PACKETS_GOOD_BAD_RX1024_MAXOCTGB_WIDTH (32U)
#define GMAC_RX_1024TOMAXOCTETS_PACKETS_GOOD_BAD_RX1024_MAXOCTGB(x) (((uint32_t)(((uint32_t)(x)) << GMAC_RX_1024TOMAXOCTETS_PACKETS_GOOD_BAD_RX1024_MAXOCTGB_SHIFT)) & GMAC_RX_1024TOMAXOCTETS_PACKETS_GOOD_BAD_RX1024_MAXOCTGB_MASK)
/*! @} */

/*! @name RX_UNICAST_PACKETS_GOOD -  */
/*! @{ */
#define GMAC_RX_UNICAST_PACKETS_GOOD_RXUCASTG_MASK (0xFFFFFFFFU)
#define GMAC_RX_UNICAST_PACKETS_GOOD_RXUCASTG_SHIFT (0U)
#define GMAC_RX_UNICAST_PACKETS_GOOD_RXUCASTG_WIDTH (32U)
#define GMAC_RX_UNICAST_PACKETS_GOOD_RXUCASTG(x) (((uint32_t)(((uint32_t)(x)) << GMAC_RX_UNICAST_PACKETS_GOOD_RXUCASTG_SHIFT)) & GMAC_RX_UNICAST_PACKETS_GOOD_RXUCASTG_MASK)
/*! @} */

/*! @name RX_LENGTH_ERROR_PACKETS -  */
/*! @{ */
#define GMAC_RX_LENGTH_ERROR_PACKETS_RXLENERR_MASK (0xFFFFFFFFU)
#define GMAC_RX_LENGTH_ERROR_PACKETS_RXLENERR_SHIFT (0U)
#define GMAC_RX_LENGTH_ERROR_PACKETS_RXLENERR_WIDTH (32U)
#define GMAC_RX_LENGTH_ERROR_PACKETS_RXLENERR(x) (((uint32_t)(((uint32_t)(x)) << GMAC_RX_LENGTH_ERROR_PACKETS_RXLENERR_SHIFT)) & GMAC_RX_LENGTH_ERROR_PACKETS_RXLENERR_MASK)
/*! @} */

/*! @name RX_OUT_OF_RANGE_TYPE_PACKETS -  */
/*! @{ */
#define GMAC_RX_OUT_OF_RANGE_TYPE_PACKETS_RXOUTOFRNG_MASK (0xFFFFFFFFU)
#define GMAC_RX_OUT_OF_RANGE_TYPE_PACKETS_RXOUTOFRNG_SHIFT (0U)
#define GMAC_RX_OUT_OF_RANGE_TYPE_PACKETS_RXOUTOFRNG_WIDTH (32U)
#define GMAC_RX_OUT_OF_RANGE_TYPE_PACKETS_RXOUTOFRNG(x) (((uint32_t)(((uint32_t)(x)) << GMAC_RX_OUT_OF_RANGE_TYPE_PACKETS_RXOUTOFRNG_SHIFT)) & GMAC_RX_OUT_OF_RANGE_TYPE_PACKETS_RXOUTOFRNG_MASK)
/*! @} */

/*! @name RX_PAUSE_PACKETS -  */
/*! @{ */
#define GMAC_RX_PAUSE_PACKETS_RXPAUSEPKT_MASK    (0xFFFFFFFFU)
#define GMAC_RX_PAUSE_PACKETS_RXPAUSEPKT_SHIFT   (0U)
#define GMAC_RX_PAUSE_PACKETS_RXPAUSEPKT_WIDTH   (32U)
#define GMAC_RX_PAUSE_PACKETS_RXPAUSEPKT(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_RX_PAUSE_PACKETS_RXPAUSEPKT_SHIFT)) & GMAC_RX_PAUSE_PACKETS_RXPAUSEPKT_MASK)
/*! @} */

/*! @name RX_FIFO_OVERFLOW_PACKETS -  */
/*! @{ */
#define GMAC_RX_FIFO_OVERFLOW_PACKETS_RXFIFOOVFL_MASK (0xFFFFFFFFU)
#define GMAC_RX_FIFO_OVERFLOW_PACKETS_RXFIFOOVFL_SHIFT (0U)
#define GMAC_RX_FIFO_OVERFLOW_PACKETS_RXFIFOOVFL_WIDTH (32U)
#define GMAC_RX_FIFO_OVERFLOW_PACKETS_RXFIFOOVFL(x) (((uint32_t)(((uint32_t)(x)) << GMAC_RX_FIFO_OVERFLOW_PACKETS_RXFIFOOVFL_SHIFT)) & GMAC_RX_FIFO_OVERFLOW_PACKETS_RXFIFOOVFL_MASK)
/*! @} */

/*! @name RX_VLAN_PACKETS_GOOD_BAD -  */
/*! @{ */
#define GMAC_RX_VLAN_PACKETS_GOOD_BAD_RXVLANPKTGB_MASK (0xFFFFFFFFU)
#define GMAC_RX_VLAN_PACKETS_GOOD_BAD_RXVLANPKTGB_SHIFT (0U)
#define GMAC_RX_VLAN_PACKETS_GOOD_BAD_RXVLANPKTGB_WIDTH (32U)
#define GMAC_RX_VLAN_PACKETS_GOOD_BAD_RXVLANPKTGB(x) (((uint32_t)(((uint32_t)(x)) << GMAC_RX_VLAN_PACKETS_GOOD_BAD_RXVLANPKTGB_SHIFT)) & GMAC_RX_VLAN_PACKETS_GOOD_BAD_RXVLANPKTGB_MASK)
/*! @} */

/*! @name RX_WATCHDOG_ERROR_PACKETS -  */
/*! @{ */
#define GMAC_RX_WATCHDOG_ERROR_PACKETS_RXWDGERR_MASK (0xFFFFFFFFU)
#define GMAC_RX_WATCHDOG_ERROR_PACKETS_RXWDGERR_SHIFT (0U)
#define GMAC_RX_WATCHDOG_ERROR_PACKETS_RXWDGERR_WIDTH (32U)
#define GMAC_RX_WATCHDOG_ERROR_PACKETS_RXWDGERR(x) (((uint32_t)(((uint32_t)(x)) << GMAC_RX_WATCHDOG_ERROR_PACKETS_RXWDGERR_SHIFT)) & GMAC_RX_WATCHDOG_ERROR_PACKETS_RXWDGERR_MASK)
/*! @} */

/*! @name RX_RECEIVE_ERROR_PACKETS -  */
/*! @{ */
#define GMAC_RX_RECEIVE_ERROR_PACKETS_RXRCVERR_MASK (0xFFFFFFFFU)
#define GMAC_RX_RECEIVE_ERROR_PACKETS_RXRCVERR_SHIFT (0U)
#define GMAC_RX_RECEIVE_ERROR_PACKETS_RXRCVERR_WIDTH (32U)
#define GMAC_RX_RECEIVE_ERROR_PACKETS_RXRCVERR(x) (((uint32_t)(((uint32_t)(x)) << GMAC_RX_RECEIVE_ERROR_PACKETS_RXRCVERR_SHIFT)) & GMAC_RX_RECEIVE_ERROR_PACKETS_RXRCVERR_MASK)
/*! @} */

/*! @name RX_CONTROL_PACKETS_GOOD -  */
/*! @{ */
#define GMAC_RX_CONTROL_PACKETS_GOOD_RXCTRLG_MASK (0xFFFFFFFFU)
#define GMAC_RX_CONTROL_PACKETS_GOOD_RXCTRLG_SHIFT (0U)
#define GMAC_RX_CONTROL_PACKETS_GOOD_RXCTRLG_WIDTH (32U)
#define GMAC_RX_CONTROL_PACKETS_GOOD_RXCTRLG(x)  (((uint32_t)(((uint32_t)(x)) << GMAC_RX_CONTROL_PACKETS_GOOD_RXCTRLG_SHIFT)) & GMAC_RX_CONTROL_PACKETS_GOOD_RXCTRLG_MASK)
/*! @} */

/*! @name MMC_FPE_TX_INTERRUPT -  */
/*! @{ */
#define GMAC_MMC_FPE_TX_INTERRUPT_FCIS_MASK      (0x1U)
#define GMAC_MMC_FPE_TX_INTERRUPT_FCIS_SHIFT     (0U)
#define GMAC_MMC_FPE_TX_INTERRUPT_FCIS_WIDTH     (1U)
#define GMAC_MMC_FPE_TX_INTERRUPT_FCIS(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_FPE_TX_INTERRUPT_FCIS_SHIFT)) & GMAC_MMC_FPE_TX_INTERRUPT_FCIS_MASK)
#define GMAC_MMC_FPE_TX_INTERRUPT_HRCIS_MASK     (0x2U)
#define GMAC_MMC_FPE_TX_INTERRUPT_HRCIS_SHIFT    (1U)
#define GMAC_MMC_FPE_TX_INTERRUPT_HRCIS_WIDTH    (1U)
#define GMAC_MMC_FPE_TX_INTERRUPT_HRCIS(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_FPE_TX_INTERRUPT_HRCIS_SHIFT)) & GMAC_MMC_FPE_TX_INTERRUPT_HRCIS_MASK)
/*! @} */

/*! @name MMC_FPE_TX_INTERRUPT_MASK -  */
/*! @{ */
#define GMAC_MMC_FPE_TX_INTERRUPT_MASK_FCIM_MASK (0x1U)
#define GMAC_MMC_FPE_TX_INTERRUPT_MASK_FCIM_SHIFT (0U)
#define GMAC_MMC_FPE_TX_INTERRUPT_MASK_FCIM_WIDTH (1U)
#define GMAC_MMC_FPE_TX_INTERRUPT_MASK_FCIM(x)   (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_FPE_TX_INTERRUPT_MASK_FCIM_SHIFT)) & GMAC_MMC_FPE_TX_INTERRUPT_MASK_FCIM_MASK)
#define GMAC_MMC_FPE_TX_INTERRUPT_MASK_HRCIM_MASK (0x2U)
#define GMAC_MMC_FPE_TX_INTERRUPT_MASK_HRCIM_SHIFT (1U)
#define GMAC_MMC_FPE_TX_INTERRUPT_MASK_HRCIM_WIDTH (1U)
#define GMAC_MMC_FPE_TX_INTERRUPT_MASK_HRCIM(x)  (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_FPE_TX_INTERRUPT_MASK_HRCIM_SHIFT)) & GMAC_MMC_FPE_TX_INTERRUPT_MASK_HRCIM_MASK)
/*! @} */

/*! @name MMC_TX_FPE_FRAGMENT_CNTR -  */
/*! @{ */
#define GMAC_MMC_TX_FPE_FRAGMENT_CNTR_TXFFC_MASK (0xFFFFFFFFU)
#define GMAC_MMC_TX_FPE_FRAGMENT_CNTR_TXFFC_SHIFT (0U)
#define GMAC_MMC_TX_FPE_FRAGMENT_CNTR_TXFFC_WIDTH (32U)
#define GMAC_MMC_TX_FPE_FRAGMENT_CNTR_TXFFC(x)   (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_TX_FPE_FRAGMENT_CNTR_TXFFC_SHIFT)) & GMAC_MMC_TX_FPE_FRAGMENT_CNTR_TXFFC_MASK)
/*! @} */

/*! @name MMC_TX_HOLD_REQ_CNTR -  */
/*! @{ */
#define GMAC_MMC_TX_HOLD_REQ_CNTR_TXHRC_MASK     (0xFFFFFFFFU)
#define GMAC_MMC_TX_HOLD_REQ_CNTR_TXHRC_SHIFT    (0U)
#define GMAC_MMC_TX_HOLD_REQ_CNTR_TXHRC_WIDTH    (32U)
#define GMAC_MMC_TX_HOLD_REQ_CNTR_TXHRC(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_TX_HOLD_REQ_CNTR_TXHRC_SHIFT)) & GMAC_MMC_TX_HOLD_REQ_CNTR_TXHRC_MASK)
/*! @} */

/*! @name MMC_FPE_RX_INTERRUPT -  */
/*! @{ */
#define GMAC_MMC_FPE_RX_INTERRUPT_PAECIS_MASK    (0x1U)
#define GMAC_MMC_FPE_RX_INTERRUPT_PAECIS_SHIFT   (0U)
#define GMAC_MMC_FPE_RX_INTERRUPT_PAECIS_WIDTH   (1U)
#define GMAC_MMC_FPE_RX_INTERRUPT_PAECIS(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_FPE_RX_INTERRUPT_PAECIS_SHIFT)) & GMAC_MMC_FPE_RX_INTERRUPT_PAECIS_MASK)
#define GMAC_MMC_FPE_RX_INTERRUPT_PSECIS_MASK    (0x2U)
#define GMAC_MMC_FPE_RX_INTERRUPT_PSECIS_SHIFT   (1U)
#define GMAC_MMC_FPE_RX_INTERRUPT_PSECIS_WIDTH   (1U)
#define GMAC_MMC_FPE_RX_INTERRUPT_PSECIS(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_FPE_RX_INTERRUPT_PSECIS_SHIFT)) & GMAC_MMC_FPE_RX_INTERRUPT_PSECIS_MASK)
#define GMAC_MMC_FPE_RX_INTERRUPT_PAOCIS_MASK    (0x4U)
#define GMAC_MMC_FPE_RX_INTERRUPT_PAOCIS_SHIFT   (2U)
#define GMAC_MMC_FPE_RX_INTERRUPT_PAOCIS_WIDTH   (1U)
#define GMAC_MMC_FPE_RX_INTERRUPT_PAOCIS(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_FPE_RX_INTERRUPT_PAOCIS_SHIFT)) & GMAC_MMC_FPE_RX_INTERRUPT_PAOCIS_MASK)
#define GMAC_MMC_FPE_RX_INTERRUPT_FCIS_MASK      (0x8U)
#define GMAC_MMC_FPE_RX_INTERRUPT_FCIS_SHIFT     (3U)
#define GMAC_MMC_FPE_RX_INTERRUPT_FCIS_WIDTH     (1U)
#define GMAC_MMC_FPE_RX_INTERRUPT_FCIS(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_FPE_RX_INTERRUPT_FCIS_SHIFT)) & GMAC_MMC_FPE_RX_INTERRUPT_FCIS_MASK)
/*! @} */

/*! @name MMC_FPE_RX_INTERRUPT_MASK -  */
/*! @{ */
#define GMAC_MMC_FPE_RX_INTERRUPT_MASK_PAECIM_MASK (0x1U)
#define GMAC_MMC_FPE_RX_INTERRUPT_MASK_PAECIM_SHIFT (0U)
#define GMAC_MMC_FPE_RX_INTERRUPT_MASK_PAECIM_WIDTH (1U)
#define GMAC_MMC_FPE_RX_INTERRUPT_MASK_PAECIM(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_FPE_RX_INTERRUPT_MASK_PAECIM_SHIFT)) & GMAC_MMC_FPE_RX_INTERRUPT_MASK_PAECIM_MASK)
#define GMAC_MMC_FPE_RX_INTERRUPT_MASK_PSECIM_MASK (0x2U)
#define GMAC_MMC_FPE_RX_INTERRUPT_MASK_PSECIM_SHIFT (1U)
#define GMAC_MMC_FPE_RX_INTERRUPT_MASK_PSECIM_WIDTH (1U)
#define GMAC_MMC_FPE_RX_INTERRUPT_MASK_PSECIM(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_FPE_RX_INTERRUPT_MASK_PSECIM_SHIFT)) & GMAC_MMC_FPE_RX_INTERRUPT_MASK_PSECIM_MASK)
#define GMAC_MMC_FPE_RX_INTERRUPT_MASK_PAOCIM_MASK (0x4U)
#define GMAC_MMC_FPE_RX_INTERRUPT_MASK_PAOCIM_SHIFT (2U)
#define GMAC_MMC_FPE_RX_INTERRUPT_MASK_PAOCIM_WIDTH (1U)
#define GMAC_MMC_FPE_RX_INTERRUPT_MASK_PAOCIM(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_FPE_RX_INTERRUPT_MASK_PAOCIM_SHIFT)) & GMAC_MMC_FPE_RX_INTERRUPT_MASK_PAOCIM_MASK)
#define GMAC_MMC_FPE_RX_INTERRUPT_MASK_FCIM_MASK (0x8U)
#define GMAC_MMC_FPE_RX_INTERRUPT_MASK_FCIM_SHIFT (3U)
#define GMAC_MMC_FPE_RX_INTERRUPT_MASK_FCIM_WIDTH (1U)
#define GMAC_MMC_FPE_RX_INTERRUPT_MASK_FCIM(x)   (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_FPE_RX_INTERRUPT_MASK_FCIM_SHIFT)) & GMAC_MMC_FPE_RX_INTERRUPT_MASK_FCIM_MASK)
/*! @} */

/*! @name MMC_RX_PACKET_ASSEMBLY_ERR_CNTR -  */
/*! @{ */
#define GMAC_MMC_RX_PACKET_ASSEMBLY_ERR_CNTR_PAEC_MASK (0xFFFFFFFFU)
#define GMAC_MMC_RX_PACKET_ASSEMBLY_ERR_CNTR_PAEC_SHIFT (0U)
#define GMAC_MMC_RX_PACKET_ASSEMBLY_ERR_CNTR_PAEC_WIDTH (32U)
#define GMAC_MMC_RX_PACKET_ASSEMBLY_ERR_CNTR_PAEC(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_RX_PACKET_ASSEMBLY_ERR_CNTR_PAEC_SHIFT)) & GMAC_MMC_RX_PACKET_ASSEMBLY_ERR_CNTR_PAEC_MASK)
/*! @} */

/*! @name MMC_RX_PACKET_SMD_ERR_CNTR -  */
/*! @{ */
#define GMAC_MMC_RX_PACKET_SMD_ERR_CNTR_PSEC_MASK (0xFFFFFFFFU)
#define GMAC_MMC_RX_PACKET_SMD_ERR_CNTR_PSEC_SHIFT (0U)
#define GMAC_MMC_RX_PACKET_SMD_ERR_CNTR_PSEC_WIDTH (32U)
#define GMAC_MMC_RX_PACKET_SMD_ERR_CNTR_PSEC(x)  (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_RX_PACKET_SMD_ERR_CNTR_PSEC_SHIFT)) & GMAC_MMC_RX_PACKET_SMD_ERR_CNTR_PSEC_MASK)
/*! @} */

/*! @name MMC_RX_PACKET_ASSEMBLY_OK_CNTR -  */
/*! @{ */
#define GMAC_MMC_RX_PACKET_ASSEMBLY_OK_CNTR_PAOC_MASK (0xFFFFFFFFU)
#define GMAC_MMC_RX_PACKET_ASSEMBLY_OK_CNTR_PAOC_SHIFT (0U)
#define GMAC_MMC_RX_PACKET_ASSEMBLY_OK_CNTR_PAOC_WIDTH (32U)
#define GMAC_MMC_RX_PACKET_ASSEMBLY_OK_CNTR_PAOC(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_RX_PACKET_ASSEMBLY_OK_CNTR_PAOC_SHIFT)) & GMAC_MMC_RX_PACKET_ASSEMBLY_OK_CNTR_PAOC_MASK)
/*! @} */

/*! @name MMC_RX_FPE_FRAGMENT_CNTR -  */
/*! @{ */
#define GMAC_MMC_RX_FPE_FRAGMENT_CNTR_FFC_MASK   (0xFFFFFFFFU)
#define GMAC_MMC_RX_FPE_FRAGMENT_CNTR_FFC_SHIFT  (0U)
#define GMAC_MMC_RX_FPE_FRAGMENT_CNTR_FFC_WIDTH  (32U)
#define GMAC_MMC_RX_FPE_FRAGMENT_CNTR_FFC(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_MMC_RX_FPE_FRAGMENT_CNTR_FFC_SHIFT)) & GMAC_MMC_RX_FPE_FRAGMENT_CNTR_FFC_MASK)
/*! @} */

/*! @name MAC_L3_L4_CONTROL0 -  */
/*! @{ */
#define GMAC_MAC_L3_L4_CONTROL0_L3PEN0_MASK      (0x1U)
#define GMAC_MAC_L3_L4_CONTROL0_L3PEN0_SHIFT     (0U)
#define GMAC_MAC_L3_L4_CONTROL0_L3PEN0_WIDTH     (1U)
#define GMAC_MAC_L3_L4_CONTROL0_L3PEN0(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL0_L3PEN0_SHIFT)) & GMAC_MAC_L3_L4_CONTROL0_L3PEN0_MASK)
#define GMAC_MAC_L3_L4_CONTROL0_L3SAM0_MASK      (0x4U)
#define GMAC_MAC_L3_L4_CONTROL0_L3SAM0_SHIFT     (2U)
#define GMAC_MAC_L3_L4_CONTROL0_L3SAM0_WIDTH     (1U)
#define GMAC_MAC_L3_L4_CONTROL0_L3SAM0(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL0_L3SAM0_SHIFT)) & GMAC_MAC_L3_L4_CONTROL0_L3SAM0_MASK)
#define GMAC_MAC_L3_L4_CONTROL0_L3SAIM0_MASK     (0x8U)
#define GMAC_MAC_L3_L4_CONTROL0_L3SAIM0_SHIFT    (3U)
#define GMAC_MAC_L3_L4_CONTROL0_L3SAIM0_WIDTH    (1U)
#define GMAC_MAC_L3_L4_CONTROL0_L3SAIM0(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL0_L3SAIM0_SHIFT)) & GMAC_MAC_L3_L4_CONTROL0_L3SAIM0_MASK)
#define GMAC_MAC_L3_L4_CONTROL0_L3DAM0_MASK      (0x10U)
#define GMAC_MAC_L3_L4_CONTROL0_L3DAM0_SHIFT     (4U)
#define GMAC_MAC_L3_L4_CONTROL0_L3DAM0_WIDTH     (1U)
#define GMAC_MAC_L3_L4_CONTROL0_L3DAM0(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL0_L3DAM0_SHIFT)) & GMAC_MAC_L3_L4_CONTROL0_L3DAM0_MASK)
#define GMAC_MAC_L3_L4_CONTROL0_L3DAIM0_MASK     (0x20U)
#define GMAC_MAC_L3_L4_CONTROL0_L3DAIM0_SHIFT    (5U)
#define GMAC_MAC_L3_L4_CONTROL0_L3DAIM0_WIDTH    (1U)
#define GMAC_MAC_L3_L4_CONTROL0_L3DAIM0(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL0_L3DAIM0_SHIFT)) & GMAC_MAC_L3_L4_CONTROL0_L3DAIM0_MASK)
#define GMAC_MAC_L3_L4_CONTROL0_L3HSBM0_MASK     (0x7C0U)
#define GMAC_MAC_L3_L4_CONTROL0_L3HSBM0_SHIFT    (6U)
#define GMAC_MAC_L3_L4_CONTROL0_L3HSBM0_WIDTH    (5U)
#define GMAC_MAC_L3_L4_CONTROL0_L3HSBM0(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL0_L3HSBM0_SHIFT)) & GMAC_MAC_L3_L4_CONTROL0_L3HSBM0_MASK)
#define GMAC_MAC_L3_L4_CONTROL0_L3HDBM0_MASK     (0xF800U)
#define GMAC_MAC_L3_L4_CONTROL0_L3HDBM0_SHIFT    (11U)
#define GMAC_MAC_L3_L4_CONTROL0_L3HDBM0_WIDTH    (5U)
#define GMAC_MAC_L3_L4_CONTROL0_L3HDBM0(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL0_L3HDBM0_SHIFT)) & GMAC_MAC_L3_L4_CONTROL0_L3HDBM0_MASK)
#define GMAC_MAC_L3_L4_CONTROL0_L4PEN0_MASK      (0x10000U)
#define GMAC_MAC_L3_L4_CONTROL0_L4PEN0_SHIFT     (16U)
#define GMAC_MAC_L3_L4_CONTROL0_L4PEN0_WIDTH     (1U)
#define GMAC_MAC_L3_L4_CONTROL0_L4PEN0(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL0_L4PEN0_SHIFT)) & GMAC_MAC_L3_L4_CONTROL0_L4PEN0_MASK)
#define GMAC_MAC_L3_L4_CONTROL0_L4SPM0_MASK      (0x40000U)
#define GMAC_MAC_L3_L4_CONTROL0_L4SPM0_SHIFT     (18U)
#define GMAC_MAC_L3_L4_CONTROL0_L4SPM0_WIDTH     (1U)
#define GMAC_MAC_L3_L4_CONTROL0_L4SPM0(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL0_L4SPM0_SHIFT)) & GMAC_MAC_L3_L4_CONTROL0_L4SPM0_MASK)
#define GMAC_MAC_L3_L4_CONTROL0_L4SPIM0_MASK     (0x80000U)
#define GMAC_MAC_L3_L4_CONTROL0_L4SPIM0_SHIFT    (19U)
#define GMAC_MAC_L3_L4_CONTROL0_L4SPIM0_WIDTH    (1U)
#define GMAC_MAC_L3_L4_CONTROL0_L4SPIM0(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL0_L4SPIM0_SHIFT)) & GMAC_MAC_L3_L4_CONTROL0_L4SPIM0_MASK)
#define GMAC_MAC_L3_L4_CONTROL0_L4DPM0_MASK      (0x100000U)
#define GMAC_MAC_L3_L4_CONTROL0_L4DPM0_SHIFT     (20U)
#define GMAC_MAC_L3_L4_CONTROL0_L4DPM0_WIDTH     (1U)
#define GMAC_MAC_L3_L4_CONTROL0_L4DPM0(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL0_L4DPM0_SHIFT)) & GMAC_MAC_L3_L4_CONTROL0_L4DPM0_MASK)
#define GMAC_MAC_L3_L4_CONTROL0_L4DPIM0_MASK     (0x200000U)
#define GMAC_MAC_L3_L4_CONTROL0_L4DPIM0_SHIFT    (21U)
#define GMAC_MAC_L3_L4_CONTROL0_L4DPIM0_WIDTH    (1U)
#define GMAC_MAC_L3_L4_CONTROL0_L4DPIM0(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL0_L4DPIM0_SHIFT)) & GMAC_MAC_L3_L4_CONTROL0_L4DPIM0_MASK)
#define GMAC_MAC_L3_L4_CONTROL0_DMCHN0_MASK      (0x7000000U)
#define GMAC_MAC_L3_L4_CONTROL0_DMCHN0_SHIFT     (24U)
#define GMAC_MAC_L3_L4_CONTROL0_DMCHN0_WIDTH     (3U)
#define GMAC_MAC_L3_L4_CONTROL0_DMCHN0(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL0_DMCHN0_SHIFT)) & GMAC_MAC_L3_L4_CONTROL0_DMCHN0_MASK)
#define GMAC_MAC_L3_L4_CONTROL0_DMCHEN0_MASK     (0x10000000U)
#define GMAC_MAC_L3_L4_CONTROL0_DMCHEN0_SHIFT    (28U)
#define GMAC_MAC_L3_L4_CONTROL0_DMCHEN0_WIDTH    (1U)
#define GMAC_MAC_L3_L4_CONTROL0_DMCHEN0(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL0_DMCHEN0_SHIFT)) & GMAC_MAC_L3_L4_CONTROL0_DMCHEN0_MASK)
/*! @} */

/*! @name MAC_LAYER4_ADDRESS0 -  */
/*! @{ */
#define GMAC_MAC_LAYER4_ADDRESS0_L4SP0_MASK      (0xFFFFU)
#define GMAC_MAC_LAYER4_ADDRESS0_L4SP0_SHIFT     (0U)
#define GMAC_MAC_LAYER4_ADDRESS0_L4SP0_WIDTH     (16U)
#define GMAC_MAC_LAYER4_ADDRESS0_L4SP0(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_LAYER4_ADDRESS0_L4SP0_SHIFT)) & GMAC_MAC_LAYER4_ADDRESS0_L4SP0_MASK)
#define GMAC_MAC_LAYER4_ADDRESS0_L4DP0_MASK      (0xFFFF0000U)
#define GMAC_MAC_LAYER4_ADDRESS0_L4DP0_SHIFT     (16U)
#define GMAC_MAC_LAYER4_ADDRESS0_L4DP0_WIDTH     (16U)
#define GMAC_MAC_LAYER4_ADDRESS0_L4DP0(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_LAYER4_ADDRESS0_L4DP0_SHIFT)) & GMAC_MAC_LAYER4_ADDRESS0_L4DP0_MASK)
/*! @} */

/*! @name MAC_LAYER3_ADDR0_REG0 -  */
/*! @{ */
#define GMAC_MAC_LAYER3_ADDR0_REG0_L3A00_MASK    (0xFFFFFFFFU)
#define GMAC_MAC_LAYER3_ADDR0_REG0_L3A00_SHIFT   (0U)
#define GMAC_MAC_LAYER3_ADDR0_REG0_L3A00_WIDTH   (32U)
#define GMAC_MAC_LAYER3_ADDR0_REG0_L3A00(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_LAYER3_ADDR0_REG0_L3A00_SHIFT)) & GMAC_MAC_LAYER3_ADDR0_REG0_L3A00_MASK)
/*! @} */

/*! @name MAC_LAYER3_ADDR1_REG0 -  */
/*! @{ */
#define GMAC_MAC_LAYER3_ADDR1_REG0_L3A10_MASK    (0xFFFFFFFFU)
#define GMAC_MAC_LAYER3_ADDR1_REG0_L3A10_SHIFT   (0U)
#define GMAC_MAC_LAYER3_ADDR1_REG0_L3A10_WIDTH   (32U)
#define GMAC_MAC_LAYER3_ADDR1_REG0_L3A10(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_LAYER3_ADDR1_REG0_L3A10_SHIFT)) & GMAC_MAC_LAYER3_ADDR1_REG0_L3A10_MASK)
/*! @} */

/*! @name MAC_LAYER3_ADDR2_REG0 -  */
/*! @{ */
#define GMAC_MAC_LAYER3_ADDR2_REG0_L3A20_MASK    (0xFFFFFFFFU)
#define GMAC_MAC_LAYER3_ADDR2_REG0_L3A20_SHIFT   (0U)
#define GMAC_MAC_LAYER3_ADDR2_REG0_L3A20_WIDTH   (32U)
#define GMAC_MAC_LAYER3_ADDR2_REG0_L3A20(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_LAYER3_ADDR2_REG0_L3A20_SHIFT)) & GMAC_MAC_LAYER3_ADDR2_REG0_L3A20_MASK)
/*! @} */

/*! @name MAC_LAYER3_ADDR3_REG0 -  */
/*! @{ */
#define GMAC_MAC_LAYER3_ADDR3_REG0_L3A30_MASK    (0xFFFFFFFFU)
#define GMAC_MAC_LAYER3_ADDR3_REG0_L3A30_SHIFT   (0U)
#define GMAC_MAC_LAYER3_ADDR3_REG0_L3A30_WIDTH   (32U)
#define GMAC_MAC_LAYER3_ADDR3_REG0_L3A30(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_LAYER3_ADDR3_REG0_L3A30_SHIFT)) & GMAC_MAC_LAYER3_ADDR3_REG0_L3A30_MASK)
/*! @} */

/*! @name MAC_L3_L4_CONTROL1 -  */
/*! @{ */
#define GMAC_MAC_L3_L4_CONTROL1_L3PEN1_MASK      (0x1U)
#define GMAC_MAC_L3_L4_CONTROL1_L3PEN1_SHIFT     (0U)
#define GMAC_MAC_L3_L4_CONTROL1_L3PEN1_WIDTH     (1U)
#define GMAC_MAC_L3_L4_CONTROL1_L3PEN1(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL1_L3PEN1_SHIFT)) & GMAC_MAC_L3_L4_CONTROL1_L3PEN1_MASK)
#define GMAC_MAC_L3_L4_CONTROL1_L3SAM1_MASK      (0x4U)
#define GMAC_MAC_L3_L4_CONTROL1_L3SAM1_SHIFT     (2U)
#define GMAC_MAC_L3_L4_CONTROL1_L3SAM1_WIDTH     (1U)
#define GMAC_MAC_L3_L4_CONTROL1_L3SAM1(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL1_L3SAM1_SHIFT)) & GMAC_MAC_L3_L4_CONTROL1_L3SAM1_MASK)
#define GMAC_MAC_L3_L4_CONTROL1_L3SAIM1_MASK     (0x8U)
#define GMAC_MAC_L3_L4_CONTROL1_L3SAIM1_SHIFT    (3U)
#define GMAC_MAC_L3_L4_CONTROL1_L3SAIM1_WIDTH    (1U)
#define GMAC_MAC_L3_L4_CONTROL1_L3SAIM1(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL1_L3SAIM1_SHIFT)) & GMAC_MAC_L3_L4_CONTROL1_L3SAIM1_MASK)
#define GMAC_MAC_L3_L4_CONTROL1_L3DAM1_MASK      (0x10U)
#define GMAC_MAC_L3_L4_CONTROL1_L3DAM1_SHIFT     (4U)
#define GMAC_MAC_L3_L4_CONTROL1_L3DAM1_WIDTH     (1U)
#define GMAC_MAC_L3_L4_CONTROL1_L3DAM1(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL1_L3DAM1_SHIFT)) & GMAC_MAC_L3_L4_CONTROL1_L3DAM1_MASK)
#define GMAC_MAC_L3_L4_CONTROL1_L3DAIM1_MASK     (0x20U)
#define GMAC_MAC_L3_L4_CONTROL1_L3DAIM1_SHIFT    (5U)
#define GMAC_MAC_L3_L4_CONTROL1_L3DAIM1_WIDTH    (1U)
#define GMAC_MAC_L3_L4_CONTROL1_L3DAIM1(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL1_L3DAIM1_SHIFT)) & GMAC_MAC_L3_L4_CONTROL1_L3DAIM1_MASK)
#define GMAC_MAC_L3_L4_CONTROL1_L3HSBM1_MASK     (0x7C0U)
#define GMAC_MAC_L3_L4_CONTROL1_L3HSBM1_SHIFT    (6U)
#define GMAC_MAC_L3_L4_CONTROL1_L3HSBM1_WIDTH    (5U)
#define GMAC_MAC_L3_L4_CONTROL1_L3HSBM1(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL1_L3HSBM1_SHIFT)) & GMAC_MAC_L3_L4_CONTROL1_L3HSBM1_MASK)
#define GMAC_MAC_L3_L4_CONTROL1_L3HDBM1_MASK     (0xF800U)
#define GMAC_MAC_L3_L4_CONTROL1_L3HDBM1_SHIFT    (11U)
#define GMAC_MAC_L3_L4_CONTROL1_L3HDBM1_WIDTH    (5U)
#define GMAC_MAC_L3_L4_CONTROL1_L3HDBM1(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL1_L3HDBM1_SHIFT)) & GMAC_MAC_L3_L4_CONTROL1_L3HDBM1_MASK)
#define GMAC_MAC_L3_L4_CONTROL1_L4PEN1_MASK      (0x10000U)
#define GMAC_MAC_L3_L4_CONTROL1_L4PEN1_SHIFT     (16U)
#define GMAC_MAC_L3_L4_CONTROL1_L4PEN1_WIDTH     (1U)
#define GMAC_MAC_L3_L4_CONTROL1_L4PEN1(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL1_L4PEN1_SHIFT)) & GMAC_MAC_L3_L4_CONTROL1_L4PEN1_MASK)
#define GMAC_MAC_L3_L4_CONTROL1_L4SPM1_MASK      (0x40000U)
#define GMAC_MAC_L3_L4_CONTROL1_L4SPM1_SHIFT     (18U)
#define GMAC_MAC_L3_L4_CONTROL1_L4SPM1_WIDTH     (1U)
#define GMAC_MAC_L3_L4_CONTROL1_L4SPM1(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL1_L4SPM1_SHIFT)) & GMAC_MAC_L3_L4_CONTROL1_L4SPM1_MASK)
#define GMAC_MAC_L3_L4_CONTROL1_L4SPIM1_MASK     (0x80000U)
#define GMAC_MAC_L3_L4_CONTROL1_L4SPIM1_SHIFT    (19U)
#define GMAC_MAC_L3_L4_CONTROL1_L4SPIM1_WIDTH    (1U)
#define GMAC_MAC_L3_L4_CONTROL1_L4SPIM1(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL1_L4SPIM1_SHIFT)) & GMAC_MAC_L3_L4_CONTROL1_L4SPIM1_MASK)
#define GMAC_MAC_L3_L4_CONTROL1_L4DPM1_MASK      (0x100000U)
#define GMAC_MAC_L3_L4_CONTROL1_L4DPM1_SHIFT     (20U)
#define GMAC_MAC_L3_L4_CONTROL1_L4DPM1_WIDTH     (1U)
#define GMAC_MAC_L3_L4_CONTROL1_L4DPM1(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL1_L4DPM1_SHIFT)) & GMAC_MAC_L3_L4_CONTROL1_L4DPM1_MASK)
#define GMAC_MAC_L3_L4_CONTROL1_L4DPIM1_MASK     (0x200000U)
#define GMAC_MAC_L3_L4_CONTROL1_L4DPIM1_SHIFT    (21U)
#define GMAC_MAC_L3_L4_CONTROL1_L4DPIM1_WIDTH    (1U)
#define GMAC_MAC_L3_L4_CONTROL1_L4DPIM1(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL1_L4DPIM1_SHIFT)) & GMAC_MAC_L3_L4_CONTROL1_L4DPIM1_MASK)
#define GMAC_MAC_L3_L4_CONTROL1_DMCHN1_MASK      (0x7000000U)
#define GMAC_MAC_L3_L4_CONTROL1_DMCHN1_SHIFT     (24U)
#define GMAC_MAC_L3_L4_CONTROL1_DMCHN1_WIDTH     (3U)
#define GMAC_MAC_L3_L4_CONTROL1_DMCHN1(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL1_DMCHN1_SHIFT)) & GMAC_MAC_L3_L4_CONTROL1_DMCHN1_MASK)
#define GMAC_MAC_L3_L4_CONTROL1_DMCHEN1_MASK     (0x10000000U)
#define GMAC_MAC_L3_L4_CONTROL1_DMCHEN1_SHIFT    (28U)
#define GMAC_MAC_L3_L4_CONTROL1_DMCHEN1_WIDTH    (1U)
#define GMAC_MAC_L3_L4_CONTROL1_DMCHEN1(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL1_DMCHEN1_SHIFT)) & GMAC_MAC_L3_L4_CONTROL1_DMCHEN1_MASK)
/*! @} */

/*! @name MAC_LAYER4_ADDRESS1 -  */
/*! @{ */
#define GMAC_MAC_LAYER4_ADDRESS1_L4SP1_MASK      (0xFFFFU)
#define GMAC_MAC_LAYER4_ADDRESS1_L4SP1_SHIFT     (0U)
#define GMAC_MAC_LAYER4_ADDRESS1_L4SP1_WIDTH     (16U)
#define GMAC_MAC_LAYER4_ADDRESS1_L4SP1(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_LAYER4_ADDRESS1_L4SP1_SHIFT)) & GMAC_MAC_LAYER4_ADDRESS1_L4SP1_MASK)
#define GMAC_MAC_LAYER4_ADDRESS1_L4DP1_MASK      (0xFFFF0000U)
#define GMAC_MAC_LAYER4_ADDRESS1_L4DP1_SHIFT     (16U)
#define GMAC_MAC_LAYER4_ADDRESS1_L4DP1_WIDTH     (16U)
#define GMAC_MAC_LAYER4_ADDRESS1_L4DP1(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_LAYER4_ADDRESS1_L4DP1_SHIFT)) & GMAC_MAC_LAYER4_ADDRESS1_L4DP1_MASK)
/*! @} */

/*! @name MAC_LAYER3_ADDR0_REG1 -  */
/*! @{ */
#define GMAC_MAC_LAYER3_ADDR0_REG1_L3A01_MASK    (0xFFFFFFFFU)
#define GMAC_MAC_LAYER3_ADDR0_REG1_L3A01_SHIFT   (0U)
#define GMAC_MAC_LAYER3_ADDR0_REG1_L3A01_WIDTH   (32U)
#define GMAC_MAC_LAYER3_ADDR0_REG1_L3A01(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_LAYER3_ADDR0_REG1_L3A01_SHIFT)) & GMAC_MAC_LAYER3_ADDR0_REG1_L3A01_MASK)
/*! @} */

/*! @name MAC_LAYER3_ADDR1_REG1 -  */
/*! @{ */
#define GMAC_MAC_LAYER3_ADDR1_REG1_L3A11_MASK    (0xFFFFFFFFU)
#define GMAC_MAC_LAYER3_ADDR1_REG1_L3A11_SHIFT   (0U)
#define GMAC_MAC_LAYER3_ADDR1_REG1_L3A11_WIDTH   (32U)
#define GMAC_MAC_LAYER3_ADDR1_REG1_L3A11(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_LAYER3_ADDR1_REG1_L3A11_SHIFT)) & GMAC_MAC_LAYER3_ADDR1_REG1_L3A11_MASK)
/*! @} */

/*! @name MAC_LAYER3_ADDR2_REG1 -  */
/*! @{ */
#define GMAC_MAC_LAYER3_ADDR2_REG1_L3A21_MASK    (0xFFFFFFFFU)
#define GMAC_MAC_LAYER3_ADDR2_REG1_L3A21_SHIFT   (0U)
#define GMAC_MAC_LAYER3_ADDR2_REG1_L3A21_WIDTH   (32U)
#define GMAC_MAC_LAYER3_ADDR2_REG1_L3A21(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_LAYER3_ADDR2_REG1_L3A21_SHIFT)) & GMAC_MAC_LAYER3_ADDR2_REG1_L3A21_MASK)
/*! @} */

/*! @name MAC_LAYER3_ADDR3_REG1 -  */
/*! @{ */
#define GMAC_MAC_LAYER3_ADDR3_REG1_L3A31_MASK    (0xFFFFFFFFU)
#define GMAC_MAC_LAYER3_ADDR3_REG1_L3A31_SHIFT   (0U)
#define GMAC_MAC_LAYER3_ADDR3_REG1_L3A31_WIDTH   (32U)
#define GMAC_MAC_LAYER3_ADDR3_REG1_L3A31(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_LAYER3_ADDR3_REG1_L3A31_SHIFT)) & GMAC_MAC_LAYER3_ADDR3_REG1_L3A31_MASK)
/*! @} */

/*! @name MAC_L3_L4_CONTROL2 -  */
/*! @{ */
#define GMAC_MAC_L3_L4_CONTROL2_L3PEN2_MASK      (0x1U)
#define GMAC_MAC_L3_L4_CONTROL2_L3PEN2_SHIFT     (0U)
#define GMAC_MAC_L3_L4_CONTROL2_L3PEN2_WIDTH     (1U)
#define GMAC_MAC_L3_L4_CONTROL2_L3PEN2(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL2_L3PEN2_SHIFT)) & GMAC_MAC_L3_L4_CONTROL2_L3PEN2_MASK)
#define GMAC_MAC_L3_L4_CONTROL2_L3SAM2_MASK      (0x4U)
#define GMAC_MAC_L3_L4_CONTROL2_L3SAM2_SHIFT     (2U)
#define GMAC_MAC_L3_L4_CONTROL2_L3SAM2_WIDTH     (1U)
#define GMAC_MAC_L3_L4_CONTROL2_L3SAM2(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL2_L3SAM2_SHIFT)) & GMAC_MAC_L3_L4_CONTROL2_L3SAM2_MASK)
#define GMAC_MAC_L3_L4_CONTROL2_L3SAIM2_MASK     (0x8U)
#define GMAC_MAC_L3_L4_CONTROL2_L3SAIM2_SHIFT    (3U)
#define GMAC_MAC_L3_L4_CONTROL2_L3SAIM2_WIDTH    (1U)
#define GMAC_MAC_L3_L4_CONTROL2_L3SAIM2(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL2_L3SAIM2_SHIFT)) & GMAC_MAC_L3_L4_CONTROL2_L3SAIM2_MASK)
#define GMAC_MAC_L3_L4_CONTROL2_L3DAM2_MASK      (0x10U)
#define GMAC_MAC_L3_L4_CONTROL2_L3DAM2_SHIFT     (4U)
#define GMAC_MAC_L3_L4_CONTROL2_L3DAM2_WIDTH     (1U)
#define GMAC_MAC_L3_L4_CONTROL2_L3DAM2(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL2_L3DAM2_SHIFT)) & GMAC_MAC_L3_L4_CONTROL2_L3DAM2_MASK)
#define GMAC_MAC_L3_L4_CONTROL2_L3DAIM2_MASK     (0x20U)
#define GMAC_MAC_L3_L4_CONTROL2_L3DAIM2_SHIFT    (5U)
#define GMAC_MAC_L3_L4_CONTROL2_L3DAIM2_WIDTH    (1U)
#define GMAC_MAC_L3_L4_CONTROL2_L3DAIM2(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL2_L3DAIM2_SHIFT)) & GMAC_MAC_L3_L4_CONTROL2_L3DAIM2_MASK)
#define GMAC_MAC_L3_L4_CONTROL2_L3HSBM2_MASK     (0x7C0U)
#define GMAC_MAC_L3_L4_CONTROL2_L3HSBM2_SHIFT    (6U)
#define GMAC_MAC_L3_L4_CONTROL2_L3HSBM2_WIDTH    (5U)
#define GMAC_MAC_L3_L4_CONTROL2_L3HSBM2(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL2_L3HSBM2_SHIFT)) & GMAC_MAC_L3_L4_CONTROL2_L3HSBM2_MASK)
#define GMAC_MAC_L3_L4_CONTROL2_L3HDBM2_MASK     (0xF800U)
#define GMAC_MAC_L3_L4_CONTROL2_L3HDBM2_SHIFT    (11U)
#define GMAC_MAC_L3_L4_CONTROL2_L3HDBM2_WIDTH    (5U)
#define GMAC_MAC_L3_L4_CONTROL2_L3HDBM2(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL2_L3HDBM2_SHIFT)) & GMAC_MAC_L3_L4_CONTROL2_L3HDBM2_MASK)
#define GMAC_MAC_L3_L4_CONTROL2_L4PEN2_MASK      (0x10000U)
#define GMAC_MAC_L3_L4_CONTROL2_L4PEN2_SHIFT     (16U)
#define GMAC_MAC_L3_L4_CONTROL2_L4PEN2_WIDTH     (1U)
#define GMAC_MAC_L3_L4_CONTROL2_L4PEN2(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL2_L4PEN2_SHIFT)) & GMAC_MAC_L3_L4_CONTROL2_L4PEN2_MASK)
#define GMAC_MAC_L3_L4_CONTROL2_L4SPM2_MASK      (0x40000U)
#define GMAC_MAC_L3_L4_CONTROL2_L4SPM2_SHIFT     (18U)
#define GMAC_MAC_L3_L4_CONTROL2_L4SPM2_WIDTH     (1U)
#define GMAC_MAC_L3_L4_CONTROL2_L4SPM2(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL2_L4SPM2_SHIFT)) & GMAC_MAC_L3_L4_CONTROL2_L4SPM2_MASK)
#define GMAC_MAC_L3_L4_CONTROL2_L4SPIM2_MASK     (0x80000U)
#define GMAC_MAC_L3_L4_CONTROL2_L4SPIM2_SHIFT    (19U)
#define GMAC_MAC_L3_L4_CONTROL2_L4SPIM2_WIDTH    (1U)
#define GMAC_MAC_L3_L4_CONTROL2_L4SPIM2(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL2_L4SPIM2_SHIFT)) & GMAC_MAC_L3_L4_CONTROL2_L4SPIM2_MASK)
#define GMAC_MAC_L3_L4_CONTROL2_L4DPM2_MASK      (0x100000U)
#define GMAC_MAC_L3_L4_CONTROL2_L4DPM2_SHIFT     (20U)
#define GMAC_MAC_L3_L4_CONTROL2_L4DPM2_WIDTH     (1U)
#define GMAC_MAC_L3_L4_CONTROL2_L4DPM2(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL2_L4DPM2_SHIFT)) & GMAC_MAC_L3_L4_CONTROL2_L4DPM2_MASK)
#define GMAC_MAC_L3_L4_CONTROL2_L4DPIM2_MASK     (0x200000U)
#define GMAC_MAC_L3_L4_CONTROL2_L4DPIM2_SHIFT    (21U)
#define GMAC_MAC_L3_L4_CONTROL2_L4DPIM2_WIDTH    (1U)
#define GMAC_MAC_L3_L4_CONTROL2_L4DPIM2(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL2_L4DPIM2_SHIFT)) & GMAC_MAC_L3_L4_CONTROL2_L4DPIM2_MASK)
#define GMAC_MAC_L3_L4_CONTROL2_DMCHN2_MASK      (0x7000000U)
#define GMAC_MAC_L3_L4_CONTROL2_DMCHN2_SHIFT     (24U)
#define GMAC_MAC_L3_L4_CONTROL2_DMCHN2_WIDTH     (3U)
#define GMAC_MAC_L3_L4_CONTROL2_DMCHN2(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL2_DMCHN2_SHIFT)) & GMAC_MAC_L3_L4_CONTROL2_DMCHN2_MASK)
#define GMAC_MAC_L3_L4_CONTROL2_DMCHEN2_MASK     (0x10000000U)
#define GMAC_MAC_L3_L4_CONTROL2_DMCHEN2_SHIFT    (28U)
#define GMAC_MAC_L3_L4_CONTROL2_DMCHEN2_WIDTH    (1U)
#define GMAC_MAC_L3_L4_CONTROL2_DMCHEN2(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL2_DMCHEN2_SHIFT)) & GMAC_MAC_L3_L4_CONTROL2_DMCHEN2_MASK)
/*! @} */

/*! @name MAC_LAYER4_ADDRESS2 -  */
/*! @{ */
#define GMAC_MAC_LAYER4_ADDRESS2_L4SP2_MASK      (0xFFFFU)
#define GMAC_MAC_LAYER4_ADDRESS2_L4SP2_SHIFT     (0U)
#define GMAC_MAC_LAYER4_ADDRESS2_L4SP2_WIDTH     (16U)
#define GMAC_MAC_LAYER4_ADDRESS2_L4SP2(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_LAYER4_ADDRESS2_L4SP2_SHIFT)) & GMAC_MAC_LAYER4_ADDRESS2_L4SP2_MASK)
#define GMAC_MAC_LAYER4_ADDRESS2_L4DP2_MASK      (0xFFFF0000U)
#define GMAC_MAC_LAYER4_ADDRESS2_L4DP2_SHIFT     (16U)
#define GMAC_MAC_LAYER4_ADDRESS2_L4DP2_WIDTH     (16U)
#define GMAC_MAC_LAYER4_ADDRESS2_L4DP2(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_LAYER4_ADDRESS2_L4DP2_SHIFT)) & GMAC_MAC_LAYER4_ADDRESS2_L4DP2_MASK)
/*! @} */

/*! @name MAC_LAYER3_ADDR0_REG2 -  */
/*! @{ */
#define GMAC_MAC_LAYER3_ADDR0_REG2_L3A02_MASK    (0xFFFFFFFFU)
#define GMAC_MAC_LAYER3_ADDR0_REG2_L3A02_SHIFT   (0U)
#define GMAC_MAC_LAYER3_ADDR0_REG2_L3A02_WIDTH   (32U)
#define GMAC_MAC_LAYER3_ADDR0_REG2_L3A02(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_LAYER3_ADDR0_REG2_L3A02_SHIFT)) & GMAC_MAC_LAYER3_ADDR0_REG2_L3A02_MASK)
/*! @} */

/*! @name MAC_LAYER3_ADDR1_REG2 -  */
/*! @{ */
#define GMAC_MAC_LAYER3_ADDR1_REG2_L3A12_MASK    (0xFFFFFFFFU)
#define GMAC_MAC_LAYER3_ADDR1_REG2_L3A12_SHIFT   (0U)
#define GMAC_MAC_LAYER3_ADDR1_REG2_L3A12_WIDTH   (32U)
#define GMAC_MAC_LAYER3_ADDR1_REG2_L3A12(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_LAYER3_ADDR1_REG2_L3A12_SHIFT)) & GMAC_MAC_LAYER3_ADDR1_REG2_L3A12_MASK)
/*! @} */

/*! @name MAC_LAYER3_ADDR2_REG2 -  */
/*! @{ */
#define GMAC_MAC_LAYER3_ADDR2_REG2_L3A22_MASK    (0xFFFFFFFFU)
#define GMAC_MAC_LAYER3_ADDR2_REG2_L3A22_SHIFT   (0U)
#define GMAC_MAC_LAYER3_ADDR2_REG2_L3A22_WIDTH   (32U)
#define GMAC_MAC_LAYER3_ADDR2_REG2_L3A22(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_LAYER3_ADDR2_REG2_L3A22_SHIFT)) & GMAC_MAC_LAYER3_ADDR2_REG2_L3A22_MASK)
/*! @} */

/*! @name MAC_LAYER3_ADDR3_REG2 -  */
/*! @{ */
#define GMAC_MAC_LAYER3_ADDR3_REG2_L3A32_MASK    (0xFFFFFFFFU)
#define GMAC_MAC_LAYER3_ADDR3_REG2_L3A32_SHIFT   (0U)
#define GMAC_MAC_LAYER3_ADDR3_REG2_L3A32_WIDTH   (32U)
#define GMAC_MAC_LAYER3_ADDR3_REG2_L3A32(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_LAYER3_ADDR3_REG2_L3A32_SHIFT)) & GMAC_MAC_LAYER3_ADDR3_REG2_L3A32_MASK)
/*! @} */

/*! @name MAC_L3_L4_CONTROL3 -  */
/*! @{ */
#define GMAC_MAC_L3_L4_CONTROL3_L3PEN3_MASK      (0x1U)
#define GMAC_MAC_L3_L4_CONTROL3_L3PEN3_SHIFT     (0U)
#define GMAC_MAC_L3_L4_CONTROL3_L3PEN3_WIDTH     (1U)
#define GMAC_MAC_L3_L4_CONTROL3_L3PEN3(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL3_L3PEN3_SHIFT)) & GMAC_MAC_L3_L4_CONTROL3_L3PEN3_MASK)
#define GMAC_MAC_L3_L4_CONTROL3_L3SAM3_MASK      (0x4U)
#define GMAC_MAC_L3_L4_CONTROL3_L3SAM3_SHIFT     (2U)
#define GMAC_MAC_L3_L4_CONTROL3_L3SAM3_WIDTH     (1U)
#define GMAC_MAC_L3_L4_CONTROL3_L3SAM3(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL3_L3SAM3_SHIFT)) & GMAC_MAC_L3_L4_CONTROL3_L3SAM3_MASK)
#define GMAC_MAC_L3_L4_CONTROL3_L3SAIM3_MASK     (0x8U)
#define GMAC_MAC_L3_L4_CONTROL3_L3SAIM3_SHIFT    (3U)
#define GMAC_MAC_L3_L4_CONTROL3_L3SAIM3_WIDTH    (1U)
#define GMAC_MAC_L3_L4_CONTROL3_L3SAIM3(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL3_L3SAIM3_SHIFT)) & GMAC_MAC_L3_L4_CONTROL3_L3SAIM3_MASK)
#define GMAC_MAC_L3_L4_CONTROL3_L3DAM3_MASK      (0x10U)
#define GMAC_MAC_L3_L4_CONTROL3_L3DAM3_SHIFT     (4U)
#define GMAC_MAC_L3_L4_CONTROL3_L3DAM3_WIDTH     (1U)
#define GMAC_MAC_L3_L4_CONTROL3_L3DAM3(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL3_L3DAM3_SHIFT)) & GMAC_MAC_L3_L4_CONTROL3_L3DAM3_MASK)
#define GMAC_MAC_L3_L4_CONTROL3_L3DAIM3_MASK     (0x20U)
#define GMAC_MAC_L3_L4_CONTROL3_L3DAIM3_SHIFT    (5U)
#define GMAC_MAC_L3_L4_CONTROL3_L3DAIM3_WIDTH    (1U)
#define GMAC_MAC_L3_L4_CONTROL3_L3DAIM3(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL3_L3DAIM3_SHIFT)) & GMAC_MAC_L3_L4_CONTROL3_L3DAIM3_MASK)
#define GMAC_MAC_L3_L4_CONTROL3_L3HSBM3_MASK     (0x7C0U)
#define GMAC_MAC_L3_L4_CONTROL3_L3HSBM3_SHIFT    (6U)
#define GMAC_MAC_L3_L4_CONTROL3_L3HSBM3_WIDTH    (5U)
#define GMAC_MAC_L3_L4_CONTROL3_L3HSBM3(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL3_L3HSBM3_SHIFT)) & GMAC_MAC_L3_L4_CONTROL3_L3HSBM3_MASK)
#define GMAC_MAC_L3_L4_CONTROL3_L3HDBM3_MASK     (0xF800U)
#define GMAC_MAC_L3_L4_CONTROL3_L3HDBM3_SHIFT    (11U)
#define GMAC_MAC_L3_L4_CONTROL3_L3HDBM3_WIDTH    (5U)
#define GMAC_MAC_L3_L4_CONTROL3_L3HDBM3(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL3_L3HDBM3_SHIFT)) & GMAC_MAC_L3_L4_CONTROL3_L3HDBM3_MASK)
#define GMAC_MAC_L3_L4_CONTROL3_L4PEN3_MASK      (0x10000U)
#define GMAC_MAC_L3_L4_CONTROL3_L4PEN3_SHIFT     (16U)
#define GMAC_MAC_L3_L4_CONTROL3_L4PEN3_WIDTH     (1U)
#define GMAC_MAC_L3_L4_CONTROL3_L4PEN3(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL3_L4PEN3_SHIFT)) & GMAC_MAC_L3_L4_CONTROL3_L4PEN3_MASK)
#define GMAC_MAC_L3_L4_CONTROL3_L4SPM3_MASK      (0x40000U)
#define GMAC_MAC_L3_L4_CONTROL3_L4SPM3_SHIFT     (18U)
#define GMAC_MAC_L3_L4_CONTROL3_L4SPM3_WIDTH     (1U)
#define GMAC_MAC_L3_L4_CONTROL3_L4SPM3(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL3_L4SPM3_SHIFT)) & GMAC_MAC_L3_L4_CONTROL3_L4SPM3_MASK)
#define GMAC_MAC_L3_L4_CONTROL3_L4SPIM3_MASK     (0x80000U)
#define GMAC_MAC_L3_L4_CONTROL3_L4SPIM3_SHIFT    (19U)
#define GMAC_MAC_L3_L4_CONTROL3_L4SPIM3_WIDTH    (1U)
#define GMAC_MAC_L3_L4_CONTROL3_L4SPIM3(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL3_L4SPIM3_SHIFT)) & GMAC_MAC_L3_L4_CONTROL3_L4SPIM3_MASK)
#define GMAC_MAC_L3_L4_CONTROL3_L4DPM3_MASK      (0x100000U)
#define GMAC_MAC_L3_L4_CONTROL3_L4DPM3_SHIFT     (20U)
#define GMAC_MAC_L3_L4_CONTROL3_L4DPM3_WIDTH     (1U)
#define GMAC_MAC_L3_L4_CONTROL3_L4DPM3(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL3_L4DPM3_SHIFT)) & GMAC_MAC_L3_L4_CONTROL3_L4DPM3_MASK)
#define GMAC_MAC_L3_L4_CONTROL3_L4DPIM3_MASK     (0x200000U)
#define GMAC_MAC_L3_L4_CONTROL3_L4DPIM3_SHIFT    (21U)
#define GMAC_MAC_L3_L4_CONTROL3_L4DPIM3_WIDTH    (1U)
#define GMAC_MAC_L3_L4_CONTROL3_L4DPIM3(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL3_L4DPIM3_SHIFT)) & GMAC_MAC_L3_L4_CONTROL3_L4DPIM3_MASK)
#define GMAC_MAC_L3_L4_CONTROL3_DMCHN3_MASK      (0x7000000U)
#define GMAC_MAC_L3_L4_CONTROL3_DMCHN3_SHIFT     (24U)
#define GMAC_MAC_L3_L4_CONTROL3_DMCHN3_WIDTH     (3U)
#define GMAC_MAC_L3_L4_CONTROL3_DMCHN3(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL3_DMCHN3_SHIFT)) & GMAC_MAC_L3_L4_CONTROL3_DMCHN3_MASK)
#define GMAC_MAC_L3_L4_CONTROL3_DMCHEN3_MASK     (0x10000000U)
#define GMAC_MAC_L3_L4_CONTROL3_DMCHEN3_SHIFT    (28U)
#define GMAC_MAC_L3_L4_CONTROL3_DMCHEN3_WIDTH    (1U)
#define GMAC_MAC_L3_L4_CONTROL3_DMCHEN3(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL3_DMCHEN3_SHIFT)) & GMAC_MAC_L3_L4_CONTROL3_DMCHEN3_MASK)
/*! @} */

/*! @name MAC_LAYER4_ADDRESS3 -  */
/*! @{ */
#define GMAC_MAC_LAYER4_ADDRESS3_L4SP3_MASK      (0xFFFFU)
#define GMAC_MAC_LAYER4_ADDRESS3_L4SP3_SHIFT     (0U)
#define GMAC_MAC_LAYER4_ADDRESS3_L4SP3_WIDTH     (16U)
#define GMAC_MAC_LAYER4_ADDRESS3_L4SP3(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_LAYER4_ADDRESS3_L4SP3_SHIFT)) & GMAC_MAC_LAYER4_ADDRESS3_L4SP3_MASK)
#define GMAC_MAC_LAYER4_ADDRESS3_L4DP3_MASK      (0xFFFF0000U)
#define GMAC_MAC_LAYER4_ADDRESS3_L4DP3_SHIFT     (16U)
#define GMAC_MAC_LAYER4_ADDRESS3_L4DP3_WIDTH     (16U)
#define GMAC_MAC_LAYER4_ADDRESS3_L4DP3(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_LAYER4_ADDRESS3_L4DP3_SHIFT)) & GMAC_MAC_LAYER4_ADDRESS3_L4DP3_MASK)
/*! @} */

/*! @name MAC_LAYER3_ADDR0_REG3 -  */
/*! @{ */
#define GMAC_MAC_LAYER3_ADDR0_REG3_L3A03_MASK    (0xFFFFFFFFU)
#define GMAC_MAC_LAYER3_ADDR0_REG3_L3A03_SHIFT   (0U)
#define GMAC_MAC_LAYER3_ADDR0_REG3_L3A03_WIDTH   (32U)
#define GMAC_MAC_LAYER3_ADDR0_REG3_L3A03(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_LAYER3_ADDR0_REG3_L3A03_SHIFT)) & GMAC_MAC_LAYER3_ADDR0_REG3_L3A03_MASK)
/*! @} */

/*! @name MAC_LAYER3_ADDR1_REG3 -  */
/*! @{ */
#define GMAC_MAC_LAYER3_ADDR1_REG3_L3A13_MASK    (0xFFFFFFFFU)
#define GMAC_MAC_LAYER3_ADDR1_REG3_L3A13_SHIFT   (0U)
#define GMAC_MAC_LAYER3_ADDR1_REG3_L3A13_WIDTH   (32U)
#define GMAC_MAC_LAYER3_ADDR1_REG3_L3A13(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_LAYER3_ADDR1_REG3_L3A13_SHIFT)) & GMAC_MAC_LAYER3_ADDR1_REG3_L3A13_MASK)
/*! @} */

/*! @name MAC_LAYER3_ADDR2_REG3 -  */
/*! @{ */
#define GMAC_MAC_LAYER3_ADDR2_REG3_L3A23_MASK    (0xFFFFFFFFU)
#define GMAC_MAC_LAYER3_ADDR2_REG3_L3A23_SHIFT   (0U)
#define GMAC_MAC_LAYER3_ADDR2_REG3_L3A23_WIDTH   (32U)
#define GMAC_MAC_LAYER3_ADDR2_REG3_L3A23(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_LAYER3_ADDR2_REG3_L3A23_SHIFT)) & GMAC_MAC_LAYER3_ADDR2_REG3_L3A23_MASK)
/*! @} */

/*! @name MAC_LAYER3_ADDR3_REG3 -  */
/*! @{ */
#define GMAC_MAC_LAYER3_ADDR3_REG3_L3A33_MASK    (0xFFFFFFFFU)
#define GMAC_MAC_LAYER3_ADDR3_REG3_L3A33_SHIFT   (0U)
#define GMAC_MAC_LAYER3_ADDR3_REG3_L3A33_WIDTH   (32U)
#define GMAC_MAC_LAYER3_ADDR3_REG3_L3A33(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_LAYER3_ADDR3_REG3_L3A33_SHIFT)) & GMAC_MAC_LAYER3_ADDR3_REG3_L3A33_MASK)
/*! @} */

/*! @name MAC_L3_L4_CONTROL4 -  */
/*! @{ */
#define GMAC_MAC_L3_L4_CONTROL4_L3PEN4_MASK      (0x1U)
#define GMAC_MAC_L3_L4_CONTROL4_L3PEN4_SHIFT     (0U)
#define GMAC_MAC_L3_L4_CONTROL4_L3PEN4_WIDTH     (1U)
#define GMAC_MAC_L3_L4_CONTROL4_L3PEN4(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL4_L3PEN4_SHIFT)) & GMAC_MAC_L3_L4_CONTROL4_L3PEN4_MASK)
#define GMAC_MAC_L3_L4_CONTROL4_L3SAM4_MASK      (0x4U)
#define GMAC_MAC_L3_L4_CONTROL4_L3SAM4_SHIFT     (2U)
#define GMAC_MAC_L3_L4_CONTROL4_L3SAM4_WIDTH     (1U)
#define GMAC_MAC_L3_L4_CONTROL4_L3SAM4(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL4_L3SAM4_SHIFT)) & GMAC_MAC_L3_L4_CONTROL4_L3SAM4_MASK)
#define GMAC_MAC_L3_L4_CONTROL4_L3SAIM4_MASK     (0x8U)
#define GMAC_MAC_L3_L4_CONTROL4_L3SAIM4_SHIFT    (3U)
#define GMAC_MAC_L3_L4_CONTROL4_L3SAIM4_WIDTH    (1U)
#define GMAC_MAC_L3_L4_CONTROL4_L3SAIM4(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL4_L3SAIM4_SHIFT)) & GMAC_MAC_L3_L4_CONTROL4_L3SAIM4_MASK)
#define GMAC_MAC_L3_L4_CONTROL4_L3DAM4_MASK      (0x10U)
#define GMAC_MAC_L3_L4_CONTROL4_L3DAM4_SHIFT     (4U)
#define GMAC_MAC_L3_L4_CONTROL4_L3DAM4_WIDTH     (1U)
#define GMAC_MAC_L3_L4_CONTROL4_L3DAM4(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL4_L3DAM4_SHIFT)) & GMAC_MAC_L3_L4_CONTROL4_L3DAM4_MASK)
#define GMAC_MAC_L3_L4_CONTROL4_L3DAIM4_MASK     (0x20U)
#define GMAC_MAC_L3_L4_CONTROL4_L3DAIM4_SHIFT    (5U)
#define GMAC_MAC_L3_L4_CONTROL4_L3DAIM4_WIDTH    (1U)
#define GMAC_MAC_L3_L4_CONTROL4_L3DAIM4(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL4_L3DAIM4_SHIFT)) & GMAC_MAC_L3_L4_CONTROL4_L3DAIM4_MASK)
#define GMAC_MAC_L3_L4_CONTROL4_L3HSBM4_MASK     (0x7C0U)
#define GMAC_MAC_L3_L4_CONTROL4_L3HSBM4_SHIFT    (6U)
#define GMAC_MAC_L3_L4_CONTROL4_L3HSBM4_WIDTH    (5U)
#define GMAC_MAC_L3_L4_CONTROL4_L3HSBM4(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL4_L3HSBM4_SHIFT)) & GMAC_MAC_L3_L4_CONTROL4_L3HSBM4_MASK)
#define GMAC_MAC_L3_L4_CONTROL4_L3HDBM4_MASK     (0xF800U)
#define GMAC_MAC_L3_L4_CONTROL4_L3HDBM4_SHIFT    (11U)
#define GMAC_MAC_L3_L4_CONTROL4_L3HDBM4_WIDTH    (5U)
#define GMAC_MAC_L3_L4_CONTROL4_L3HDBM4(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL4_L3HDBM4_SHIFT)) & GMAC_MAC_L3_L4_CONTROL4_L3HDBM4_MASK)
#define GMAC_MAC_L3_L4_CONTROL4_L4PEN4_MASK      (0x10000U)
#define GMAC_MAC_L3_L4_CONTROL4_L4PEN4_SHIFT     (16U)
#define GMAC_MAC_L3_L4_CONTROL4_L4PEN4_WIDTH     (1U)
#define GMAC_MAC_L3_L4_CONTROL4_L4PEN4(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL4_L4PEN4_SHIFT)) & GMAC_MAC_L3_L4_CONTROL4_L4PEN4_MASK)
#define GMAC_MAC_L3_L4_CONTROL4_L4SPM4_MASK      (0x40000U)
#define GMAC_MAC_L3_L4_CONTROL4_L4SPM4_SHIFT     (18U)
#define GMAC_MAC_L3_L4_CONTROL4_L4SPM4_WIDTH     (1U)
#define GMAC_MAC_L3_L4_CONTROL4_L4SPM4(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL4_L4SPM4_SHIFT)) & GMAC_MAC_L3_L4_CONTROL4_L4SPM4_MASK)
#define GMAC_MAC_L3_L4_CONTROL4_L4SPIM4_MASK     (0x80000U)
#define GMAC_MAC_L3_L4_CONTROL4_L4SPIM4_SHIFT    (19U)
#define GMAC_MAC_L3_L4_CONTROL4_L4SPIM4_WIDTH    (1U)
#define GMAC_MAC_L3_L4_CONTROL4_L4SPIM4(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL4_L4SPIM4_SHIFT)) & GMAC_MAC_L3_L4_CONTROL4_L4SPIM4_MASK)
#define GMAC_MAC_L3_L4_CONTROL4_L4DPM4_MASK      (0x100000U)
#define GMAC_MAC_L3_L4_CONTROL4_L4DPM4_SHIFT     (20U)
#define GMAC_MAC_L3_L4_CONTROL4_L4DPM4_WIDTH     (1U)
#define GMAC_MAC_L3_L4_CONTROL4_L4DPM4(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL4_L4DPM4_SHIFT)) & GMAC_MAC_L3_L4_CONTROL4_L4DPM4_MASK)
#define GMAC_MAC_L3_L4_CONTROL4_L4DPIM4_MASK     (0x200000U)
#define GMAC_MAC_L3_L4_CONTROL4_L4DPIM4_SHIFT    (21U)
#define GMAC_MAC_L3_L4_CONTROL4_L4DPIM4_WIDTH    (1U)
#define GMAC_MAC_L3_L4_CONTROL4_L4DPIM4(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL4_L4DPIM4_SHIFT)) & GMAC_MAC_L3_L4_CONTROL4_L4DPIM4_MASK)
#define GMAC_MAC_L3_L4_CONTROL4_DMCHN4_MASK      (0x7000000U)
#define GMAC_MAC_L3_L4_CONTROL4_DMCHN4_SHIFT     (24U)
#define GMAC_MAC_L3_L4_CONTROL4_DMCHN4_WIDTH     (3U)
#define GMAC_MAC_L3_L4_CONTROL4_DMCHN4(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL4_DMCHN4_SHIFT)) & GMAC_MAC_L3_L4_CONTROL4_DMCHN4_MASK)
#define GMAC_MAC_L3_L4_CONTROL4_DMCHEN4_MASK     (0x10000000U)
#define GMAC_MAC_L3_L4_CONTROL4_DMCHEN4_SHIFT    (28U)
#define GMAC_MAC_L3_L4_CONTROL4_DMCHEN4_WIDTH    (1U)
#define GMAC_MAC_L3_L4_CONTROL4_DMCHEN4(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL4_DMCHEN4_SHIFT)) & GMAC_MAC_L3_L4_CONTROL4_DMCHEN4_MASK)
/*! @} */

/*! @name MAC_LAYER4_ADDRESS4 -  */
/*! @{ */
#define GMAC_MAC_LAYER4_ADDRESS4_L4SP4_MASK      (0xFFFFU)
#define GMAC_MAC_LAYER4_ADDRESS4_L4SP4_SHIFT     (0U)
#define GMAC_MAC_LAYER4_ADDRESS4_L4SP4_WIDTH     (16U)
#define GMAC_MAC_LAYER4_ADDRESS4_L4SP4(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_LAYER4_ADDRESS4_L4SP4_SHIFT)) & GMAC_MAC_LAYER4_ADDRESS4_L4SP4_MASK)
#define GMAC_MAC_LAYER4_ADDRESS4_L4DP4_MASK      (0xFFFF0000U)
#define GMAC_MAC_LAYER4_ADDRESS4_L4DP4_SHIFT     (16U)
#define GMAC_MAC_LAYER4_ADDRESS4_L4DP4_WIDTH     (16U)
#define GMAC_MAC_LAYER4_ADDRESS4_L4DP4(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_LAYER4_ADDRESS4_L4DP4_SHIFT)) & GMAC_MAC_LAYER4_ADDRESS4_L4DP4_MASK)
/*! @} */

/*! @name MAC_LAYER3_ADDR0_REG4 -  */
/*! @{ */
#define GMAC_MAC_LAYER3_ADDR0_REG4_L3A04_MASK    (0xFFFFFFFFU)
#define GMAC_MAC_LAYER3_ADDR0_REG4_L3A04_SHIFT   (0U)
#define GMAC_MAC_LAYER3_ADDR0_REG4_L3A04_WIDTH   (32U)
#define GMAC_MAC_LAYER3_ADDR0_REG4_L3A04(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_LAYER3_ADDR0_REG4_L3A04_SHIFT)) & GMAC_MAC_LAYER3_ADDR0_REG4_L3A04_MASK)
/*! @} */

/*! @name MAC_LAYER3_ADDR1_REG4 -  */
/*! @{ */
#define GMAC_MAC_LAYER3_ADDR1_REG4_L3A14_MASK    (0xFFFFFFFFU)
#define GMAC_MAC_LAYER3_ADDR1_REG4_L3A14_SHIFT   (0U)
#define GMAC_MAC_LAYER3_ADDR1_REG4_L3A14_WIDTH   (32U)
#define GMAC_MAC_LAYER3_ADDR1_REG4_L3A14(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_LAYER3_ADDR1_REG4_L3A14_SHIFT)) & GMAC_MAC_LAYER3_ADDR1_REG4_L3A14_MASK)
/*! @} */

/*! @name MAC_LAYER3_ADDR2_REG4 -  */
/*! @{ */
#define GMAC_MAC_LAYER3_ADDR2_REG4_L3A24_MASK    (0xFFFFFFFFU)
#define GMAC_MAC_LAYER3_ADDR2_REG4_L3A24_SHIFT   (0U)
#define GMAC_MAC_LAYER3_ADDR2_REG4_L3A24_WIDTH   (32U)
#define GMAC_MAC_LAYER3_ADDR2_REG4_L3A24(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_LAYER3_ADDR2_REG4_L3A24_SHIFT)) & GMAC_MAC_LAYER3_ADDR2_REG4_L3A24_MASK)
/*! @} */

/*! @name MAC_LAYER3_ADDR3_REG4 -  */
/*! @{ */
#define GMAC_MAC_LAYER3_ADDR3_REG4_L3A34_MASK    (0xFFFFFFFFU)
#define GMAC_MAC_LAYER3_ADDR3_REG4_L3A34_SHIFT   (0U)
#define GMAC_MAC_LAYER3_ADDR3_REG4_L3A34_WIDTH   (32U)
#define GMAC_MAC_LAYER3_ADDR3_REG4_L3A34(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_LAYER3_ADDR3_REG4_L3A34_SHIFT)) & GMAC_MAC_LAYER3_ADDR3_REG4_L3A34_MASK)
/*! @} */

/*! @name MAC_L3_L4_CONTROL5 -  */
/*! @{ */
#define GMAC_MAC_L3_L4_CONTROL5_L3PEN5_MASK      (0x1U)
#define GMAC_MAC_L3_L4_CONTROL5_L3PEN5_SHIFT     (0U)
#define GMAC_MAC_L3_L4_CONTROL5_L3PEN5_WIDTH     (1U)
#define GMAC_MAC_L3_L4_CONTROL5_L3PEN5(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL5_L3PEN5_SHIFT)) & GMAC_MAC_L3_L4_CONTROL5_L3PEN5_MASK)
#define GMAC_MAC_L3_L4_CONTROL5_L3SAM5_MASK      (0x4U)
#define GMAC_MAC_L3_L4_CONTROL5_L3SAM5_SHIFT     (2U)
#define GMAC_MAC_L3_L4_CONTROL5_L3SAM5_WIDTH     (1U)
#define GMAC_MAC_L3_L4_CONTROL5_L3SAM5(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL5_L3SAM5_SHIFT)) & GMAC_MAC_L3_L4_CONTROL5_L3SAM5_MASK)
#define GMAC_MAC_L3_L4_CONTROL5_L3SAIM5_MASK     (0x8U)
#define GMAC_MAC_L3_L4_CONTROL5_L3SAIM5_SHIFT    (3U)
#define GMAC_MAC_L3_L4_CONTROL5_L3SAIM5_WIDTH    (1U)
#define GMAC_MAC_L3_L4_CONTROL5_L3SAIM5(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL5_L3SAIM5_SHIFT)) & GMAC_MAC_L3_L4_CONTROL5_L3SAIM5_MASK)
#define GMAC_MAC_L3_L4_CONTROL5_L3DAM5_MASK      (0x10U)
#define GMAC_MAC_L3_L4_CONTROL5_L3DAM5_SHIFT     (4U)
#define GMAC_MAC_L3_L4_CONTROL5_L3DAM5_WIDTH     (1U)
#define GMAC_MAC_L3_L4_CONTROL5_L3DAM5(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL5_L3DAM5_SHIFT)) & GMAC_MAC_L3_L4_CONTROL5_L3DAM5_MASK)
#define GMAC_MAC_L3_L4_CONTROL5_L3DAIM5_MASK     (0x20U)
#define GMAC_MAC_L3_L4_CONTROL5_L3DAIM5_SHIFT    (5U)
#define GMAC_MAC_L3_L4_CONTROL5_L3DAIM5_WIDTH    (1U)
#define GMAC_MAC_L3_L4_CONTROL5_L3DAIM5(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL5_L3DAIM5_SHIFT)) & GMAC_MAC_L3_L4_CONTROL5_L3DAIM5_MASK)
#define GMAC_MAC_L3_L4_CONTROL5_L3HSBM5_MASK     (0x7C0U)
#define GMAC_MAC_L3_L4_CONTROL5_L3HSBM5_SHIFT    (6U)
#define GMAC_MAC_L3_L4_CONTROL5_L3HSBM5_WIDTH    (5U)
#define GMAC_MAC_L3_L4_CONTROL5_L3HSBM5(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL5_L3HSBM5_SHIFT)) & GMAC_MAC_L3_L4_CONTROL5_L3HSBM5_MASK)
#define GMAC_MAC_L3_L4_CONTROL5_L3HDBM5_MASK     (0xF800U)
#define GMAC_MAC_L3_L4_CONTROL5_L3HDBM5_SHIFT    (11U)
#define GMAC_MAC_L3_L4_CONTROL5_L3HDBM5_WIDTH    (5U)
#define GMAC_MAC_L3_L4_CONTROL5_L3HDBM5(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL5_L3HDBM5_SHIFT)) & GMAC_MAC_L3_L4_CONTROL5_L3HDBM5_MASK)
#define GMAC_MAC_L3_L4_CONTROL5_L4PEN5_MASK      (0x10000U)
#define GMAC_MAC_L3_L4_CONTROL5_L4PEN5_SHIFT     (16U)
#define GMAC_MAC_L3_L4_CONTROL5_L4PEN5_WIDTH     (1U)
#define GMAC_MAC_L3_L4_CONTROL5_L4PEN5(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL5_L4PEN5_SHIFT)) & GMAC_MAC_L3_L4_CONTROL5_L4PEN5_MASK)
#define GMAC_MAC_L3_L4_CONTROL5_L4SPM5_MASK      (0x40000U)
#define GMAC_MAC_L3_L4_CONTROL5_L4SPM5_SHIFT     (18U)
#define GMAC_MAC_L3_L4_CONTROL5_L4SPM5_WIDTH     (1U)
#define GMAC_MAC_L3_L4_CONTROL5_L4SPM5(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL5_L4SPM5_SHIFT)) & GMAC_MAC_L3_L4_CONTROL5_L4SPM5_MASK)
#define GMAC_MAC_L3_L4_CONTROL5_L4SPIM5_MASK     (0x80000U)
#define GMAC_MAC_L3_L4_CONTROL5_L4SPIM5_SHIFT    (19U)
#define GMAC_MAC_L3_L4_CONTROL5_L4SPIM5_WIDTH    (1U)
#define GMAC_MAC_L3_L4_CONTROL5_L4SPIM5(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL5_L4SPIM5_SHIFT)) & GMAC_MAC_L3_L4_CONTROL5_L4SPIM5_MASK)
#define GMAC_MAC_L3_L4_CONTROL5_L4DPM5_MASK      (0x100000U)
#define GMAC_MAC_L3_L4_CONTROL5_L4DPM5_SHIFT     (20U)
#define GMAC_MAC_L3_L4_CONTROL5_L4DPM5_WIDTH     (1U)
#define GMAC_MAC_L3_L4_CONTROL5_L4DPM5(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL5_L4DPM5_SHIFT)) & GMAC_MAC_L3_L4_CONTROL5_L4DPM5_MASK)
#define GMAC_MAC_L3_L4_CONTROL5_L4DPIM5_MASK     (0x200000U)
#define GMAC_MAC_L3_L4_CONTROL5_L4DPIM5_SHIFT    (21U)
#define GMAC_MAC_L3_L4_CONTROL5_L4DPIM5_WIDTH    (1U)
#define GMAC_MAC_L3_L4_CONTROL5_L4DPIM5(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL5_L4DPIM5_SHIFT)) & GMAC_MAC_L3_L4_CONTROL5_L4DPIM5_MASK)
#define GMAC_MAC_L3_L4_CONTROL5_DMCHN5_MASK      (0x7000000U)
#define GMAC_MAC_L3_L4_CONTROL5_DMCHN5_SHIFT     (24U)
#define GMAC_MAC_L3_L4_CONTROL5_DMCHN5_WIDTH     (3U)
#define GMAC_MAC_L3_L4_CONTROL5_DMCHN5(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL5_DMCHN5_SHIFT)) & GMAC_MAC_L3_L4_CONTROL5_DMCHN5_MASK)
#define GMAC_MAC_L3_L4_CONTROL5_DMCHEN5_MASK     (0x10000000U)
#define GMAC_MAC_L3_L4_CONTROL5_DMCHEN5_SHIFT    (28U)
#define GMAC_MAC_L3_L4_CONTROL5_DMCHEN5_WIDTH    (1U)
#define GMAC_MAC_L3_L4_CONTROL5_DMCHEN5(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL5_DMCHEN5_SHIFT)) & GMAC_MAC_L3_L4_CONTROL5_DMCHEN5_MASK)
/*! @} */

/*! @name MAC_LAYER4_ADDRESS5 -  */
/*! @{ */
#define GMAC_MAC_LAYER4_ADDRESS5_L4SP5_MASK      (0xFFFFU)
#define GMAC_MAC_LAYER4_ADDRESS5_L4SP5_SHIFT     (0U)
#define GMAC_MAC_LAYER4_ADDRESS5_L4SP5_WIDTH     (16U)
#define GMAC_MAC_LAYER4_ADDRESS5_L4SP5(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_LAYER4_ADDRESS5_L4SP5_SHIFT)) & GMAC_MAC_LAYER4_ADDRESS5_L4SP5_MASK)
#define GMAC_MAC_LAYER4_ADDRESS5_L4DP5_MASK      (0xFFFF0000U)
#define GMAC_MAC_LAYER4_ADDRESS5_L4DP5_SHIFT     (16U)
#define GMAC_MAC_LAYER4_ADDRESS5_L4DP5_WIDTH     (16U)
#define GMAC_MAC_LAYER4_ADDRESS5_L4DP5(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_LAYER4_ADDRESS5_L4DP5_SHIFT)) & GMAC_MAC_LAYER4_ADDRESS5_L4DP5_MASK)
/*! @} */

/*! @name MAC_LAYER3_ADDR0_REG5 -  */
/*! @{ */
#define GMAC_MAC_LAYER3_ADDR0_REG5_L3A05_MASK    (0xFFFFFFFFU)
#define GMAC_MAC_LAYER3_ADDR0_REG5_L3A05_SHIFT   (0U)
#define GMAC_MAC_LAYER3_ADDR0_REG5_L3A05_WIDTH   (32U)
#define GMAC_MAC_LAYER3_ADDR0_REG5_L3A05(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_LAYER3_ADDR0_REG5_L3A05_SHIFT)) & GMAC_MAC_LAYER3_ADDR0_REG5_L3A05_MASK)
/*! @} */

/*! @name MAC_LAYER3_ADDR1_REG5 -  */
/*! @{ */
#define GMAC_MAC_LAYER3_ADDR1_REG5_L3A15_MASK    (0xFFFFFFFFU)
#define GMAC_MAC_LAYER3_ADDR1_REG5_L3A15_SHIFT   (0U)
#define GMAC_MAC_LAYER3_ADDR1_REG5_L3A15_WIDTH   (32U)
#define GMAC_MAC_LAYER3_ADDR1_REG5_L3A15(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_LAYER3_ADDR1_REG5_L3A15_SHIFT)) & GMAC_MAC_LAYER3_ADDR1_REG5_L3A15_MASK)
/*! @} */

/*! @name MAC_LAYER3_ADDR2_REG5 -  */
/*! @{ */
#define GMAC_MAC_LAYER3_ADDR2_REG5_L3A25_MASK    (0xFFFFFFFFU)
#define GMAC_MAC_LAYER3_ADDR2_REG5_L3A25_SHIFT   (0U)
#define GMAC_MAC_LAYER3_ADDR2_REG5_L3A25_WIDTH   (32U)
#define GMAC_MAC_LAYER3_ADDR2_REG5_L3A25(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_LAYER3_ADDR2_REG5_L3A25_SHIFT)) & GMAC_MAC_LAYER3_ADDR2_REG5_L3A25_MASK)
/*! @} */

/*! @name MAC_LAYER3_ADDR3_REG5 -  */
/*! @{ */
#define GMAC_MAC_LAYER3_ADDR3_REG5_L3A35_MASK    (0xFFFFFFFFU)
#define GMAC_MAC_LAYER3_ADDR3_REG5_L3A35_SHIFT   (0U)
#define GMAC_MAC_LAYER3_ADDR3_REG5_L3A35_WIDTH   (32U)
#define GMAC_MAC_LAYER3_ADDR3_REG5_L3A35(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_LAYER3_ADDR3_REG5_L3A35_SHIFT)) & GMAC_MAC_LAYER3_ADDR3_REG5_L3A35_MASK)
/*! @} */

/*! @name MAC_L3_L4_CONTROL6 -  */
/*! @{ */
#define GMAC_MAC_L3_L4_CONTROL6_L3PEN6_MASK      (0x1U)
#define GMAC_MAC_L3_L4_CONTROL6_L3PEN6_SHIFT     (0U)
#define GMAC_MAC_L3_L4_CONTROL6_L3PEN6_WIDTH     (1U)
#define GMAC_MAC_L3_L4_CONTROL6_L3PEN6(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL6_L3PEN6_SHIFT)) & GMAC_MAC_L3_L4_CONTROL6_L3PEN6_MASK)
#define GMAC_MAC_L3_L4_CONTROL6_L3SAM6_MASK      (0x4U)
#define GMAC_MAC_L3_L4_CONTROL6_L3SAM6_SHIFT     (2U)
#define GMAC_MAC_L3_L4_CONTROL6_L3SAM6_WIDTH     (1U)
#define GMAC_MAC_L3_L4_CONTROL6_L3SAM6(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL6_L3SAM6_SHIFT)) & GMAC_MAC_L3_L4_CONTROL6_L3SAM6_MASK)
#define GMAC_MAC_L3_L4_CONTROL6_L3SAIM6_MASK     (0x8U)
#define GMAC_MAC_L3_L4_CONTROL6_L3SAIM6_SHIFT    (3U)
#define GMAC_MAC_L3_L4_CONTROL6_L3SAIM6_WIDTH    (1U)
#define GMAC_MAC_L3_L4_CONTROL6_L3SAIM6(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL6_L3SAIM6_SHIFT)) & GMAC_MAC_L3_L4_CONTROL6_L3SAIM6_MASK)
#define GMAC_MAC_L3_L4_CONTROL6_L3DAM6_MASK      (0x10U)
#define GMAC_MAC_L3_L4_CONTROL6_L3DAM6_SHIFT     (4U)
#define GMAC_MAC_L3_L4_CONTROL6_L3DAM6_WIDTH     (1U)
#define GMAC_MAC_L3_L4_CONTROL6_L3DAM6(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL6_L3DAM6_SHIFT)) & GMAC_MAC_L3_L4_CONTROL6_L3DAM6_MASK)
#define GMAC_MAC_L3_L4_CONTROL6_L3DAIM6_MASK     (0x20U)
#define GMAC_MAC_L3_L4_CONTROL6_L3DAIM6_SHIFT    (5U)
#define GMAC_MAC_L3_L4_CONTROL6_L3DAIM6_WIDTH    (1U)
#define GMAC_MAC_L3_L4_CONTROL6_L3DAIM6(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL6_L3DAIM6_SHIFT)) & GMAC_MAC_L3_L4_CONTROL6_L3DAIM6_MASK)
#define GMAC_MAC_L3_L4_CONTROL6_L3HSBM6_MASK     (0x7C0U)
#define GMAC_MAC_L3_L4_CONTROL6_L3HSBM6_SHIFT    (6U)
#define GMAC_MAC_L3_L4_CONTROL6_L3HSBM6_WIDTH    (5U)
#define GMAC_MAC_L3_L4_CONTROL6_L3HSBM6(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL6_L3HSBM6_SHIFT)) & GMAC_MAC_L3_L4_CONTROL6_L3HSBM6_MASK)
#define GMAC_MAC_L3_L4_CONTROL6_L3HDBM6_MASK     (0xF800U)
#define GMAC_MAC_L3_L4_CONTROL6_L3HDBM6_SHIFT    (11U)
#define GMAC_MAC_L3_L4_CONTROL6_L3HDBM6_WIDTH    (5U)
#define GMAC_MAC_L3_L4_CONTROL6_L3HDBM6(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL6_L3HDBM6_SHIFT)) & GMAC_MAC_L3_L4_CONTROL6_L3HDBM6_MASK)
#define GMAC_MAC_L3_L4_CONTROL6_L4PEN6_MASK      (0x10000U)
#define GMAC_MAC_L3_L4_CONTROL6_L4PEN6_SHIFT     (16U)
#define GMAC_MAC_L3_L4_CONTROL6_L4PEN6_WIDTH     (1U)
#define GMAC_MAC_L3_L4_CONTROL6_L4PEN6(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL6_L4PEN6_SHIFT)) & GMAC_MAC_L3_L4_CONTROL6_L4PEN6_MASK)
#define GMAC_MAC_L3_L4_CONTROL6_L4SPM6_MASK      (0x40000U)
#define GMAC_MAC_L3_L4_CONTROL6_L4SPM6_SHIFT     (18U)
#define GMAC_MAC_L3_L4_CONTROL6_L4SPM6_WIDTH     (1U)
#define GMAC_MAC_L3_L4_CONTROL6_L4SPM6(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL6_L4SPM6_SHIFT)) & GMAC_MAC_L3_L4_CONTROL6_L4SPM6_MASK)
#define GMAC_MAC_L3_L4_CONTROL6_L4SPIM6_MASK     (0x80000U)
#define GMAC_MAC_L3_L4_CONTROL6_L4SPIM6_SHIFT    (19U)
#define GMAC_MAC_L3_L4_CONTROL6_L4SPIM6_WIDTH    (1U)
#define GMAC_MAC_L3_L4_CONTROL6_L4SPIM6(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL6_L4SPIM6_SHIFT)) & GMAC_MAC_L3_L4_CONTROL6_L4SPIM6_MASK)
#define GMAC_MAC_L3_L4_CONTROL6_L4DPM6_MASK      (0x100000U)
#define GMAC_MAC_L3_L4_CONTROL6_L4DPM6_SHIFT     (20U)
#define GMAC_MAC_L3_L4_CONTROL6_L4DPM6_WIDTH     (1U)
#define GMAC_MAC_L3_L4_CONTROL6_L4DPM6(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL6_L4DPM6_SHIFT)) & GMAC_MAC_L3_L4_CONTROL6_L4DPM6_MASK)
#define GMAC_MAC_L3_L4_CONTROL6_L4DPIM6_MASK     (0x200000U)
#define GMAC_MAC_L3_L4_CONTROL6_L4DPIM6_SHIFT    (21U)
#define GMAC_MAC_L3_L4_CONTROL6_L4DPIM6_WIDTH    (1U)
#define GMAC_MAC_L3_L4_CONTROL6_L4DPIM6(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL6_L4DPIM6_SHIFT)) & GMAC_MAC_L3_L4_CONTROL6_L4DPIM6_MASK)
#define GMAC_MAC_L3_L4_CONTROL6_DMCHN6_MASK      (0x7000000U)
#define GMAC_MAC_L3_L4_CONTROL6_DMCHN6_SHIFT     (24U)
#define GMAC_MAC_L3_L4_CONTROL6_DMCHN6_WIDTH     (3U)
#define GMAC_MAC_L3_L4_CONTROL6_DMCHN6(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL6_DMCHN6_SHIFT)) & GMAC_MAC_L3_L4_CONTROL6_DMCHN6_MASK)
#define GMAC_MAC_L3_L4_CONTROL6_DMCHEN6_MASK     (0x10000000U)
#define GMAC_MAC_L3_L4_CONTROL6_DMCHEN6_SHIFT    (28U)
#define GMAC_MAC_L3_L4_CONTROL6_DMCHEN6_WIDTH    (1U)
#define GMAC_MAC_L3_L4_CONTROL6_DMCHEN6(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL6_DMCHEN6_SHIFT)) & GMAC_MAC_L3_L4_CONTROL6_DMCHEN6_MASK)
/*! @} */

/*! @name MAC_LAYER4_ADDRESS6 -  */
/*! @{ */
#define GMAC_MAC_LAYER4_ADDRESS6_L4SP6_MASK      (0xFFFFU)
#define GMAC_MAC_LAYER4_ADDRESS6_L4SP6_SHIFT     (0U)
#define GMAC_MAC_LAYER4_ADDRESS6_L4SP6_WIDTH     (16U)
#define GMAC_MAC_LAYER4_ADDRESS6_L4SP6(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_LAYER4_ADDRESS6_L4SP6_SHIFT)) & GMAC_MAC_LAYER4_ADDRESS6_L4SP6_MASK)
#define GMAC_MAC_LAYER4_ADDRESS6_L4DP6_MASK      (0xFFFF0000U)
#define GMAC_MAC_LAYER4_ADDRESS6_L4DP6_SHIFT     (16U)
#define GMAC_MAC_LAYER4_ADDRESS6_L4DP6_WIDTH     (16U)
#define GMAC_MAC_LAYER4_ADDRESS6_L4DP6(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_LAYER4_ADDRESS6_L4DP6_SHIFT)) & GMAC_MAC_LAYER4_ADDRESS6_L4DP6_MASK)
/*! @} */

/*! @name MAC_LAYER3_ADDR0_REG6 -  */
/*! @{ */
#define GMAC_MAC_LAYER3_ADDR0_REG6_L3A06_MASK    (0xFFFFFFFFU)
#define GMAC_MAC_LAYER3_ADDR0_REG6_L3A06_SHIFT   (0U)
#define GMAC_MAC_LAYER3_ADDR0_REG6_L3A06_WIDTH   (32U)
#define GMAC_MAC_LAYER3_ADDR0_REG6_L3A06(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_LAYER3_ADDR0_REG6_L3A06_SHIFT)) & GMAC_MAC_LAYER3_ADDR0_REG6_L3A06_MASK)
/*! @} */

/*! @name MAC_LAYER3_ADDR1_REG6 -  */
/*! @{ */
#define GMAC_MAC_LAYER3_ADDR1_REG6_L3A16_MASK    (0xFFFFFFFFU)
#define GMAC_MAC_LAYER3_ADDR1_REG6_L3A16_SHIFT   (0U)
#define GMAC_MAC_LAYER3_ADDR1_REG6_L3A16_WIDTH   (32U)
#define GMAC_MAC_LAYER3_ADDR1_REG6_L3A16(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_LAYER3_ADDR1_REG6_L3A16_SHIFT)) & GMAC_MAC_LAYER3_ADDR1_REG6_L3A16_MASK)
/*! @} */

/*! @name MAC_LAYER3_ADDR2_REG6 -  */
/*! @{ */
#define GMAC_MAC_LAYER3_ADDR2_REG6_L3A26_MASK    (0xFFFFFFFFU)
#define GMAC_MAC_LAYER3_ADDR2_REG6_L3A26_SHIFT   (0U)
#define GMAC_MAC_LAYER3_ADDR2_REG6_L3A26_WIDTH   (32U)
#define GMAC_MAC_LAYER3_ADDR2_REG6_L3A26(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_LAYER3_ADDR2_REG6_L3A26_SHIFT)) & GMAC_MAC_LAYER3_ADDR2_REG6_L3A26_MASK)
/*! @} */

/*! @name MAC_LAYER3_ADDR3_REG6 -  */
/*! @{ */
#define GMAC_MAC_LAYER3_ADDR3_REG6_L3A36_MASK    (0xFFFFFFFFU)
#define GMAC_MAC_LAYER3_ADDR3_REG6_L3A36_SHIFT   (0U)
#define GMAC_MAC_LAYER3_ADDR3_REG6_L3A36_WIDTH   (32U)
#define GMAC_MAC_LAYER3_ADDR3_REG6_L3A36(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_LAYER3_ADDR3_REG6_L3A36_SHIFT)) & GMAC_MAC_LAYER3_ADDR3_REG6_L3A36_MASK)
/*! @} */

/*! @name MAC_L3_L4_CONTROL7 -  */
/*! @{ */
#define GMAC_MAC_L3_L4_CONTROL7_L3PEN7_MASK      (0x1U)
#define GMAC_MAC_L3_L4_CONTROL7_L3PEN7_SHIFT     (0U)
#define GMAC_MAC_L3_L4_CONTROL7_L3PEN7_WIDTH     (1U)
#define GMAC_MAC_L3_L4_CONTROL7_L3PEN7(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL7_L3PEN7_SHIFT)) & GMAC_MAC_L3_L4_CONTROL7_L3PEN7_MASK)
#define GMAC_MAC_L3_L4_CONTROL7_L3SAM7_MASK      (0x4U)
#define GMAC_MAC_L3_L4_CONTROL7_L3SAM7_SHIFT     (2U)
#define GMAC_MAC_L3_L4_CONTROL7_L3SAM7_WIDTH     (1U)
#define GMAC_MAC_L3_L4_CONTROL7_L3SAM7(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL7_L3SAM7_SHIFT)) & GMAC_MAC_L3_L4_CONTROL7_L3SAM7_MASK)
#define GMAC_MAC_L3_L4_CONTROL7_L3SAIM7_MASK     (0x8U)
#define GMAC_MAC_L3_L4_CONTROL7_L3SAIM7_SHIFT    (3U)
#define GMAC_MAC_L3_L4_CONTROL7_L3SAIM7_WIDTH    (1U)
#define GMAC_MAC_L3_L4_CONTROL7_L3SAIM7(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL7_L3SAIM7_SHIFT)) & GMAC_MAC_L3_L4_CONTROL7_L3SAIM7_MASK)
#define GMAC_MAC_L3_L4_CONTROL7_L3DAM7_MASK      (0x10U)
#define GMAC_MAC_L3_L4_CONTROL7_L3DAM7_SHIFT     (4U)
#define GMAC_MAC_L3_L4_CONTROL7_L3DAM7_WIDTH     (1U)
#define GMAC_MAC_L3_L4_CONTROL7_L3DAM7(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL7_L3DAM7_SHIFT)) & GMAC_MAC_L3_L4_CONTROL7_L3DAM7_MASK)
#define GMAC_MAC_L3_L4_CONTROL7_L3DAIM7_MASK     (0x20U)
#define GMAC_MAC_L3_L4_CONTROL7_L3DAIM7_SHIFT    (5U)
#define GMAC_MAC_L3_L4_CONTROL7_L3DAIM7_WIDTH    (1U)
#define GMAC_MAC_L3_L4_CONTROL7_L3DAIM7(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL7_L3DAIM7_SHIFT)) & GMAC_MAC_L3_L4_CONTROL7_L3DAIM7_MASK)
#define GMAC_MAC_L3_L4_CONTROL7_L3HSBM7_MASK     (0x7C0U)
#define GMAC_MAC_L3_L4_CONTROL7_L3HSBM7_SHIFT    (6U)
#define GMAC_MAC_L3_L4_CONTROL7_L3HSBM7_WIDTH    (5U)
#define GMAC_MAC_L3_L4_CONTROL7_L3HSBM7(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL7_L3HSBM7_SHIFT)) & GMAC_MAC_L3_L4_CONTROL7_L3HSBM7_MASK)
#define GMAC_MAC_L3_L4_CONTROL7_L3HDBM7_MASK     (0xF800U)
#define GMAC_MAC_L3_L4_CONTROL7_L3HDBM7_SHIFT    (11U)
#define GMAC_MAC_L3_L4_CONTROL7_L3HDBM7_WIDTH    (5U)
#define GMAC_MAC_L3_L4_CONTROL7_L3HDBM7(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL7_L3HDBM7_SHIFT)) & GMAC_MAC_L3_L4_CONTROL7_L3HDBM7_MASK)
#define GMAC_MAC_L3_L4_CONTROL7_L4PEN7_MASK      (0x10000U)
#define GMAC_MAC_L3_L4_CONTROL7_L4PEN7_SHIFT     (16U)
#define GMAC_MAC_L3_L4_CONTROL7_L4PEN7_WIDTH     (1U)
#define GMAC_MAC_L3_L4_CONTROL7_L4PEN7(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL7_L4PEN7_SHIFT)) & GMAC_MAC_L3_L4_CONTROL7_L4PEN7_MASK)
#define GMAC_MAC_L3_L4_CONTROL7_L4SPM7_MASK      (0x40000U)
#define GMAC_MAC_L3_L4_CONTROL7_L4SPM7_SHIFT     (18U)
#define GMAC_MAC_L3_L4_CONTROL7_L4SPM7_WIDTH     (1U)
#define GMAC_MAC_L3_L4_CONTROL7_L4SPM7(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL7_L4SPM7_SHIFT)) & GMAC_MAC_L3_L4_CONTROL7_L4SPM7_MASK)
#define GMAC_MAC_L3_L4_CONTROL7_L4SPIM7_MASK     (0x80000U)
#define GMAC_MAC_L3_L4_CONTROL7_L4SPIM7_SHIFT    (19U)
#define GMAC_MAC_L3_L4_CONTROL7_L4SPIM7_WIDTH    (1U)
#define GMAC_MAC_L3_L4_CONTROL7_L4SPIM7(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL7_L4SPIM7_SHIFT)) & GMAC_MAC_L3_L4_CONTROL7_L4SPIM7_MASK)
#define GMAC_MAC_L3_L4_CONTROL7_L4DPM7_MASK      (0x100000U)
#define GMAC_MAC_L3_L4_CONTROL7_L4DPM7_SHIFT     (20U)
#define GMAC_MAC_L3_L4_CONTROL7_L4DPM7_WIDTH     (1U)
#define GMAC_MAC_L3_L4_CONTROL7_L4DPM7(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL7_L4DPM7_SHIFT)) & GMAC_MAC_L3_L4_CONTROL7_L4DPM7_MASK)
#define GMAC_MAC_L3_L4_CONTROL7_L4DPIM7_MASK     (0x200000U)
#define GMAC_MAC_L3_L4_CONTROL7_L4DPIM7_SHIFT    (21U)
#define GMAC_MAC_L3_L4_CONTROL7_L4DPIM7_WIDTH    (1U)
#define GMAC_MAC_L3_L4_CONTROL7_L4DPIM7(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL7_L4DPIM7_SHIFT)) & GMAC_MAC_L3_L4_CONTROL7_L4DPIM7_MASK)
#define GMAC_MAC_L3_L4_CONTROL7_DMCHN7_MASK      (0x7000000U)
#define GMAC_MAC_L3_L4_CONTROL7_DMCHN7_SHIFT     (24U)
#define GMAC_MAC_L3_L4_CONTROL7_DMCHN7_WIDTH     (3U)
#define GMAC_MAC_L3_L4_CONTROL7_DMCHN7(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL7_DMCHN7_SHIFT)) & GMAC_MAC_L3_L4_CONTROL7_DMCHN7_MASK)
#define GMAC_MAC_L3_L4_CONTROL7_DMCHEN7_MASK     (0x10000000U)
#define GMAC_MAC_L3_L4_CONTROL7_DMCHEN7_SHIFT    (28U)
#define GMAC_MAC_L3_L4_CONTROL7_DMCHEN7_WIDTH    (1U)
#define GMAC_MAC_L3_L4_CONTROL7_DMCHEN7(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_L3_L4_CONTROL7_DMCHEN7_SHIFT)) & GMAC_MAC_L3_L4_CONTROL7_DMCHEN7_MASK)
/*! @} */

/*! @name MAC_LAYER4_ADDRESS7 -  */
/*! @{ */
#define GMAC_MAC_LAYER4_ADDRESS7_L4SP7_MASK      (0xFFFFU)
#define GMAC_MAC_LAYER4_ADDRESS7_L4SP7_SHIFT     (0U)
#define GMAC_MAC_LAYER4_ADDRESS7_L4SP7_WIDTH     (16U)
#define GMAC_MAC_LAYER4_ADDRESS7_L4SP7(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_LAYER4_ADDRESS7_L4SP7_SHIFT)) & GMAC_MAC_LAYER4_ADDRESS7_L4SP7_MASK)
#define GMAC_MAC_LAYER4_ADDRESS7_L4DP7_MASK      (0xFFFF0000U)
#define GMAC_MAC_LAYER4_ADDRESS7_L4DP7_SHIFT     (16U)
#define GMAC_MAC_LAYER4_ADDRESS7_L4DP7_WIDTH     (16U)
#define GMAC_MAC_LAYER4_ADDRESS7_L4DP7(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_LAYER4_ADDRESS7_L4DP7_SHIFT)) & GMAC_MAC_LAYER4_ADDRESS7_L4DP7_MASK)
/*! @} */

/*! @name MAC_LAYER3_ADDR0_REG7 -  */
/*! @{ */
#define GMAC_MAC_LAYER3_ADDR0_REG7_L3A07_MASK    (0xFFFFFFFFU)
#define GMAC_MAC_LAYER3_ADDR0_REG7_L3A07_SHIFT   (0U)
#define GMAC_MAC_LAYER3_ADDR0_REG7_L3A07_WIDTH   (32U)
#define GMAC_MAC_LAYER3_ADDR0_REG7_L3A07(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_LAYER3_ADDR0_REG7_L3A07_SHIFT)) & GMAC_MAC_LAYER3_ADDR0_REG7_L3A07_MASK)
/*! @} */

/*! @name MAC_LAYER3_ADDR1_REG7 -  */
/*! @{ */
#define GMAC_MAC_LAYER3_ADDR1_REG7_L3A17_MASK    (0xFFFFFFFFU)
#define GMAC_MAC_LAYER3_ADDR1_REG7_L3A17_SHIFT   (0U)
#define GMAC_MAC_LAYER3_ADDR1_REG7_L3A17_WIDTH   (32U)
#define GMAC_MAC_LAYER3_ADDR1_REG7_L3A17(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_LAYER3_ADDR1_REG7_L3A17_SHIFT)) & GMAC_MAC_LAYER3_ADDR1_REG7_L3A17_MASK)
/*! @} */

/*! @name MAC_LAYER3_ADDR2_REG7 -  */
/*! @{ */
#define GMAC_MAC_LAYER3_ADDR2_REG7_L3A27_MASK    (0xFFFFFFFFU)
#define GMAC_MAC_LAYER3_ADDR2_REG7_L3A27_SHIFT   (0U)
#define GMAC_MAC_LAYER3_ADDR2_REG7_L3A27_WIDTH   (32U)
#define GMAC_MAC_LAYER3_ADDR2_REG7_L3A27(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_LAYER3_ADDR2_REG7_L3A27_SHIFT)) & GMAC_MAC_LAYER3_ADDR2_REG7_L3A27_MASK)
/*! @} */

/*! @name MAC_LAYER3_ADDR3_REG7 -  */
/*! @{ */
#define GMAC_MAC_LAYER3_ADDR3_REG7_L3A37_MASK    (0xFFFFFFFFU)
#define GMAC_MAC_LAYER3_ADDR3_REG7_L3A37_SHIFT   (0U)
#define GMAC_MAC_LAYER3_ADDR3_REG7_L3A37_WIDTH   (32U)
#define GMAC_MAC_LAYER3_ADDR3_REG7_L3A37(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_LAYER3_ADDR3_REG7_L3A37_SHIFT)) & GMAC_MAC_LAYER3_ADDR3_REG7_L3A37_MASK)
/*! @} */

/*! @name MAC_TIMESTAMP_CONTROL -  */
/*! @{ */
#define GMAC_MAC_TIMESTAMP_CONTROL_TSENA_MASK    (0x1U)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSENA_SHIFT   (0U)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSENA_WIDTH   (1U)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSENA(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_TIMESTAMP_CONTROL_TSENA_SHIFT)) & GMAC_MAC_TIMESTAMP_CONTROL_TSENA_MASK)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSCFUPDT_MASK (0x2U)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSCFUPDT_SHIFT (1U)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSCFUPDT_WIDTH (1U)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSCFUPDT(x)   (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_TIMESTAMP_CONTROL_TSCFUPDT_SHIFT)) & GMAC_MAC_TIMESTAMP_CONTROL_TSCFUPDT_MASK)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSINIT_MASK   (0x4U)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSINIT_SHIFT  (2U)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSINIT_WIDTH  (1U)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSINIT(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_TIMESTAMP_CONTROL_TSINIT_SHIFT)) & GMAC_MAC_TIMESTAMP_CONTROL_TSINIT_MASK)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSUPDT_MASK   (0x8U)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSUPDT_SHIFT  (3U)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSUPDT_WIDTH  (1U)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSUPDT(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_TIMESTAMP_CONTROL_TSUPDT_SHIFT)) & GMAC_MAC_TIMESTAMP_CONTROL_TSUPDT_MASK)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSADDREG_MASK (0x20U)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSADDREG_SHIFT (5U)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSADDREG_WIDTH (1U)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSADDREG(x)   (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_TIMESTAMP_CONTROL_TSADDREG_SHIFT)) & GMAC_MAC_TIMESTAMP_CONTROL_TSADDREG_MASK)
#define GMAC_MAC_TIMESTAMP_CONTROL_PTGE_MASK     (0x40U)
#define GMAC_MAC_TIMESTAMP_CONTROL_PTGE_SHIFT    (6U)
#define GMAC_MAC_TIMESTAMP_CONTROL_PTGE_WIDTH    (1U)
#define GMAC_MAC_TIMESTAMP_CONTROL_PTGE(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_TIMESTAMP_CONTROL_PTGE_SHIFT)) & GMAC_MAC_TIMESTAMP_CONTROL_PTGE_MASK)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSENALL_MASK  (0x100U)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSENALL_SHIFT (8U)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSENALL_WIDTH (1U)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSENALL(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_TIMESTAMP_CONTROL_TSENALL_SHIFT)) & GMAC_MAC_TIMESTAMP_CONTROL_TSENALL_MASK)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSCTRLSSR_MASK (0x200U)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSCTRLSSR_SHIFT (9U)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSCTRLSSR_WIDTH (1U)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSCTRLSSR(x)  (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_TIMESTAMP_CONTROL_TSCTRLSSR_SHIFT)) & GMAC_MAC_TIMESTAMP_CONTROL_TSCTRLSSR_MASK)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSVER2ENA_MASK (0x400U)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSVER2ENA_SHIFT (10U)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSVER2ENA_WIDTH (1U)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSVER2ENA(x)  (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_TIMESTAMP_CONTROL_TSVER2ENA_SHIFT)) & GMAC_MAC_TIMESTAMP_CONTROL_TSVER2ENA_MASK)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSIPENA_MASK  (0x800U)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSIPENA_SHIFT (11U)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSIPENA_WIDTH (1U)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSIPENA(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_TIMESTAMP_CONTROL_TSIPENA_SHIFT)) & GMAC_MAC_TIMESTAMP_CONTROL_TSIPENA_MASK)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSIPV6ENA_MASK (0x1000U)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSIPV6ENA_SHIFT (12U)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSIPV6ENA_WIDTH (1U)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSIPV6ENA(x)  (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_TIMESTAMP_CONTROL_TSIPV6ENA_SHIFT)) & GMAC_MAC_TIMESTAMP_CONTROL_TSIPV6ENA_MASK)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSIPV4ENA_MASK (0x2000U)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSIPV4ENA_SHIFT (13U)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSIPV4ENA_WIDTH (1U)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSIPV4ENA(x)  (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_TIMESTAMP_CONTROL_TSIPV4ENA_SHIFT)) & GMAC_MAC_TIMESTAMP_CONTROL_TSIPV4ENA_MASK)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSEVNTENA_MASK (0x4000U)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSEVNTENA_SHIFT (14U)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSEVNTENA_WIDTH (1U)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSEVNTENA(x)  (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_TIMESTAMP_CONTROL_TSEVNTENA_SHIFT)) & GMAC_MAC_TIMESTAMP_CONTROL_TSEVNTENA_MASK)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSMSTRENA_MASK (0x8000U)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSMSTRENA_SHIFT (15U)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSMSTRENA_WIDTH (1U)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSMSTRENA(x)  (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_TIMESTAMP_CONTROL_TSMSTRENA_SHIFT)) & GMAC_MAC_TIMESTAMP_CONTROL_TSMSTRENA_MASK)
#define GMAC_MAC_TIMESTAMP_CONTROL_SNAPTYPSEL_MASK (0x30000U)
#define GMAC_MAC_TIMESTAMP_CONTROL_SNAPTYPSEL_SHIFT (16U)
#define GMAC_MAC_TIMESTAMP_CONTROL_SNAPTYPSEL_WIDTH (2U)
#define GMAC_MAC_TIMESTAMP_CONTROL_SNAPTYPSEL(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_TIMESTAMP_CONTROL_SNAPTYPSEL_SHIFT)) & GMAC_MAC_TIMESTAMP_CONTROL_SNAPTYPSEL_MASK)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSENMACADDR_MASK (0x40000U)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSENMACADDR_SHIFT (18U)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSENMACADDR_WIDTH (1U)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSENMACADDR(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_TIMESTAMP_CONTROL_TSENMACADDR_SHIFT)) & GMAC_MAC_TIMESTAMP_CONTROL_TSENMACADDR_MASK)
#define GMAC_MAC_TIMESTAMP_CONTROL_CSC_MASK      (0x80000U)
#define GMAC_MAC_TIMESTAMP_CONTROL_CSC_SHIFT     (19U)
#define GMAC_MAC_TIMESTAMP_CONTROL_CSC_WIDTH     (1U)
#define GMAC_MAC_TIMESTAMP_CONTROL_CSC(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_TIMESTAMP_CONTROL_CSC_SHIFT)) & GMAC_MAC_TIMESTAMP_CONTROL_CSC_MASK)
#define GMAC_MAC_TIMESTAMP_CONTROL_ESTI_MASK     (0x100000U)
#define GMAC_MAC_TIMESTAMP_CONTROL_ESTI_SHIFT    (20U)
#define GMAC_MAC_TIMESTAMP_CONTROL_ESTI_WIDTH    (1U)
#define GMAC_MAC_TIMESTAMP_CONTROL_ESTI(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_TIMESTAMP_CONTROL_ESTI_SHIFT)) & GMAC_MAC_TIMESTAMP_CONTROL_ESTI_MASK)
#define GMAC_MAC_TIMESTAMP_CONTROL_TXTSSTSM_MASK (0x1000000U)
#define GMAC_MAC_TIMESTAMP_CONTROL_TXTSSTSM_SHIFT (24U)
#define GMAC_MAC_TIMESTAMP_CONTROL_TXTSSTSM_WIDTH (1U)
#define GMAC_MAC_TIMESTAMP_CONTROL_TXTSSTSM(x)   (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_TIMESTAMP_CONTROL_TXTSSTSM_SHIFT)) & GMAC_MAC_TIMESTAMP_CONTROL_TXTSSTSM_MASK)
#define GMAC_MAC_TIMESTAMP_CONTROL_AV8021ASMEN_MASK (0x10000000U)
#define GMAC_MAC_TIMESTAMP_CONTROL_AV8021ASMEN_SHIFT (28U)
#define GMAC_MAC_TIMESTAMP_CONTROL_AV8021ASMEN_WIDTH (1U)
#define GMAC_MAC_TIMESTAMP_CONTROL_AV8021ASMEN(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_TIMESTAMP_CONTROL_AV8021ASMEN_SHIFT)) & GMAC_MAC_TIMESTAMP_CONTROL_AV8021ASMEN_MASK)
/*! @} */

/*! @name MAC_SUB_SECOND_INCREMENT -  */
/*! @{ */
#define GMAC_MAC_SUB_SECOND_INCREMENT_SNSINC_MASK (0xFF00U)
#define GMAC_MAC_SUB_SECOND_INCREMENT_SNSINC_SHIFT (8U)
#define GMAC_MAC_SUB_SECOND_INCREMENT_SNSINC_WIDTH (8U)
#define GMAC_MAC_SUB_SECOND_INCREMENT_SNSINC(x)  (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_SUB_SECOND_INCREMENT_SNSINC_SHIFT)) & GMAC_MAC_SUB_SECOND_INCREMENT_SNSINC_MASK)
#define GMAC_MAC_SUB_SECOND_INCREMENT_SSINC_MASK (0xFF0000U)
#define GMAC_MAC_SUB_SECOND_INCREMENT_SSINC_SHIFT (16U)
#define GMAC_MAC_SUB_SECOND_INCREMENT_SSINC_WIDTH (8U)
#define GMAC_MAC_SUB_SECOND_INCREMENT_SSINC(x)   (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_SUB_SECOND_INCREMENT_SSINC_SHIFT)) & GMAC_MAC_SUB_SECOND_INCREMENT_SSINC_MASK)
/*! @} */

/*! @name MAC_SYSTEM_TIME_SECONDS -  */
/*! @{ */
#define GMAC_MAC_SYSTEM_TIME_SECONDS_TSS_MASK    (0xFFFFFFFFU)
#define GMAC_MAC_SYSTEM_TIME_SECONDS_TSS_SHIFT   (0U)
#define GMAC_MAC_SYSTEM_TIME_SECONDS_TSS_WIDTH   (32U)
#define GMAC_MAC_SYSTEM_TIME_SECONDS_TSS(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_SYSTEM_TIME_SECONDS_TSS_SHIFT)) & GMAC_MAC_SYSTEM_TIME_SECONDS_TSS_MASK)
/*! @} */

/*! @name MAC_SYSTEM_TIME_NANOSECONDS -  */
/*! @{ */
#define GMAC_MAC_SYSTEM_TIME_NANOSECONDS_TSSS_MASK (0x7FFFFFFFU)
#define GMAC_MAC_SYSTEM_TIME_NANOSECONDS_TSSS_SHIFT (0U)
#define GMAC_MAC_SYSTEM_TIME_NANOSECONDS_TSSS_WIDTH (31U)
#define GMAC_MAC_SYSTEM_TIME_NANOSECONDS_TSSS(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_SYSTEM_TIME_NANOSECONDS_TSSS_SHIFT)) & GMAC_MAC_SYSTEM_TIME_NANOSECONDS_TSSS_MASK)
/*! @} */

/*! @name MAC_SYSTEM_TIME_SECONDS_UPDATE -  */
/*! @{ */
#define GMAC_MAC_SYSTEM_TIME_SECONDS_UPDATE_TSS_MASK (0xFFFFFFFFU)
#define GMAC_MAC_SYSTEM_TIME_SECONDS_UPDATE_TSS_SHIFT (0U)
#define GMAC_MAC_SYSTEM_TIME_SECONDS_UPDATE_TSS_WIDTH (32U)
#define GMAC_MAC_SYSTEM_TIME_SECONDS_UPDATE_TSS(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_SYSTEM_TIME_SECONDS_UPDATE_TSS_SHIFT)) & GMAC_MAC_SYSTEM_TIME_SECONDS_UPDATE_TSS_MASK)
/*! @} */

/*! @name MAC_SYSTEM_TIME_NANOSECONDS_UPDATE -  */
/*! @{ */
#define GMAC_MAC_SYSTEM_TIME_NANOSECONDS_UPDATE_TSSS_MASK (0x7FFFFFFFU)
#define GMAC_MAC_SYSTEM_TIME_NANOSECONDS_UPDATE_TSSS_SHIFT (0U)
#define GMAC_MAC_SYSTEM_TIME_NANOSECONDS_UPDATE_TSSS_WIDTH (31U)
#define GMAC_MAC_SYSTEM_TIME_NANOSECONDS_UPDATE_TSSS(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_SYSTEM_TIME_NANOSECONDS_UPDATE_TSSS_SHIFT)) & GMAC_MAC_SYSTEM_TIME_NANOSECONDS_UPDATE_TSSS_MASK)
#define GMAC_MAC_SYSTEM_TIME_NANOSECONDS_UPDATE_ADDSUB_MASK (0x80000000U)
#define GMAC_MAC_SYSTEM_TIME_NANOSECONDS_UPDATE_ADDSUB_SHIFT (31U)
#define GMAC_MAC_SYSTEM_TIME_NANOSECONDS_UPDATE_ADDSUB_WIDTH (1U)
#define GMAC_MAC_SYSTEM_TIME_NANOSECONDS_UPDATE_ADDSUB(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_SYSTEM_TIME_NANOSECONDS_UPDATE_ADDSUB_SHIFT)) & GMAC_MAC_SYSTEM_TIME_NANOSECONDS_UPDATE_ADDSUB_MASK)
/*! @} */

/*! @name MAC_TIMESTAMP_ADDEND -  */
/*! @{ */
#define GMAC_MAC_TIMESTAMP_ADDEND_TSAR_MASK      (0xFFFFFFFFU)
#define GMAC_MAC_TIMESTAMP_ADDEND_TSAR_SHIFT     (0U)
#define GMAC_MAC_TIMESTAMP_ADDEND_TSAR_WIDTH     (32U)
#define GMAC_MAC_TIMESTAMP_ADDEND_TSAR(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_TIMESTAMP_ADDEND_TSAR_SHIFT)) & GMAC_MAC_TIMESTAMP_ADDEND_TSAR_MASK)
/*! @} */

/*! @name MAC_SYSTEM_TIME_HIGHER_WORD_SECONDS -  */
/*! @{ */
#define GMAC_MAC_SYSTEM_TIME_HIGHER_WORD_SECONDS_TSHWR_MASK (0xFFFFU)
#define GMAC_MAC_SYSTEM_TIME_HIGHER_WORD_SECONDS_TSHWR_SHIFT (0U)
#define GMAC_MAC_SYSTEM_TIME_HIGHER_WORD_SECONDS_TSHWR_WIDTH (16U)
#define GMAC_MAC_SYSTEM_TIME_HIGHER_WORD_SECONDS_TSHWR(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_SYSTEM_TIME_HIGHER_WORD_SECONDS_TSHWR_SHIFT)) & GMAC_MAC_SYSTEM_TIME_HIGHER_WORD_SECONDS_TSHWR_MASK)
/*! @} */

/*! @name MAC_TIMESTAMP_STATUS -  */
/*! @{ */
#define GMAC_MAC_TIMESTAMP_STATUS_TSSOVF_MASK    (0x1U)
#define GMAC_MAC_TIMESTAMP_STATUS_TSSOVF_SHIFT   (0U)
#define GMAC_MAC_TIMESTAMP_STATUS_TSSOVF_WIDTH   (1U)
#define GMAC_MAC_TIMESTAMP_STATUS_TSSOVF(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_TIMESTAMP_STATUS_TSSOVF_SHIFT)) & GMAC_MAC_TIMESTAMP_STATUS_TSSOVF_MASK)
#define GMAC_MAC_TIMESTAMP_STATUS_TSTARGT0_MASK  (0x2U)
#define GMAC_MAC_TIMESTAMP_STATUS_TSTARGT0_SHIFT (1U)
#define GMAC_MAC_TIMESTAMP_STATUS_TSTARGT0_WIDTH (1U)
#define GMAC_MAC_TIMESTAMP_STATUS_TSTARGT0(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_TIMESTAMP_STATUS_TSTARGT0_SHIFT)) & GMAC_MAC_TIMESTAMP_STATUS_TSTARGT0_MASK)
#define GMAC_MAC_TIMESTAMP_STATUS_AUXTSTRIG_MASK (0x4U)
#define GMAC_MAC_TIMESTAMP_STATUS_AUXTSTRIG_SHIFT (2U)
#define GMAC_MAC_TIMESTAMP_STATUS_AUXTSTRIG_WIDTH (1U)
#define GMAC_MAC_TIMESTAMP_STATUS_AUXTSTRIG(x)   (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_TIMESTAMP_STATUS_AUXTSTRIG_SHIFT)) & GMAC_MAC_TIMESTAMP_STATUS_AUXTSTRIG_MASK)
#define GMAC_MAC_TIMESTAMP_STATUS_TSTRGTERR0_MASK (0x8U)
#define GMAC_MAC_TIMESTAMP_STATUS_TSTRGTERR0_SHIFT (3U)
#define GMAC_MAC_TIMESTAMP_STATUS_TSTRGTERR0_WIDTH (1U)
#define GMAC_MAC_TIMESTAMP_STATUS_TSTRGTERR0(x)  (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_TIMESTAMP_STATUS_TSTRGTERR0_SHIFT)) & GMAC_MAC_TIMESTAMP_STATUS_TSTRGTERR0_MASK)
#define GMAC_MAC_TIMESTAMP_STATUS_TSTARGT1_MASK  (0x10U)
#define GMAC_MAC_TIMESTAMP_STATUS_TSTARGT1_SHIFT (4U)
#define GMAC_MAC_TIMESTAMP_STATUS_TSTARGT1_WIDTH (1U)
#define GMAC_MAC_TIMESTAMP_STATUS_TSTARGT1(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_TIMESTAMP_STATUS_TSTARGT1_SHIFT)) & GMAC_MAC_TIMESTAMP_STATUS_TSTARGT1_MASK)
#define GMAC_MAC_TIMESTAMP_STATUS_TSTRGTERR1_MASK (0x20U)
#define GMAC_MAC_TIMESTAMP_STATUS_TSTRGTERR1_SHIFT (5U)
#define GMAC_MAC_TIMESTAMP_STATUS_TSTRGTERR1_WIDTH (1U)
#define GMAC_MAC_TIMESTAMP_STATUS_TSTRGTERR1(x)  (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_TIMESTAMP_STATUS_TSTRGTERR1_SHIFT)) & GMAC_MAC_TIMESTAMP_STATUS_TSTRGTERR1_MASK)
#define GMAC_MAC_TIMESTAMP_STATUS_TSTARGT2_MASK  (0x40U)
#define GMAC_MAC_TIMESTAMP_STATUS_TSTARGT2_SHIFT (6U)
#define GMAC_MAC_TIMESTAMP_STATUS_TSTARGT2_WIDTH (1U)
#define GMAC_MAC_TIMESTAMP_STATUS_TSTARGT2(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_TIMESTAMP_STATUS_TSTARGT2_SHIFT)) & GMAC_MAC_TIMESTAMP_STATUS_TSTARGT2_MASK)
#define GMAC_MAC_TIMESTAMP_STATUS_TSTRGTERR2_MASK (0x80U)
#define GMAC_MAC_TIMESTAMP_STATUS_TSTRGTERR2_SHIFT (7U)
#define GMAC_MAC_TIMESTAMP_STATUS_TSTRGTERR2_WIDTH (1U)
#define GMAC_MAC_TIMESTAMP_STATUS_TSTRGTERR2(x)  (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_TIMESTAMP_STATUS_TSTRGTERR2_SHIFT)) & GMAC_MAC_TIMESTAMP_STATUS_TSTRGTERR2_MASK)
#define GMAC_MAC_TIMESTAMP_STATUS_TSTARGT3_MASK  (0x100U)
#define GMAC_MAC_TIMESTAMP_STATUS_TSTARGT3_SHIFT (8U)
#define GMAC_MAC_TIMESTAMP_STATUS_TSTARGT3_WIDTH (1U)
#define GMAC_MAC_TIMESTAMP_STATUS_TSTARGT3(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_TIMESTAMP_STATUS_TSTARGT3_SHIFT)) & GMAC_MAC_TIMESTAMP_STATUS_TSTARGT3_MASK)
#define GMAC_MAC_TIMESTAMP_STATUS_TSTRGTERR3_MASK (0x200U)
#define GMAC_MAC_TIMESTAMP_STATUS_TSTRGTERR3_SHIFT (9U)
#define GMAC_MAC_TIMESTAMP_STATUS_TSTRGTERR3_WIDTH (1U)
#define GMAC_MAC_TIMESTAMP_STATUS_TSTRGTERR3(x)  (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_TIMESTAMP_STATUS_TSTRGTERR3_SHIFT)) & GMAC_MAC_TIMESTAMP_STATUS_TSTRGTERR3_MASK)
#define GMAC_MAC_TIMESTAMP_STATUS_TXTSSIS_MASK   (0x8000U)
#define GMAC_MAC_TIMESTAMP_STATUS_TXTSSIS_SHIFT  (15U)
#define GMAC_MAC_TIMESTAMP_STATUS_TXTSSIS_WIDTH  (1U)
#define GMAC_MAC_TIMESTAMP_STATUS_TXTSSIS(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_TIMESTAMP_STATUS_TXTSSIS_SHIFT)) & GMAC_MAC_TIMESTAMP_STATUS_TXTSSIS_MASK)
#define GMAC_MAC_TIMESTAMP_STATUS_ATSSTN_MASK    (0xF0000U)
#define GMAC_MAC_TIMESTAMP_STATUS_ATSSTN_SHIFT   (16U)
#define GMAC_MAC_TIMESTAMP_STATUS_ATSSTN_WIDTH   (4U)
#define GMAC_MAC_TIMESTAMP_STATUS_ATSSTN(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_TIMESTAMP_STATUS_ATSSTN_SHIFT)) & GMAC_MAC_TIMESTAMP_STATUS_ATSSTN_MASK)
#define GMAC_MAC_TIMESTAMP_STATUS_ATSSTM_MASK    (0x1000000U)
#define GMAC_MAC_TIMESTAMP_STATUS_ATSSTM_SHIFT   (24U)
#define GMAC_MAC_TIMESTAMP_STATUS_ATSSTM_WIDTH   (1U)
#define GMAC_MAC_TIMESTAMP_STATUS_ATSSTM(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_TIMESTAMP_STATUS_ATSSTM_SHIFT)) & GMAC_MAC_TIMESTAMP_STATUS_ATSSTM_MASK)
#define GMAC_MAC_TIMESTAMP_STATUS_ATSNS_MASK     (0x3E000000U)
#define GMAC_MAC_TIMESTAMP_STATUS_ATSNS_SHIFT    (25U)
#define GMAC_MAC_TIMESTAMP_STATUS_ATSNS_WIDTH    (5U)
#define GMAC_MAC_TIMESTAMP_STATUS_ATSNS(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_TIMESTAMP_STATUS_ATSNS_SHIFT)) & GMAC_MAC_TIMESTAMP_STATUS_ATSNS_MASK)
/*! @} */

/*! @name MAC_TX_TIMESTAMP_STATUS_NANOSECONDS -  */
/*! @{ */
#define GMAC_MAC_TX_TIMESTAMP_STATUS_NANOSECONDS_TXTSSLO_MASK (0x7FFFFFFFU)
#define GMAC_MAC_TX_TIMESTAMP_STATUS_NANOSECONDS_TXTSSLO_SHIFT (0U)
#define GMAC_MAC_TX_TIMESTAMP_STATUS_NANOSECONDS_TXTSSLO_WIDTH (31U)
#define GMAC_MAC_TX_TIMESTAMP_STATUS_NANOSECONDS_TXTSSLO(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_TX_TIMESTAMP_STATUS_NANOSECONDS_TXTSSLO_SHIFT)) & GMAC_MAC_TX_TIMESTAMP_STATUS_NANOSECONDS_TXTSSLO_MASK)
#define GMAC_MAC_TX_TIMESTAMP_STATUS_NANOSECONDS_TXTSSMIS_MASK (0x80000000U)
#define GMAC_MAC_TX_TIMESTAMP_STATUS_NANOSECONDS_TXTSSMIS_SHIFT (31U)
#define GMAC_MAC_TX_TIMESTAMP_STATUS_NANOSECONDS_TXTSSMIS_WIDTH (1U)
#define GMAC_MAC_TX_TIMESTAMP_STATUS_NANOSECONDS_TXTSSMIS(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_TX_TIMESTAMP_STATUS_NANOSECONDS_TXTSSMIS_SHIFT)) & GMAC_MAC_TX_TIMESTAMP_STATUS_NANOSECONDS_TXTSSMIS_MASK)
/*! @} */

/*! @name MAC_TX_TIMESTAMP_STATUS_SECONDS -  */
/*! @{ */
#define GMAC_MAC_TX_TIMESTAMP_STATUS_SECONDS_TXTSSHI_MASK (0xFFFFFFFFU)
#define GMAC_MAC_TX_TIMESTAMP_STATUS_SECONDS_TXTSSHI_SHIFT (0U)
#define GMAC_MAC_TX_TIMESTAMP_STATUS_SECONDS_TXTSSHI_WIDTH (32U)
#define GMAC_MAC_TX_TIMESTAMP_STATUS_SECONDS_TXTSSHI(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_TX_TIMESTAMP_STATUS_SECONDS_TXTSSHI_SHIFT)) & GMAC_MAC_TX_TIMESTAMP_STATUS_SECONDS_TXTSSHI_MASK)
/*! @} */

/*! @name MAC_AUXILIARY_CONTROL -  */
/*! @{ */
#define GMAC_MAC_AUXILIARY_CONTROL_ATSFC_MASK    (0x1U)
#define GMAC_MAC_AUXILIARY_CONTROL_ATSFC_SHIFT   (0U)
#define GMAC_MAC_AUXILIARY_CONTROL_ATSFC_WIDTH   (1U)
#define GMAC_MAC_AUXILIARY_CONTROL_ATSFC(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_AUXILIARY_CONTROL_ATSFC_SHIFT)) & GMAC_MAC_AUXILIARY_CONTROL_ATSFC_MASK)
#define GMAC_MAC_AUXILIARY_CONTROL_ATSEN0_MASK   (0x10U)
#define GMAC_MAC_AUXILIARY_CONTROL_ATSEN0_SHIFT  (4U)
#define GMAC_MAC_AUXILIARY_CONTROL_ATSEN0_WIDTH  (1U)
#define GMAC_MAC_AUXILIARY_CONTROL_ATSEN0(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_AUXILIARY_CONTROL_ATSEN0_SHIFT)) & GMAC_MAC_AUXILIARY_CONTROL_ATSEN0_MASK)
#define GMAC_MAC_AUXILIARY_CONTROL_ATSEN1_MASK   (0x20U)
#define GMAC_MAC_AUXILIARY_CONTROL_ATSEN1_SHIFT  (5U)
#define GMAC_MAC_AUXILIARY_CONTROL_ATSEN1_WIDTH  (1U)
#define GMAC_MAC_AUXILIARY_CONTROL_ATSEN1(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_AUXILIARY_CONTROL_ATSEN1_SHIFT)) & GMAC_MAC_AUXILIARY_CONTROL_ATSEN1_MASK)
#define GMAC_MAC_AUXILIARY_CONTROL_ATSEN2_MASK   (0x40U)
#define GMAC_MAC_AUXILIARY_CONTROL_ATSEN2_SHIFT  (6U)
#define GMAC_MAC_AUXILIARY_CONTROL_ATSEN2_WIDTH  (1U)
#define GMAC_MAC_AUXILIARY_CONTROL_ATSEN2(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_AUXILIARY_CONTROL_ATSEN2_SHIFT)) & GMAC_MAC_AUXILIARY_CONTROL_ATSEN2_MASK)
#define GMAC_MAC_AUXILIARY_CONTROL_ATSEN3_MASK   (0x80U)
#define GMAC_MAC_AUXILIARY_CONTROL_ATSEN3_SHIFT  (7U)
#define GMAC_MAC_AUXILIARY_CONTROL_ATSEN3_WIDTH  (1U)
#define GMAC_MAC_AUXILIARY_CONTROL_ATSEN3(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_AUXILIARY_CONTROL_ATSEN3_SHIFT)) & GMAC_MAC_AUXILIARY_CONTROL_ATSEN3_MASK)
/*! @} */

/*! @name MAC_AUXILIARY_TIMESTAMP_NANOSECONDS -  */
/*! @{ */
#define GMAC_MAC_AUXILIARY_TIMESTAMP_NANOSECONDS_AUXTSLO_MASK (0x7FFFFFFFU)
#define GMAC_MAC_AUXILIARY_TIMESTAMP_NANOSECONDS_AUXTSLO_SHIFT (0U)
#define GMAC_MAC_AUXILIARY_TIMESTAMP_NANOSECONDS_AUXTSLO_WIDTH (31U)
#define GMAC_MAC_AUXILIARY_TIMESTAMP_NANOSECONDS_AUXTSLO(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_AUXILIARY_TIMESTAMP_NANOSECONDS_AUXTSLO_SHIFT)) & GMAC_MAC_AUXILIARY_TIMESTAMP_NANOSECONDS_AUXTSLO_MASK)
/*! @} */

/*! @name MAC_AUXILIARY_TIMESTAMP_SECONDS -  */
/*! @{ */
#define GMAC_MAC_AUXILIARY_TIMESTAMP_SECONDS_AUXTSHI_MASK (0xFFFFFFFFU)
#define GMAC_MAC_AUXILIARY_TIMESTAMP_SECONDS_AUXTSHI_SHIFT (0U)
#define GMAC_MAC_AUXILIARY_TIMESTAMP_SECONDS_AUXTSHI_WIDTH (32U)
#define GMAC_MAC_AUXILIARY_TIMESTAMP_SECONDS_AUXTSHI(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_AUXILIARY_TIMESTAMP_SECONDS_AUXTSHI_SHIFT)) & GMAC_MAC_AUXILIARY_TIMESTAMP_SECONDS_AUXTSHI_MASK)
/*! @} */

/*! @name MAC_TIMESTAMP_INGRESS_ASYM_CORR -  */
/*! @{ */
#define GMAC_MAC_TIMESTAMP_INGRESS_ASYM_CORR_OSTIAC_MASK (0xFFFFFFFFU)
#define GMAC_MAC_TIMESTAMP_INGRESS_ASYM_CORR_OSTIAC_SHIFT (0U)
#define GMAC_MAC_TIMESTAMP_INGRESS_ASYM_CORR_OSTIAC_WIDTH (32U)
#define GMAC_MAC_TIMESTAMP_INGRESS_ASYM_CORR_OSTIAC(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_TIMESTAMP_INGRESS_ASYM_CORR_OSTIAC_SHIFT)) & GMAC_MAC_TIMESTAMP_INGRESS_ASYM_CORR_OSTIAC_MASK)
/*! @} */

/*! @name MAC_TIMESTAMP_EGRESS_ASYM_CORR -  */
/*! @{ */
#define GMAC_MAC_TIMESTAMP_EGRESS_ASYM_CORR_OSTEAC_MASK (0xFFFFFFFFU)
#define GMAC_MAC_TIMESTAMP_EGRESS_ASYM_CORR_OSTEAC_SHIFT (0U)
#define GMAC_MAC_TIMESTAMP_EGRESS_ASYM_CORR_OSTEAC_WIDTH (32U)
#define GMAC_MAC_TIMESTAMP_EGRESS_ASYM_CORR_OSTEAC(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_TIMESTAMP_EGRESS_ASYM_CORR_OSTEAC_SHIFT)) & GMAC_MAC_TIMESTAMP_EGRESS_ASYM_CORR_OSTEAC_MASK)
/*! @} */

/*! @name MAC_TIMESTAMP_INGRESS_CORR_NANOSECOND -  */
/*! @{ */
#define GMAC_MAC_TIMESTAMP_INGRESS_CORR_NANOSECOND_TSIC_MASK (0xFFFFFFFFU)
#define GMAC_MAC_TIMESTAMP_INGRESS_CORR_NANOSECOND_TSIC_SHIFT (0U)
#define GMAC_MAC_TIMESTAMP_INGRESS_CORR_NANOSECOND_TSIC_WIDTH (32U)
#define GMAC_MAC_TIMESTAMP_INGRESS_CORR_NANOSECOND_TSIC(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_TIMESTAMP_INGRESS_CORR_NANOSECOND_TSIC_SHIFT)) & GMAC_MAC_TIMESTAMP_INGRESS_CORR_NANOSECOND_TSIC_MASK)
/*! @} */

/*! @name MAC_TIMESTAMP_EGRESS_CORR_NANOSECOND -  */
/*! @{ */
#define GMAC_MAC_TIMESTAMP_EGRESS_CORR_NANOSECOND_TSEC_MASK (0xFFFFFFFFU)
#define GMAC_MAC_TIMESTAMP_EGRESS_CORR_NANOSECOND_TSEC_SHIFT (0U)
#define GMAC_MAC_TIMESTAMP_EGRESS_CORR_NANOSECOND_TSEC_WIDTH (32U)
#define GMAC_MAC_TIMESTAMP_EGRESS_CORR_NANOSECOND_TSEC(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_TIMESTAMP_EGRESS_CORR_NANOSECOND_TSEC_SHIFT)) & GMAC_MAC_TIMESTAMP_EGRESS_CORR_NANOSECOND_TSEC_MASK)
/*! @} */

/*! @name MAC_TIMESTAMP_INGRESS_CORR_SUBNANOSEC -  */
/*! @{ */
#define GMAC_MAC_TIMESTAMP_INGRESS_CORR_SUBNANOSEC_TSICSNS_MASK (0xFF00U)
#define GMAC_MAC_TIMESTAMP_INGRESS_CORR_SUBNANOSEC_TSICSNS_SHIFT (8U)
#define GMAC_MAC_TIMESTAMP_INGRESS_CORR_SUBNANOSEC_TSICSNS_WIDTH (8U)
#define GMAC_MAC_TIMESTAMP_INGRESS_CORR_SUBNANOSEC_TSICSNS(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_TIMESTAMP_INGRESS_CORR_SUBNANOSEC_TSICSNS_SHIFT)) & GMAC_MAC_TIMESTAMP_INGRESS_CORR_SUBNANOSEC_TSICSNS_MASK)
/*! @} */

/*! @name MAC_TIMESTAMP_EGRESS_CORR_SUBNANOSEC -  */
/*! @{ */
#define GMAC_MAC_TIMESTAMP_EGRESS_CORR_SUBNANOSEC_TSECSNS_MASK (0xFF00U)
#define GMAC_MAC_TIMESTAMP_EGRESS_CORR_SUBNANOSEC_TSECSNS_SHIFT (8U)
#define GMAC_MAC_TIMESTAMP_EGRESS_CORR_SUBNANOSEC_TSECSNS_WIDTH (8U)
#define GMAC_MAC_TIMESTAMP_EGRESS_CORR_SUBNANOSEC_TSECSNS(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_TIMESTAMP_EGRESS_CORR_SUBNANOSEC_TSECSNS_SHIFT)) & GMAC_MAC_TIMESTAMP_EGRESS_CORR_SUBNANOSEC_TSECSNS_MASK)
/*! @} */

/*! @name MAC_TIMESTAMP_INGRESS_LATENCY -  */
/*! @{ */
#define GMAC_MAC_TIMESTAMP_INGRESS_LATENCY_ITLSNS_MASK (0xFF00U)
#define GMAC_MAC_TIMESTAMP_INGRESS_LATENCY_ITLSNS_SHIFT (8U)
#define GMAC_MAC_TIMESTAMP_INGRESS_LATENCY_ITLSNS_WIDTH (8U)
#define GMAC_MAC_TIMESTAMP_INGRESS_LATENCY_ITLSNS(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_TIMESTAMP_INGRESS_LATENCY_ITLSNS_SHIFT)) & GMAC_MAC_TIMESTAMP_INGRESS_LATENCY_ITLSNS_MASK)
#define GMAC_MAC_TIMESTAMP_INGRESS_LATENCY_ITLNS_MASK (0xFFF0000U)
#define GMAC_MAC_TIMESTAMP_INGRESS_LATENCY_ITLNS_SHIFT (16U)
#define GMAC_MAC_TIMESTAMP_INGRESS_LATENCY_ITLNS_WIDTH (12U)
#define GMAC_MAC_TIMESTAMP_INGRESS_LATENCY_ITLNS(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_TIMESTAMP_INGRESS_LATENCY_ITLNS_SHIFT)) & GMAC_MAC_TIMESTAMP_INGRESS_LATENCY_ITLNS_MASK)
/*! @} */

/*! @name MAC_TIMESTAMP_EGRESS_LATENCY -  */
/*! @{ */
#define GMAC_MAC_TIMESTAMP_EGRESS_LATENCY_ETLSNS_MASK (0xFF00U)
#define GMAC_MAC_TIMESTAMP_EGRESS_LATENCY_ETLSNS_SHIFT (8U)
#define GMAC_MAC_TIMESTAMP_EGRESS_LATENCY_ETLSNS_WIDTH (8U)
#define GMAC_MAC_TIMESTAMP_EGRESS_LATENCY_ETLSNS(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_TIMESTAMP_EGRESS_LATENCY_ETLSNS_SHIFT)) & GMAC_MAC_TIMESTAMP_EGRESS_LATENCY_ETLSNS_MASK)
#define GMAC_MAC_TIMESTAMP_EGRESS_LATENCY_ETLNS_MASK (0xFFF0000U)
#define GMAC_MAC_TIMESTAMP_EGRESS_LATENCY_ETLNS_SHIFT (16U)
#define GMAC_MAC_TIMESTAMP_EGRESS_LATENCY_ETLNS_WIDTH (12U)
#define GMAC_MAC_TIMESTAMP_EGRESS_LATENCY_ETLNS(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_TIMESTAMP_EGRESS_LATENCY_ETLNS_SHIFT)) & GMAC_MAC_TIMESTAMP_EGRESS_LATENCY_ETLNS_MASK)
/*! @} */

/*! @name MAC_PPS_CONTROL -  */
/*! @{ */
#define GMAC_MAC_PPS_CONTROL_PPSCTRL_PPSCMD_MASK (0xFU)
#define GMAC_MAC_PPS_CONTROL_PPSCTRL_PPSCMD_SHIFT (0U)
#define GMAC_MAC_PPS_CONTROL_PPSCTRL_PPSCMD_WIDTH (4U)
#define GMAC_MAC_PPS_CONTROL_PPSCTRL_PPSCMD(x)   (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PPS_CONTROL_PPSCTRL_PPSCMD_SHIFT)) & GMAC_MAC_PPS_CONTROL_PPSCTRL_PPSCMD_MASK)
#define GMAC_MAC_PPS_CONTROL_PPSEN0_MASK         (0x10U)
#define GMAC_MAC_PPS_CONTROL_PPSEN0_SHIFT        (4U)
#define GMAC_MAC_PPS_CONTROL_PPSEN0_WIDTH        (1U)
#define GMAC_MAC_PPS_CONTROL_PPSEN0(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PPS_CONTROL_PPSEN0_SHIFT)) & GMAC_MAC_PPS_CONTROL_PPSEN0_MASK)
#define GMAC_MAC_PPS_CONTROL_TRGTMODSEL0_MASK    (0x60U)
#define GMAC_MAC_PPS_CONTROL_TRGTMODSEL0_SHIFT   (5U)
#define GMAC_MAC_PPS_CONTROL_TRGTMODSEL0_WIDTH   (2U)
#define GMAC_MAC_PPS_CONTROL_TRGTMODSEL0(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PPS_CONTROL_TRGTMODSEL0_SHIFT)) & GMAC_MAC_PPS_CONTROL_TRGTMODSEL0_MASK)
#define GMAC_MAC_PPS_CONTROL_MCGREN0_MASK        (0x80U)
#define GMAC_MAC_PPS_CONTROL_MCGREN0_SHIFT       (7U)
#define GMAC_MAC_PPS_CONTROL_MCGREN0_WIDTH       (1U)
#define GMAC_MAC_PPS_CONTROL_MCGREN0(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PPS_CONTROL_MCGREN0_SHIFT)) & GMAC_MAC_PPS_CONTROL_MCGREN0_MASK)
#define GMAC_MAC_PPS_CONTROL_PPSCMD1_MASK        (0xF00U)
#define GMAC_MAC_PPS_CONTROL_PPSCMD1_SHIFT       (8U)
#define GMAC_MAC_PPS_CONTROL_PPSCMD1_WIDTH       (4U)
#define GMAC_MAC_PPS_CONTROL_PPSCMD1(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PPS_CONTROL_PPSCMD1_SHIFT)) & GMAC_MAC_PPS_CONTROL_PPSCMD1_MASK)
#define GMAC_MAC_PPS_CONTROL_TRGTMODSEL1_MASK    (0x6000U)
#define GMAC_MAC_PPS_CONTROL_TRGTMODSEL1_SHIFT   (13U)
#define GMAC_MAC_PPS_CONTROL_TRGTMODSEL1_WIDTH   (2U)
#define GMAC_MAC_PPS_CONTROL_TRGTMODSEL1(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PPS_CONTROL_TRGTMODSEL1_SHIFT)) & GMAC_MAC_PPS_CONTROL_TRGTMODSEL1_MASK)
#define GMAC_MAC_PPS_CONTROL_MCGREN1_MASK        (0x8000U)
#define GMAC_MAC_PPS_CONTROL_MCGREN1_SHIFT       (15U)
#define GMAC_MAC_PPS_CONTROL_MCGREN1_WIDTH       (1U)
#define GMAC_MAC_PPS_CONTROL_MCGREN1(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PPS_CONTROL_MCGREN1_SHIFT)) & GMAC_MAC_PPS_CONTROL_MCGREN1_MASK)
#define GMAC_MAC_PPS_CONTROL_PPSCMD2_MASK        (0xF0000U)
#define GMAC_MAC_PPS_CONTROL_PPSCMD2_SHIFT       (16U)
#define GMAC_MAC_PPS_CONTROL_PPSCMD2_WIDTH       (4U)
#define GMAC_MAC_PPS_CONTROL_PPSCMD2(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PPS_CONTROL_PPSCMD2_SHIFT)) & GMAC_MAC_PPS_CONTROL_PPSCMD2_MASK)
#define GMAC_MAC_PPS_CONTROL_TRGTMODSEL2_MASK    (0x600000U)
#define GMAC_MAC_PPS_CONTROL_TRGTMODSEL2_SHIFT   (21U)
#define GMAC_MAC_PPS_CONTROL_TRGTMODSEL2_WIDTH   (2U)
#define GMAC_MAC_PPS_CONTROL_TRGTMODSEL2(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PPS_CONTROL_TRGTMODSEL2_SHIFT)) & GMAC_MAC_PPS_CONTROL_TRGTMODSEL2_MASK)
#define GMAC_MAC_PPS_CONTROL_MCGREN2_MASK        (0x800000U)
#define GMAC_MAC_PPS_CONTROL_MCGREN2_SHIFT       (23U)
#define GMAC_MAC_PPS_CONTROL_MCGREN2_WIDTH       (1U)
#define GMAC_MAC_PPS_CONTROL_MCGREN2(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PPS_CONTROL_MCGREN2_SHIFT)) & GMAC_MAC_PPS_CONTROL_MCGREN2_MASK)
#define GMAC_MAC_PPS_CONTROL_PPSCMD3_MASK        (0xF000000U)
#define GMAC_MAC_PPS_CONTROL_PPSCMD3_SHIFT       (24U)
#define GMAC_MAC_PPS_CONTROL_PPSCMD3_WIDTH       (4U)
#define GMAC_MAC_PPS_CONTROL_PPSCMD3(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PPS_CONTROL_PPSCMD3_SHIFT)) & GMAC_MAC_PPS_CONTROL_PPSCMD3_MASK)
#define GMAC_MAC_PPS_CONTROL_TRGTMODSEL3_MASK    (0x60000000U)
#define GMAC_MAC_PPS_CONTROL_TRGTMODSEL3_SHIFT   (29U)
#define GMAC_MAC_PPS_CONTROL_TRGTMODSEL3_WIDTH   (2U)
#define GMAC_MAC_PPS_CONTROL_TRGTMODSEL3(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PPS_CONTROL_TRGTMODSEL3_SHIFT)) & GMAC_MAC_PPS_CONTROL_TRGTMODSEL3_MASK)
#define GMAC_MAC_PPS_CONTROL_MCGREN3_MASK        (0x80000000U)
#define GMAC_MAC_PPS_CONTROL_MCGREN3_SHIFT       (31U)
#define GMAC_MAC_PPS_CONTROL_MCGREN3_WIDTH       (1U)
#define GMAC_MAC_PPS_CONTROL_MCGREN3(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PPS_CONTROL_MCGREN3_SHIFT)) & GMAC_MAC_PPS_CONTROL_MCGREN3_MASK)
/*! @} */

/*! @name MAC_PPS0_TARGET_TIME_SECONDS -  */
/*! @{ */
#define GMAC_MAC_PPS0_TARGET_TIME_SECONDS_TSTRH0_MASK (0xFFFFFFFFU)
#define GMAC_MAC_PPS0_TARGET_TIME_SECONDS_TSTRH0_SHIFT (0U)
#define GMAC_MAC_PPS0_TARGET_TIME_SECONDS_TSTRH0_WIDTH (32U)
#define GMAC_MAC_PPS0_TARGET_TIME_SECONDS_TSTRH0(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PPS0_TARGET_TIME_SECONDS_TSTRH0_SHIFT)) & GMAC_MAC_PPS0_TARGET_TIME_SECONDS_TSTRH0_MASK)
/*! @} */

/*! @name MAC_PPS0_TARGET_TIME_NANOSECONDS -  */
/*! @{ */
#define GMAC_MAC_PPS0_TARGET_TIME_NANOSECONDS_TTSL0_MASK (0x7FFFFFFFU)
#define GMAC_MAC_PPS0_TARGET_TIME_NANOSECONDS_TTSL0_SHIFT (0U)
#define GMAC_MAC_PPS0_TARGET_TIME_NANOSECONDS_TTSL0_WIDTH (31U)
#define GMAC_MAC_PPS0_TARGET_TIME_NANOSECONDS_TTSL0(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PPS0_TARGET_TIME_NANOSECONDS_TTSL0_SHIFT)) & GMAC_MAC_PPS0_TARGET_TIME_NANOSECONDS_TTSL0_MASK)
#define GMAC_MAC_PPS0_TARGET_TIME_NANOSECONDS_TRGTBUSY0_MASK (0x80000000U)
#define GMAC_MAC_PPS0_TARGET_TIME_NANOSECONDS_TRGTBUSY0_SHIFT (31U)
#define GMAC_MAC_PPS0_TARGET_TIME_NANOSECONDS_TRGTBUSY0_WIDTH (1U)
#define GMAC_MAC_PPS0_TARGET_TIME_NANOSECONDS_TRGTBUSY0(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PPS0_TARGET_TIME_NANOSECONDS_TRGTBUSY0_SHIFT)) & GMAC_MAC_PPS0_TARGET_TIME_NANOSECONDS_TRGTBUSY0_MASK)
/*! @} */

/*! @name MAC_PPS0_INTERVAL -  */
/*! @{ */
#define GMAC_MAC_PPS0_INTERVAL_PPSINT0_MASK      (0xFFFFFFFFU)
#define GMAC_MAC_PPS0_INTERVAL_PPSINT0_SHIFT     (0U)
#define GMAC_MAC_PPS0_INTERVAL_PPSINT0_WIDTH     (32U)
#define GMAC_MAC_PPS0_INTERVAL_PPSINT0(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PPS0_INTERVAL_PPSINT0_SHIFT)) & GMAC_MAC_PPS0_INTERVAL_PPSINT0_MASK)
/*! @} */

/*! @name MAC_PPS0_WIDTH -  */
/*! @{ */
#define GMAC_MAC_PPS0_WIDTH_PPSWIDTH0_MASK       (0xFFFFFFFFU)
#define GMAC_MAC_PPS0_WIDTH_PPSWIDTH0_SHIFT      (0U)
#define GMAC_MAC_PPS0_WIDTH_PPSWIDTH0_WIDTH      (32U)
#define GMAC_MAC_PPS0_WIDTH_PPSWIDTH0(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PPS0_WIDTH_PPSWIDTH0_SHIFT)) & GMAC_MAC_PPS0_WIDTH_PPSWIDTH0_MASK)
/*! @} */

/*! @name MAC_PPS1_TARGET_TIME_SECONDS -  */
/*! @{ */
#define GMAC_MAC_PPS1_TARGET_TIME_SECONDS_TSTRH1_MASK (0xFFFFFFFFU)
#define GMAC_MAC_PPS1_TARGET_TIME_SECONDS_TSTRH1_SHIFT (0U)
#define GMAC_MAC_PPS1_TARGET_TIME_SECONDS_TSTRH1_WIDTH (32U)
#define GMAC_MAC_PPS1_TARGET_TIME_SECONDS_TSTRH1(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PPS1_TARGET_TIME_SECONDS_TSTRH1_SHIFT)) & GMAC_MAC_PPS1_TARGET_TIME_SECONDS_TSTRH1_MASK)
/*! @} */

/*! @name MAC_PPS1_TARGET_TIME_NANOSECONDS -  */
/*! @{ */
#define GMAC_MAC_PPS1_TARGET_TIME_NANOSECONDS_TTSL1_MASK (0x7FFFFFFFU)
#define GMAC_MAC_PPS1_TARGET_TIME_NANOSECONDS_TTSL1_SHIFT (0U)
#define GMAC_MAC_PPS1_TARGET_TIME_NANOSECONDS_TTSL1_WIDTH (31U)
#define GMAC_MAC_PPS1_TARGET_TIME_NANOSECONDS_TTSL1(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PPS1_TARGET_TIME_NANOSECONDS_TTSL1_SHIFT)) & GMAC_MAC_PPS1_TARGET_TIME_NANOSECONDS_TTSL1_MASK)
#define GMAC_MAC_PPS1_TARGET_TIME_NANOSECONDS_TRGTBUSY1_MASK (0x80000000U)
#define GMAC_MAC_PPS1_TARGET_TIME_NANOSECONDS_TRGTBUSY1_SHIFT (31U)
#define GMAC_MAC_PPS1_TARGET_TIME_NANOSECONDS_TRGTBUSY1_WIDTH (1U)
#define GMAC_MAC_PPS1_TARGET_TIME_NANOSECONDS_TRGTBUSY1(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PPS1_TARGET_TIME_NANOSECONDS_TRGTBUSY1_SHIFT)) & GMAC_MAC_PPS1_TARGET_TIME_NANOSECONDS_TRGTBUSY1_MASK)
/*! @} */

/*! @name MAC_PPS1_INTERVAL -  */
/*! @{ */
#define GMAC_MAC_PPS1_INTERVAL_PPSINT1_MASK      (0xFFFFFFFFU)
#define GMAC_MAC_PPS1_INTERVAL_PPSINT1_SHIFT     (0U)
#define GMAC_MAC_PPS1_INTERVAL_PPSINT1_WIDTH     (32U)
#define GMAC_MAC_PPS1_INTERVAL_PPSINT1(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PPS1_INTERVAL_PPSINT1_SHIFT)) & GMAC_MAC_PPS1_INTERVAL_PPSINT1_MASK)
/*! @} */

/*! @name MAC_PPS1_WIDTH -  */
/*! @{ */
#define GMAC_MAC_PPS1_WIDTH_PPSWIDTH1_MASK       (0xFFFFFFFFU)
#define GMAC_MAC_PPS1_WIDTH_PPSWIDTH1_SHIFT      (0U)
#define GMAC_MAC_PPS1_WIDTH_PPSWIDTH1_WIDTH      (32U)
#define GMAC_MAC_PPS1_WIDTH_PPSWIDTH1(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PPS1_WIDTH_PPSWIDTH1_SHIFT)) & GMAC_MAC_PPS1_WIDTH_PPSWIDTH1_MASK)
/*! @} */

/*! @name MAC_PPS2_TARGET_TIME_SECONDS -  */
/*! @{ */
#define GMAC_MAC_PPS2_TARGET_TIME_SECONDS_TSTRH2_MASK (0xFFFFFFFFU)
#define GMAC_MAC_PPS2_TARGET_TIME_SECONDS_TSTRH2_SHIFT (0U)
#define GMAC_MAC_PPS2_TARGET_TIME_SECONDS_TSTRH2_WIDTH (32U)
#define GMAC_MAC_PPS2_TARGET_TIME_SECONDS_TSTRH2(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PPS2_TARGET_TIME_SECONDS_TSTRH2_SHIFT)) & GMAC_MAC_PPS2_TARGET_TIME_SECONDS_TSTRH2_MASK)
/*! @} */

/*! @name MAC_PPS2_TARGET_TIME_NANOSECONDS -  */
/*! @{ */
#define GMAC_MAC_PPS2_TARGET_TIME_NANOSECONDS_TTSL2_MASK (0x7FFFFFFFU)
#define GMAC_MAC_PPS2_TARGET_TIME_NANOSECONDS_TTSL2_SHIFT (0U)
#define GMAC_MAC_PPS2_TARGET_TIME_NANOSECONDS_TTSL2_WIDTH (31U)
#define GMAC_MAC_PPS2_TARGET_TIME_NANOSECONDS_TTSL2(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PPS2_TARGET_TIME_NANOSECONDS_TTSL2_SHIFT)) & GMAC_MAC_PPS2_TARGET_TIME_NANOSECONDS_TTSL2_MASK)
#define GMAC_MAC_PPS2_TARGET_TIME_NANOSECONDS_TRGTBUSY2_MASK (0x80000000U)
#define GMAC_MAC_PPS2_TARGET_TIME_NANOSECONDS_TRGTBUSY2_SHIFT (31U)
#define GMAC_MAC_PPS2_TARGET_TIME_NANOSECONDS_TRGTBUSY2_WIDTH (1U)
#define GMAC_MAC_PPS2_TARGET_TIME_NANOSECONDS_TRGTBUSY2(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PPS2_TARGET_TIME_NANOSECONDS_TRGTBUSY2_SHIFT)) & GMAC_MAC_PPS2_TARGET_TIME_NANOSECONDS_TRGTBUSY2_MASK)
/*! @} */

/*! @name MAC_PPS2_INTERVAL -  */
/*! @{ */
#define GMAC_MAC_PPS2_INTERVAL_PPSINT2_MASK      (0xFFFFFFFFU)
#define GMAC_MAC_PPS2_INTERVAL_PPSINT2_SHIFT     (0U)
#define GMAC_MAC_PPS2_INTERVAL_PPSINT2_WIDTH     (32U)
#define GMAC_MAC_PPS2_INTERVAL_PPSINT2(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PPS2_INTERVAL_PPSINT2_SHIFT)) & GMAC_MAC_PPS2_INTERVAL_PPSINT2_MASK)
/*! @} */

/*! @name MAC_PPS2_WIDTH -  */
/*! @{ */
#define GMAC_MAC_PPS2_WIDTH_PPSWIDTH2_MASK       (0xFFFFFFFFU)
#define GMAC_MAC_PPS2_WIDTH_PPSWIDTH2_SHIFT      (0U)
#define GMAC_MAC_PPS2_WIDTH_PPSWIDTH2_WIDTH      (32U)
#define GMAC_MAC_PPS2_WIDTH_PPSWIDTH2(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PPS2_WIDTH_PPSWIDTH2_SHIFT)) & GMAC_MAC_PPS2_WIDTH_PPSWIDTH2_MASK)
/*! @} */

/*! @name MAC_PPS3_TARGET_TIME_SECONDS -  */
/*! @{ */
#define GMAC_MAC_PPS3_TARGET_TIME_SECONDS_TSTRH3_MASK (0xFFFFFFFFU)
#define GMAC_MAC_PPS3_TARGET_TIME_SECONDS_TSTRH3_SHIFT (0U)
#define GMAC_MAC_PPS3_TARGET_TIME_SECONDS_TSTRH3_WIDTH (32U)
#define GMAC_MAC_PPS3_TARGET_TIME_SECONDS_TSTRH3(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PPS3_TARGET_TIME_SECONDS_TSTRH3_SHIFT)) & GMAC_MAC_PPS3_TARGET_TIME_SECONDS_TSTRH3_MASK)
/*! @} */

/*! @name MAC_PPS3_TARGET_TIME_NANOSECONDS -  */
/*! @{ */
#define GMAC_MAC_PPS3_TARGET_TIME_NANOSECONDS_TTSL3_MASK (0x7FFFFFFFU)
#define GMAC_MAC_PPS3_TARGET_TIME_NANOSECONDS_TTSL3_SHIFT (0U)
#define GMAC_MAC_PPS3_TARGET_TIME_NANOSECONDS_TTSL3_WIDTH (31U)
#define GMAC_MAC_PPS3_TARGET_TIME_NANOSECONDS_TTSL3(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PPS3_TARGET_TIME_NANOSECONDS_TTSL3_SHIFT)) & GMAC_MAC_PPS3_TARGET_TIME_NANOSECONDS_TTSL3_MASK)
#define GMAC_MAC_PPS3_TARGET_TIME_NANOSECONDS_TRGTBUSY3_MASK (0x80000000U)
#define GMAC_MAC_PPS3_TARGET_TIME_NANOSECONDS_TRGTBUSY3_SHIFT (31U)
#define GMAC_MAC_PPS3_TARGET_TIME_NANOSECONDS_TRGTBUSY3_WIDTH (1U)
#define GMAC_MAC_PPS3_TARGET_TIME_NANOSECONDS_TRGTBUSY3(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PPS3_TARGET_TIME_NANOSECONDS_TRGTBUSY3_SHIFT)) & GMAC_MAC_PPS3_TARGET_TIME_NANOSECONDS_TRGTBUSY3_MASK)
/*! @} */

/*! @name MAC_PPS3_INTERVAL -  */
/*! @{ */
#define GMAC_MAC_PPS3_INTERVAL_PPSINT3_MASK      (0xFFFFFFFFU)
#define GMAC_MAC_PPS3_INTERVAL_PPSINT3_SHIFT     (0U)
#define GMAC_MAC_PPS3_INTERVAL_PPSINT3_WIDTH     (32U)
#define GMAC_MAC_PPS3_INTERVAL_PPSINT3(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PPS3_INTERVAL_PPSINT3_SHIFT)) & GMAC_MAC_PPS3_INTERVAL_PPSINT3_MASK)
/*! @} */

/*! @name MAC_PPS3_WIDTH -  */
/*! @{ */
#define GMAC_MAC_PPS3_WIDTH_PPSWIDTH3_MASK       (0xFFFFFFFFU)
#define GMAC_MAC_PPS3_WIDTH_PPSWIDTH3_SHIFT      (0U)
#define GMAC_MAC_PPS3_WIDTH_PPSWIDTH3_WIDTH      (32U)
#define GMAC_MAC_PPS3_WIDTH_PPSWIDTH3(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PPS3_WIDTH_PPSWIDTH3_SHIFT)) & GMAC_MAC_PPS3_WIDTH_PPSWIDTH3_MASK)
/*! @} */

/*! @name MAC_PTO_CONTROL -  */
/*! @{ */
#define GMAC_MAC_PTO_CONTROL_PTOEN_MASK          (0x1U)
#define GMAC_MAC_PTO_CONTROL_PTOEN_SHIFT         (0U)
#define GMAC_MAC_PTO_CONTROL_PTOEN_WIDTH         (1U)
#define GMAC_MAC_PTO_CONTROL_PTOEN(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PTO_CONTROL_PTOEN_SHIFT)) & GMAC_MAC_PTO_CONTROL_PTOEN_MASK)
#define GMAC_MAC_PTO_CONTROL_ASYNCEN_MASK        (0x2U)
#define GMAC_MAC_PTO_CONTROL_ASYNCEN_SHIFT       (1U)
#define GMAC_MAC_PTO_CONTROL_ASYNCEN_WIDTH       (1U)
#define GMAC_MAC_PTO_CONTROL_ASYNCEN(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PTO_CONTROL_ASYNCEN_SHIFT)) & GMAC_MAC_PTO_CONTROL_ASYNCEN_MASK)
#define GMAC_MAC_PTO_CONTROL_APDREQEN_MASK       (0x4U)
#define GMAC_MAC_PTO_CONTROL_APDREQEN_SHIFT      (2U)
#define GMAC_MAC_PTO_CONTROL_APDREQEN_WIDTH      (1U)
#define GMAC_MAC_PTO_CONTROL_APDREQEN(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PTO_CONTROL_APDREQEN_SHIFT)) & GMAC_MAC_PTO_CONTROL_APDREQEN_MASK)
#define GMAC_MAC_PTO_CONTROL_ASYNCTRIG_MASK      (0x10U)
#define GMAC_MAC_PTO_CONTROL_ASYNCTRIG_SHIFT     (4U)
#define GMAC_MAC_PTO_CONTROL_ASYNCTRIG_WIDTH     (1U)
#define GMAC_MAC_PTO_CONTROL_ASYNCTRIG(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PTO_CONTROL_ASYNCTRIG_SHIFT)) & GMAC_MAC_PTO_CONTROL_ASYNCTRIG_MASK)
#define GMAC_MAC_PTO_CONTROL_APDREQTRIG_MASK     (0x20U)
#define GMAC_MAC_PTO_CONTROL_APDREQTRIG_SHIFT    (5U)
#define GMAC_MAC_PTO_CONTROL_APDREQTRIG_WIDTH    (1U)
#define GMAC_MAC_PTO_CONTROL_APDREQTRIG(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PTO_CONTROL_APDREQTRIG_SHIFT)) & GMAC_MAC_PTO_CONTROL_APDREQTRIG_MASK)
#define GMAC_MAC_PTO_CONTROL_DRRDIS_MASK         (0x40U)
#define GMAC_MAC_PTO_CONTROL_DRRDIS_SHIFT        (6U)
#define GMAC_MAC_PTO_CONTROL_DRRDIS_WIDTH        (1U)
#define GMAC_MAC_PTO_CONTROL_DRRDIS(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PTO_CONTROL_DRRDIS_SHIFT)) & GMAC_MAC_PTO_CONTROL_DRRDIS_MASK)
#define GMAC_MAC_PTO_CONTROL_PDRDIS_MASK         (0x80U)
#define GMAC_MAC_PTO_CONTROL_PDRDIS_SHIFT        (7U)
#define GMAC_MAC_PTO_CONTROL_PDRDIS_WIDTH        (1U)
#define GMAC_MAC_PTO_CONTROL_PDRDIS(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PTO_CONTROL_PDRDIS_SHIFT)) & GMAC_MAC_PTO_CONTROL_PDRDIS_MASK)
#define GMAC_MAC_PTO_CONTROL_DN_MASK             (0xFF00U)
#define GMAC_MAC_PTO_CONTROL_DN_SHIFT            (8U)
#define GMAC_MAC_PTO_CONTROL_DN_WIDTH            (8U)
#define GMAC_MAC_PTO_CONTROL_DN(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_PTO_CONTROL_DN_SHIFT)) & GMAC_MAC_PTO_CONTROL_DN_MASK)
/*! @} */

/*! @name MAC_SOURCE_PORT_IDENTITY0 -  */
/*! @{ */
#define GMAC_MAC_SOURCE_PORT_IDENTITY0_SPI0_MASK (0xFFFFFFFFU)
#define GMAC_MAC_SOURCE_PORT_IDENTITY0_SPI0_SHIFT (0U)
#define GMAC_MAC_SOURCE_PORT_IDENTITY0_SPI0_WIDTH (32U)
#define GMAC_MAC_SOURCE_PORT_IDENTITY0_SPI0(x)   (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_SOURCE_PORT_IDENTITY0_SPI0_SHIFT)) & GMAC_MAC_SOURCE_PORT_IDENTITY0_SPI0_MASK)
/*! @} */

/*! @name MAC_SOURCE_PORT_IDENTITY1 -  */
/*! @{ */
#define GMAC_MAC_SOURCE_PORT_IDENTITY1_SPI1_MASK (0xFFFFFFFFU)
#define GMAC_MAC_SOURCE_PORT_IDENTITY1_SPI1_SHIFT (0U)
#define GMAC_MAC_SOURCE_PORT_IDENTITY1_SPI1_WIDTH (32U)
#define GMAC_MAC_SOURCE_PORT_IDENTITY1_SPI1(x)   (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_SOURCE_PORT_IDENTITY1_SPI1_SHIFT)) & GMAC_MAC_SOURCE_PORT_IDENTITY1_SPI1_MASK)
/*! @} */

/*! @name MAC_SOURCE_PORT_IDENTITY2 -  */
/*! @{ */
#define GMAC_MAC_SOURCE_PORT_IDENTITY2_SPI2_MASK (0xFFFFU)
#define GMAC_MAC_SOURCE_PORT_IDENTITY2_SPI2_SHIFT (0U)
#define GMAC_MAC_SOURCE_PORT_IDENTITY2_SPI2_WIDTH (16U)
#define GMAC_MAC_SOURCE_PORT_IDENTITY2_SPI2(x)   (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_SOURCE_PORT_IDENTITY2_SPI2_SHIFT)) & GMAC_MAC_SOURCE_PORT_IDENTITY2_SPI2_MASK)
/*! @} */

/*! @name MAC_LOG_MESSAGE_INTERVAL -  */
/*! @{ */
#define GMAC_MAC_LOG_MESSAGE_INTERVAL_LSI_MASK   (0xFFU)
#define GMAC_MAC_LOG_MESSAGE_INTERVAL_LSI_SHIFT  (0U)
#define GMAC_MAC_LOG_MESSAGE_INTERVAL_LSI_WIDTH  (8U)
#define GMAC_MAC_LOG_MESSAGE_INTERVAL_LSI(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_LOG_MESSAGE_INTERVAL_LSI_SHIFT)) & GMAC_MAC_LOG_MESSAGE_INTERVAL_LSI_MASK)
#define GMAC_MAC_LOG_MESSAGE_INTERVAL_DRSYNCR_MASK (0x700U)
#define GMAC_MAC_LOG_MESSAGE_INTERVAL_DRSYNCR_SHIFT (8U)
#define GMAC_MAC_LOG_MESSAGE_INTERVAL_DRSYNCR_WIDTH (3U)
#define GMAC_MAC_LOG_MESSAGE_INTERVAL_DRSYNCR(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_LOG_MESSAGE_INTERVAL_DRSYNCR_SHIFT)) & GMAC_MAC_LOG_MESSAGE_INTERVAL_DRSYNCR_MASK)
#define GMAC_MAC_LOG_MESSAGE_INTERVAL_LMPDRI_MASK (0xFF000000U)
#define GMAC_MAC_LOG_MESSAGE_INTERVAL_LMPDRI_SHIFT (24U)
#define GMAC_MAC_LOG_MESSAGE_INTERVAL_LMPDRI_WIDTH (8U)
#define GMAC_MAC_LOG_MESSAGE_INTERVAL_LMPDRI(x)  (((uint32_t)(((uint32_t)(x)) << GMAC_MAC_LOG_MESSAGE_INTERVAL_LMPDRI_SHIFT)) & GMAC_MAC_LOG_MESSAGE_INTERVAL_LMPDRI_MASK)
/*! @} */

/*! @name MTL_OPERATION_MODE -  */
/*! @{ */
#define GMAC_MTL_OPERATION_MODE_DTXSTS_MASK      (0x2U)
#define GMAC_MTL_OPERATION_MODE_DTXSTS_SHIFT     (1U)
#define GMAC_MTL_OPERATION_MODE_DTXSTS_WIDTH     (1U)
#define GMAC_MTL_OPERATION_MODE_DTXSTS(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_OPERATION_MODE_DTXSTS_SHIFT)) & GMAC_MTL_OPERATION_MODE_DTXSTS_MASK)
#define GMAC_MTL_OPERATION_MODE_RAA_MASK         (0x4U)
#define GMAC_MTL_OPERATION_MODE_RAA_SHIFT        (2U)
#define GMAC_MTL_OPERATION_MODE_RAA_WIDTH        (1U)
#define GMAC_MTL_OPERATION_MODE_RAA(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_OPERATION_MODE_RAA_SHIFT)) & GMAC_MTL_OPERATION_MODE_RAA_MASK)
#define GMAC_MTL_OPERATION_MODE_SCHALG_MASK      (0x60U)
#define GMAC_MTL_OPERATION_MODE_SCHALG_SHIFT     (5U)
#define GMAC_MTL_OPERATION_MODE_SCHALG_WIDTH     (2U)
#define GMAC_MTL_OPERATION_MODE_SCHALG(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_OPERATION_MODE_SCHALG_SHIFT)) & GMAC_MTL_OPERATION_MODE_SCHALG_MASK)
#define GMAC_MTL_OPERATION_MODE_CNTPRST_MASK     (0x100U)
#define GMAC_MTL_OPERATION_MODE_CNTPRST_SHIFT    (8U)
#define GMAC_MTL_OPERATION_MODE_CNTPRST_WIDTH    (1U)
#define GMAC_MTL_OPERATION_MODE_CNTPRST(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_OPERATION_MODE_CNTPRST_SHIFT)) & GMAC_MTL_OPERATION_MODE_CNTPRST_MASK)
#define GMAC_MTL_OPERATION_MODE_CNTCLR_MASK      (0x200U)
#define GMAC_MTL_OPERATION_MODE_CNTCLR_SHIFT     (9U)
#define GMAC_MTL_OPERATION_MODE_CNTCLR_WIDTH     (1U)
#define GMAC_MTL_OPERATION_MODE_CNTCLR(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_OPERATION_MODE_CNTCLR_SHIFT)) & GMAC_MTL_OPERATION_MODE_CNTCLR_MASK)
#define GMAC_MTL_OPERATION_MODE_FRPE_MASK        (0x8000U)
#define GMAC_MTL_OPERATION_MODE_FRPE_SHIFT       (15U)
#define GMAC_MTL_OPERATION_MODE_FRPE_WIDTH       (1U)
#define GMAC_MTL_OPERATION_MODE_FRPE(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_OPERATION_MODE_FRPE_SHIFT)) & GMAC_MTL_OPERATION_MODE_FRPE_MASK)
/*! @} */

/*! @name MTL_DBG_CTL -  */
/*! @{ */
#define GMAC_MTL_DBG_CTL_FDBGEN_MASK             (0x1U)
#define GMAC_MTL_DBG_CTL_FDBGEN_SHIFT            (0U)
#define GMAC_MTL_DBG_CTL_FDBGEN_WIDTH            (1U)
#define GMAC_MTL_DBG_CTL_FDBGEN(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_DBG_CTL_FDBGEN_SHIFT)) & GMAC_MTL_DBG_CTL_FDBGEN_MASK)
#define GMAC_MTL_DBG_CTL_DBGMOD_MASK             (0x2U)
#define GMAC_MTL_DBG_CTL_DBGMOD_SHIFT            (1U)
#define GMAC_MTL_DBG_CTL_DBGMOD_WIDTH            (1U)
#define GMAC_MTL_DBG_CTL_DBGMOD(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_DBG_CTL_DBGMOD_SHIFT)) & GMAC_MTL_DBG_CTL_DBGMOD_MASK)
#define GMAC_MTL_DBG_CTL_BYTEEN_MASK             (0xCU)
#define GMAC_MTL_DBG_CTL_BYTEEN_SHIFT            (2U)
#define GMAC_MTL_DBG_CTL_BYTEEN_WIDTH            (2U)
#define GMAC_MTL_DBG_CTL_BYTEEN(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_DBG_CTL_BYTEEN_SHIFT)) & GMAC_MTL_DBG_CTL_BYTEEN_MASK)
#define GMAC_MTL_DBG_CTL_PKTSTATE_MASK           (0x60U)
#define GMAC_MTL_DBG_CTL_PKTSTATE_SHIFT          (5U)
#define GMAC_MTL_DBG_CTL_PKTSTATE_WIDTH          (2U)
#define GMAC_MTL_DBG_CTL_PKTSTATE(x)             (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_DBG_CTL_PKTSTATE_SHIFT)) & GMAC_MTL_DBG_CTL_PKTSTATE_MASK)
#define GMAC_MTL_DBG_CTL_RSTALL_MASK             (0x100U)
#define GMAC_MTL_DBG_CTL_RSTALL_SHIFT            (8U)
#define GMAC_MTL_DBG_CTL_RSTALL_WIDTH            (1U)
#define GMAC_MTL_DBG_CTL_RSTALL(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_DBG_CTL_RSTALL_SHIFT)) & GMAC_MTL_DBG_CTL_RSTALL_MASK)
#define GMAC_MTL_DBG_CTL_RSTSEL_MASK             (0x200U)
#define GMAC_MTL_DBG_CTL_RSTSEL_SHIFT            (9U)
#define GMAC_MTL_DBG_CTL_RSTSEL_WIDTH            (1U)
#define GMAC_MTL_DBG_CTL_RSTSEL(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_DBG_CTL_RSTSEL_SHIFT)) & GMAC_MTL_DBG_CTL_RSTSEL_MASK)
#define GMAC_MTL_DBG_CTL_FIFORDEN_MASK           (0x400U)
#define GMAC_MTL_DBG_CTL_FIFORDEN_SHIFT          (10U)
#define GMAC_MTL_DBG_CTL_FIFORDEN_WIDTH          (1U)
#define GMAC_MTL_DBG_CTL_FIFORDEN(x)             (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_DBG_CTL_FIFORDEN_SHIFT)) & GMAC_MTL_DBG_CTL_FIFORDEN_MASK)
#define GMAC_MTL_DBG_CTL_FIFOWREN_MASK           (0x800U)
#define GMAC_MTL_DBG_CTL_FIFOWREN_SHIFT          (11U)
#define GMAC_MTL_DBG_CTL_FIFOWREN_WIDTH          (1U)
#define GMAC_MTL_DBG_CTL_FIFOWREN(x)             (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_DBG_CTL_FIFOWREN_SHIFT)) & GMAC_MTL_DBG_CTL_FIFOWREN_MASK)
#define GMAC_MTL_DBG_CTL_FIFOSEL_MASK            (0x3000U)
#define GMAC_MTL_DBG_CTL_FIFOSEL_SHIFT           (12U)
#define GMAC_MTL_DBG_CTL_FIFOSEL_WIDTH           (2U)
#define GMAC_MTL_DBG_CTL_FIFOSEL(x)              (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_DBG_CTL_FIFOSEL_SHIFT)) & GMAC_MTL_DBG_CTL_FIFOSEL_MASK)
#define GMAC_MTL_DBG_CTL_PKTIE_MASK              (0x4000U)
#define GMAC_MTL_DBG_CTL_PKTIE_SHIFT             (14U)
#define GMAC_MTL_DBG_CTL_PKTIE_WIDTH             (1U)
#define GMAC_MTL_DBG_CTL_PKTIE(x)                (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_DBG_CTL_PKTIE_SHIFT)) & GMAC_MTL_DBG_CTL_PKTIE_MASK)
#define GMAC_MTL_DBG_CTL_STSIE_MASK              (0x8000U)
#define GMAC_MTL_DBG_CTL_STSIE_SHIFT             (15U)
#define GMAC_MTL_DBG_CTL_STSIE_WIDTH             (1U)
#define GMAC_MTL_DBG_CTL_STSIE(x)                (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_DBG_CTL_STSIE_SHIFT)) & GMAC_MTL_DBG_CTL_STSIE_MASK)
#define GMAC_MTL_DBG_CTL_EIEE_MASK               (0x10000U)
#define GMAC_MTL_DBG_CTL_EIEE_SHIFT              (16U)
#define GMAC_MTL_DBG_CTL_EIEE_WIDTH              (1U)
#define GMAC_MTL_DBG_CTL_EIEE(x)                 (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_DBG_CTL_EIEE_SHIFT)) & GMAC_MTL_DBG_CTL_EIEE_MASK)
#define GMAC_MTL_DBG_CTL_EIEC_MASK               (0x60000U)
#define GMAC_MTL_DBG_CTL_EIEC_SHIFT              (17U)
#define GMAC_MTL_DBG_CTL_EIEC_WIDTH              (2U)
#define GMAC_MTL_DBG_CTL_EIEC(x)                 (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_DBG_CTL_EIEC_SHIFT)) & GMAC_MTL_DBG_CTL_EIEC_MASK)
/*! @} */

/*! @name MTL_DBG_STS -  */
/*! @{ */
#define GMAC_MTL_DBG_STS_FIFOBUSY_MASK           (0x1U)
#define GMAC_MTL_DBG_STS_FIFOBUSY_SHIFT          (0U)
#define GMAC_MTL_DBG_STS_FIFOBUSY_WIDTH          (1U)
#define GMAC_MTL_DBG_STS_FIFOBUSY(x)             (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_DBG_STS_FIFOBUSY_SHIFT)) & GMAC_MTL_DBG_STS_FIFOBUSY_MASK)
#define GMAC_MTL_DBG_STS_PKTSTATE_MASK           (0x6U)
#define GMAC_MTL_DBG_STS_PKTSTATE_SHIFT          (1U)
#define GMAC_MTL_DBG_STS_PKTSTATE_WIDTH          (2U)
#define GMAC_MTL_DBG_STS_PKTSTATE(x)             (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_DBG_STS_PKTSTATE_SHIFT)) & GMAC_MTL_DBG_STS_PKTSTATE_MASK)
#define GMAC_MTL_DBG_STS_BYTEEN_MASK             (0x18U)
#define GMAC_MTL_DBG_STS_BYTEEN_SHIFT            (3U)
#define GMAC_MTL_DBG_STS_BYTEEN_WIDTH            (2U)
#define GMAC_MTL_DBG_STS_BYTEEN(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_DBG_STS_BYTEEN_SHIFT)) & GMAC_MTL_DBG_STS_BYTEEN_MASK)
#define GMAC_MTL_DBG_STS_PKTI_MASK               (0x100U)
#define GMAC_MTL_DBG_STS_PKTI_SHIFT              (8U)
#define GMAC_MTL_DBG_STS_PKTI_WIDTH              (1U)
#define GMAC_MTL_DBG_STS_PKTI(x)                 (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_DBG_STS_PKTI_SHIFT)) & GMAC_MTL_DBG_STS_PKTI_MASK)
#define GMAC_MTL_DBG_STS_STSI_MASK               (0x200U)
#define GMAC_MTL_DBG_STS_STSI_SHIFT              (9U)
#define GMAC_MTL_DBG_STS_STSI_WIDTH              (1U)
#define GMAC_MTL_DBG_STS_STSI(x)                 (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_DBG_STS_STSI_SHIFT)) & GMAC_MTL_DBG_STS_STSI_MASK)
#define GMAC_MTL_DBG_STS_LOCR_MASK               (0xFFFF8000U)
#define GMAC_MTL_DBG_STS_LOCR_SHIFT              (15U)
#define GMAC_MTL_DBG_STS_LOCR_WIDTH              (17U)
#define GMAC_MTL_DBG_STS_LOCR(x)                 (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_DBG_STS_LOCR_SHIFT)) & GMAC_MTL_DBG_STS_LOCR_MASK)
/*! @} */

/*! @name MTL_FIFO_DEBUG_DATA -  */
/*! @{ */
#define GMAC_MTL_FIFO_DEBUG_DATA_FDBGDATA_MASK   (0xFFFFFFFFU)
#define GMAC_MTL_FIFO_DEBUG_DATA_FDBGDATA_SHIFT  (0U)
#define GMAC_MTL_FIFO_DEBUG_DATA_FDBGDATA_WIDTH  (32U)
#define GMAC_MTL_FIFO_DEBUG_DATA_FDBGDATA(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_FIFO_DEBUG_DATA_FDBGDATA_SHIFT)) & GMAC_MTL_FIFO_DEBUG_DATA_FDBGDATA_MASK)
/*! @} */

/*! @name MTL_INTERRUPT_STATUS -  */
/*! @{ */
#define GMAC_MTL_INTERRUPT_STATUS_Q0IS_MASK      (0x1U)
#define GMAC_MTL_INTERRUPT_STATUS_Q0IS_SHIFT     (0U)
#define GMAC_MTL_INTERRUPT_STATUS_Q0IS_WIDTH     (1U)
#define GMAC_MTL_INTERRUPT_STATUS_Q0IS(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_INTERRUPT_STATUS_Q0IS_SHIFT)) & GMAC_MTL_INTERRUPT_STATUS_Q0IS_MASK)
#define GMAC_MTL_INTERRUPT_STATUS_Q1IS_MASK      (0x2U)
#define GMAC_MTL_INTERRUPT_STATUS_Q1IS_SHIFT     (1U)
#define GMAC_MTL_INTERRUPT_STATUS_Q1IS_WIDTH     (1U)
#define GMAC_MTL_INTERRUPT_STATUS_Q1IS(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_INTERRUPT_STATUS_Q1IS_SHIFT)) & GMAC_MTL_INTERRUPT_STATUS_Q1IS_MASK)
#define GMAC_MTL_INTERRUPT_STATUS_Q2IS_MASK      (0x4U)
#define GMAC_MTL_INTERRUPT_STATUS_Q2IS_SHIFT     (2U)
#define GMAC_MTL_INTERRUPT_STATUS_Q2IS_WIDTH     (1U)
#define GMAC_MTL_INTERRUPT_STATUS_Q2IS(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_INTERRUPT_STATUS_Q2IS_SHIFT)) & GMAC_MTL_INTERRUPT_STATUS_Q2IS_MASK)
#define GMAC_MTL_INTERRUPT_STATUS_Q3IS_MASK      (0x8U)
#define GMAC_MTL_INTERRUPT_STATUS_Q3IS_SHIFT     (3U)
#define GMAC_MTL_INTERRUPT_STATUS_Q3IS_WIDTH     (1U)
#define GMAC_MTL_INTERRUPT_STATUS_Q3IS(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_INTERRUPT_STATUS_Q3IS_SHIFT)) & GMAC_MTL_INTERRUPT_STATUS_Q3IS_MASK)
#define GMAC_MTL_INTERRUPT_STATUS_Q4IS_MASK      (0x10U)
#define GMAC_MTL_INTERRUPT_STATUS_Q4IS_SHIFT     (4U)
#define GMAC_MTL_INTERRUPT_STATUS_Q4IS_WIDTH     (1U)
#define GMAC_MTL_INTERRUPT_STATUS_Q4IS(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_INTERRUPT_STATUS_Q4IS_SHIFT)) & GMAC_MTL_INTERRUPT_STATUS_Q4IS_MASK)
#define GMAC_MTL_INTERRUPT_STATUS_DBGIS_MASK     (0x20000U)
#define GMAC_MTL_INTERRUPT_STATUS_DBGIS_SHIFT    (17U)
#define GMAC_MTL_INTERRUPT_STATUS_DBGIS_WIDTH    (1U)
#define GMAC_MTL_INTERRUPT_STATUS_DBGIS(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_INTERRUPT_STATUS_DBGIS_SHIFT)) & GMAC_MTL_INTERRUPT_STATUS_DBGIS_MASK)
#define GMAC_MTL_INTERRUPT_STATUS_ESTIS_MASK     (0x40000U)
#define GMAC_MTL_INTERRUPT_STATUS_ESTIS_SHIFT    (18U)
#define GMAC_MTL_INTERRUPT_STATUS_ESTIS_WIDTH    (1U)
#define GMAC_MTL_INTERRUPT_STATUS_ESTIS(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_INTERRUPT_STATUS_ESTIS_SHIFT)) & GMAC_MTL_INTERRUPT_STATUS_ESTIS_MASK)
#define GMAC_MTL_INTERRUPT_STATUS_MTLPIS_MASK    (0x800000U)
#define GMAC_MTL_INTERRUPT_STATUS_MTLPIS_SHIFT   (23U)
#define GMAC_MTL_INTERRUPT_STATUS_MTLPIS_WIDTH   (1U)
#define GMAC_MTL_INTERRUPT_STATUS_MTLPIS(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_INTERRUPT_STATUS_MTLPIS_SHIFT)) & GMAC_MTL_INTERRUPT_STATUS_MTLPIS_MASK)
/*! @} */

/*! @name MTL_RXQ_DMA_MAP0 -  */
/*! @{ */
#define GMAC_MTL_RXQ_DMA_MAP0_Q0MDMACH_MASK      (0x7U)
#define GMAC_MTL_RXQ_DMA_MAP0_Q0MDMACH_SHIFT     (0U)
#define GMAC_MTL_RXQ_DMA_MAP0_Q0MDMACH_WIDTH     (3U)
#define GMAC_MTL_RXQ_DMA_MAP0_Q0MDMACH(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ_DMA_MAP0_Q0MDMACH_SHIFT)) & GMAC_MTL_RXQ_DMA_MAP0_Q0MDMACH_MASK)
#define GMAC_MTL_RXQ_DMA_MAP0_Q0DDMACH_MASK      (0x10U)
#define GMAC_MTL_RXQ_DMA_MAP0_Q0DDMACH_SHIFT     (4U)
#define GMAC_MTL_RXQ_DMA_MAP0_Q0DDMACH_WIDTH     (1U)
#define GMAC_MTL_RXQ_DMA_MAP0_Q0DDMACH(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ_DMA_MAP0_Q0DDMACH_SHIFT)) & GMAC_MTL_RXQ_DMA_MAP0_Q0DDMACH_MASK)
#define GMAC_MTL_RXQ_DMA_MAP0_Q1MDMACH_MASK      (0x700U)
#define GMAC_MTL_RXQ_DMA_MAP0_Q1MDMACH_SHIFT     (8U)
#define GMAC_MTL_RXQ_DMA_MAP0_Q1MDMACH_WIDTH     (3U)
#define GMAC_MTL_RXQ_DMA_MAP0_Q1MDMACH(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ_DMA_MAP0_Q1MDMACH_SHIFT)) & GMAC_MTL_RXQ_DMA_MAP0_Q1MDMACH_MASK)
#define GMAC_MTL_RXQ_DMA_MAP0_Q1DDMACH_MASK      (0x1000U)
#define GMAC_MTL_RXQ_DMA_MAP0_Q1DDMACH_SHIFT     (12U)
#define GMAC_MTL_RXQ_DMA_MAP0_Q1DDMACH_WIDTH     (1U)
#define GMAC_MTL_RXQ_DMA_MAP0_Q1DDMACH(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ_DMA_MAP0_Q1DDMACH_SHIFT)) & GMAC_MTL_RXQ_DMA_MAP0_Q1DDMACH_MASK)
#define GMAC_MTL_RXQ_DMA_MAP0_Q2MDMACH_MASK      (0x70000U)
#define GMAC_MTL_RXQ_DMA_MAP0_Q2MDMACH_SHIFT     (16U)
#define GMAC_MTL_RXQ_DMA_MAP0_Q2MDMACH_WIDTH     (3U)
#define GMAC_MTL_RXQ_DMA_MAP0_Q2MDMACH(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ_DMA_MAP0_Q2MDMACH_SHIFT)) & GMAC_MTL_RXQ_DMA_MAP0_Q2MDMACH_MASK)
#define GMAC_MTL_RXQ_DMA_MAP0_Q2DDMACH_MASK      (0x100000U)
#define GMAC_MTL_RXQ_DMA_MAP0_Q2DDMACH_SHIFT     (20U)
#define GMAC_MTL_RXQ_DMA_MAP0_Q2DDMACH_WIDTH     (1U)
#define GMAC_MTL_RXQ_DMA_MAP0_Q2DDMACH(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ_DMA_MAP0_Q2DDMACH_SHIFT)) & GMAC_MTL_RXQ_DMA_MAP0_Q2DDMACH_MASK)
#define GMAC_MTL_RXQ_DMA_MAP0_Q3MDMACH_MASK      (0x7000000U)
#define GMAC_MTL_RXQ_DMA_MAP0_Q3MDMACH_SHIFT     (24U)
#define GMAC_MTL_RXQ_DMA_MAP0_Q3MDMACH_WIDTH     (3U)
#define GMAC_MTL_RXQ_DMA_MAP0_Q3MDMACH(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ_DMA_MAP0_Q3MDMACH_SHIFT)) & GMAC_MTL_RXQ_DMA_MAP0_Q3MDMACH_MASK)
#define GMAC_MTL_RXQ_DMA_MAP0_Q3DDMACH_MASK      (0x10000000U)
#define GMAC_MTL_RXQ_DMA_MAP0_Q3DDMACH_SHIFT     (28U)
#define GMAC_MTL_RXQ_DMA_MAP0_Q3DDMACH_WIDTH     (1U)
#define GMAC_MTL_RXQ_DMA_MAP0_Q3DDMACH(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ_DMA_MAP0_Q3DDMACH_SHIFT)) & GMAC_MTL_RXQ_DMA_MAP0_Q3DDMACH_MASK)
/*! @} */

/*! @name MTL_RXQ_DMA_MAP1 -  */
/*! @{ */
#define GMAC_MTL_RXQ_DMA_MAP1_Q4MDMACH_MASK      (0x7U)
#define GMAC_MTL_RXQ_DMA_MAP1_Q4MDMACH_SHIFT     (0U)
#define GMAC_MTL_RXQ_DMA_MAP1_Q4MDMACH_WIDTH     (3U)
#define GMAC_MTL_RXQ_DMA_MAP1_Q4MDMACH(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ_DMA_MAP1_Q4MDMACH_SHIFT)) & GMAC_MTL_RXQ_DMA_MAP1_Q4MDMACH_MASK)
#define GMAC_MTL_RXQ_DMA_MAP1_Q4DDMACH_MASK      (0x10U)
#define GMAC_MTL_RXQ_DMA_MAP1_Q4DDMACH_SHIFT     (4U)
#define GMAC_MTL_RXQ_DMA_MAP1_Q4DDMACH_WIDTH     (1U)
#define GMAC_MTL_RXQ_DMA_MAP1_Q4DDMACH(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ_DMA_MAP1_Q4DDMACH_SHIFT)) & GMAC_MTL_RXQ_DMA_MAP1_Q4DDMACH_MASK)
/*! @} */

/*! @name MTL_TBS_CTRL -  */
/*! @{ */
#define GMAC_MTL_TBS_CTRL_ESTM_MASK              (0x1U)
#define GMAC_MTL_TBS_CTRL_ESTM_SHIFT             (0U)
#define GMAC_MTL_TBS_CTRL_ESTM_WIDTH             (1U)
#define GMAC_MTL_TBS_CTRL_ESTM(x)                (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TBS_CTRL_ESTM_SHIFT)) & GMAC_MTL_TBS_CTRL_ESTM_MASK)
#define GMAC_MTL_TBS_CTRL_LEOV_MASK              (0x2U)
#define GMAC_MTL_TBS_CTRL_LEOV_SHIFT             (1U)
#define GMAC_MTL_TBS_CTRL_LEOV_WIDTH             (1U)
#define GMAC_MTL_TBS_CTRL_LEOV(x)                (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TBS_CTRL_LEOV_SHIFT)) & GMAC_MTL_TBS_CTRL_LEOV_MASK)
#define GMAC_MTL_TBS_CTRL_LEGOS_MASK             (0x70U)
#define GMAC_MTL_TBS_CTRL_LEGOS_SHIFT            (4U)
#define GMAC_MTL_TBS_CTRL_LEGOS_WIDTH            (3U)
#define GMAC_MTL_TBS_CTRL_LEGOS(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TBS_CTRL_LEGOS_SHIFT)) & GMAC_MTL_TBS_CTRL_LEGOS_MASK)
#define GMAC_MTL_TBS_CTRL_LEOS_MASK              (0xFFFFFF00U)
#define GMAC_MTL_TBS_CTRL_LEOS_SHIFT             (8U)
#define GMAC_MTL_TBS_CTRL_LEOS_WIDTH             (24U)
#define GMAC_MTL_TBS_CTRL_LEOS(x)                (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TBS_CTRL_LEOS_SHIFT)) & GMAC_MTL_TBS_CTRL_LEOS_MASK)
/*! @} */

/*! @name MTL_EST_CONTROL -  */
/*! @{ */
#define GMAC_MTL_EST_CONTROL_EEST_MASK           (0x1U)
#define GMAC_MTL_EST_CONTROL_EEST_SHIFT          (0U)
#define GMAC_MTL_EST_CONTROL_EEST_WIDTH          (1U)
#define GMAC_MTL_EST_CONTROL_EEST(x)             (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_EST_CONTROL_EEST_SHIFT)) & GMAC_MTL_EST_CONTROL_EEST_MASK)
#define GMAC_MTL_EST_CONTROL_SSWL_MASK           (0x2U)
#define GMAC_MTL_EST_CONTROL_SSWL_SHIFT          (1U)
#define GMAC_MTL_EST_CONTROL_SSWL_WIDTH          (1U)
#define GMAC_MTL_EST_CONTROL_SSWL(x)             (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_EST_CONTROL_SSWL_SHIFT)) & GMAC_MTL_EST_CONTROL_SSWL_MASK)
#define GMAC_MTL_EST_CONTROL_DDBF_MASK           (0x10U)
#define GMAC_MTL_EST_CONTROL_DDBF_SHIFT          (4U)
#define GMAC_MTL_EST_CONTROL_DDBF_WIDTH          (1U)
#define GMAC_MTL_EST_CONTROL_DDBF(x)             (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_EST_CONTROL_DDBF_SHIFT)) & GMAC_MTL_EST_CONTROL_DDBF_MASK)
#define GMAC_MTL_EST_CONTROL_DFBS_MASK           (0x20U)
#define GMAC_MTL_EST_CONTROL_DFBS_SHIFT          (5U)
#define GMAC_MTL_EST_CONTROL_DFBS_WIDTH          (1U)
#define GMAC_MTL_EST_CONTROL_DFBS(x)             (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_EST_CONTROL_DFBS_SHIFT)) & GMAC_MTL_EST_CONTROL_DFBS_MASK)
#define GMAC_MTL_EST_CONTROL_LCSE_MASK           (0xC0U)
#define GMAC_MTL_EST_CONTROL_LCSE_SHIFT          (6U)
#define GMAC_MTL_EST_CONTROL_LCSE_WIDTH          (2U)
#define GMAC_MTL_EST_CONTROL_LCSE(x)             (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_EST_CONTROL_LCSE_SHIFT)) & GMAC_MTL_EST_CONTROL_LCSE_MASK)
#define GMAC_MTL_EST_CONTROL_TILS_MASK           (0x700U)
#define GMAC_MTL_EST_CONTROL_TILS_SHIFT          (8U)
#define GMAC_MTL_EST_CONTROL_TILS_WIDTH          (3U)
#define GMAC_MTL_EST_CONTROL_TILS(x)             (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_EST_CONTROL_TILS_SHIFT)) & GMAC_MTL_EST_CONTROL_TILS_MASK)
#define GMAC_MTL_EST_CONTROL_CTOV_MASK           (0xFFF000U)
#define GMAC_MTL_EST_CONTROL_CTOV_SHIFT          (12U)
#define GMAC_MTL_EST_CONTROL_CTOV_WIDTH          (12U)
#define GMAC_MTL_EST_CONTROL_CTOV(x)             (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_EST_CONTROL_CTOV_SHIFT)) & GMAC_MTL_EST_CONTROL_CTOV_MASK)
#define GMAC_MTL_EST_CONTROL_PTOV_MASK           (0xFF000000U)
#define GMAC_MTL_EST_CONTROL_PTOV_SHIFT          (24U)
#define GMAC_MTL_EST_CONTROL_PTOV_WIDTH          (8U)
#define GMAC_MTL_EST_CONTROL_PTOV(x)             (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_EST_CONTROL_PTOV_SHIFT)) & GMAC_MTL_EST_CONTROL_PTOV_MASK)
/*! @} */

/*! @name MTL_EST_STATUS -  */
/*! @{ */
#define GMAC_MTL_EST_STATUS_SWLC_MASK            (0x1U)
#define GMAC_MTL_EST_STATUS_SWLC_SHIFT           (0U)
#define GMAC_MTL_EST_STATUS_SWLC_WIDTH           (1U)
#define GMAC_MTL_EST_STATUS_SWLC(x)              (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_EST_STATUS_SWLC_SHIFT)) & GMAC_MTL_EST_STATUS_SWLC_MASK)
#define GMAC_MTL_EST_STATUS_BTRE_MASK            (0x2U)
#define GMAC_MTL_EST_STATUS_BTRE_SHIFT           (1U)
#define GMAC_MTL_EST_STATUS_BTRE_WIDTH           (1U)
#define GMAC_MTL_EST_STATUS_BTRE(x)              (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_EST_STATUS_BTRE_SHIFT)) & GMAC_MTL_EST_STATUS_BTRE_MASK)
#define GMAC_MTL_EST_STATUS_HLBF_MASK            (0x4U)
#define GMAC_MTL_EST_STATUS_HLBF_SHIFT           (2U)
#define GMAC_MTL_EST_STATUS_HLBF_WIDTH           (1U)
#define GMAC_MTL_EST_STATUS_HLBF(x)              (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_EST_STATUS_HLBF_SHIFT)) & GMAC_MTL_EST_STATUS_HLBF_MASK)
#define GMAC_MTL_EST_STATUS_HLBS_MASK            (0x8U)
#define GMAC_MTL_EST_STATUS_HLBS_SHIFT           (3U)
#define GMAC_MTL_EST_STATUS_HLBS_WIDTH           (1U)
#define GMAC_MTL_EST_STATUS_HLBS(x)              (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_EST_STATUS_HLBS_SHIFT)) & GMAC_MTL_EST_STATUS_HLBS_MASK)
#define GMAC_MTL_EST_STATUS_CGCE_MASK            (0x10U)
#define GMAC_MTL_EST_STATUS_CGCE_SHIFT           (4U)
#define GMAC_MTL_EST_STATUS_CGCE_WIDTH           (1U)
#define GMAC_MTL_EST_STATUS_CGCE(x)              (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_EST_STATUS_CGCE_SHIFT)) & GMAC_MTL_EST_STATUS_CGCE_MASK)
#define GMAC_MTL_EST_STATUS_SWOL_MASK            (0x80U)
#define GMAC_MTL_EST_STATUS_SWOL_SHIFT           (7U)
#define GMAC_MTL_EST_STATUS_SWOL_WIDTH           (1U)
#define GMAC_MTL_EST_STATUS_SWOL(x)              (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_EST_STATUS_SWOL_SHIFT)) & GMAC_MTL_EST_STATUS_SWOL_MASK)
#define GMAC_MTL_EST_STATUS_BTRL_MASK            (0xF00U)
#define GMAC_MTL_EST_STATUS_BTRL_SHIFT           (8U)
#define GMAC_MTL_EST_STATUS_BTRL_WIDTH           (4U)
#define GMAC_MTL_EST_STATUS_BTRL(x)              (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_EST_STATUS_BTRL_SHIFT)) & GMAC_MTL_EST_STATUS_BTRL_MASK)
#define GMAC_MTL_EST_STATUS_CGSN_MASK            (0xF0000U)
#define GMAC_MTL_EST_STATUS_CGSN_SHIFT           (16U)
#define GMAC_MTL_EST_STATUS_CGSN_WIDTH           (4U)
#define GMAC_MTL_EST_STATUS_CGSN(x)              (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_EST_STATUS_CGSN_SHIFT)) & GMAC_MTL_EST_STATUS_CGSN_MASK)
/*! @} */

/*! @name MTL_EST_SCH_ERROR -  */
/*! @{ */
#define GMAC_MTL_EST_SCH_ERROR_SEQN_MASK         (0x1FU)
#define GMAC_MTL_EST_SCH_ERROR_SEQN_SHIFT        (0U)
#define GMAC_MTL_EST_SCH_ERROR_SEQN_WIDTH        (5U)
#define GMAC_MTL_EST_SCH_ERROR_SEQN(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_EST_SCH_ERROR_SEQN_SHIFT)) & GMAC_MTL_EST_SCH_ERROR_SEQN_MASK)
/*! @} */

/*! @name MTL_EST_FRM_SIZE_ERROR -  */
/*! @{ */
#define GMAC_MTL_EST_FRM_SIZE_ERROR_FEQN_MASK    (0x1FU)
#define GMAC_MTL_EST_FRM_SIZE_ERROR_FEQN_SHIFT   (0U)
#define GMAC_MTL_EST_FRM_SIZE_ERROR_FEQN_WIDTH   (5U)
#define GMAC_MTL_EST_FRM_SIZE_ERROR_FEQN(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_EST_FRM_SIZE_ERROR_FEQN_SHIFT)) & GMAC_MTL_EST_FRM_SIZE_ERROR_FEQN_MASK)
/*! @} */

/*! @name MTL_EST_FRM_SIZE_CAPTURE -  */
/*! @{ */
#define GMAC_MTL_EST_FRM_SIZE_CAPTURE_HBFS_MASK  (0x7FFFU)
#define GMAC_MTL_EST_FRM_SIZE_CAPTURE_HBFS_SHIFT (0U)
#define GMAC_MTL_EST_FRM_SIZE_CAPTURE_HBFS_WIDTH (15U)
#define GMAC_MTL_EST_FRM_SIZE_CAPTURE_HBFS(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_EST_FRM_SIZE_CAPTURE_HBFS_SHIFT)) & GMAC_MTL_EST_FRM_SIZE_CAPTURE_HBFS_MASK)
#define GMAC_MTL_EST_FRM_SIZE_CAPTURE_HBFQ_MASK  (0x70000U)
#define GMAC_MTL_EST_FRM_SIZE_CAPTURE_HBFQ_SHIFT (16U)
#define GMAC_MTL_EST_FRM_SIZE_CAPTURE_HBFQ_WIDTH (3U)
#define GMAC_MTL_EST_FRM_SIZE_CAPTURE_HBFQ(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_EST_FRM_SIZE_CAPTURE_HBFQ_SHIFT)) & GMAC_MTL_EST_FRM_SIZE_CAPTURE_HBFQ_MASK)
/*! @} */

/*! @name MTL_EST_INTR_ENABLE -  */
/*! @{ */
#define GMAC_MTL_EST_INTR_ENABLE_IECC_MASK       (0x1U)
#define GMAC_MTL_EST_INTR_ENABLE_IECC_SHIFT      (0U)
#define GMAC_MTL_EST_INTR_ENABLE_IECC_WIDTH      (1U)
#define GMAC_MTL_EST_INTR_ENABLE_IECC(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_EST_INTR_ENABLE_IECC_SHIFT)) & GMAC_MTL_EST_INTR_ENABLE_IECC_MASK)
#define GMAC_MTL_EST_INTR_ENABLE_IEBE_MASK       (0x2U)
#define GMAC_MTL_EST_INTR_ENABLE_IEBE_SHIFT      (1U)
#define GMAC_MTL_EST_INTR_ENABLE_IEBE_WIDTH      (1U)
#define GMAC_MTL_EST_INTR_ENABLE_IEBE(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_EST_INTR_ENABLE_IEBE_SHIFT)) & GMAC_MTL_EST_INTR_ENABLE_IEBE_MASK)
#define GMAC_MTL_EST_INTR_ENABLE_IEHF_MASK       (0x4U)
#define GMAC_MTL_EST_INTR_ENABLE_IEHF_SHIFT      (2U)
#define GMAC_MTL_EST_INTR_ENABLE_IEHF_WIDTH      (1U)
#define GMAC_MTL_EST_INTR_ENABLE_IEHF(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_EST_INTR_ENABLE_IEHF_SHIFT)) & GMAC_MTL_EST_INTR_ENABLE_IEHF_MASK)
#define GMAC_MTL_EST_INTR_ENABLE_IEHS_MASK       (0x8U)
#define GMAC_MTL_EST_INTR_ENABLE_IEHS_SHIFT      (3U)
#define GMAC_MTL_EST_INTR_ENABLE_IEHS_WIDTH      (1U)
#define GMAC_MTL_EST_INTR_ENABLE_IEHS(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_EST_INTR_ENABLE_IEHS_SHIFT)) & GMAC_MTL_EST_INTR_ENABLE_IEHS_MASK)
#define GMAC_MTL_EST_INTR_ENABLE_CGCE_MASK       (0x10U)
#define GMAC_MTL_EST_INTR_ENABLE_CGCE_SHIFT      (4U)
#define GMAC_MTL_EST_INTR_ENABLE_CGCE_WIDTH      (1U)
#define GMAC_MTL_EST_INTR_ENABLE_CGCE(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_EST_INTR_ENABLE_CGCE_SHIFT)) & GMAC_MTL_EST_INTR_ENABLE_CGCE_MASK)
/*! @} */

/*! @name MTL_EST_GCL_CONTROL -  */
/*! @{ */
#define GMAC_MTL_EST_GCL_CONTROL_SRWO_MASK       (0x1U)
#define GMAC_MTL_EST_GCL_CONTROL_SRWO_SHIFT      (0U)
#define GMAC_MTL_EST_GCL_CONTROL_SRWO_WIDTH      (1U)
#define GMAC_MTL_EST_GCL_CONTROL_SRWO(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_EST_GCL_CONTROL_SRWO_SHIFT)) & GMAC_MTL_EST_GCL_CONTROL_SRWO_MASK)
#define GMAC_MTL_EST_GCL_CONTROL_R1W0_MASK       (0x2U)
#define GMAC_MTL_EST_GCL_CONTROL_R1W0_SHIFT      (1U)
#define GMAC_MTL_EST_GCL_CONTROL_R1W0_WIDTH      (1U)
#define GMAC_MTL_EST_GCL_CONTROL_R1W0(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_EST_GCL_CONTROL_R1W0_SHIFT)) & GMAC_MTL_EST_GCL_CONTROL_R1W0_MASK)
#define GMAC_MTL_EST_GCL_CONTROL_GCRR_MASK       (0x4U)
#define GMAC_MTL_EST_GCL_CONTROL_GCRR_SHIFT      (2U)
#define GMAC_MTL_EST_GCL_CONTROL_GCRR_WIDTH      (1U)
#define GMAC_MTL_EST_GCL_CONTROL_GCRR(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_EST_GCL_CONTROL_GCRR_SHIFT)) & GMAC_MTL_EST_GCL_CONTROL_GCRR_MASK)
#define GMAC_MTL_EST_GCL_CONTROL_DBGM_MASK       (0x10U)
#define GMAC_MTL_EST_GCL_CONTROL_DBGM_SHIFT      (4U)
#define GMAC_MTL_EST_GCL_CONTROL_DBGM_WIDTH      (1U)
#define GMAC_MTL_EST_GCL_CONTROL_DBGM(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_EST_GCL_CONTROL_DBGM_SHIFT)) & GMAC_MTL_EST_GCL_CONTROL_DBGM_MASK)
#define GMAC_MTL_EST_GCL_CONTROL_DBGB_MASK       (0x20U)
#define GMAC_MTL_EST_GCL_CONTROL_DBGB_SHIFT      (5U)
#define GMAC_MTL_EST_GCL_CONTROL_DBGB_WIDTH      (1U)
#define GMAC_MTL_EST_GCL_CONTROL_DBGB(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_EST_GCL_CONTROL_DBGB_SHIFT)) & GMAC_MTL_EST_GCL_CONTROL_DBGB_MASK)
#define GMAC_MTL_EST_GCL_CONTROL_ADDR_MASK       (0xFF00U)
#define GMAC_MTL_EST_GCL_CONTROL_ADDR_SHIFT      (8U)
#define GMAC_MTL_EST_GCL_CONTROL_ADDR_WIDTH      (8U)
#define GMAC_MTL_EST_GCL_CONTROL_ADDR(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_EST_GCL_CONTROL_ADDR_SHIFT)) & GMAC_MTL_EST_GCL_CONTROL_ADDR_MASK)
#define GMAC_MTL_EST_GCL_CONTROL_ERR0_MASK       (0x100000U)
#define GMAC_MTL_EST_GCL_CONTROL_ERR0_SHIFT      (20U)
#define GMAC_MTL_EST_GCL_CONTROL_ERR0_WIDTH      (1U)
#define GMAC_MTL_EST_GCL_CONTROL_ERR0(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_EST_GCL_CONTROL_ERR0_SHIFT)) & GMAC_MTL_EST_GCL_CONTROL_ERR0_MASK)
#define GMAC_MTL_EST_GCL_CONTROL_ESTEIEE_MASK    (0x200000U)
#define GMAC_MTL_EST_GCL_CONTROL_ESTEIEE_SHIFT   (21U)
#define GMAC_MTL_EST_GCL_CONTROL_ESTEIEE_WIDTH   (1U)
#define GMAC_MTL_EST_GCL_CONTROL_ESTEIEE(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_EST_GCL_CONTROL_ESTEIEE_SHIFT)) & GMAC_MTL_EST_GCL_CONTROL_ESTEIEE_MASK)
#define GMAC_MTL_EST_GCL_CONTROL_ESTEIEC_MASK    (0xC00000U)
#define GMAC_MTL_EST_GCL_CONTROL_ESTEIEC_SHIFT   (22U)
#define GMAC_MTL_EST_GCL_CONTROL_ESTEIEC_WIDTH   (2U)
#define GMAC_MTL_EST_GCL_CONTROL_ESTEIEC(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_EST_GCL_CONTROL_ESTEIEC_SHIFT)) & GMAC_MTL_EST_GCL_CONTROL_ESTEIEC_MASK)
/*! @} */

/*! @name MTL_EST_GCL_DATA -  */
/*! @{ */
#define GMAC_MTL_EST_GCL_DATA_GCD_MASK           (0xFFFFFFFFU)
#define GMAC_MTL_EST_GCL_DATA_GCD_SHIFT          (0U)
#define GMAC_MTL_EST_GCL_DATA_GCD_WIDTH          (32U)
#define GMAC_MTL_EST_GCL_DATA_GCD(x)             (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_EST_GCL_DATA_GCD_SHIFT)) & GMAC_MTL_EST_GCL_DATA_GCD_MASK)
/*! @} */

/*! @name MTL_FPE_CTRL_STS -  */
/*! @{ */
#define GMAC_MTL_FPE_CTRL_STS_AFSZ_MASK          (0x3U)
#define GMAC_MTL_FPE_CTRL_STS_AFSZ_SHIFT         (0U)
#define GMAC_MTL_FPE_CTRL_STS_AFSZ_WIDTH         (2U)
#define GMAC_MTL_FPE_CTRL_STS_AFSZ(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_FPE_CTRL_STS_AFSZ_SHIFT)) & GMAC_MTL_FPE_CTRL_STS_AFSZ_MASK)
#define GMAC_MTL_FPE_CTRL_STS_PEC_MASK           (0x1F00U)
#define GMAC_MTL_FPE_CTRL_STS_PEC_SHIFT          (8U)
#define GMAC_MTL_FPE_CTRL_STS_PEC_WIDTH          (5U)
#define GMAC_MTL_FPE_CTRL_STS_PEC(x)             (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_FPE_CTRL_STS_PEC_SHIFT)) & GMAC_MTL_FPE_CTRL_STS_PEC_MASK)
#define GMAC_MTL_FPE_CTRL_STS_HRS_MASK           (0x10000000U)
#define GMAC_MTL_FPE_CTRL_STS_HRS_SHIFT          (28U)
#define GMAC_MTL_FPE_CTRL_STS_HRS_WIDTH          (1U)
#define GMAC_MTL_FPE_CTRL_STS_HRS(x)             (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_FPE_CTRL_STS_HRS_SHIFT)) & GMAC_MTL_FPE_CTRL_STS_HRS_MASK)
/*! @} */

/*! @name MTL_FPE_ADVANCE -  */
/*! @{ */
#define GMAC_MTL_FPE_ADVANCE_HADV_MASK           (0xFFFFU)
#define GMAC_MTL_FPE_ADVANCE_HADV_SHIFT          (0U)
#define GMAC_MTL_FPE_ADVANCE_HADV_WIDTH          (16U)
#define GMAC_MTL_FPE_ADVANCE_HADV(x)             (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_FPE_ADVANCE_HADV_SHIFT)) & GMAC_MTL_FPE_ADVANCE_HADV_MASK)
#define GMAC_MTL_FPE_ADVANCE_RADV_MASK           (0xFFFF0000U)
#define GMAC_MTL_FPE_ADVANCE_RADV_SHIFT          (16U)
#define GMAC_MTL_FPE_ADVANCE_RADV_WIDTH          (16U)
#define GMAC_MTL_FPE_ADVANCE_RADV(x)             (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_FPE_ADVANCE_RADV_SHIFT)) & GMAC_MTL_FPE_ADVANCE_RADV_MASK)
/*! @} */

/*! @name MTL_RXP_CONTROL_STATUS -  */
/*! @{ */
#define GMAC_MTL_RXP_CONTROL_STATUS_NVE_MASK     (0xFFU)
#define GMAC_MTL_RXP_CONTROL_STATUS_NVE_SHIFT    (0U)
#define GMAC_MTL_RXP_CONTROL_STATUS_NVE_WIDTH    (8U)
#define GMAC_MTL_RXP_CONTROL_STATUS_NVE(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXP_CONTROL_STATUS_NVE_SHIFT)) & GMAC_MTL_RXP_CONTROL_STATUS_NVE_MASK)
#define GMAC_MTL_RXP_CONTROL_STATUS_NPE_MASK     (0xFF0000U)
#define GMAC_MTL_RXP_CONTROL_STATUS_NPE_SHIFT    (16U)
#define GMAC_MTL_RXP_CONTROL_STATUS_NPE_WIDTH    (8U)
#define GMAC_MTL_RXP_CONTROL_STATUS_NPE(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXP_CONTROL_STATUS_NPE_SHIFT)) & GMAC_MTL_RXP_CONTROL_STATUS_NPE_MASK)
#define GMAC_MTL_RXP_CONTROL_STATUS_RXPI_MASK    (0x80000000U)
#define GMAC_MTL_RXP_CONTROL_STATUS_RXPI_SHIFT   (31U)
#define GMAC_MTL_RXP_CONTROL_STATUS_RXPI_WIDTH   (1U)
#define GMAC_MTL_RXP_CONTROL_STATUS_RXPI(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXP_CONTROL_STATUS_RXPI_SHIFT)) & GMAC_MTL_RXP_CONTROL_STATUS_RXPI_MASK)
/*! @} */

/*! @name MTL_RXP_INTERRUPT_CONTROL_STATUS -  */
/*! @{ */
#define GMAC_MTL_RXP_INTERRUPT_CONTROL_STATUS_NVEOVIS_MASK (0x1U)
#define GMAC_MTL_RXP_INTERRUPT_CONTROL_STATUS_NVEOVIS_SHIFT (0U)
#define GMAC_MTL_RXP_INTERRUPT_CONTROL_STATUS_NVEOVIS_WIDTH (1U)
#define GMAC_MTL_RXP_INTERRUPT_CONTROL_STATUS_NVEOVIS(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXP_INTERRUPT_CONTROL_STATUS_NVEOVIS_SHIFT)) & GMAC_MTL_RXP_INTERRUPT_CONTROL_STATUS_NVEOVIS_MASK)
#define GMAC_MTL_RXP_INTERRUPT_CONTROL_STATUS_NPEOVIS_MASK (0x2U)
#define GMAC_MTL_RXP_INTERRUPT_CONTROL_STATUS_NPEOVIS_SHIFT (1U)
#define GMAC_MTL_RXP_INTERRUPT_CONTROL_STATUS_NPEOVIS_WIDTH (1U)
#define GMAC_MTL_RXP_INTERRUPT_CONTROL_STATUS_NPEOVIS(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXP_INTERRUPT_CONTROL_STATUS_NPEOVIS_SHIFT)) & GMAC_MTL_RXP_INTERRUPT_CONTROL_STATUS_NPEOVIS_MASK)
#define GMAC_MTL_RXP_INTERRUPT_CONTROL_STATUS_FOOVIS_MASK (0x4U)
#define GMAC_MTL_RXP_INTERRUPT_CONTROL_STATUS_FOOVIS_SHIFT (2U)
#define GMAC_MTL_RXP_INTERRUPT_CONTROL_STATUS_FOOVIS_WIDTH (1U)
#define GMAC_MTL_RXP_INTERRUPT_CONTROL_STATUS_FOOVIS(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXP_INTERRUPT_CONTROL_STATUS_FOOVIS_SHIFT)) & GMAC_MTL_RXP_INTERRUPT_CONTROL_STATUS_FOOVIS_MASK)
#define GMAC_MTL_RXP_INTERRUPT_CONTROL_STATUS_PDRFIS_MASK (0x8U)
#define GMAC_MTL_RXP_INTERRUPT_CONTROL_STATUS_PDRFIS_SHIFT (3U)
#define GMAC_MTL_RXP_INTERRUPT_CONTROL_STATUS_PDRFIS_WIDTH (1U)
#define GMAC_MTL_RXP_INTERRUPT_CONTROL_STATUS_PDRFIS(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXP_INTERRUPT_CONTROL_STATUS_PDRFIS_SHIFT)) & GMAC_MTL_RXP_INTERRUPT_CONTROL_STATUS_PDRFIS_MASK)
#define GMAC_MTL_RXP_INTERRUPT_CONTROL_STATUS_NVEOVIE_MASK (0x10000U)
#define GMAC_MTL_RXP_INTERRUPT_CONTROL_STATUS_NVEOVIE_SHIFT (16U)
#define GMAC_MTL_RXP_INTERRUPT_CONTROL_STATUS_NVEOVIE_WIDTH (1U)
#define GMAC_MTL_RXP_INTERRUPT_CONTROL_STATUS_NVEOVIE(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXP_INTERRUPT_CONTROL_STATUS_NVEOVIE_SHIFT)) & GMAC_MTL_RXP_INTERRUPT_CONTROL_STATUS_NVEOVIE_MASK)
#define GMAC_MTL_RXP_INTERRUPT_CONTROL_STATUS_NPEOVIE_MASK (0x20000U)
#define GMAC_MTL_RXP_INTERRUPT_CONTROL_STATUS_NPEOVIE_SHIFT (17U)
#define GMAC_MTL_RXP_INTERRUPT_CONTROL_STATUS_NPEOVIE_WIDTH (1U)
#define GMAC_MTL_RXP_INTERRUPT_CONTROL_STATUS_NPEOVIE(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXP_INTERRUPT_CONTROL_STATUS_NPEOVIE_SHIFT)) & GMAC_MTL_RXP_INTERRUPT_CONTROL_STATUS_NPEOVIE_MASK)
#define GMAC_MTL_RXP_INTERRUPT_CONTROL_STATUS_FOOVIE_MASK (0x40000U)
#define GMAC_MTL_RXP_INTERRUPT_CONTROL_STATUS_FOOVIE_SHIFT (18U)
#define GMAC_MTL_RXP_INTERRUPT_CONTROL_STATUS_FOOVIE_WIDTH (1U)
#define GMAC_MTL_RXP_INTERRUPT_CONTROL_STATUS_FOOVIE(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXP_INTERRUPT_CONTROL_STATUS_FOOVIE_SHIFT)) & GMAC_MTL_RXP_INTERRUPT_CONTROL_STATUS_FOOVIE_MASK)
#define GMAC_MTL_RXP_INTERRUPT_CONTROL_STATUS_PDRFIE_MASK (0x80000U)
#define GMAC_MTL_RXP_INTERRUPT_CONTROL_STATUS_PDRFIE_SHIFT (19U)
#define GMAC_MTL_RXP_INTERRUPT_CONTROL_STATUS_PDRFIE_WIDTH (1U)
#define GMAC_MTL_RXP_INTERRUPT_CONTROL_STATUS_PDRFIE(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXP_INTERRUPT_CONTROL_STATUS_PDRFIE_SHIFT)) & GMAC_MTL_RXP_INTERRUPT_CONTROL_STATUS_PDRFIE_MASK)
/*! @} */

/*! @name MTL_RXP_DROP_CNT -  */
/*! @{ */
#define GMAC_MTL_RXP_DROP_CNT_RXPDC_MASK         (0x7FFFFFFFU)
#define GMAC_MTL_RXP_DROP_CNT_RXPDC_SHIFT        (0U)
#define GMAC_MTL_RXP_DROP_CNT_RXPDC_WIDTH        (31U)
#define GMAC_MTL_RXP_DROP_CNT_RXPDC(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXP_DROP_CNT_RXPDC_SHIFT)) & GMAC_MTL_RXP_DROP_CNT_RXPDC_MASK)
#define GMAC_MTL_RXP_DROP_CNT_RXPDCOVF_MASK      (0x80000000U)
#define GMAC_MTL_RXP_DROP_CNT_RXPDCOVF_SHIFT     (31U)
#define GMAC_MTL_RXP_DROP_CNT_RXPDCOVF_WIDTH     (1U)
#define GMAC_MTL_RXP_DROP_CNT_RXPDCOVF(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXP_DROP_CNT_RXPDCOVF_SHIFT)) & GMAC_MTL_RXP_DROP_CNT_RXPDCOVF_MASK)
/*! @} */

/*! @name MTL_RXP_ERROR_CNT -  */
/*! @{ */
#define GMAC_MTL_RXP_ERROR_CNT_RXPEC_MASK        (0x7FFFFFFFU)
#define GMAC_MTL_RXP_ERROR_CNT_RXPEC_SHIFT       (0U)
#define GMAC_MTL_RXP_ERROR_CNT_RXPEC_WIDTH       (31U)
#define GMAC_MTL_RXP_ERROR_CNT_RXPEC(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXP_ERROR_CNT_RXPEC_SHIFT)) & GMAC_MTL_RXP_ERROR_CNT_RXPEC_MASK)
#define GMAC_MTL_RXP_ERROR_CNT_RXPECOVF_MASK     (0x80000000U)
#define GMAC_MTL_RXP_ERROR_CNT_RXPECOVF_SHIFT    (31U)
#define GMAC_MTL_RXP_ERROR_CNT_RXPECOVF_WIDTH    (1U)
#define GMAC_MTL_RXP_ERROR_CNT_RXPECOVF(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXP_ERROR_CNT_RXPECOVF_SHIFT)) & GMAC_MTL_RXP_ERROR_CNT_RXPECOVF_MASK)
/*! @} */

/*! @name MTL_RXP_INDIRECT_ACC_CONTROL_STATUS -  */
/*! @{ */
#define GMAC_MTL_RXP_INDIRECT_ACC_CONTROL_STATUS_ADDR_MASK (0x3FFU)
#define GMAC_MTL_RXP_INDIRECT_ACC_CONTROL_STATUS_ADDR_SHIFT (0U)
#define GMAC_MTL_RXP_INDIRECT_ACC_CONTROL_STATUS_ADDR_WIDTH (10U)
#define GMAC_MTL_RXP_INDIRECT_ACC_CONTROL_STATUS_ADDR(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXP_INDIRECT_ACC_CONTROL_STATUS_ADDR_SHIFT)) & GMAC_MTL_RXP_INDIRECT_ACC_CONTROL_STATUS_ADDR_MASK)
#define GMAC_MTL_RXP_INDIRECT_ACC_CONTROL_STATUS_WRRDN_MASK (0x10000U)
#define GMAC_MTL_RXP_INDIRECT_ACC_CONTROL_STATUS_WRRDN_SHIFT (16U)
#define GMAC_MTL_RXP_INDIRECT_ACC_CONTROL_STATUS_WRRDN_WIDTH (1U)
#define GMAC_MTL_RXP_INDIRECT_ACC_CONTROL_STATUS_WRRDN(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXP_INDIRECT_ACC_CONTROL_STATUS_WRRDN_SHIFT)) & GMAC_MTL_RXP_INDIRECT_ACC_CONTROL_STATUS_WRRDN_MASK)
#define GMAC_MTL_RXP_INDIRECT_ACC_CONTROL_STATUS_RXPEIEE_MASK (0x100000U)
#define GMAC_MTL_RXP_INDIRECT_ACC_CONTROL_STATUS_RXPEIEE_SHIFT (20U)
#define GMAC_MTL_RXP_INDIRECT_ACC_CONTROL_STATUS_RXPEIEE_WIDTH (1U)
#define GMAC_MTL_RXP_INDIRECT_ACC_CONTROL_STATUS_RXPEIEE(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXP_INDIRECT_ACC_CONTROL_STATUS_RXPEIEE_SHIFT)) & GMAC_MTL_RXP_INDIRECT_ACC_CONTROL_STATUS_RXPEIEE_MASK)
#define GMAC_MTL_RXP_INDIRECT_ACC_CONTROL_STATUS_RXPEIEC_MASK (0x600000U)
#define GMAC_MTL_RXP_INDIRECT_ACC_CONTROL_STATUS_RXPEIEC_SHIFT (21U)
#define GMAC_MTL_RXP_INDIRECT_ACC_CONTROL_STATUS_RXPEIEC_WIDTH (2U)
#define GMAC_MTL_RXP_INDIRECT_ACC_CONTROL_STATUS_RXPEIEC(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXP_INDIRECT_ACC_CONTROL_STATUS_RXPEIEC_SHIFT)) & GMAC_MTL_RXP_INDIRECT_ACC_CONTROL_STATUS_RXPEIEC_MASK)
#define GMAC_MTL_RXP_INDIRECT_ACC_CONTROL_STATUS_STARTBUSY_MASK (0x80000000U)
#define GMAC_MTL_RXP_INDIRECT_ACC_CONTROL_STATUS_STARTBUSY_SHIFT (31U)
#define GMAC_MTL_RXP_INDIRECT_ACC_CONTROL_STATUS_STARTBUSY_WIDTH (1U)
#define GMAC_MTL_RXP_INDIRECT_ACC_CONTROL_STATUS_STARTBUSY(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXP_INDIRECT_ACC_CONTROL_STATUS_STARTBUSY_SHIFT)) & GMAC_MTL_RXP_INDIRECT_ACC_CONTROL_STATUS_STARTBUSY_MASK)
/*! @} */

/*! @name MTL_RXP_INDIRECT_ACC_DATA -  */
/*! @{ */
#define GMAC_MTL_RXP_INDIRECT_ACC_DATA_DATA_MASK (0xFFFFFFFFU)
#define GMAC_MTL_RXP_INDIRECT_ACC_DATA_DATA_SHIFT (0U)
#define GMAC_MTL_RXP_INDIRECT_ACC_DATA_DATA_WIDTH (32U)
#define GMAC_MTL_RXP_INDIRECT_ACC_DATA_DATA(x)   (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXP_INDIRECT_ACC_DATA_DATA_SHIFT)) & GMAC_MTL_RXP_INDIRECT_ACC_DATA_DATA_MASK)
/*! @} */

/*! @name MTL_ECC_CONTROL -  */
/*! @{ */
#define GMAC_MTL_ECC_CONTROL_MTXEE_MASK          (0x1U)
#define GMAC_MTL_ECC_CONTROL_MTXEE_SHIFT         (0U)
#define GMAC_MTL_ECC_CONTROL_MTXEE_WIDTH         (1U)
#define GMAC_MTL_ECC_CONTROL_MTXEE(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_ECC_CONTROL_MTXEE_SHIFT)) & GMAC_MTL_ECC_CONTROL_MTXEE_MASK)
#define GMAC_MTL_ECC_CONTROL_MRXEE_MASK          (0x2U)
#define GMAC_MTL_ECC_CONTROL_MRXEE_SHIFT         (1U)
#define GMAC_MTL_ECC_CONTROL_MRXEE_WIDTH         (1U)
#define GMAC_MTL_ECC_CONTROL_MRXEE(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_ECC_CONTROL_MRXEE_SHIFT)) & GMAC_MTL_ECC_CONTROL_MRXEE_MASK)
#define GMAC_MTL_ECC_CONTROL_MESTEE_MASK         (0x4U)
#define GMAC_MTL_ECC_CONTROL_MESTEE_SHIFT        (2U)
#define GMAC_MTL_ECC_CONTROL_MESTEE_WIDTH        (1U)
#define GMAC_MTL_ECC_CONTROL_MESTEE(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_ECC_CONTROL_MESTEE_SHIFT)) & GMAC_MTL_ECC_CONTROL_MESTEE_MASK)
#define GMAC_MTL_ECC_CONTROL_MRXPEE_MASK         (0x8U)
#define GMAC_MTL_ECC_CONTROL_MRXPEE_SHIFT        (3U)
#define GMAC_MTL_ECC_CONTROL_MRXPEE_WIDTH        (1U)
#define GMAC_MTL_ECC_CONTROL_MRXPEE(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_ECC_CONTROL_MRXPEE_SHIFT)) & GMAC_MTL_ECC_CONTROL_MRXPEE_MASK)
#define GMAC_MTL_ECC_CONTROL_MEEAO_MASK          (0x100U)
#define GMAC_MTL_ECC_CONTROL_MEEAO_SHIFT         (8U)
#define GMAC_MTL_ECC_CONTROL_MEEAO_WIDTH         (1U)
#define GMAC_MTL_ECC_CONTROL_MEEAO(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_ECC_CONTROL_MEEAO_SHIFT)) & GMAC_MTL_ECC_CONTROL_MEEAO_MASK)
/*! @} */

/*! @name MTL_SAFETY_INTERRUPT_STATUS -  */
/*! @{ */
#define GMAC_MTL_SAFETY_INTERRUPT_STATUS_MECIS_MASK (0x1U)
#define GMAC_MTL_SAFETY_INTERRUPT_STATUS_MECIS_SHIFT (0U)
#define GMAC_MTL_SAFETY_INTERRUPT_STATUS_MECIS_WIDTH (1U)
#define GMAC_MTL_SAFETY_INTERRUPT_STATUS_MECIS(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_SAFETY_INTERRUPT_STATUS_MECIS_SHIFT)) & GMAC_MTL_SAFETY_INTERRUPT_STATUS_MECIS_MASK)
#define GMAC_MTL_SAFETY_INTERRUPT_STATUS_MEUIS_MASK (0x2U)
#define GMAC_MTL_SAFETY_INTERRUPT_STATUS_MEUIS_SHIFT (1U)
#define GMAC_MTL_SAFETY_INTERRUPT_STATUS_MEUIS_WIDTH (1U)
#define GMAC_MTL_SAFETY_INTERRUPT_STATUS_MEUIS(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_SAFETY_INTERRUPT_STATUS_MEUIS_SHIFT)) & GMAC_MTL_SAFETY_INTERRUPT_STATUS_MEUIS_MASK)
#define GMAC_MTL_SAFETY_INTERRUPT_STATUS_MCSIS_MASK (0x80000000U)
#define GMAC_MTL_SAFETY_INTERRUPT_STATUS_MCSIS_SHIFT (31U)
#define GMAC_MTL_SAFETY_INTERRUPT_STATUS_MCSIS_WIDTH (1U)
#define GMAC_MTL_SAFETY_INTERRUPT_STATUS_MCSIS(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_SAFETY_INTERRUPT_STATUS_MCSIS_SHIFT)) & GMAC_MTL_SAFETY_INTERRUPT_STATUS_MCSIS_MASK)
/*! @} */

/*! @name MTL_ECC_INTERRUPT_ENABLE -  */
/*! @{ */
#define GMAC_MTL_ECC_INTERRUPT_ENABLE_TXCEIE_MASK (0x1U)
#define GMAC_MTL_ECC_INTERRUPT_ENABLE_TXCEIE_SHIFT (0U)
#define GMAC_MTL_ECC_INTERRUPT_ENABLE_TXCEIE_WIDTH (1U)
#define GMAC_MTL_ECC_INTERRUPT_ENABLE_TXCEIE(x)  (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_ECC_INTERRUPT_ENABLE_TXCEIE_SHIFT)) & GMAC_MTL_ECC_INTERRUPT_ENABLE_TXCEIE_MASK)
#define GMAC_MTL_ECC_INTERRUPT_ENABLE_RXCEIE_MASK (0x10U)
#define GMAC_MTL_ECC_INTERRUPT_ENABLE_RXCEIE_SHIFT (4U)
#define GMAC_MTL_ECC_INTERRUPT_ENABLE_RXCEIE_WIDTH (1U)
#define GMAC_MTL_ECC_INTERRUPT_ENABLE_RXCEIE(x)  (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_ECC_INTERRUPT_ENABLE_RXCEIE_SHIFT)) & GMAC_MTL_ECC_INTERRUPT_ENABLE_RXCEIE_MASK)
#define GMAC_MTL_ECC_INTERRUPT_ENABLE_ECEIE_MASK (0x100U)
#define GMAC_MTL_ECC_INTERRUPT_ENABLE_ECEIE_SHIFT (8U)
#define GMAC_MTL_ECC_INTERRUPT_ENABLE_ECEIE_WIDTH (1U)
#define GMAC_MTL_ECC_INTERRUPT_ENABLE_ECEIE(x)   (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_ECC_INTERRUPT_ENABLE_ECEIE_SHIFT)) & GMAC_MTL_ECC_INTERRUPT_ENABLE_ECEIE_MASK)
#define GMAC_MTL_ECC_INTERRUPT_ENABLE_RPCEIE_MASK (0x1000U)
#define GMAC_MTL_ECC_INTERRUPT_ENABLE_RPCEIE_SHIFT (12U)
#define GMAC_MTL_ECC_INTERRUPT_ENABLE_RPCEIE_WIDTH (1U)
#define GMAC_MTL_ECC_INTERRUPT_ENABLE_RPCEIE(x)  (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_ECC_INTERRUPT_ENABLE_RPCEIE_SHIFT)) & GMAC_MTL_ECC_INTERRUPT_ENABLE_RPCEIE_MASK)
/*! @} */

/*! @name MTL_ECC_INTERRUPT_STATUS -  */
/*! @{ */
#define GMAC_MTL_ECC_INTERRUPT_STATUS_TXCES_MASK (0x1U)
#define GMAC_MTL_ECC_INTERRUPT_STATUS_TXCES_SHIFT (0U)
#define GMAC_MTL_ECC_INTERRUPT_STATUS_TXCES_WIDTH (1U)
#define GMAC_MTL_ECC_INTERRUPT_STATUS_TXCES(x)   (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_ECC_INTERRUPT_STATUS_TXCES_SHIFT)) & GMAC_MTL_ECC_INTERRUPT_STATUS_TXCES_MASK)
#define GMAC_MTL_ECC_INTERRUPT_STATUS_TXAMS_MASK (0x2U)
#define GMAC_MTL_ECC_INTERRUPT_STATUS_TXAMS_SHIFT (1U)
#define GMAC_MTL_ECC_INTERRUPT_STATUS_TXAMS_WIDTH (1U)
#define GMAC_MTL_ECC_INTERRUPT_STATUS_TXAMS(x)   (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_ECC_INTERRUPT_STATUS_TXAMS_SHIFT)) & GMAC_MTL_ECC_INTERRUPT_STATUS_TXAMS_MASK)
#define GMAC_MTL_ECC_INTERRUPT_STATUS_TXUES_MASK (0x4U)
#define GMAC_MTL_ECC_INTERRUPT_STATUS_TXUES_SHIFT (2U)
#define GMAC_MTL_ECC_INTERRUPT_STATUS_TXUES_WIDTH (1U)
#define GMAC_MTL_ECC_INTERRUPT_STATUS_TXUES(x)   (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_ECC_INTERRUPT_STATUS_TXUES_SHIFT)) & GMAC_MTL_ECC_INTERRUPT_STATUS_TXUES_MASK)
#define GMAC_MTL_ECC_INTERRUPT_STATUS_RXCES_MASK (0x10U)
#define GMAC_MTL_ECC_INTERRUPT_STATUS_RXCES_SHIFT (4U)
#define GMAC_MTL_ECC_INTERRUPT_STATUS_RXCES_WIDTH (1U)
#define GMAC_MTL_ECC_INTERRUPT_STATUS_RXCES(x)   (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_ECC_INTERRUPT_STATUS_RXCES_SHIFT)) & GMAC_MTL_ECC_INTERRUPT_STATUS_RXCES_MASK)
#define GMAC_MTL_ECC_INTERRUPT_STATUS_RXAMS_MASK (0x20U)
#define GMAC_MTL_ECC_INTERRUPT_STATUS_RXAMS_SHIFT (5U)
#define GMAC_MTL_ECC_INTERRUPT_STATUS_RXAMS_WIDTH (1U)
#define GMAC_MTL_ECC_INTERRUPT_STATUS_RXAMS(x)   (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_ECC_INTERRUPT_STATUS_RXAMS_SHIFT)) & GMAC_MTL_ECC_INTERRUPT_STATUS_RXAMS_MASK)
#define GMAC_MTL_ECC_INTERRUPT_STATUS_RXUES_MASK (0x40U)
#define GMAC_MTL_ECC_INTERRUPT_STATUS_RXUES_SHIFT (6U)
#define GMAC_MTL_ECC_INTERRUPT_STATUS_RXUES_WIDTH (1U)
#define GMAC_MTL_ECC_INTERRUPT_STATUS_RXUES(x)   (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_ECC_INTERRUPT_STATUS_RXUES_SHIFT)) & GMAC_MTL_ECC_INTERRUPT_STATUS_RXUES_MASK)
#define GMAC_MTL_ECC_INTERRUPT_STATUS_ECES_MASK  (0x100U)
#define GMAC_MTL_ECC_INTERRUPT_STATUS_ECES_SHIFT (8U)
#define GMAC_MTL_ECC_INTERRUPT_STATUS_ECES_WIDTH (1U)
#define GMAC_MTL_ECC_INTERRUPT_STATUS_ECES(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_ECC_INTERRUPT_STATUS_ECES_SHIFT)) & GMAC_MTL_ECC_INTERRUPT_STATUS_ECES_MASK)
#define GMAC_MTL_ECC_INTERRUPT_STATUS_EAMS_MASK  (0x200U)
#define GMAC_MTL_ECC_INTERRUPT_STATUS_EAMS_SHIFT (9U)
#define GMAC_MTL_ECC_INTERRUPT_STATUS_EAMS_WIDTH (1U)
#define GMAC_MTL_ECC_INTERRUPT_STATUS_EAMS(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_ECC_INTERRUPT_STATUS_EAMS_SHIFT)) & GMAC_MTL_ECC_INTERRUPT_STATUS_EAMS_MASK)
#define GMAC_MTL_ECC_INTERRUPT_STATUS_EUES_MASK  (0x400U)
#define GMAC_MTL_ECC_INTERRUPT_STATUS_EUES_SHIFT (10U)
#define GMAC_MTL_ECC_INTERRUPT_STATUS_EUES_WIDTH (1U)
#define GMAC_MTL_ECC_INTERRUPT_STATUS_EUES(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_ECC_INTERRUPT_STATUS_EUES_SHIFT)) & GMAC_MTL_ECC_INTERRUPT_STATUS_EUES_MASK)
#define GMAC_MTL_ECC_INTERRUPT_STATUS_RPCES_MASK (0x1000U)
#define GMAC_MTL_ECC_INTERRUPT_STATUS_RPCES_SHIFT (12U)
#define GMAC_MTL_ECC_INTERRUPT_STATUS_RPCES_WIDTH (1U)
#define GMAC_MTL_ECC_INTERRUPT_STATUS_RPCES(x)   (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_ECC_INTERRUPT_STATUS_RPCES_SHIFT)) & GMAC_MTL_ECC_INTERRUPT_STATUS_RPCES_MASK)
#define GMAC_MTL_ECC_INTERRUPT_STATUS_RPAMS_MASK (0x2000U)
#define GMAC_MTL_ECC_INTERRUPT_STATUS_RPAMS_SHIFT (13U)
#define GMAC_MTL_ECC_INTERRUPT_STATUS_RPAMS_WIDTH (1U)
#define GMAC_MTL_ECC_INTERRUPT_STATUS_RPAMS(x)   (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_ECC_INTERRUPT_STATUS_RPAMS_SHIFT)) & GMAC_MTL_ECC_INTERRUPT_STATUS_RPAMS_MASK)
#define GMAC_MTL_ECC_INTERRUPT_STATUS_RPUES_MASK (0x4000U)
#define GMAC_MTL_ECC_INTERRUPT_STATUS_RPUES_SHIFT (14U)
#define GMAC_MTL_ECC_INTERRUPT_STATUS_RPUES_WIDTH (1U)
#define GMAC_MTL_ECC_INTERRUPT_STATUS_RPUES(x)   (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_ECC_INTERRUPT_STATUS_RPUES_SHIFT)) & GMAC_MTL_ECC_INTERRUPT_STATUS_RPUES_MASK)
/*! @} */

/*! @name MTL_ECC_ERR_STS_RCTL -  */
/*! @{ */
#define GMAC_MTL_ECC_ERR_STS_RCTL_EESRE_MASK     (0x1U)
#define GMAC_MTL_ECC_ERR_STS_RCTL_EESRE_SHIFT    (0U)
#define GMAC_MTL_ECC_ERR_STS_RCTL_EESRE_WIDTH    (1U)
#define GMAC_MTL_ECC_ERR_STS_RCTL_EESRE(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_ECC_ERR_STS_RCTL_EESRE_SHIFT)) & GMAC_MTL_ECC_ERR_STS_RCTL_EESRE_MASK)
#define GMAC_MTL_ECC_ERR_STS_RCTL_EMS_MASK       (0xEU)
#define GMAC_MTL_ECC_ERR_STS_RCTL_EMS_SHIFT      (1U)
#define GMAC_MTL_ECC_ERR_STS_RCTL_EMS_WIDTH      (3U)
#define GMAC_MTL_ECC_ERR_STS_RCTL_EMS(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_ECC_ERR_STS_RCTL_EMS_SHIFT)) & GMAC_MTL_ECC_ERR_STS_RCTL_EMS_MASK)
#define GMAC_MTL_ECC_ERR_STS_RCTL_CCES_MASK      (0x10U)
#define GMAC_MTL_ECC_ERR_STS_RCTL_CCES_SHIFT     (4U)
#define GMAC_MTL_ECC_ERR_STS_RCTL_CCES_WIDTH     (1U)
#define GMAC_MTL_ECC_ERR_STS_RCTL_CCES(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_ECC_ERR_STS_RCTL_CCES_SHIFT)) & GMAC_MTL_ECC_ERR_STS_RCTL_CCES_MASK)
#define GMAC_MTL_ECC_ERR_STS_RCTL_CUES_MASK      (0x20U)
#define GMAC_MTL_ECC_ERR_STS_RCTL_CUES_SHIFT     (5U)
#define GMAC_MTL_ECC_ERR_STS_RCTL_CUES_WIDTH     (1U)
#define GMAC_MTL_ECC_ERR_STS_RCTL_CUES(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_ECC_ERR_STS_RCTL_CUES_SHIFT)) & GMAC_MTL_ECC_ERR_STS_RCTL_CUES_MASK)
/*! @} */

/*! @name MTL_ECC_ERR_ADDR_STATUS -  */
/*! @{ */
#define GMAC_MTL_ECC_ERR_ADDR_STATUS_ECEAS_MASK  (0xFFFFU)
#define GMAC_MTL_ECC_ERR_ADDR_STATUS_ECEAS_SHIFT (0U)
#define GMAC_MTL_ECC_ERR_ADDR_STATUS_ECEAS_WIDTH (16U)
#define GMAC_MTL_ECC_ERR_ADDR_STATUS_ECEAS(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_ECC_ERR_ADDR_STATUS_ECEAS_SHIFT)) & GMAC_MTL_ECC_ERR_ADDR_STATUS_ECEAS_MASK)
#define GMAC_MTL_ECC_ERR_ADDR_STATUS_EUEAS_MASK  (0xFFFF0000U)
#define GMAC_MTL_ECC_ERR_ADDR_STATUS_EUEAS_SHIFT (16U)
#define GMAC_MTL_ECC_ERR_ADDR_STATUS_EUEAS_WIDTH (16U)
#define GMAC_MTL_ECC_ERR_ADDR_STATUS_EUEAS(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_ECC_ERR_ADDR_STATUS_EUEAS_SHIFT)) & GMAC_MTL_ECC_ERR_ADDR_STATUS_EUEAS_MASK)
/*! @} */

/*! @name MTL_ECC_ERR_CNTR_STATUS -  */
/*! @{ */
#define GMAC_MTL_ECC_ERR_CNTR_STATUS_ECECS_MASK  (0xFFU)
#define GMAC_MTL_ECC_ERR_CNTR_STATUS_ECECS_SHIFT (0U)
#define GMAC_MTL_ECC_ERR_CNTR_STATUS_ECECS_WIDTH (8U)
#define GMAC_MTL_ECC_ERR_CNTR_STATUS_ECECS(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_ECC_ERR_CNTR_STATUS_ECECS_SHIFT)) & GMAC_MTL_ECC_ERR_CNTR_STATUS_ECECS_MASK)
#define GMAC_MTL_ECC_ERR_CNTR_STATUS_EUECS_MASK  (0xF0000U)
#define GMAC_MTL_ECC_ERR_CNTR_STATUS_EUECS_SHIFT (16U)
#define GMAC_MTL_ECC_ERR_CNTR_STATUS_EUECS_WIDTH (4U)
#define GMAC_MTL_ECC_ERR_CNTR_STATUS_EUECS(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_ECC_ERR_CNTR_STATUS_EUECS_SHIFT)) & GMAC_MTL_ECC_ERR_CNTR_STATUS_EUECS_MASK)
/*! @} */

/*! @name MTL_DPP_CONTROL -  */
/*! @{ */
#define GMAC_MTL_DPP_CONTROL_EDPP_MASK           (0x1U)
#define GMAC_MTL_DPP_CONTROL_EDPP_SHIFT          (0U)
#define GMAC_MTL_DPP_CONTROL_EDPP_WIDTH          (1U)
#define GMAC_MTL_DPP_CONTROL_EDPP(x)             (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_DPP_CONTROL_EDPP_SHIFT)) & GMAC_MTL_DPP_CONTROL_EDPP_MASK)
#define GMAC_MTL_DPP_CONTROL_OPE_MASK            (0x2U)
#define GMAC_MTL_DPP_CONTROL_OPE_SHIFT           (1U)
#define GMAC_MTL_DPP_CONTROL_OPE_WIDTH           (1U)
#define GMAC_MTL_DPP_CONTROL_OPE(x)              (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_DPP_CONTROL_OPE_SHIFT)) & GMAC_MTL_DPP_CONTROL_OPE_MASK)
#define GMAC_MTL_DPP_CONTROL_IPEID_MASK          (0x10U)
#define GMAC_MTL_DPP_CONTROL_IPEID_SHIFT         (4U)
#define GMAC_MTL_DPP_CONTROL_IPEID_WIDTH         (1U)
#define GMAC_MTL_DPP_CONTROL_IPEID(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_DPP_CONTROL_IPEID_SHIFT)) & GMAC_MTL_DPP_CONTROL_IPEID_MASK)
#define GMAC_MTL_DPP_CONTROL_IPEMC_MASK          (0x20U)
#define GMAC_MTL_DPP_CONTROL_IPEMC_SHIFT         (5U)
#define GMAC_MTL_DPP_CONTROL_IPEMC_WIDTH         (1U)
#define GMAC_MTL_DPP_CONTROL_IPEMC(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_DPP_CONTROL_IPEMC_SHIFT)) & GMAC_MTL_DPP_CONTROL_IPEMC_MASK)
#define GMAC_MTL_DPP_CONTROL_IPEMTS_MASK         (0x40U)
#define GMAC_MTL_DPP_CONTROL_IPEMTS_SHIFT        (6U)
#define GMAC_MTL_DPP_CONTROL_IPEMTS_WIDTH        (1U)
#define GMAC_MTL_DPP_CONTROL_IPEMTS(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_DPP_CONTROL_IPEMTS_SHIFT)) & GMAC_MTL_DPP_CONTROL_IPEMTS_MASK)
#define GMAC_MTL_DPP_CONTROL_IPEMRF_MASK         (0x80U)
#define GMAC_MTL_DPP_CONTROL_IPEMRF_SHIFT        (7U)
#define GMAC_MTL_DPP_CONTROL_IPEMRF_WIDTH        (1U)
#define GMAC_MTL_DPP_CONTROL_IPEMRF(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_DPP_CONTROL_IPEMRF_SHIFT)) & GMAC_MTL_DPP_CONTROL_IPEMRF_MASK)
#define GMAC_MTL_DPP_CONTROL_IPEDDC_MASK         (0x100U)
#define GMAC_MTL_DPP_CONTROL_IPEDDC_SHIFT        (8U)
#define GMAC_MTL_DPP_CONTROL_IPEDDC_WIDTH        (1U)
#define GMAC_MTL_DPP_CONTROL_IPEDDC(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_DPP_CONTROL_IPEDDC_SHIFT)) & GMAC_MTL_DPP_CONTROL_IPEDDC_MASK)
#define GMAC_MTL_DPP_CONTROL_IPETD_MASK          (0x400U)
#define GMAC_MTL_DPP_CONTROL_IPETD_SHIFT         (10U)
#define GMAC_MTL_DPP_CONTROL_IPETD_WIDTH         (1U)
#define GMAC_MTL_DPP_CONTROL_IPETD(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_DPP_CONTROL_IPETD_SHIFT)) & GMAC_MTL_DPP_CONTROL_IPETD_MASK)
#define GMAC_MTL_DPP_CONTROL_IPERD_MASK          (0x800U)
#define GMAC_MTL_DPP_CONTROL_IPERD_SHIFT         (11U)
#define GMAC_MTL_DPP_CONTROL_IPERD_WIDTH         (1U)
#define GMAC_MTL_DPP_CONTROL_IPERD(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_DPP_CONTROL_IPERD_SHIFT)) & GMAC_MTL_DPP_CONTROL_IPERD_MASK)
/*! @} */

/*! @name MTL_TXQ0_OPERATION_MODE -  */
/*! @{ */
#define GMAC_MTL_TXQ0_OPERATION_MODE_FTQ_MASK    (0x1U)
#define GMAC_MTL_TXQ0_OPERATION_MODE_FTQ_SHIFT   (0U)
#define GMAC_MTL_TXQ0_OPERATION_MODE_FTQ_WIDTH   (1U)
#define GMAC_MTL_TXQ0_OPERATION_MODE_FTQ(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ0_OPERATION_MODE_FTQ_SHIFT)) & GMAC_MTL_TXQ0_OPERATION_MODE_FTQ_MASK)
#define GMAC_MTL_TXQ0_OPERATION_MODE_TSF_MASK    (0x2U)
#define GMAC_MTL_TXQ0_OPERATION_MODE_TSF_SHIFT   (1U)
#define GMAC_MTL_TXQ0_OPERATION_MODE_TSF_WIDTH   (1U)
#define GMAC_MTL_TXQ0_OPERATION_MODE_TSF(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ0_OPERATION_MODE_TSF_SHIFT)) & GMAC_MTL_TXQ0_OPERATION_MODE_TSF_MASK)
#define GMAC_MTL_TXQ0_OPERATION_MODE_TXQEN_MASK  (0xCU)
#define GMAC_MTL_TXQ0_OPERATION_MODE_TXQEN_SHIFT (2U)
#define GMAC_MTL_TXQ0_OPERATION_MODE_TXQEN_WIDTH (2U)
#define GMAC_MTL_TXQ0_OPERATION_MODE_TXQEN(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ0_OPERATION_MODE_TXQEN_SHIFT)) & GMAC_MTL_TXQ0_OPERATION_MODE_TXQEN_MASK)
#define GMAC_MTL_TXQ0_OPERATION_MODE_TTC_MASK    (0x70U)
#define GMAC_MTL_TXQ0_OPERATION_MODE_TTC_SHIFT   (4U)
#define GMAC_MTL_TXQ0_OPERATION_MODE_TTC_WIDTH   (3U)
#define GMAC_MTL_TXQ0_OPERATION_MODE_TTC(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ0_OPERATION_MODE_TTC_SHIFT)) & GMAC_MTL_TXQ0_OPERATION_MODE_TTC_MASK)
#define GMAC_MTL_TXQ0_OPERATION_MODE_TQS_MASK    (0x7F0000U)
#define GMAC_MTL_TXQ0_OPERATION_MODE_TQS_SHIFT   (16U)
#define GMAC_MTL_TXQ0_OPERATION_MODE_TQS_WIDTH   (7U)
#define GMAC_MTL_TXQ0_OPERATION_MODE_TQS(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ0_OPERATION_MODE_TQS_SHIFT)) & GMAC_MTL_TXQ0_OPERATION_MODE_TQS_MASK)
/*! @} */

/*! @name MTL_TXQ0_UNDERFLOW -  */
/*! @{ */
#define GMAC_MTL_TXQ0_UNDERFLOW_UFFRMCNT_MASK    (0x7FFU)
#define GMAC_MTL_TXQ0_UNDERFLOW_UFFRMCNT_SHIFT   (0U)
#define GMAC_MTL_TXQ0_UNDERFLOW_UFFRMCNT_WIDTH   (11U)
#define GMAC_MTL_TXQ0_UNDERFLOW_UFFRMCNT(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ0_UNDERFLOW_UFFRMCNT_SHIFT)) & GMAC_MTL_TXQ0_UNDERFLOW_UFFRMCNT_MASK)
#define GMAC_MTL_TXQ0_UNDERFLOW_UFCNTOVF_MASK    (0x800U)
#define GMAC_MTL_TXQ0_UNDERFLOW_UFCNTOVF_SHIFT   (11U)
#define GMAC_MTL_TXQ0_UNDERFLOW_UFCNTOVF_WIDTH   (1U)
#define GMAC_MTL_TXQ0_UNDERFLOW_UFCNTOVF(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ0_UNDERFLOW_UFCNTOVF_SHIFT)) & GMAC_MTL_TXQ0_UNDERFLOW_UFCNTOVF_MASK)
/*! @} */

/*! @name MTL_TXQ0_DEBUG -  */
/*! @{ */
#define GMAC_MTL_TXQ0_DEBUG_TXQPAUSED_MASK       (0x1U)
#define GMAC_MTL_TXQ0_DEBUG_TXQPAUSED_SHIFT      (0U)
#define GMAC_MTL_TXQ0_DEBUG_TXQPAUSED_WIDTH      (1U)
#define GMAC_MTL_TXQ0_DEBUG_TXQPAUSED(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ0_DEBUG_TXQPAUSED_SHIFT)) & GMAC_MTL_TXQ0_DEBUG_TXQPAUSED_MASK)
#define GMAC_MTL_TXQ0_DEBUG_TRCSTS_MASK          (0x6U)
#define GMAC_MTL_TXQ0_DEBUG_TRCSTS_SHIFT         (1U)
#define GMAC_MTL_TXQ0_DEBUG_TRCSTS_WIDTH         (2U)
#define GMAC_MTL_TXQ0_DEBUG_TRCSTS(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ0_DEBUG_TRCSTS_SHIFT)) & GMAC_MTL_TXQ0_DEBUG_TRCSTS_MASK)
#define GMAC_MTL_TXQ0_DEBUG_TWCSTS_MASK          (0x8U)
#define GMAC_MTL_TXQ0_DEBUG_TWCSTS_SHIFT         (3U)
#define GMAC_MTL_TXQ0_DEBUG_TWCSTS_WIDTH         (1U)
#define GMAC_MTL_TXQ0_DEBUG_TWCSTS(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ0_DEBUG_TWCSTS_SHIFT)) & GMAC_MTL_TXQ0_DEBUG_TWCSTS_MASK)
#define GMAC_MTL_TXQ0_DEBUG_TXQSTS_MASK          (0x10U)
#define GMAC_MTL_TXQ0_DEBUG_TXQSTS_SHIFT         (4U)
#define GMAC_MTL_TXQ0_DEBUG_TXQSTS_WIDTH         (1U)
#define GMAC_MTL_TXQ0_DEBUG_TXQSTS(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ0_DEBUG_TXQSTS_SHIFT)) & GMAC_MTL_TXQ0_DEBUG_TXQSTS_MASK)
#define GMAC_MTL_TXQ0_DEBUG_TXSTSFSTS_MASK       (0x20U)
#define GMAC_MTL_TXQ0_DEBUG_TXSTSFSTS_SHIFT      (5U)
#define GMAC_MTL_TXQ0_DEBUG_TXSTSFSTS_WIDTH      (1U)
#define GMAC_MTL_TXQ0_DEBUG_TXSTSFSTS(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ0_DEBUG_TXSTSFSTS_SHIFT)) & GMAC_MTL_TXQ0_DEBUG_TXSTSFSTS_MASK)
#define GMAC_MTL_TXQ0_DEBUG_PTXQ_MASK            (0x70000U)
#define GMAC_MTL_TXQ0_DEBUG_PTXQ_SHIFT           (16U)
#define GMAC_MTL_TXQ0_DEBUG_PTXQ_WIDTH           (3U)
#define GMAC_MTL_TXQ0_DEBUG_PTXQ(x)              (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ0_DEBUG_PTXQ_SHIFT)) & GMAC_MTL_TXQ0_DEBUG_PTXQ_MASK)
#define GMAC_MTL_TXQ0_DEBUG_STXSTSF_MASK         (0x700000U)
#define GMAC_MTL_TXQ0_DEBUG_STXSTSF_SHIFT        (20U)
#define GMAC_MTL_TXQ0_DEBUG_STXSTSF_WIDTH        (3U)
#define GMAC_MTL_TXQ0_DEBUG_STXSTSF(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ0_DEBUG_STXSTSF_SHIFT)) & GMAC_MTL_TXQ0_DEBUG_STXSTSF_MASK)
/*! @} */

/*! @name MTL_TXQ0_ETS_STATUS -  */
/*! @{ */
#define GMAC_MTL_TXQ0_ETS_STATUS_ABS_MASK        (0xFFFFFFU)
#define GMAC_MTL_TXQ0_ETS_STATUS_ABS_SHIFT       (0U)
#define GMAC_MTL_TXQ0_ETS_STATUS_ABS_WIDTH       (24U)
#define GMAC_MTL_TXQ0_ETS_STATUS_ABS(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ0_ETS_STATUS_ABS_SHIFT)) & GMAC_MTL_TXQ0_ETS_STATUS_ABS_MASK)
/*! @} */

/*! @name MTL_TXQ0_QUANTUM_WEIGHT -  */
/*! @{ */
#define GMAC_MTL_TXQ0_QUANTUM_WEIGHT_ISCQW_MASK  (0x1FFFFFU)
#define GMAC_MTL_TXQ0_QUANTUM_WEIGHT_ISCQW_SHIFT (0U)
#define GMAC_MTL_TXQ0_QUANTUM_WEIGHT_ISCQW_WIDTH (21U)
#define GMAC_MTL_TXQ0_QUANTUM_WEIGHT_ISCQW(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ0_QUANTUM_WEIGHT_ISCQW_SHIFT)) & GMAC_MTL_TXQ0_QUANTUM_WEIGHT_ISCQW_MASK)
/*! @} */

/*! @name MTL_Q0_INTERRUPT_CONTROL_STATUS -  */
/*! @{ */
#define GMAC_MTL_Q0_INTERRUPT_CONTROL_STATUS_TXUNFIS_MASK (0x1U)
#define GMAC_MTL_Q0_INTERRUPT_CONTROL_STATUS_TXUNFIS_SHIFT (0U)
#define GMAC_MTL_Q0_INTERRUPT_CONTROL_STATUS_TXUNFIS_WIDTH (1U)
#define GMAC_MTL_Q0_INTERRUPT_CONTROL_STATUS_TXUNFIS(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_Q0_INTERRUPT_CONTROL_STATUS_TXUNFIS_SHIFT)) & GMAC_MTL_Q0_INTERRUPT_CONTROL_STATUS_TXUNFIS_MASK)
#define GMAC_MTL_Q0_INTERRUPT_CONTROL_STATUS_ABPSIS_MASK (0x2U)
#define GMAC_MTL_Q0_INTERRUPT_CONTROL_STATUS_ABPSIS_SHIFT (1U)
#define GMAC_MTL_Q0_INTERRUPT_CONTROL_STATUS_ABPSIS_WIDTH (1U)
#define GMAC_MTL_Q0_INTERRUPT_CONTROL_STATUS_ABPSIS(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_Q0_INTERRUPT_CONTROL_STATUS_ABPSIS_SHIFT)) & GMAC_MTL_Q0_INTERRUPT_CONTROL_STATUS_ABPSIS_MASK)
#define GMAC_MTL_Q0_INTERRUPT_CONTROL_STATUS_TXUIE_MASK (0x100U)
#define GMAC_MTL_Q0_INTERRUPT_CONTROL_STATUS_TXUIE_SHIFT (8U)
#define GMAC_MTL_Q0_INTERRUPT_CONTROL_STATUS_TXUIE_WIDTH (1U)
#define GMAC_MTL_Q0_INTERRUPT_CONTROL_STATUS_TXUIE(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_Q0_INTERRUPT_CONTROL_STATUS_TXUIE_SHIFT)) & GMAC_MTL_Q0_INTERRUPT_CONTROL_STATUS_TXUIE_MASK)
#define GMAC_MTL_Q0_INTERRUPT_CONTROL_STATUS_ABPSIE_MASK (0x200U)
#define GMAC_MTL_Q0_INTERRUPT_CONTROL_STATUS_ABPSIE_SHIFT (9U)
#define GMAC_MTL_Q0_INTERRUPT_CONTROL_STATUS_ABPSIE_WIDTH (1U)
#define GMAC_MTL_Q0_INTERRUPT_CONTROL_STATUS_ABPSIE(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_Q0_INTERRUPT_CONTROL_STATUS_ABPSIE_SHIFT)) & GMAC_MTL_Q0_INTERRUPT_CONTROL_STATUS_ABPSIE_MASK)
#define GMAC_MTL_Q0_INTERRUPT_CONTROL_STATUS_RXOVFIS_MASK (0x10000U)
#define GMAC_MTL_Q0_INTERRUPT_CONTROL_STATUS_RXOVFIS_SHIFT (16U)
#define GMAC_MTL_Q0_INTERRUPT_CONTROL_STATUS_RXOVFIS_WIDTH (1U)
#define GMAC_MTL_Q0_INTERRUPT_CONTROL_STATUS_RXOVFIS(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_Q0_INTERRUPT_CONTROL_STATUS_RXOVFIS_SHIFT)) & GMAC_MTL_Q0_INTERRUPT_CONTROL_STATUS_RXOVFIS_MASK)
#define GMAC_MTL_Q0_INTERRUPT_CONTROL_STATUS_RXOIE_MASK (0x1000000U)
#define GMAC_MTL_Q0_INTERRUPT_CONTROL_STATUS_RXOIE_SHIFT (24U)
#define GMAC_MTL_Q0_INTERRUPT_CONTROL_STATUS_RXOIE_WIDTH (1U)
#define GMAC_MTL_Q0_INTERRUPT_CONTROL_STATUS_RXOIE(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_Q0_INTERRUPT_CONTROL_STATUS_RXOIE_SHIFT)) & GMAC_MTL_Q0_INTERRUPT_CONTROL_STATUS_RXOIE_MASK)
/*! @} */

/*! @name MTL_RXQ0_OPERATION_MODE -  */
/*! @{ */
#define GMAC_MTL_RXQ0_OPERATION_MODE_RTC_MASK    (0x3U)
#define GMAC_MTL_RXQ0_OPERATION_MODE_RTC_SHIFT   (0U)
#define GMAC_MTL_RXQ0_OPERATION_MODE_RTC_WIDTH   (2U)
#define GMAC_MTL_RXQ0_OPERATION_MODE_RTC(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ0_OPERATION_MODE_RTC_SHIFT)) & GMAC_MTL_RXQ0_OPERATION_MODE_RTC_MASK)
#define GMAC_MTL_RXQ0_OPERATION_MODE_FUP_MASK    (0x8U)
#define GMAC_MTL_RXQ0_OPERATION_MODE_FUP_SHIFT   (3U)
#define GMAC_MTL_RXQ0_OPERATION_MODE_FUP_WIDTH   (1U)
#define GMAC_MTL_RXQ0_OPERATION_MODE_FUP(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ0_OPERATION_MODE_FUP_SHIFT)) & GMAC_MTL_RXQ0_OPERATION_MODE_FUP_MASK)
#define GMAC_MTL_RXQ0_OPERATION_MODE_FEP_MASK    (0x10U)
#define GMAC_MTL_RXQ0_OPERATION_MODE_FEP_SHIFT   (4U)
#define GMAC_MTL_RXQ0_OPERATION_MODE_FEP_WIDTH   (1U)
#define GMAC_MTL_RXQ0_OPERATION_MODE_FEP(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ0_OPERATION_MODE_FEP_SHIFT)) & GMAC_MTL_RXQ0_OPERATION_MODE_FEP_MASK)
#define GMAC_MTL_RXQ0_OPERATION_MODE_RSF_MASK    (0x20U)
#define GMAC_MTL_RXQ0_OPERATION_MODE_RSF_SHIFT   (5U)
#define GMAC_MTL_RXQ0_OPERATION_MODE_RSF_WIDTH   (1U)
#define GMAC_MTL_RXQ0_OPERATION_MODE_RSF(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ0_OPERATION_MODE_RSF_SHIFT)) & GMAC_MTL_RXQ0_OPERATION_MODE_RSF_MASK)
#define GMAC_MTL_RXQ0_OPERATION_MODE_DIS_TCP_EF_MASK (0x40U)
#define GMAC_MTL_RXQ0_OPERATION_MODE_DIS_TCP_EF_SHIFT (6U)
#define GMAC_MTL_RXQ0_OPERATION_MODE_DIS_TCP_EF_WIDTH (1U)
#define GMAC_MTL_RXQ0_OPERATION_MODE_DIS_TCP_EF(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ0_OPERATION_MODE_DIS_TCP_EF_SHIFT)) & GMAC_MTL_RXQ0_OPERATION_MODE_DIS_TCP_EF_MASK)
#define GMAC_MTL_RXQ0_OPERATION_MODE_EHFC_MASK   (0x80U)
#define GMAC_MTL_RXQ0_OPERATION_MODE_EHFC_SHIFT  (7U)
#define GMAC_MTL_RXQ0_OPERATION_MODE_EHFC_WIDTH  (1U)
#define GMAC_MTL_RXQ0_OPERATION_MODE_EHFC(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ0_OPERATION_MODE_EHFC_SHIFT)) & GMAC_MTL_RXQ0_OPERATION_MODE_EHFC_MASK)
#define GMAC_MTL_RXQ0_OPERATION_MODE_RFA_MASK    (0x3F00U)
#define GMAC_MTL_RXQ0_OPERATION_MODE_RFA_SHIFT   (8U)
#define GMAC_MTL_RXQ0_OPERATION_MODE_RFA_WIDTH   (6U)
#define GMAC_MTL_RXQ0_OPERATION_MODE_RFA(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ0_OPERATION_MODE_RFA_SHIFT)) & GMAC_MTL_RXQ0_OPERATION_MODE_RFA_MASK)
#define GMAC_MTL_RXQ0_OPERATION_MODE_RFD_MASK    (0xFC000U)
#define GMAC_MTL_RXQ0_OPERATION_MODE_RFD_SHIFT   (14U)
#define GMAC_MTL_RXQ0_OPERATION_MODE_RFD_WIDTH   (6U)
#define GMAC_MTL_RXQ0_OPERATION_MODE_RFD(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ0_OPERATION_MODE_RFD_SHIFT)) & GMAC_MTL_RXQ0_OPERATION_MODE_RFD_MASK)
#define GMAC_MTL_RXQ0_OPERATION_MODE_RQS_MASK    (0x7F00000U)
#define GMAC_MTL_RXQ0_OPERATION_MODE_RQS_SHIFT   (20U)
#define GMAC_MTL_RXQ0_OPERATION_MODE_RQS_WIDTH   (7U)
#define GMAC_MTL_RXQ0_OPERATION_MODE_RQS(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ0_OPERATION_MODE_RQS_SHIFT)) & GMAC_MTL_RXQ0_OPERATION_MODE_RQS_MASK)
/*! @} */

/*! @name MTL_RXQ0_MISSED_PACKET_OVERFLOW_CNT -  */
/*! @{ */
#define GMAC_MTL_RXQ0_MISSED_PACKET_OVERFLOW_CNT_OVFPKTCNT_MASK (0x7FFU)
#define GMAC_MTL_RXQ0_MISSED_PACKET_OVERFLOW_CNT_OVFPKTCNT_SHIFT (0U)
#define GMAC_MTL_RXQ0_MISSED_PACKET_OVERFLOW_CNT_OVFPKTCNT_WIDTH (11U)
#define GMAC_MTL_RXQ0_MISSED_PACKET_OVERFLOW_CNT_OVFPKTCNT(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ0_MISSED_PACKET_OVERFLOW_CNT_OVFPKTCNT_SHIFT)) & GMAC_MTL_RXQ0_MISSED_PACKET_OVERFLOW_CNT_OVFPKTCNT_MASK)
#define GMAC_MTL_RXQ0_MISSED_PACKET_OVERFLOW_CNT_OVFCNTOVF_MASK (0x800U)
#define GMAC_MTL_RXQ0_MISSED_PACKET_OVERFLOW_CNT_OVFCNTOVF_SHIFT (11U)
#define GMAC_MTL_RXQ0_MISSED_PACKET_OVERFLOW_CNT_OVFCNTOVF_WIDTH (1U)
#define GMAC_MTL_RXQ0_MISSED_PACKET_OVERFLOW_CNT_OVFCNTOVF(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ0_MISSED_PACKET_OVERFLOW_CNT_OVFCNTOVF_SHIFT)) & GMAC_MTL_RXQ0_MISSED_PACKET_OVERFLOW_CNT_OVFCNTOVF_MASK)
#define GMAC_MTL_RXQ0_MISSED_PACKET_OVERFLOW_CNT_MISPKTCNT_MASK (0x7FF0000U)
#define GMAC_MTL_RXQ0_MISSED_PACKET_OVERFLOW_CNT_MISPKTCNT_SHIFT (16U)
#define GMAC_MTL_RXQ0_MISSED_PACKET_OVERFLOW_CNT_MISPKTCNT_WIDTH (11U)
#define GMAC_MTL_RXQ0_MISSED_PACKET_OVERFLOW_CNT_MISPKTCNT(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ0_MISSED_PACKET_OVERFLOW_CNT_MISPKTCNT_SHIFT)) & GMAC_MTL_RXQ0_MISSED_PACKET_OVERFLOW_CNT_MISPKTCNT_MASK)
#define GMAC_MTL_RXQ0_MISSED_PACKET_OVERFLOW_CNT_MISCNTOVF_MASK (0x8000000U)
#define GMAC_MTL_RXQ0_MISSED_PACKET_OVERFLOW_CNT_MISCNTOVF_SHIFT (27U)
#define GMAC_MTL_RXQ0_MISSED_PACKET_OVERFLOW_CNT_MISCNTOVF_WIDTH (1U)
#define GMAC_MTL_RXQ0_MISSED_PACKET_OVERFLOW_CNT_MISCNTOVF(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ0_MISSED_PACKET_OVERFLOW_CNT_MISCNTOVF_SHIFT)) & GMAC_MTL_RXQ0_MISSED_PACKET_OVERFLOW_CNT_MISCNTOVF_MASK)
/*! @} */

/*! @name MTL_RXQ0_DEBUG -  */
/*! @{ */
#define GMAC_MTL_RXQ0_DEBUG_RWCSTS_MASK          (0x1U)
#define GMAC_MTL_RXQ0_DEBUG_RWCSTS_SHIFT         (0U)
#define GMAC_MTL_RXQ0_DEBUG_RWCSTS_WIDTH         (1U)
#define GMAC_MTL_RXQ0_DEBUG_RWCSTS(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ0_DEBUG_RWCSTS_SHIFT)) & GMAC_MTL_RXQ0_DEBUG_RWCSTS_MASK)
#define GMAC_MTL_RXQ0_DEBUG_RRCSTS_MASK          (0x6U)
#define GMAC_MTL_RXQ0_DEBUG_RRCSTS_SHIFT         (1U)
#define GMAC_MTL_RXQ0_DEBUG_RRCSTS_WIDTH         (2U)
#define GMAC_MTL_RXQ0_DEBUG_RRCSTS(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ0_DEBUG_RRCSTS_SHIFT)) & GMAC_MTL_RXQ0_DEBUG_RRCSTS_MASK)
#define GMAC_MTL_RXQ0_DEBUG_RXQSTS_MASK          (0x30U)
#define GMAC_MTL_RXQ0_DEBUG_RXQSTS_SHIFT         (4U)
#define GMAC_MTL_RXQ0_DEBUG_RXQSTS_WIDTH         (2U)
#define GMAC_MTL_RXQ0_DEBUG_RXQSTS(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ0_DEBUG_RXQSTS_SHIFT)) & GMAC_MTL_RXQ0_DEBUG_RXQSTS_MASK)
#define GMAC_MTL_RXQ0_DEBUG_PRXQ_MASK            (0x3FFF0000U)
#define GMAC_MTL_RXQ0_DEBUG_PRXQ_SHIFT           (16U)
#define GMAC_MTL_RXQ0_DEBUG_PRXQ_WIDTH           (14U)
#define GMAC_MTL_RXQ0_DEBUG_PRXQ(x)              (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ0_DEBUG_PRXQ_SHIFT)) & GMAC_MTL_RXQ0_DEBUG_PRXQ_MASK)
/*! @} */

/*! @name MTL_RXQ0_CONTROL -  */
/*! @{ */
#define GMAC_MTL_RXQ0_CONTROL_RXQ_WEGT_MASK      (0x7U)
#define GMAC_MTL_RXQ0_CONTROL_RXQ_WEGT_SHIFT     (0U)
#define GMAC_MTL_RXQ0_CONTROL_RXQ_WEGT_WIDTH     (3U)
#define GMAC_MTL_RXQ0_CONTROL_RXQ_WEGT(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ0_CONTROL_RXQ_WEGT_SHIFT)) & GMAC_MTL_RXQ0_CONTROL_RXQ_WEGT_MASK)
#define GMAC_MTL_RXQ0_CONTROL_RXQ_FRM_ARBIT_MASK (0x8U)
#define GMAC_MTL_RXQ0_CONTROL_RXQ_FRM_ARBIT_SHIFT (3U)
#define GMAC_MTL_RXQ0_CONTROL_RXQ_FRM_ARBIT_WIDTH (1U)
#define GMAC_MTL_RXQ0_CONTROL_RXQ_FRM_ARBIT(x)   (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ0_CONTROL_RXQ_FRM_ARBIT_SHIFT)) & GMAC_MTL_RXQ0_CONTROL_RXQ_FRM_ARBIT_MASK)
/*! @} */

/*! @name MTL_TXQ1_OPERATION_MODE -  */
/*! @{ */
#define GMAC_MTL_TXQ1_OPERATION_MODE_FTQ_MASK    (0x1U)
#define GMAC_MTL_TXQ1_OPERATION_MODE_FTQ_SHIFT   (0U)
#define GMAC_MTL_TXQ1_OPERATION_MODE_FTQ_WIDTH   (1U)
#define GMAC_MTL_TXQ1_OPERATION_MODE_FTQ(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ1_OPERATION_MODE_FTQ_SHIFT)) & GMAC_MTL_TXQ1_OPERATION_MODE_FTQ_MASK)
#define GMAC_MTL_TXQ1_OPERATION_MODE_TSF_MASK    (0x2U)
#define GMAC_MTL_TXQ1_OPERATION_MODE_TSF_SHIFT   (1U)
#define GMAC_MTL_TXQ1_OPERATION_MODE_TSF_WIDTH   (1U)
#define GMAC_MTL_TXQ1_OPERATION_MODE_TSF(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ1_OPERATION_MODE_TSF_SHIFT)) & GMAC_MTL_TXQ1_OPERATION_MODE_TSF_MASK)
#define GMAC_MTL_TXQ1_OPERATION_MODE_TXQEN_MASK  (0xCU)
#define GMAC_MTL_TXQ1_OPERATION_MODE_TXQEN_SHIFT (2U)
#define GMAC_MTL_TXQ1_OPERATION_MODE_TXQEN_WIDTH (2U)
#define GMAC_MTL_TXQ1_OPERATION_MODE_TXQEN(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ1_OPERATION_MODE_TXQEN_SHIFT)) & GMAC_MTL_TXQ1_OPERATION_MODE_TXQEN_MASK)
#define GMAC_MTL_TXQ1_OPERATION_MODE_TTC_MASK    (0x70U)
#define GMAC_MTL_TXQ1_OPERATION_MODE_TTC_SHIFT   (4U)
#define GMAC_MTL_TXQ1_OPERATION_MODE_TTC_WIDTH   (3U)
#define GMAC_MTL_TXQ1_OPERATION_MODE_TTC(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ1_OPERATION_MODE_TTC_SHIFT)) & GMAC_MTL_TXQ1_OPERATION_MODE_TTC_MASK)
#define GMAC_MTL_TXQ1_OPERATION_MODE_TQS_MASK    (0x7F0000U)
#define GMAC_MTL_TXQ1_OPERATION_MODE_TQS_SHIFT   (16U)
#define GMAC_MTL_TXQ1_OPERATION_MODE_TQS_WIDTH   (7U)
#define GMAC_MTL_TXQ1_OPERATION_MODE_TQS(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ1_OPERATION_MODE_TQS_SHIFT)) & GMAC_MTL_TXQ1_OPERATION_MODE_TQS_MASK)
/*! @} */

/*! @name MTL_TXQ1_UNDERFLOW -  */
/*! @{ */
#define GMAC_MTL_TXQ1_UNDERFLOW_UFFRMCNT_MASK    (0x7FFU)
#define GMAC_MTL_TXQ1_UNDERFLOW_UFFRMCNT_SHIFT   (0U)
#define GMAC_MTL_TXQ1_UNDERFLOW_UFFRMCNT_WIDTH   (11U)
#define GMAC_MTL_TXQ1_UNDERFLOW_UFFRMCNT(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ1_UNDERFLOW_UFFRMCNT_SHIFT)) & GMAC_MTL_TXQ1_UNDERFLOW_UFFRMCNT_MASK)
#define GMAC_MTL_TXQ1_UNDERFLOW_UFCNTOVF_MASK    (0x800U)
#define GMAC_MTL_TXQ1_UNDERFLOW_UFCNTOVF_SHIFT   (11U)
#define GMAC_MTL_TXQ1_UNDERFLOW_UFCNTOVF_WIDTH   (1U)
#define GMAC_MTL_TXQ1_UNDERFLOW_UFCNTOVF(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ1_UNDERFLOW_UFCNTOVF_SHIFT)) & GMAC_MTL_TXQ1_UNDERFLOW_UFCNTOVF_MASK)
/*! @} */

/*! @name MTL_TXQ1_DEBUG -  */
/*! @{ */
#define GMAC_MTL_TXQ1_DEBUG_TXQPAUSED_MASK       (0x1U)
#define GMAC_MTL_TXQ1_DEBUG_TXQPAUSED_SHIFT      (0U)
#define GMAC_MTL_TXQ1_DEBUG_TXQPAUSED_WIDTH      (1U)
#define GMAC_MTL_TXQ1_DEBUG_TXQPAUSED(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ1_DEBUG_TXQPAUSED_SHIFT)) & GMAC_MTL_TXQ1_DEBUG_TXQPAUSED_MASK)
#define GMAC_MTL_TXQ1_DEBUG_TRCSTS_MASK          (0x6U)
#define GMAC_MTL_TXQ1_DEBUG_TRCSTS_SHIFT         (1U)
#define GMAC_MTL_TXQ1_DEBUG_TRCSTS_WIDTH         (2U)
#define GMAC_MTL_TXQ1_DEBUG_TRCSTS(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ1_DEBUG_TRCSTS_SHIFT)) & GMAC_MTL_TXQ1_DEBUG_TRCSTS_MASK)
#define GMAC_MTL_TXQ1_DEBUG_TWCSTS_MASK          (0x8U)
#define GMAC_MTL_TXQ1_DEBUG_TWCSTS_SHIFT         (3U)
#define GMAC_MTL_TXQ1_DEBUG_TWCSTS_WIDTH         (1U)
#define GMAC_MTL_TXQ1_DEBUG_TWCSTS(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ1_DEBUG_TWCSTS_SHIFT)) & GMAC_MTL_TXQ1_DEBUG_TWCSTS_MASK)
#define GMAC_MTL_TXQ1_DEBUG_TXQSTS_MASK          (0x10U)
#define GMAC_MTL_TXQ1_DEBUG_TXQSTS_SHIFT         (4U)
#define GMAC_MTL_TXQ1_DEBUG_TXQSTS_WIDTH         (1U)
#define GMAC_MTL_TXQ1_DEBUG_TXQSTS(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ1_DEBUG_TXQSTS_SHIFT)) & GMAC_MTL_TXQ1_DEBUG_TXQSTS_MASK)
#define GMAC_MTL_TXQ1_DEBUG_TXSTSFSTS_MASK       (0x20U)
#define GMAC_MTL_TXQ1_DEBUG_TXSTSFSTS_SHIFT      (5U)
#define GMAC_MTL_TXQ1_DEBUG_TXSTSFSTS_WIDTH      (1U)
#define GMAC_MTL_TXQ1_DEBUG_TXSTSFSTS(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ1_DEBUG_TXSTSFSTS_SHIFT)) & GMAC_MTL_TXQ1_DEBUG_TXSTSFSTS_MASK)
#define GMAC_MTL_TXQ1_DEBUG_PTXQ_MASK            (0x70000U)
#define GMAC_MTL_TXQ1_DEBUG_PTXQ_SHIFT           (16U)
#define GMAC_MTL_TXQ1_DEBUG_PTXQ_WIDTH           (3U)
#define GMAC_MTL_TXQ1_DEBUG_PTXQ(x)              (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ1_DEBUG_PTXQ_SHIFT)) & GMAC_MTL_TXQ1_DEBUG_PTXQ_MASK)
#define GMAC_MTL_TXQ1_DEBUG_STXSTSF_MASK         (0x700000U)
#define GMAC_MTL_TXQ1_DEBUG_STXSTSF_SHIFT        (20U)
#define GMAC_MTL_TXQ1_DEBUG_STXSTSF_WIDTH        (3U)
#define GMAC_MTL_TXQ1_DEBUG_STXSTSF(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ1_DEBUG_STXSTSF_SHIFT)) & GMAC_MTL_TXQ1_DEBUG_STXSTSF_MASK)
/*! @} */

/*! @name MTL_TXQ1_ETS_CONTROL -  */
/*! @{ */
#define GMAC_MTL_TXQ1_ETS_CONTROL_AVALG_MASK     (0x4U)
#define GMAC_MTL_TXQ1_ETS_CONTROL_AVALG_SHIFT    (2U)
#define GMAC_MTL_TXQ1_ETS_CONTROL_AVALG_WIDTH    (1U)
#define GMAC_MTL_TXQ1_ETS_CONTROL_AVALG(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ1_ETS_CONTROL_AVALG_SHIFT)) & GMAC_MTL_TXQ1_ETS_CONTROL_AVALG_MASK)
#define GMAC_MTL_TXQ1_ETS_CONTROL_CC_MASK        (0x8U)
#define GMAC_MTL_TXQ1_ETS_CONTROL_CC_SHIFT       (3U)
#define GMAC_MTL_TXQ1_ETS_CONTROL_CC_WIDTH       (1U)
#define GMAC_MTL_TXQ1_ETS_CONTROL_CC(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ1_ETS_CONTROL_CC_SHIFT)) & GMAC_MTL_TXQ1_ETS_CONTROL_CC_MASK)
#define GMAC_MTL_TXQ1_ETS_CONTROL_SLC_MASK       (0x70U)
#define GMAC_MTL_TXQ1_ETS_CONTROL_SLC_SHIFT      (4U)
#define GMAC_MTL_TXQ1_ETS_CONTROL_SLC_WIDTH      (3U)
#define GMAC_MTL_TXQ1_ETS_CONTROL_SLC(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ1_ETS_CONTROL_SLC_SHIFT)) & GMAC_MTL_TXQ1_ETS_CONTROL_SLC_MASK)
/*! @} */

/*! @name MTL_TXQ1_ETS_STATUS -  */
/*! @{ */
#define GMAC_MTL_TXQ1_ETS_STATUS_ABS_MASK        (0xFFFFFFU)
#define GMAC_MTL_TXQ1_ETS_STATUS_ABS_SHIFT       (0U)
#define GMAC_MTL_TXQ1_ETS_STATUS_ABS_WIDTH       (24U)
#define GMAC_MTL_TXQ1_ETS_STATUS_ABS(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ1_ETS_STATUS_ABS_SHIFT)) & GMAC_MTL_TXQ1_ETS_STATUS_ABS_MASK)
/*! @} */

/*! @name MTL_TXQ1_QUANTUM_WEIGHT -  */
/*! @{ */
#define GMAC_MTL_TXQ1_QUANTUM_WEIGHT_ISCQW_MASK  (0x1FFFFFU)
#define GMAC_MTL_TXQ1_QUANTUM_WEIGHT_ISCQW_SHIFT (0U)
#define GMAC_MTL_TXQ1_QUANTUM_WEIGHT_ISCQW_WIDTH (21U)
#define GMAC_MTL_TXQ1_QUANTUM_WEIGHT_ISCQW(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ1_QUANTUM_WEIGHT_ISCQW_SHIFT)) & GMAC_MTL_TXQ1_QUANTUM_WEIGHT_ISCQW_MASK)
/*! @} */

/*! @name MTL_TXQ1_SENDSLOPECREDIT -  */
/*! @{ */
#define GMAC_MTL_TXQ1_SENDSLOPECREDIT_SSC_MASK   (0x3FFFU)
#define GMAC_MTL_TXQ1_SENDSLOPECREDIT_SSC_SHIFT  (0U)
#define GMAC_MTL_TXQ1_SENDSLOPECREDIT_SSC_WIDTH  (14U)
#define GMAC_MTL_TXQ1_SENDSLOPECREDIT_SSC(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ1_SENDSLOPECREDIT_SSC_SHIFT)) & GMAC_MTL_TXQ1_SENDSLOPECREDIT_SSC_MASK)
/*! @} */

/*! @name MTL_TXQ1_HICREDIT -  */
/*! @{ */
#define GMAC_MTL_TXQ1_HICREDIT_HC_MASK           (0x1FFFFFFFU)
#define GMAC_MTL_TXQ1_HICREDIT_HC_SHIFT          (0U)
#define GMAC_MTL_TXQ1_HICREDIT_HC_WIDTH          (29U)
#define GMAC_MTL_TXQ1_HICREDIT_HC(x)             (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ1_HICREDIT_HC_SHIFT)) & GMAC_MTL_TXQ1_HICREDIT_HC_MASK)
/*! @} */

/*! @name MTL_TXQ1_LOCREDIT -  */
/*! @{ */
#define GMAC_MTL_TXQ1_LOCREDIT_LC_MASK           (0x1FFFFFFFU)
#define GMAC_MTL_TXQ1_LOCREDIT_LC_SHIFT          (0U)
#define GMAC_MTL_TXQ1_LOCREDIT_LC_WIDTH          (29U)
#define GMAC_MTL_TXQ1_LOCREDIT_LC(x)             (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ1_LOCREDIT_LC_SHIFT)) & GMAC_MTL_TXQ1_LOCREDIT_LC_MASK)
/*! @} */

/*! @name MTL_Q1_INTERRUPT_CONTROL_STATUS -  */
/*! @{ */
#define GMAC_MTL_Q1_INTERRUPT_CONTROL_STATUS_TXUNFIS_MASK (0x1U)
#define GMAC_MTL_Q1_INTERRUPT_CONTROL_STATUS_TXUNFIS_SHIFT (0U)
#define GMAC_MTL_Q1_INTERRUPT_CONTROL_STATUS_TXUNFIS_WIDTH (1U)
#define GMAC_MTL_Q1_INTERRUPT_CONTROL_STATUS_TXUNFIS(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_Q1_INTERRUPT_CONTROL_STATUS_TXUNFIS_SHIFT)) & GMAC_MTL_Q1_INTERRUPT_CONTROL_STATUS_TXUNFIS_MASK)
#define GMAC_MTL_Q1_INTERRUPT_CONTROL_STATUS_ABPSIS_MASK (0x2U)
#define GMAC_MTL_Q1_INTERRUPT_CONTROL_STATUS_ABPSIS_SHIFT (1U)
#define GMAC_MTL_Q1_INTERRUPT_CONTROL_STATUS_ABPSIS_WIDTH (1U)
#define GMAC_MTL_Q1_INTERRUPT_CONTROL_STATUS_ABPSIS(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_Q1_INTERRUPT_CONTROL_STATUS_ABPSIS_SHIFT)) & GMAC_MTL_Q1_INTERRUPT_CONTROL_STATUS_ABPSIS_MASK)
#define GMAC_MTL_Q1_INTERRUPT_CONTROL_STATUS_TXUIE_MASK (0x100U)
#define GMAC_MTL_Q1_INTERRUPT_CONTROL_STATUS_TXUIE_SHIFT (8U)
#define GMAC_MTL_Q1_INTERRUPT_CONTROL_STATUS_TXUIE_WIDTH (1U)
#define GMAC_MTL_Q1_INTERRUPT_CONTROL_STATUS_TXUIE(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_Q1_INTERRUPT_CONTROL_STATUS_TXUIE_SHIFT)) & GMAC_MTL_Q1_INTERRUPT_CONTROL_STATUS_TXUIE_MASK)
#define GMAC_MTL_Q1_INTERRUPT_CONTROL_STATUS_ABPSIE_MASK (0x200U)
#define GMAC_MTL_Q1_INTERRUPT_CONTROL_STATUS_ABPSIE_SHIFT (9U)
#define GMAC_MTL_Q1_INTERRUPT_CONTROL_STATUS_ABPSIE_WIDTH (1U)
#define GMAC_MTL_Q1_INTERRUPT_CONTROL_STATUS_ABPSIE(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_Q1_INTERRUPT_CONTROL_STATUS_ABPSIE_SHIFT)) & GMAC_MTL_Q1_INTERRUPT_CONTROL_STATUS_ABPSIE_MASK)
#define GMAC_MTL_Q1_INTERRUPT_CONTROL_STATUS_RXOVFIS_MASK (0x10000U)
#define GMAC_MTL_Q1_INTERRUPT_CONTROL_STATUS_RXOVFIS_SHIFT (16U)
#define GMAC_MTL_Q1_INTERRUPT_CONTROL_STATUS_RXOVFIS_WIDTH (1U)
#define GMAC_MTL_Q1_INTERRUPT_CONTROL_STATUS_RXOVFIS(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_Q1_INTERRUPT_CONTROL_STATUS_RXOVFIS_SHIFT)) & GMAC_MTL_Q1_INTERRUPT_CONTROL_STATUS_RXOVFIS_MASK)
#define GMAC_MTL_Q1_INTERRUPT_CONTROL_STATUS_RXOIE_MASK (0x1000000U)
#define GMAC_MTL_Q1_INTERRUPT_CONTROL_STATUS_RXOIE_SHIFT (24U)
#define GMAC_MTL_Q1_INTERRUPT_CONTROL_STATUS_RXOIE_WIDTH (1U)
#define GMAC_MTL_Q1_INTERRUPT_CONTROL_STATUS_RXOIE(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_Q1_INTERRUPT_CONTROL_STATUS_RXOIE_SHIFT)) & GMAC_MTL_Q1_INTERRUPT_CONTROL_STATUS_RXOIE_MASK)
/*! @} */

/*! @name MTL_RXQ1_OPERATION_MODE -  */
/*! @{ */
#define GMAC_MTL_RXQ1_OPERATION_MODE_RTC_MASK    (0x3U)
#define GMAC_MTL_RXQ1_OPERATION_MODE_RTC_SHIFT   (0U)
#define GMAC_MTL_RXQ1_OPERATION_MODE_RTC_WIDTH   (2U)
#define GMAC_MTL_RXQ1_OPERATION_MODE_RTC(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ1_OPERATION_MODE_RTC_SHIFT)) & GMAC_MTL_RXQ1_OPERATION_MODE_RTC_MASK)
#define GMAC_MTL_RXQ1_OPERATION_MODE_FUP_MASK    (0x8U)
#define GMAC_MTL_RXQ1_OPERATION_MODE_FUP_SHIFT   (3U)
#define GMAC_MTL_RXQ1_OPERATION_MODE_FUP_WIDTH   (1U)
#define GMAC_MTL_RXQ1_OPERATION_MODE_FUP(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ1_OPERATION_MODE_FUP_SHIFT)) & GMAC_MTL_RXQ1_OPERATION_MODE_FUP_MASK)
#define GMAC_MTL_RXQ1_OPERATION_MODE_FEP_MASK    (0x10U)
#define GMAC_MTL_RXQ1_OPERATION_MODE_FEP_SHIFT   (4U)
#define GMAC_MTL_RXQ1_OPERATION_MODE_FEP_WIDTH   (1U)
#define GMAC_MTL_RXQ1_OPERATION_MODE_FEP(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ1_OPERATION_MODE_FEP_SHIFT)) & GMAC_MTL_RXQ1_OPERATION_MODE_FEP_MASK)
#define GMAC_MTL_RXQ1_OPERATION_MODE_RSF_MASK    (0x20U)
#define GMAC_MTL_RXQ1_OPERATION_MODE_RSF_SHIFT   (5U)
#define GMAC_MTL_RXQ1_OPERATION_MODE_RSF_WIDTH   (1U)
#define GMAC_MTL_RXQ1_OPERATION_MODE_RSF(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ1_OPERATION_MODE_RSF_SHIFT)) & GMAC_MTL_RXQ1_OPERATION_MODE_RSF_MASK)
#define GMAC_MTL_RXQ1_OPERATION_MODE_DIS_TCP_EF_MASK (0x40U)
#define GMAC_MTL_RXQ1_OPERATION_MODE_DIS_TCP_EF_SHIFT (6U)
#define GMAC_MTL_RXQ1_OPERATION_MODE_DIS_TCP_EF_WIDTH (1U)
#define GMAC_MTL_RXQ1_OPERATION_MODE_DIS_TCP_EF(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ1_OPERATION_MODE_DIS_TCP_EF_SHIFT)) & GMAC_MTL_RXQ1_OPERATION_MODE_DIS_TCP_EF_MASK)
#define GMAC_MTL_RXQ1_OPERATION_MODE_EHFC_MASK   (0x80U)
#define GMAC_MTL_RXQ1_OPERATION_MODE_EHFC_SHIFT  (7U)
#define GMAC_MTL_RXQ1_OPERATION_MODE_EHFC_WIDTH  (1U)
#define GMAC_MTL_RXQ1_OPERATION_MODE_EHFC(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ1_OPERATION_MODE_EHFC_SHIFT)) & GMAC_MTL_RXQ1_OPERATION_MODE_EHFC_MASK)
#define GMAC_MTL_RXQ1_OPERATION_MODE_RFA_MASK    (0x3F00U)
#define GMAC_MTL_RXQ1_OPERATION_MODE_RFA_SHIFT   (8U)
#define GMAC_MTL_RXQ1_OPERATION_MODE_RFA_WIDTH   (6U)
#define GMAC_MTL_RXQ1_OPERATION_MODE_RFA(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ1_OPERATION_MODE_RFA_SHIFT)) & GMAC_MTL_RXQ1_OPERATION_MODE_RFA_MASK)
#define GMAC_MTL_RXQ1_OPERATION_MODE_RFD_MASK    (0xFC000U)
#define GMAC_MTL_RXQ1_OPERATION_MODE_RFD_SHIFT   (14U)
#define GMAC_MTL_RXQ1_OPERATION_MODE_RFD_WIDTH   (6U)
#define GMAC_MTL_RXQ1_OPERATION_MODE_RFD(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ1_OPERATION_MODE_RFD_SHIFT)) & GMAC_MTL_RXQ1_OPERATION_MODE_RFD_MASK)
#define GMAC_MTL_RXQ1_OPERATION_MODE_RQS_MASK    (0x7F00000U)
#define GMAC_MTL_RXQ1_OPERATION_MODE_RQS_SHIFT   (20U)
#define GMAC_MTL_RXQ1_OPERATION_MODE_RQS_WIDTH   (7U)
#define GMAC_MTL_RXQ1_OPERATION_MODE_RQS(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ1_OPERATION_MODE_RQS_SHIFT)) & GMAC_MTL_RXQ1_OPERATION_MODE_RQS_MASK)
/*! @} */

/*! @name MTL_RXQ1_MISSED_PACKET_OVERFLOW_CNT -  */
/*! @{ */
#define GMAC_MTL_RXQ1_MISSED_PACKET_OVERFLOW_CNT_OVFPKTCNT_MASK (0x7FFU)
#define GMAC_MTL_RXQ1_MISSED_PACKET_OVERFLOW_CNT_OVFPKTCNT_SHIFT (0U)
#define GMAC_MTL_RXQ1_MISSED_PACKET_OVERFLOW_CNT_OVFPKTCNT_WIDTH (11U)
#define GMAC_MTL_RXQ1_MISSED_PACKET_OVERFLOW_CNT_OVFPKTCNT(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ1_MISSED_PACKET_OVERFLOW_CNT_OVFPKTCNT_SHIFT)) & GMAC_MTL_RXQ1_MISSED_PACKET_OVERFLOW_CNT_OVFPKTCNT_MASK)
#define GMAC_MTL_RXQ1_MISSED_PACKET_OVERFLOW_CNT_OVFCNTOVF_MASK (0x800U)
#define GMAC_MTL_RXQ1_MISSED_PACKET_OVERFLOW_CNT_OVFCNTOVF_SHIFT (11U)
#define GMAC_MTL_RXQ1_MISSED_PACKET_OVERFLOW_CNT_OVFCNTOVF_WIDTH (1U)
#define GMAC_MTL_RXQ1_MISSED_PACKET_OVERFLOW_CNT_OVFCNTOVF(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ1_MISSED_PACKET_OVERFLOW_CNT_OVFCNTOVF_SHIFT)) & GMAC_MTL_RXQ1_MISSED_PACKET_OVERFLOW_CNT_OVFCNTOVF_MASK)
#define GMAC_MTL_RXQ1_MISSED_PACKET_OVERFLOW_CNT_MISPKTCNT_MASK (0x7FF0000U)
#define GMAC_MTL_RXQ1_MISSED_PACKET_OVERFLOW_CNT_MISPKTCNT_SHIFT (16U)
#define GMAC_MTL_RXQ1_MISSED_PACKET_OVERFLOW_CNT_MISPKTCNT_WIDTH (11U)
#define GMAC_MTL_RXQ1_MISSED_PACKET_OVERFLOW_CNT_MISPKTCNT(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ1_MISSED_PACKET_OVERFLOW_CNT_MISPKTCNT_SHIFT)) & GMAC_MTL_RXQ1_MISSED_PACKET_OVERFLOW_CNT_MISPKTCNT_MASK)
#define GMAC_MTL_RXQ1_MISSED_PACKET_OVERFLOW_CNT_MISCNTOVF_MASK (0x8000000U)
#define GMAC_MTL_RXQ1_MISSED_PACKET_OVERFLOW_CNT_MISCNTOVF_SHIFT (27U)
#define GMAC_MTL_RXQ1_MISSED_PACKET_OVERFLOW_CNT_MISCNTOVF_WIDTH (1U)
#define GMAC_MTL_RXQ1_MISSED_PACKET_OVERFLOW_CNT_MISCNTOVF(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ1_MISSED_PACKET_OVERFLOW_CNT_MISCNTOVF_SHIFT)) & GMAC_MTL_RXQ1_MISSED_PACKET_OVERFLOW_CNT_MISCNTOVF_MASK)
/*! @} */

/*! @name MTL_RXQ1_DEBUG -  */
/*! @{ */
#define GMAC_MTL_RXQ1_DEBUG_RWCSTS_MASK          (0x1U)
#define GMAC_MTL_RXQ1_DEBUG_RWCSTS_SHIFT         (0U)
#define GMAC_MTL_RXQ1_DEBUG_RWCSTS_WIDTH         (1U)
#define GMAC_MTL_RXQ1_DEBUG_RWCSTS(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ1_DEBUG_RWCSTS_SHIFT)) & GMAC_MTL_RXQ1_DEBUG_RWCSTS_MASK)
#define GMAC_MTL_RXQ1_DEBUG_RRCSTS_MASK          (0x6U)
#define GMAC_MTL_RXQ1_DEBUG_RRCSTS_SHIFT         (1U)
#define GMAC_MTL_RXQ1_DEBUG_RRCSTS_WIDTH         (2U)
#define GMAC_MTL_RXQ1_DEBUG_RRCSTS(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ1_DEBUG_RRCSTS_SHIFT)) & GMAC_MTL_RXQ1_DEBUG_RRCSTS_MASK)
#define GMAC_MTL_RXQ1_DEBUG_RXQSTS_MASK          (0x30U)
#define GMAC_MTL_RXQ1_DEBUG_RXQSTS_SHIFT         (4U)
#define GMAC_MTL_RXQ1_DEBUG_RXQSTS_WIDTH         (2U)
#define GMAC_MTL_RXQ1_DEBUG_RXQSTS(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ1_DEBUG_RXQSTS_SHIFT)) & GMAC_MTL_RXQ1_DEBUG_RXQSTS_MASK)
#define GMAC_MTL_RXQ1_DEBUG_PRXQ_MASK            (0x3FFF0000U)
#define GMAC_MTL_RXQ1_DEBUG_PRXQ_SHIFT           (16U)
#define GMAC_MTL_RXQ1_DEBUG_PRXQ_WIDTH           (14U)
#define GMAC_MTL_RXQ1_DEBUG_PRXQ(x)              (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ1_DEBUG_PRXQ_SHIFT)) & GMAC_MTL_RXQ1_DEBUG_PRXQ_MASK)
/*! @} */

/*! @name MTL_RXQ1_CONTROL -  */
/*! @{ */
#define GMAC_MTL_RXQ1_CONTROL_RXQ_WEGT_MASK      (0x7U)
#define GMAC_MTL_RXQ1_CONTROL_RXQ_WEGT_SHIFT     (0U)
#define GMAC_MTL_RXQ1_CONTROL_RXQ_WEGT_WIDTH     (3U)
#define GMAC_MTL_RXQ1_CONTROL_RXQ_WEGT(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ1_CONTROL_RXQ_WEGT_SHIFT)) & GMAC_MTL_RXQ1_CONTROL_RXQ_WEGT_MASK)
#define GMAC_MTL_RXQ1_CONTROL_RXQ_FRM_ARBIT_MASK (0x8U)
#define GMAC_MTL_RXQ1_CONTROL_RXQ_FRM_ARBIT_SHIFT (3U)
#define GMAC_MTL_RXQ1_CONTROL_RXQ_FRM_ARBIT_WIDTH (1U)
#define GMAC_MTL_RXQ1_CONTROL_RXQ_FRM_ARBIT(x)   (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ1_CONTROL_RXQ_FRM_ARBIT_SHIFT)) & GMAC_MTL_RXQ1_CONTROL_RXQ_FRM_ARBIT_MASK)
/*! @} */

/*! @name MTL_TXQ2_OPERATION_MODE -  */
/*! @{ */
#define GMAC_MTL_TXQ2_OPERATION_MODE_FTQ_MASK    (0x1U)
#define GMAC_MTL_TXQ2_OPERATION_MODE_FTQ_SHIFT   (0U)
#define GMAC_MTL_TXQ2_OPERATION_MODE_FTQ_WIDTH   (1U)
#define GMAC_MTL_TXQ2_OPERATION_MODE_FTQ(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ2_OPERATION_MODE_FTQ_SHIFT)) & GMAC_MTL_TXQ2_OPERATION_MODE_FTQ_MASK)
#define GMAC_MTL_TXQ2_OPERATION_MODE_TSF_MASK    (0x2U)
#define GMAC_MTL_TXQ2_OPERATION_MODE_TSF_SHIFT   (1U)
#define GMAC_MTL_TXQ2_OPERATION_MODE_TSF_WIDTH   (1U)
#define GMAC_MTL_TXQ2_OPERATION_MODE_TSF(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ2_OPERATION_MODE_TSF_SHIFT)) & GMAC_MTL_TXQ2_OPERATION_MODE_TSF_MASK)
#define GMAC_MTL_TXQ2_OPERATION_MODE_TXQEN_MASK  (0xCU)
#define GMAC_MTL_TXQ2_OPERATION_MODE_TXQEN_SHIFT (2U)
#define GMAC_MTL_TXQ2_OPERATION_MODE_TXQEN_WIDTH (2U)
#define GMAC_MTL_TXQ2_OPERATION_MODE_TXQEN(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ2_OPERATION_MODE_TXQEN_SHIFT)) & GMAC_MTL_TXQ2_OPERATION_MODE_TXQEN_MASK)
#define GMAC_MTL_TXQ2_OPERATION_MODE_TTC_MASK    (0x70U)
#define GMAC_MTL_TXQ2_OPERATION_MODE_TTC_SHIFT   (4U)
#define GMAC_MTL_TXQ2_OPERATION_MODE_TTC_WIDTH   (3U)
#define GMAC_MTL_TXQ2_OPERATION_MODE_TTC(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ2_OPERATION_MODE_TTC_SHIFT)) & GMAC_MTL_TXQ2_OPERATION_MODE_TTC_MASK)
#define GMAC_MTL_TXQ2_OPERATION_MODE_TQS_MASK    (0x7F0000U)
#define GMAC_MTL_TXQ2_OPERATION_MODE_TQS_SHIFT   (16U)
#define GMAC_MTL_TXQ2_OPERATION_MODE_TQS_WIDTH   (7U)
#define GMAC_MTL_TXQ2_OPERATION_MODE_TQS(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ2_OPERATION_MODE_TQS_SHIFT)) & GMAC_MTL_TXQ2_OPERATION_MODE_TQS_MASK)
/*! @} */

/*! @name MTL_TXQ2_UNDERFLOW -  */
/*! @{ */
#define GMAC_MTL_TXQ2_UNDERFLOW_UFFRMCNT_MASK    (0x7FFU)
#define GMAC_MTL_TXQ2_UNDERFLOW_UFFRMCNT_SHIFT   (0U)
#define GMAC_MTL_TXQ2_UNDERFLOW_UFFRMCNT_WIDTH   (11U)
#define GMAC_MTL_TXQ2_UNDERFLOW_UFFRMCNT(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ2_UNDERFLOW_UFFRMCNT_SHIFT)) & GMAC_MTL_TXQ2_UNDERFLOW_UFFRMCNT_MASK)
#define GMAC_MTL_TXQ2_UNDERFLOW_UFCNTOVF_MASK    (0x800U)
#define GMAC_MTL_TXQ2_UNDERFLOW_UFCNTOVF_SHIFT   (11U)
#define GMAC_MTL_TXQ2_UNDERFLOW_UFCNTOVF_WIDTH   (1U)
#define GMAC_MTL_TXQ2_UNDERFLOW_UFCNTOVF(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ2_UNDERFLOW_UFCNTOVF_SHIFT)) & GMAC_MTL_TXQ2_UNDERFLOW_UFCNTOVF_MASK)
/*! @} */

/*! @name MTL_TXQ2_DEBUG -  */
/*! @{ */
#define GMAC_MTL_TXQ2_DEBUG_TXQPAUSED_MASK       (0x1U)
#define GMAC_MTL_TXQ2_DEBUG_TXQPAUSED_SHIFT      (0U)
#define GMAC_MTL_TXQ2_DEBUG_TXQPAUSED_WIDTH      (1U)
#define GMAC_MTL_TXQ2_DEBUG_TXQPAUSED(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ2_DEBUG_TXQPAUSED_SHIFT)) & GMAC_MTL_TXQ2_DEBUG_TXQPAUSED_MASK)
#define GMAC_MTL_TXQ2_DEBUG_TRCSTS_MASK          (0x6U)
#define GMAC_MTL_TXQ2_DEBUG_TRCSTS_SHIFT         (1U)
#define GMAC_MTL_TXQ2_DEBUG_TRCSTS_WIDTH         (2U)
#define GMAC_MTL_TXQ2_DEBUG_TRCSTS(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ2_DEBUG_TRCSTS_SHIFT)) & GMAC_MTL_TXQ2_DEBUG_TRCSTS_MASK)
#define GMAC_MTL_TXQ2_DEBUG_TWCSTS_MASK          (0x8U)
#define GMAC_MTL_TXQ2_DEBUG_TWCSTS_SHIFT         (3U)
#define GMAC_MTL_TXQ2_DEBUG_TWCSTS_WIDTH         (1U)
#define GMAC_MTL_TXQ2_DEBUG_TWCSTS(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ2_DEBUG_TWCSTS_SHIFT)) & GMAC_MTL_TXQ2_DEBUG_TWCSTS_MASK)
#define GMAC_MTL_TXQ2_DEBUG_TXQSTS_MASK          (0x10U)
#define GMAC_MTL_TXQ2_DEBUG_TXQSTS_SHIFT         (4U)
#define GMAC_MTL_TXQ2_DEBUG_TXQSTS_WIDTH         (1U)
#define GMAC_MTL_TXQ2_DEBUG_TXQSTS(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ2_DEBUG_TXQSTS_SHIFT)) & GMAC_MTL_TXQ2_DEBUG_TXQSTS_MASK)
#define GMAC_MTL_TXQ2_DEBUG_TXSTSFSTS_MASK       (0x20U)
#define GMAC_MTL_TXQ2_DEBUG_TXSTSFSTS_SHIFT      (5U)
#define GMAC_MTL_TXQ2_DEBUG_TXSTSFSTS_WIDTH      (1U)
#define GMAC_MTL_TXQ2_DEBUG_TXSTSFSTS(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ2_DEBUG_TXSTSFSTS_SHIFT)) & GMAC_MTL_TXQ2_DEBUG_TXSTSFSTS_MASK)
#define GMAC_MTL_TXQ2_DEBUG_PTXQ_MASK            (0x70000U)
#define GMAC_MTL_TXQ2_DEBUG_PTXQ_SHIFT           (16U)
#define GMAC_MTL_TXQ2_DEBUG_PTXQ_WIDTH           (3U)
#define GMAC_MTL_TXQ2_DEBUG_PTXQ(x)              (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ2_DEBUG_PTXQ_SHIFT)) & GMAC_MTL_TXQ2_DEBUG_PTXQ_MASK)
#define GMAC_MTL_TXQ2_DEBUG_STXSTSF_MASK         (0x700000U)
#define GMAC_MTL_TXQ2_DEBUG_STXSTSF_SHIFT        (20U)
#define GMAC_MTL_TXQ2_DEBUG_STXSTSF_WIDTH        (3U)
#define GMAC_MTL_TXQ2_DEBUG_STXSTSF(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ2_DEBUG_STXSTSF_SHIFT)) & GMAC_MTL_TXQ2_DEBUG_STXSTSF_MASK)
/*! @} */

/*! @name MTL_TXQ2_ETS_CONTROL -  */
/*! @{ */
#define GMAC_MTL_TXQ2_ETS_CONTROL_AVALG_MASK     (0x4U)
#define GMAC_MTL_TXQ2_ETS_CONTROL_AVALG_SHIFT    (2U)
#define GMAC_MTL_TXQ2_ETS_CONTROL_AVALG_WIDTH    (1U)
#define GMAC_MTL_TXQ2_ETS_CONTROL_AVALG(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ2_ETS_CONTROL_AVALG_SHIFT)) & GMAC_MTL_TXQ2_ETS_CONTROL_AVALG_MASK)
#define GMAC_MTL_TXQ2_ETS_CONTROL_CC_MASK        (0x8U)
#define GMAC_MTL_TXQ2_ETS_CONTROL_CC_SHIFT       (3U)
#define GMAC_MTL_TXQ2_ETS_CONTROL_CC_WIDTH       (1U)
#define GMAC_MTL_TXQ2_ETS_CONTROL_CC(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ2_ETS_CONTROL_CC_SHIFT)) & GMAC_MTL_TXQ2_ETS_CONTROL_CC_MASK)
#define GMAC_MTL_TXQ2_ETS_CONTROL_SLC_MASK       (0x70U)
#define GMAC_MTL_TXQ2_ETS_CONTROL_SLC_SHIFT      (4U)
#define GMAC_MTL_TXQ2_ETS_CONTROL_SLC_WIDTH      (3U)
#define GMAC_MTL_TXQ2_ETS_CONTROL_SLC(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ2_ETS_CONTROL_SLC_SHIFT)) & GMAC_MTL_TXQ2_ETS_CONTROL_SLC_MASK)
/*! @} */

/*! @name MTL_TXQ2_ETS_STATUS -  */
/*! @{ */
#define GMAC_MTL_TXQ2_ETS_STATUS_ABS_MASK        (0xFFFFFFU)
#define GMAC_MTL_TXQ2_ETS_STATUS_ABS_SHIFT       (0U)
#define GMAC_MTL_TXQ2_ETS_STATUS_ABS_WIDTH       (24U)
#define GMAC_MTL_TXQ2_ETS_STATUS_ABS(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ2_ETS_STATUS_ABS_SHIFT)) & GMAC_MTL_TXQ2_ETS_STATUS_ABS_MASK)
/*! @} */

/*! @name MTL_TXQ2_QUANTUM_WEIGHT -  */
/*! @{ */
#define GMAC_MTL_TXQ2_QUANTUM_WEIGHT_ISCQW_MASK  (0x1FFFFFU)
#define GMAC_MTL_TXQ2_QUANTUM_WEIGHT_ISCQW_SHIFT (0U)
#define GMAC_MTL_TXQ2_QUANTUM_WEIGHT_ISCQW_WIDTH (21U)
#define GMAC_MTL_TXQ2_QUANTUM_WEIGHT_ISCQW(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ2_QUANTUM_WEIGHT_ISCQW_SHIFT)) & GMAC_MTL_TXQ2_QUANTUM_WEIGHT_ISCQW_MASK)
/*! @} */

/*! @name MTL_TXQ2_SENDSLOPECREDIT -  */
/*! @{ */
#define GMAC_MTL_TXQ2_SENDSLOPECREDIT_SSC_MASK   (0x3FFFU)
#define GMAC_MTL_TXQ2_SENDSLOPECREDIT_SSC_SHIFT  (0U)
#define GMAC_MTL_TXQ2_SENDSLOPECREDIT_SSC_WIDTH  (14U)
#define GMAC_MTL_TXQ2_SENDSLOPECREDIT_SSC(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ2_SENDSLOPECREDIT_SSC_SHIFT)) & GMAC_MTL_TXQ2_SENDSLOPECREDIT_SSC_MASK)
/*! @} */

/*! @name MTL_TXQ2_HICREDIT -  */
/*! @{ */
#define GMAC_MTL_TXQ2_HICREDIT_HC_MASK           (0x1FFFFFFFU)
#define GMAC_MTL_TXQ2_HICREDIT_HC_SHIFT          (0U)
#define GMAC_MTL_TXQ2_HICREDIT_HC_WIDTH          (29U)
#define GMAC_MTL_TXQ2_HICREDIT_HC(x)             (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ2_HICREDIT_HC_SHIFT)) & GMAC_MTL_TXQ2_HICREDIT_HC_MASK)
/*! @} */

/*! @name MTL_TXQ2_LOCREDIT -  */
/*! @{ */
#define GMAC_MTL_TXQ2_LOCREDIT_LC_MASK           (0x1FFFFFFFU)
#define GMAC_MTL_TXQ2_LOCREDIT_LC_SHIFT          (0U)
#define GMAC_MTL_TXQ2_LOCREDIT_LC_WIDTH          (29U)
#define GMAC_MTL_TXQ2_LOCREDIT_LC(x)             (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ2_LOCREDIT_LC_SHIFT)) & GMAC_MTL_TXQ2_LOCREDIT_LC_MASK)
/*! @} */

/*! @name MTL_Q2_INTERRUPT_CONTROL_STATUS -  */
/*! @{ */
#define GMAC_MTL_Q2_INTERRUPT_CONTROL_STATUS_TXUNFIS_MASK (0x1U)
#define GMAC_MTL_Q2_INTERRUPT_CONTROL_STATUS_TXUNFIS_SHIFT (0U)
#define GMAC_MTL_Q2_INTERRUPT_CONTROL_STATUS_TXUNFIS_WIDTH (1U)
#define GMAC_MTL_Q2_INTERRUPT_CONTROL_STATUS_TXUNFIS(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_Q2_INTERRUPT_CONTROL_STATUS_TXUNFIS_SHIFT)) & GMAC_MTL_Q2_INTERRUPT_CONTROL_STATUS_TXUNFIS_MASK)
#define GMAC_MTL_Q2_INTERRUPT_CONTROL_STATUS_ABPSIS_MASK (0x2U)
#define GMAC_MTL_Q2_INTERRUPT_CONTROL_STATUS_ABPSIS_SHIFT (1U)
#define GMAC_MTL_Q2_INTERRUPT_CONTROL_STATUS_ABPSIS_WIDTH (1U)
#define GMAC_MTL_Q2_INTERRUPT_CONTROL_STATUS_ABPSIS(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_Q2_INTERRUPT_CONTROL_STATUS_ABPSIS_SHIFT)) & GMAC_MTL_Q2_INTERRUPT_CONTROL_STATUS_ABPSIS_MASK)
#define GMAC_MTL_Q2_INTERRUPT_CONTROL_STATUS_TXUIE_MASK (0x100U)
#define GMAC_MTL_Q2_INTERRUPT_CONTROL_STATUS_TXUIE_SHIFT (8U)
#define GMAC_MTL_Q2_INTERRUPT_CONTROL_STATUS_TXUIE_WIDTH (1U)
#define GMAC_MTL_Q2_INTERRUPT_CONTROL_STATUS_TXUIE(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_Q2_INTERRUPT_CONTROL_STATUS_TXUIE_SHIFT)) & GMAC_MTL_Q2_INTERRUPT_CONTROL_STATUS_TXUIE_MASK)
#define GMAC_MTL_Q2_INTERRUPT_CONTROL_STATUS_ABPSIE_MASK (0x200U)
#define GMAC_MTL_Q2_INTERRUPT_CONTROL_STATUS_ABPSIE_SHIFT (9U)
#define GMAC_MTL_Q2_INTERRUPT_CONTROL_STATUS_ABPSIE_WIDTH (1U)
#define GMAC_MTL_Q2_INTERRUPT_CONTROL_STATUS_ABPSIE(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_Q2_INTERRUPT_CONTROL_STATUS_ABPSIE_SHIFT)) & GMAC_MTL_Q2_INTERRUPT_CONTROL_STATUS_ABPSIE_MASK)
#define GMAC_MTL_Q2_INTERRUPT_CONTROL_STATUS_RXOVFIS_MASK (0x10000U)
#define GMAC_MTL_Q2_INTERRUPT_CONTROL_STATUS_RXOVFIS_SHIFT (16U)
#define GMAC_MTL_Q2_INTERRUPT_CONTROL_STATUS_RXOVFIS_WIDTH (1U)
#define GMAC_MTL_Q2_INTERRUPT_CONTROL_STATUS_RXOVFIS(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_Q2_INTERRUPT_CONTROL_STATUS_RXOVFIS_SHIFT)) & GMAC_MTL_Q2_INTERRUPT_CONTROL_STATUS_RXOVFIS_MASK)
#define GMAC_MTL_Q2_INTERRUPT_CONTROL_STATUS_RXOIE_MASK (0x1000000U)
#define GMAC_MTL_Q2_INTERRUPT_CONTROL_STATUS_RXOIE_SHIFT (24U)
#define GMAC_MTL_Q2_INTERRUPT_CONTROL_STATUS_RXOIE_WIDTH (1U)
#define GMAC_MTL_Q2_INTERRUPT_CONTROL_STATUS_RXOIE(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_Q2_INTERRUPT_CONTROL_STATUS_RXOIE_SHIFT)) & GMAC_MTL_Q2_INTERRUPT_CONTROL_STATUS_RXOIE_MASK)
/*! @} */

/*! @name MTL_RXQ2_OPERATION_MODE -  */
/*! @{ */
#define GMAC_MTL_RXQ2_OPERATION_MODE_RTC_MASK    (0x3U)
#define GMAC_MTL_RXQ2_OPERATION_MODE_RTC_SHIFT   (0U)
#define GMAC_MTL_RXQ2_OPERATION_MODE_RTC_WIDTH   (2U)
#define GMAC_MTL_RXQ2_OPERATION_MODE_RTC(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ2_OPERATION_MODE_RTC_SHIFT)) & GMAC_MTL_RXQ2_OPERATION_MODE_RTC_MASK)
#define GMAC_MTL_RXQ2_OPERATION_MODE_FUP_MASK    (0x8U)
#define GMAC_MTL_RXQ2_OPERATION_MODE_FUP_SHIFT   (3U)
#define GMAC_MTL_RXQ2_OPERATION_MODE_FUP_WIDTH   (1U)
#define GMAC_MTL_RXQ2_OPERATION_MODE_FUP(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ2_OPERATION_MODE_FUP_SHIFT)) & GMAC_MTL_RXQ2_OPERATION_MODE_FUP_MASK)
#define GMAC_MTL_RXQ2_OPERATION_MODE_FEP_MASK    (0x10U)
#define GMAC_MTL_RXQ2_OPERATION_MODE_FEP_SHIFT   (4U)
#define GMAC_MTL_RXQ2_OPERATION_MODE_FEP_WIDTH   (1U)
#define GMAC_MTL_RXQ2_OPERATION_MODE_FEP(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ2_OPERATION_MODE_FEP_SHIFT)) & GMAC_MTL_RXQ2_OPERATION_MODE_FEP_MASK)
#define GMAC_MTL_RXQ2_OPERATION_MODE_RSF_MASK    (0x20U)
#define GMAC_MTL_RXQ2_OPERATION_MODE_RSF_SHIFT   (5U)
#define GMAC_MTL_RXQ2_OPERATION_MODE_RSF_WIDTH   (1U)
#define GMAC_MTL_RXQ2_OPERATION_MODE_RSF(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ2_OPERATION_MODE_RSF_SHIFT)) & GMAC_MTL_RXQ2_OPERATION_MODE_RSF_MASK)
#define GMAC_MTL_RXQ2_OPERATION_MODE_DIS_TCP_EF_MASK (0x40U)
#define GMAC_MTL_RXQ2_OPERATION_MODE_DIS_TCP_EF_SHIFT (6U)
#define GMAC_MTL_RXQ2_OPERATION_MODE_DIS_TCP_EF_WIDTH (1U)
#define GMAC_MTL_RXQ2_OPERATION_MODE_DIS_TCP_EF(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ2_OPERATION_MODE_DIS_TCP_EF_SHIFT)) & GMAC_MTL_RXQ2_OPERATION_MODE_DIS_TCP_EF_MASK)
#define GMAC_MTL_RXQ2_OPERATION_MODE_EHFC_MASK   (0x80U)
#define GMAC_MTL_RXQ2_OPERATION_MODE_EHFC_SHIFT  (7U)
#define GMAC_MTL_RXQ2_OPERATION_MODE_EHFC_WIDTH  (1U)
#define GMAC_MTL_RXQ2_OPERATION_MODE_EHFC(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ2_OPERATION_MODE_EHFC_SHIFT)) & GMAC_MTL_RXQ2_OPERATION_MODE_EHFC_MASK)
#define GMAC_MTL_RXQ2_OPERATION_MODE_RFA_MASK    (0x3F00U)
#define GMAC_MTL_RXQ2_OPERATION_MODE_RFA_SHIFT   (8U)
#define GMAC_MTL_RXQ2_OPERATION_MODE_RFA_WIDTH   (6U)
#define GMAC_MTL_RXQ2_OPERATION_MODE_RFA(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ2_OPERATION_MODE_RFA_SHIFT)) & GMAC_MTL_RXQ2_OPERATION_MODE_RFA_MASK)
#define GMAC_MTL_RXQ2_OPERATION_MODE_RFD_MASK    (0xFC000U)
#define GMAC_MTL_RXQ2_OPERATION_MODE_RFD_SHIFT   (14U)
#define GMAC_MTL_RXQ2_OPERATION_MODE_RFD_WIDTH   (6U)
#define GMAC_MTL_RXQ2_OPERATION_MODE_RFD(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ2_OPERATION_MODE_RFD_SHIFT)) & GMAC_MTL_RXQ2_OPERATION_MODE_RFD_MASK)
#define GMAC_MTL_RXQ2_OPERATION_MODE_RQS_MASK    (0x7F00000U)
#define GMAC_MTL_RXQ2_OPERATION_MODE_RQS_SHIFT   (20U)
#define GMAC_MTL_RXQ2_OPERATION_MODE_RQS_WIDTH   (7U)
#define GMAC_MTL_RXQ2_OPERATION_MODE_RQS(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ2_OPERATION_MODE_RQS_SHIFT)) & GMAC_MTL_RXQ2_OPERATION_MODE_RQS_MASK)
/*! @} */

/*! @name MTL_RXQ2_MISSED_PACKET_OVERFLOW_CNT -  */
/*! @{ */
#define GMAC_MTL_RXQ2_MISSED_PACKET_OVERFLOW_CNT_OVFPKTCNT_MASK (0x7FFU)
#define GMAC_MTL_RXQ2_MISSED_PACKET_OVERFLOW_CNT_OVFPKTCNT_SHIFT (0U)
#define GMAC_MTL_RXQ2_MISSED_PACKET_OVERFLOW_CNT_OVFPKTCNT_WIDTH (11U)
#define GMAC_MTL_RXQ2_MISSED_PACKET_OVERFLOW_CNT_OVFPKTCNT(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ2_MISSED_PACKET_OVERFLOW_CNT_OVFPKTCNT_SHIFT)) & GMAC_MTL_RXQ2_MISSED_PACKET_OVERFLOW_CNT_OVFPKTCNT_MASK)
#define GMAC_MTL_RXQ2_MISSED_PACKET_OVERFLOW_CNT_OVFCNTOVF_MASK (0x800U)
#define GMAC_MTL_RXQ2_MISSED_PACKET_OVERFLOW_CNT_OVFCNTOVF_SHIFT (11U)
#define GMAC_MTL_RXQ2_MISSED_PACKET_OVERFLOW_CNT_OVFCNTOVF_WIDTH (1U)
#define GMAC_MTL_RXQ2_MISSED_PACKET_OVERFLOW_CNT_OVFCNTOVF(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ2_MISSED_PACKET_OVERFLOW_CNT_OVFCNTOVF_SHIFT)) & GMAC_MTL_RXQ2_MISSED_PACKET_OVERFLOW_CNT_OVFCNTOVF_MASK)
#define GMAC_MTL_RXQ2_MISSED_PACKET_OVERFLOW_CNT_MISPKTCNT_MASK (0x7FF0000U)
#define GMAC_MTL_RXQ2_MISSED_PACKET_OVERFLOW_CNT_MISPKTCNT_SHIFT (16U)
#define GMAC_MTL_RXQ2_MISSED_PACKET_OVERFLOW_CNT_MISPKTCNT_WIDTH (11U)
#define GMAC_MTL_RXQ2_MISSED_PACKET_OVERFLOW_CNT_MISPKTCNT(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ2_MISSED_PACKET_OVERFLOW_CNT_MISPKTCNT_SHIFT)) & GMAC_MTL_RXQ2_MISSED_PACKET_OVERFLOW_CNT_MISPKTCNT_MASK)
#define GMAC_MTL_RXQ2_MISSED_PACKET_OVERFLOW_CNT_MISCNTOVF_MASK (0x8000000U)
#define GMAC_MTL_RXQ2_MISSED_PACKET_OVERFLOW_CNT_MISCNTOVF_SHIFT (27U)
#define GMAC_MTL_RXQ2_MISSED_PACKET_OVERFLOW_CNT_MISCNTOVF_WIDTH (1U)
#define GMAC_MTL_RXQ2_MISSED_PACKET_OVERFLOW_CNT_MISCNTOVF(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ2_MISSED_PACKET_OVERFLOW_CNT_MISCNTOVF_SHIFT)) & GMAC_MTL_RXQ2_MISSED_PACKET_OVERFLOW_CNT_MISCNTOVF_MASK)
/*! @} */

/*! @name MTL_RXQ2_DEBUG -  */
/*! @{ */
#define GMAC_MTL_RXQ2_DEBUG_RWCSTS_MASK          (0x1U)
#define GMAC_MTL_RXQ2_DEBUG_RWCSTS_SHIFT         (0U)
#define GMAC_MTL_RXQ2_DEBUG_RWCSTS_WIDTH         (1U)
#define GMAC_MTL_RXQ2_DEBUG_RWCSTS(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ2_DEBUG_RWCSTS_SHIFT)) & GMAC_MTL_RXQ2_DEBUG_RWCSTS_MASK)
#define GMAC_MTL_RXQ2_DEBUG_RRCSTS_MASK          (0x6U)
#define GMAC_MTL_RXQ2_DEBUG_RRCSTS_SHIFT         (1U)
#define GMAC_MTL_RXQ2_DEBUG_RRCSTS_WIDTH         (2U)
#define GMAC_MTL_RXQ2_DEBUG_RRCSTS(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ2_DEBUG_RRCSTS_SHIFT)) & GMAC_MTL_RXQ2_DEBUG_RRCSTS_MASK)
#define GMAC_MTL_RXQ2_DEBUG_RXQSTS_MASK          (0x30U)
#define GMAC_MTL_RXQ2_DEBUG_RXQSTS_SHIFT         (4U)
#define GMAC_MTL_RXQ2_DEBUG_RXQSTS_WIDTH         (2U)
#define GMAC_MTL_RXQ2_DEBUG_RXQSTS(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ2_DEBUG_RXQSTS_SHIFT)) & GMAC_MTL_RXQ2_DEBUG_RXQSTS_MASK)
#define GMAC_MTL_RXQ2_DEBUG_PRXQ_MASK            (0x3FFF0000U)
#define GMAC_MTL_RXQ2_DEBUG_PRXQ_SHIFT           (16U)
#define GMAC_MTL_RXQ2_DEBUG_PRXQ_WIDTH           (14U)
#define GMAC_MTL_RXQ2_DEBUG_PRXQ(x)              (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ2_DEBUG_PRXQ_SHIFT)) & GMAC_MTL_RXQ2_DEBUG_PRXQ_MASK)
/*! @} */

/*! @name MTL_RXQ2_CONTROL -  */
/*! @{ */
#define GMAC_MTL_RXQ2_CONTROL_RXQ_WEGT_MASK      (0x7U)
#define GMAC_MTL_RXQ2_CONTROL_RXQ_WEGT_SHIFT     (0U)
#define GMAC_MTL_RXQ2_CONTROL_RXQ_WEGT_WIDTH     (3U)
#define GMAC_MTL_RXQ2_CONTROL_RXQ_WEGT(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ2_CONTROL_RXQ_WEGT_SHIFT)) & GMAC_MTL_RXQ2_CONTROL_RXQ_WEGT_MASK)
#define GMAC_MTL_RXQ2_CONTROL_RXQ_FRM_ARBIT_MASK (0x8U)
#define GMAC_MTL_RXQ2_CONTROL_RXQ_FRM_ARBIT_SHIFT (3U)
#define GMAC_MTL_RXQ2_CONTROL_RXQ_FRM_ARBIT_WIDTH (1U)
#define GMAC_MTL_RXQ2_CONTROL_RXQ_FRM_ARBIT(x)   (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ2_CONTROL_RXQ_FRM_ARBIT_SHIFT)) & GMAC_MTL_RXQ2_CONTROL_RXQ_FRM_ARBIT_MASK)
/*! @} */

/*! @name MTL_TXQ3_OPERATION_MODE -  */
/*! @{ */
#define GMAC_MTL_TXQ3_OPERATION_MODE_FTQ_MASK    (0x1U)
#define GMAC_MTL_TXQ3_OPERATION_MODE_FTQ_SHIFT   (0U)
#define GMAC_MTL_TXQ3_OPERATION_MODE_FTQ_WIDTH   (1U)
#define GMAC_MTL_TXQ3_OPERATION_MODE_FTQ(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ3_OPERATION_MODE_FTQ_SHIFT)) & GMAC_MTL_TXQ3_OPERATION_MODE_FTQ_MASK)
#define GMAC_MTL_TXQ3_OPERATION_MODE_TSF_MASK    (0x2U)
#define GMAC_MTL_TXQ3_OPERATION_MODE_TSF_SHIFT   (1U)
#define GMAC_MTL_TXQ3_OPERATION_MODE_TSF_WIDTH   (1U)
#define GMAC_MTL_TXQ3_OPERATION_MODE_TSF(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ3_OPERATION_MODE_TSF_SHIFT)) & GMAC_MTL_TXQ3_OPERATION_MODE_TSF_MASK)
#define GMAC_MTL_TXQ3_OPERATION_MODE_TXQEN_MASK  (0xCU)
#define GMAC_MTL_TXQ3_OPERATION_MODE_TXQEN_SHIFT (2U)
#define GMAC_MTL_TXQ3_OPERATION_MODE_TXQEN_WIDTH (2U)
#define GMAC_MTL_TXQ3_OPERATION_MODE_TXQEN(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ3_OPERATION_MODE_TXQEN_SHIFT)) & GMAC_MTL_TXQ3_OPERATION_MODE_TXQEN_MASK)
#define GMAC_MTL_TXQ3_OPERATION_MODE_TTC_MASK    (0x70U)
#define GMAC_MTL_TXQ3_OPERATION_MODE_TTC_SHIFT   (4U)
#define GMAC_MTL_TXQ3_OPERATION_MODE_TTC_WIDTH   (3U)
#define GMAC_MTL_TXQ3_OPERATION_MODE_TTC(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ3_OPERATION_MODE_TTC_SHIFT)) & GMAC_MTL_TXQ3_OPERATION_MODE_TTC_MASK)
#define GMAC_MTL_TXQ3_OPERATION_MODE_TQS_MASK    (0x7F0000U)
#define GMAC_MTL_TXQ3_OPERATION_MODE_TQS_SHIFT   (16U)
#define GMAC_MTL_TXQ3_OPERATION_MODE_TQS_WIDTH   (7U)
#define GMAC_MTL_TXQ3_OPERATION_MODE_TQS(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ3_OPERATION_MODE_TQS_SHIFT)) & GMAC_MTL_TXQ3_OPERATION_MODE_TQS_MASK)
/*! @} */

/*! @name MTL_TXQ3_UNDERFLOW -  */
/*! @{ */
#define GMAC_MTL_TXQ3_UNDERFLOW_UFFRMCNT_MASK    (0x7FFU)
#define GMAC_MTL_TXQ3_UNDERFLOW_UFFRMCNT_SHIFT   (0U)
#define GMAC_MTL_TXQ3_UNDERFLOW_UFFRMCNT_WIDTH   (11U)
#define GMAC_MTL_TXQ3_UNDERFLOW_UFFRMCNT(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ3_UNDERFLOW_UFFRMCNT_SHIFT)) & GMAC_MTL_TXQ3_UNDERFLOW_UFFRMCNT_MASK)
#define GMAC_MTL_TXQ3_UNDERFLOW_UFCNTOVF_MASK    (0x800U)
#define GMAC_MTL_TXQ3_UNDERFLOW_UFCNTOVF_SHIFT   (11U)
#define GMAC_MTL_TXQ3_UNDERFLOW_UFCNTOVF_WIDTH   (1U)
#define GMAC_MTL_TXQ3_UNDERFLOW_UFCNTOVF(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ3_UNDERFLOW_UFCNTOVF_SHIFT)) & GMAC_MTL_TXQ3_UNDERFLOW_UFCNTOVF_MASK)
/*! @} */

/*! @name MTL_TXQ3_DEBUG -  */
/*! @{ */
#define GMAC_MTL_TXQ3_DEBUG_TXQPAUSED_MASK       (0x1U)
#define GMAC_MTL_TXQ3_DEBUG_TXQPAUSED_SHIFT      (0U)
#define GMAC_MTL_TXQ3_DEBUG_TXQPAUSED_WIDTH      (1U)
#define GMAC_MTL_TXQ3_DEBUG_TXQPAUSED(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ3_DEBUG_TXQPAUSED_SHIFT)) & GMAC_MTL_TXQ3_DEBUG_TXQPAUSED_MASK)
#define GMAC_MTL_TXQ3_DEBUG_TRCSTS_MASK          (0x6U)
#define GMAC_MTL_TXQ3_DEBUG_TRCSTS_SHIFT         (1U)
#define GMAC_MTL_TXQ3_DEBUG_TRCSTS_WIDTH         (2U)
#define GMAC_MTL_TXQ3_DEBUG_TRCSTS(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ3_DEBUG_TRCSTS_SHIFT)) & GMAC_MTL_TXQ3_DEBUG_TRCSTS_MASK)
#define GMAC_MTL_TXQ3_DEBUG_TWCSTS_MASK          (0x8U)
#define GMAC_MTL_TXQ3_DEBUG_TWCSTS_SHIFT         (3U)
#define GMAC_MTL_TXQ3_DEBUG_TWCSTS_WIDTH         (1U)
#define GMAC_MTL_TXQ3_DEBUG_TWCSTS(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ3_DEBUG_TWCSTS_SHIFT)) & GMAC_MTL_TXQ3_DEBUG_TWCSTS_MASK)
#define GMAC_MTL_TXQ3_DEBUG_TXQSTS_MASK          (0x10U)
#define GMAC_MTL_TXQ3_DEBUG_TXQSTS_SHIFT         (4U)
#define GMAC_MTL_TXQ3_DEBUG_TXQSTS_WIDTH         (1U)
#define GMAC_MTL_TXQ3_DEBUG_TXQSTS(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ3_DEBUG_TXQSTS_SHIFT)) & GMAC_MTL_TXQ3_DEBUG_TXQSTS_MASK)
#define GMAC_MTL_TXQ3_DEBUG_TXSTSFSTS_MASK       (0x20U)
#define GMAC_MTL_TXQ3_DEBUG_TXSTSFSTS_SHIFT      (5U)
#define GMAC_MTL_TXQ3_DEBUG_TXSTSFSTS_WIDTH      (1U)
#define GMAC_MTL_TXQ3_DEBUG_TXSTSFSTS(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ3_DEBUG_TXSTSFSTS_SHIFT)) & GMAC_MTL_TXQ3_DEBUG_TXSTSFSTS_MASK)
#define GMAC_MTL_TXQ3_DEBUG_PTXQ_MASK            (0x70000U)
#define GMAC_MTL_TXQ3_DEBUG_PTXQ_SHIFT           (16U)
#define GMAC_MTL_TXQ3_DEBUG_PTXQ_WIDTH           (3U)
#define GMAC_MTL_TXQ3_DEBUG_PTXQ(x)              (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ3_DEBUG_PTXQ_SHIFT)) & GMAC_MTL_TXQ3_DEBUG_PTXQ_MASK)
#define GMAC_MTL_TXQ3_DEBUG_STXSTSF_MASK         (0x700000U)
#define GMAC_MTL_TXQ3_DEBUG_STXSTSF_SHIFT        (20U)
#define GMAC_MTL_TXQ3_DEBUG_STXSTSF_WIDTH        (3U)
#define GMAC_MTL_TXQ3_DEBUG_STXSTSF(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ3_DEBUG_STXSTSF_SHIFT)) & GMAC_MTL_TXQ3_DEBUG_STXSTSF_MASK)
/*! @} */

/*! @name MTL_TXQ3_ETS_CONTROL -  */
/*! @{ */
#define GMAC_MTL_TXQ3_ETS_CONTROL_AVALG_MASK     (0x4U)
#define GMAC_MTL_TXQ3_ETS_CONTROL_AVALG_SHIFT    (2U)
#define GMAC_MTL_TXQ3_ETS_CONTROL_AVALG_WIDTH    (1U)
#define GMAC_MTL_TXQ3_ETS_CONTROL_AVALG(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ3_ETS_CONTROL_AVALG_SHIFT)) & GMAC_MTL_TXQ3_ETS_CONTROL_AVALG_MASK)
#define GMAC_MTL_TXQ3_ETS_CONTROL_CC_MASK        (0x8U)
#define GMAC_MTL_TXQ3_ETS_CONTROL_CC_SHIFT       (3U)
#define GMAC_MTL_TXQ3_ETS_CONTROL_CC_WIDTH       (1U)
#define GMAC_MTL_TXQ3_ETS_CONTROL_CC(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ3_ETS_CONTROL_CC_SHIFT)) & GMAC_MTL_TXQ3_ETS_CONTROL_CC_MASK)
#define GMAC_MTL_TXQ3_ETS_CONTROL_SLC_MASK       (0x70U)
#define GMAC_MTL_TXQ3_ETS_CONTROL_SLC_SHIFT      (4U)
#define GMAC_MTL_TXQ3_ETS_CONTROL_SLC_WIDTH      (3U)
#define GMAC_MTL_TXQ3_ETS_CONTROL_SLC(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ3_ETS_CONTROL_SLC_SHIFT)) & GMAC_MTL_TXQ3_ETS_CONTROL_SLC_MASK)
/*! @} */

/*! @name MTL_TXQ3_ETS_STATUS -  */
/*! @{ */
#define GMAC_MTL_TXQ3_ETS_STATUS_ABS_MASK        (0xFFFFFFU)
#define GMAC_MTL_TXQ3_ETS_STATUS_ABS_SHIFT       (0U)
#define GMAC_MTL_TXQ3_ETS_STATUS_ABS_WIDTH       (24U)
#define GMAC_MTL_TXQ3_ETS_STATUS_ABS(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ3_ETS_STATUS_ABS_SHIFT)) & GMAC_MTL_TXQ3_ETS_STATUS_ABS_MASK)
/*! @} */

/*! @name MTL_TXQ3_QUANTUM_WEIGHT -  */
/*! @{ */
#define GMAC_MTL_TXQ3_QUANTUM_WEIGHT_ISCQW_MASK  (0x1FFFFFU)
#define GMAC_MTL_TXQ3_QUANTUM_WEIGHT_ISCQW_SHIFT (0U)
#define GMAC_MTL_TXQ3_QUANTUM_WEIGHT_ISCQW_WIDTH (21U)
#define GMAC_MTL_TXQ3_QUANTUM_WEIGHT_ISCQW(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ3_QUANTUM_WEIGHT_ISCQW_SHIFT)) & GMAC_MTL_TXQ3_QUANTUM_WEIGHT_ISCQW_MASK)
/*! @} */

/*! @name MTL_TXQ3_SENDSLOPECREDIT -  */
/*! @{ */
#define GMAC_MTL_TXQ3_SENDSLOPECREDIT_SSC_MASK   (0x3FFFU)
#define GMAC_MTL_TXQ3_SENDSLOPECREDIT_SSC_SHIFT  (0U)
#define GMAC_MTL_TXQ3_SENDSLOPECREDIT_SSC_WIDTH  (14U)
#define GMAC_MTL_TXQ3_SENDSLOPECREDIT_SSC(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ3_SENDSLOPECREDIT_SSC_SHIFT)) & GMAC_MTL_TXQ3_SENDSLOPECREDIT_SSC_MASK)
/*! @} */

/*! @name MTL_TXQ3_HICREDIT -  */
/*! @{ */
#define GMAC_MTL_TXQ3_HICREDIT_HC_MASK           (0x1FFFFFFFU)
#define GMAC_MTL_TXQ3_HICREDIT_HC_SHIFT          (0U)
#define GMAC_MTL_TXQ3_HICREDIT_HC_WIDTH          (29U)
#define GMAC_MTL_TXQ3_HICREDIT_HC(x)             (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ3_HICREDIT_HC_SHIFT)) & GMAC_MTL_TXQ3_HICREDIT_HC_MASK)
/*! @} */

/*! @name MTL_TXQ3_LOCREDIT -  */
/*! @{ */
#define GMAC_MTL_TXQ3_LOCREDIT_LC_MASK           (0x1FFFFFFFU)
#define GMAC_MTL_TXQ3_LOCREDIT_LC_SHIFT          (0U)
#define GMAC_MTL_TXQ3_LOCREDIT_LC_WIDTH          (29U)
#define GMAC_MTL_TXQ3_LOCREDIT_LC(x)             (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ3_LOCREDIT_LC_SHIFT)) & GMAC_MTL_TXQ3_LOCREDIT_LC_MASK)
/*! @} */

/*! @name MTL_Q3_INTERRUPT_CONTROL_STATUS -  */
/*! @{ */
#define GMAC_MTL_Q3_INTERRUPT_CONTROL_STATUS_TXUNFIS_MASK (0x1U)
#define GMAC_MTL_Q3_INTERRUPT_CONTROL_STATUS_TXUNFIS_SHIFT (0U)
#define GMAC_MTL_Q3_INTERRUPT_CONTROL_STATUS_TXUNFIS_WIDTH (1U)
#define GMAC_MTL_Q3_INTERRUPT_CONTROL_STATUS_TXUNFIS(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_Q3_INTERRUPT_CONTROL_STATUS_TXUNFIS_SHIFT)) & GMAC_MTL_Q3_INTERRUPT_CONTROL_STATUS_TXUNFIS_MASK)
#define GMAC_MTL_Q3_INTERRUPT_CONTROL_STATUS_ABPSIS_MASK (0x2U)
#define GMAC_MTL_Q3_INTERRUPT_CONTROL_STATUS_ABPSIS_SHIFT (1U)
#define GMAC_MTL_Q3_INTERRUPT_CONTROL_STATUS_ABPSIS_WIDTH (1U)
#define GMAC_MTL_Q3_INTERRUPT_CONTROL_STATUS_ABPSIS(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_Q3_INTERRUPT_CONTROL_STATUS_ABPSIS_SHIFT)) & GMAC_MTL_Q3_INTERRUPT_CONTROL_STATUS_ABPSIS_MASK)
#define GMAC_MTL_Q3_INTERRUPT_CONTROL_STATUS_TXUIE_MASK (0x100U)
#define GMAC_MTL_Q3_INTERRUPT_CONTROL_STATUS_TXUIE_SHIFT (8U)
#define GMAC_MTL_Q3_INTERRUPT_CONTROL_STATUS_TXUIE_WIDTH (1U)
#define GMAC_MTL_Q3_INTERRUPT_CONTROL_STATUS_TXUIE(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_Q3_INTERRUPT_CONTROL_STATUS_TXUIE_SHIFT)) & GMAC_MTL_Q3_INTERRUPT_CONTROL_STATUS_TXUIE_MASK)
#define GMAC_MTL_Q3_INTERRUPT_CONTROL_STATUS_ABPSIE_MASK (0x200U)
#define GMAC_MTL_Q3_INTERRUPT_CONTROL_STATUS_ABPSIE_SHIFT (9U)
#define GMAC_MTL_Q3_INTERRUPT_CONTROL_STATUS_ABPSIE_WIDTH (1U)
#define GMAC_MTL_Q3_INTERRUPT_CONTROL_STATUS_ABPSIE(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_Q3_INTERRUPT_CONTROL_STATUS_ABPSIE_SHIFT)) & GMAC_MTL_Q3_INTERRUPT_CONTROL_STATUS_ABPSIE_MASK)
#define GMAC_MTL_Q3_INTERRUPT_CONTROL_STATUS_RXOVFIS_MASK (0x10000U)
#define GMAC_MTL_Q3_INTERRUPT_CONTROL_STATUS_RXOVFIS_SHIFT (16U)
#define GMAC_MTL_Q3_INTERRUPT_CONTROL_STATUS_RXOVFIS_WIDTH (1U)
#define GMAC_MTL_Q3_INTERRUPT_CONTROL_STATUS_RXOVFIS(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_Q3_INTERRUPT_CONTROL_STATUS_RXOVFIS_SHIFT)) & GMAC_MTL_Q3_INTERRUPT_CONTROL_STATUS_RXOVFIS_MASK)
#define GMAC_MTL_Q3_INTERRUPT_CONTROL_STATUS_RXOIE_MASK (0x1000000U)
#define GMAC_MTL_Q3_INTERRUPT_CONTROL_STATUS_RXOIE_SHIFT (24U)
#define GMAC_MTL_Q3_INTERRUPT_CONTROL_STATUS_RXOIE_WIDTH (1U)
#define GMAC_MTL_Q3_INTERRUPT_CONTROL_STATUS_RXOIE(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_Q3_INTERRUPT_CONTROL_STATUS_RXOIE_SHIFT)) & GMAC_MTL_Q3_INTERRUPT_CONTROL_STATUS_RXOIE_MASK)
/*! @} */

/*! @name MTL_RXQ3_OPERATION_MODE -  */
/*! @{ */
#define GMAC_MTL_RXQ3_OPERATION_MODE_RTC_MASK    (0x3U)
#define GMAC_MTL_RXQ3_OPERATION_MODE_RTC_SHIFT   (0U)
#define GMAC_MTL_RXQ3_OPERATION_MODE_RTC_WIDTH   (2U)
#define GMAC_MTL_RXQ3_OPERATION_MODE_RTC(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ3_OPERATION_MODE_RTC_SHIFT)) & GMAC_MTL_RXQ3_OPERATION_MODE_RTC_MASK)
#define GMAC_MTL_RXQ3_OPERATION_MODE_FUP_MASK    (0x8U)
#define GMAC_MTL_RXQ3_OPERATION_MODE_FUP_SHIFT   (3U)
#define GMAC_MTL_RXQ3_OPERATION_MODE_FUP_WIDTH   (1U)
#define GMAC_MTL_RXQ3_OPERATION_MODE_FUP(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ3_OPERATION_MODE_FUP_SHIFT)) & GMAC_MTL_RXQ3_OPERATION_MODE_FUP_MASK)
#define GMAC_MTL_RXQ3_OPERATION_MODE_FEP_MASK    (0x10U)
#define GMAC_MTL_RXQ3_OPERATION_MODE_FEP_SHIFT   (4U)
#define GMAC_MTL_RXQ3_OPERATION_MODE_FEP_WIDTH   (1U)
#define GMAC_MTL_RXQ3_OPERATION_MODE_FEP(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ3_OPERATION_MODE_FEP_SHIFT)) & GMAC_MTL_RXQ3_OPERATION_MODE_FEP_MASK)
#define GMAC_MTL_RXQ3_OPERATION_MODE_RSF_MASK    (0x20U)
#define GMAC_MTL_RXQ3_OPERATION_MODE_RSF_SHIFT   (5U)
#define GMAC_MTL_RXQ3_OPERATION_MODE_RSF_WIDTH   (1U)
#define GMAC_MTL_RXQ3_OPERATION_MODE_RSF(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ3_OPERATION_MODE_RSF_SHIFT)) & GMAC_MTL_RXQ3_OPERATION_MODE_RSF_MASK)
#define GMAC_MTL_RXQ3_OPERATION_MODE_DIS_TCP_EF_MASK (0x40U)
#define GMAC_MTL_RXQ3_OPERATION_MODE_DIS_TCP_EF_SHIFT (6U)
#define GMAC_MTL_RXQ3_OPERATION_MODE_DIS_TCP_EF_WIDTH (1U)
#define GMAC_MTL_RXQ3_OPERATION_MODE_DIS_TCP_EF(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ3_OPERATION_MODE_DIS_TCP_EF_SHIFT)) & GMAC_MTL_RXQ3_OPERATION_MODE_DIS_TCP_EF_MASK)
#define GMAC_MTL_RXQ3_OPERATION_MODE_EHFC_MASK   (0x80U)
#define GMAC_MTL_RXQ3_OPERATION_MODE_EHFC_SHIFT  (7U)
#define GMAC_MTL_RXQ3_OPERATION_MODE_EHFC_WIDTH  (1U)
#define GMAC_MTL_RXQ3_OPERATION_MODE_EHFC(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ3_OPERATION_MODE_EHFC_SHIFT)) & GMAC_MTL_RXQ3_OPERATION_MODE_EHFC_MASK)
#define GMAC_MTL_RXQ3_OPERATION_MODE_RFA_MASK    (0x3F00U)
#define GMAC_MTL_RXQ3_OPERATION_MODE_RFA_SHIFT   (8U)
#define GMAC_MTL_RXQ3_OPERATION_MODE_RFA_WIDTH   (6U)
#define GMAC_MTL_RXQ3_OPERATION_MODE_RFA(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ3_OPERATION_MODE_RFA_SHIFT)) & GMAC_MTL_RXQ3_OPERATION_MODE_RFA_MASK)
#define GMAC_MTL_RXQ3_OPERATION_MODE_RFD_MASK    (0xFC000U)
#define GMAC_MTL_RXQ3_OPERATION_MODE_RFD_SHIFT   (14U)
#define GMAC_MTL_RXQ3_OPERATION_MODE_RFD_WIDTH   (6U)
#define GMAC_MTL_RXQ3_OPERATION_MODE_RFD(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ3_OPERATION_MODE_RFD_SHIFT)) & GMAC_MTL_RXQ3_OPERATION_MODE_RFD_MASK)
#define GMAC_MTL_RXQ3_OPERATION_MODE_RQS_MASK    (0x7F00000U)
#define GMAC_MTL_RXQ3_OPERATION_MODE_RQS_SHIFT   (20U)
#define GMAC_MTL_RXQ3_OPERATION_MODE_RQS_WIDTH   (7U)
#define GMAC_MTL_RXQ3_OPERATION_MODE_RQS(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ3_OPERATION_MODE_RQS_SHIFT)) & GMAC_MTL_RXQ3_OPERATION_MODE_RQS_MASK)
/*! @} */

/*! @name MTL_RXQ3_MISSED_PACKET_OVERFLOW_CNT -  */
/*! @{ */
#define GMAC_MTL_RXQ3_MISSED_PACKET_OVERFLOW_CNT_OVFPKTCNT_MASK (0x7FFU)
#define GMAC_MTL_RXQ3_MISSED_PACKET_OVERFLOW_CNT_OVFPKTCNT_SHIFT (0U)
#define GMAC_MTL_RXQ3_MISSED_PACKET_OVERFLOW_CNT_OVFPKTCNT_WIDTH (11U)
#define GMAC_MTL_RXQ3_MISSED_PACKET_OVERFLOW_CNT_OVFPKTCNT(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ3_MISSED_PACKET_OVERFLOW_CNT_OVFPKTCNT_SHIFT)) & GMAC_MTL_RXQ3_MISSED_PACKET_OVERFLOW_CNT_OVFPKTCNT_MASK)
#define GMAC_MTL_RXQ3_MISSED_PACKET_OVERFLOW_CNT_OVFCNTOVF_MASK (0x800U)
#define GMAC_MTL_RXQ3_MISSED_PACKET_OVERFLOW_CNT_OVFCNTOVF_SHIFT (11U)
#define GMAC_MTL_RXQ3_MISSED_PACKET_OVERFLOW_CNT_OVFCNTOVF_WIDTH (1U)
#define GMAC_MTL_RXQ3_MISSED_PACKET_OVERFLOW_CNT_OVFCNTOVF(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ3_MISSED_PACKET_OVERFLOW_CNT_OVFCNTOVF_SHIFT)) & GMAC_MTL_RXQ3_MISSED_PACKET_OVERFLOW_CNT_OVFCNTOVF_MASK)
#define GMAC_MTL_RXQ3_MISSED_PACKET_OVERFLOW_CNT_MISPKTCNT_MASK (0x7FF0000U)
#define GMAC_MTL_RXQ3_MISSED_PACKET_OVERFLOW_CNT_MISPKTCNT_SHIFT (16U)
#define GMAC_MTL_RXQ3_MISSED_PACKET_OVERFLOW_CNT_MISPKTCNT_WIDTH (11U)
#define GMAC_MTL_RXQ3_MISSED_PACKET_OVERFLOW_CNT_MISPKTCNT(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ3_MISSED_PACKET_OVERFLOW_CNT_MISPKTCNT_SHIFT)) & GMAC_MTL_RXQ3_MISSED_PACKET_OVERFLOW_CNT_MISPKTCNT_MASK)
#define GMAC_MTL_RXQ3_MISSED_PACKET_OVERFLOW_CNT_MISCNTOVF_MASK (0x8000000U)
#define GMAC_MTL_RXQ3_MISSED_PACKET_OVERFLOW_CNT_MISCNTOVF_SHIFT (27U)
#define GMAC_MTL_RXQ3_MISSED_PACKET_OVERFLOW_CNT_MISCNTOVF_WIDTH (1U)
#define GMAC_MTL_RXQ3_MISSED_PACKET_OVERFLOW_CNT_MISCNTOVF(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ3_MISSED_PACKET_OVERFLOW_CNT_MISCNTOVF_SHIFT)) & GMAC_MTL_RXQ3_MISSED_PACKET_OVERFLOW_CNT_MISCNTOVF_MASK)
/*! @} */

/*! @name MTL_RXQ3_DEBUG -  */
/*! @{ */
#define GMAC_MTL_RXQ3_DEBUG_RWCSTS_MASK          (0x1U)
#define GMAC_MTL_RXQ3_DEBUG_RWCSTS_SHIFT         (0U)
#define GMAC_MTL_RXQ3_DEBUG_RWCSTS_WIDTH         (1U)
#define GMAC_MTL_RXQ3_DEBUG_RWCSTS(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ3_DEBUG_RWCSTS_SHIFT)) & GMAC_MTL_RXQ3_DEBUG_RWCSTS_MASK)
#define GMAC_MTL_RXQ3_DEBUG_RRCSTS_MASK          (0x6U)
#define GMAC_MTL_RXQ3_DEBUG_RRCSTS_SHIFT         (1U)
#define GMAC_MTL_RXQ3_DEBUG_RRCSTS_WIDTH         (2U)
#define GMAC_MTL_RXQ3_DEBUG_RRCSTS(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ3_DEBUG_RRCSTS_SHIFT)) & GMAC_MTL_RXQ3_DEBUG_RRCSTS_MASK)
#define GMAC_MTL_RXQ3_DEBUG_RXQSTS_MASK          (0x30U)
#define GMAC_MTL_RXQ3_DEBUG_RXQSTS_SHIFT         (4U)
#define GMAC_MTL_RXQ3_DEBUG_RXQSTS_WIDTH         (2U)
#define GMAC_MTL_RXQ3_DEBUG_RXQSTS(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ3_DEBUG_RXQSTS_SHIFT)) & GMAC_MTL_RXQ3_DEBUG_RXQSTS_MASK)
#define GMAC_MTL_RXQ3_DEBUG_PRXQ_MASK            (0x3FFF0000U)
#define GMAC_MTL_RXQ3_DEBUG_PRXQ_SHIFT           (16U)
#define GMAC_MTL_RXQ3_DEBUG_PRXQ_WIDTH           (14U)
#define GMAC_MTL_RXQ3_DEBUG_PRXQ(x)              (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ3_DEBUG_PRXQ_SHIFT)) & GMAC_MTL_RXQ3_DEBUG_PRXQ_MASK)
/*! @} */

/*! @name MTL_RXQ3_CONTROL -  */
/*! @{ */
#define GMAC_MTL_RXQ3_CONTROL_RXQ_WEGT_MASK      (0x7U)
#define GMAC_MTL_RXQ3_CONTROL_RXQ_WEGT_SHIFT     (0U)
#define GMAC_MTL_RXQ3_CONTROL_RXQ_WEGT_WIDTH     (3U)
#define GMAC_MTL_RXQ3_CONTROL_RXQ_WEGT(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ3_CONTROL_RXQ_WEGT_SHIFT)) & GMAC_MTL_RXQ3_CONTROL_RXQ_WEGT_MASK)
#define GMAC_MTL_RXQ3_CONTROL_RXQ_FRM_ARBIT_MASK (0x8U)
#define GMAC_MTL_RXQ3_CONTROL_RXQ_FRM_ARBIT_SHIFT (3U)
#define GMAC_MTL_RXQ3_CONTROL_RXQ_FRM_ARBIT_WIDTH (1U)
#define GMAC_MTL_RXQ3_CONTROL_RXQ_FRM_ARBIT(x)   (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ3_CONTROL_RXQ_FRM_ARBIT_SHIFT)) & GMAC_MTL_RXQ3_CONTROL_RXQ_FRM_ARBIT_MASK)
/*! @} */

/*! @name MTL_TXQ4_OPERATION_MODE -  */
/*! @{ */
#define GMAC_MTL_TXQ4_OPERATION_MODE_FTQ_MASK    (0x1U)
#define GMAC_MTL_TXQ4_OPERATION_MODE_FTQ_SHIFT   (0U)
#define GMAC_MTL_TXQ4_OPERATION_MODE_FTQ_WIDTH   (1U)
#define GMAC_MTL_TXQ4_OPERATION_MODE_FTQ(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ4_OPERATION_MODE_FTQ_SHIFT)) & GMAC_MTL_TXQ4_OPERATION_MODE_FTQ_MASK)
#define GMAC_MTL_TXQ4_OPERATION_MODE_TSF_MASK    (0x2U)
#define GMAC_MTL_TXQ4_OPERATION_MODE_TSF_SHIFT   (1U)
#define GMAC_MTL_TXQ4_OPERATION_MODE_TSF_WIDTH   (1U)
#define GMAC_MTL_TXQ4_OPERATION_MODE_TSF(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ4_OPERATION_MODE_TSF_SHIFT)) & GMAC_MTL_TXQ4_OPERATION_MODE_TSF_MASK)
#define GMAC_MTL_TXQ4_OPERATION_MODE_TXQEN_MASK  (0xCU)
#define GMAC_MTL_TXQ4_OPERATION_MODE_TXQEN_SHIFT (2U)
#define GMAC_MTL_TXQ4_OPERATION_MODE_TXQEN_WIDTH (2U)
#define GMAC_MTL_TXQ4_OPERATION_MODE_TXQEN(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ4_OPERATION_MODE_TXQEN_SHIFT)) & GMAC_MTL_TXQ4_OPERATION_MODE_TXQEN_MASK)
#define GMAC_MTL_TXQ4_OPERATION_MODE_TTC_MASK    (0x70U)
#define GMAC_MTL_TXQ4_OPERATION_MODE_TTC_SHIFT   (4U)
#define GMAC_MTL_TXQ4_OPERATION_MODE_TTC_WIDTH   (3U)
#define GMAC_MTL_TXQ4_OPERATION_MODE_TTC(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ4_OPERATION_MODE_TTC_SHIFT)) & GMAC_MTL_TXQ4_OPERATION_MODE_TTC_MASK)
#define GMAC_MTL_TXQ4_OPERATION_MODE_TQS_MASK    (0x7F0000U)
#define GMAC_MTL_TXQ4_OPERATION_MODE_TQS_SHIFT   (16U)
#define GMAC_MTL_TXQ4_OPERATION_MODE_TQS_WIDTH   (7U)
#define GMAC_MTL_TXQ4_OPERATION_MODE_TQS(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ4_OPERATION_MODE_TQS_SHIFT)) & GMAC_MTL_TXQ4_OPERATION_MODE_TQS_MASK)
/*! @} */

/*! @name MTL_TXQ4_UNDERFLOW -  */
/*! @{ */
#define GMAC_MTL_TXQ4_UNDERFLOW_UFFRMCNT_MASK    (0x7FFU)
#define GMAC_MTL_TXQ4_UNDERFLOW_UFFRMCNT_SHIFT   (0U)
#define GMAC_MTL_TXQ4_UNDERFLOW_UFFRMCNT_WIDTH   (11U)
#define GMAC_MTL_TXQ4_UNDERFLOW_UFFRMCNT(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ4_UNDERFLOW_UFFRMCNT_SHIFT)) & GMAC_MTL_TXQ4_UNDERFLOW_UFFRMCNT_MASK)
#define GMAC_MTL_TXQ4_UNDERFLOW_UFCNTOVF_MASK    (0x800U)
#define GMAC_MTL_TXQ4_UNDERFLOW_UFCNTOVF_SHIFT   (11U)
#define GMAC_MTL_TXQ4_UNDERFLOW_UFCNTOVF_WIDTH   (1U)
#define GMAC_MTL_TXQ4_UNDERFLOW_UFCNTOVF(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ4_UNDERFLOW_UFCNTOVF_SHIFT)) & GMAC_MTL_TXQ4_UNDERFLOW_UFCNTOVF_MASK)
/*! @} */

/*! @name MTL_TXQ4_DEBUG -  */
/*! @{ */
#define GMAC_MTL_TXQ4_DEBUG_TXQPAUSED_MASK       (0x1U)
#define GMAC_MTL_TXQ4_DEBUG_TXQPAUSED_SHIFT      (0U)
#define GMAC_MTL_TXQ4_DEBUG_TXQPAUSED_WIDTH      (1U)
#define GMAC_MTL_TXQ4_DEBUG_TXQPAUSED(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ4_DEBUG_TXQPAUSED_SHIFT)) & GMAC_MTL_TXQ4_DEBUG_TXQPAUSED_MASK)
#define GMAC_MTL_TXQ4_DEBUG_TRCSTS_MASK          (0x6U)
#define GMAC_MTL_TXQ4_DEBUG_TRCSTS_SHIFT         (1U)
#define GMAC_MTL_TXQ4_DEBUG_TRCSTS_WIDTH         (2U)
#define GMAC_MTL_TXQ4_DEBUG_TRCSTS(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ4_DEBUG_TRCSTS_SHIFT)) & GMAC_MTL_TXQ4_DEBUG_TRCSTS_MASK)
#define GMAC_MTL_TXQ4_DEBUG_TWCSTS_MASK          (0x8U)
#define GMAC_MTL_TXQ4_DEBUG_TWCSTS_SHIFT         (3U)
#define GMAC_MTL_TXQ4_DEBUG_TWCSTS_WIDTH         (1U)
#define GMAC_MTL_TXQ4_DEBUG_TWCSTS(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ4_DEBUG_TWCSTS_SHIFT)) & GMAC_MTL_TXQ4_DEBUG_TWCSTS_MASK)
#define GMAC_MTL_TXQ4_DEBUG_TXQSTS_MASK          (0x10U)
#define GMAC_MTL_TXQ4_DEBUG_TXQSTS_SHIFT         (4U)
#define GMAC_MTL_TXQ4_DEBUG_TXQSTS_WIDTH         (1U)
#define GMAC_MTL_TXQ4_DEBUG_TXQSTS(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ4_DEBUG_TXQSTS_SHIFT)) & GMAC_MTL_TXQ4_DEBUG_TXQSTS_MASK)
#define GMAC_MTL_TXQ4_DEBUG_TXSTSFSTS_MASK       (0x20U)
#define GMAC_MTL_TXQ4_DEBUG_TXSTSFSTS_SHIFT      (5U)
#define GMAC_MTL_TXQ4_DEBUG_TXSTSFSTS_WIDTH      (1U)
#define GMAC_MTL_TXQ4_DEBUG_TXSTSFSTS(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ4_DEBUG_TXSTSFSTS_SHIFT)) & GMAC_MTL_TXQ4_DEBUG_TXSTSFSTS_MASK)
#define GMAC_MTL_TXQ4_DEBUG_PTXQ_MASK            (0x70000U)
#define GMAC_MTL_TXQ4_DEBUG_PTXQ_SHIFT           (16U)
#define GMAC_MTL_TXQ4_DEBUG_PTXQ_WIDTH           (3U)
#define GMAC_MTL_TXQ4_DEBUG_PTXQ(x)              (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ4_DEBUG_PTXQ_SHIFT)) & GMAC_MTL_TXQ4_DEBUG_PTXQ_MASK)
#define GMAC_MTL_TXQ4_DEBUG_STXSTSF_MASK         (0x700000U)
#define GMAC_MTL_TXQ4_DEBUG_STXSTSF_SHIFT        (20U)
#define GMAC_MTL_TXQ4_DEBUG_STXSTSF_WIDTH        (3U)
#define GMAC_MTL_TXQ4_DEBUG_STXSTSF(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ4_DEBUG_STXSTSF_SHIFT)) & GMAC_MTL_TXQ4_DEBUG_STXSTSF_MASK)
/*! @} */

/*! @name MTL_TXQ4_ETS_CONTROL -  */
/*! @{ */
#define GMAC_MTL_TXQ4_ETS_CONTROL_AVALG_MASK     (0x4U)
#define GMAC_MTL_TXQ4_ETS_CONTROL_AVALG_SHIFT    (2U)
#define GMAC_MTL_TXQ4_ETS_CONTROL_AVALG_WIDTH    (1U)
#define GMAC_MTL_TXQ4_ETS_CONTROL_AVALG(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ4_ETS_CONTROL_AVALG_SHIFT)) & GMAC_MTL_TXQ4_ETS_CONTROL_AVALG_MASK)
#define GMAC_MTL_TXQ4_ETS_CONTROL_CC_MASK        (0x8U)
#define GMAC_MTL_TXQ4_ETS_CONTROL_CC_SHIFT       (3U)
#define GMAC_MTL_TXQ4_ETS_CONTROL_CC_WIDTH       (1U)
#define GMAC_MTL_TXQ4_ETS_CONTROL_CC(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ4_ETS_CONTROL_CC_SHIFT)) & GMAC_MTL_TXQ4_ETS_CONTROL_CC_MASK)
#define GMAC_MTL_TXQ4_ETS_CONTROL_SLC_MASK       (0x70U)
#define GMAC_MTL_TXQ4_ETS_CONTROL_SLC_SHIFT      (4U)
#define GMAC_MTL_TXQ4_ETS_CONTROL_SLC_WIDTH      (3U)
#define GMAC_MTL_TXQ4_ETS_CONTROL_SLC(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ4_ETS_CONTROL_SLC_SHIFT)) & GMAC_MTL_TXQ4_ETS_CONTROL_SLC_MASK)
/*! @} */

/*! @name MTL_TXQ4_ETS_STATUS -  */
/*! @{ */
#define GMAC_MTL_TXQ4_ETS_STATUS_ABS_MASK        (0xFFFFFFU)
#define GMAC_MTL_TXQ4_ETS_STATUS_ABS_SHIFT       (0U)
#define GMAC_MTL_TXQ4_ETS_STATUS_ABS_WIDTH       (24U)
#define GMAC_MTL_TXQ4_ETS_STATUS_ABS(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ4_ETS_STATUS_ABS_SHIFT)) & GMAC_MTL_TXQ4_ETS_STATUS_ABS_MASK)
/*! @} */

/*! @name MTL_TXQ4_QUANTUM_WEIGHT -  */
/*! @{ */
#define GMAC_MTL_TXQ4_QUANTUM_WEIGHT_ISCQW_MASK  (0x1FFFFFU)
#define GMAC_MTL_TXQ4_QUANTUM_WEIGHT_ISCQW_SHIFT (0U)
#define GMAC_MTL_TXQ4_QUANTUM_WEIGHT_ISCQW_WIDTH (21U)
#define GMAC_MTL_TXQ4_QUANTUM_WEIGHT_ISCQW(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ4_QUANTUM_WEIGHT_ISCQW_SHIFT)) & GMAC_MTL_TXQ4_QUANTUM_WEIGHT_ISCQW_MASK)
/*! @} */

/*! @name MTL_TXQ4_SENDSLOPECREDIT -  */
/*! @{ */
#define GMAC_MTL_TXQ4_SENDSLOPECREDIT_SSC_MASK   (0x3FFFU)
#define GMAC_MTL_TXQ4_SENDSLOPECREDIT_SSC_SHIFT  (0U)
#define GMAC_MTL_TXQ4_SENDSLOPECREDIT_SSC_WIDTH  (14U)
#define GMAC_MTL_TXQ4_SENDSLOPECREDIT_SSC(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ4_SENDSLOPECREDIT_SSC_SHIFT)) & GMAC_MTL_TXQ4_SENDSLOPECREDIT_SSC_MASK)
/*! @} */

/*! @name MTL_TXQ4_HICREDIT -  */
/*! @{ */
#define GMAC_MTL_TXQ4_HICREDIT_HC_MASK           (0x1FFFFFFFU)
#define GMAC_MTL_TXQ4_HICREDIT_HC_SHIFT          (0U)
#define GMAC_MTL_TXQ4_HICREDIT_HC_WIDTH          (29U)
#define GMAC_MTL_TXQ4_HICREDIT_HC(x)             (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ4_HICREDIT_HC_SHIFT)) & GMAC_MTL_TXQ4_HICREDIT_HC_MASK)
/*! @} */

/*! @name MTL_TXQ4_LOCREDIT -  */
/*! @{ */
#define GMAC_MTL_TXQ4_LOCREDIT_LC_MASK           (0x1FFFFFFFU)
#define GMAC_MTL_TXQ4_LOCREDIT_LC_SHIFT          (0U)
#define GMAC_MTL_TXQ4_LOCREDIT_LC_WIDTH          (29U)
#define GMAC_MTL_TXQ4_LOCREDIT_LC(x)             (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_TXQ4_LOCREDIT_LC_SHIFT)) & GMAC_MTL_TXQ4_LOCREDIT_LC_MASK)
/*! @} */

/*! @name MTL_Q4_INTERRUPT_CONTROL_STATUS -  */
/*! @{ */
#define GMAC_MTL_Q4_INTERRUPT_CONTROL_STATUS_TXUNFIS_MASK (0x1U)
#define GMAC_MTL_Q4_INTERRUPT_CONTROL_STATUS_TXUNFIS_SHIFT (0U)
#define GMAC_MTL_Q4_INTERRUPT_CONTROL_STATUS_TXUNFIS_WIDTH (1U)
#define GMAC_MTL_Q4_INTERRUPT_CONTROL_STATUS_TXUNFIS(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_Q4_INTERRUPT_CONTROL_STATUS_TXUNFIS_SHIFT)) & GMAC_MTL_Q4_INTERRUPT_CONTROL_STATUS_TXUNFIS_MASK)
#define GMAC_MTL_Q4_INTERRUPT_CONTROL_STATUS_ABPSIS_MASK (0x2U)
#define GMAC_MTL_Q4_INTERRUPT_CONTROL_STATUS_ABPSIS_SHIFT (1U)
#define GMAC_MTL_Q4_INTERRUPT_CONTROL_STATUS_ABPSIS_WIDTH (1U)
#define GMAC_MTL_Q4_INTERRUPT_CONTROL_STATUS_ABPSIS(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_Q4_INTERRUPT_CONTROL_STATUS_ABPSIS_SHIFT)) & GMAC_MTL_Q4_INTERRUPT_CONTROL_STATUS_ABPSIS_MASK)
#define GMAC_MTL_Q4_INTERRUPT_CONTROL_STATUS_TXUIE_MASK (0x100U)
#define GMAC_MTL_Q4_INTERRUPT_CONTROL_STATUS_TXUIE_SHIFT (8U)
#define GMAC_MTL_Q4_INTERRUPT_CONTROL_STATUS_TXUIE_WIDTH (1U)
#define GMAC_MTL_Q4_INTERRUPT_CONTROL_STATUS_TXUIE(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_Q4_INTERRUPT_CONTROL_STATUS_TXUIE_SHIFT)) & GMAC_MTL_Q4_INTERRUPT_CONTROL_STATUS_TXUIE_MASK)
#define GMAC_MTL_Q4_INTERRUPT_CONTROL_STATUS_ABPSIE_MASK (0x200U)
#define GMAC_MTL_Q4_INTERRUPT_CONTROL_STATUS_ABPSIE_SHIFT (9U)
#define GMAC_MTL_Q4_INTERRUPT_CONTROL_STATUS_ABPSIE_WIDTH (1U)
#define GMAC_MTL_Q4_INTERRUPT_CONTROL_STATUS_ABPSIE(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_Q4_INTERRUPT_CONTROL_STATUS_ABPSIE_SHIFT)) & GMAC_MTL_Q4_INTERRUPT_CONTROL_STATUS_ABPSIE_MASK)
#define GMAC_MTL_Q4_INTERRUPT_CONTROL_STATUS_RXOVFIS_MASK (0x10000U)
#define GMAC_MTL_Q4_INTERRUPT_CONTROL_STATUS_RXOVFIS_SHIFT (16U)
#define GMAC_MTL_Q4_INTERRUPT_CONTROL_STATUS_RXOVFIS_WIDTH (1U)
#define GMAC_MTL_Q4_INTERRUPT_CONTROL_STATUS_RXOVFIS(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_Q4_INTERRUPT_CONTROL_STATUS_RXOVFIS_SHIFT)) & GMAC_MTL_Q4_INTERRUPT_CONTROL_STATUS_RXOVFIS_MASK)
#define GMAC_MTL_Q4_INTERRUPT_CONTROL_STATUS_RXOIE_MASK (0x1000000U)
#define GMAC_MTL_Q4_INTERRUPT_CONTROL_STATUS_RXOIE_SHIFT (24U)
#define GMAC_MTL_Q4_INTERRUPT_CONTROL_STATUS_RXOIE_WIDTH (1U)
#define GMAC_MTL_Q4_INTERRUPT_CONTROL_STATUS_RXOIE(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_Q4_INTERRUPT_CONTROL_STATUS_RXOIE_SHIFT)) & GMAC_MTL_Q4_INTERRUPT_CONTROL_STATUS_RXOIE_MASK)
/*! @} */

/*! @name MTL_RXQ4_OPERATION_MODE -  */
/*! @{ */
#define GMAC_MTL_RXQ4_OPERATION_MODE_RTC_MASK    (0x3U)
#define GMAC_MTL_RXQ4_OPERATION_MODE_RTC_SHIFT   (0U)
#define GMAC_MTL_RXQ4_OPERATION_MODE_RTC_WIDTH   (2U)
#define GMAC_MTL_RXQ4_OPERATION_MODE_RTC(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ4_OPERATION_MODE_RTC_SHIFT)) & GMAC_MTL_RXQ4_OPERATION_MODE_RTC_MASK)
#define GMAC_MTL_RXQ4_OPERATION_MODE_FUP_MASK    (0x8U)
#define GMAC_MTL_RXQ4_OPERATION_MODE_FUP_SHIFT   (3U)
#define GMAC_MTL_RXQ4_OPERATION_MODE_FUP_WIDTH   (1U)
#define GMAC_MTL_RXQ4_OPERATION_MODE_FUP(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ4_OPERATION_MODE_FUP_SHIFT)) & GMAC_MTL_RXQ4_OPERATION_MODE_FUP_MASK)
#define GMAC_MTL_RXQ4_OPERATION_MODE_FEP_MASK    (0x10U)
#define GMAC_MTL_RXQ4_OPERATION_MODE_FEP_SHIFT   (4U)
#define GMAC_MTL_RXQ4_OPERATION_MODE_FEP_WIDTH   (1U)
#define GMAC_MTL_RXQ4_OPERATION_MODE_FEP(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ4_OPERATION_MODE_FEP_SHIFT)) & GMAC_MTL_RXQ4_OPERATION_MODE_FEP_MASK)
#define GMAC_MTL_RXQ4_OPERATION_MODE_RSF_MASK    (0x20U)
#define GMAC_MTL_RXQ4_OPERATION_MODE_RSF_SHIFT   (5U)
#define GMAC_MTL_RXQ4_OPERATION_MODE_RSF_WIDTH   (1U)
#define GMAC_MTL_RXQ4_OPERATION_MODE_RSF(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ4_OPERATION_MODE_RSF_SHIFT)) & GMAC_MTL_RXQ4_OPERATION_MODE_RSF_MASK)
#define GMAC_MTL_RXQ4_OPERATION_MODE_DIS_TCP_EF_MASK (0x40U)
#define GMAC_MTL_RXQ4_OPERATION_MODE_DIS_TCP_EF_SHIFT (6U)
#define GMAC_MTL_RXQ4_OPERATION_MODE_DIS_TCP_EF_WIDTH (1U)
#define GMAC_MTL_RXQ4_OPERATION_MODE_DIS_TCP_EF(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ4_OPERATION_MODE_DIS_TCP_EF_SHIFT)) & GMAC_MTL_RXQ4_OPERATION_MODE_DIS_TCP_EF_MASK)
#define GMAC_MTL_RXQ4_OPERATION_MODE_EHFC_MASK   (0x80U)
#define GMAC_MTL_RXQ4_OPERATION_MODE_EHFC_SHIFT  (7U)
#define GMAC_MTL_RXQ4_OPERATION_MODE_EHFC_WIDTH  (1U)
#define GMAC_MTL_RXQ4_OPERATION_MODE_EHFC(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ4_OPERATION_MODE_EHFC_SHIFT)) & GMAC_MTL_RXQ4_OPERATION_MODE_EHFC_MASK)
#define GMAC_MTL_RXQ4_OPERATION_MODE_RFA_MASK    (0x3F00U)
#define GMAC_MTL_RXQ4_OPERATION_MODE_RFA_SHIFT   (8U)
#define GMAC_MTL_RXQ4_OPERATION_MODE_RFA_WIDTH   (6U)
#define GMAC_MTL_RXQ4_OPERATION_MODE_RFA(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ4_OPERATION_MODE_RFA_SHIFT)) & GMAC_MTL_RXQ4_OPERATION_MODE_RFA_MASK)
#define GMAC_MTL_RXQ4_OPERATION_MODE_RFD_MASK    (0xFC000U)
#define GMAC_MTL_RXQ4_OPERATION_MODE_RFD_SHIFT   (14U)
#define GMAC_MTL_RXQ4_OPERATION_MODE_RFD_WIDTH   (6U)
#define GMAC_MTL_RXQ4_OPERATION_MODE_RFD(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ4_OPERATION_MODE_RFD_SHIFT)) & GMAC_MTL_RXQ4_OPERATION_MODE_RFD_MASK)
#define GMAC_MTL_RXQ4_OPERATION_MODE_RQS_MASK    (0x7F00000U)
#define GMAC_MTL_RXQ4_OPERATION_MODE_RQS_SHIFT   (20U)
#define GMAC_MTL_RXQ4_OPERATION_MODE_RQS_WIDTH   (7U)
#define GMAC_MTL_RXQ4_OPERATION_MODE_RQS(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ4_OPERATION_MODE_RQS_SHIFT)) & GMAC_MTL_RXQ4_OPERATION_MODE_RQS_MASK)
/*! @} */

/*! @name MTL_RXQ4_MISSED_PACKET_OVERFLOW_CNT -  */
/*! @{ */
#define GMAC_MTL_RXQ4_MISSED_PACKET_OVERFLOW_CNT_OVFPKTCNT_MASK (0x7FFU)
#define GMAC_MTL_RXQ4_MISSED_PACKET_OVERFLOW_CNT_OVFPKTCNT_SHIFT (0U)
#define GMAC_MTL_RXQ4_MISSED_PACKET_OVERFLOW_CNT_OVFPKTCNT_WIDTH (11U)
#define GMAC_MTL_RXQ4_MISSED_PACKET_OVERFLOW_CNT_OVFPKTCNT(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ4_MISSED_PACKET_OVERFLOW_CNT_OVFPKTCNT_SHIFT)) & GMAC_MTL_RXQ4_MISSED_PACKET_OVERFLOW_CNT_OVFPKTCNT_MASK)
#define GMAC_MTL_RXQ4_MISSED_PACKET_OVERFLOW_CNT_OVFCNTOVF_MASK (0x800U)
#define GMAC_MTL_RXQ4_MISSED_PACKET_OVERFLOW_CNT_OVFCNTOVF_SHIFT (11U)
#define GMAC_MTL_RXQ4_MISSED_PACKET_OVERFLOW_CNT_OVFCNTOVF_WIDTH (1U)
#define GMAC_MTL_RXQ4_MISSED_PACKET_OVERFLOW_CNT_OVFCNTOVF(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ4_MISSED_PACKET_OVERFLOW_CNT_OVFCNTOVF_SHIFT)) & GMAC_MTL_RXQ4_MISSED_PACKET_OVERFLOW_CNT_OVFCNTOVF_MASK)
#define GMAC_MTL_RXQ4_MISSED_PACKET_OVERFLOW_CNT_MISPKTCNT_MASK (0x7FF0000U)
#define GMAC_MTL_RXQ4_MISSED_PACKET_OVERFLOW_CNT_MISPKTCNT_SHIFT (16U)
#define GMAC_MTL_RXQ4_MISSED_PACKET_OVERFLOW_CNT_MISPKTCNT_WIDTH (11U)
#define GMAC_MTL_RXQ4_MISSED_PACKET_OVERFLOW_CNT_MISPKTCNT(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ4_MISSED_PACKET_OVERFLOW_CNT_MISPKTCNT_SHIFT)) & GMAC_MTL_RXQ4_MISSED_PACKET_OVERFLOW_CNT_MISPKTCNT_MASK)
#define GMAC_MTL_RXQ4_MISSED_PACKET_OVERFLOW_CNT_MISCNTOVF_MASK (0x8000000U)
#define GMAC_MTL_RXQ4_MISSED_PACKET_OVERFLOW_CNT_MISCNTOVF_SHIFT (27U)
#define GMAC_MTL_RXQ4_MISSED_PACKET_OVERFLOW_CNT_MISCNTOVF_WIDTH (1U)
#define GMAC_MTL_RXQ4_MISSED_PACKET_OVERFLOW_CNT_MISCNTOVF(x) (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ4_MISSED_PACKET_OVERFLOW_CNT_MISCNTOVF_SHIFT)) & GMAC_MTL_RXQ4_MISSED_PACKET_OVERFLOW_CNT_MISCNTOVF_MASK)
/*! @} */

/*! @name MTL_RXQ4_DEBUG -  */
/*! @{ */
#define GMAC_MTL_RXQ4_DEBUG_RWCSTS_MASK          (0x1U)
#define GMAC_MTL_RXQ4_DEBUG_RWCSTS_SHIFT         (0U)
#define GMAC_MTL_RXQ4_DEBUG_RWCSTS_WIDTH         (1U)
#define GMAC_MTL_RXQ4_DEBUG_RWCSTS(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ4_DEBUG_RWCSTS_SHIFT)) & GMAC_MTL_RXQ4_DEBUG_RWCSTS_MASK)
#define GMAC_MTL_RXQ4_DEBUG_RRCSTS_MASK          (0x6U)
#define GMAC_MTL_RXQ4_DEBUG_RRCSTS_SHIFT         (1U)
#define GMAC_MTL_RXQ4_DEBUG_RRCSTS_WIDTH         (2U)
#define GMAC_MTL_RXQ4_DEBUG_RRCSTS(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ4_DEBUG_RRCSTS_SHIFT)) & GMAC_MTL_RXQ4_DEBUG_RRCSTS_MASK)
#define GMAC_MTL_RXQ4_DEBUG_RXQSTS_MASK          (0x30U)
#define GMAC_MTL_RXQ4_DEBUG_RXQSTS_SHIFT         (4U)
#define GMAC_MTL_RXQ4_DEBUG_RXQSTS_WIDTH         (2U)
#define GMAC_MTL_RXQ4_DEBUG_RXQSTS(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ4_DEBUG_RXQSTS_SHIFT)) & GMAC_MTL_RXQ4_DEBUG_RXQSTS_MASK)
#define GMAC_MTL_RXQ4_DEBUG_PRXQ_MASK            (0x3FFF0000U)
#define GMAC_MTL_RXQ4_DEBUG_PRXQ_SHIFT           (16U)
#define GMAC_MTL_RXQ4_DEBUG_PRXQ_WIDTH           (14U)
#define GMAC_MTL_RXQ4_DEBUG_PRXQ(x)              (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ4_DEBUG_PRXQ_SHIFT)) & GMAC_MTL_RXQ4_DEBUG_PRXQ_MASK)
/*! @} */

/*! @name MTL_RXQ4_CONTROL -  */
/*! @{ */
#define GMAC_MTL_RXQ4_CONTROL_RXQ_WEGT_MASK      (0x7U)
#define GMAC_MTL_RXQ4_CONTROL_RXQ_WEGT_SHIFT     (0U)
#define GMAC_MTL_RXQ4_CONTROL_RXQ_WEGT_WIDTH     (3U)
#define GMAC_MTL_RXQ4_CONTROL_RXQ_WEGT(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ4_CONTROL_RXQ_WEGT_SHIFT)) & GMAC_MTL_RXQ4_CONTROL_RXQ_WEGT_MASK)
#define GMAC_MTL_RXQ4_CONTROL_RXQ_FRM_ARBIT_MASK (0x8U)
#define GMAC_MTL_RXQ4_CONTROL_RXQ_FRM_ARBIT_SHIFT (3U)
#define GMAC_MTL_RXQ4_CONTROL_RXQ_FRM_ARBIT_WIDTH (1U)
#define GMAC_MTL_RXQ4_CONTROL_RXQ_FRM_ARBIT(x)   (((uint32_t)(((uint32_t)(x)) << GMAC_MTL_RXQ4_CONTROL_RXQ_FRM_ARBIT_SHIFT)) & GMAC_MTL_RXQ4_CONTROL_RXQ_FRM_ARBIT_MASK)
/*! @} */

/*! @name DMA_MODE -  */
/*! @{ */
#define GMAC_DMA_MODE_SWR_MASK                   (0x1U)
#define GMAC_DMA_MODE_SWR_SHIFT                  (0U)
#define GMAC_DMA_MODE_SWR_WIDTH                  (1U)
#define GMAC_DMA_MODE_SWR(x)                     (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_MODE_SWR_SHIFT)) & GMAC_DMA_MODE_SWR_MASK)
#define GMAC_DMA_MODE_DSPW_MASK                  (0x100U)
#define GMAC_DMA_MODE_DSPW_SHIFT                 (8U)
#define GMAC_DMA_MODE_DSPW_WIDTH                 (1U)
#define GMAC_DMA_MODE_DSPW(x)                    (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_MODE_DSPW_SHIFT)) & GMAC_DMA_MODE_DSPW_MASK)
#define GMAC_DMA_MODE_INTM_MASK                  (0x30000U)
#define GMAC_DMA_MODE_INTM_SHIFT                 (16U)
#define GMAC_DMA_MODE_INTM_WIDTH                 (2U)
#define GMAC_DMA_MODE_INTM(x)                    (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_MODE_INTM_SHIFT)) & GMAC_DMA_MODE_INTM_MASK)
/*! @} */

/*! @name DMA_SYSBUS_MODE -  */
/*! @{ */
#define GMAC_DMA_SYSBUS_MODE_FB_MASK             (0x1U)
#define GMAC_DMA_SYSBUS_MODE_FB_SHIFT            (0U)
#define GMAC_DMA_SYSBUS_MODE_FB_WIDTH            (1U)
#define GMAC_DMA_SYSBUS_MODE_FB(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_SYSBUS_MODE_FB_SHIFT)) & GMAC_DMA_SYSBUS_MODE_FB_MASK)
#define GMAC_DMA_SYSBUS_MODE_BLEN4_MASK          (0x2U)
#define GMAC_DMA_SYSBUS_MODE_BLEN4_SHIFT         (1U)
#define GMAC_DMA_SYSBUS_MODE_BLEN4_WIDTH         (1U)
#define GMAC_DMA_SYSBUS_MODE_BLEN4(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_SYSBUS_MODE_BLEN4_SHIFT)) & GMAC_DMA_SYSBUS_MODE_BLEN4_MASK)
#define GMAC_DMA_SYSBUS_MODE_BLEN8_MASK          (0x4U)
#define GMAC_DMA_SYSBUS_MODE_BLEN8_SHIFT         (2U)
#define GMAC_DMA_SYSBUS_MODE_BLEN8_WIDTH         (1U)
#define GMAC_DMA_SYSBUS_MODE_BLEN8(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_SYSBUS_MODE_BLEN8_SHIFT)) & GMAC_DMA_SYSBUS_MODE_BLEN8_MASK)
#define GMAC_DMA_SYSBUS_MODE_BLEN16_MASK         (0x8U)
#define GMAC_DMA_SYSBUS_MODE_BLEN16_SHIFT        (3U)
#define GMAC_DMA_SYSBUS_MODE_BLEN16_WIDTH        (1U)
#define GMAC_DMA_SYSBUS_MODE_BLEN16(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_SYSBUS_MODE_BLEN16_SHIFT)) & GMAC_DMA_SYSBUS_MODE_BLEN16_MASK)
#define GMAC_DMA_SYSBUS_MODE_BLEN32_MASK         (0x10U)
#define GMAC_DMA_SYSBUS_MODE_BLEN32_SHIFT        (4U)
#define GMAC_DMA_SYSBUS_MODE_BLEN32_WIDTH        (1U)
#define GMAC_DMA_SYSBUS_MODE_BLEN32(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_SYSBUS_MODE_BLEN32_SHIFT)) & GMAC_DMA_SYSBUS_MODE_BLEN32_MASK)
#define GMAC_DMA_SYSBUS_MODE_BLEN64_MASK         (0x20U)
#define GMAC_DMA_SYSBUS_MODE_BLEN64_SHIFT        (5U)
#define GMAC_DMA_SYSBUS_MODE_BLEN64_WIDTH        (1U)
#define GMAC_DMA_SYSBUS_MODE_BLEN64(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_SYSBUS_MODE_BLEN64_SHIFT)) & GMAC_DMA_SYSBUS_MODE_BLEN64_MASK)
#define GMAC_DMA_SYSBUS_MODE_BLEN128_MASK        (0x40U)
#define GMAC_DMA_SYSBUS_MODE_BLEN128_SHIFT       (6U)
#define GMAC_DMA_SYSBUS_MODE_BLEN128_WIDTH       (1U)
#define GMAC_DMA_SYSBUS_MODE_BLEN128(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_SYSBUS_MODE_BLEN128_SHIFT)) & GMAC_DMA_SYSBUS_MODE_BLEN128_MASK)
#define GMAC_DMA_SYSBUS_MODE_BLEN256_MASK        (0x80U)
#define GMAC_DMA_SYSBUS_MODE_BLEN256_SHIFT       (7U)
#define GMAC_DMA_SYSBUS_MODE_BLEN256_WIDTH       (1U)
#define GMAC_DMA_SYSBUS_MODE_BLEN256(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_SYSBUS_MODE_BLEN256_SHIFT)) & GMAC_DMA_SYSBUS_MODE_BLEN256_MASK)
#define GMAC_DMA_SYSBUS_MODE_AALE_MASK           (0x400U)
#define GMAC_DMA_SYSBUS_MODE_AALE_SHIFT          (10U)
#define GMAC_DMA_SYSBUS_MODE_AALE_WIDTH          (1U)
#define GMAC_DMA_SYSBUS_MODE_AALE(x)             (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_SYSBUS_MODE_AALE_SHIFT)) & GMAC_DMA_SYSBUS_MODE_AALE_MASK)
#define GMAC_DMA_SYSBUS_MODE_AAL_MASK            (0x1000U)
#define GMAC_DMA_SYSBUS_MODE_AAL_SHIFT           (12U)
#define GMAC_DMA_SYSBUS_MODE_AAL_WIDTH           (1U)
#define GMAC_DMA_SYSBUS_MODE_AAL(x)              (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_SYSBUS_MODE_AAL_SHIFT)) & GMAC_DMA_SYSBUS_MODE_AAL_MASK)
#define GMAC_DMA_SYSBUS_MODE_ONEKBBE_MASK        (0x2000U)
#define GMAC_DMA_SYSBUS_MODE_ONEKBBE_SHIFT       (13U)
#define GMAC_DMA_SYSBUS_MODE_ONEKBBE_WIDTH       (1U)
#define GMAC_DMA_SYSBUS_MODE_ONEKBBE(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_SYSBUS_MODE_ONEKBBE_SHIFT)) & GMAC_DMA_SYSBUS_MODE_ONEKBBE_MASK)
#define GMAC_DMA_SYSBUS_MODE_RD_OSR_LMT_MASK     (0xF0000U)
#define GMAC_DMA_SYSBUS_MODE_RD_OSR_LMT_SHIFT    (16U)
#define GMAC_DMA_SYSBUS_MODE_RD_OSR_LMT_WIDTH    (4U)
#define GMAC_DMA_SYSBUS_MODE_RD_OSR_LMT(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_SYSBUS_MODE_RD_OSR_LMT_SHIFT)) & GMAC_DMA_SYSBUS_MODE_RD_OSR_LMT_MASK)
#define GMAC_DMA_SYSBUS_MODE_WR_OSR_LMT_MASK     (0xF000000U)
#define GMAC_DMA_SYSBUS_MODE_WR_OSR_LMT_SHIFT    (24U)
#define GMAC_DMA_SYSBUS_MODE_WR_OSR_LMT_WIDTH    (4U)
#define GMAC_DMA_SYSBUS_MODE_WR_OSR_LMT(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_SYSBUS_MODE_WR_OSR_LMT_SHIFT)) & GMAC_DMA_SYSBUS_MODE_WR_OSR_LMT_MASK)
#define GMAC_DMA_SYSBUS_MODE_LPI_XIT_PKT_MASK    (0x40000000U)
#define GMAC_DMA_SYSBUS_MODE_LPI_XIT_PKT_SHIFT   (30U)
#define GMAC_DMA_SYSBUS_MODE_LPI_XIT_PKT_WIDTH   (1U)
#define GMAC_DMA_SYSBUS_MODE_LPI_XIT_PKT(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_SYSBUS_MODE_LPI_XIT_PKT_SHIFT)) & GMAC_DMA_SYSBUS_MODE_LPI_XIT_PKT_MASK)
#define GMAC_DMA_SYSBUS_MODE_EN_LPI_MASK         (0x80000000U)
#define GMAC_DMA_SYSBUS_MODE_EN_LPI_SHIFT        (31U)
#define GMAC_DMA_SYSBUS_MODE_EN_LPI_WIDTH        (1U)
#define GMAC_DMA_SYSBUS_MODE_EN_LPI(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_SYSBUS_MODE_EN_LPI_SHIFT)) & GMAC_DMA_SYSBUS_MODE_EN_LPI_MASK)
/*! @} */

/*! @name DMA_INTERRUPT_STATUS -  */
/*! @{ */
#define GMAC_DMA_INTERRUPT_STATUS_DC0IS_MASK     (0x1U)
#define GMAC_DMA_INTERRUPT_STATUS_DC0IS_SHIFT    (0U)
#define GMAC_DMA_INTERRUPT_STATUS_DC0IS_WIDTH    (1U)
#define GMAC_DMA_INTERRUPT_STATUS_DC0IS(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_INTERRUPT_STATUS_DC0IS_SHIFT)) & GMAC_DMA_INTERRUPT_STATUS_DC0IS_MASK)
#define GMAC_DMA_INTERRUPT_STATUS_DC1IS_MASK     (0x2U)
#define GMAC_DMA_INTERRUPT_STATUS_DC1IS_SHIFT    (1U)
#define GMAC_DMA_INTERRUPT_STATUS_DC1IS_WIDTH    (1U)
#define GMAC_DMA_INTERRUPT_STATUS_DC1IS(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_INTERRUPT_STATUS_DC1IS_SHIFT)) & GMAC_DMA_INTERRUPT_STATUS_DC1IS_MASK)
#define GMAC_DMA_INTERRUPT_STATUS_DC2IS_MASK     (0x4U)
#define GMAC_DMA_INTERRUPT_STATUS_DC2IS_SHIFT    (2U)
#define GMAC_DMA_INTERRUPT_STATUS_DC2IS_WIDTH    (1U)
#define GMAC_DMA_INTERRUPT_STATUS_DC2IS(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_INTERRUPT_STATUS_DC2IS_SHIFT)) & GMAC_DMA_INTERRUPT_STATUS_DC2IS_MASK)
#define GMAC_DMA_INTERRUPT_STATUS_DC3IS_MASK     (0x8U)
#define GMAC_DMA_INTERRUPT_STATUS_DC3IS_SHIFT    (3U)
#define GMAC_DMA_INTERRUPT_STATUS_DC3IS_WIDTH    (1U)
#define GMAC_DMA_INTERRUPT_STATUS_DC3IS(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_INTERRUPT_STATUS_DC3IS_SHIFT)) & GMAC_DMA_INTERRUPT_STATUS_DC3IS_MASK)
#define GMAC_DMA_INTERRUPT_STATUS_DC4IS_MASK     (0x10U)
#define GMAC_DMA_INTERRUPT_STATUS_DC4IS_SHIFT    (4U)
#define GMAC_DMA_INTERRUPT_STATUS_DC4IS_WIDTH    (1U)
#define GMAC_DMA_INTERRUPT_STATUS_DC4IS(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_INTERRUPT_STATUS_DC4IS_SHIFT)) & GMAC_DMA_INTERRUPT_STATUS_DC4IS_MASK)
#define GMAC_DMA_INTERRUPT_STATUS_MTLIS_MASK     (0x10000U)
#define GMAC_DMA_INTERRUPT_STATUS_MTLIS_SHIFT    (16U)
#define GMAC_DMA_INTERRUPT_STATUS_MTLIS_WIDTH    (1U)
#define GMAC_DMA_INTERRUPT_STATUS_MTLIS(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_INTERRUPT_STATUS_MTLIS_SHIFT)) & GMAC_DMA_INTERRUPT_STATUS_MTLIS_MASK)
#define GMAC_DMA_INTERRUPT_STATUS_MACIS_MASK     (0x20000U)
#define GMAC_DMA_INTERRUPT_STATUS_MACIS_SHIFT    (17U)
#define GMAC_DMA_INTERRUPT_STATUS_MACIS_WIDTH    (1U)
#define GMAC_DMA_INTERRUPT_STATUS_MACIS(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_INTERRUPT_STATUS_MACIS_SHIFT)) & GMAC_DMA_INTERRUPT_STATUS_MACIS_MASK)
/*! @} */

/*! @name DMA_DEBUG_STATUS0 -  */
/*! @{ */
#define GMAC_DMA_DEBUG_STATUS0_AXWHSTS_MASK      (0x1U)
#define GMAC_DMA_DEBUG_STATUS0_AXWHSTS_SHIFT     (0U)
#define GMAC_DMA_DEBUG_STATUS0_AXWHSTS_WIDTH     (1U)
#define GMAC_DMA_DEBUG_STATUS0_AXWHSTS(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_DEBUG_STATUS0_AXWHSTS_SHIFT)) & GMAC_DMA_DEBUG_STATUS0_AXWHSTS_MASK)
#define GMAC_DMA_DEBUG_STATUS0_AXRHSTS_MASK      (0x2U)
#define GMAC_DMA_DEBUG_STATUS0_AXRHSTS_SHIFT     (1U)
#define GMAC_DMA_DEBUG_STATUS0_AXRHSTS_WIDTH     (1U)
#define GMAC_DMA_DEBUG_STATUS0_AXRHSTS(x)        (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_DEBUG_STATUS0_AXRHSTS_SHIFT)) & GMAC_DMA_DEBUG_STATUS0_AXRHSTS_MASK)
#define GMAC_DMA_DEBUG_STATUS0_RPS0_MASK         (0xF00U)
#define GMAC_DMA_DEBUG_STATUS0_RPS0_SHIFT        (8U)
#define GMAC_DMA_DEBUG_STATUS0_RPS0_WIDTH        (4U)
#define GMAC_DMA_DEBUG_STATUS0_RPS0(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_DEBUG_STATUS0_RPS0_SHIFT)) & GMAC_DMA_DEBUG_STATUS0_RPS0_MASK)
#define GMAC_DMA_DEBUG_STATUS0_TPS0_MASK         (0xF000U)
#define GMAC_DMA_DEBUG_STATUS0_TPS0_SHIFT        (12U)
#define GMAC_DMA_DEBUG_STATUS0_TPS0_WIDTH        (4U)
#define GMAC_DMA_DEBUG_STATUS0_TPS0(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_DEBUG_STATUS0_TPS0_SHIFT)) & GMAC_DMA_DEBUG_STATUS0_TPS0_MASK)
#define GMAC_DMA_DEBUG_STATUS0_RPS1_MASK         (0xF0000U)
#define GMAC_DMA_DEBUG_STATUS0_RPS1_SHIFT        (16U)
#define GMAC_DMA_DEBUG_STATUS0_RPS1_WIDTH        (4U)
#define GMAC_DMA_DEBUG_STATUS0_RPS1(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_DEBUG_STATUS0_RPS1_SHIFT)) & GMAC_DMA_DEBUG_STATUS0_RPS1_MASK)
#define GMAC_DMA_DEBUG_STATUS0_TPS1_MASK         (0xF00000U)
#define GMAC_DMA_DEBUG_STATUS0_TPS1_SHIFT        (20U)
#define GMAC_DMA_DEBUG_STATUS0_TPS1_WIDTH        (4U)
#define GMAC_DMA_DEBUG_STATUS0_TPS1(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_DEBUG_STATUS0_TPS1_SHIFT)) & GMAC_DMA_DEBUG_STATUS0_TPS1_MASK)
#define GMAC_DMA_DEBUG_STATUS0_RPS2_MASK         (0xF000000U)
#define GMAC_DMA_DEBUG_STATUS0_RPS2_SHIFT        (24U)
#define GMAC_DMA_DEBUG_STATUS0_RPS2_WIDTH        (4U)
#define GMAC_DMA_DEBUG_STATUS0_RPS2(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_DEBUG_STATUS0_RPS2_SHIFT)) & GMAC_DMA_DEBUG_STATUS0_RPS2_MASK)
#define GMAC_DMA_DEBUG_STATUS0_TPS2_MASK         (0xF0000000U)
#define GMAC_DMA_DEBUG_STATUS0_TPS2_SHIFT        (28U)
#define GMAC_DMA_DEBUG_STATUS0_TPS2_WIDTH        (4U)
#define GMAC_DMA_DEBUG_STATUS0_TPS2(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_DEBUG_STATUS0_TPS2_SHIFT)) & GMAC_DMA_DEBUG_STATUS0_TPS2_MASK)
/*! @} */

/*! @name DMA_DEBUG_STATUS1 -  */
/*! @{ */
#define GMAC_DMA_DEBUG_STATUS1_RPS3_MASK         (0xFU)
#define GMAC_DMA_DEBUG_STATUS1_RPS3_SHIFT        (0U)
#define GMAC_DMA_DEBUG_STATUS1_RPS3_WIDTH        (4U)
#define GMAC_DMA_DEBUG_STATUS1_RPS3(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_DEBUG_STATUS1_RPS3_SHIFT)) & GMAC_DMA_DEBUG_STATUS1_RPS3_MASK)
#define GMAC_DMA_DEBUG_STATUS1_TPS3_MASK         (0xF0U)
#define GMAC_DMA_DEBUG_STATUS1_TPS3_SHIFT        (4U)
#define GMAC_DMA_DEBUG_STATUS1_TPS3_WIDTH        (4U)
#define GMAC_DMA_DEBUG_STATUS1_TPS3(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_DEBUG_STATUS1_TPS3_SHIFT)) & GMAC_DMA_DEBUG_STATUS1_TPS3_MASK)
#define GMAC_DMA_DEBUG_STATUS1_RPS4_MASK         (0xF00U)
#define GMAC_DMA_DEBUG_STATUS1_RPS4_SHIFT        (8U)
#define GMAC_DMA_DEBUG_STATUS1_RPS4_WIDTH        (4U)
#define GMAC_DMA_DEBUG_STATUS1_RPS4(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_DEBUG_STATUS1_RPS4_SHIFT)) & GMAC_DMA_DEBUG_STATUS1_RPS4_MASK)
#define GMAC_DMA_DEBUG_STATUS1_TPS4_MASK         (0xF000U)
#define GMAC_DMA_DEBUG_STATUS1_TPS4_SHIFT        (12U)
#define GMAC_DMA_DEBUG_STATUS1_TPS4_WIDTH        (4U)
#define GMAC_DMA_DEBUG_STATUS1_TPS4(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_DEBUG_STATUS1_TPS4_SHIFT)) & GMAC_DMA_DEBUG_STATUS1_TPS4_MASK)
/*! @} */

/*! @name AXI4_TX_AR_ACE_CONTROL -  */
/*! @{ */
#define GMAC_AXI4_TX_AR_ACE_CONTROL_TDRC_MASK    (0xFU)
#define GMAC_AXI4_TX_AR_ACE_CONTROL_TDRC_SHIFT   (0U)
#define GMAC_AXI4_TX_AR_ACE_CONTROL_TDRC_WIDTH   (4U)
#define GMAC_AXI4_TX_AR_ACE_CONTROL_TDRC(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_AXI4_TX_AR_ACE_CONTROL_TDRC_SHIFT)) & GMAC_AXI4_TX_AR_ACE_CONTROL_TDRC_MASK)
#define GMAC_AXI4_TX_AR_ACE_CONTROL_TDRD_MASK    (0x30U)
#define GMAC_AXI4_TX_AR_ACE_CONTROL_TDRD_SHIFT   (4U)
#define GMAC_AXI4_TX_AR_ACE_CONTROL_TDRD_WIDTH   (2U)
#define GMAC_AXI4_TX_AR_ACE_CONTROL_TDRD(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_AXI4_TX_AR_ACE_CONTROL_TDRD_SHIFT)) & GMAC_AXI4_TX_AR_ACE_CONTROL_TDRD_MASK)
#define GMAC_AXI4_TX_AR_ACE_CONTROL_TEC_MASK     (0xF00U)
#define GMAC_AXI4_TX_AR_ACE_CONTROL_TEC_SHIFT    (8U)
#define GMAC_AXI4_TX_AR_ACE_CONTROL_TEC_WIDTH    (4U)
#define GMAC_AXI4_TX_AR_ACE_CONTROL_TEC(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_AXI4_TX_AR_ACE_CONTROL_TEC_SHIFT)) & GMAC_AXI4_TX_AR_ACE_CONTROL_TEC_MASK)
#define GMAC_AXI4_TX_AR_ACE_CONTROL_TED_MASK     (0x3000U)
#define GMAC_AXI4_TX_AR_ACE_CONTROL_TED_SHIFT    (12U)
#define GMAC_AXI4_TX_AR_ACE_CONTROL_TED_WIDTH    (2U)
#define GMAC_AXI4_TX_AR_ACE_CONTROL_TED(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_AXI4_TX_AR_ACE_CONTROL_TED_SHIFT)) & GMAC_AXI4_TX_AR_ACE_CONTROL_TED_MASK)
#define GMAC_AXI4_TX_AR_ACE_CONTROL_THC_MASK     (0xF0000U)
#define GMAC_AXI4_TX_AR_ACE_CONTROL_THC_SHIFT    (16U)
#define GMAC_AXI4_TX_AR_ACE_CONTROL_THC_WIDTH    (4U)
#define GMAC_AXI4_TX_AR_ACE_CONTROL_THC(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_AXI4_TX_AR_ACE_CONTROL_THC_SHIFT)) & GMAC_AXI4_TX_AR_ACE_CONTROL_THC_MASK)
#define GMAC_AXI4_TX_AR_ACE_CONTROL_THD_MASK     (0x300000U)
#define GMAC_AXI4_TX_AR_ACE_CONTROL_THD_SHIFT    (20U)
#define GMAC_AXI4_TX_AR_ACE_CONTROL_THD_WIDTH    (2U)
#define GMAC_AXI4_TX_AR_ACE_CONTROL_THD(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_AXI4_TX_AR_ACE_CONTROL_THD_SHIFT)) & GMAC_AXI4_TX_AR_ACE_CONTROL_THD_MASK)
/*! @} */

/*! @name AXI4_RX_AW_ACE_CONTROL -  */
/*! @{ */
#define GMAC_AXI4_RX_AW_ACE_CONTROL_RDWC_MASK    (0xFU)
#define GMAC_AXI4_RX_AW_ACE_CONTROL_RDWC_SHIFT   (0U)
#define GMAC_AXI4_RX_AW_ACE_CONTROL_RDWC_WIDTH   (4U)
#define GMAC_AXI4_RX_AW_ACE_CONTROL_RDWC(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_AXI4_RX_AW_ACE_CONTROL_RDWC_SHIFT)) & GMAC_AXI4_RX_AW_ACE_CONTROL_RDWC_MASK)
#define GMAC_AXI4_RX_AW_ACE_CONTROL_RDWD_MASK    (0x30U)
#define GMAC_AXI4_RX_AW_ACE_CONTROL_RDWD_SHIFT   (4U)
#define GMAC_AXI4_RX_AW_ACE_CONTROL_RDWD_WIDTH   (2U)
#define GMAC_AXI4_RX_AW_ACE_CONTROL_RDWD(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_AXI4_RX_AW_ACE_CONTROL_RDWD_SHIFT)) & GMAC_AXI4_RX_AW_ACE_CONTROL_RDWD_MASK)
#define GMAC_AXI4_RX_AW_ACE_CONTROL_RPC_MASK     (0xF00U)
#define GMAC_AXI4_RX_AW_ACE_CONTROL_RPC_SHIFT    (8U)
#define GMAC_AXI4_RX_AW_ACE_CONTROL_RPC_WIDTH    (4U)
#define GMAC_AXI4_RX_AW_ACE_CONTROL_RPC(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_AXI4_RX_AW_ACE_CONTROL_RPC_SHIFT)) & GMAC_AXI4_RX_AW_ACE_CONTROL_RPC_MASK)
#define GMAC_AXI4_RX_AW_ACE_CONTROL_RPD_MASK     (0x3000U)
#define GMAC_AXI4_RX_AW_ACE_CONTROL_RPD_SHIFT    (12U)
#define GMAC_AXI4_RX_AW_ACE_CONTROL_RPD_WIDTH    (2U)
#define GMAC_AXI4_RX_AW_ACE_CONTROL_RPD(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_AXI4_RX_AW_ACE_CONTROL_RPD_SHIFT)) & GMAC_AXI4_RX_AW_ACE_CONTROL_RPD_MASK)
#define GMAC_AXI4_RX_AW_ACE_CONTROL_RHC_MASK     (0xF0000U)
#define GMAC_AXI4_RX_AW_ACE_CONTROL_RHC_SHIFT    (16U)
#define GMAC_AXI4_RX_AW_ACE_CONTROL_RHC_WIDTH    (4U)
#define GMAC_AXI4_RX_AW_ACE_CONTROL_RHC(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_AXI4_RX_AW_ACE_CONTROL_RHC_SHIFT)) & GMAC_AXI4_RX_AW_ACE_CONTROL_RHC_MASK)
#define GMAC_AXI4_RX_AW_ACE_CONTROL_RHD_MASK     (0x300000U)
#define GMAC_AXI4_RX_AW_ACE_CONTROL_RHD_SHIFT    (20U)
#define GMAC_AXI4_RX_AW_ACE_CONTROL_RHD_WIDTH    (2U)
#define GMAC_AXI4_RX_AW_ACE_CONTROL_RHD(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_AXI4_RX_AW_ACE_CONTROL_RHD_SHIFT)) & GMAC_AXI4_RX_AW_ACE_CONTROL_RHD_MASK)
#define GMAC_AXI4_RX_AW_ACE_CONTROL_RDC_MASK     (0xF000000U)
#define GMAC_AXI4_RX_AW_ACE_CONTROL_RDC_SHIFT    (24U)
#define GMAC_AXI4_RX_AW_ACE_CONTROL_RDC_WIDTH    (4U)
#define GMAC_AXI4_RX_AW_ACE_CONTROL_RDC(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_AXI4_RX_AW_ACE_CONTROL_RDC_SHIFT)) & GMAC_AXI4_RX_AW_ACE_CONTROL_RDC_MASK)
#define GMAC_AXI4_RX_AW_ACE_CONTROL_RDD_MASK     (0x30000000U)
#define GMAC_AXI4_RX_AW_ACE_CONTROL_RDD_SHIFT    (28U)
#define GMAC_AXI4_RX_AW_ACE_CONTROL_RDD_WIDTH    (2U)
#define GMAC_AXI4_RX_AW_ACE_CONTROL_RDD(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_AXI4_RX_AW_ACE_CONTROL_RDD_SHIFT)) & GMAC_AXI4_RX_AW_ACE_CONTROL_RDD_MASK)
/*! @} */

/*! @name AXI4_TXRX_AWAR_ACE_CONTROL -  */
/*! @{ */
#define GMAC_AXI4_TXRX_AWAR_ACE_CONTROL_TDWC_MASK (0xFU)
#define GMAC_AXI4_TXRX_AWAR_ACE_CONTROL_TDWC_SHIFT (0U)
#define GMAC_AXI4_TXRX_AWAR_ACE_CONTROL_TDWC_WIDTH (4U)
#define GMAC_AXI4_TXRX_AWAR_ACE_CONTROL_TDWC(x)  (((uint32_t)(((uint32_t)(x)) << GMAC_AXI4_TXRX_AWAR_ACE_CONTROL_TDWC_SHIFT)) & GMAC_AXI4_TXRX_AWAR_ACE_CONTROL_TDWC_MASK)
#define GMAC_AXI4_TXRX_AWAR_ACE_CONTROL_TDWD_MASK (0x30U)
#define GMAC_AXI4_TXRX_AWAR_ACE_CONTROL_TDWD_SHIFT (4U)
#define GMAC_AXI4_TXRX_AWAR_ACE_CONTROL_TDWD_WIDTH (2U)
#define GMAC_AXI4_TXRX_AWAR_ACE_CONTROL_TDWD(x)  (((uint32_t)(((uint32_t)(x)) << GMAC_AXI4_TXRX_AWAR_ACE_CONTROL_TDWD_SHIFT)) & GMAC_AXI4_TXRX_AWAR_ACE_CONTROL_TDWD_MASK)
#define GMAC_AXI4_TXRX_AWAR_ACE_CONTROL_RDRC_MASK (0xF00U)
#define GMAC_AXI4_TXRX_AWAR_ACE_CONTROL_RDRC_SHIFT (8U)
#define GMAC_AXI4_TXRX_AWAR_ACE_CONTROL_RDRC_WIDTH (4U)
#define GMAC_AXI4_TXRX_AWAR_ACE_CONTROL_RDRC(x)  (((uint32_t)(((uint32_t)(x)) << GMAC_AXI4_TXRX_AWAR_ACE_CONTROL_RDRC_SHIFT)) & GMAC_AXI4_TXRX_AWAR_ACE_CONTROL_RDRC_MASK)
#define GMAC_AXI4_TXRX_AWAR_ACE_CONTROL_RDRD_MASK (0x3000U)
#define GMAC_AXI4_TXRX_AWAR_ACE_CONTROL_RDRD_SHIFT (12U)
#define GMAC_AXI4_TXRX_AWAR_ACE_CONTROL_RDRD_WIDTH (2U)
#define GMAC_AXI4_TXRX_AWAR_ACE_CONTROL_RDRD(x)  (((uint32_t)(((uint32_t)(x)) << GMAC_AXI4_TXRX_AWAR_ACE_CONTROL_RDRD_SHIFT)) & GMAC_AXI4_TXRX_AWAR_ACE_CONTROL_RDRD_MASK)
#define GMAC_AXI4_TXRX_AWAR_ACE_CONTROL_RDP_MASK (0x70000U)
#define GMAC_AXI4_TXRX_AWAR_ACE_CONTROL_RDP_SHIFT (16U)
#define GMAC_AXI4_TXRX_AWAR_ACE_CONTROL_RDP_WIDTH (3U)
#define GMAC_AXI4_TXRX_AWAR_ACE_CONTROL_RDP(x)   (((uint32_t)(((uint32_t)(x)) << GMAC_AXI4_TXRX_AWAR_ACE_CONTROL_RDP_SHIFT)) & GMAC_AXI4_TXRX_AWAR_ACE_CONTROL_RDP_MASK)
#define GMAC_AXI4_TXRX_AWAR_ACE_CONTROL_WRP_MASK (0x700000U)
#define GMAC_AXI4_TXRX_AWAR_ACE_CONTROL_WRP_SHIFT (20U)
#define GMAC_AXI4_TXRX_AWAR_ACE_CONTROL_WRP_WIDTH (3U)
#define GMAC_AXI4_TXRX_AWAR_ACE_CONTROL_WRP(x)   (((uint32_t)(((uint32_t)(x)) << GMAC_AXI4_TXRX_AWAR_ACE_CONTROL_WRP_SHIFT)) & GMAC_AXI4_TXRX_AWAR_ACE_CONTROL_WRP_MASK)
/*! @} */

/*! @name AXI_LPI_ENTRY_INTERVAL -  */
/*! @{ */
#define GMAC_AXI_LPI_ENTRY_INTERVAL_LPIEI_MASK   (0xFU)
#define GMAC_AXI_LPI_ENTRY_INTERVAL_LPIEI_SHIFT  (0U)
#define GMAC_AXI_LPI_ENTRY_INTERVAL_LPIEI_WIDTH  (4U)
#define GMAC_AXI_LPI_ENTRY_INTERVAL_LPIEI(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_AXI_LPI_ENTRY_INTERVAL_LPIEI_SHIFT)) & GMAC_AXI_LPI_ENTRY_INTERVAL_LPIEI_MASK)
/*! @} */

/*! @name DMA_TBS_CTRL -  */
/*! @{ */
#define GMAC_DMA_TBS_CTRL_FTOV_MASK              (0x1U)
#define GMAC_DMA_TBS_CTRL_FTOV_SHIFT             (0U)
#define GMAC_DMA_TBS_CTRL_FTOV_WIDTH             (1U)
#define GMAC_DMA_TBS_CTRL_FTOV(x)                (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_TBS_CTRL_FTOV_SHIFT)) & GMAC_DMA_TBS_CTRL_FTOV_MASK)
#define GMAC_DMA_TBS_CTRL_FGOS_MASK              (0x70U)
#define GMAC_DMA_TBS_CTRL_FGOS_SHIFT             (4U)
#define GMAC_DMA_TBS_CTRL_FGOS_WIDTH             (3U)
#define GMAC_DMA_TBS_CTRL_FGOS(x)                (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_TBS_CTRL_FGOS_SHIFT)) & GMAC_DMA_TBS_CTRL_FGOS_MASK)
#define GMAC_DMA_TBS_CTRL_FTOS_MASK              (0xFFFFFF00U)
#define GMAC_DMA_TBS_CTRL_FTOS_SHIFT             (8U)
#define GMAC_DMA_TBS_CTRL_FTOS_WIDTH             (24U)
#define GMAC_DMA_TBS_CTRL_FTOS(x)                (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_TBS_CTRL_FTOS_SHIFT)) & GMAC_DMA_TBS_CTRL_FTOS_MASK)
/*! @} */

/*! @name DMA_SAFETY_INTERRUPT_STATUS -  */
/*! @{ */
#define GMAC_DMA_SAFETY_INTERRUPT_STATUS_DECIS_MASK (0x1U)
#define GMAC_DMA_SAFETY_INTERRUPT_STATUS_DECIS_SHIFT (0U)
#define GMAC_DMA_SAFETY_INTERRUPT_STATUS_DECIS_WIDTH (1U)
#define GMAC_DMA_SAFETY_INTERRUPT_STATUS_DECIS(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_SAFETY_INTERRUPT_STATUS_DECIS_SHIFT)) & GMAC_DMA_SAFETY_INTERRUPT_STATUS_DECIS_MASK)
#define GMAC_DMA_SAFETY_INTERRUPT_STATUS_DEUIS_MASK (0x2U)
#define GMAC_DMA_SAFETY_INTERRUPT_STATUS_DEUIS_SHIFT (1U)
#define GMAC_DMA_SAFETY_INTERRUPT_STATUS_DEUIS_WIDTH (1U)
#define GMAC_DMA_SAFETY_INTERRUPT_STATUS_DEUIS(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_SAFETY_INTERRUPT_STATUS_DEUIS_SHIFT)) & GMAC_DMA_SAFETY_INTERRUPT_STATUS_DEUIS_MASK)
#define GMAC_DMA_SAFETY_INTERRUPT_STATUS_MSCIS_MASK (0x10000000U)
#define GMAC_DMA_SAFETY_INTERRUPT_STATUS_MSCIS_SHIFT (28U)
#define GMAC_DMA_SAFETY_INTERRUPT_STATUS_MSCIS_WIDTH (1U)
#define GMAC_DMA_SAFETY_INTERRUPT_STATUS_MSCIS(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_SAFETY_INTERRUPT_STATUS_MSCIS_SHIFT)) & GMAC_DMA_SAFETY_INTERRUPT_STATUS_MSCIS_MASK)
#define GMAC_DMA_SAFETY_INTERRUPT_STATUS_MSUIS_MASK (0x20000000U)
#define GMAC_DMA_SAFETY_INTERRUPT_STATUS_MSUIS_SHIFT (29U)
#define GMAC_DMA_SAFETY_INTERRUPT_STATUS_MSUIS_WIDTH (1U)
#define GMAC_DMA_SAFETY_INTERRUPT_STATUS_MSUIS(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_SAFETY_INTERRUPT_STATUS_MSUIS_SHIFT)) & GMAC_DMA_SAFETY_INTERRUPT_STATUS_MSUIS_MASK)
#define GMAC_DMA_SAFETY_INTERRUPT_STATUS_MCSIS_MASK (0x80000000U)
#define GMAC_DMA_SAFETY_INTERRUPT_STATUS_MCSIS_SHIFT (31U)
#define GMAC_DMA_SAFETY_INTERRUPT_STATUS_MCSIS_WIDTH (1U)
#define GMAC_DMA_SAFETY_INTERRUPT_STATUS_MCSIS(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_SAFETY_INTERRUPT_STATUS_MCSIS_SHIFT)) & GMAC_DMA_SAFETY_INTERRUPT_STATUS_MCSIS_MASK)
/*! @} */

/*! @name DMA_CH0_CONTROL -  */
/*! @{ */
#define GMAC_DMA_CH0_CONTROL_PBLx8_MASK          (0x10000U)
#define GMAC_DMA_CH0_CONTROL_PBLx8_SHIFT         (16U)
#define GMAC_DMA_CH0_CONTROL_PBLx8_WIDTH         (1U)
#define GMAC_DMA_CH0_CONTROL_PBLx8(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH0_CONTROL_PBLx8_SHIFT)) & GMAC_DMA_CH0_CONTROL_PBLx8_MASK)
#define GMAC_DMA_CH0_CONTROL_DSL_MASK            (0x1C0000U)
#define GMAC_DMA_CH0_CONTROL_DSL_SHIFT           (18U)
#define GMAC_DMA_CH0_CONTROL_DSL_WIDTH           (3U)
#define GMAC_DMA_CH0_CONTROL_DSL(x)              (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH0_CONTROL_DSL_SHIFT)) & GMAC_DMA_CH0_CONTROL_DSL_MASK)
#define GMAC_DMA_CH0_CONTROL_SPH_MASK            (0x1000000U)
#define GMAC_DMA_CH0_CONTROL_SPH_SHIFT           (24U)
#define GMAC_DMA_CH0_CONTROL_SPH_WIDTH           (1U)
#define GMAC_DMA_CH0_CONTROL_SPH(x)              (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH0_CONTROL_SPH_SHIFT)) & GMAC_DMA_CH0_CONTROL_SPH_MASK)
/*! @} */

/*! @name DMA_CH0_TX_CONTROL -  */
/*! @{ */
#define GMAC_DMA_CH0_TX_CONTROL_ST_MASK          (0x1U)
#define GMAC_DMA_CH0_TX_CONTROL_ST_SHIFT         (0U)
#define GMAC_DMA_CH0_TX_CONTROL_ST_WIDTH         (1U)
#define GMAC_DMA_CH0_TX_CONTROL_ST(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH0_TX_CONTROL_ST_SHIFT)) & GMAC_DMA_CH0_TX_CONTROL_ST_MASK)
#define GMAC_DMA_CH0_TX_CONTROL_OSF_MASK         (0x10U)
#define GMAC_DMA_CH0_TX_CONTROL_OSF_SHIFT        (4U)
#define GMAC_DMA_CH0_TX_CONTROL_OSF_WIDTH        (1U)
#define GMAC_DMA_CH0_TX_CONTROL_OSF(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH0_TX_CONTROL_OSF_SHIFT)) & GMAC_DMA_CH0_TX_CONTROL_OSF_MASK)
#define GMAC_DMA_CH0_TX_CONTROL_IPBL_MASK        (0x8000U)
#define GMAC_DMA_CH0_TX_CONTROL_IPBL_SHIFT       (15U)
#define GMAC_DMA_CH0_TX_CONTROL_IPBL_WIDTH       (1U)
#define GMAC_DMA_CH0_TX_CONTROL_IPBL(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH0_TX_CONTROL_IPBL_SHIFT)) & GMAC_DMA_CH0_TX_CONTROL_IPBL_MASK)
#define GMAC_DMA_CH0_TX_CONTROL_TXPBL_MASK       (0x3F0000U)
#define GMAC_DMA_CH0_TX_CONTROL_TXPBL_SHIFT      (16U)
#define GMAC_DMA_CH0_TX_CONTROL_TXPBL_WIDTH      (6U)
#define GMAC_DMA_CH0_TX_CONTROL_TXPBL(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH0_TX_CONTROL_TXPBL_SHIFT)) & GMAC_DMA_CH0_TX_CONTROL_TXPBL_MASK)
#define GMAC_DMA_CH0_TX_CONTROL_TQOS_MASK        (0xF000000U)
#define GMAC_DMA_CH0_TX_CONTROL_TQOS_SHIFT       (24U)
#define GMAC_DMA_CH0_TX_CONTROL_TQOS_WIDTH       (4U)
#define GMAC_DMA_CH0_TX_CONTROL_TQOS(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH0_TX_CONTROL_TQOS_SHIFT)) & GMAC_DMA_CH0_TX_CONTROL_TQOS_MASK)
#define GMAC_DMA_CH0_TX_CONTROL_EDSE_MASK        (0x10000000U)
#define GMAC_DMA_CH0_TX_CONTROL_EDSE_SHIFT       (28U)
#define GMAC_DMA_CH0_TX_CONTROL_EDSE_WIDTH       (1U)
#define GMAC_DMA_CH0_TX_CONTROL_EDSE(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH0_TX_CONTROL_EDSE_SHIFT)) & GMAC_DMA_CH0_TX_CONTROL_EDSE_MASK)
/*! @} */

/*! @name DMA_CH0_RX_CONTROL -  */
/*! @{ */
#define GMAC_DMA_CH0_RX_CONTROL_SR_MASK          (0x1U)
#define GMAC_DMA_CH0_RX_CONTROL_SR_SHIFT         (0U)
#define GMAC_DMA_CH0_RX_CONTROL_SR_WIDTH         (1U)
#define GMAC_DMA_CH0_RX_CONTROL_SR(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH0_RX_CONTROL_SR_SHIFT)) & GMAC_DMA_CH0_RX_CONTROL_SR_MASK)
#define GMAC_DMA_CH0_RX_CONTROL_RBSZ_X_0_MASK    (0xEU)
#define GMAC_DMA_CH0_RX_CONTROL_RBSZ_X_0_SHIFT   (1U)
#define GMAC_DMA_CH0_RX_CONTROL_RBSZ_X_0_WIDTH   (3U)
#define GMAC_DMA_CH0_RX_CONTROL_RBSZ_X_0(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH0_RX_CONTROL_RBSZ_X_0_SHIFT)) & GMAC_DMA_CH0_RX_CONTROL_RBSZ_X_0_MASK)
#define GMAC_DMA_CH0_RX_CONTROL_RBSZ_13_Y_MASK   (0x7FF0U)
#define GMAC_DMA_CH0_RX_CONTROL_RBSZ_13_Y_SHIFT  (4U)
#define GMAC_DMA_CH0_RX_CONTROL_RBSZ_13_Y_WIDTH  (11U)
#define GMAC_DMA_CH0_RX_CONTROL_RBSZ_13_Y(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH0_RX_CONTROL_RBSZ_13_Y_SHIFT)) & GMAC_DMA_CH0_RX_CONTROL_RBSZ_13_Y_MASK)
#define GMAC_DMA_CH0_RX_CONTROL_RXPBL_MASK       (0x3F0000U)
#define GMAC_DMA_CH0_RX_CONTROL_RXPBL_SHIFT      (16U)
#define GMAC_DMA_CH0_RX_CONTROL_RXPBL_WIDTH      (6U)
#define GMAC_DMA_CH0_RX_CONTROL_RXPBL(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH0_RX_CONTROL_RXPBL_SHIFT)) & GMAC_DMA_CH0_RX_CONTROL_RXPBL_MASK)
#define GMAC_DMA_CH0_RX_CONTROL_RQOS_MASK        (0xF000000U)
#define GMAC_DMA_CH0_RX_CONTROL_RQOS_SHIFT       (24U)
#define GMAC_DMA_CH0_RX_CONTROL_RQOS_WIDTH       (4U)
#define GMAC_DMA_CH0_RX_CONTROL_RQOS(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH0_RX_CONTROL_RQOS_SHIFT)) & GMAC_DMA_CH0_RX_CONTROL_RQOS_MASK)
#define GMAC_DMA_CH0_RX_CONTROL_RPF_MASK         (0x80000000U)
#define GMAC_DMA_CH0_RX_CONTROL_RPF_SHIFT        (31U)
#define GMAC_DMA_CH0_RX_CONTROL_RPF_WIDTH        (1U)
#define GMAC_DMA_CH0_RX_CONTROL_RPF(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH0_RX_CONTROL_RPF_SHIFT)) & GMAC_DMA_CH0_RX_CONTROL_RPF_MASK)
/*! @} */

/*! @name DMA_CH0_TXDESC_LIST_ADDRESS -  */
/*! @{ */
#define GMAC_DMA_CH0_TXDESC_LIST_ADDRESS_TDESLA_MASK (0xFFFFFFF8U)
#define GMAC_DMA_CH0_TXDESC_LIST_ADDRESS_TDESLA_SHIFT (3U)
#define GMAC_DMA_CH0_TXDESC_LIST_ADDRESS_TDESLA_WIDTH (29U)
#define GMAC_DMA_CH0_TXDESC_LIST_ADDRESS_TDESLA(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH0_TXDESC_LIST_ADDRESS_TDESLA_SHIFT)) & GMAC_DMA_CH0_TXDESC_LIST_ADDRESS_TDESLA_MASK)
/*! @} */

/*! @name DMA_CH0_RXDESC_LIST_ADDRESS -  */
/*! @{ */
#define GMAC_DMA_CH0_RXDESC_LIST_ADDRESS_RDESLA_MASK (0xFFFFFFF8U)
#define GMAC_DMA_CH0_RXDESC_LIST_ADDRESS_RDESLA_SHIFT (3U)
#define GMAC_DMA_CH0_RXDESC_LIST_ADDRESS_RDESLA_WIDTH (29U)
#define GMAC_DMA_CH0_RXDESC_LIST_ADDRESS_RDESLA(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH0_RXDESC_LIST_ADDRESS_RDESLA_SHIFT)) & GMAC_DMA_CH0_RXDESC_LIST_ADDRESS_RDESLA_MASK)
/*! @} */

/*! @name DMA_CH0_TXDESC_TAIL_POINTER -  */
/*! @{ */
#define GMAC_DMA_CH0_TXDESC_TAIL_POINTER_TDTP_MASK (0xFFFFFFF8U)
#define GMAC_DMA_CH0_TXDESC_TAIL_POINTER_TDTP_SHIFT (3U)
#define GMAC_DMA_CH0_TXDESC_TAIL_POINTER_TDTP_WIDTH (29U)
#define GMAC_DMA_CH0_TXDESC_TAIL_POINTER_TDTP(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH0_TXDESC_TAIL_POINTER_TDTP_SHIFT)) & GMAC_DMA_CH0_TXDESC_TAIL_POINTER_TDTP_MASK)
/*! @} */

/*! @name DMA_CH0_RXDESC_TAIL_POINTER -  */
/*! @{ */
#define GMAC_DMA_CH0_RXDESC_TAIL_POINTER_RDTP_MASK (0xFFFFFFF8U)
#define GMAC_DMA_CH0_RXDESC_TAIL_POINTER_RDTP_SHIFT (3U)
#define GMAC_DMA_CH0_RXDESC_TAIL_POINTER_RDTP_WIDTH (29U)
#define GMAC_DMA_CH0_RXDESC_TAIL_POINTER_RDTP(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH0_RXDESC_TAIL_POINTER_RDTP_SHIFT)) & GMAC_DMA_CH0_RXDESC_TAIL_POINTER_RDTP_MASK)
/*! @} */

/*! @name DMA_CH0_TXDESC_RING_LENGTH -  */
/*! @{ */
#define GMAC_DMA_CH0_TXDESC_RING_LENGTH_TDRL_MASK (0x3FFU)
#define GMAC_DMA_CH0_TXDESC_RING_LENGTH_TDRL_SHIFT (0U)
#define GMAC_DMA_CH0_TXDESC_RING_LENGTH_TDRL_WIDTH (10U)
#define GMAC_DMA_CH0_TXDESC_RING_LENGTH_TDRL(x)  (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH0_TXDESC_RING_LENGTH_TDRL_SHIFT)) & GMAC_DMA_CH0_TXDESC_RING_LENGTH_TDRL_MASK)
/*! @} */

/*! @name DMA_CH0_RXDESC_RING_LENGTH -  */
/*! @{ */
#define GMAC_DMA_CH0_RXDESC_RING_LENGTH_RDRL_MASK (0x3FFU)
#define GMAC_DMA_CH0_RXDESC_RING_LENGTH_RDRL_SHIFT (0U)
#define GMAC_DMA_CH0_RXDESC_RING_LENGTH_RDRL_WIDTH (10U)
#define GMAC_DMA_CH0_RXDESC_RING_LENGTH_RDRL(x)  (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH0_RXDESC_RING_LENGTH_RDRL_SHIFT)) & GMAC_DMA_CH0_RXDESC_RING_LENGTH_RDRL_MASK)
/*! @} */

/*! @name DMA_CH0_INTERRUPT_ENABLE -  */
/*! @{ */
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_TIE_MASK   (0x1U)
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_TIE_SHIFT  (0U)
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_TIE_WIDTH  (1U)
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_TIE(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH0_INTERRUPT_ENABLE_TIE_SHIFT)) & GMAC_DMA_CH0_INTERRUPT_ENABLE_TIE_MASK)
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_TXSE_MASK  (0x2U)
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_TXSE_SHIFT (1U)
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_TXSE_WIDTH (1U)
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_TXSE(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH0_INTERRUPT_ENABLE_TXSE_SHIFT)) & GMAC_DMA_CH0_INTERRUPT_ENABLE_TXSE_MASK)
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_TBUE_MASK  (0x4U)
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_TBUE_SHIFT (2U)
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_TBUE_WIDTH (1U)
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_TBUE(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH0_INTERRUPT_ENABLE_TBUE_SHIFT)) & GMAC_DMA_CH0_INTERRUPT_ENABLE_TBUE_MASK)
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_RIE_MASK   (0x40U)
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_RIE_SHIFT  (6U)
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_RIE_WIDTH  (1U)
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_RIE(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH0_INTERRUPT_ENABLE_RIE_SHIFT)) & GMAC_DMA_CH0_INTERRUPT_ENABLE_RIE_MASK)
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_RBUE_MASK  (0x80U)
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_RBUE_SHIFT (7U)
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_RBUE_WIDTH (1U)
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_RBUE(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH0_INTERRUPT_ENABLE_RBUE_SHIFT)) & GMAC_DMA_CH0_INTERRUPT_ENABLE_RBUE_MASK)
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_RSE_MASK   (0x100U)
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_RSE_SHIFT  (8U)
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_RSE_WIDTH  (1U)
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_RSE(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH0_INTERRUPT_ENABLE_RSE_SHIFT)) & GMAC_DMA_CH0_INTERRUPT_ENABLE_RSE_MASK)
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_RWTE_MASK  (0x200U)
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_RWTE_SHIFT (9U)
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_RWTE_WIDTH (1U)
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_RWTE(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH0_INTERRUPT_ENABLE_RWTE_SHIFT)) & GMAC_DMA_CH0_INTERRUPT_ENABLE_RWTE_MASK)
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_ETIE_MASK  (0x400U)
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_ETIE_SHIFT (10U)
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_ETIE_WIDTH (1U)
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_ETIE(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH0_INTERRUPT_ENABLE_ETIE_SHIFT)) & GMAC_DMA_CH0_INTERRUPT_ENABLE_ETIE_MASK)
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_ERIE_MASK  (0x800U)
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_ERIE_SHIFT (11U)
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_ERIE_WIDTH (1U)
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_ERIE(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH0_INTERRUPT_ENABLE_ERIE_SHIFT)) & GMAC_DMA_CH0_INTERRUPT_ENABLE_ERIE_MASK)
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_FBEE_MASK  (0x1000U)
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_FBEE_SHIFT (12U)
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_FBEE_WIDTH (1U)
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_FBEE(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH0_INTERRUPT_ENABLE_FBEE_SHIFT)) & GMAC_DMA_CH0_INTERRUPT_ENABLE_FBEE_MASK)
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_CDEE_MASK  (0x2000U)
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_CDEE_SHIFT (13U)
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_CDEE_WIDTH (1U)
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_CDEE(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH0_INTERRUPT_ENABLE_CDEE_SHIFT)) & GMAC_DMA_CH0_INTERRUPT_ENABLE_CDEE_MASK)
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_AIE_MASK   (0x4000U)
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_AIE_SHIFT  (14U)
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_AIE_WIDTH  (1U)
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_AIE(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH0_INTERRUPT_ENABLE_AIE_SHIFT)) & GMAC_DMA_CH0_INTERRUPT_ENABLE_AIE_MASK)
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_NIE_MASK   (0x8000U)
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_NIE_SHIFT  (15U)
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_NIE_WIDTH  (1U)
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_NIE(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH0_INTERRUPT_ENABLE_NIE_SHIFT)) & GMAC_DMA_CH0_INTERRUPT_ENABLE_NIE_MASK)
/*! @} */

/*! @name DMA_CH0_RX_INTERRUPT_WATCHDOG_TIMER -  */
/*! @{ */
#define GMAC_DMA_CH0_RX_INTERRUPT_WATCHDOG_TIMER_RWT_MASK (0xFFU)
#define GMAC_DMA_CH0_RX_INTERRUPT_WATCHDOG_TIMER_RWT_SHIFT (0U)
#define GMAC_DMA_CH0_RX_INTERRUPT_WATCHDOG_TIMER_RWT_WIDTH (8U)
#define GMAC_DMA_CH0_RX_INTERRUPT_WATCHDOG_TIMER_RWT(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH0_RX_INTERRUPT_WATCHDOG_TIMER_RWT_SHIFT)) & GMAC_DMA_CH0_RX_INTERRUPT_WATCHDOG_TIMER_RWT_MASK)
#define GMAC_DMA_CH0_RX_INTERRUPT_WATCHDOG_TIMER_RWTU_MASK (0x30000U)
#define GMAC_DMA_CH0_RX_INTERRUPT_WATCHDOG_TIMER_RWTU_SHIFT (16U)
#define GMAC_DMA_CH0_RX_INTERRUPT_WATCHDOG_TIMER_RWTU_WIDTH (2U)
#define GMAC_DMA_CH0_RX_INTERRUPT_WATCHDOG_TIMER_RWTU(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH0_RX_INTERRUPT_WATCHDOG_TIMER_RWTU_SHIFT)) & GMAC_DMA_CH0_RX_INTERRUPT_WATCHDOG_TIMER_RWTU_MASK)
/*! @} */

/*! @name DMA_CH0_SLOT_FUNCTION_CONTROL_STATUS -  */
/*! @{ */
#define GMAC_DMA_CH0_SLOT_FUNCTION_CONTROL_STATUS_ESC_MASK (0x1U)
#define GMAC_DMA_CH0_SLOT_FUNCTION_CONTROL_STATUS_ESC_SHIFT (0U)
#define GMAC_DMA_CH0_SLOT_FUNCTION_CONTROL_STATUS_ESC_WIDTH (1U)
#define GMAC_DMA_CH0_SLOT_FUNCTION_CONTROL_STATUS_ESC(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH0_SLOT_FUNCTION_CONTROL_STATUS_ESC_SHIFT)) & GMAC_DMA_CH0_SLOT_FUNCTION_CONTROL_STATUS_ESC_MASK)
#define GMAC_DMA_CH0_SLOT_FUNCTION_CONTROL_STATUS_ASC_MASK (0x2U)
#define GMAC_DMA_CH0_SLOT_FUNCTION_CONTROL_STATUS_ASC_SHIFT (1U)
#define GMAC_DMA_CH0_SLOT_FUNCTION_CONTROL_STATUS_ASC_WIDTH (1U)
#define GMAC_DMA_CH0_SLOT_FUNCTION_CONTROL_STATUS_ASC(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH0_SLOT_FUNCTION_CONTROL_STATUS_ASC_SHIFT)) & GMAC_DMA_CH0_SLOT_FUNCTION_CONTROL_STATUS_ASC_MASK)
#define GMAC_DMA_CH0_SLOT_FUNCTION_CONTROL_STATUS_SIV_MASK (0xFFF0U)
#define GMAC_DMA_CH0_SLOT_FUNCTION_CONTROL_STATUS_SIV_SHIFT (4U)
#define GMAC_DMA_CH0_SLOT_FUNCTION_CONTROL_STATUS_SIV_WIDTH (12U)
#define GMAC_DMA_CH0_SLOT_FUNCTION_CONTROL_STATUS_SIV(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH0_SLOT_FUNCTION_CONTROL_STATUS_SIV_SHIFT)) & GMAC_DMA_CH0_SLOT_FUNCTION_CONTROL_STATUS_SIV_MASK)
#define GMAC_DMA_CH0_SLOT_FUNCTION_CONTROL_STATUS_RSN_MASK (0xF0000U)
#define GMAC_DMA_CH0_SLOT_FUNCTION_CONTROL_STATUS_RSN_SHIFT (16U)
#define GMAC_DMA_CH0_SLOT_FUNCTION_CONTROL_STATUS_RSN_WIDTH (4U)
#define GMAC_DMA_CH0_SLOT_FUNCTION_CONTROL_STATUS_RSN(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH0_SLOT_FUNCTION_CONTROL_STATUS_RSN_SHIFT)) & GMAC_DMA_CH0_SLOT_FUNCTION_CONTROL_STATUS_RSN_MASK)
/*! @} */

/*! @name DMA_CH0_CURRENT_APP_TXDESC -  */
/*! @{ */
#define GMAC_DMA_CH0_CURRENT_APP_TXDESC_CURTDESAPTR_MASK (0xFFFFFFFFU)
#define GMAC_DMA_CH0_CURRENT_APP_TXDESC_CURTDESAPTR_SHIFT (0U)
#define GMAC_DMA_CH0_CURRENT_APP_TXDESC_CURTDESAPTR_WIDTH (32U)
#define GMAC_DMA_CH0_CURRENT_APP_TXDESC_CURTDESAPTR(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH0_CURRENT_APP_TXDESC_CURTDESAPTR_SHIFT)) & GMAC_DMA_CH0_CURRENT_APP_TXDESC_CURTDESAPTR_MASK)
/*! @} */

/*! @name DMA_CH0_CURRENT_APP_RXDESC -  */
/*! @{ */
#define GMAC_DMA_CH0_CURRENT_APP_RXDESC_CURRDESAPTR_MASK (0xFFFFFFFFU)
#define GMAC_DMA_CH0_CURRENT_APP_RXDESC_CURRDESAPTR_SHIFT (0U)
#define GMAC_DMA_CH0_CURRENT_APP_RXDESC_CURRDESAPTR_WIDTH (32U)
#define GMAC_DMA_CH0_CURRENT_APP_RXDESC_CURRDESAPTR(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH0_CURRENT_APP_RXDESC_CURRDESAPTR_SHIFT)) & GMAC_DMA_CH0_CURRENT_APP_RXDESC_CURRDESAPTR_MASK)
/*! @} */

/*! @name DMA_CH0_CURRENT_APP_TXBUFFER -  */
/*! @{ */
#define GMAC_DMA_CH0_CURRENT_APP_TXBUFFER_CURTBUFAPTR_MASK (0xFFFFFFFFU)
#define GMAC_DMA_CH0_CURRENT_APP_TXBUFFER_CURTBUFAPTR_SHIFT (0U)
#define GMAC_DMA_CH0_CURRENT_APP_TXBUFFER_CURTBUFAPTR_WIDTH (32U)
#define GMAC_DMA_CH0_CURRENT_APP_TXBUFFER_CURTBUFAPTR(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH0_CURRENT_APP_TXBUFFER_CURTBUFAPTR_SHIFT)) & GMAC_DMA_CH0_CURRENT_APP_TXBUFFER_CURTBUFAPTR_MASK)
/*! @} */

/*! @name DMA_CH0_CURRENT_APP_RXBUFFER -  */
/*! @{ */
#define GMAC_DMA_CH0_CURRENT_APP_RXBUFFER_CURRBUFAPTR_MASK (0xFFFFFFFFU)
#define GMAC_DMA_CH0_CURRENT_APP_RXBUFFER_CURRBUFAPTR_SHIFT (0U)
#define GMAC_DMA_CH0_CURRENT_APP_RXBUFFER_CURRBUFAPTR_WIDTH (32U)
#define GMAC_DMA_CH0_CURRENT_APP_RXBUFFER_CURRBUFAPTR(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH0_CURRENT_APP_RXBUFFER_CURRBUFAPTR_SHIFT)) & GMAC_DMA_CH0_CURRENT_APP_RXBUFFER_CURRBUFAPTR_MASK)
/*! @} */

/*! @name DMA_CH0_STATUS -  */
/*! @{ */
#define GMAC_DMA_CH0_STATUS_TI_MASK              (0x1U)
#define GMAC_DMA_CH0_STATUS_TI_SHIFT             (0U)
#define GMAC_DMA_CH0_STATUS_TI_WIDTH             (1U)
#define GMAC_DMA_CH0_STATUS_TI(x)                (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH0_STATUS_TI_SHIFT)) & GMAC_DMA_CH0_STATUS_TI_MASK)
#define GMAC_DMA_CH0_STATUS_TPS_MASK             (0x2U)
#define GMAC_DMA_CH0_STATUS_TPS_SHIFT            (1U)
#define GMAC_DMA_CH0_STATUS_TPS_WIDTH            (1U)
#define GMAC_DMA_CH0_STATUS_TPS(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH0_STATUS_TPS_SHIFT)) & GMAC_DMA_CH0_STATUS_TPS_MASK)
#define GMAC_DMA_CH0_STATUS_TBU_MASK             (0x4U)
#define GMAC_DMA_CH0_STATUS_TBU_SHIFT            (2U)
#define GMAC_DMA_CH0_STATUS_TBU_WIDTH            (1U)
#define GMAC_DMA_CH0_STATUS_TBU(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH0_STATUS_TBU_SHIFT)) & GMAC_DMA_CH0_STATUS_TBU_MASK)
#define GMAC_DMA_CH0_STATUS_RI_MASK              (0x40U)
#define GMAC_DMA_CH0_STATUS_RI_SHIFT             (6U)
#define GMAC_DMA_CH0_STATUS_RI_WIDTH             (1U)
#define GMAC_DMA_CH0_STATUS_RI(x)                (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH0_STATUS_RI_SHIFT)) & GMAC_DMA_CH0_STATUS_RI_MASK)
#define GMAC_DMA_CH0_STATUS_RBU_MASK             (0x80U)
#define GMAC_DMA_CH0_STATUS_RBU_SHIFT            (7U)
#define GMAC_DMA_CH0_STATUS_RBU_WIDTH            (1U)
#define GMAC_DMA_CH0_STATUS_RBU(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH0_STATUS_RBU_SHIFT)) & GMAC_DMA_CH0_STATUS_RBU_MASK)
#define GMAC_DMA_CH0_STATUS_RPS_MASK             (0x100U)
#define GMAC_DMA_CH0_STATUS_RPS_SHIFT            (8U)
#define GMAC_DMA_CH0_STATUS_RPS_WIDTH            (1U)
#define GMAC_DMA_CH0_STATUS_RPS(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH0_STATUS_RPS_SHIFT)) & GMAC_DMA_CH0_STATUS_RPS_MASK)
#define GMAC_DMA_CH0_STATUS_RWT_MASK             (0x200U)
#define GMAC_DMA_CH0_STATUS_RWT_SHIFT            (9U)
#define GMAC_DMA_CH0_STATUS_RWT_WIDTH            (1U)
#define GMAC_DMA_CH0_STATUS_RWT(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH0_STATUS_RWT_SHIFT)) & GMAC_DMA_CH0_STATUS_RWT_MASK)
#define GMAC_DMA_CH0_STATUS_ETI_MASK             (0x400U)
#define GMAC_DMA_CH0_STATUS_ETI_SHIFT            (10U)
#define GMAC_DMA_CH0_STATUS_ETI_WIDTH            (1U)
#define GMAC_DMA_CH0_STATUS_ETI(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH0_STATUS_ETI_SHIFT)) & GMAC_DMA_CH0_STATUS_ETI_MASK)
#define GMAC_DMA_CH0_STATUS_ERI_MASK             (0x800U)
#define GMAC_DMA_CH0_STATUS_ERI_SHIFT            (11U)
#define GMAC_DMA_CH0_STATUS_ERI_WIDTH            (1U)
#define GMAC_DMA_CH0_STATUS_ERI(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH0_STATUS_ERI_SHIFT)) & GMAC_DMA_CH0_STATUS_ERI_MASK)
#define GMAC_DMA_CH0_STATUS_FBE_MASK             (0x1000U)
#define GMAC_DMA_CH0_STATUS_FBE_SHIFT            (12U)
#define GMAC_DMA_CH0_STATUS_FBE_WIDTH            (1U)
#define GMAC_DMA_CH0_STATUS_FBE(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH0_STATUS_FBE_SHIFT)) & GMAC_DMA_CH0_STATUS_FBE_MASK)
#define GMAC_DMA_CH0_STATUS_CDE_MASK             (0x2000U)
#define GMAC_DMA_CH0_STATUS_CDE_SHIFT            (13U)
#define GMAC_DMA_CH0_STATUS_CDE_WIDTH            (1U)
#define GMAC_DMA_CH0_STATUS_CDE(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH0_STATUS_CDE_SHIFT)) & GMAC_DMA_CH0_STATUS_CDE_MASK)
#define GMAC_DMA_CH0_STATUS_AIS_MASK             (0x4000U)
#define GMAC_DMA_CH0_STATUS_AIS_SHIFT            (14U)
#define GMAC_DMA_CH0_STATUS_AIS_WIDTH            (1U)
#define GMAC_DMA_CH0_STATUS_AIS(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH0_STATUS_AIS_SHIFT)) & GMAC_DMA_CH0_STATUS_AIS_MASK)
#define GMAC_DMA_CH0_STATUS_NIS_MASK             (0x8000U)
#define GMAC_DMA_CH0_STATUS_NIS_SHIFT            (15U)
#define GMAC_DMA_CH0_STATUS_NIS_WIDTH            (1U)
#define GMAC_DMA_CH0_STATUS_NIS(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH0_STATUS_NIS_SHIFT)) & GMAC_DMA_CH0_STATUS_NIS_MASK)
#define GMAC_DMA_CH0_STATUS_TEB_MASK             (0x70000U)
#define GMAC_DMA_CH0_STATUS_TEB_SHIFT            (16U)
#define GMAC_DMA_CH0_STATUS_TEB_WIDTH            (3U)
#define GMAC_DMA_CH0_STATUS_TEB(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH0_STATUS_TEB_SHIFT)) & GMAC_DMA_CH0_STATUS_TEB_MASK)
#define GMAC_DMA_CH0_STATUS_REB_MASK             (0x380000U)
#define GMAC_DMA_CH0_STATUS_REB_SHIFT            (19U)
#define GMAC_DMA_CH0_STATUS_REB_WIDTH            (3U)
#define GMAC_DMA_CH0_STATUS_REB(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH0_STATUS_REB_SHIFT)) & GMAC_DMA_CH0_STATUS_REB_MASK)
/*! @} */

/*! @name DMA_CH0_MISS_FRAME_CNT -  */
/*! @{ */
#define GMAC_DMA_CH0_MISS_FRAME_CNT_MFC_MASK     (0x7FFU)
#define GMAC_DMA_CH0_MISS_FRAME_CNT_MFC_SHIFT    (0U)
#define GMAC_DMA_CH0_MISS_FRAME_CNT_MFC_WIDTH    (11U)
#define GMAC_DMA_CH0_MISS_FRAME_CNT_MFC(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH0_MISS_FRAME_CNT_MFC_SHIFT)) & GMAC_DMA_CH0_MISS_FRAME_CNT_MFC_MASK)
#define GMAC_DMA_CH0_MISS_FRAME_CNT_MFCO_MASK    (0x8000U)
#define GMAC_DMA_CH0_MISS_FRAME_CNT_MFCO_SHIFT   (15U)
#define GMAC_DMA_CH0_MISS_FRAME_CNT_MFCO_WIDTH   (1U)
#define GMAC_DMA_CH0_MISS_FRAME_CNT_MFCO(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH0_MISS_FRAME_CNT_MFCO_SHIFT)) & GMAC_DMA_CH0_MISS_FRAME_CNT_MFCO_MASK)
/*! @} */

/*! @name DMA_CH0_RXP_ACCEPT_CNT -  */
/*! @{ */
#define GMAC_DMA_CH0_RXP_ACCEPT_CNT_RXPAC_MASK   (0x7FFFFFFFU)
#define GMAC_DMA_CH0_RXP_ACCEPT_CNT_RXPAC_SHIFT  (0U)
#define GMAC_DMA_CH0_RXP_ACCEPT_CNT_RXPAC_WIDTH  (31U)
#define GMAC_DMA_CH0_RXP_ACCEPT_CNT_RXPAC(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH0_RXP_ACCEPT_CNT_RXPAC_SHIFT)) & GMAC_DMA_CH0_RXP_ACCEPT_CNT_RXPAC_MASK)
#define GMAC_DMA_CH0_RXP_ACCEPT_CNT_RXPACOF_MASK (0x80000000U)
#define GMAC_DMA_CH0_RXP_ACCEPT_CNT_RXPACOF_SHIFT (31U)
#define GMAC_DMA_CH0_RXP_ACCEPT_CNT_RXPACOF_WIDTH (1U)
#define GMAC_DMA_CH0_RXP_ACCEPT_CNT_RXPACOF(x)   (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH0_RXP_ACCEPT_CNT_RXPACOF_SHIFT)) & GMAC_DMA_CH0_RXP_ACCEPT_CNT_RXPACOF_MASK)
/*! @} */

/*! @name DMA_CH0_RX_ERI_CNT -  */
/*! @{ */
#define GMAC_DMA_CH0_RX_ERI_CNT_ECNT_MASK        (0xFFFU)
#define GMAC_DMA_CH0_RX_ERI_CNT_ECNT_SHIFT       (0U)
#define GMAC_DMA_CH0_RX_ERI_CNT_ECNT_WIDTH       (12U)
#define GMAC_DMA_CH0_RX_ERI_CNT_ECNT(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH0_RX_ERI_CNT_ECNT_SHIFT)) & GMAC_DMA_CH0_RX_ERI_CNT_ECNT_MASK)
/*! @} */

/*! @name DMA_CH1_CONTROL -  */
/*! @{ */
#define GMAC_DMA_CH1_CONTROL_PBLx8_MASK          (0x10000U)
#define GMAC_DMA_CH1_CONTROL_PBLx8_SHIFT         (16U)
#define GMAC_DMA_CH1_CONTROL_PBLx8_WIDTH         (1U)
#define GMAC_DMA_CH1_CONTROL_PBLx8(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH1_CONTROL_PBLx8_SHIFT)) & GMAC_DMA_CH1_CONTROL_PBLx8_MASK)
#define GMAC_DMA_CH1_CONTROL_DSL_MASK            (0x1C0000U)
#define GMAC_DMA_CH1_CONTROL_DSL_SHIFT           (18U)
#define GMAC_DMA_CH1_CONTROL_DSL_WIDTH           (3U)
#define GMAC_DMA_CH1_CONTROL_DSL(x)              (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH1_CONTROL_DSL_SHIFT)) & GMAC_DMA_CH1_CONTROL_DSL_MASK)
#define GMAC_DMA_CH1_CONTROL_SPH_MASK            (0x1000000U)
#define GMAC_DMA_CH1_CONTROL_SPH_SHIFT           (24U)
#define GMAC_DMA_CH1_CONTROL_SPH_WIDTH           (1U)
#define GMAC_DMA_CH1_CONTROL_SPH(x)              (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH1_CONTROL_SPH_SHIFT)) & GMAC_DMA_CH1_CONTROL_SPH_MASK)
/*! @} */

/*! @name DMA_CH1_TX_CONTROL -  */
/*! @{ */
#define GMAC_DMA_CH1_TX_CONTROL_ST_MASK          (0x1U)
#define GMAC_DMA_CH1_TX_CONTROL_ST_SHIFT         (0U)
#define GMAC_DMA_CH1_TX_CONTROL_ST_WIDTH         (1U)
#define GMAC_DMA_CH1_TX_CONTROL_ST(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH1_TX_CONTROL_ST_SHIFT)) & GMAC_DMA_CH1_TX_CONTROL_ST_MASK)
#define GMAC_DMA_CH1_TX_CONTROL_OSF_MASK         (0x10U)
#define GMAC_DMA_CH1_TX_CONTROL_OSF_SHIFT        (4U)
#define GMAC_DMA_CH1_TX_CONTROL_OSF_WIDTH        (1U)
#define GMAC_DMA_CH1_TX_CONTROL_OSF(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH1_TX_CONTROL_OSF_SHIFT)) & GMAC_DMA_CH1_TX_CONTROL_OSF_MASK)
#define GMAC_DMA_CH1_TX_CONTROL_IPBL_MASK        (0x8000U)
#define GMAC_DMA_CH1_TX_CONTROL_IPBL_SHIFT       (15U)
#define GMAC_DMA_CH1_TX_CONTROL_IPBL_WIDTH       (1U)
#define GMAC_DMA_CH1_TX_CONTROL_IPBL(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH1_TX_CONTROL_IPBL_SHIFT)) & GMAC_DMA_CH1_TX_CONTROL_IPBL_MASK)
#define GMAC_DMA_CH1_TX_CONTROL_TxPBL_MASK       (0x3F0000U)
#define GMAC_DMA_CH1_TX_CONTROL_TxPBL_SHIFT      (16U)
#define GMAC_DMA_CH1_TX_CONTROL_TxPBL_WIDTH      (6U)
#define GMAC_DMA_CH1_TX_CONTROL_TxPBL(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH1_TX_CONTROL_TxPBL_SHIFT)) & GMAC_DMA_CH1_TX_CONTROL_TxPBL_MASK)
#define GMAC_DMA_CH1_TX_CONTROL_TQOS_MASK        (0xF000000U)
#define GMAC_DMA_CH1_TX_CONTROL_TQOS_SHIFT       (24U)
#define GMAC_DMA_CH1_TX_CONTROL_TQOS_WIDTH       (4U)
#define GMAC_DMA_CH1_TX_CONTROL_TQOS(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH1_TX_CONTROL_TQOS_SHIFT)) & GMAC_DMA_CH1_TX_CONTROL_TQOS_MASK)
#define GMAC_DMA_CH1_TX_CONTROL_EDSE_MASK        (0x10000000U)
#define GMAC_DMA_CH1_TX_CONTROL_EDSE_SHIFT       (28U)
#define GMAC_DMA_CH1_TX_CONTROL_EDSE_WIDTH       (1U)
#define GMAC_DMA_CH1_TX_CONTROL_EDSE(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH1_TX_CONTROL_EDSE_SHIFT)) & GMAC_DMA_CH1_TX_CONTROL_EDSE_MASK)
/*! @} */

/*! @name DMA_CH1_RX_CONTROL -  */
/*! @{ */
#define GMAC_DMA_CH1_RX_CONTROL_SR_MASK          (0x1U)
#define GMAC_DMA_CH1_RX_CONTROL_SR_SHIFT         (0U)
#define GMAC_DMA_CH1_RX_CONTROL_SR_WIDTH         (1U)
#define GMAC_DMA_CH1_RX_CONTROL_SR(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH1_RX_CONTROL_SR_SHIFT)) & GMAC_DMA_CH1_RX_CONTROL_SR_MASK)
#define GMAC_DMA_CH1_RX_CONTROL_RBSZ_x_0_MASK    (0xEU)
#define GMAC_DMA_CH1_RX_CONTROL_RBSZ_x_0_SHIFT   (1U)
#define GMAC_DMA_CH1_RX_CONTROL_RBSZ_x_0_WIDTH   (3U)
#define GMAC_DMA_CH1_RX_CONTROL_RBSZ_x_0(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH1_RX_CONTROL_RBSZ_x_0_SHIFT)) & GMAC_DMA_CH1_RX_CONTROL_RBSZ_x_0_MASK)
#define GMAC_DMA_CH1_RX_CONTROL_RBSZ_13_y_MASK   (0x7FF0U)
#define GMAC_DMA_CH1_RX_CONTROL_RBSZ_13_y_SHIFT  (4U)
#define GMAC_DMA_CH1_RX_CONTROL_RBSZ_13_y_WIDTH  (11U)
#define GMAC_DMA_CH1_RX_CONTROL_RBSZ_13_y(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH1_RX_CONTROL_RBSZ_13_y_SHIFT)) & GMAC_DMA_CH1_RX_CONTROL_RBSZ_13_y_MASK)
#define GMAC_DMA_CH1_RX_CONTROL_RxPBL_MASK       (0x3F0000U)
#define GMAC_DMA_CH1_RX_CONTROL_RxPBL_SHIFT      (16U)
#define GMAC_DMA_CH1_RX_CONTROL_RxPBL_WIDTH      (6U)
#define GMAC_DMA_CH1_RX_CONTROL_RxPBL(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH1_RX_CONTROL_RxPBL_SHIFT)) & GMAC_DMA_CH1_RX_CONTROL_RxPBL_MASK)
#define GMAC_DMA_CH1_RX_CONTROL_RQOS_MASK        (0xF000000U)
#define GMAC_DMA_CH1_RX_CONTROL_RQOS_SHIFT       (24U)
#define GMAC_DMA_CH1_RX_CONTROL_RQOS_WIDTH       (4U)
#define GMAC_DMA_CH1_RX_CONTROL_RQOS(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH1_RX_CONTROL_RQOS_SHIFT)) & GMAC_DMA_CH1_RX_CONTROL_RQOS_MASK)
#define GMAC_DMA_CH1_RX_CONTROL_RPF_MASK         (0x80000000U)
#define GMAC_DMA_CH1_RX_CONTROL_RPF_SHIFT        (31U)
#define GMAC_DMA_CH1_RX_CONTROL_RPF_WIDTH        (1U)
#define GMAC_DMA_CH1_RX_CONTROL_RPF(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH1_RX_CONTROL_RPF_SHIFT)) & GMAC_DMA_CH1_RX_CONTROL_RPF_MASK)
/*! @} */

/*! @name DMA_CH1_TXDESC_LIST_ADDRESS -  */
/*! @{ */
#define GMAC_DMA_CH1_TXDESC_LIST_ADDRESS_TDESLA_MASK (0xFFFFFFF8U)
#define GMAC_DMA_CH1_TXDESC_LIST_ADDRESS_TDESLA_SHIFT (3U)
#define GMAC_DMA_CH1_TXDESC_LIST_ADDRESS_TDESLA_WIDTH (29U)
#define GMAC_DMA_CH1_TXDESC_LIST_ADDRESS_TDESLA(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH1_TXDESC_LIST_ADDRESS_TDESLA_SHIFT)) & GMAC_DMA_CH1_TXDESC_LIST_ADDRESS_TDESLA_MASK)
/*! @} */

/*! @name DMA_CH1_RXDESC_LIST_ADDRESS -  */
/*! @{ */
#define GMAC_DMA_CH1_RXDESC_LIST_ADDRESS_RDESLA_MASK (0xFFFFFFF8U)
#define GMAC_DMA_CH1_RXDESC_LIST_ADDRESS_RDESLA_SHIFT (3U)
#define GMAC_DMA_CH1_RXDESC_LIST_ADDRESS_RDESLA_WIDTH (29U)
#define GMAC_DMA_CH1_RXDESC_LIST_ADDRESS_RDESLA(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH1_RXDESC_LIST_ADDRESS_RDESLA_SHIFT)) & GMAC_DMA_CH1_RXDESC_LIST_ADDRESS_RDESLA_MASK)
/*! @} */

/*! @name DMA_CH1_TXDESC_TAIL_POINTER -  */
/*! @{ */
#define GMAC_DMA_CH1_TXDESC_TAIL_POINTER_TDTP_MASK (0xFFFFFFF8U)
#define GMAC_DMA_CH1_TXDESC_TAIL_POINTER_TDTP_SHIFT (3U)
#define GMAC_DMA_CH1_TXDESC_TAIL_POINTER_TDTP_WIDTH (29U)
#define GMAC_DMA_CH1_TXDESC_TAIL_POINTER_TDTP(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH1_TXDESC_TAIL_POINTER_TDTP_SHIFT)) & GMAC_DMA_CH1_TXDESC_TAIL_POINTER_TDTP_MASK)
/*! @} */

/*! @name DMA_CH1_RXDESC_TAIL_POINTER -  */
/*! @{ */
#define GMAC_DMA_CH1_RXDESC_TAIL_POINTER_RDTP_MASK (0xFFFFFFF8U)
#define GMAC_DMA_CH1_RXDESC_TAIL_POINTER_RDTP_SHIFT (3U)
#define GMAC_DMA_CH1_RXDESC_TAIL_POINTER_RDTP_WIDTH (29U)
#define GMAC_DMA_CH1_RXDESC_TAIL_POINTER_RDTP(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH1_RXDESC_TAIL_POINTER_RDTP_SHIFT)) & GMAC_DMA_CH1_RXDESC_TAIL_POINTER_RDTP_MASK)
/*! @} */

/*! @name DMA_CH1_TXDESC_RING_LENGTH -  */
/*! @{ */
#define GMAC_DMA_CH1_TXDESC_RING_LENGTH_TDRL_MASK (0x3FFU)
#define GMAC_DMA_CH1_TXDESC_RING_LENGTH_TDRL_SHIFT (0U)
#define GMAC_DMA_CH1_TXDESC_RING_LENGTH_TDRL_WIDTH (10U)
#define GMAC_DMA_CH1_TXDESC_RING_LENGTH_TDRL(x)  (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH1_TXDESC_RING_LENGTH_TDRL_SHIFT)) & GMAC_DMA_CH1_TXDESC_RING_LENGTH_TDRL_MASK)
/*! @} */

/*! @name DMA_CH1_RXDESC_RING_LENGTH -  */
/*! @{ */
#define GMAC_DMA_CH1_RXDESC_RING_LENGTH_RDRL_MASK (0x3FFU)
#define GMAC_DMA_CH1_RXDESC_RING_LENGTH_RDRL_SHIFT (0U)
#define GMAC_DMA_CH1_RXDESC_RING_LENGTH_RDRL_WIDTH (10U)
#define GMAC_DMA_CH1_RXDESC_RING_LENGTH_RDRL(x)  (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH1_RXDESC_RING_LENGTH_RDRL_SHIFT)) & GMAC_DMA_CH1_RXDESC_RING_LENGTH_RDRL_MASK)
/*! @} */

/*! @name DMA_CH1_INTERRUPT_ENABLE -  */
/*! @{ */
#define GMAC_DMA_CH1_INTERRUPT_ENABLE_TIE_MASK   (0x1U)
#define GMAC_DMA_CH1_INTERRUPT_ENABLE_TIE_SHIFT  (0U)
#define GMAC_DMA_CH1_INTERRUPT_ENABLE_TIE_WIDTH  (1U)
#define GMAC_DMA_CH1_INTERRUPT_ENABLE_TIE(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH1_INTERRUPT_ENABLE_TIE_SHIFT)) & GMAC_DMA_CH1_INTERRUPT_ENABLE_TIE_MASK)
#define GMAC_DMA_CH1_INTERRUPT_ENABLE_TXSE_MASK  (0x2U)
#define GMAC_DMA_CH1_INTERRUPT_ENABLE_TXSE_SHIFT (1U)
#define GMAC_DMA_CH1_INTERRUPT_ENABLE_TXSE_WIDTH (1U)
#define GMAC_DMA_CH1_INTERRUPT_ENABLE_TXSE(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH1_INTERRUPT_ENABLE_TXSE_SHIFT)) & GMAC_DMA_CH1_INTERRUPT_ENABLE_TXSE_MASK)
#define GMAC_DMA_CH1_INTERRUPT_ENABLE_TBUE_MASK  (0x4U)
#define GMAC_DMA_CH1_INTERRUPT_ENABLE_TBUE_SHIFT (2U)
#define GMAC_DMA_CH1_INTERRUPT_ENABLE_TBUE_WIDTH (1U)
#define GMAC_DMA_CH1_INTERRUPT_ENABLE_TBUE(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH1_INTERRUPT_ENABLE_TBUE_SHIFT)) & GMAC_DMA_CH1_INTERRUPT_ENABLE_TBUE_MASK)
#define GMAC_DMA_CH1_INTERRUPT_ENABLE_RIE_MASK   (0x40U)
#define GMAC_DMA_CH1_INTERRUPT_ENABLE_RIE_SHIFT  (6U)
#define GMAC_DMA_CH1_INTERRUPT_ENABLE_RIE_WIDTH  (1U)
#define GMAC_DMA_CH1_INTERRUPT_ENABLE_RIE(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH1_INTERRUPT_ENABLE_RIE_SHIFT)) & GMAC_DMA_CH1_INTERRUPT_ENABLE_RIE_MASK)
#define GMAC_DMA_CH1_INTERRUPT_ENABLE_RBUE_MASK  (0x80U)
#define GMAC_DMA_CH1_INTERRUPT_ENABLE_RBUE_SHIFT (7U)
#define GMAC_DMA_CH1_INTERRUPT_ENABLE_RBUE_WIDTH (1U)
#define GMAC_DMA_CH1_INTERRUPT_ENABLE_RBUE(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH1_INTERRUPT_ENABLE_RBUE_SHIFT)) & GMAC_DMA_CH1_INTERRUPT_ENABLE_RBUE_MASK)
#define GMAC_DMA_CH1_INTERRUPT_ENABLE_RSE_MASK   (0x100U)
#define GMAC_DMA_CH1_INTERRUPT_ENABLE_RSE_SHIFT  (8U)
#define GMAC_DMA_CH1_INTERRUPT_ENABLE_RSE_WIDTH  (1U)
#define GMAC_DMA_CH1_INTERRUPT_ENABLE_RSE(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH1_INTERRUPT_ENABLE_RSE_SHIFT)) & GMAC_DMA_CH1_INTERRUPT_ENABLE_RSE_MASK)
#define GMAC_DMA_CH1_INTERRUPT_ENABLE_RWTE_MASK  (0x200U)
#define GMAC_DMA_CH1_INTERRUPT_ENABLE_RWTE_SHIFT (9U)
#define GMAC_DMA_CH1_INTERRUPT_ENABLE_RWTE_WIDTH (1U)
#define GMAC_DMA_CH1_INTERRUPT_ENABLE_RWTE(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH1_INTERRUPT_ENABLE_RWTE_SHIFT)) & GMAC_DMA_CH1_INTERRUPT_ENABLE_RWTE_MASK)
#define GMAC_DMA_CH1_INTERRUPT_ENABLE_ETIE_MASK  (0x400U)
#define GMAC_DMA_CH1_INTERRUPT_ENABLE_ETIE_SHIFT (10U)
#define GMAC_DMA_CH1_INTERRUPT_ENABLE_ETIE_WIDTH (1U)
#define GMAC_DMA_CH1_INTERRUPT_ENABLE_ETIE(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH1_INTERRUPT_ENABLE_ETIE_SHIFT)) & GMAC_DMA_CH1_INTERRUPT_ENABLE_ETIE_MASK)
#define GMAC_DMA_CH1_INTERRUPT_ENABLE_ERIE_MASK  (0x800U)
#define GMAC_DMA_CH1_INTERRUPT_ENABLE_ERIE_SHIFT (11U)
#define GMAC_DMA_CH1_INTERRUPT_ENABLE_ERIE_WIDTH (1U)
#define GMAC_DMA_CH1_INTERRUPT_ENABLE_ERIE(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH1_INTERRUPT_ENABLE_ERIE_SHIFT)) & GMAC_DMA_CH1_INTERRUPT_ENABLE_ERIE_MASK)
#define GMAC_DMA_CH1_INTERRUPT_ENABLE_FBEE_MASK  (0x1000U)
#define GMAC_DMA_CH1_INTERRUPT_ENABLE_FBEE_SHIFT (12U)
#define GMAC_DMA_CH1_INTERRUPT_ENABLE_FBEE_WIDTH (1U)
#define GMAC_DMA_CH1_INTERRUPT_ENABLE_FBEE(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH1_INTERRUPT_ENABLE_FBEE_SHIFT)) & GMAC_DMA_CH1_INTERRUPT_ENABLE_FBEE_MASK)
#define GMAC_DMA_CH1_INTERRUPT_ENABLE_CDEE_MASK  (0x2000U)
#define GMAC_DMA_CH1_INTERRUPT_ENABLE_CDEE_SHIFT (13U)
#define GMAC_DMA_CH1_INTERRUPT_ENABLE_CDEE_WIDTH (1U)
#define GMAC_DMA_CH1_INTERRUPT_ENABLE_CDEE(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH1_INTERRUPT_ENABLE_CDEE_SHIFT)) & GMAC_DMA_CH1_INTERRUPT_ENABLE_CDEE_MASK)
#define GMAC_DMA_CH1_INTERRUPT_ENABLE_AIE_MASK   (0x4000U)
#define GMAC_DMA_CH1_INTERRUPT_ENABLE_AIE_SHIFT  (14U)
#define GMAC_DMA_CH1_INTERRUPT_ENABLE_AIE_WIDTH  (1U)
#define GMAC_DMA_CH1_INTERRUPT_ENABLE_AIE(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH1_INTERRUPT_ENABLE_AIE_SHIFT)) & GMAC_DMA_CH1_INTERRUPT_ENABLE_AIE_MASK)
#define GMAC_DMA_CH1_INTERRUPT_ENABLE_NIE_MASK   (0x8000U)
#define GMAC_DMA_CH1_INTERRUPT_ENABLE_NIE_SHIFT  (15U)
#define GMAC_DMA_CH1_INTERRUPT_ENABLE_NIE_WIDTH  (1U)
#define GMAC_DMA_CH1_INTERRUPT_ENABLE_NIE(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH1_INTERRUPT_ENABLE_NIE_SHIFT)) & GMAC_DMA_CH1_INTERRUPT_ENABLE_NIE_MASK)
/*! @} */

/*! @name DMA_CH1_RX_INTERRUPT_WATCHDOG_TIMER -  */
/*! @{ */
#define GMAC_DMA_CH1_RX_INTERRUPT_WATCHDOG_TIMER_RWT_MASK (0xFFU)
#define GMAC_DMA_CH1_RX_INTERRUPT_WATCHDOG_TIMER_RWT_SHIFT (0U)
#define GMAC_DMA_CH1_RX_INTERRUPT_WATCHDOG_TIMER_RWT_WIDTH (8U)
#define GMAC_DMA_CH1_RX_INTERRUPT_WATCHDOG_TIMER_RWT(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH1_RX_INTERRUPT_WATCHDOG_TIMER_RWT_SHIFT)) & GMAC_DMA_CH1_RX_INTERRUPT_WATCHDOG_TIMER_RWT_MASK)
#define GMAC_DMA_CH1_RX_INTERRUPT_WATCHDOG_TIMER_RWTU_MASK (0x30000U)
#define GMAC_DMA_CH1_RX_INTERRUPT_WATCHDOG_TIMER_RWTU_SHIFT (16U)
#define GMAC_DMA_CH1_RX_INTERRUPT_WATCHDOG_TIMER_RWTU_WIDTH (2U)
#define GMAC_DMA_CH1_RX_INTERRUPT_WATCHDOG_TIMER_RWTU(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH1_RX_INTERRUPT_WATCHDOG_TIMER_RWTU_SHIFT)) & GMAC_DMA_CH1_RX_INTERRUPT_WATCHDOG_TIMER_RWTU_MASK)
/*! @} */

/*! @name DMA_CH1_SLOT_FUNCTION_CONTROL_STATUS -  */
/*! @{ */
#define GMAC_DMA_CH1_SLOT_FUNCTION_CONTROL_STATUS_ESC_MASK (0x1U)
#define GMAC_DMA_CH1_SLOT_FUNCTION_CONTROL_STATUS_ESC_SHIFT (0U)
#define GMAC_DMA_CH1_SLOT_FUNCTION_CONTROL_STATUS_ESC_WIDTH (1U)
#define GMAC_DMA_CH1_SLOT_FUNCTION_CONTROL_STATUS_ESC(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH1_SLOT_FUNCTION_CONTROL_STATUS_ESC_SHIFT)) & GMAC_DMA_CH1_SLOT_FUNCTION_CONTROL_STATUS_ESC_MASK)
#define GMAC_DMA_CH1_SLOT_FUNCTION_CONTROL_STATUS_ASC_MASK (0x2U)
#define GMAC_DMA_CH1_SLOT_FUNCTION_CONTROL_STATUS_ASC_SHIFT (1U)
#define GMAC_DMA_CH1_SLOT_FUNCTION_CONTROL_STATUS_ASC_WIDTH (1U)
#define GMAC_DMA_CH1_SLOT_FUNCTION_CONTROL_STATUS_ASC(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH1_SLOT_FUNCTION_CONTROL_STATUS_ASC_SHIFT)) & GMAC_DMA_CH1_SLOT_FUNCTION_CONTROL_STATUS_ASC_MASK)
#define GMAC_DMA_CH1_SLOT_FUNCTION_CONTROL_STATUS_SIV_MASK (0xFFF0U)
#define GMAC_DMA_CH1_SLOT_FUNCTION_CONTROL_STATUS_SIV_SHIFT (4U)
#define GMAC_DMA_CH1_SLOT_FUNCTION_CONTROL_STATUS_SIV_WIDTH (12U)
#define GMAC_DMA_CH1_SLOT_FUNCTION_CONTROL_STATUS_SIV(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH1_SLOT_FUNCTION_CONTROL_STATUS_SIV_SHIFT)) & GMAC_DMA_CH1_SLOT_FUNCTION_CONTROL_STATUS_SIV_MASK)
#define GMAC_DMA_CH1_SLOT_FUNCTION_CONTROL_STATUS_RSN_MASK (0xF0000U)
#define GMAC_DMA_CH1_SLOT_FUNCTION_CONTROL_STATUS_RSN_SHIFT (16U)
#define GMAC_DMA_CH1_SLOT_FUNCTION_CONTROL_STATUS_RSN_WIDTH (4U)
#define GMAC_DMA_CH1_SLOT_FUNCTION_CONTROL_STATUS_RSN(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH1_SLOT_FUNCTION_CONTROL_STATUS_RSN_SHIFT)) & GMAC_DMA_CH1_SLOT_FUNCTION_CONTROL_STATUS_RSN_MASK)
/*! @} */

/*! @name DMA_CH1_CURRENT_APP_TXDESC -  */
/*! @{ */
#define GMAC_DMA_CH1_CURRENT_APP_TXDESC_CURTDESAPTR_MASK (0xFFFFFFFFU)
#define GMAC_DMA_CH1_CURRENT_APP_TXDESC_CURTDESAPTR_SHIFT (0U)
#define GMAC_DMA_CH1_CURRENT_APP_TXDESC_CURTDESAPTR_WIDTH (32U)
#define GMAC_DMA_CH1_CURRENT_APP_TXDESC_CURTDESAPTR(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH1_CURRENT_APP_TXDESC_CURTDESAPTR_SHIFT)) & GMAC_DMA_CH1_CURRENT_APP_TXDESC_CURTDESAPTR_MASK)
/*! @} */

/*! @name DMA_CH1_CURRENT_APP_RXDESC -  */
/*! @{ */
#define GMAC_DMA_CH1_CURRENT_APP_RXDESC_CURRDESAPTR_MASK (0xFFFFFFFFU)
#define GMAC_DMA_CH1_CURRENT_APP_RXDESC_CURRDESAPTR_SHIFT (0U)
#define GMAC_DMA_CH1_CURRENT_APP_RXDESC_CURRDESAPTR_WIDTH (32U)
#define GMAC_DMA_CH1_CURRENT_APP_RXDESC_CURRDESAPTR(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH1_CURRENT_APP_RXDESC_CURRDESAPTR_SHIFT)) & GMAC_DMA_CH1_CURRENT_APP_RXDESC_CURRDESAPTR_MASK)
/*! @} */

/*! @name DMA_CH1_CURRENT_APP_TXBUFFER -  */
/*! @{ */
#define GMAC_DMA_CH1_CURRENT_APP_TXBUFFER_CURTBUFAPTR_MASK (0xFFFFFFFFU)
#define GMAC_DMA_CH1_CURRENT_APP_TXBUFFER_CURTBUFAPTR_SHIFT (0U)
#define GMAC_DMA_CH1_CURRENT_APP_TXBUFFER_CURTBUFAPTR_WIDTH (32U)
#define GMAC_DMA_CH1_CURRENT_APP_TXBUFFER_CURTBUFAPTR(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH1_CURRENT_APP_TXBUFFER_CURTBUFAPTR_SHIFT)) & GMAC_DMA_CH1_CURRENT_APP_TXBUFFER_CURTBUFAPTR_MASK)
/*! @} */

/*! @name DMA_CH1_CURRENT_APP_RXBUFFER -  */
/*! @{ */
#define GMAC_DMA_CH1_CURRENT_APP_RXBUFFER_CURRBUFAPTR_MASK (0xFFFFFFFFU)
#define GMAC_DMA_CH1_CURRENT_APP_RXBUFFER_CURRBUFAPTR_SHIFT (0U)
#define GMAC_DMA_CH1_CURRENT_APP_RXBUFFER_CURRBUFAPTR_WIDTH (32U)
#define GMAC_DMA_CH1_CURRENT_APP_RXBUFFER_CURRBUFAPTR(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH1_CURRENT_APP_RXBUFFER_CURRBUFAPTR_SHIFT)) & GMAC_DMA_CH1_CURRENT_APP_RXBUFFER_CURRBUFAPTR_MASK)
/*! @} */

/*! @name DMA_CH1_STATUS -  */
/*! @{ */
#define GMAC_DMA_CH1_STATUS_TI_MASK              (0x1U)
#define GMAC_DMA_CH1_STATUS_TI_SHIFT             (0U)
#define GMAC_DMA_CH1_STATUS_TI_WIDTH             (1U)
#define GMAC_DMA_CH1_STATUS_TI(x)                (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH1_STATUS_TI_SHIFT)) & GMAC_DMA_CH1_STATUS_TI_MASK)
#define GMAC_DMA_CH1_STATUS_TPS_MASK             (0x2U)
#define GMAC_DMA_CH1_STATUS_TPS_SHIFT            (1U)
#define GMAC_DMA_CH1_STATUS_TPS_WIDTH            (1U)
#define GMAC_DMA_CH1_STATUS_TPS(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH1_STATUS_TPS_SHIFT)) & GMAC_DMA_CH1_STATUS_TPS_MASK)
#define GMAC_DMA_CH1_STATUS_TBU_MASK             (0x4U)
#define GMAC_DMA_CH1_STATUS_TBU_SHIFT            (2U)
#define GMAC_DMA_CH1_STATUS_TBU_WIDTH            (1U)
#define GMAC_DMA_CH1_STATUS_TBU(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH1_STATUS_TBU_SHIFT)) & GMAC_DMA_CH1_STATUS_TBU_MASK)
#define GMAC_DMA_CH1_STATUS_RI_MASK              (0x40U)
#define GMAC_DMA_CH1_STATUS_RI_SHIFT             (6U)
#define GMAC_DMA_CH1_STATUS_RI_WIDTH             (1U)
#define GMAC_DMA_CH1_STATUS_RI(x)                (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH1_STATUS_RI_SHIFT)) & GMAC_DMA_CH1_STATUS_RI_MASK)
#define GMAC_DMA_CH1_STATUS_RBU_MASK             (0x80U)
#define GMAC_DMA_CH1_STATUS_RBU_SHIFT            (7U)
#define GMAC_DMA_CH1_STATUS_RBU_WIDTH            (1U)
#define GMAC_DMA_CH1_STATUS_RBU(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH1_STATUS_RBU_SHIFT)) & GMAC_DMA_CH1_STATUS_RBU_MASK)
#define GMAC_DMA_CH1_STATUS_RPS_MASK             (0x100U)
#define GMAC_DMA_CH1_STATUS_RPS_SHIFT            (8U)
#define GMAC_DMA_CH1_STATUS_RPS_WIDTH            (1U)
#define GMAC_DMA_CH1_STATUS_RPS(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH1_STATUS_RPS_SHIFT)) & GMAC_DMA_CH1_STATUS_RPS_MASK)
#define GMAC_DMA_CH1_STATUS_RWT_MASK             (0x200U)
#define GMAC_DMA_CH1_STATUS_RWT_SHIFT            (9U)
#define GMAC_DMA_CH1_STATUS_RWT_WIDTH            (1U)
#define GMAC_DMA_CH1_STATUS_RWT(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH1_STATUS_RWT_SHIFT)) & GMAC_DMA_CH1_STATUS_RWT_MASK)
#define GMAC_DMA_CH1_STATUS_ETI_MASK             (0x400U)
#define GMAC_DMA_CH1_STATUS_ETI_SHIFT            (10U)
#define GMAC_DMA_CH1_STATUS_ETI_WIDTH            (1U)
#define GMAC_DMA_CH1_STATUS_ETI(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH1_STATUS_ETI_SHIFT)) & GMAC_DMA_CH1_STATUS_ETI_MASK)
#define GMAC_DMA_CH1_STATUS_ERI_MASK             (0x800U)
#define GMAC_DMA_CH1_STATUS_ERI_SHIFT            (11U)
#define GMAC_DMA_CH1_STATUS_ERI_WIDTH            (1U)
#define GMAC_DMA_CH1_STATUS_ERI(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH1_STATUS_ERI_SHIFT)) & GMAC_DMA_CH1_STATUS_ERI_MASK)
#define GMAC_DMA_CH1_STATUS_FBE_MASK             (0x1000U)
#define GMAC_DMA_CH1_STATUS_FBE_SHIFT            (12U)
#define GMAC_DMA_CH1_STATUS_FBE_WIDTH            (1U)
#define GMAC_DMA_CH1_STATUS_FBE(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH1_STATUS_FBE_SHIFT)) & GMAC_DMA_CH1_STATUS_FBE_MASK)
#define GMAC_DMA_CH1_STATUS_CDE_MASK             (0x2000U)
#define GMAC_DMA_CH1_STATUS_CDE_SHIFT            (13U)
#define GMAC_DMA_CH1_STATUS_CDE_WIDTH            (1U)
#define GMAC_DMA_CH1_STATUS_CDE(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH1_STATUS_CDE_SHIFT)) & GMAC_DMA_CH1_STATUS_CDE_MASK)
#define GMAC_DMA_CH1_STATUS_AIS_MASK             (0x4000U)
#define GMAC_DMA_CH1_STATUS_AIS_SHIFT            (14U)
#define GMAC_DMA_CH1_STATUS_AIS_WIDTH            (1U)
#define GMAC_DMA_CH1_STATUS_AIS(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH1_STATUS_AIS_SHIFT)) & GMAC_DMA_CH1_STATUS_AIS_MASK)
#define GMAC_DMA_CH1_STATUS_NIS_MASK             (0x8000U)
#define GMAC_DMA_CH1_STATUS_NIS_SHIFT            (15U)
#define GMAC_DMA_CH1_STATUS_NIS_WIDTH            (1U)
#define GMAC_DMA_CH1_STATUS_NIS(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH1_STATUS_NIS_SHIFT)) & GMAC_DMA_CH1_STATUS_NIS_MASK)
#define GMAC_DMA_CH1_STATUS_TEB_MASK             (0x70000U)
#define GMAC_DMA_CH1_STATUS_TEB_SHIFT            (16U)
#define GMAC_DMA_CH1_STATUS_TEB_WIDTH            (3U)
#define GMAC_DMA_CH1_STATUS_TEB(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH1_STATUS_TEB_SHIFT)) & GMAC_DMA_CH1_STATUS_TEB_MASK)
#define GMAC_DMA_CH1_STATUS_REB_MASK             (0x380000U)
#define GMAC_DMA_CH1_STATUS_REB_SHIFT            (19U)
#define GMAC_DMA_CH1_STATUS_REB_WIDTH            (3U)
#define GMAC_DMA_CH1_STATUS_REB(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH1_STATUS_REB_SHIFT)) & GMAC_DMA_CH1_STATUS_REB_MASK)
/*! @} */

/*! @name DMA_CH1_MISS_FRAME_CNT -  */
/*! @{ */
#define GMAC_DMA_CH1_MISS_FRAME_CNT_MFC_MASK     (0x7FFU)
#define GMAC_DMA_CH1_MISS_FRAME_CNT_MFC_SHIFT    (0U)
#define GMAC_DMA_CH1_MISS_FRAME_CNT_MFC_WIDTH    (11U)
#define GMAC_DMA_CH1_MISS_FRAME_CNT_MFC(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH1_MISS_FRAME_CNT_MFC_SHIFT)) & GMAC_DMA_CH1_MISS_FRAME_CNT_MFC_MASK)
#define GMAC_DMA_CH1_MISS_FRAME_CNT_MFCO_MASK    (0x8000U)
#define GMAC_DMA_CH1_MISS_FRAME_CNT_MFCO_SHIFT   (15U)
#define GMAC_DMA_CH1_MISS_FRAME_CNT_MFCO_WIDTH   (1U)
#define GMAC_DMA_CH1_MISS_FRAME_CNT_MFCO(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH1_MISS_FRAME_CNT_MFCO_SHIFT)) & GMAC_DMA_CH1_MISS_FRAME_CNT_MFCO_MASK)
/*! @} */

/*! @name DMA_CH1_RXP_ACCEPT_CNT -  */
/*! @{ */
#define GMAC_DMA_CH1_RXP_ACCEPT_CNT_RXPAC_MASK   (0x7FFFFFFFU)
#define GMAC_DMA_CH1_RXP_ACCEPT_CNT_RXPAC_SHIFT  (0U)
#define GMAC_DMA_CH1_RXP_ACCEPT_CNT_RXPAC_WIDTH  (31U)
#define GMAC_DMA_CH1_RXP_ACCEPT_CNT_RXPAC(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH1_RXP_ACCEPT_CNT_RXPAC_SHIFT)) & GMAC_DMA_CH1_RXP_ACCEPT_CNT_RXPAC_MASK)
#define GMAC_DMA_CH1_RXP_ACCEPT_CNT_RXPACOF_MASK (0x80000000U)
#define GMAC_DMA_CH1_RXP_ACCEPT_CNT_RXPACOF_SHIFT (31U)
#define GMAC_DMA_CH1_RXP_ACCEPT_CNT_RXPACOF_WIDTH (1U)
#define GMAC_DMA_CH1_RXP_ACCEPT_CNT_RXPACOF(x)   (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH1_RXP_ACCEPT_CNT_RXPACOF_SHIFT)) & GMAC_DMA_CH1_RXP_ACCEPT_CNT_RXPACOF_MASK)
/*! @} */

/*! @name DMA_CH1_RX_ERI_CNT -  */
/*! @{ */
#define GMAC_DMA_CH1_RX_ERI_CNT_ECNT_MASK        (0xFFFU)
#define GMAC_DMA_CH1_RX_ERI_CNT_ECNT_SHIFT       (0U)
#define GMAC_DMA_CH1_RX_ERI_CNT_ECNT_WIDTH       (12U)
#define GMAC_DMA_CH1_RX_ERI_CNT_ECNT(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH1_RX_ERI_CNT_ECNT_SHIFT)) & GMAC_DMA_CH1_RX_ERI_CNT_ECNT_MASK)
/*! @} */

/*! @name DMA_CH2_CONTROL -  */
/*! @{ */
#define GMAC_DMA_CH2_CONTROL_PBLx8_MASK          (0x10000U)
#define GMAC_DMA_CH2_CONTROL_PBLx8_SHIFT         (16U)
#define GMAC_DMA_CH2_CONTROL_PBLx8_WIDTH         (1U)
#define GMAC_DMA_CH2_CONTROL_PBLx8(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH2_CONTROL_PBLx8_SHIFT)) & GMAC_DMA_CH2_CONTROL_PBLx8_MASK)
#define GMAC_DMA_CH2_CONTROL_DSL_MASK            (0x1C0000U)
#define GMAC_DMA_CH2_CONTROL_DSL_SHIFT           (18U)
#define GMAC_DMA_CH2_CONTROL_DSL_WIDTH           (3U)
#define GMAC_DMA_CH2_CONTROL_DSL(x)              (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH2_CONTROL_DSL_SHIFT)) & GMAC_DMA_CH2_CONTROL_DSL_MASK)
#define GMAC_DMA_CH2_CONTROL_SPH_MASK            (0x1000000U)
#define GMAC_DMA_CH2_CONTROL_SPH_SHIFT           (24U)
#define GMAC_DMA_CH2_CONTROL_SPH_WIDTH           (1U)
#define GMAC_DMA_CH2_CONTROL_SPH(x)              (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH2_CONTROL_SPH_SHIFT)) & GMAC_DMA_CH2_CONTROL_SPH_MASK)
/*! @} */

/*! @name DMA_CH2_TX_CONTROL -  */
/*! @{ */
#define GMAC_DMA_CH2_TX_CONTROL_ST_MASK          (0x1U)
#define GMAC_DMA_CH2_TX_CONTROL_ST_SHIFT         (0U)
#define GMAC_DMA_CH2_TX_CONTROL_ST_WIDTH         (1U)
#define GMAC_DMA_CH2_TX_CONTROL_ST(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH2_TX_CONTROL_ST_SHIFT)) & GMAC_DMA_CH2_TX_CONTROL_ST_MASK)
#define GMAC_DMA_CH2_TX_CONTROL_OSF_MASK         (0x10U)
#define GMAC_DMA_CH2_TX_CONTROL_OSF_SHIFT        (4U)
#define GMAC_DMA_CH2_TX_CONTROL_OSF_WIDTH        (1U)
#define GMAC_DMA_CH2_TX_CONTROL_OSF(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH2_TX_CONTROL_OSF_SHIFT)) & GMAC_DMA_CH2_TX_CONTROL_OSF_MASK)
#define GMAC_DMA_CH2_TX_CONTROL_IPBL_MASK        (0x8000U)
#define GMAC_DMA_CH2_TX_CONTROL_IPBL_SHIFT       (15U)
#define GMAC_DMA_CH2_TX_CONTROL_IPBL_WIDTH       (1U)
#define GMAC_DMA_CH2_TX_CONTROL_IPBL(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH2_TX_CONTROL_IPBL_SHIFT)) & GMAC_DMA_CH2_TX_CONTROL_IPBL_MASK)
#define GMAC_DMA_CH2_TX_CONTROL_TxPBL_MASK       (0x3F0000U)
#define GMAC_DMA_CH2_TX_CONTROL_TxPBL_SHIFT      (16U)
#define GMAC_DMA_CH2_TX_CONTROL_TxPBL_WIDTH      (6U)
#define GMAC_DMA_CH2_TX_CONTROL_TxPBL(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH2_TX_CONTROL_TxPBL_SHIFT)) & GMAC_DMA_CH2_TX_CONTROL_TxPBL_MASK)
#define GMAC_DMA_CH2_TX_CONTROL_TQOS_MASK        (0xF000000U)
#define GMAC_DMA_CH2_TX_CONTROL_TQOS_SHIFT       (24U)
#define GMAC_DMA_CH2_TX_CONTROL_TQOS_WIDTH       (4U)
#define GMAC_DMA_CH2_TX_CONTROL_TQOS(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH2_TX_CONTROL_TQOS_SHIFT)) & GMAC_DMA_CH2_TX_CONTROL_TQOS_MASK)
#define GMAC_DMA_CH2_TX_CONTROL_EDSE_MASK        (0x10000000U)
#define GMAC_DMA_CH2_TX_CONTROL_EDSE_SHIFT       (28U)
#define GMAC_DMA_CH2_TX_CONTROL_EDSE_WIDTH       (1U)
#define GMAC_DMA_CH2_TX_CONTROL_EDSE(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH2_TX_CONTROL_EDSE_SHIFT)) & GMAC_DMA_CH2_TX_CONTROL_EDSE_MASK)
/*! @} */

/*! @name DMA_CH2_RX_CONTROL -  */
/*! @{ */
#define GMAC_DMA_CH2_RX_CONTROL_SR_MASK          (0x1U)
#define GMAC_DMA_CH2_RX_CONTROL_SR_SHIFT         (0U)
#define GMAC_DMA_CH2_RX_CONTROL_SR_WIDTH         (1U)
#define GMAC_DMA_CH2_RX_CONTROL_SR(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH2_RX_CONTROL_SR_SHIFT)) & GMAC_DMA_CH2_RX_CONTROL_SR_MASK)
#define GMAC_DMA_CH2_RX_CONTROL_RBSZ_x_0_MASK    (0xEU)
#define GMAC_DMA_CH2_RX_CONTROL_RBSZ_x_0_SHIFT   (1U)
#define GMAC_DMA_CH2_RX_CONTROL_RBSZ_x_0_WIDTH   (3U)
#define GMAC_DMA_CH2_RX_CONTROL_RBSZ_x_0(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH2_RX_CONTROL_RBSZ_x_0_SHIFT)) & GMAC_DMA_CH2_RX_CONTROL_RBSZ_x_0_MASK)
#define GMAC_DMA_CH2_RX_CONTROL_RBSZ_13_y_MASK   (0x7FF0U)
#define GMAC_DMA_CH2_RX_CONTROL_RBSZ_13_y_SHIFT  (4U)
#define GMAC_DMA_CH2_RX_CONTROL_RBSZ_13_y_WIDTH  (11U)
#define GMAC_DMA_CH2_RX_CONTROL_RBSZ_13_y(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH2_RX_CONTROL_RBSZ_13_y_SHIFT)) & GMAC_DMA_CH2_RX_CONTROL_RBSZ_13_y_MASK)
#define GMAC_DMA_CH2_RX_CONTROL_RxPBL_MASK       (0x3F0000U)
#define GMAC_DMA_CH2_RX_CONTROL_RxPBL_SHIFT      (16U)
#define GMAC_DMA_CH2_RX_CONTROL_RxPBL_WIDTH      (6U)
#define GMAC_DMA_CH2_RX_CONTROL_RxPBL(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH2_RX_CONTROL_RxPBL_SHIFT)) & GMAC_DMA_CH2_RX_CONTROL_RxPBL_MASK)
#define GMAC_DMA_CH2_RX_CONTROL_RQOS_MASK        (0xF000000U)
#define GMAC_DMA_CH2_RX_CONTROL_RQOS_SHIFT       (24U)
#define GMAC_DMA_CH2_RX_CONTROL_RQOS_WIDTH       (4U)
#define GMAC_DMA_CH2_RX_CONTROL_RQOS(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH2_RX_CONTROL_RQOS_SHIFT)) & GMAC_DMA_CH2_RX_CONTROL_RQOS_MASK)
#define GMAC_DMA_CH2_RX_CONTROL_RPF_MASK         (0x80000000U)
#define GMAC_DMA_CH2_RX_CONTROL_RPF_SHIFT        (31U)
#define GMAC_DMA_CH2_RX_CONTROL_RPF_WIDTH        (1U)
#define GMAC_DMA_CH2_RX_CONTROL_RPF(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH2_RX_CONTROL_RPF_SHIFT)) & GMAC_DMA_CH2_RX_CONTROL_RPF_MASK)
/*! @} */

/*! @name DMA_CH2_TXDESC_LIST_ADDRESS -  */
/*! @{ */
#define GMAC_DMA_CH2_TXDESC_LIST_ADDRESS_TDESLA_MASK (0xFFFFFFF8U)
#define GMAC_DMA_CH2_TXDESC_LIST_ADDRESS_TDESLA_SHIFT (3U)
#define GMAC_DMA_CH2_TXDESC_LIST_ADDRESS_TDESLA_WIDTH (29U)
#define GMAC_DMA_CH2_TXDESC_LIST_ADDRESS_TDESLA(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH2_TXDESC_LIST_ADDRESS_TDESLA_SHIFT)) & GMAC_DMA_CH2_TXDESC_LIST_ADDRESS_TDESLA_MASK)
/*! @} */

/*! @name DMA_CH2_RXDESC_LIST_ADDRESS -  */
/*! @{ */
#define GMAC_DMA_CH2_RXDESC_LIST_ADDRESS_RDESLA_MASK (0xFFFFFFF8U)
#define GMAC_DMA_CH2_RXDESC_LIST_ADDRESS_RDESLA_SHIFT (3U)
#define GMAC_DMA_CH2_RXDESC_LIST_ADDRESS_RDESLA_WIDTH (29U)
#define GMAC_DMA_CH2_RXDESC_LIST_ADDRESS_RDESLA(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH2_RXDESC_LIST_ADDRESS_RDESLA_SHIFT)) & GMAC_DMA_CH2_RXDESC_LIST_ADDRESS_RDESLA_MASK)
/*! @} */

/*! @name DMA_CH2_TXDESC_TAIL_POINTER -  */
/*! @{ */
#define GMAC_DMA_CH2_TXDESC_TAIL_POINTER_TDTP_MASK (0xFFFFFFF8U)
#define GMAC_DMA_CH2_TXDESC_TAIL_POINTER_TDTP_SHIFT (3U)
#define GMAC_DMA_CH2_TXDESC_TAIL_POINTER_TDTP_WIDTH (29U)
#define GMAC_DMA_CH2_TXDESC_TAIL_POINTER_TDTP(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH2_TXDESC_TAIL_POINTER_TDTP_SHIFT)) & GMAC_DMA_CH2_TXDESC_TAIL_POINTER_TDTP_MASK)
/*! @} */

/*! @name DMA_CH2_RXDESC_TAIL_POINTER -  */
/*! @{ */
#define GMAC_DMA_CH2_RXDESC_TAIL_POINTER_RDTP_MASK (0xFFFFFFF8U)
#define GMAC_DMA_CH2_RXDESC_TAIL_POINTER_RDTP_SHIFT (3U)
#define GMAC_DMA_CH2_RXDESC_TAIL_POINTER_RDTP_WIDTH (29U)
#define GMAC_DMA_CH2_RXDESC_TAIL_POINTER_RDTP(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH2_RXDESC_TAIL_POINTER_RDTP_SHIFT)) & GMAC_DMA_CH2_RXDESC_TAIL_POINTER_RDTP_MASK)
/*! @} */

/*! @name DMA_CH2_TXDESC_RING_LENGTH -  */
/*! @{ */
#define GMAC_DMA_CH2_TXDESC_RING_LENGTH_TDRL_MASK (0x3FFU)
#define GMAC_DMA_CH2_TXDESC_RING_LENGTH_TDRL_SHIFT (0U)
#define GMAC_DMA_CH2_TXDESC_RING_LENGTH_TDRL_WIDTH (10U)
#define GMAC_DMA_CH2_TXDESC_RING_LENGTH_TDRL(x)  (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH2_TXDESC_RING_LENGTH_TDRL_SHIFT)) & GMAC_DMA_CH2_TXDESC_RING_LENGTH_TDRL_MASK)
/*! @} */

/*! @name DMA_CH2_RXDESC_RING_LENGTH -  */
/*! @{ */
#define GMAC_DMA_CH2_RXDESC_RING_LENGTH_RDRL_MASK (0x3FFU)
#define GMAC_DMA_CH2_RXDESC_RING_LENGTH_RDRL_SHIFT (0U)
#define GMAC_DMA_CH2_RXDESC_RING_LENGTH_RDRL_WIDTH (10U)
#define GMAC_DMA_CH2_RXDESC_RING_LENGTH_RDRL(x)  (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH2_RXDESC_RING_LENGTH_RDRL_SHIFT)) & GMAC_DMA_CH2_RXDESC_RING_LENGTH_RDRL_MASK)
/*! @} */

/*! @name DMA_CH2_INTERRUPT_ENABLE -  */
/*! @{ */
#define GMAC_DMA_CH2_INTERRUPT_ENABLE_TIE_MASK   (0x1U)
#define GMAC_DMA_CH2_INTERRUPT_ENABLE_TIE_SHIFT  (0U)
#define GMAC_DMA_CH2_INTERRUPT_ENABLE_TIE_WIDTH  (1U)
#define GMAC_DMA_CH2_INTERRUPT_ENABLE_TIE(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH2_INTERRUPT_ENABLE_TIE_SHIFT)) & GMAC_DMA_CH2_INTERRUPT_ENABLE_TIE_MASK)
#define GMAC_DMA_CH2_INTERRUPT_ENABLE_TXSE_MASK  (0x2U)
#define GMAC_DMA_CH2_INTERRUPT_ENABLE_TXSE_SHIFT (1U)
#define GMAC_DMA_CH2_INTERRUPT_ENABLE_TXSE_WIDTH (1U)
#define GMAC_DMA_CH2_INTERRUPT_ENABLE_TXSE(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH2_INTERRUPT_ENABLE_TXSE_SHIFT)) & GMAC_DMA_CH2_INTERRUPT_ENABLE_TXSE_MASK)
#define GMAC_DMA_CH2_INTERRUPT_ENABLE_TBUE_MASK  (0x4U)
#define GMAC_DMA_CH2_INTERRUPT_ENABLE_TBUE_SHIFT (2U)
#define GMAC_DMA_CH2_INTERRUPT_ENABLE_TBUE_WIDTH (1U)
#define GMAC_DMA_CH2_INTERRUPT_ENABLE_TBUE(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH2_INTERRUPT_ENABLE_TBUE_SHIFT)) & GMAC_DMA_CH2_INTERRUPT_ENABLE_TBUE_MASK)
#define GMAC_DMA_CH2_INTERRUPT_ENABLE_RIE_MASK   (0x40U)
#define GMAC_DMA_CH2_INTERRUPT_ENABLE_RIE_SHIFT  (6U)
#define GMAC_DMA_CH2_INTERRUPT_ENABLE_RIE_WIDTH  (1U)
#define GMAC_DMA_CH2_INTERRUPT_ENABLE_RIE(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH2_INTERRUPT_ENABLE_RIE_SHIFT)) & GMAC_DMA_CH2_INTERRUPT_ENABLE_RIE_MASK)
#define GMAC_DMA_CH2_INTERRUPT_ENABLE_RBUE_MASK  (0x80U)
#define GMAC_DMA_CH2_INTERRUPT_ENABLE_RBUE_SHIFT (7U)
#define GMAC_DMA_CH2_INTERRUPT_ENABLE_RBUE_WIDTH (1U)
#define GMAC_DMA_CH2_INTERRUPT_ENABLE_RBUE(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH2_INTERRUPT_ENABLE_RBUE_SHIFT)) & GMAC_DMA_CH2_INTERRUPT_ENABLE_RBUE_MASK)
#define GMAC_DMA_CH2_INTERRUPT_ENABLE_RSE_MASK   (0x100U)
#define GMAC_DMA_CH2_INTERRUPT_ENABLE_RSE_SHIFT  (8U)
#define GMAC_DMA_CH2_INTERRUPT_ENABLE_RSE_WIDTH  (1U)
#define GMAC_DMA_CH2_INTERRUPT_ENABLE_RSE(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH2_INTERRUPT_ENABLE_RSE_SHIFT)) & GMAC_DMA_CH2_INTERRUPT_ENABLE_RSE_MASK)
#define GMAC_DMA_CH2_INTERRUPT_ENABLE_RWTE_MASK  (0x200U)
#define GMAC_DMA_CH2_INTERRUPT_ENABLE_RWTE_SHIFT (9U)
#define GMAC_DMA_CH2_INTERRUPT_ENABLE_RWTE_WIDTH (1U)
#define GMAC_DMA_CH2_INTERRUPT_ENABLE_RWTE(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH2_INTERRUPT_ENABLE_RWTE_SHIFT)) & GMAC_DMA_CH2_INTERRUPT_ENABLE_RWTE_MASK)
#define GMAC_DMA_CH2_INTERRUPT_ENABLE_ETIE_MASK  (0x400U)
#define GMAC_DMA_CH2_INTERRUPT_ENABLE_ETIE_SHIFT (10U)
#define GMAC_DMA_CH2_INTERRUPT_ENABLE_ETIE_WIDTH (1U)
#define GMAC_DMA_CH2_INTERRUPT_ENABLE_ETIE(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH2_INTERRUPT_ENABLE_ETIE_SHIFT)) & GMAC_DMA_CH2_INTERRUPT_ENABLE_ETIE_MASK)
#define GMAC_DMA_CH2_INTERRUPT_ENABLE_ERIE_MASK  (0x800U)
#define GMAC_DMA_CH2_INTERRUPT_ENABLE_ERIE_SHIFT (11U)
#define GMAC_DMA_CH2_INTERRUPT_ENABLE_ERIE_WIDTH (1U)
#define GMAC_DMA_CH2_INTERRUPT_ENABLE_ERIE(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH2_INTERRUPT_ENABLE_ERIE_SHIFT)) & GMAC_DMA_CH2_INTERRUPT_ENABLE_ERIE_MASK)
#define GMAC_DMA_CH2_INTERRUPT_ENABLE_FBEE_MASK  (0x1000U)
#define GMAC_DMA_CH2_INTERRUPT_ENABLE_FBEE_SHIFT (12U)
#define GMAC_DMA_CH2_INTERRUPT_ENABLE_FBEE_WIDTH (1U)
#define GMAC_DMA_CH2_INTERRUPT_ENABLE_FBEE(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH2_INTERRUPT_ENABLE_FBEE_SHIFT)) & GMAC_DMA_CH2_INTERRUPT_ENABLE_FBEE_MASK)
#define GMAC_DMA_CH2_INTERRUPT_ENABLE_CDEE_MASK  (0x2000U)
#define GMAC_DMA_CH2_INTERRUPT_ENABLE_CDEE_SHIFT (13U)
#define GMAC_DMA_CH2_INTERRUPT_ENABLE_CDEE_WIDTH (1U)
#define GMAC_DMA_CH2_INTERRUPT_ENABLE_CDEE(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH2_INTERRUPT_ENABLE_CDEE_SHIFT)) & GMAC_DMA_CH2_INTERRUPT_ENABLE_CDEE_MASK)
#define GMAC_DMA_CH2_INTERRUPT_ENABLE_AIE_MASK   (0x4000U)
#define GMAC_DMA_CH2_INTERRUPT_ENABLE_AIE_SHIFT  (14U)
#define GMAC_DMA_CH2_INTERRUPT_ENABLE_AIE_WIDTH  (1U)
#define GMAC_DMA_CH2_INTERRUPT_ENABLE_AIE(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH2_INTERRUPT_ENABLE_AIE_SHIFT)) & GMAC_DMA_CH2_INTERRUPT_ENABLE_AIE_MASK)
#define GMAC_DMA_CH2_INTERRUPT_ENABLE_NIE_MASK   (0x8000U)
#define GMAC_DMA_CH2_INTERRUPT_ENABLE_NIE_SHIFT  (15U)
#define GMAC_DMA_CH2_INTERRUPT_ENABLE_NIE_WIDTH  (1U)
#define GMAC_DMA_CH2_INTERRUPT_ENABLE_NIE(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH2_INTERRUPT_ENABLE_NIE_SHIFT)) & GMAC_DMA_CH2_INTERRUPT_ENABLE_NIE_MASK)
/*! @} */

/*! @name DMA_CH2_RX_INTERRUPT_WATCHDOG_TIMER -  */
/*! @{ */
#define GMAC_DMA_CH2_RX_INTERRUPT_WATCHDOG_TIMER_RWT_MASK (0xFFU)
#define GMAC_DMA_CH2_RX_INTERRUPT_WATCHDOG_TIMER_RWT_SHIFT (0U)
#define GMAC_DMA_CH2_RX_INTERRUPT_WATCHDOG_TIMER_RWT_WIDTH (8U)
#define GMAC_DMA_CH2_RX_INTERRUPT_WATCHDOG_TIMER_RWT(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH2_RX_INTERRUPT_WATCHDOG_TIMER_RWT_SHIFT)) & GMAC_DMA_CH2_RX_INTERRUPT_WATCHDOG_TIMER_RWT_MASK)
#define GMAC_DMA_CH2_RX_INTERRUPT_WATCHDOG_TIMER_RWTU_MASK (0x30000U)
#define GMAC_DMA_CH2_RX_INTERRUPT_WATCHDOG_TIMER_RWTU_SHIFT (16U)
#define GMAC_DMA_CH2_RX_INTERRUPT_WATCHDOG_TIMER_RWTU_WIDTH (2U)
#define GMAC_DMA_CH2_RX_INTERRUPT_WATCHDOG_TIMER_RWTU(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH2_RX_INTERRUPT_WATCHDOG_TIMER_RWTU_SHIFT)) & GMAC_DMA_CH2_RX_INTERRUPT_WATCHDOG_TIMER_RWTU_MASK)
/*! @} */

/*! @name DMA_CH2_SLOT_FUNCTION_CONTROL_STATUS -  */
/*! @{ */
#define GMAC_DMA_CH2_SLOT_FUNCTION_CONTROL_STATUS_ESC_MASK (0x1U)
#define GMAC_DMA_CH2_SLOT_FUNCTION_CONTROL_STATUS_ESC_SHIFT (0U)
#define GMAC_DMA_CH2_SLOT_FUNCTION_CONTROL_STATUS_ESC_WIDTH (1U)
#define GMAC_DMA_CH2_SLOT_FUNCTION_CONTROL_STATUS_ESC(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH2_SLOT_FUNCTION_CONTROL_STATUS_ESC_SHIFT)) & GMAC_DMA_CH2_SLOT_FUNCTION_CONTROL_STATUS_ESC_MASK)
#define GMAC_DMA_CH2_SLOT_FUNCTION_CONTROL_STATUS_ASC_MASK (0x2U)
#define GMAC_DMA_CH2_SLOT_FUNCTION_CONTROL_STATUS_ASC_SHIFT (1U)
#define GMAC_DMA_CH2_SLOT_FUNCTION_CONTROL_STATUS_ASC_WIDTH (1U)
#define GMAC_DMA_CH2_SLOT_FUNCTION_CONTROL_STATUS_ASC(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH2_SLOT_FUNCTION_CONTROL_STATUS_ASC_SHIFT)) & GMAC_DMA_CH2_SLOT_FUNCTION_CONTROL_STATUS_ASC_MASK)
#define GMAC_DMA_CH2_SLOT_FUNCTION_CONTROL_STATUS_SIV_MASK (0xFFF0U)
#define GMAC_DMA_CH2_SLOT_FUNCTION_CONTROL_STATUS_SIV_SHIFT (4U)
#define GMAC_DMA_CH2_SLOT_FUNCTION_CONTROL_STATUS_SIV_WIDTH (12U)
#define GMAC_DMA_CH2_SLOT_FUNCTION_CONTROL_STATUS_SIV(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH2_SLOT_FUNCTION_CONTROL_STATUS_SIV_SHIFT)) & GMAC_DMA_CH2_SLOT_FUNCTION_CONTROL_STATUS_SIV_MASK)
#define GMAC_DMA_CH2_SLOT_FUNCTION_CONTROL_STATUS_RSN_MASK (0xF0000U)
#define GMAC_DMA_CH2_SLOT_FUNCTION_CONTROL_STATUS_RSN_SHIFT (16U)
#define GMAC_DMA_CH2_SLOT_FUNCTION_CONTROL_STATUS_RSN_WIDTH (4U)
#define GMAC_DMA_CH2_SLOT_FUNCTION_CONTROL_STATUS_RSN(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH2_SLOT_FUNCTION_CONTROL_STATUS_RSN_SHIFT)) & GMAC_DMA_CH2_SLOT_FUNCTION_CONTROL_STATUS_RSN_MASK)
/*! @} */

/*! @name DMA_CH2_CURRENT_APP_TXDESC -  */
/*! @{ */
#define GMAC_DMA_CH2_CURRENT_APP_TXDESC_CURTDESAPTR_MASK (0xFFFFFFFFU)
#define GMAC_DMA_CH2_CURRENT_APP_TXDESC_CURTDESAPTR_SHIFT (0U)
#define GMAC_DMA_CH2_CURRENT_APP_TXDESC_CURTDESAPTR_WIDTH (32U)
#define GMAC_DMA_CH2_CURRENT_APP_TXDESC_CURTDESAPTR(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH2_CURRENT_APP_TXDESC_CURTDESAPTR_SHIFT)) & GMAC_DMA_CH2_CURRENT_APP_TXDESC_CURTDESAPTR_MASK)
/*! @} */

/*! @name DMA_CH2_CURRENT_APP_RXDESC -  */
/*! @{ */
#define GMAC_DMA_CH2_CURRENT_APP_RXDESC_CURRDESAPTR_MASK (0xFFFFFFFFU)
#define GMAC_DMA_CH2_CURRENT_APP_RXDESC_CURRDESAPTR_SHIFT (0U)
#define GMAC_DMA_CH2_CURRENT_APP_RXDESC_CURRDESAPTR_WIDTH (32U)
#define GMAC_DMA_CH2_CURRENT_APP_RXDESC_CURRDESAPTR(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH2_CURRENT_APP_RXDESC_CURRDESAPTR_SHIFT)) & GMAC_DMA_CH2_CURRENT_APP_RXDESC_CURRDESAPTR_MASK)
/*! @} */

/*! @name DMA_CH2_CURRENT_APP_TXBUFFER -  */
/*! @{ */
#define GMAC_DMA_CH2_CURRENT_APP_TXBUFFER_CURTBUFAPTR_MASK (0xFFFFFFFFU)
#define GMAC_DMA_CH2_CURRENT_APP_TXBUFFER_CURTBUFAPTR_SHIFT (0U)
#define GMAC_DMA_CH2_CURRENT_APP_TXBUFFER_CURTBUFAPTR_WIDTH (32U)
#define GMAC_DMA_CH2_CURRENT_APP_TXBUFFER_CURTBUFAPTR(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH2_CURRENT_APP_TXBUFFER_CURTBUFAPTR_SHIFT)) & GMAC_DMA_CH2_CURRENT_APP_TXBUFFER_CURTBUFAPTR_MASK)
/*! @} */

/*! @name DMA_CH2_CURRENT_APP_RXBUFFER -  */
/*! @{ */
#define GMAC_DMA_CH2_CURRENT_APP_RXBUFFER_CURRBUFAPTR_MASK (0xFFFFFFFFU)
#define GMAC_DMA_CH2_CURRENT_APP_RXBUFFER_CURRBUFAPTR_SHIFT (0U)
#define GMAC_DMA_CH2_CURRENT_APP_RXBUFFER_CURRBUFAPTR_WIDTH (32U)
#define GMAC_DMA_CH2_CURRENT_APP_RXBUFFER_CURRBUFAPTR(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH2_CURRENT_APP_RXBUFFER_CURRBUFAPTR_SHIFT)) & GMAC_DMA_CH2_CURRENT_APP_RXBUFFER_CURRBUFAPTR_MASK)
/*! @} */

/*! @name DMA_CH2_STATUS -  */
/*! @{ */
#define GMAC_DMA_CH2_STATUS_TI_MASK              (0x1U)
#define GMAC_DMA_CH2_STATUS_TI_SHIFT             (0U)
#define GMAC_DMA_CH2_STATUS_TI_WIDTH             (1U)
#define GMAC_DMA_CH2_STATUS_TI(x)                (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH2_STATUS_TI_SHIFT)) & GMAC_DMA_CH2_STATUS_TI_MASK)
#define GMAC_DMA_CH2_STATUS_TPS_MASK             (0x2U)
#define GMAC_DMA_CH2_STATUS_TPS_SHIFT            (1U)
#define GMAC_DMA_CH2_STATUS_TPS_WIDTH            (1U)
#define GMAC_DMA_CH2_STATUS_TPS(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH2_STATUS_TPS_SHIFT)) & GMAC_DMA_CH2_STATUS_TPS_MASK)
#define GMAC_DMA_CH2_STATUS_TBU_MASK             (0x4U)
#define GMAC_DMA_CH2_STATUS_TBU_SHIFT            (2U)
#define GMAC_DMA_CH2_STATUS_TBU_WIDTH            (1U)
#define GMAC_DMA_CH2_STATUS_TBU(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH2_STATUS_TBU_SHIFT)) & GMAC_DMA_CH2_STATUS_TBU_MASK)
#define GMAC_DMA_CH2_STATUS_RI_MASK              (0x40U)
#define GMAC_DMA_CH2_STATUS_RI_SHIFT             (6U)
#define GMAC_DMA_CH2_STATUS_RI_WIDTH             (1U)
#define GMAC_DMA_CH2_STATUS_RI(x)                (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH2_STATUS_RI_SHIFT)) & GMAC_DMA_CH2_STATUS_RI_MASK)
#define GMAC_DMA_CH2_STATUS_RBU_MASK             (0x80U)
#define GMAC_DMA_CH2_STATUS_RBU_SHIFT            (7U)
#define GMAC_DMA_CH2_STATUS_RBU_WIDTH            (1U)
#define GMAC_DMA_CH2_STATUS_RBU(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH2_STATUS_RBU_SHIFT)) & GMAC_DMA_CH2_STATUS_RBU_MASK)
#define GMAC_DMA_CH2_STATUS_RPS_MASK             (0x100U)
#define GMAC_DMA_CH2_STATUS_RPS_SHIFT            (8U)
#define GMAC_DMA_CH2_STATUS_RPS_WIDTH            (1U)
#define GMAC_DMA_CH2_STATUS_RPS(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH2_STATUS_RPS_SHIFT)) & GMAC_DMA_CH2_STATUS_RPS_MASK)
#define GMAC_DMA_CH2_STATUS_RWT_MASK             (0x200U)
#define GMAC_DMA_CH2_STATUS_RWT_SHIFT            (9U)
#define GMAC_DMA_CH2_STATUS_RWT_WIDTH            (1U)
#define GMAC_DMA_CH2_STATUS_RWT(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH2_STATUS_RWT_SHIFT)) & GMAC_DMA_CH2_STATUS_RWT_MASK)
#define GMAC_DMA_CH2_STATUS_ETI_MASK             (0x400U)
#define GMAC_DMA_CH2_STATUS_ETI_SHIFT            (10U)
#define GMAC_DMA_CH2_STATUS_ETI_WIDTH            (1U)
#define GMAC_DMA_CH2_STATUS_ETI(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH2_STATUS_ETI_SHIFT)) & GMAC_DMA_CH2_STATUS_ETI_MASK)
#define GMAC_DMA_CH2_STATUS_ERI_MASK             (0x800U)
#define GMAC_DMA_CH2_STATUS_ERI_SHIFT            (11U)
#define GMAC_DMA_CH2_STATUS_ERI_WIDTH            (1U)
#define GMAC_DMA_CH2_STATUS_ERI(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH2_STATUS_ERI_SHIFT)) & GMAC_DMA_CH2_STATUS_ERI_MASK)
#define GMAC_DMA_CH2_STATUS_FBE_MASK             (0x1000U)
#define GMAC_DMA_CH2_STATUS_FBE_SHIFT            (12U)
#define GMAC_DMA_CH2_STATUS_FBE_WIDTH            (1U)
#define GMAC_DMA_CH2_STATUS_FBE(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH2_STATUS_FBE_SHIFT)) & GMAC_DMA_CH2_STATUS_FBE_MASK)
#define GMAC_DMA_CH2_STATUS_CDE_MASK             (0x2000U)
#define GMAC_DMA_CH2_STATUS_CDE_SHIFT            (13U)
#define GMAC_DMA_CH2_STATUS_CDE_WIDTH            (1U)
#define GMAC_DMA_CH2_STATUS_CDE(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH2_STATUS_CDE_SHIFT)) & GMAC_DMA_CH2_STATUS_CDE_MASK)
#define GMAC_DMA_CH2_STATUS_AIS_MASK             (0x4000U)
#define GMAC_DMA_CH2_STATUS_AIS_SHIFT            (14U)
#define GMAC_DMA_CH2_STATUS_AIS_WIDTH            (1U)
#define GMAC_DMA_CH2_STATUS_AIS(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH2_STATUS_AIS_SHIFT)) & GMAC_DMA_CH2_STATUS_AIS_MASK)
#define GMAC_DMA_CH2_STATUS_NIS_MASK             (0x8000U)
#define GMAC_DMA_CH2_STATUS_NIS_SHIFT            (15U)
#define GMAC_DMA_CH2_STATUS_NIS_WIDTH            (1U)
#define GMAC_DMA_CH2_STATUS_NIS(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH2_STATUS_NIS_SHIFT)) & GMAC_DMA_CH2_STATUS_NIS_MASK)
#define GMAC_DMA_CH2_STATUS_TEB_MASK             (0x70000U)
#define GMAC_DMA_CH2_STATUS_TEB_SHIFT            (16U)
#define GMAC_DMA_CH2_STATUS_TEB_WIDTH            (3U)
#define GMAC_DMA_CH2_STATUS_TEB(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH2_STATUS_TEB_SHIFT)) & GMAC_DMA_CH2_STATUS_TEB_MASK)
#define GMAC_DMA_CH2_STATUS_REB_MASK             (0x380000U)
#define GMAC_DMA_CH2_STATUS_REB_SHIFT            (19U)
#define GMAC_DMA_CH2_STATUS_REB_WIDTH            (3U)
#define GMAC_DMA_CH2_STATUS_REB(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH2_STATUS_REB_SHIFT)) & GMAC_DMA_CH2_STATUS_REB_MASK)
/*! @} */

/*! @name DMA_CH2_MISS_FRAME_CNT -  */
/*! @{ */
#define GMAC_DMA_CH2_MISS_FRAME_CNT_MFC_MASK     (0x7FFU)
#define GMAC_DMA_CH2_MISS_FRAME_CNT_MFC_SHIFT    (0U)
#define GMAC_DMA_CH2_MISS_FRAME_CNT_MFC_WIDTH    (11U)
#define GMAC_DMA_CH2_MISS_FRAME_CNT_MFC(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH2_MISS_FRAME_CNT_MFC_SHIFT)) & GMAC_DMA_CH2_MISS_FRAME_CNT_MFC_MASK)
#define GMAC_DMA_CH2_MISS_FRAME_CNT_MFCO_MASK    (0x8000U)
#define GMAC_DMA_CH2_MISS_FRAME_CNT_MFCO_SHIFT   (15U)
#define GMAC_DMA_CH2_MISS_FRAME_CNT_MFCO_WIDTH   (1U)
#define GMAC_DMA_CH2_MISS_FRAME_CNT_MFCO(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH2_MISS_FRAME_CNT_MFCO_SHIFT)) & GMAC_DMA_CH2_MISS_FRAME_CNT_MFCO_MASK)
/*! @} */

/*! @name DMA_CH2_RXP_ACCEPT_CNT -  */
/*! @{ */
#define GMAC_DMA_CH2_RXP_ACCEPT_CNT_RXPAC_MASK   (0x7FFFFFFFU)
#define GMAC_DMA_CH2_RXP_ACCEPT_CNT_RXPAC_SHIFT  (0U)
#define GMAC_DMA_CH2_RXP_ACCEPT_CNT_RXPAC_WIDTH  (31U)
#define GMAC_DMA_CH2_RXP_ACCEPT_CNT_RXPAC(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH2_RXP_ACCEPT_CNT_RXPAC_SHIFT)) & GMAC_DMA_CH2_RXP_ACCEPT_CNT_RXPAC_MASK)
#define GMAC_DMA_CH2_RXP_ACCEPT_CNT_RXPACOF_MASK (0x80000000U)
#define GMAC_DMA_CH2_RXP_ACCEPT_CNT_RXPACOF_SHIFT (31U)
#define GMAC_DMA_CH2_RXP_ACCEPT_CNT_RXPACOF_WIDTH (1U)
#define GMAC_DMA_CH2_RXP_ACCEPT_CNT_RXPACOF(x)   (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH2_RXP_ACCEPT_CNT_RXPACOF_SHIFT)) & GMAC_DMA_CH2_RXP_ACCEPT_CNT_RXPACOF_MASK)
/*! @} */

/*! @name DMA_CH2_RX_ERI_CNT -  */
/*! @{ */
#define GMAC_DMA_CH2_RX_ERI_CNT_ECNT_MASK        (0xFFFU)
#define GMAC_DMA_CH2_RX_ERI_CNT_ECNT_SHIFT       (0U)
#define GMAC_DMA_CH2_RX_ERI_CNT_ECNT_WIDTH       (12U)
#define GMAC_DMA_CH2_RX_ERI_CNT_ECNT(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH2_RX_ERI_CNT_ECNT_SHIFT)) & GMAC_DMA_CH2_RX_ERI_CNT_ECNT_MASK)
/*! @} */

/*! @name DMA_CH3_CONTROL -  */
/*! @{ */
#define GMAC_DMA_CH3_CONTROL_PBLx8_MASK          (0x10000U)
#define GMAC_DMA_CH3_CONTROL_PBLx8_SHIFT         (16U)
#define GMAC_DMA_CH3_CONTROL_PBLx8_WIDTH         (1U)
#define GMAC_DMA_CH3_CONTROL_PBLx8(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH3_CONTROL_PBLx8_SHIFT)) & GMAC_DMA_CH3_CONTROL_PBLx8_MASK)
#define GMAC_DMA_CH3_CONTROL_DSL_MASK            (0x1C0000U)
#define GMAC_DMA_CH3_CONTROL_DSL_SHIFT           (18U)
#define GMAC_DMA_CH3_CONTROL_DSL_WIDTH           (3U)
#define GMAC_DMA_CH3_CONTROL_DSL(x)              (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH3_CONTROL_DSL_SHIFT)) & GMAC_DMA_CH3_CONTROL_DSL_MASK)
#define GMAC_DMA_CH3_CONTROL_SPH_MASK            (0x1000000U)
#define GMAC_DMA_CH3_CONTROL_SPH_SHIFT           (24U)
#define GMAC_DMA_CH3_CONTROL_SPH_WIDTH           (1U)
#define GMAC_DMA_CH3_CONTROL_SPH(x)              (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH3_CONTROL_SPH_SHIFT)) & GMAC_DMA_CH3_CONTROL_SPH_MASK)
/*! @} */

/*! @name DMA_CH3_TX_CONTROL -  */
/*! @{ */
#define GMAC_DMA_CH3_TX_CONTROL_ST_MASK          (0x1U)
#define GMAC_DMA_CH3_TX_CONTROL_ST_SHIFT         (0U)
#define GMAC_DMA_CH3_TX_CONTROL_ST_WIDTH         (1U)
#define GMAC_DMA_CH3_TX_CONTROL_ST(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH3_TX_CONTROL_ST_SHIFT)) & GMAC_DMA_CH3_TX_CONTROL_ST_MASK)
#define GMAC_DMA_CH3_TX_CONTROL_OSF_MASK         (0x10U)
#define GMAC_DMA_CH3_TX_CONTROL_OSF_SHIFT        (4U)
#define GMAC_DMA_CH3_TX_CONTROL_OSF_WIDTH        (1U)
#define GMAC_DMA_CH3_TX_CONTROL_OSF(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH3_TX_CONTROL_OSF_SHIFT)) & GMAC_DMA_CH3_TX_CONTROL_OSF_MASK)
#define GMAC_DMA_CH3_TX_CONTROL_IPBL_MASK        (0x8000U)
#define GMAC_DMA_CH3_TX_CONTROL_IPBL_SHIFT       (15U)
#define GMAC_DMA_CH3_TX_CONTROL_IPBL_WIDTH       (1U)
#define GMAC_DMA_CH3_TX_CONTROL_IPBL(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH3_TX_CONTROL_IPBL_SHIFT)) & GMAC_DMA_CH3_TX_CONTROL_IPBL_MASK)
#define GMAC_DMA_CH3_TX_CONTROL_TxPBL_MASK       (0x3F0000U)
#define GMAC_DMA_CH3_TX_CONTROL_TxPBL_SHIFT      (16U)
#define GMAC_DMA_CH3_TX_CONTROL_TxPBL_WIDTH      (6U)
#define GMAC_DMA_CH3_TX_CONTROL_TxPBL(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH3_TX_CONTROL_TxPBL_SHIFT)) & GMAC_DMA_CH3_TX_CONTROL_TxPBL_MASK)
#define GMAC_DMA_CH3_TX_CONTROL_TQOS_MASK        (0xF000000U)
#define GMAC_DMA_CH3_TX_CONTROL_TQOS_SHIFT       (24U)
#define GMAC_DMA_CH3_TX_CONTROL_TQOS_WIDTH       (4U)
#define GMAC_DMA_CH3_TX_CONTROL_TQOS(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH3_TX_CONTROL_TQOS_SHIFT)) & GMAC_DMA_CH3_TX_CONTROL_TQOS_MASK)
#define GMAC_DMA_CH3_TX_CONTROL_EDSE_MASK        (0x10000000U)
#define GMAC_DMA_CH3_TX_CONTROL_EDSE_SHIFT       (28U)
#define GMAC_DMA_CH3_TX_CONTROL_EDSE_WIDTH       (1U)
#define GMAC_DMA_CH3_TX_CONTROL_EDSE(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH3_TX_CONTROL_EDSE_SHIFT)) & GMAC_DMA_CH3_TX_CONTROL_EDSE_MASK)
/*! @} */

/*! @name DMA_CH3_RX_CONTROL -  */
/*! @{ */
#define GMAC_DMA_CH3_RX_CONTROL_SR_MASK          (0x1U)
#define GMAC_DMA_CH3_RX_CONTROL_SR_SHIFT         (0U)
#define GMAC_DMA_CH3_RX_CONTROL_SR_WIDTH         (1U)
#define GMAC_DMA_CH3_RX_CONTROL_SR(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH3_RX_CONTROL_SR_SHIFT)) & GMAC_DMA_CH3_RX_CONTROL_SR_MASK)
#define GMAC_DMA_CH3_RX_CONTROL_RBSZ_x_0_MASK    (0xEU)
#define GMAC_DMA_CH3_RX_CONTROL_RBSZ_x_0_SHIFT   (1U)
#define GMAC_DMA_CH3_RX_CONTROL_RBSZ_x_0_WIDTH   (3U)
#define GMAC_DMA_CH3_RX_CONTROL_RBSZ_x_0(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH3_RX_CONTROL_RBSZ_x_0_SHIFT)) & GMAC_DMA_CH3_RX_CONTROL_RBSZ_x_0_MASK)
#define GMAC_DMA_CH3_RX_CONTROL_RBSZ_13_y_MASK   (0x7FF0U)
#define GMAC_DMA_CH3_RX_CONTROL_RBSZ_13_y_SHIFT  (4U)
#define GMAC_DMA_CH3_RX_CONTROL_RBSZ_13_y_WIDTH  (11U)
#define GMAC_DMA_CH3_RX_CONTROL_RBSZ_13_y(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH3_RX_CONTROL_RBSZ_13_y_SHIFT)) & GMAC_DMA_CH3_RX_CONTROL_RBSZ_13_y_MASK)
#define GMAC_DMA_CH3_RX_CONTROL_RxPBL_MASK       (0x3F0000U)
#define GMAC_DMA_CH3_RX_CONTROL_RxPBL_SHIFT      (16U)
#define GMAC_DMA_CH3_RX_CONTROL_RxPBL_WIDTH      (6U)
#define GMAC_DMA_CH3_RX_CONTROL_RxPBL(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH3_RX_CONTROL_RxPBL_SHIFT)) & GMAC_DMA_CH3_RX_CONTROL_RxPBL_MASK)
#define GMAC_DMA_CH3_RX_CONTROL_RQOS_MASK        (0xF000000U)
#define GMAC_DMA_CH3_RX_CONTROL_RQOS_SHIFT       (24U)
#define GMAC_DMA_CH3_RX_CONTROL_RQOS_WIDTH       (4U)
#define GMAC_DMA_CH3_RX_CONTROL_RQOS(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH3_RX_CONTROL_RQOS_SHIFT)) & GMAC_DMA_CH3_RX_CONTROL_RQOS_MASK)
#define GMAC_DMA_CH3_RX_CONTROL_RPF_MASK         (0x80000000U)
#define GMAC_DMA_CH3_RX_CONTROL_RPF_SHIFT        (31U)
#define GMAC_DMA_CH3_RX_CONTROL_RPF_WIDTH        (1U)
#define GMAC_DMA_CH3_RX_CONTROL_RPF(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH3_RX_CONTROL_RPF_SHIFT)) & GMAC_DMA_CH3_RX_CONTROL_RPF_MASK)
/*! @} */

/*! @name DMA_CH3_TXDESC_LIST_ADDRESS -  */
/*! @{ */
#define GMAC_DMA_CH3_TXDESC_LIST_ADDRESS_TDESLA_MASK (0xFFFFFFF8U)
#define GMAC_DMA_CH3_TXDESC_LIST_ADDRESS_TDESLA_SHIFT (3U)
#define GMAC_DMA_CH3_TXDESC_LIST_ADDRESS_TDESLA_WIDTH (29U)
#define GMAC_DMA_CH3_TXDESC_LIST_ADDRESS_TDESLA(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH3_TXDESC_LIST_ADDRESS_TDESLA_SHIFT)) & GMAC_DMA_CH3_TXDESC_LIST_ADDRESS_TDESLA_MASK)
/*! @} */

/*! @name DMA_CH3_RXDESC_LIST_ADDRESS -  */
/*! @{ */
#define GMAC_DMA_CH3_RXDESC_LIST_ADDRESS_RDESLA_MASK (0xFFFFFFF8U)
#define GMAC_DMA_CH3_RXDESC_LIST_ADDRESS_RDESLA_SHIFT (3U)
#define GMAC_DMA_CH3_RXDESC_LIST_ADDRESS_RDESLA_WIDTH (29U)
#define GMAC_DMA_CH3_RXDESC_LIST_ADDRESS_RDESLA(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH3_RXDESC_LIST_ADDRESS_RDESLA_SHIFT)) & GMAC_DMA_CH3_RXDESC_LIST_ADDRESS_RDESLA_MASK)
/*! @} */

/*! @name DMA_CH3_TXDESC_TAIL_POINTER -  */
/*! @{ */
#define GMAC_DMA_CH3_TXDESC_TAIL_POINTER_TDTP_MASK (0xFFFFFFF8U)
#define GMAC_DMA_CH3_TXDESC_TAIL_POINTER_TDTP_SHIFT (3U)
#define GMAC_DMA_CH3_TXDESC_TAIL_POINTER_TDTP_WIDTH (29U)
#define GMAC_DMA_CH3_TXDESC_TAIL_POINTER_TDTP(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH3_TXDESC_TAIL_POINTER_TDTP_SHIFT)) & GMAC_DMA_CH3_TXDESC_TAIL_POINTER_TDTP_MASK)
/*! @} */

/*! @name DMA_CH3_RXDESC_TAIL_POINTER -  */
/*! @{ */
#define GMAC_DMA_CH3_RXDESC_TAIL_POINTER_RDTP_MASK (0xFFFFFFF8U)
#define GMAC_DMA_CH3_RXDESC_TAIL_POINTER_RDTP_SHIFT (3U)
#define GMAC_DMA_CH3_RXDESC_TAIL_POINTER_RDTP_WIDTH (29U)
#define GMAC_DMA_CH3_RXDESC_TAIL_POINTER_RDTP(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH3_RXDESC_TAIL_POINTER_RDTP_SHIFT)) & GMAC_DMA_CH3_RXDESC_TAIL_POINTER_RDTP_MASK)
/*! @} */

/*! @name DMA_CH3_TXDESC_RING_LENGTH -  */
/*! @{ */
#define GMAC_DMA_CH3_TXDESC_RING_LENGTH_TDRL_MASK (0x3FFU)
#define GMAC_DMA_CH3_TXDESC_RING_LENGTH_TDRL_SHIFT (0U)
#define GMAC_DMA_CH3_TXDESC_RING_LENGTH_TDRL_WIDTH (10U)
#define GMAC_DMA_CH3_TXDESC_RING_LENGTH_TDRL(x)  (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH3_TXDESC_RING_LENGTH_TDRL_SHIFT)) & GMAC_DMA_CH3_TXDESC_RING_LENGTH_TDRL_MASK)
/*! @} */

/*! @name DMA_CH3_RXDESC_RING_LENGTH -  */
/*! @{ */
#define GMAC_DMA_CH3_RXDESC_RING_LENGTH_RDRL_MASK (0x3FFU)
#define GMAC_DMA_CH3_RXDESC_RING_LENGTH_RDRL_SHIFT (0U)
#define GMAC_DMA_CH3_RXDESC_RING_LENGTH_RDRL_WIDTH (10U)
#define GMAC_DMA_CH3_RXDESC_RING_LENGTH_RDRL(x)  (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH3_RXDESC_RING_LENGTH_RDRL_SHIFT)) & GMAC_DMA_CH3_RXDESC_RING_LENGTH_RDRL_MASK)
/*! @} */

/*! @name DMA_CH3_INTERRUPT_ENABLE -  */
/*! @{ */
#define GMAC_DMA_CH3_INTERRUPT_ENABLE_TIE_MASK   (0x1U)
#define GMAC_DMA_CH3_INTERRUPT_ENABLE_TIE_SHIFT  (0U)
#define GMAC_DMA_CH3_INTERRUPT_ENABLE_TIE_WIDTH  (1U)
#define GMAC_DMA_CH3_INTERRUPT_ENABLE_TIE(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH3_INTERRUPT_ENABLE_TIE_SHIFT)) & GMAC_DMA_CH3_INTERRUPT_ENABLE_TIE_MASK)
#define GMAC_DMA_CH3_INTERRUPT_ENABLE_TXSE_MASK  (0x2U)
#define GMAC_DMA_CH3_INTERRUPT_ENABLE_TXSE_SHIFT (1U)
#define GMAC_DMA_CH3_INTERRUPT_ENABLE_TXSE_WIDTH (1U)
#define GMAC_DMA_CH3_INTERRUPT_ENABLE_TXSE(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH3_INTERRUPT_ENABLE_TXSE_SHIFT)) & GMAC_DMA_CH3_INTERRUPT_ENABLE_TXSE_MASK)
#define GMAC_DMA_CH3_INTERRUPT_ENABLE_TBUE_MASK  (0x4U)
#define GMAC_DMA_CH3_INTERRUPT_ENABLE_TBUE_SHIFT (2U)
#define GMAC_DMA_CH3_INTERRUPT_ENABLE_TBUE_WIDTH (1U)
#define GMAC_DMA_CH3_INTERRUPT_ENABLE_TBUE(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH3_INTERRUPT_ENABLE_TBUE_SHIFT)) & GMAC_DMA_CH3_INTERRUPT_ENABLE_TBUE_MASK)
#define GMAC_DMA_CH3_INTERRUPT_ENABLE_RIE_MASK   (0x40U)
#define GMAC_DMA_CH3_INTERRUPT_ENABLE_RIE_SHIFT  (6U)
#define GMAC_DMA_CH3_INTERRUPT_ENABLE_RIE_WIDTH  (1U)
#define GMAC_DMA_CH3_INTERRUPT_ENABLE_RIE(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH3_INTERRUPT_ENABLE_RIE_SHIFT)) & GMAC_DMA_CH3_INTERRUPT_ENABLE_RIE_MASK)
#define GMAC_DMA_CH3_INTERRUPT_ENABLE_RBUE_MASK  (0x80U)
#define GMAC_DMA_CH3_INTERRUPT_ENABLE_RBUE_SHIFT (7U)
#define GMAC_DMA_CH3_INTERRUPT_ENABLE_RBUE_WIDTH (1U)
#define GMAC_DMA_CH3_INTERRUPT_ENABLE_RBUE(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH3_INTERRUPT_ENABLE_RBUE_SHIFT)) & GMAC_DMA_CH3_INTERRUPT_ENABLE_RBUE_MASK)
#define GMAC_DMA_CH3_INTERRUPT_ENABLE_RSE_MASK   (0x100U)
#define GMAC_DMA_CH3_INTERRUPT_ENABLE_RSE_SHIFT  (8U)
#define GMAC_DMA_CH3_INTERRUPT_ENABLE_RSE_WIDTH  (1U)
#define GMAC_DMA_CH3_INTERRUPT_ENABLE_RSE(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH3_INTERRUPT_ENABLE_RSE_SHIFT)) & GMAC_DMA_CH3_INTERRUPT_ENABLE_RSE_MASK)
#define GMAC_DMA_CH3_INTERRUPT_ENABLE_RWTE_MASK  (0x200U)
#define GMAC_DMA_CH3_INTERRUPT_ENABLE_RWTE_SHIFT (9U)
#define GMAC_DMA_CH3_INTERRUPT_ENABLE_RWTE_WIDTH (1U)
#define GMAC_DMA_CH3_INTERRUPT_ENABLE_RWTE(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH3_INTERRUPT_ENABLE_RWTE_SHIFT)) & GMAC_DMA_CH3_INTERRUPT_ENABLE_RWTE_MASK)
#define GMAC_DMA_CH3_INTERRUPT_ENABLE_ETIE_MASK  (0x400U)
#define GMAC_DMA_CH3_INTERRUPT_ENABLE_ETIE_SHIFT (10U)
#define GMAC_DMA_CH3_INTERRUPT_ENABLE_ETIE_WIDTH (1U)
#define GMAC_DMA_CH3_INTERRUPT_ENABLE_ETIE(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH3_INTERRUPT_ENABLE_ETIE_SHIFT)) & GMAC_DMA_CH3_INTERRUPT_ENABLE_ETIE_MASK)
#define GMAC_DMA_CH3_INTERRUPT_ENABLE_ERIE_MASK  (0x800U)
#define GMAC_DMA_CH3_INTERRUPT_ENABLE_ERIE_SHIFT (11U)
#define GMAC_DMA_CH3_INTERRUPT_ENABLE_ERIE_WIDTH (1U)
#define GMAC_DMA_CH3_INTERRUPT_ENABLE_ERIE(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH3_INTERRUPT_ENABLE_ERIE_SHIFT)) & GMAC_DMA_CH3_INTERRUPT_ENABLE_ERIE_MASK)
#define GMAC_DMA_CH3_INTERRUPT_ENABLE_FBEE_MASK  (0x1000U)
#define GMAC_DMA_CH3_INTERRUPT_ENABLE_FBEE_SHIFT (12U)
#define GMAC_DMA_CH3_INTERRUPT_ENABLE_FBEE_WIDTH (1U)
#define GMAC_DMA_CH3_INTERRUPT_ENABLE_FBEE(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH3_INTERRUPT_ENABLE_FBEE_SHIFT)) & GMAC_DMA_CH3_INTERRUPT_ENABLE_FBEE_MASK)
#define GMAC_DMA_CH3_INTERRUPT_ENABLE_CDEE_MASK  (0x2000U)
#define GMAC_DMA_CH3_INTERRUPT_ENABLE_CDEE_SHIFT (13U)
#define GMAC_DMA_CH3_INTERRUPT_ENABLE_CDEE_WIDTH (1U)
#define GMAC_DMA_CH3_INTERRUPT_ENABLE_CDEE(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH3_INTERRUPT_ENABLE_CDEE_SHIFT)) & GMAC_DMA_CH3_INTERRUPT_ENABLE_CDEE_MASK)
#define GMAC_DMA_CH3_INTERRUPT_ENABLE_AIE_MASK   (0x4000U)
#define GMAC_DMA_CH3_INTERRUPT_ENABLE_AIE_SHIFT  (14U)
#define GMAC_DMA_CH3_INTERRUPT_ENABLE_AIE_WIDTH  (1U)
#define GMAC_DMA_CH3_INTERRUPT_ENABLE_AIE(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH3_INTERRUPT_ENABLE_AIE_SHIFT)) & GMAC_DMA_CH3_INTERRUPT_ENABLE_AIE_MASK)
#define GMAC_DMA_CH3_INTERRUPT_ENABLE_NIE_MASK   (0x8000U)
#define GMAC_DMA_CH3_INTERRUPT_ENABLE_NIE_SHIFT  (15U)
#define GMAC_DMA_CH3_INTERRUPT_ENABLE_NIE_WIDTH  (1U)
#define GMAC_DMA_CH3_INTERRUPT_ENABLE_NIE(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH3_INTERRUPT_ENABLE_NIE_SHIFT)) & GMAC_DMA_CH3_INTERRUPT_ENABLE_NIE_MASK)
/*! @} */

/*! @name DMA_CH3_RX_INTERRUPT_WATCHDOG_TIMER -  */
/*! @{ */
#define GMAC_DMA_CH3_RX_INTERRUPT_WATCHDOG_TIMER_RWT_MASK (0xFFU)
#define GMAC_DMA_CH3_RX_INTERRUPT_WATCHDOG_TIMER_RWT_SHIFT (0U)
#define GMAC_DMA_CH3_RX_INTERRUPT_WATCHDOG_TIMER_RWT_WIDTH (8U)
#define GMAC_DMA_CH3_RX_INTERRUPT_WATCHDOG_TIMER_RWT(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH3_RX_INTERRUPT_WATCHDOG_TIMER_RWT_SHIFT)) & GMAC_DMA_CH3_RX_INTERRUPT_WATCHDOG_TIMER_RWT_MASK)
#define GMAC_DMA_CH3_RX_INTERRUPT_WATCHDOG_TIMER_RWTU_MASK (0x30000U)
#define GMAC_DMA_CH3_RX_INTERRUPT_WATCHDOG_TIMER_RWTU_SHIFT (16U)
#define GMAC_DMA_CH3_RX_INTERRUPT_WATCHDOG_TIMER_RWTU_WIDTH (2U)
#define GMAC_DMA_CH3_RX_INTERRUPT_WATCHDOG_TIMER_RWTU(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH3_RX_INTERRUPT_WATCHDOG_TIMER_RWTU_SHIFT)) & GMAC_DMA_CH3_RX_INTERRUPT_WATCHDOG_TIMER_RWTU_MASK)
/*! @} */

/*! @name DMA_CH3_SLOT_FUNCTION_CONTROL_STATUS -  */
/*! @{ */
#define GMAC_DMA_CH3_SLOT_FUNCTION_CONTROL_STATUS_ESC_MASK (0x1U)
#define GMAC_DMA_CH3_SLOT_FUNCTION_CONTROL_STATUS_ESC_SHIFT (0U)
#define GMAC_DMA_CH3_SLOT_FUNCTION_CONTROL_STATUS_ESC_WIDTH (1U)
#define GMAC_DMA_CH3_SLOT_FUNCTION_CONTROL_STATUS_ESC(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH3_SLOT_FUNCTION_CONTROL_STATUS_ESC_SHIFT)) & GMAC_DMA_CH3_SLOT_FUNCTION_CONTROL_STATUS_ESC_MASK)
#define GMAC_DMA_CH3_SLOT_FUNCTION_CONTROL_STATUS_ASC_MASK (0x2U)
#define GMAC_DMA_CH3_SLOT_FUNCTION_CONTROL_STATUS_ASC_SHIFT (1U)
#define GMAC_DMA_CH3_SLOT_FUNCTION_CONTROL_STATUS_ASC_WIDTH (1U)
#define GMAC_DMA_CH3_SLOT_FUNCTION_CONTROL_STATUS_ASC(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH3_SLOT_FUNCTION_CONTROL_STATUS_ASC_SHIFT)) & GMAC_DMA_CH3_SLOT_FUNCTION_CONTROL_STATUS_ASC_MASK)
#define GMAC_DMA_CH3_SLOT_FUNCTION_CONTROL_STATUS_SIV_MASK (0xFFF0U)
#define GMAC_DMA_CH3_SLOT_FUNCTION_CONTROL_STATUS_SIV_SHIFT (4U)
#define GMAC_DMA_CH3_SLOT_FUNCTION_CONTROL_STATUS_SIV_WIDTH (12U)
#define GMAC_DMA_CH3_SLOT_FUNCTION_CONTROL_STATUS_SIV(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH3_SLOT_FUNCTION_CONTROL_STATUS_SIV_SHIFT)) & GMAC_DMA_CH3_SLOT_FUNCTION_CONTROL_STATUS_SIV_MASK)
#define GMAC_DMA_CH3_SLOT_FUNCTION_CONTROL_STATUS_RSN_MASK (0xF0000U)
#define GMAC_DMA_CH3_SLOT_FUNCTION_CONTROL_STATUS_RSN_SHIFT (16U)
#define GMAC_DMA_CH3_SLOT_FUNCTION_CONTROL_STATUS_RSN_WIDTH (4U)
#define GMAC_DMA_CH3_SLOT_FUNCTION_CONTROL_STATUS_RSN(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH3_SLOT_FUNCTION_CONTROL_STATUS_RSN_SHIFT)) & GMAC_DMA_CH3_SLOT_FUNCTION_CONTROL_STATUS_RSN_MASK)
/*! @} */

/*! @name DMA_CH3_CURRENT_APP_TXDESC -  */
/*! @{ */
#define GMAC_DMA_CH3_CURRENT_APP_TXDESC_CURTDESAPTR_MASK (0xFFFFFFFFU)
#define GMAC_DMA_CH3_CURRENT_APP_TXDESC_CURTDESAPTR_SHIFT (0U)
#define GMAC_DMA_CH3_CURRENT_APP_TXDESC_CURTDESAPTR_WIDTH (32U)
#define GMAC_DMA_CH3_CURRENT_APP_TXDESC_CURTDESAPTR(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH3_CURRENT_APP_TXDESC_CURTDESAPTR_SHIFT)) & GMAC_DMA_CH3_CURRENT_APP_TXDESC_CURTDESAPTR_MASK)
/*! @} */

/*! @name DMA_CH3_CURRENT_APP_RXDESC -  */
/*! @{ */
#define GMAC_DMA_CH3_CURRENT_APP_RXDESC_CURRDESAPTR_MASK (0xFFFFFFFFU)
#define GMAC_DMA_CH3_CURRENT_APP_RXDESC_CURRDESAPTR_SHIFT (0U)
#define GMAC_DMA_CH3_CURRENT_APP_RXDESC_CURRDESAPTR_WIDTH (32U)
#define GMAC_DMA_CH3_CURRENT_APP_RXDESC_CURRDESAPTR(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH3_CURRENT_APP_RXDESC_CURRDESAPTR_SHIFT)) & GMAC_DMA_CH3_CURRENT_APP_RXDESC_CURRDESAPTR_MASK)
/*! @} */

/*! @name DMA_CH3_CURRENT_APP_TXBUFFER -  */
/*! @{ */
#define GMAC_DMA_CH3_CURRENT_APP_TXBUFFER_CURTBUFAPTR_MASK (0xFFFFFFFFU)
#define GMAC_DMA_CH3_CURRENT_APP_TXBUFFER_CURTBUFAPTR_SHIFT (0U)
#define GMAC_DMA_CH3_CURRENT_APP_TXBUFFER_CURTBUFAPTR_WIDTH (32U)
#define GMAC_DMA_CH3_CURRENT_APP_TXBUFFER_CURTBUFAPTR(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH3_CURRENT_APP_TXBUFFER_CURTBUFAPTR_SHIFT)) & GMAC_DMA_CH3_CURRENT_APP_TXBUFFER_CURTBUFAPTR_MASK)
/*! @} */

/*! @name DMA_CH3_CURRENT_APP_RXBUFFER -  */
/*! @{ */
#define GMAC_DMA_CH3_CURRENT_APP_RXBUFFER_CURRBUFAPTR_MASK (0xFFFFFFFFU)
#define GMAC_DMA_CH3_CURRENT_APP_RXBUFFER_CURRBUFAPTR_SHIFT (0U)
#define GMAC_DMA_CH3_CURRENT_APP_RXBUFFER_CURRBUFAPTR_WIDTH (32U)
#define GMAC_DMA_CH3_CURRENT_APP_RXBUFFER_CURRBUFAPTR(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH3_CURRENT_APP_RXBUFFER_CURRBUFAPTR_SHIFT)) & GMAC_DMA_CH3_CURRENT_APP_RXBUFFER_CURRBUFAPTR_MASK)
/*! @} */

/*! @name DMA_CH3_STATUS -  */
/*! @{ */
#define GMAC_DMA_CH3_STATUS_TI_MASK              (0x1U)
#define GMAC_DMA_CH3_STATUS_TI_SHIFT             (0U)
#define GMAC_DMA_CH3_STATUS_TI_WIDTH             (1U)
#define GMAC_DMA_CH3_STATUS_TI(x)                (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH3_STATUS_TI_SHIFT)) & GMAC_DMA_CH3_STATUS_TI_MASK)
#define GMAC_DMA_CH3_STATUS_TPS_MASK             (0x2U)
#define GMAC_DMA_CH3_STATUS_TPS_SHIFT            (1U)
#define GMAC_DMA_CH3_STATUS_TPS_WIDTH            (1U)
#define GMAC_DMA_CH3_STATUS_TPS(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH3_STATUS_TPS_SHIFT)) & GMAC_DMA_CH3_STATUS_TPS_MASK)
#define GMAC_DMA_CH3_STATUS_TBU_MASK             (0x4U)
#define GMAC_DMA_CH3_STATUS_TBU_SHIFT            (2U)
#define GMAC_DMA_CH3_STATUS_TBU_WIDTH            (1U)
#define GMAC_DMA_CH3_STATUS_TBU(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH3_STATUS_TBU_SHIFT)) & GMAC_DMA_CH3_STATUS_TBU_MASK)
#define GMAC_DMA_CH3_STATUS_RI_MASK              (0x40U)
#define GMAC_DMA_CH3_STATUS_RI_SHIFT             (6U)
#define GMAC_DMA_CH3_STATUS_RI_WIDTH             (1U)
#define GMAC_DMA_CH3_STATUS_RI(x)                (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH3_STATUS_RI_SHIFT)) & GMAC_DMA_CH3_STATUS_RI_MASK)
#define GMAC_DMA_CH3_STATUS_RBU_MASK             (0x80U)
#define GMAC_DMA_CH3_STATUS_RBU_SHIFT            (7U)
#define GMAC_DMA_CH3_STATUS_RBU_WIDTH            (1U)
#define GMAC_DMA_CH3_STATUS_RBU(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH3_STATUS_RBU_SHIFT)) & GMAC_DMA_CH3_STATUS_RBU_MASK)
#define GMAC_DMA_CH3_STATUS_RPS_MASK             (0x100U)
#define GMAC_DMA_CH3_STATUS_RPS_SHIFT            (8U)
#define GMAC_DMA_CH3_STATUS_RPS_WIDTH            (1U)
#define GMAC_DMA_CH3_STATUS_RPS(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH3_STATUS_RPS_SHIFT)) & GMAC_DMA_CH3_STATUS_RPS_MASK)
#define GMAC_DMA_CH3_STATUS_RWT_MASK             (0x200U)
#define GMAC_DMA_CH3_STATUS_RWT_SHIFT            (9U)
#define GMAC_DMA_CH3_STATUS_RWT_WIDTH            (1U)
#define GMAC_DMA_CH3_STATUS_RWT(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH3_STATUS_RWT_SHIFT)) & GMAC_DMA_CH3_STATUS_RWT_MASK)
#define GMAC_DMA_CH3_STATUS_ETI_MASK             (0x400U)
#define GMAC_DMA_CH3_STATUS_ETI_SHIFT            (10U)
#define GMAC_DMA_CH3_STATUS_ETI_WIDTH            (1U)
#define GMAC_DMA_CH3_STATUS_ETI(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH3_STATUS_ETI_SHIFT)) & GMAC_DMA_CH3_STATUS_ETI_MASK)
#define GMAC_DMA_CH3_STATUS_ERI_MASK             (0x800U)
#define GMAC_DMA_CH3_STATUS_ERI_SHIFT            (11U)
#define GMAC_DMA_CH3_STATUS_ERI_WIDTH            (1U)
#define GMAC_DMA_CH3_STATUS_ERI(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH3_STATUS_ERI_SHIFT)) & GMAC_DMA_CH3_STATUS_ERI_MASK)
#define GMAC_DMA_CH3_STATUS_FBE_MASK             (0x1000U)
#define GMAC_DMA_CH3_STATUS_FBE_SHIFT            (12U)
#define GMAC_DMA_CH3_STATUS_FBE_WIDTH            (1U)
#define GMAC_DMA_CH3_STATUS_FBE(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH3_STATUS_FBE_SHIFT)) & GMAC_DMA_CH3_STATUS_FBE_MASK)
#define GMAC_DMA_CH3_STATUS_CDE_MASK             (0x2000U)
#define GMAC_DMA_CH3_STATUS_CDE_SHIFT            (13U)
#define GMAC_DMA_CH3_STATUS_CDE_WIDTH            (1U)
#define GMAC_DMA_CH3_STATUS_CDE(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH3_STATUS_CDE_SHIFT)) & GMAC_DMA_CH3_STATUS_CDE_MASK)
#define GMAC_DMA_CH3_STATUS_AIS_MASK             (0x4000U)
#define GMAC_DMA_CH3_STATUS_AIS_SHIFT            (14U)
#define GMAC_DMA_CH3_STATUS_AIS_WIDTH            (1U)
#define GMAC_DMA_CH3_STATUS_AIS(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH3_STATUS_AIS_SHIFT)) & GMAC_DMA_CH3_STATUS_AIS_MASK)
#define GMAC_DMA_CH3_STATUS_NIS_MASK             (0x8000U)
#define GMAC_DMA_CH3_STATUS_NIS_SHIFT            (15U)
#define GMAC_DMA_CH3_STATUS_NIS_WIDTH            (1U)
#define GMAC_DMA_CH3_STATUS_NIS(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH3_STATUS_NIS_SHIFT)) & GMAC_DMA_CH3_STATUS_NIS_MASK)
#define GMAC_DMA_CH3_STATUS_TEB_MASK             (0x70000U)
#define GMAC_DMA_CH3_STATUS_TEB_SHIFT            (16U)
#define GMAC_DMA_CH3_STATUS_TEB_WIDTH            (3U)
#define GMAC_DMA_CH3_STATUS_TEB(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH3_STATUS_TEB_SHIFT)) & GMAC_DMA_CH3_STATUS_TEB_MASK)
#define GMAC_DMA_CH3_STATUS_REB_MASK             (0x380000U)
#define GMAC_DMA_CH3_STATUS_REB_SHIFT            (19U)
#define GMAC_DMA_CH3_STATUS_REB_WIDTH            (3U)
#define GMAC_DMA_CH3_STATUS_REB(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH3_STATUS_REB_SHIFT)) & GMAC_DMA_CH3_STATUS_REB_MASK)
/*! @} */

/*! @name DMA_CH3_MISS_FRAME_CNT -  */
/*! @{ */
#define GMAC_DMA_CH3_MISS_FRAME_CNT_MFC_MASK     (0x7FFU)
#define GMAC_DMA_CH3_MISS_FRAME_CNT_MFC_SHIFT    (0U)
#define GMAC_DMA_CH3_MISS_FRAME_CNT_MFC_WIDTH    (11U)
#define GMAC_DMA_CH3_MISS_FRAME_CNT_MFC(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH3_MISS_FRAME_CNT_MFC_SHIFT)) & GMAC_DMA_CH3_MISS_FRAME_CNT_MFC_MASK)
#define GMAC_DMA_CH3_MISS_FRAME_CNT_MFCO_MASK    (0x8000U)
#define GMAC_DMA_CH3_MISS_FRAME_CNT_MFCO_SHIFT   (15U)
#define GMAC_DMA_CH3_MISS_FRAME_CNT_MFCO_WIDTH   (1U)
#define GMAC_DMA_CH3_MISS_FRAME_CNT_MFCO(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH3_MISS_FRAME_CNT_MFCO_SHIFT)) & GMAC_DMA_CH3_MISS_FRAME_CNT_MFCO_MASK)
/*! @} */

/*! @name DMA_CH3_RXP_ACCEPT_CNT -  */
/*! @{ */
#define GMAC_DMA_CH3_RXP_ACCEPT_CNT_RXPAC_MASK   (0x7FFFFFFFU)
#define GMAC_DMA_CH3_RXP_ACCEPT_CNT_RXPAC_SHIFT  (0U)
#define GMAC_DMA_CH3_RXP_ACCEPT_CNT_RXPAC_WIDTH  (31U)
#define GMAC_DMA_CH3_RXP_ACCEPT_CNT_RXPAC(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH3_RXP_ACCEPT_CNT_RXPAC_SHIFT)) & GMAC_DMA_CH3_RXP_ACCEPT_CNT_RXPAC_MASK)
#define GMAC_DMA_CH3_RXP_ACCEPT_CNT_RXPACOF_MASK (0x80000000U)
#define GMAC_DMA_CH3_RXP_ACCEPT_CNT_RXPACOF_SHIFT (31U)
#define GMAC_DMA_CH3_RXP_ACCEPT_CNT_RXPACOF_WIDTH (1U)
#define GMAC_DMA_CH3_RXP_ACCEPT_CNT_RXPACOF(x)   (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH3_RXP_ACCEPT_CNT_RXPACOF_SHIFT)) & GMAC_DMA_CH3_RXP_ACCEPT_CNT_RXPACOF_MASK)
/*! @} */

/*! @name DMA_CH3_RX_ERI_CNT -  */
/*! @{ */
#define GMAC_DMA_CH3_RX_ERI_CNT_ECNT_MASK        (0xFFFU)
#define GMAC_DMA_CH3_RX_ERI_CNT_ECNT_SHIFT       (0U)
#define GMAC_DMA_CH3_RX_ERI_CNT_ECNT_WIDTH       (12U)
#define GMAC_DMA_CH3_RX_ERI_CNT_ECNT(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH3_RX_ERI_CNT_ECNT_SHIFT)) & GMAC_DMA_CH3_RX_ERI_CNT_ECNT_MASK)
/*! @} */

/*! @name DMA_CH4_CONTROL -  */
/*! @{ */
#define GMAC_DMA_CH4_CONTROL_PBLx8_MASK          (0x10000U)
#define GMAC_DMA_CH4_CONTROL_PBLx8_SHIFT         (16U)
#define GMAC_DMA_CH4_CONTROL_PBLx8_WIDTH         (1U)
#define GMAC_DMA_CH4_CONTROL_PBLx8(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH4_CONTROL_PBLx8_SHIFT)) & GMAC_DMA_CH4_CONTROL_PBLx8_MASK)
#define GMAC_DMA_CH4_CONTROL_DSL_MASK            (0x1C0000U)
#define GMAC_DMA_CH4_CONTROL_DSL_SHIFT           (18U)
#define GMAC_DMA_CH4_CONTROL_DSL_WIDTH           (3U)
#define GMAC_DMA_CH4_CONTROL_DSL(x)              (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH4_CONTROL_DSL_SHIFT)) & GMAC_DMA_CH4_CONTROL_DSL_MASK)
#define GMAC_DMA_CH4_CONTROL_SPH_MASK            (0x1000000U)
#define GMAC_DMA_CH4_CONTROL_SPH_SHIFT           (24U)
#define GMAC_DMA_CH4_CONTROL_SPH_WIDTH           (1U)
#define GMAC_DMA_CH4_CONTROL_SPH(x)              (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH4_CONTROL_SPH_SHIFT)) & GMAC_DMA_CH4_CONTROL_SPH_MASK)
/*! @} */

/*! @name DMA_CH4_TX_CONTROL -  */
/*! @{ */
#define GMAC_DMA_CH4_TX_CONTROL_ST_MASK          (0x1U)
#define GMAC_DMA_CH4_TX_CONTROL_ST_SHIFT         (0U)
#define GMAC_DMA_CH4_TX_CONTROL_ST_WIDTH         (1U)
#define GMAC_DMA_CH4_TX_CONTROL_ST(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH4_TX_CONTROL_ST_SHIFT)) & GMAC_DMA_CH4_TX_CONTROL_ST_MASK)
#define GMAC_DMA_CH4_TX_CONTROL_OSF_MASK         (0x10U)
#define GMAC_DMA_CH4_TX_CONTROL_OSF_SHIFT        (4U)
#define GMAC_DMA_CH4_TX_CONTROL_OSF_WIDTH        (1U)
#define GMAC_DMA_CH4_TX_CONTROL_OSF(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH4_TX_CONTROL_OSF_SHIFT)) & GMAC_DMA_CH4_TX_CONTROL_OSF_MASK)
#define GMAC_DMA_CH4_TX_CONTROL_IPBL_MASK        (0x8000U)
#define GMAC_DMA_CH4_TX_CONTROL_IPBL_SHIFT       (15U)
#define GMAC_DMA_CH4_TX_CONTROL_IPBL_WIDTH       (1U)
#define GMAC_DMA_CH4_TX_CONTROL_IPBL(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH4_TX_CONTROL_IPBL_SHIFT)) & GMAC_DMA_CH4_TX_CONTROL_IPBL_MASK)
#define GMAC_DMA_CH4_TX_CONTROL_TxPBL_MASK       (0x3F0000U)
#define GMAC_DMA_CH4_TX_CONTROL_TxPBL_SHIFT      (16U)
#define GMAC_DMA_CH4_TX_CONTROL_TxPBL_WIDTH      (6U)
#define GMAC_DMA_CH4_TX_CONTROL_TxPBL(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH4_TX_CONTROL_TxPBL_SHIFT)) & GMAC_DMA_CH4_TX_CONTROL_TxPBL_MASK)
#define GMAC_DMA_CH4_TX_CONTROL_TQOS_MASK        (0xF000000U)
#define GMAC_DMA_CH4_TX_CONTROL_TQOS_SHIFT       (24U)
#define GMAC_DMA_CH4_TX_CONTROL_TQOS_WIDTH       (4U)
#define GMAC_DMA_CH4_TX_CONTROL_TQOS(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH4_TX_CONTROL_TQOS_SHIFT)) & GMAC_DMA_CH4_TX_CONTROL_TQOS_MASK)
#define GMAC_DMA_CH4_TX_CONTROL_EDSE_MASK        (0x10000000U)
#define GMAC_DMA_CH4_TX_CONTROL_EDSE_SHIFT       (28U)
#define GMAC_DMA_CH4_TX_CONTROL_EDSE_WIDTH       (1U)
#define GMAC_DMA_CH4_TX_CONTROL_EDSE(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH4_TX_CONTROL_EDSE_SHIFT)) & GMAC_DMA_CH4_TX_CONTROL_EDSE_MASK)
/*! @} */

/*! @name DMA_CH4_RX_CONTROL -  */
/*! @{ */
#define GMAC_DMA_CH4_RX_CONTROL_SR_MASK          (0x1U)
#define GMAC_DMA_CH4_RX_CONTROL_SR_SHIFT         (0U)
#define GMAC_DMA_CH4_RX_CONTROL_SR_WIDTH         (1U)
#define GMAC_DMA_CH4_RX_CONTROL_SR(x)            (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH4_RX_CONTROL_SR_SHIFT)) & GMAC_DMA_CH4_RX_CONTROL_SR_MASK)
#define GMAC_DMA_CH4_RX_CONTROL_RBSZ_x_0_MASK    (0xEU)
#define GMAC_DMA_CH4_RX_CONTROL_RBSZ_x_0_SHIFT   (1U)
#define GMAC_DMA_CH4_RX_CONTROL_RBSZ_x_0_WIDTH   (3U)
#define GMAC_DMA_CH4_RX_CONTROL_RBSZ_x_0(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH4_RX_CONTROL_RBSZ_x_0_SHIFT)) & GMAC_DMA_CH4_RX_CONTROL_RBSZ_x_0_MASK)
#define GMAC_DMA_CH4_RX_CONTROL_RBSZ_13_y_MASK   (0x7FF0U)
#define GMAC_DMA_CH4_RX_CONTROL_RBSZ_13_y_SHIFT  (4U)
#define GMAC_DMA_CH4_RX_CONTROL_RBSZ_13_y_WIDTH  (11U)
#define GMAC_DMA_CH4_RX_CONTROL_RBSZ_13_y(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH4_RX_CONTROL_RBSZ_13_y_SHIFT)) & GMAC_DMA_CH4_RX_CONTROL_RBSZ_13_y_MASK)
#define GMAC_DMA_CH4_RX_CONTROL_RxPBL_MASK       (0x3F0000U)
#define GMAC_DMA_CH4_RX_CONTROL_RxPBL_SHIFT      (16U)
#define GMAC_DMA_CH4_RX_CONTROL_RxPBL_WIDTH      (6U)
#define GMAC_DMA_CH4_RX_CONTROL_RxPBL(x)         (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH4_RX_CONTROL_RxPBL_SHIFT)) & GMAC_DMA_CH4_RX_CONTROL_RxPBL_MASK)
#define GMAC_DMA_CH4_RX_CONTROL_RQOS_MASK        (0xF000000U)
#define GMAC_DMA_CH4_RX_CONTROL_RQOS_SHIFT       (24U)
#define GMAC_DMA_CH4_RX_CONTROL_RQOS_WIDTH       (4U)
#define GMAC_DMA_CH4_RX_CONTROL_RQOS(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH4_RX_CONTROL_RQOS_SHIFT)) & GMAC_DMA_CH4_RX_CONTROL_RQOS_MASK)
#define GMAC_DMA_CH4_RX_CONTROL_RPF_MASK         (0x80000000U)
#define GMAC_DMA_CH4_RX_CONTROL_RPF_SHIFT        (31U)
#define GMAC_DMA_CH4_RX_CONTROL_RPF_WIDTH        (1U)
#define GMAC_DMA_CH4_RX_CONTROL_RPF(x)           (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH4_RX_CONTROL_RPF_SHIFT)) & GMAC_DMA_CH4_RX_CONTROL_RPF_MASK)
/*! @} */

/*! @name DMA_CH4_TXDESC_LIST_ADDRESS -  */
/*! @{ */
#define GMAC_DMA_CH4_TXDESC_LIST_ADDRESS_TDESLA_MASK (0xFFFFFFF8U)
#define GMAC_DMA_CH4_TXDESC_LIST_ADDRESS_TDESLA_SHIFT (3U)
#define GMAC_DMA_CH4_TXDESC_LIST_ADDRESS_TDESLA_WIDTH (29U)
#define GMAC_DMA_CH4_TXDESC_LIST_ADDRESS_TDESLA(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH4_TXDESC_LIST_ADDRESS_TDESLA_SHIFT)) & GMAC_DMA_CH4_TXDESC_LIST_ADDRESS_TDESLA_MASK)
/*! @} */

/*! @name DMA_CH4_RXDESC_LIST_ADDRESS -  */
/*! @{ */
#define GMAC_DMA_CH4_RXDESC_LIST_ADDRESS_RDESLA_MASK (0xFFFFFFF8U)
#define GMAC_DMA_CH4_RXDESC_LIST_ADDRESS_RDESLA_SHIFT (3U)
#define GMAC_DMA_CH4_RXDESC_LIST_ADDRESS_RDESLA_WIDTH (29U)
#define GMAC_DMA_CH4_RXDESC_LIST_ADDRESS_RDESLA(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH4_RXDESC_LIST_ADDRESS_RDESLA_SHIFT)) & GMAC_DMA_CH4_RXDESC_LIST_ADDRESS_RDESLA_MASK)
/*! @} */

/*! @name DMA_CH4_TXDESC_TAIL_POINTER -  */
/*! @{ */
#define GMAC_DMA_CH4_TXDESC_TAIL_POINTER_TDTP_MASK (0xFFFFFFF8U)
#define GMAC_DMA_CH4_TXDESC_TAIL_POINTER_TDTP_SHIFT (3U)
#define GMAC_DMA_CH4_TXDESC_TAIL_POINTER_TDTP_WIDTH (29U)
#define GMAC_DMA_CH4_TXDESC_TAIL_POINTER_TDTP(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH4_TXDESC_TAIL_POINTER_TDTP_SHIFT)) & GMAC_DMA_CH4_TXDESC_TAIL_POINTER_TDTP_MASK)
/*! @} */

/*! @name DMA_CH4_RXDESC_TAIL_POINTER -  */
/*! @{ */
#define GMAC_DMA_CH4_RXDESC_TAIL_POINTER_RDTP_MASK (0xFFFFFFF8U)
#define GMAC_DMA_CH4_RXDESC_TAIL_POINTER_RDTP_SHIFT (3U)
#define GMAC_DMA_CH4_RXDESC_TAIL_POINTER_RDTP_WIDTH (29U)
#define GMAC_DMA_CH4_RXDESC_TAIL_POINTER_RDTP(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH4_RXDESC_TAIL_POINTER_RDTP_SHIFT)) & GMAC_DMA_CH4_RXDESC_TAIL_POINTER_RDTP_MASK)
/*! @} */

/*! @name DMA_CH4_TXDESC_RING_LENGTH -  */
/*! @{ */
#define GMAC_DMA_CH4_TXDESC_RING_LENGTH_TDRL_MASK (0x3FFU)
#define GMAC_DMA_CH4_TXDESC_RING_LENGTH_TDRL_SHIFT (0U)
#define GMAC_DMA_CH4_TXDESC_RING_LENGTH_TDRL_WIDTH (10U)
#define GMAC_DMA_CH4_TXDESC_RING_LENGTH_TDRL(x)  (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH4_TXDESC_RING_LENGTH_TDRL_SHIFT)) & GMAC_DMA_CH4_TXDESC_RING_LENGTH_TDRL_MASK)
/*! @} */

/*! @name DMA_CH4_RXDESC_RING_LENGTH -  */
/*! @{ */
#define GMAC_DMA_CH4_RXDESC_RING_LENGTH_RDRL_MASK (0x3FFU)
#define GMAC_DMA_CH4_RXDESC_RING_LENGTH_RDRL_SHIFT (0U)
#define GMAC_DMA_CH4_RXDESC_RING_LENGTH_RDRL_WIDTH (10U)
#define GMAC_DMA_CH4_RXDESC_RING_LENGTH_RDRL(x)  (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH4_RXDESC_RING_LENGTH_RDRL_SHIFT)) & GMAC_DMA_CH4_RXDESC_RING_LENGTH_RDRL_MASK)
/*! @} */

/*! @name DMA_CH4_INTERRUPT_ENABLE -  */
/*! @{ */
#define GMAC_DMA_CH4_INTERRUPT_ENABLE_TIE_MASK   (0x1U)
#define GMAC_DMA_CH4_INTERRUPT_ENABLE_TIE_SHIFT  (0U)
#define GMAC_DMA_CH4_INTERRUPT_ENABLE_TIE_WIDTH  (1U)
#define GMAC_DMA_CH4_INTERRUPT_ENABLE_TIE(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH4_INTERRUPT_ENABLE_TIE_SHIFT)) & GMAC_DMA_CH4_INTERRUPT_ENABLE_TIE_MASK)
#define GMAC_DMA_CH4_INTERRUPT_ENABLE_TXSE_MASK  (0x2U)
#define GMAC_DMA_CH4_INTERRUPT_ENABLE_TXSE_SHIFT (1U)
#define GMAC_DMA_CH4_INTERRUPT_ENABLE_TXSE_WIDTH (1U)
#define GMAC_DMA_CH4_INTERRUPT_ENABLE_TXSE(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH4_INTERRUPT_ENABLE_TXSE_SHIFT)) & GMAC_DMA_CH4_INTERRUPT_ENABLE_TXSE_MASK)
#define GMAC_DMA_CH4_INTERRUPT_ENABLE_TBUE_MASK  (0x4U)
#define GMAC_DMA_CH4_INTERRUPT_ENABLE_TBUE_SHIFT (2U)
#define GMAC_DMA_CH4_INTERRUPT_ENABLE_TBUE_WIDTH (1U)
#define GMAC_DMA_CH4_INTERRUPT_ENABLE_TBUE(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH4_INTERRUPT_ENABLE_TBUE_SHIFT)) & GMAC_DMA_CH4_INTERRUPT_ENABLE_TBUE_MASK)
#define GMAC_DMA_CH4_INTERRUPT_ENABLE_RIE_MASK   (0x40U)
#define GMAC_DMA_CH4_INTERRUPT_ENABLE_RIE_SHIFT  (6U)
#define GMAC_DMA_CH4_INTERRUPT_ENABLE_RIE_WIDTH  (1U)
#define GMAC_DMA_CH4_INTERRUPT_ENABLE_RIE(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH4_INTERRUPT_ENABLE_RIE_SHIFT)) & GMAC_DMA_CH4_INTERRUPT_ENABLE_RIE_MASK)
#define GMAC_DMA_CH4_INTERRUPT_ENABLE_RBUE_MASK  (0x80U)
#define GMAC_DMA_CH4_INTERRUPT_ENABLE_RBUE_SHIFT (7U)
#define GMAC_DMA_CH4_INTERRUPT_ENABLE_RBUE_WIDTH (1U)
#define GMAC_DMA_CH4_INTERRUPT_ENABLE_RBUE(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH4_INTERRUPT_ENABLE_RBUE_SHIFT)) & GMAC_DMA_CH4_INTERRUPT_ENABLE_RBUE_MASK)
#define GMAC_DMA_CH4_INTERRUPT_ENABLE_RSE_MASK   (0x100U)
#define GMAC_DMA_CH4_INTERRUPT_ENABLE_RSE_SHIFT  (8U)
#define GMAC_DMA_CH4_INTERRUPT_ENABLE_RSE_WIDTH  (1U)
#define GMAC_DMA_CH4_INTERRUPT_ENABLE_RSE(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH4_INTERRUPT_ENABLE_RSE_SHIFT)) & GMAC_DMA_CH4_INTERRUPT_ENABLE_RSE_MASK)
#define GMAC_DMA_CH4_INTERRUPT_ENABLE_RWTE_MASK  (0x200U)
#define GMAC_DMA_CH4_INTERRUPT_ENABLE_RWTE_SHIFT (9U)
#define GMAC_DMA_CH4_INTERRUPT_ENABLE_RWTE_WIDTH (1U)
#define GMAC_DMA_CH4_INTERRUPT_ENABLE_RWTE(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH4_INTERRUPT_ENABLE_RWTE_SHIFT)) & GMAC_DMA_CH4_INTERRUPT_ENABLE_RWTE_MASK)
#define GMAC_DMA_CH4_INTERRUPT_ENABLE_ETIE_MASK  (0x400U)
#define GMAC_DMA_CH4_INTERRUPT_ENABLE_ETIE_SHIFT (10U)
#define GMAC_DMA_CH4_INTERRUPT_ENABLE_ETIE_WIDTH (1U)
#define GMAC_DMA_CH4_INTERRUPT_ENABLE_ETIE(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH4_INTERRUPT_ENABLE_ETIE_SHIFT)) & GMAC_DMA_CH4_INTERRUPT_ENABLE_ETIE_MASK)
#define GMAC_DMA_CH4_INTERRUPT_ENABLE_ERIE_MASK  (0x800U)
#define GMAC_DMA_CH4_INTERRUPT_ENABLE_ERIE_SHIFT (11U)
#define GMAC_DMA_CH4_INTERRUPT_ENABLE_ERIE_WIDTH (1U)
#define GMAC_DMA_CH4_INTERRUPT_ENABLE_ERIE(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH4_INTERRUPT_ENABLE_ERIE_SHIFT)) & GMAC_DMA_CH4_INTERRUPT_ENABLE_ERIE_MASK)
#define GMAC_DMA_CH4_INTERRUPT_ENABLE_FBEE_MASK  (0x1000U)
#define GMAC_DMA_CH4_INTERRUPT_ENABLE_FBEE_SHIFT (12U)
#define GMAC_DMA_CH4_INTERRUPT_ENABLE_FBEE_WIDTH (1U)
#define GMAC_DMA_CH4_INTERRUPT_ENABLE_FBEE(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH4_INTERRUPT_ENABLE_FBEE_SHIFT)) & GMAC_DMA_CH4_INTERRUPT_ENABLE_FBEE_MASK)
#define GMAC_DMA_CH4_INTERRUPT_ENABLE_CDEE_MASK  (0x2000U)
#define GMAC_DMA_CH4_INTERRUPT_ENABLE_CDEE_SHIFT (13U)
#define GMAC_DMA_CH4_INTERRUPT_ENABLE_CDEE_WIDTH (1U)
#define GMAC_DMA_CH4_INTERRUPT_ENABLE_CDEE(x)    (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH4_INTERRUPT_ENABLE_CDEE_SHIFT)) & GMAC_DMA_CH4_INTERRUPT_ENABLE_CDEE_MASK)
#define GMAC_DMA_CH4_INTERRUPT_ENABLE_AIE_MASK   (0x4000U)
#define GMAC_DMA_CH4_INTERRUPT_ENABLE_AIE_SHIFT  (14U)
#define GMAC_DMA_CH4_INTERRUPT_ENABLE_AIE_WIDTH  (1U)
#define GMAC_DMA_CH4_INTERRUPT_ENABLE_AIE(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH4_INTERRUPT_ENABLE_AIE_SHIFT)) & GMAC_DMA_CH4_INTERRUPT_ENABLE_AIE_MASK)
#define GMAC_DMA_CH4_INTERRUPT_ENABLE_NIE_MASK   (0x8000U)
#define GMAC_DMA_CH4_INTERRUPT_ENABLE_NIE_SHIFT  (15U)
#define GMAC_DMA_CH4_INTERRUPT_ENABLE_NIE_WIDTH  (1U)
#define GMAC_DMA_CH4_INTERRUPT_ENABLE_NIE(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH4_INTERRUPT_ENABLE_NIE_SHIFT)) & GMAC_DMA_CH4_INTERRUPT_ENABLE_NIE_MASK)
/*! @} */

/*! @name DMA_CH4_RX_INTERRUPT_WATCHDOG_TIMER -  */
/*! @{ */
#define GMAC_DMA_CH4_RX_INTERRUPT_WATCHDOG_TIMER_RWT_MASK (0xFFU)
#define GMAC_DMA_CH4_RX_INTERRUPT_WATCHDOG_TIMER_RWT_SHIFT (0U)
#define GMAC_DMA_CH4_RX_INTERRUPT_WATCHDOG_TIMER_RWT_WIDTH (8U)
#define GMAC_DMA_CH4_RX_INTERRUPT_WATCHDOG_TIMER_RWT(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH4_RX_INTERRUPT_WATCHDOG_TIMER_RWT_SHIFT)) & GMAC_DMA_CH4_RX_INTERRUPT_WATCHDOG_TIMER_RWT_MASK)
#define GMAC_DMA_CH4_RX_INTERRUPT_WATCHDOG_TIMER_RWTU_MASK (0x30000U)
#define GMAC_DMA_CH4_RX_INTERRUPT_WATCHDOG_TIMER_RWTU_SHIFT (16U)
#define GMAC_DMA_CH4_RX_INTERRUPT_WATCHDOG_TIMER_RWTU_WIDTH (2U)
#define GMAC_DMA_CH4_RX_INTERRUPT_WATCHDOG_TIMER_RWTU(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH4_RX_INTERRUPT_WATCHDOG_TIMER_RWTU_SHIFT)) & GMAC_DMA_CH4_RX_INTERRUPT_WATCHDOG_TIMER_RWTU_MASK)
/*! @} */

/*! @name DMA_CH4_SLOT_FUNCTION_CONTROL_STATUS -  */
/*! @{ */
#define GMAC_DMA_CH4_SLOT_FUNCTION_CONTROL_STATUS_ESC_MASK (0x1U)
#define GMAC_DMA_CH4_SLOT_FUNCTION_CONTROL_STATUS_ESC_SHIFT (0U)
#define GMAC_DMA_CH4_SLOT_FUNCTION_CONTROL_STATUS_ESC_WIDTH (1U)
#define GMAC_DMA_CH4_SLOT_FUNCTION_CONTROL_STATUS_ESC(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH4_SLOT_FUNCTION_CONTROL_STATUS_ESC_SHIFT)) & GMAC_DMA_CH4_SLOT_FUNCTION_CONTROL_STATUS_ESC_MASK)
#define GMAC_DMA_CH4_SLOT_FUNCTION_CONTROL_STATUS_ASC_MASK (0x2U)
#define GMAC_DMA_CH4_SLOT_FUNCTION_CONTROL_STATUS_ASC_SHIFT (1U)
#define GMAC_DMA_CH4_SLOT_FUNCTION_CONTROL_STATUS_ASC_WIDTH (1U)
#define GMAC_DMA_CH4_SLOT_FUNCTION_CONTROL_STATUS_ASC(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH4_SLOT_FUNCTION_CONTROL_STATUS_ASC_SHIFT)) & GMAC_DMA_CH4_SLOT_FUNCTION_CONTROL_STATUS_ASC_MASK)
#define GMAC_DMA_CH4_SLOT_FUNCTION_CONTROL_STATUS_SIV_MASK (0xFFF0U)
#define GMAC_DMA_CH4_SLOT_FUNCTION_CONTROL_STATUS_SIV_SHIFT (4U)
#define GMAC_DMA_CH4_SLOT_FUNCTION_CONTROL_STATUS_SIV_WIDTH (12U)
#define GMAC_DMA_CH4_SLOT_FUNCTION_CONTROL_STATUS_SIV(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH4_SLOT_FUNCTION_CONTROL_STATUS_SIV_SHIFT)) & GMAC_DMA_CH4_SLOT_FUNCTION_CONTROL_STATUS_SIV_MASK)
#define GMAC_DMA_CH4_SLOT_FUNCTION_CONTROL_STATUS_RSN_MASK (0xF0000U)
#define GMAC_DMA_CH4_SLOT_FUNCTION_CONTROL_STATUS_RSN_SHIFT (16U)
#define GMAC_DMA_CH4_SLOT_FUNCTION_CONTROL_STATUS_RSN_WIDTH (4U)
#define GMAC_DMA_CH4_SLOT_FUNCTION_CONTROL_STATUS_RSN(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH4_SLOT_FUNCTION_CONTROL_STATUS_RSN_SHIFT)) & GMAC_DMA_CH4_SLOT_FUNCTION_CONTROL_STATUS_RSN_MASK)
/*! @} */

/*! @name DMA_CH4_CURRENT_APP_TXDESC -  */
/*! @{ */
#define GMAC_DMA_CH4_CURRENT_APP_TXDESC_CURTDESAPTR_MASK (0xFFFFFFFFU)
#define GMAC_DMA_CH4_CURRENT_APP_TXDESC_CURTDESAPTR_SHIFT (0U)
#define GMAC_DMA_CH4_CURRENT_APP_TXDESC_CURTDESAPTR_WIDTH (32U)
#define GMAC_DMA_CH4_CURRENT_APP_TXDESC_CURTDESAPTR(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH4_CURRENT_APP_TXDESC_CURTDESAPTR_SHIFT)) & GMAC_DMA_CH4_CURRENT_APP_TXDESC_CURTDESAPTR_MASK)
/*! @} */

/*! @name DMA_CH4_CURRENT_APP_RXDESC -  */
/*! @{ */
#define GMAC_DMA_CH4_CURRENT_APP_RXDESC_CURRDESAPTR_MASK (0xFFFFFFFFU)
#define GMAC_DMA_CH4_CURRENT_APP_RXDESC_CURRDESAPTR_SHIFT (0U)
#define GMAC_DMA_CH4_CURRENT_APP_RXDESC_CURRDESAPTR_WIDTH (32U)
#define GMAC_DMA_CH4_CURRENT_APP_RXDESC_CURRDESAPTR(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH4_CURRENT_APP_RXDESC_CURRDESAPTR_SHIFT)) & GMAC_DMA_CH4_CURRENT_APP_RXDESC_CURRDESAPTR_MASK)
/*! @} */

/*! @name DMA_CH4_CURRENT_APP_TXBUFFER -  */
/*! @{ */
#define GMAC_DMA_CH4_CURRENT_APP_TXBUFFER_CURTBUFAPTR_MASK (0xFFFFFFFFU)
#define GMAC_DMA_CH4_CURRENT_APP_TXBUFFER_CURTBUFAPTR_SHIFT (0U)
#define GMAC_DMA_CH4_CURRENT_APP_TXBUFFER_CURTBUFAPTR_WIDTH (32U)
#define GMAC_DMA_CH4_CURRENT_APP_TXBUFFER_CURTBUFAPTR(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH4_CURRENT_APP_TXBUFFER_CURTBUFAPTR_SHIFT)) & GMAC_DMA_CH4_CURRENT_APP_TXBUFFER_CURTBUFAPTR_MASK)
/*! @} */

/*! @name DMA_CH4_CURRENT_APP_RXBUFFER -  */
/*! @{ */
#define GMAC_DMA_CH4_CURRENT_APP_RXBUFFER_CURRBUFAPTR_MASK (0xFFFFFFFFU)
#define GMAC_DMA_CH4_CURRENT_APP_RXBUFFER_CURRBUFAPTR_SHIFT (0U)
#define GMAC_DMA_CH4_CURRENT_APP_RXBUFFER_CURRBUFAPTR_WIDTH (32U)
#define GMAC_DMA_CH4_CURRENT_APP_RXBUFFER_CURRBUFAPTR(x) (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH4_CURRENT_APP_RXBUFFER_CURRBUFAPTR_SHIFT)) & GMAC_DMA_CH4_CURRENT_APP_RXBUFFER_CURRBUFAPTR_MASK)
/*! @} */

/*! @name DMA_CH4_STATUS -  */
/*! @{ */
#define GMAC_DMA_CH4_STATUS_TI_MASK              (0x1U)
#define GMAC_DMA_CH4_STATUS_TI_SHIFT             (0U)
#define GMAC_DMA_CH4_STATUS_TI_WIDTH             (1U)
#define GMAC_DMA_CH4_STATUS_TI(x)                (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH4_STATUS_TI_SHIFT)) & GMAC_DMA_CH4_STATUS_TI_MASK)
#define GMAC_DMA_CH4_STATUS_TPS_MASK             (0x2U)
#define GMAC_DMA_CH4_STATUS_TPS_SHIFT            (1U)
#define GMAC_DMA_CH4_STATUS_TPS_WIDTH            (1U)
#define GMAC_DMA_CH4_STATUS_TPS(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH4_STATUS_TPS_SHIFT)) & GMAC_DMA_CH4_STATUS_TPS_MASK)
#define GMAC_DMA_CH4_STATUS_TBU_MASK             (0x4U)
#define GMAC_DMA_CH4_STATUS_TBU_SHIFT            (2U)
#define GMAC_DMA_CH4_STATUS_TBU_WIDTH            (1U)
#define GMAC_DMA_CH4_STATUS_TBU(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH4_STATUS_TBU_SHIFT)) & GMAC_DMA_CH4_STATUS_TBU_MASK)
#define GMAC_DMA_CH4_STATUS_RI_MASK              (0x40U)
#define GMAC_DMA_CH4_STATUS_RI_SHIFT             (6U)
#define GMAC_DMA_CH4_STATUS_RI_WIDTH             (1U)
#define GMAC_DMA_CH4_STATUS_RI(x)                (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH4_STATUS_RI_SHIFT)) & GMAC_DMA_CH4_STATUS_RI_MASK)
#define GMAC_DMA_CH4_STATUS_RBU_MASK             (0x80U)
#define GMAC_DMA_CH4_STATUS_RBU_SHIFT            (7U)
#define GMAC_DMA_CH4_STATUS_RBU_WIDTH            (1U)
#define GMAC_DMA_CH4_STATUS_RBU(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH4_STATUS_RBU_SHIFT)) & GMAC_DMA_CH4_STATUS_RBU_MASK)
#define GMAC_DMA_CH4_STATUS_RPS_MASK             (0x100U)
#define GMAC_DMA_CH4_STATUS_RPS_SHIFT            (8U)
#define GMAC_DMA_CH4_STATUS_RPS_WIDTH            (1U)
#define GMAC_DMA_CH4_STATUS_RPS(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH4_STATUS_RPS_SHIFT)) & GMAC_DMA_CH4_STATUS_RPS_MASK)
#define GMAC_DMA_CH4_STATUS_RWT_MASK             (0x200U)
#define GMAC_DMA_CH4_STATUS_RWT_SHIFT            (9U)
#define GMAC_DMA_CH4_STATUS_RWT_WIDTH            (1U)
#define GMAC_DMA_CH4_STATUS_RWT(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH4_STATUS_RWT_SHIFT)) & GMAC_DMA_CH4_STATUS_RWT_MASK)
#define GMAC_DMA_CH4_STATUS_ETI_MASK             (0x400U)
#define GMAC_DMA_CH4_STATUS_ETI_SHIFT            (10U)
#define GMAC_DMA_CH4_STATUS_ETI_WIDTH            (1U)
#define GMAC_DMA_CH4_STATUS_ETI(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH4_STATUS_ETI_SHIFT)) & GMAC_DMA_CH4_STATUS_ETI_MASK)
#define GMAC_DMA_CH4_STATUS_ERI_MASK             (0x800U)
#define GMAC_DMA_CH4_STATUS_ERI_SHIFT            (11U)
#define GMAC_DMA_CH4_STATUS_ERI_WIDTH            (1U)
#define GMAC_DMA_CH4_STATUS_ERI(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH4_STATUS_ERI_SHIFT)) & GMAC_DMA_CH4_STATUS_ERI_MASK)
#define GMAC_DMA_CH4_STATUS_FBE_MASK             (0x1000U)
#define GMAC_DMA_CH4_STATUS_FBE_SHIFT            (12U)
#define GMAC_DMA_CH4_STATUS_FBE_WIDTH            (1U)
#define GMAC_DMA_CH4_STATUS_FBE(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH4_STATUS_FBE_SHIFT)) & GMAC_DMA_CH4_STATUS_FBE_MASK)
#define GMAC_DMA_CH4_STATUS_CDE_MASK             (0x2000U)
#define GMAC_DMA_CH4_STATUS_CDE_SHIFT            (13U)
#define GMAC_DMA_CH4_STATUS_CDE_WIDTH            (1U)
#define GMAC_DMA_CH4_STATUS_CDE(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH4_STATUS_CDE_SHIFT)) & GMAC_DMA_CH4_STATUS_CDE_MASK)
#define GMAC_DMA_CH4_STATUS_AIS_MASK             (0x4000U)
#define GMAC_DMA_CH4_STATUS_AIS_SHIFT            (14U)
#define GMAC_DMA_CH4_STATUS_AIS_WIDTH            (1U)
#define GMAC_DMA_CH4_STATUS_AIS(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH4_STATUS_AIS_SHIFT)) & GMAC_DMA_CH4_STATUS_AIS_MASK)
#define GMAC_DMA_CH4_STATUS_NIS_MASK             (0x8000U)
#define GMAC_DMA_CH4_STATUS_NIS_SHIFT            (15U)
#define GMAC_DMA_CH4_STATUS_NIS_WIDTH            (1U)
#define GMAC_DMA_CH4_STATUS_NIS(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH4_STATUS_NIS_SHIFT)) & GMAC_DMA_CH4_STATUS_NIS_MASK)
#define GMAC_DMA_CH4_STATUS_TEB_MASK             (0x70000U)
#define GMAC_DMA_CH4_STATUS_TEB_SHIFT            (16U)
#define GMAC_DMA_CH4_STATUS_TEB_WIDTH            (3U)
#define GMAC_DMA_CH4_STATUS_TEB(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH4_STATUS_TEB_SHIFT)) & GMAC_DMA_CH4_STATUS_TEB_MASK)
#define GMAC_DMA_CH4_STATUS_REB_MASK             (0x380000U)
#define GMAC_DMA_CH4_STATUS_REB_SHIFT            (19U)
#define GMAC_DMA_CH4_STATUS_REB_WIDTH            (3U)
#define GMAC_DMA_CH4_STATUS_REB(x)               (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH4_STATUS_REB_SHIFT)) & GMAC_DMA_CH4_STATUS_REB_MASK)
/*! @} */

/*! @name DMA_CH4_MISS_FRAME_CNT -  */
/*! @{ */
#define GMAC_DMA_CH4_MISS_FRAME_CNT_MFC_MASK     (0x7FFU)
#define GMAC_DMA_CH4_MISS_FRAME_CNT_MFC_SHIFT    (0U)
#define GMAC_DMA_CH4_MISS_FRAME_CNT_MFC_WIDTH    (11U)
#define GMAC_DMA_CH4_MISS_FRAME_CNT_MFC(x)       (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH4_MISS_FRAME_CNT_MFC_SHIFT)) & GMAC_DMA_CH4_MISS_FRAME_CNT_MFC_MASK)
#define GMAC_DMA_CH4_MISS_FRAME_CNT_MFCO_MASK    (0x8000U)
#define GMAC_DMA_CH4_MISS_FRAME_CNT_MFCO_SHIFT   (15U)
#define GMAC_DMA_CH4_MISS_FRAME_CNT_MFCO_WIDTH   (1U)
#define GMAC_DMA_CH4_MISS_FRAME_CNT_MFCO(x)      (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH4_MISS_FRAME_CNT_MFCO_SHIFT)) & GMAC_DMA_CH4_MISS_FRAME_CNT_MFCO_MASK)
/*! @} */

/*! @name DMA_CH4_RXP_ACCEPT_CNT -  */
/*! @{ */
#define GMAC_DMA_CH4_RXP_ACCEPT_CNT_RXPAC_MASK   (0x7FFFFFFFU)
#define GMAC_DMA_CH4_RXP_ACCEPT_CNT_RXPAC_SHIFT  (0U)
#define GMAC_DMA_CH4_RXP_ACCEPT_CNT_RXPAC_WIDTH  (31U)
#define GMAC_DMA_CH4_RXP_ACCEPT_CNT_RXPAC(x)     (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH4_RXP_ACCEPT_CNT_RXPAC_SHIFT)) & GMAC_DMA_CH4_RXP_ACCEPT_CNT_RXPAC_MASK)
#define GMAC_DMA_CH4_RXP_ACCEPT_CNT_RXPACOF_MASK (0x80000000U)
#define GMAC_DMA_CH4_RXP_ACCEPT_CNT_RXPACOF_SHIFT (31U)
#define GMAC_DMA_CH4_RXP_ACCEPT_CNT_RXPACOF_WIDTH (1U)
#define GMAC_DMA_CH4_RXP_ACCEPT_CNT_RXPACOF(x)   (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH4_RXP_ACCEPT_CNT_RXPACOF_SHIFT)) & GMAC_DMA_CH4_RXP_ACCEPT_CNT_RXPACOF_MASK)
/*! @} */

/*! @name DMA_CH4_RX_ERI_CNT -  */
/*! @{ */
#define GMAC_DMA_CH4_RX_ERI_CNT_ECNT_MASK        (0xFFFU)
#define GMAC_DMA_CH4_RX_ERI_CNT_ECNT_SHIFT       (0U)
#define GMAC_DMA_CH4_RX_ERI_CNT_ECNT_WIDTH       (12U)
#define GMAC_DMA_CH4_RX_ERI_CNT_ECNT(x)          (((uint32_t)(((uint32_t)(x)) << GMAC_DMA_CH4_RX_ERI_CNT_ECNT_SHIFT)) & GMAC_DMA_CH4_RX_ERI_CNT_ECNT_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group GMAC_Register_Masks */


/*!
 * @}
 */ /* end of group GMAC_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- I2C Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup I2C_Peripheral_Access_Layer I2C Peripheral Access Layer
 * @{
 */

/** I2C - Register Layout Typedef */
typedef struct {
  __IO uint8_t IBAD;                               /**< I2C Bus Address Register, offset: 0x0 */
  __IO uint8_t IBFD;                               /**< I2C Bus Frequency Divider Register, offset: 0x1 */
  __IO uint8_t IBCR;                               /**< I2C Bus Control Register, offset: 0x2 */
  __IO uint8_t IBSR;                               /**< I2C Bus Status Register, offset: 0x3 */
  __IO uint8_t IBDR;                               /**< I2C Bus Data I/O Register, offset: 0x4 */
  __IO uint8_t IBIC;                               /**< I2C Bus Interrupt Config Register, offset: 0x5 */
  __IO uint8_t IBDBG;                              /**< I2C Bus Debug Register, offset: 0x6 */
} I2C_Type, *I2C_MemMapPtr;

/** Number of instances of the I2C module. */
#define I2C_INSTANCE_COUNT                       (5u)

/* I2C - Peripheral instance base addresses */
/** Peripheral I2C_0 base address */
#define I2C_0_BASE                               (0x401E4000u)
/** Peripheral I2C_0 base pointer */
#define I2C_0                                    ((I2C_Type *)I2C_0_BASE)
/** Peripheral I2C_1 base address */
#define I2C_1_BASE                               (0x401E8000u)
/** Peripheral I2C_1 base pointer */
#define I2C_1                                    ((I2C_Type *)I2C_1_BASE)
/** Peripheral I2C_2 base address */
#define I2C_2_BASE                               (0x401EC000u)
/** Peripheral I2C_2 base pointer */
#define I2C_2                                    ((I2C_Type *)I2C_2_BASE)
/** Peripheral I2C_3 base address */
#define I2C_3_BASE                               (0x402D8000u)
/** Peripheral I2C_3 base pointer */
#define I2C_3                                    ((I2C_Type *)I2C_3_BASE)
/** Peripheral I2C_4 base address */
#define I2C_4_BASE                               (0x402DC000u)
/** Peripheral I2C_4 base pointer */
#define I2C_4                                    ((I2C_Type *)I2C_4_BASE)
/** Array initializer of I2C peripheral base addresses */
#define I2C_BASE_ADDRS                           { I2C_0_BASE, I2C_1_BASE, I2C_2_BASE, I2C_3_BASE, I2C_4_BASE }
/** Array initializer of I2C peripheral base pointers */
#define I2C_BASE_PTRS                            { I2C_0, I2C_1, I2C_2, I2C_3, I2C_4 }

/* ----------------------------------------------------------------------------
   -- I2C Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup I2C_Register_Masks I2C Register Masks
 * @{
 */

/*! @name IBAD - I2C Bus Address Register */
/*! @{ */
#define I2C_IBAD_ADR_MASK                        (0xFEU)
#define I2C_IBAD_ADR_SHIFT                       (1U)
#define I2C_IBAD_ADR_WIDTH                       (7U)
#define I2C_IBAD_ADR(x)                          (((uint8_t)(((uint8_t)(x)) << I2C_IBAD_ADR_SHIFT)) & I2C_IBAD_ADR_MASK)
/*! @} */

/*! @name IBFD - I2C Bus Frequency Divider Register */
/*! @{ */
#define I2C_IBFD_IBC_MASK                        (0xFFU)
#define I2C_IBFD_IBC_SHIFT                       (0U)
#define I2C_IBFD_IBC_WIDTH                       (8U)
#define I2C_IBFD_IBC(x)                          (((uint8_t)(((uint8_t)(x)) << I2C_IBFD_IBC_SHIFT)) & I2C_IBFD_IBC_MASK)
/*! @} */

/*! @name IBCR - I2C Bus Control Register */
/*! @{ */
#define I2C_IBCR_DMAEN_MASK                      (0x2U)
#define I2C_IBCR_DMAEN_SHIFT                     (1U)
#define I2C_IBCR_DMAEN_WIDTH                     (1U)
#define I2C_IBCR_DMAEN(x)                        (((uint8_t)(((uint8_t)(x)) << I2C_IBCR_DMAEN_SHIFT)) & I2C_IBCR_DMAEN_MASK)
#define I2C_IBCR_RSTA_MASK                       (0x4U)
#define I2C_IBCR_RSTA_SHIFT                      (2U)
#define I2C_IBCR_RSTA_WIDTH                      (1U)
#define I2C_IBCR_RSTA(x)                         (((uint8_t)(((uint8_t)(x)) << I2C_IBCR_RSTA_SHIFT)) & I2C_IBCR_RSTA_MASK)
#define I2C_IBCR_NOACK_MASK                      (0x8U)
#define I2C_IBCR_NOACK_SHIFT                     (3U)
#define I2C_IBCR_NOACK_WIDTH                     (1U)
#define I2C_IBCR_NOACK(x)                        (((uint8_t)(((uint8_t)(x)) << I2C_IBCR_NOACK_SHIFT)) & I2C_IBCR_NOACK_MASK)
#define I2C_IBCR_TXRX_MASK                       (0x10U)
#define I2C_IBCR_TXRX_SHIFT                      (4U)
#define I2C_IBCR_TXRX_WIDTH                      (1U)
#define I2C_IBCR_TXRX(x)                         (((uint8_t)(((uint8_t)(x)) << I2C_IBCR_TXRX_SHIFT)) & I2C_IBCR_TXRX_MASK)
#define I2C_IBCR_MSSL_MASK                       (0x20U)
#define I2C_IBCR_MSSL_SHIFT                      (5U)
#define I2C_IBCR_MSSL_WIDTH                      (1U)
#define I2C_IBCR_MSSL(x)                         (((uint8_t)(((uint8_t)(x)) << I2C_IBCR_MSSL_SHIFT)) & I2C_IBCR_MSSL_MASK)
#define I2C_IBCR_IBIE_MASK                       (0x40U)
#define I2C_IBCR_IBIE_SHIFT                      (6U)
#define I2C_IBCR_IBIE_WIDTH                      (1U)
#define I2C_IBCR_IBIE(x)                         (((uint8_t)(((uint8_t)(x)) << I2C_IBCR_IBIE_SHIFT)) & I2C_IBCR_IBIE_MASK)
#define I2C_IBCR_MDIS_MASK                       (0x80U)
#define I2C_IBCR_MDIS_SHIFT                      (7U)
#define I2C_IBCR_MDIS_WIDTH                      (1U)
#define I2C_IBCR_MDIS(x)                         (((uint8_t)(((uint8_t)(x)) << I2C_IBCR_MDIS_SHIFT)) & I2C_IBCR_MDIS_MASK)
/*! @} */

/*! @name IBSR - I2C Bus Status Register */
/*! @{ */
#define I2C_IBSR_RXAK_MASK                       (0x1U)
#define I2C_IBSR_RXAK_SHIFT                      (0U)
#define I2C_IBSR_RXAK_WIDTH                      (1U)
#define I2C_IBSR_RXAK(x)                         (((uint8_t)(((uint8_t)(x)) << I2C_IBSR_RXAK_SHIFT)) & I2C_IBSR_RXAK_MASK)
#define I2C_IBSR_IBIF_MASK                       (0x2U)
#define I2C_IBSR_IBIF_SHIFT                      (1U)
#define I2C_IBSR_IBIF_WIDTH                      (1U)
#define I2C_IBSR_IBIF(x)                         (((uint8_t)(((uint8_t)(x)) << I2C_IBSR_IBIF_SHIFT)) & I2C_IBSR_IBIF_MASK)
#define I2C_IBSR_SRW_MASK                        (0x4U)
#define I2C_IBSR_SRW_SHIFT                       (2U)
#define I2C_IBSR_SRW_WIDTH                       (1U)
#define I2C_IBSR_SRW(x)                          (((uint8_t)(((uint8_t)(x)) << I2C_IBSR_SRW_SHIFT)) & I2C_IBSR_SRW_MASK)
#define I2C_IBSR_IBAL_MASK                       (0x10U)
#define I2C_IBSR_IBAL_SHIFT                      (4U)
#define I2C_IBSR_IBAL_WIDTH                      (1U)
#define I2C_IBSR_IBAL(x)                         (((uint8_t)(((uint8_t)(x)) << I2C_IBSR_IBAL_SHIFT)) & I2C_IBSR_IBAL_MASK)
#define I2C_IBSR_IBB_MASK                        (0x20U)
#define I2C_IBSR_IBB_SHIFT                       (5U)
#define I2C_IBSR_IBB_WIDTH                       (1U)
#define I2C_IBSR_IBB(x)                          (((uint8_t)(((uint8_t)(x)) << I2C_IBSR_IBB_SHIFT)) & I2C_IBSR_IBB_MASK)
#define I2C_IBSR_IAAS_MASK                       (0x40U)
#define I2C_IBSR_IAAS_SHIFT                      (6U)
#define I2C_IBSR_IAAS_WIDTH                      (1U)
#define I2C_IBSR_IAAS(x)                         (((uint8_t)(((uint8_t)(x)) << I2C_IBSR_IAAS_SHIFT)) & I2C_IBSR_IAAS_MASK)
#define I2C_IBSR_TCF_MASK                        (0x80U)
#define I2C_IBSR_TCF_SHIFT                       (7U)
#define I2C_IBSR_TCF_WIDTH                       (1U)
#define I2C_IBSR_TCF(x)                          (((uint8_t)(((uint8_t)(x)) << I2C_IBSR_TCF_SHIFT)) & I2C_IBSR_TCF_MASK)
/*! @} */

/*! @name IBDR - I2C Bus Data I/O Register */
/*! @{ */
#define I2C_IBDR_DATA_MASK                       (0xFFU)
#define I2C_IBDR_DATA_SHIFT                      (0U)
#define I2C_IBDR_DATA_WIDTH                      (8U)
#define I2C_IBDR_DATA(x)                         (((uint8_t)(((uint8_t)(x)) << I2C_IBDR_DATA_SHIFT)) & I2C_IBDR_DATA_MASK)
/*! @} */

/*! @name IBIC - I2C Bus Interrupt Config Register */
/*! @{ */
#define I2C_IBIC_BYTERXIE_MASK                   (0x40U)
#define I2C_IBIC_BYTERXIE_SHIFT                  (6U)
#define I2C_IBIC_BYTERXIE_WIDTH                  (1U)
#define I2C_IBIC_BYTERXIE(x)                     (((uint8_t)(((uint8_t)(x)) << I2C_IBIC_BYTERXIE_SHIFT)) & I2C_IBIC_BYTERXIE_MASK)
#define I2C_IBIC_BIIE_MASK                       (0x80U)
#define I2C_IBIC_BIIE_SHIFT                      (7U)
#define I2C_IBIC_BIIE_WIDTH                      (1U)
#define I2C_IBIC_BIIE(x)                         (((uint8_t)(((uint8_t)(x)) << I2C_IBIC_BIIE_SHIFT)) & I2C_IBIC_BIIE_MASK)
/*! @} */

/*! @name IBDBG - I2C Bus Debug Register */
/*! @{ */
#define I2C_IBDBG_IPG_DEBUG_EN_MASK              (0x1U)
#define I2C_IBDBG_IPG_DEBUG_EN_SHIFT             (0U)
#define I2C_IBDBG_IPG_DEBUG_EN_WIDTH             (1U)
#define I2C_IBDBG_IPG_DEBUG_EN(x)                (((uint8_t)(((uint8_t)(x)) << I2C_IBDBG_IPG_DEBUG_EN_SHIFT)) & I2C_IBDBG_IPG_DEBUG_EN_MASK)
#define I2C_IBDBG_IPG_DEBUG_HALTED_MASK          (0x2U)
#define I2C_IBDBG_IPG_DEBUG_HALTED_SHIFT         (1U)
#define I2C_IBDBG_IPG_DEBUG_HALTED_WIDTH         (1U)
#define I2C_IBDBG_IPG_DEBUG_HALTED(x)            (((uint8_t)(((uint8_t)(x)) << I2C_IBDBG_IPG_DEBUG_HALTED_SHIFT)) & I2C_IBDBG_IPG_DEBUG_HALTED_MASK)
#define I2C_IBDBG_BYTE_RX_MASK                   (0x4U)
#define I2C_IBDBG_BYTE_RX_SHIFT                  (2U)
#define I2C_IBDBG_BYTE_RX_WIDTH                  (1U)
#define I2C_IBDBG_BYTE_RX(x)                     (((uint8_t)(((uint8_t)(x)) << I2C_IBDBG_BYTE_RX_SHIFT)) & I2C_IBDBG_BYTE_RX_MASK)
#define I2C_IBDBG_GLFLT_EN_MASK                  (0x8U)
#define I2C_IBDBG_GLFLT_EN_SHIFT                 (3U)
#define I2C_IBDBG_GLFLT_EN_WIDTH                 (1U)
#define I2C_IBDBG_GLFLT_EN(x)                    (((uint8_t)(((uint8_t)(x)) << I2C_IBDBG_GLFLT_EN_SHIFT)) & I2C_IBDBG_GLFLT_EN_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group I2C_Register_Masks */


/*!
 * @}
 */ /* end of group I2C_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- JDC Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup JDC_Peripheral_Access_Layer JDC Peripheral Access Layer
 * @{
 */

/** JDC - Register Layout Typedef */
typedef struct {
  __IO uint32_t MCR;                               /**< Module Configuration Register, offset: 0x0 */
  __IO uint32_t MSR;                               /**< Module Status Register, offset: 0x4 */
  __IO uint32_t JOUT_IPS;                          /**< JTAG Output Data Register, offset: 0x8 */
  __I  uint32_t JIN_IPS;                           /**< JTAG Input Data Register, offset: 0xC */
} JDC_Type, *JDC_MemMapPtr;

/** Number of instances of the JDC module. */
#define JDC_INSTANCE_COUNT                       (1u)

/* JDC - Peripheral instance base addresses */
/** Peripheral JDC base address */
#define JDC_BASE                                 (0x402F4000u)
/** Peripheral JDC base pointer */
#define JDC                                      ((JDC_Type *)JDC_BASE)
/** Array initializer of JDC peripheral base addresses */
#define JDC_BASE_ADDRS                           { JDC_BASE }
/** Array initializer of JDC peripheral base pointers */
#define JDC_BASE_PTRS                            { JDC }

/* ----------------------------------------------------------------------------
   -- JDC Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup JDC_Register_Masks JDC Register Masks
 * @{
 */

/*! @name MCR - Module Configuration Register */
/*! @{ */
#define JDC_MCR_JOUT_IEN_MASK                    (0x1U)
#define JDC_MCR_JOUT_IEN_SHIFT                   (0U)
#define JDC_MCR_JOUT_IEN_WIDTH                   (1U)
#define JDC_MCR_JOUT_IEN(x)                      (((uint32_t)(((uint32_t)(x)) << JDC_MCR_JOUT_IEN_SHIFT)) & JDC_MCR_JOUT_IEN_MASK)
#define JDC_MCR_JIN_IEN_MASK                     (0x10000U)
#define JDC_MCR_JIN_IEN_SHIFT                    (16U)
#define JDC_MCR_JIN_IEN_WIDTH                    (1U)
#define JDC_MCR_JIN_IEN(x)                       (((uint32_t)(((uint32_t)(x)) << JDC_MCR_JIN_IEN_SHIFT)) & JDC_MCR_JIN_IEN_MASK)
/*! @} */

/*! @name MSR - Module Status Register */
/*! @{ */
#define JDC_MSR_JOUT_INT_MASK                    (0x1U)
#define JDC_MSR_JOUT_INT_SHIFT                   (0U)
#define JDC_MSR_JOUT_INT_WIDTH                   (1U)
#define JDC_MSR_JOUT_INT(x)                      (((uint32_t)(((uint32_t)(x)) << JDC_MSR_JOUT_INT_SHIFT)) & JDC_MSR_JOUT_INT_MASK)
#define JDC_MSR_JOUT_RDY_MASK                    (0x4U)
#define JDC_MSR_JOUT_RDY_SHIFT                   (2U)
#define JDC_MSR_JOUT_RDY_WIDTH                   (1U)
#define JDC_MSR_JOUT_RDY(x)                      (((uint32_t)(((uint32_t)(x)) << JDC_MSR_JOUT_RDY_SHIFT)) & JDC_MSR_JOUT_RDY_MASK)
#define JDC_MSR_JIN_INT_MASK                     (0x10000U)
#define JDC_MSR_JIN_INT_SHIFT                    (16U)
#define JDC_MSR_JIN_INT_WIDTH                    (1U)
#define JDC_MSR_JIN_INT(x)                       (((uint32_t)(((uint32_t)(x)) << JDC_MSR_JIN_INT_SHIFT)) & JDC_MSR_JIN_INT_MASK)
#define JDC_MSR_JIN_RDY_MASK                     (0x40000U)
#define JDC_MSR_JIN_RDY_SHIFT                    (18U)
#define JDC_MSR_JIN_RDY_WIDTH                    (1U)
#define JDC_MSR_JIN_RDY(x)                       (((uint32_t)(((uint32_t)(x)) << JDC_MSR_JIN_RDY_SHIFT)) & JDC_MSR_JIN_RDY_MASK)
/*! @} */

/*! @name JOUT_IPS - JTAG Output Data Register */
/*! @{ */
#define JDC_JOUT_IPS_Data_MASK                   (0xFFFFFFFFU)
#define JDC_JOUT_IPS_Data_SHIFT                  (0U)
#define JDC_JOUT_IPS_Data_WIDTH                  (32U)
#define JDC_JOUT_IPS_Data(x)                     (((uint32_t)(((uint32_t)(x)) << JDC_JOUT_IPS_Data_SHIFT)) & JDC_JOUT_IPS_Data_MASK)
/*! @} */

/*! @name JIN_IPS - JTAG Input Data Register */
/*! @{ */
#define JDC_JIN_IPS_Data_MASK                    (0xFFFFFFFFU)
#define JDC_JIN_IPS_Data_SHIFT                   (0U)
#define JDC_JIN_IPS_Data_WIDTH                   (32U)
#define JDC_JIN_IPS_Data(x)                      (((uint32_t)(((uint32_t)(x)) << JDC_JIN_IPS_Data_SHIFT)) & JDC_JIN_IPS_Data_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group JDC_Register_Masks */


/*!
 * @}
 */ /* end of group JDC_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- LINFlexD Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup LINFlexD_Peripheral_Access_Layer LINFlexD Peripheral Access Layer
 * @{
 */

/** LINFlexD - Register Layout Typedef */
typedef struct {
  __IO uint32_t LINCR1;                            /**< LIN Control Register 1, offset: 0x0 */
  __IO uint32_t LINIER;                            /**< LIN Interrupt Enable Register, offset: 0x4 */
  __IO uint32_t LINSR;                             /**< LIN Status Register, offset: 0x8 */
  __IO uint32_t LINESR;                            /**< LIN Error Status Register, offset: 0xC */
  __IO uint32_t UARTCR;                            /**< UART Mode Control Register, offset: 0x10 */
  __IO uint32_t UARTSR;                            /**< UART Mode Status Register, offset: 0x14 */
  __IO uint32_t LINTCSR;                           /**< LIN Time-Out Control Status Register, offset: 0x18 */
  __IO uint32_t LINOCR;                            /**< LIN Output Compare Register, offset: 0x1C */
  __IO uint32_t LINTOCR;                           /**< LIN Time-Out Control Register, offset: 0x20 */
  __IO uint32_t LINFBRR;                           /**< LIN Fractional Baud Rate Register, offset: 0x24 */
  __IO uint32_t LINIBRR;                           /**< LIN Integer Baud Rate Register, offset: 0x28 */
  __IO uint32_t LINCFR;                            /**< LIN Checksum Field Register, offset: 0x2C */
  __IO uint32_t LINCR2;                            /**< LIN Control Register 2, offset: 0x30 */
  __IO uint32_t BIDR;                              /**< Buffer Identifier Register, offset: 0x34 */
  __IO uint32_t BDRL;                              /**< Buffer Data Register Least Significant, offset: 0x38 */
  __IO uint32_t BDRM;                              /**< Buffer Data Register Most Significant, offset: 0x3C */
  uint8_t RESERVED_0[12];
  __IO uint32_t GCR;                               /**< Global Control Register, offset: 0x4C */
  __IO uint32_t UARTPTO;                           /**< UART Preset Timeout Register, offset: 0x50 */
  __I  uint32_t UARTCTO;                           /**< UART Current Timeout Register, offset: 0x54 */
  __IO uint32_t DMATXE;                            /**< DMA Tx Enable Register, offset: 0x58 */
  __IO uint32_t DMARXE;                            /**< DMA Rx Enable Register, offset: 0x5C */
} LINFlexD_Type, *LINFlexD_MemMapPtr;

/** Number of instances of the LINFlexD module. */
#define LINFlexD_INSTANCE_COUNT                  (3u)

/* LINFlexD - Peripheral instance base addresses */
/** Peripheral LINFlexD_0 base address */
#define LINFlexD_0_BASE                          (0x401C8000u)
/** Peripheral LINFlexD_0 base pointer */
#define LINFlexD_0                               ((LINFlexD_Type *)LINFlexD_0_BASE)
/** Peripheral LINFlexD_1 base address */
#define LINFlexD_1_BASE                          (0x401CC000u)
/** Peripheral LINFlexD_1 base pointer */
#define LINFlexD_1                               ((LINFlexD_Type *)LINFlexD_1_BASE)
/** Peripheral LINFlexD_2 base address */
#define LINFlexD_2_BASE                          (0x402BC000u)
/** Peripheral LINFlexD_2 base pointer */
#define LINFlexD_2                               ((LINFlexD_Type *)LINFlexD_2_BASE)
/** Array initializer of LINFlexD peripheral base addresses */
#define LINFlexD_BASE_ADDRS                      { LINFlexD_0_BASE, LINFlexD_1_BASE, LINFlexD_2_BASE }
/** Array initializer of LINFlexD peripheral base pointers */
#define LINFlexD_BASE_PTRS                       { LINFlexD_0, LINFlexD_1, LINFlexD_2 }

/* ----------------------------------------------------------------------------
   -- LINFlexD Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup LINFlexD_Register_Masks LINFlexD Register Masks
 * @{
 */

/*! @name LINCR1 - LIN Control Register 1 */
/*! @{ */
#define LINFlexD_LINCR1_INIT_MASK                (0x1U)
#define LINFlexD_LINCR1_INIT_SHIFT               (0U)
#define LINFlexD_LINCR1_INIT_WIDTH               (1U)
#define LINFlexD_LINCR1_INIT(x)                  (((uint32_t)(((uint32_t)(x)) << LINFlexD_LINCR1_INIT_SHIFT)) & LINFlexD_LINCR1_INIT_MASK)
#define LINFlexD_LINCR1_SLEEP_MASK               (0x2U)
#define LINFlexD_LINCR1_SLEEP_SHIFT              (1U)
#define LINFlexD_LINCR1_SLEEP_WIDTH              (1U)
#define LINFlexD_LINCR1_SLEEP(x)                 (((uint32_t)(((uint32_t)(x)) << LINFlexD_LINCR1_SLEEP_SHIFT)) & LINFlexD_LINCR1_SLEEP_MASK)
#define LINFlexD_LINCR1_RBLM_MASK                (0x4U)
#define LINFlexD_LINCR1_RBLM_SHIFT               (2U)
#define LINFlexD_LINCR1_RBLM_WIDTH               (1U)
#define LINFlexD_LINCR1_RBLM(x)                  (((uint32_t)(((uint32_t)(x)) << LINFlexD_LINCR1_RBLM_SHIFT)) & LINFlexD_LINCR1_RBLM_MASK)
#define LINFlexD_LINCR1_SSBL_MASK                (0x8U)
#define LINFlexD_LINCR1_SSBL_SHIFT               (3U)
#define LINFlexD_LINCR1_SSBL_WIDTH               (1U)
#define LINFlexD_LINCR1_SSBL(x)                  (((uint32_t)(((uint32_t)(x)) << LINFlexD_LINCR1_SSBL_SHIFT)) & LINFlexD_LINCR1_SSBL_MASK)
#define LINFlexD_LINCR1_MME_MASK                 (0x10U)
#define LINFlexD_LINCR1_MME_SHIFT                (4U)
#define LINFlexD_LINCR1_MME_WIDTH                (1U)
#define LINFlexD_LINCR1_MME(x)                   (((uint32_t)(((uint32_t)(x)) << LINFlexD_LINCR1_MME_SHIFT)) & LINFlexD_LINCR1_MME_MASK)
#define LINFlexD_LINCR1_LBKM_MASK                (0x20U)
#define LINFlexD_LINCR1_LBKM_SHIFT               (5U)
#define LINFlexD_LINCR1_LBKM_WIDTH               (1U)
#define LINFlexD_LINCR1_LBKM(x)                  (((uint32_t)(((uint32_t)(x)) << LINFlexD_LINCR1_LBKM_SHIFT)) & LINFlexD_LINCR1_LBKM_MASK)
#define LINFlexD_LINCR1_MBL_MASK                 (0xF00U)
#define LINFlexD_LINCR1_MBL_SHIFT                (8U)
#define LINFlexD_LINCR1_MBL_WIDTH                (4U)
#define LINFlexD_LINCR1_MBL(x)                   (((uint32_t)(((uint32_t)(x)) << LINFlexD_LINCR1_MBL_SHIFT)) & LINFlexD_LINCR1_MBL_MASK)
#define LINFlexD_LINCR1_AUTOWU_MASK              (0x1000U)
#define LINFlexD_LINCR1_AUTOWU_SHIFT             (12U)
#define LINFlexD_LINCR1_AUTOWU_WIDTH             (1U)
#define LINFlexD_LINCR1_AUTOWU(x)                (((uint32_t)(((uint32_t)(x)) << LINFlexD_LINCR1_AUTOWU_SHIFT)) & LINFlexD_LINCR1_AUTOWU_MASK)
#define LINFlexD_LINCR1_CFD_MASK                 (0x4000U)
#define LINFlexD_LINCR1_CFD_SHIFT                (14U)
#define LINFlexD_LINCR1_CFD_WIDTH                (1U)
#define LINFlexD_LINCR1_CFD(x)                   (((uint32_t)(((uint32_t)(x)) << LINFlexD_LINCR1_CFD_SHIFT)) & LINFlexD_LINCR1_CFD_MASK)
#define LINFlexD_LINCR1_CCD_MASK                 (0x8000U)
#define LINFlexD_LINCR1_CCD_SHIFT                (15U)
#define LINFlexD_LINCR1_CCD_WIDTH                (1U)
#define LINFlexD_LINCR1_CCD(x)                   (((uint32_t)(((uint32_t)(x)) << LINFlexD_LINCR1_CCD_SHIFT)) & LINFlexD_LINCR1_CCD_MASK)
#define LINFlexD_LINCR1_NLSE_MASK                (0x10000U)
#define LINFlexD_LINCR1_NLSE_SHIFT               (16U)
#define LINFlexD_LINCR1_NLSE_WIDTH               (1U)
#define LINFlexD_LINCR1_NLSE(x)                  (((uint32_t)(((uint32_t)(x)) << LINFlexD_LINCR1_NLSE_SHIFT)) & LINFlexD_LINCR1_NLSE_MASK)
/*! @} */

/*! @name LINIER - LIN Interrupt Enable Register */
/*! @{ */
#define LINFlexD_LINIER_HRIE_MASK                (0x1U)
#define LINFlexD_LINIER_HRIE_SHIFT               (0U)
#define LINFlexD_LINIER_HRIE_WIDTH               (1U)
#define LINFlexD_LINIER_HRIE(x)                  (((uint32_t)(((uint32_t)(x)) << LINFlexD_LINIER_HRIE_SHIFT)) & LINFlexD_LINIER_HRIE_MASK)
#define LINFlexD_LINIER_DTIE_MASK                (0x2U)
#define LINFlexD_LINIER_DTIE_SHIFT               (1U)
#define LINFlexD_LINIER_DTIE_WIDTH               (1U)
#define LINFlexD_LINIER_DTIE(x)                  (((uint32_t)(((uint32_t)(x)) << LINFlexD_LINIER_DTIE_SHIFT)) & LINFlexD_LINIER_DTIE_MASK)
#define LINFlexD_LINIER_DRIE_MASK                (0x4U)
#define LINFlexD_LINIER_DRIE_SHIFT               (2U)
#define LINFlexD_LINIER_DRIE_WIDTH               (1U)
#define LINFlexD_LINIER_DRIE(x)                  (((uint32_t)(((uint32_t)(x)) << LINFlexD_LINIER_DRIE_SHIFT)) & LINFlexD_LINIER_DRIE_MASK)
#define LINFlexD_LINIER_TOIE_MASK                (0x8U)
#define LINFlexD_LINIER_TOIE_SHIFT               (3U)
#define LINFlexD_LINIER_TOIE_WIDTH               (1U)
#define LINFlexD_LINIER_TOIE(x)                  (((uint32_t)(((uint32_t)(x)) << LINFlexD_LINIER_TOIE_SHIFT)) & LINFlexD_LINIER_TOIE_MASK)
#define LINFlexD_LINIER_WUIE_MASK                (0x20U)
#define LINFlexD_LINIER_WUIE_SHIFT               (5U)
#define LINFlexD_LINIER_WUIE_WIDTH               (1U)
#define LINFlexD_LINIER_WUIE(x)                  (((uint32_t)(((uint32_t)(x)) << LINFlexD_LINIER_WUIE_SHIFT)) & LINFlexD_LINIER_WUIE_MASK)
#define LINFlexD_LINIER_LSIE_MASK                (0x40U)
#define LINFlexD_LINIER_LSIE_SHIFT               (6U)
#define LINFlexD_LINIER_LSIE_WIDTH               (1U)
#define LINFlexD_LINIER_LSIE(x)                  (((uint32_t)(((uint32_t)(x)) << LINFlexD_LINIER_LSIE_SHIFT)) & LINFlexD_LINIER_LSIE_MASK)
#define LINFlexD_LINIER_BOIE_MASK                (0x80U)
#define LINFlexD_LINIER_BOIE_SHIFT               (7U)
#define LINFlexD_LINIER_BOIE_WIDTH               (1U)
#define LINFlexD_LINIER_BOIE(x)                  (((uint32_t)(((uint32_t)(x)) << LINFlexD_LINIER_BOIE_SHIFT)) & LINFlexD_LINIER_BOIE_MASK)
#define LINFlexD_LINIER_FEIE_MASK                (0x100U)
#define LINFlexD_LINIER_FEIE_SHIFT               (8U)
#define LINFlexD_LINIER_FEIE_WIDTH               (1U)
#define LINFlexD_LINIER_FEIE(x)                  (((uint32_t)(((uint32_t)(x)) << LINFlexD_LINIER_FEIE_SHIFT)) & LINFlexD_LINIER_FEIE_MASK)
#define LINFlexD_LINIER_HEIE_MASK                (0x800U)
#define LINFlexD_LINIER_HEIE_SHIFT               (11U)
#define LINFlexD_LINIER_HEIE_WIDTH               (1U)
#define LINFlexD_LINIER_HEIE(x)                  (((uint32_t)(((uint32_t)(x)) << LINFlexD_LINIER_HEIE_SHIFT)) & LINFlexD_LINIER_HEIE_MASK)
#define LINFlexD_LINIER_CEIE_MASK                (0x1000U)
#define LINFlexD_LINIER_CEIE_SHIFT               (12U)
#define LINFlexD_LINIER_CEIE_WIDTH               (1U)
#define LINFlexD_LINIER_CEIE(x)                  (((uint32_t)(((uint32_t)(x)) << LINFlexD_LINIER_CEIE_SHIFT)) & LINFlexD_LINIER_CEIE_MASK)
#define LINFlexD_LINIER_BEIE_MASK                (0x2000U)
#define LINFlexD_LINIER_BEIE_SHIFT               (13U)
#define LINFlexD_LINIER_BEIE_WIDTH               (1U)
#define LINFlexD_LINIER_BEIE(x)                  (((uint32_t)(((uint32_t)(x)) << LINFlexD_LINIER_BEIE_SHIFT)) & LINFlexD_LINIER_BEIE_MASK)
#define LINFlexD_LINIER_OCIE_MASK                (0x4000U)
#define LINFlexD_LINIER_OCIE_SHIFT               (14U)
#define LINFlexD_LINIER_OCIE_WIDTH               (1U)
#define LINFlexD_LINIER_OCIE(x)                  (((uint32_t)(((uint32_t)(x)) << LINFlexD_LINIER_OCIE_SHIFT)) & LINFlexD_LINIER_OCIE_MASK)
#define LINFlexD_LINIER_SZIE_MASK                (0x8000U)
#define LINFlexD_LINIER_SZIE_SHIFT               (15U)
#define LINFlexD_LINIER_SZIE_WIDTH               (1U)
#define LINFlexD_LINIER_SZIE(x)                  (((uint32_t)(((uint32_t)(x)) << LINFlexD_LINIER_SZIE_SHIFT)) & LINFlexD_LINIER_SZIE_MASK)
/*! @} */

/*! @name LINSR - LIN Status Register */
/*! @{ */
#define LINFlexD_LINSR_HRF_MASK                  (0x1U)
#define LINFlexD_LINSR_HRF_SHIFT                 (0U)
#define LINFlexD_LINSR_HRF_WIDTH                 (1U)
#define LINFlexD_LINSR_HRF(x)                    (((uint32_t)(((uint32_t)(x)) << LINFlexD_LINSR_HRF_SHIFT)) & LINFlexD_LINSR_HRF_MASK)
#define LINFlexD_LINSR_DTF_MASK                  (0x2U)
#define LINFlexD_LINSR_DTF_SHIFT                 (1U)
#define LINFlexD_LINSR_DTF_WIDTH                 (1U)
#define LINFlexD_LINSR_DTF(x)                    (((uint32_t)(((uint32_t)(x)) << LINFlexD_LINSR_DTF_SHIFT)) & LINFlexD_LINSR_DTF_MASK)
#define LINFlexD_LINSR_DRF_MASK                  (0x4U)
#define LINFlexD_LINSR_DRF_SHIFT                 (2U)
#define LINFlexD_LINSR_DRF_WIDTH                 (1U)
#define LINFlexD_LINSR_DRF(x)                    (((uint32_t)(((uint32_t)(x)) << LINFlexD_LINSR_DRF_SHIFT)) & LINFlexD_LINSR_DRF_MASK)
#define LINFlexD_LINSR_WUF_MASK                  (0x20U)
#define LINFlexD_LINSR_WUF_SHIFT                 (5U)
#define LINFlexD_LINSR_WUF_WIDTH                 (1U)
#define LINFlexD_LINSR_WUF(x)                    (((uint32_t)(((uint32_t)(x)) << LINFlexD_LINSR_WUF_SHIFT)) & LINFlexD_LINSR_WUF_MASK)
#define LINFlexD_LINSR_RDI_MASK                  (0x40U)
#define LINFlexD_LINSR_RDI_SHIFT                 (6U)
#define LINFlexD_LINSR_RDI_WIDTH                 (1U)
#define LINFlexD_LINSR_RDI(x)                    (((uint32_t)(((uint32_t)(x)) << LINFlexD_LINSR_RDI_SHIFT)) & LINFlexD_LINSR_RDI_MASK)
#define LINFlexD_LINSR_RXBUSY_MASK               (0x80U)
#define LINFlexD_LINSR_RXBUSY_SHIFT              (7U)
#define LINFlexD_LINSR_RXBUSY_WIDTH              (1U)
#define LINFlexD_LINSR_RXBUSY(x)                 (((uint32_t)(((uint32_t)(x)) << LINFlexD_LINSR_RXBUSY_SHIFT)) & LINFlexD_LINSR_RXBUSY_MASK)
#define LINFlexD_LINSR_DRBNE_MASK                (0x100U)
#define LINFlexD_LINSR_DRBNE_SHIFT               (8U)
#define LINFlexD_LINSR_DRBNE_WIDTH               (1U)
#define LINFlexD_LINSR_DRBNE(x)                  (((uint32_t)(((uint32_t)(x)) << LINFlexD_LINSR_DRBNE_SHIFT)) & LINFlexD_LINSR_DRBNE_MASK)
#define LINFlexD_LINSR_RMB_MASK                  (0x200U)
#define LINFlexD_LINSR_RMB_SHIFT                 (9U)
#define LINFlexD_LINSR_RMB_WIDTH                 (1U)
#define LINFlexD_LINSR_RMB(x)                    (((uint32_t)(((uint32_t)(x)) << LINFlexD_LINSR_RMB_SHIFT)) & LINFlexD_LINSR_RMB_MASK)
#define LINFlexD_LINSR_LINS_MASK                 (0xF000U)
#define LINFlexD_LINSR_LINS_SHIFT                (12U)
#define LINFlexD_LINSR_LINS_WIDTH                (4U)
#define LINFlexD_LINSR_LINS(x)                   (((uint32_t)(((uint32_t)(x)) << LINFlexD_LINSR_LINS_SHIFT)) & LINFlexD_LINSR_LINS_MASK)
#define LINFlexD_LINSR_RDC_MASK                  (0x70000U)
#define LINFlexD_LINSR_RDC_SHIFT                 (16U)
#define LINFlexD_LINSR_RDC_WIDTH                 (3U)
#define LINFlexD_LINSR_RDC(x)                    (((uint32_t)(((uint32_t)(x)) << LINFlexD_LINSR_RDC_SHIFT)) & LINFlexD_LINSR_RDC_MASK)
/*! @} */

/*! @name LINESR - LIN Error Status Register */
/*! @{ */
#define LINFlexD_LINESR_NF_MASK                  (0x1U)
#define LINFlexD_LINESR_NF_SHIFT                 (0U)
#define LINFlexD_LINESR_NF_WIDTH                 (1U)
#define LINFlexD_LINESR_NF(x)                    (((uint32_t)(((uint32_t)(x)) << LINFlexD_LINESR_NF_SHIFT)) & LINFlexD_LINESR_NF_MASK)
#define LINFlexD_LINESR_BOF_MASK                 (0x80U)
#define LINFlexD_LINESR_BOF_SHIFT                (7U)
#define LINFlexD_LINESR_BOF_WIDTH                (1U)
#define LINFlexD_LINESR_BOF(x)                   (((uint32_t)(((uint32_t)(x)) << LINFlexD_LINESR_BOF_SHIFT)) & LINFlexD_LINESR_BOF_MASK)
#define LINFlexD_LINESR_FEF_MASK                 (0x100U)
#define LINFlexD_LINESR_FEF_SHIFT                (8U)
#define LINFlexD_LINESR_FEF_WIDTH                (1U)
#define LINFlexD_LINESR_FEF(x)                   (((uint32_t)(((uint32_t)(x)) << LINFlexD_LINESR_FEF_SHIFT)) & LINFlexD_LINESR_FEF_MASK)
#define LINFlexD_LINESR_IDPEF_MASK               (0x200U)
#define LINFlexD_LINESR_IDPEF_SHIFT              (9U)
#define LINFlexD_LINESR_IDPEF_WIDTH              (1U)
#define LINFlexD_LINESR_IDPEF(x)                 (((uint32_t)(((uint32_t)(x)) << LINFlexD_LINESR_IDPEF_SHIFT)) & LINFlexD_LINESR_IDPEF_MASK)
#define LINFlexD_LINESR_SDEF_MASK                (0x400U)
#define LINFlexD_LINESR_SDEF_SHIFT               (10U)
#define LINFlexD_LINESR_SDEF_WIDTH               (1U)
#define LINFlexD_LINESR_SDEF(x)                  (((uint32_t)(((uint32_t)(x)) << LINFlexD_LINESR_SDEF_SHIFT)) & LINFlexD_LINESR_SDEF_MASK)
#define LINFlexD_LINESR_SFEF_MASK                (0x800U)
#define LINFlexD_LINESR_SFEF_SHIFT               (11U)
#define LINFlexD_LINESR_SFEF_WIDTH               (1U)
#define LINFlexD_LINESR_SFEF(x)                  (((uint32_t)(((uint32_t)(x)) << LINFlexD_LINESR_SFEF_SHIFT)) & LINFlexD_LINESR_SFEF_MASK)
#define LINFlexD_LINESR_CEF_MASK                 (0x1000U)
#define LINFlexD_LINESR_CEF_SHIFT                (12U)
#define LINFlexD_LINESR_CEF_WIDTH                (1U)
#define LINFlexD_LINESR_CEF(x)                   (((uint32_t)(((uint32_t)(x)) << LINFlexD_LINESR_CEF_SHIFT)) & LINFlexD_LINESR_CEF_MASK)
#define LINFlexD_LINESR_BEF_MASK                 (0x2000U)
#define LINFlexD_LINESR_BEF_SHIFT                (13U)
#define LINFlexD_LINESR_BEF_WIDTH                (1U)
#define LINFlexD_LINESR_BEF(x)                   (((uint32_t)(((uint32_t)(x)) << LINFlexD_LINESR_BEF_SHIFT)) & LINFlexD_LINESR_BEF_MASK)
#define LINFlexD_LINESR_OCF_MASK                 (0x4000U)
#define LINFlexD_LINESR_OCF_SHIFT                (14U)
#define LINFlexD_LINESR_OCF_WIDTH                (1U)
#define LINFlexD_LINESR_OCF(x)                   (((uint32_t)(((uint32_t)(x)) << LINFlexD_LINESR_OCF_SHIFT)) & LINFlexD_LINESR_OCF_MASK)
#define LINFlexD_LINESR_SZF_MASK                 (0x8000U)
#define LINFlexD_LINESR_SZF_SHIFT                (15U)
#define LINFlexD_LINESR_SZF_WIDTH                (1U)
#define LINFlexD_LINESR_SZF(x)                   (((uint32_t)(((uint32_t)(x)) << LINFlexD_LINESR_SZF_SHIFT)) & LINFlexD_LINESR_SZF_MASK)
/*! @} */

/*! @name UARTCR - UART Mode Control Register */
/*! @{ */
#define LINFlexD_UARTCR_UART_MASK                (0x1U)
#define LINFlexD_UARTCR_UART_SHIFT               (0U)
#define LINFlexD_UARTCR_UART_WIDTH               (1U)
#define LINFlexD_UARTCR_UART(x)                  (((uint32_t)(((uint32_t)(x)) << LINFlexD_UARTCR_UART_SHIFT)) & LINFlexD_UARTCR_UART_MASK)
#define LINFlexD_UARTCR_WL0_MASK                 (0x2U)
#define LINFlexD_UARTCR_WL0_SHIFT                (1U)
#define LINFlexD_UARTCR_WL0_WIDTH                (1U)
#define LINFlexD_UARTCR_WL0(x)                   (((uint32_t)(((uint32_t)(x)) << LINFlexD_UARTCR_WL0_SHIFT)) & LINFlexD_UARTCR_WL0_MASK)
#define LINFlexD_UARTCR_PCE_MASK                 (0x4U)
#define LINFlexD_UARTCR_PCE_SHIFT                (2U)
#define LINFlexD_UARTCR_PCE_WIDTH                (1U)
#define LINFlexD_UARTCR_PCE(x)                   (((uint32_t)(((uint32_t)(x)) << LINFlexD_UARTCR_PCE_SHIFT)) & LINFlexD_UARTCR_PCE_MASK)
#define LINFlexD_UARTCR_PC0_MASK                 (0x8U)
#define LINFlexD_UARTCR_PC0_SHIFT                (3U)
#define LINFlexD_UARTCR_PC0_WIDTH                (1U)
#define LINFlexD_UARTCR_PC0(x)                   (((uint32_t)(((uint32_t)(x)) << LINFlexD_UARTCR_PC0_SHIFT)) & LINFlexD_UARTCR_PC0_MASK)
#define LINFlexD_UARTCR_TxEn_MASK                (0x10U)
#define LINFlexD_UARTCR_TxEn_SHIFT               (4U)
#define LINFlexD_UARTCR_TxEn_WIDTH               (1U)
#define LINFlexD_UARTCR_TxEn(x)                  (((uint32_t)(((uint32_t)(x)) << LINFlexD_UARTCR_TxEn_SHIFT)) & LINFlexD_UARTCR_TxEn_MASK)
#define LINFlexD_UARTCR_RxEn_MASK                (0x20U)
#define LINFlexD_UARTCR_RxEn_SHIFT               (5U)
#define LINFlexD_UARTCR_RxEn_WIDTH               (1U)
#define LINFlexD_UARTCR_RxEn(x)                  (((uint32_t)(((uint32_t)(x)) << LINFlexD_UARTCR_RxEn_SHIFT)) & LINFlexD_UARTCR_RxEn_MASK)
#define LINFlexD_UARTCR_PC1_MASK                 (0x40U)
#define LINFlexD_UARTCR_PC1_SHIFT                (6U)
#define LINFlexD_UARTCR_PC1_WIDTH                (1U)
#define LINFlexD_UARTCR_PC1(x)                   (((uint32_t)(((uint32_t)(x)) << LINFlexD_UARTCR_PC1_SHIFT)) & LINFlexD_UARTCR_PC1_MASK)
#define LINFlexD_UARTCR_WL1_MASK                 (0x80U)
#define LINFlexD_UARTCR_WL1_SHIFT                (7U)
#define LINFlexD_UARTCR_WL1_WIDTH                (1U)
#define LINFlexD_UARTCR_WL1(x)                   (((uint32_t)(((uint32_t)(x)) << LINFlexD_UARTCR_WL1_SHIFT)) & LINFlexD_UARTCR_WL1_MASK)
#define LINFlexD_UARTCR_TFBM_MASK                (0x100U)
#define LINFlexD_UARTCR_TFBM_SHIFT               (8U)
#define LINFlexD_UARTCR_TFBM_WIDTH               (1U)
#define LINFlexD_UARTCR_TFBM(x)                  (((uint32_t)(((uint32_t)(x)) << LINFlexD_UARTCR_TFBM_SHIFT)) & LINFlexD_UARTCR_TFBM_MASK)
#define LINFlexD_UARTCR_RFBM_MASK                (0x200U)
#define LINFlexD_UARTCR_RFBM_SHIFT               (9U)
#define LINFlexD_UARTCR_RFBM_WIDTH               (1U)
#define LINFlexD_UARTCR_RFBM(x)                  (((uint32_t)(((uint32_t)(x)) << LINFlexD_UARTCR_RFBM_SHIFT)) & LINFlexD_UARTCR_RFBM_MASK)
#define LINFlexD_UARTCR_RDFL_RFC_MASK            (0x1C00U)
#define LINFlexD_UARTCR_RDFL_RFC_SHIFT           (10U)
#define LINFlexD_UARTCR_RDFL_RFC_WIDTH           (3U)
#define LINFlexD_UARTCR_RDFL_RFC(x)              (((uint32_t)(((uint32_t)(x)) << LINFlexD_UARTCR_RDFL_RFC_SHIFT)) & LINFlexD_UARTCR_RDFL_RFC_MASK)
#define LINFlexD_UARTCR_TDFL_TFC_MASK            (0xE000U)
#define LINFlexD_UARTCR_TDFL_TFC_SHIFT           (13U)
#define LINFlexD_UARTCR_TDFL_TFC_WIDTH           (3U)
#define LINFlexD_UARTCR_TDFL_TFC(x)              (((uint32_t)(((uint32_t)(x)) << LINFlexD_UARTCR_TDFL_TFC_SHIFT)) & LINFlexD_UARTCR_TDFL_TFC_MASK)
#define LINFlexD_UARTCR_SBUR_MASK                (0x60000U)
#define LINFlexD_UARTCR_SBUR_SHIFT               (17U)
#define LINFlexD_UARTCR_SBUR_WIDTH               (2U)
#define LINFlexD_UARTCR_SBUR(x)                  (((uint32_t)(((uint32_t)(x)) << LINFlexD_UARTCR_SBUR_SHIFT)) & LINFlexD_UARTCR_SBUR_MASK)
#define LINFlexD_UARTCR_DTU_PCETX_MASK           (0x80000U)
#define LINFlexD_UARTCR_DTU_PCETX_SHIFT          (19U)
#define LINFlexD_UARTCR_DTU_PCETX_WIDTH          (1U)
#define LINFlexD_UARTCR_DTU_PCETX(x)             (((uint32_t)(((uint32_t)(x)) << LINFlexD_UARTCR_DTU_PCETX_SHIFT)) & LINFlexD_UARTCR_DTU_PCETX_MASK)
#define LINFlexD_UARTCR_NEF_MASK                 (0x700000U)
#define LINFlexD_UARTCR_NEF_SHIFT                (20U)
#define LINFlexD_UARTCR_NEF_WIDTH                (3U)
#define LINFlexD_UARTCR_NEF(x)                   (((uint32_t)(((uint32_t)(x)) << LINFlexD_UARTCR_NEF_SHIFT)) & LINFlexD_UARTCR_NEF_MASK)
#define LINFlexD_UARTCR_ROSE_MASK                (0x800000U)
#define LINFlexD_UARTCR_ROSE_SHIFT               (23U)
#define LINFlexD_UARTCR_ROSE_WIDTH               (1U)
#define LINFlexD_UARTCR_ROSE(x)                  (((uint32_t)(((uint32_t)(x)) << LINFlexD_UARTCR_ROSE_SHIFT)) & LINFlexD_UARTCR_ROSE_MASK)
#define LINFlexD_UARTCR_OSR_MASK                 (0xF000000U)
#define LINFlexD_UARTCR_OSR_SHIFT                (24U)
#define LINFlexD_UARTCR_OSR_WIDTH                (4U)
#define LINFlexD_UARTCR_OSR(x)                   (((uint32_t)(((uint32_t)(x)) << LINFlexD_UARTCR_OSR_SHIFT)) & LINFlexD_UARTCR_OSR_MASK)
#define LINFlexD_UARTCR_CSP_MASK                 (0x70000000U)
#define LINFlexD_UARTCR_CSP_SHIFT                (28U)
#define LINFlexD_UARTCR_CSP_WIDTH                (3U)
#define LINFlexD_UARTCR_CSP(x)                   (((uint32_t)(((uint32_t)(x)) << LINFlexD_UARTCR_CSP_SHIFT)) & LINFlexD_UARTCR_CSP_MASK)
#define LINFlexD_UARTCR_MIS_MASK                 (0x80000000U)
#define LINFlexD_UARTCR_MIS_SHIFT                (31U)
#define LINFlexD_UARTCR_MIS_WIDTH                (1U)
#define LINFlexD_UARTCR_MIS(x)                   (((uint32_t)(((uint32_t)(x)) << LINFlexD_UARTCR_MIS_SHIFT)) & LINFlexD_UARTCR_MIS_MASK)
/*! @} */

/*! @name UARTSR - UART Mode Status Register */
/*! @{ */
#define LINFlexD_UARTSR_NF_MASK                  (0x1U)
#define LINFlexD_UARTSR_NF_SHIFT                 (0U)
#define LINFlexD_UARTSR_NF_WIDTH                 (1U)
#define LINFlexD_UARTSR_NF(x)                    (((uint32_t)(((uint32_t)(x)) << LINFlexD_UARTSR_NF_SHIFT)) & LINFlexD_UARTSR_NF_MASK)
#define LINFlexD_UARTSR_DTFTFF_MASK              (0x2U)
#define LINFlexD_UARTSR_DTFTFF_SHIFT             (1U)
#define LINFlexD_UARTSR_DTFTFF_WIDTH             (1U)
#define LINFlexD_UARTSR_DTFTFF(x)                (((uint32_t)(((uint32_t)(x)) << LINFlexD_UARTSR_DTFTFF_SHIFT)) & LINFlexD_UARTSR_DTFTFF_MASK)
#define LINFlexD_UARTSR_DRFRFE_MASK              (0x4U)
#define LINFlexD_UARTSR_DRFRFE_SHIFT             (2U)
#define LINFlexD_UARTSR_DRFRFE_WIDTH             (1U)
#define LINFlexD_UARTSR_DRFRFE(x)                (((uint32_t)(((uint32_t)(x)) << LINFlexD_UARTSR_DRFRFE_SHIFT)) & LINFlexD_UARTSR_DRFRFE_MASK)
#define LINFlexD_UARTSR_TO_MASK                  (0x8U)
#define LINFlexD_UARTSR_TO_SHIFT                 (3U)
#define LINFlexD_UARTSR_TO_WIDTH                 (1U)
#define LINFlexD_UARTSR_TO(x)                    (((uint32_t)(((uint32_t)(x)) << LINFlexD_UARTSR_TO_SHIFT)) & LINFlexD_UARTSR_TO_MASK)
#define LINFlexD_UARTSR_RFNE_MASK                (0x10U)
#define LINFlexD_UARTSR_RFNE_SHIFT               (4U)
#define LINFlexD_UARTSR_RFNE_WIDTH               (1U)
#define LINFlexD_UARTSR_RFNE(x)                  (((uint32_t)(((uint32_t)(x)) << LINFlexD_UARTSR_RFNE_SHIFT)) & LINFlexD_UARTSR_RFNE_MASK)
#define LINFlexD_UARTSR_WUF_MASK                 (0x20U)
#define LINFlexD_UARTSR_WUF_SHIFT                (5U)
#define LINFlexD_UARTSR_WUF_WIDTH                (1U)
#define LINFlexD_UARTSR_WUF(x)                   (((uint32_t)(((uint32_t)(x)) << LINFlexD_UARTSR_WUF_SHIFT)) & LINFlexD_UARTSR_WUF_MASK)
#define LINFlexD_UARTSR_RDI_MASK                 (0x40U)
#define LINFlexD_UARTSR_RDI_SHIFT                (6U)
#define LINFlexD_UARTSR_RDI_WIDTH                (1U)
#define LINFlexD_UARTSR_RDI(x)                   (((uint32_t)(((uint32_t)(x)) << LINFlexD_UARTSR_RDI_SHIFT)) & LINFlexD_UARTSR_RDI_MASK)
#define LINFlexD_UARTSR_BOF_MASK                 (0x80U)
#define LINFlexD_UARTSR_BOF_SHIFT                (7U)
#define LINFlexD_UARTSR_BOF_WIDTH                (1U)
#define LINFlexD_UARTSR_BOF(x)                   (((uint32_t)(((uint32_t)(x)) << LINFlexD_UARTSR_BOF_SHIFT)) & LINFlexD_UARTSR_BOF_MASK)
#define LINFlexD_UARTSR_FEF_MASK                 (0x100U)
#define LINFlexD_UARTSR_FEF_SHIFT                (8U)
#define LINFlexD_UARTSR_FEF_WIDTH                (1U)
#define LINFlexD_UARTSR_FEF(x)                   (((uint32_t)(((uint32_t)(x)) << LINFlexD_UARTSR_FEF_SHIFT)) & LINFlexD_UARTSR_FEF_MASK)
#define LINFlexD_UARTSR_RMB_MASK                 (0x200U)
#define LINFlexD_UARTSR_RMB_SHIFT                (9U)
#define LINFlexD_UARTSR_RMB_WIDTH                (1U)
#define LINFlexD_UARTSR_RMB(x)                   (((uint32_t)(((uint32_t)(x)) << LINFlexD_UARTSR_RMB_SHIFT)) & LINFlexD_UARTSR_RMB_MASK)
#define LINFlexD_UARTSR_PE_MASK                  (0x3C00U)
#define LINFlexD_UARTSR_PE_SHIFT                 (10U)
#define LINFlexD_UARTSR_PE_WIDTH                 (4U)
#define LINFlexD_UARTSR_PE(x)                    (((uint32_t)(((uint32_t)(x)) << LINFlexD_UARTSR_PE_SHIFT)) & LINFlexD_UARTSR_PE_MASK)
#define LINFlexD_UARTSR_OCF_MASK                 (0x4000U)
#define LINFlexD_UARTSR_OCF_SHIFT                (14U)
#define LINFlexD_UARTSR_OCF_WIDTH                (1U)
#define LINFlexD_UARTSR_OCF(x)                   (((uint32_t)(((uint32_t)(x)) << LINFlexD_UARTSR_OCF_SHIFT)) & LINFlexD_UARTSR_OCF_MASK)
#define LINFlexD_UARTSR_SZF_MASK                 (0x8000U)
#define LINFlexD_UARTSR_SZF_SHIFT                (15U)
#define LINFlexD_UARTSR_SZF_WIDTH                (1U)
#define LINFlexD_UARTSR_SZF(x)                   (((uint32_t)(((uint32_t)(x)) << LINFlexD_UARTSR_SZF_SHIFT)) & LINFlexD_UARTSR_SZF_MASK)
/*! @} */

/*! @name LINTCSR - LIN Time-Out Control Status Register */
/*! @{ */
#define LINFlexD_LINTCSR_CNT_MASK                (0xFFU)
#define LINFlexD_LINTCSR_CNT_SHIFT               (0U)
#define LINFlexD_LINTCSR_CNT_WIDTH               (8U)
#define LINFlexD_LINTCSR_CNT(x)                  (((uint32_t)(((uint32_t)(x)) << LINFlexD_LINTCSR_CNT_SHIFT)) & LINFlexD_LINTCSR_CNT_MASK)
#define LINFlexD_LINTCSR_TOCE_MASK               (0x100U)
#define LINFlexD_LINTCSR_TOCE_SHIFT              (8U)
#define LINFlexD_LINTCSR_TOCE_WIDTH              (1U)
#define LINFlexD_LINTCSR_TOCE(x)                 (((uint32_t)(((uint32_t)(x)) << LINFlexD_LINTCSR_TOCE_SHIFT)) & LINFlexD_LINTCSR_TOCE_MASK)
#define LINFlexD_LINTCSR_IOT_MASK                (0x200U)
#define LINFlexD_LINTCSR_IOT_SHIFT               (9U)
#define LINFlexD_LINTCSR_IOT_WIDTH               (1U)
#define LINFlexD_LINTCSR_IOT(x)                  (((uint32_t)(((uint32_t)(x)) << LINFlexD_LINTCSR_IOT_SHIFT)) & LINFlexD_LINTCSR_IOT_MASK)
#define LINFlexD_LINTCSR_MODE_MASK               (0x400U)
#define LINFlexD_LINTCSR_MODE_SHIFT              (10U)
#define LINFlexD_LINTCSR_MODE_WIDTH              (1U)
#define LINFlexD_LINTCSR_MODE(x)                 (((uint32_t)(((uint32_t)(x)) << LINFlexD_LINTCSR_MODE_SHIFT)) & LINFlexD_LINTCSR_MODE_MASK)
/*! @} */

/*! @name LINOCR - LIN Output Compare Register */
/*! @{ */
#define LINFlexD_LINOCR_OC1_MASK                 (0xFFU)
#define LINFlexD_LINOCR_OC1_SHIFT                (0U)
#define LINFlexD_LINOCR_OC1_WIDTH                (8U)
#define LINFlexD_LINOCR_OC1(x)                   (((uint32_t)(((uint32_t)(x)) << LINFlexD_LINOCR_OC1_SHIFT)) & LINFlexD_LINOCR_OC1_MASK)
#define LINFlexD_LINOCR_OC2_MASK                 (0xFF00U)
#define LINFlexD_LINOCR_OC2_SHIFT                (8U)
#define LINFlexD_LINOCR_OC2_WIDTH                (8U)
#define LINFlexD_LINOCR_OC2(x)                   (((uint32_t)(((uint32_t)(x)) << LINFlexD_LINOCR_OC2_SHIFT)) & LINFlexD_LINOCR_OC2_MASK)
/*! @} */

/*! @name LINTOCR - LIN Time-Out Control Register */
/*! @{ */
#define LINFlexD_LINTOCR_HTO_MASK                (0x7FU)
#define LINFlexD_LINTOCR_HTO_SHIFT               (0U)
#define LINFlexD_LINTOCR_HTO_WIDTH               (7U)
#define LINFlexD_LINTOCR_HTO(x)                  (((uint32_t)(((uint32_t)(x)) << LINFlexD_LINTOCR_HTO_SHIFT)) & LINFlexD_LINTOCR_HTO_MASK)
#define LINFlexD_LINTOCR_RTO_MASK                (0xF00U)
#define LINFlexD_LINTOCR_RTO_SHIFT               (8U)
#define LINFlexD_LINTOCR_RTO_WIDTH               (4U)
#define LINFlexD_LINTOCR_RTO(x)                  (((uint32_t)(((uint32_t)(x)) << LINFlexD_LINTOCR_RTO_SHIFT)) & LINFlexD_LINTOCR_RTO_MASK)
/*! @} */

/*! @name LINFBRR - LIN Fractional Baud Rate Register */
/*! @{ */
#define LINFlexD_LINFBRR_FBR_MASK                (0xFU)
#define LINFlexD_LINFBRR_FBR_SHIFT               (0U)
#define LINFlexD_LINFBRR_FBR_WIDTH               (4U)
#define LINFlexD_LINFBRR_FBR(x)                  (((uint32_t)(((uint32_t)(x)) << LINFlexD_LINFBRR_FBR_SHIFT)) & LINFlexD_LINFBRR_FBR_MASK)
/*! @} */

/*! @name LINIBRR - LIN Integer Baud Rate Register */
/*! @{ */
#define LINFlexD_LINIBRR_IBR_MASK                (0xFFFFFU)
#define LINFlexD_LINIBRR_IBR_SHIFT               (0U)
#define LINFlexD_LINIBRR_IBR_WIDTH               (20U)
#define LINFlexD_LINIBRR_IBR(x)                  (((uint32_t)(((uint32_t)(x)) << LINFlexD_LINIBRR_IBR_SHIFT)) & LINFlexD_LINIBRR_IBR_MASK)
/*! @} */

/*! @name LINCFR - LIN Checksum Field Register */
/*! @{ */
#define LINFlexD_LINCFR_CF_MASK                  (0xFFU)
#define LINFlexD_LINCFR_CF_SHIFT                 (0U)
#define LINFlexD_LINCFR_CF_WIDTH                 (8U)
#define LINFlexD_LINCFR_CF(x)                    (((uint32_t)(((uint32_t)(x)) << LINFlexD_LINCFR_CF_SHIFT)) & LINFlexD_LINCFR_CF_MASK)
/*! @} */

/*! @name LINCR2 - LIN Control Register 2 */
/*! @{ */
#define LINFlexD_LINCR2_HTRQ_MASK                (0x100U)
#define LINFlexD_LINCR2_HTRQ_SHIFT               (8U)
#define LINFlexD_LINCR2_HTRQ_WIDTH               (1U)
#define LINFlexD_LINCR2_HTRQ(x)                  (((uint32_t)(((uint32_t)(x)) << LINFlexD_LINCR2_HTRQ_SHIFT)) & LINFlexD_LINCR2_HTRQ_MASK)
#define LINFlexD_LINCR2_ABRQ_MASK                (0x200U)
#define LINFlexD_LINCR2_ABRQ_SHIFT               (9U)
#define LINFlexD_LINCR2_ABRQ_WIDTH               (1U)
#define LINFlexD_LINCR2_ABRQ(x)                  (((uint32_t)(((uint32_t)(x)) << LINFlexD_LINCR2_ABRQ_SHIFT)) & LINFlexD_LINCR2_ABRQ_MASK)
#define LINFlexD_LINCR2_DTRQ_MASK                (0x400U)
#define LINFlexD_LINCR2_DTRQ_SHIFT               (10U)
#define LINFlexD_LINCR2_DTRQ_WIDTH               (1U)
#define LINFlexD_LINCR2_DTRQ(x)                  (((uint32_t)(((uint32_t)(x)) << LINFlexD_LINCR2_DTRQ_SHIFT)) & LINFlexD_LINCR2_DTRQ_MASK)
#define LINFlexD_LINCR2_DDRQ_MASK                (0x800U)
#define LINFlexD_LINCR2_DDRQ_SHIFT               (11U)
#define LINFlexD_LINCR2_DDRQ_WIDTH               (1U)
#define LINFlexD_LINCR2_DDRQ(x)                  (((uint32_t)(((uint32_t)(x)) << LINFlexD_LINCR2_DDRQ_SHIFT)) & LINFlexD_LINCR2_DDRQ_MASK)
#define LINFlexD_LINCR2_WURQ_MASK                (0x1000U)
#define LINFlexD_LINCR2_WURQ_SHIFT               (12U)
#define LINFlexD_LINCR2_WURQ_WIDTH               (1U)
#define LINFlexD_LINCR2_WURQ(x)                  (((uint32_t)(((uint32_t)(x)) << LINFlexD_LINCR2_WURQ_SHIFT)) & LINFlexD_LINCR2_WURQ_MASK)
#define LINFlexD_LINCR2_IOPE_MASK                (0x2000U)
#define LINFlexD_LINCR2_IOPE_SHIFT               (13U)
#define LINFlexD_LINCR2_IOPE_WIDTH               (1U)
#define LINFlexD_LINCR2_IOPE(x)                  (((uint32_t)(((uint32_t)(x)) << LINFlexD_LINCR2_IOPE_SHIFT)) & LINFlexD_LINCR2_IOPE_MASK)
#define LINFlexD_LINCR2_IOBE_MASK                (0x4000U)
#define LINFlexD_LINCR2_IOBE_SHIFT               (14U)
#define LINFlexD_LINCR2_IOBE_WIDTH               (1U)
#define LINFlexD_LINCR2_IOBE(x)                  (((uint32_t)(((uint32_t)(x)) << LINFlexD_LINCR2_IOBE_SHIFT)) & LINFlexD_LINCR2_IOBE_MASK)
#define LINFlexD_LINCR2_TBDE_MASK                (0x8000U)
#define LINFlexD_LINCR2_TBDE_SHIFT               (15U)
#define LINFlexD_LINCR2_TBDE_WIDTH               (1U)
#define LINFlexD_LINCR2_TBDE(x)                  (((uint32_t)(((uint32_t)(x)) << LINFlexD_LINCR2_TBDE_SHIFT)) & LINFlexD_LINCR2_TBDE_MASK)
/*! @} */

/*! @name BIDR - Buffer Identifier Register */
/*! @{ */
#define LINFlexD_BIDR_ID_MASK                    (0x3FU)
#define LINFlexD_BIDR_ID_SHIFT                   (0U)
#define LINFlexD_BIDR_ID_WIDTH                   (6U)
#define LINFlexD_BIDR_ID(x)                      (((uint32_t)(((uint32_t)(x)) << LINFlexD_BIDR_ID_SHIFT)) & LINFlexD_BIDR_ID_MASK)
#define LINFlexD_BIDR_CCS_MASK                   (0x100U)
#define LINFlexD_BIDR_CCS_SHIFT                  (8U)
#define LINFlexD_BIDR_CCS_WIDTH                  (1U)
#define LINFlexD_BIDR_CCS(x)                     (((uint32_t)(((uint32_t)(x)) << LINFlexD_BIDR_CCS_SHIFT)) & LINFlexD_BIDR_CCS_MASK)
#define LINFlexD_BIDR_DIR_MASK                   (0x200U)
#define LINFlexD_BIDR_DIR_SHIFT                  (9U)
#define LINFlexD_BIDR_DIR_WIDTH                  (1U)
#define LINFlexD_BIDR_DIR(x)                     (((uint32_t)(((uint32_t)(x)) << LINFlexD_BIDR_DIR_SHIFT)) & LINFlexD_BIDR_DIR_MASK)
#define LINFlexD_BIDR_DFL_MASK                   (0x1C00U)
#define LINFlexD_BIDR_DFL_SHIFT                  (10U)
#define LINFlexD_BIDR_DFL_WIDTH                  (3U)
#define LINFlexD_BIDR_DFL(x)                     (((uint32_t)(((uint32_t)(x)) << LINFlexD_BIDR_DFL_SHIFT)) & LINFlexD_BIDR_DFL_MASK)
/*! @} */

/*! @name BDRL - Buffer Data Register Least Significant */
/*! @{ */
#define LINFlexD_BDRL_DATA0_MASK                 (0xFFU)
#define LINFlexD_BDRL_DATA0_SHIFT                (0U)
#define LINFlexD_BDRL_DATA0_WIDTH                (8U)
#define LINFlexD_BDRL_DATA0(x)                   (((uint32_t)(((uint32_t)(x)) << LINFlexD_BDRL_DATA0_SHIFT)) & LINFlexD_BDRL_DATA0_MASK)
#define LINFlexD_BDRL_DATA1_MASK                 (0xFF00U)
#define LINFlexD_BDRL_DATA1_SHIFT                (8U)
#define LINFlexD_BDRL_DATA1_WIDTH                (8U)
#define LINFlexD_BDRL_DATA1(x)                   (((uint32_t)(((uint32_t)(x)) << LINFlexD_BDRL_DATA1_SHIFT)) & LINFlexD_BDRL_DATA1_MASK)
#define LINFlexD_BDRL_DATA2_MASK                 (0xFF0000U)
#define LINFlexD_BDRL_DATA2_SHIFT                (16U)
#define LINFlexD_BDRL_DATA2_WIDTH                (8U)
#define LINFlexD_BDRL_DATA2(x)                   (((uint32_t)(((uint32_t)(x)) << LINFlexD_BDRL_DATA2_SHIFT)) & LINFlexD_BDRL_DATA2_MASK)
#define LINFlexD_BDRL_DATA3_MASK                 (0xFF000000U)
#define LINFlexD_BDRL_DATA3_SHIFT                (24U)
#define LINFlexD_BDRL_DATA3_WIDTH                (8U)
#define LINFlexD_BDRL_DATA3(x)                   (((uint32_t)(((uint32_t)(x)) << LINFlexD_BDRL_DATA3_SHIFT)) & LINFlexD_BDRL_DATA3_MASK)
/*! @} */

/*! @name BDRM - Buffer Data Register Most Significant */
/*! @{ */
#define LINFlexD_BDRM_DATA4_MASK                 (0xFFU)
#define LINFlexD_BDRM_DATA4_SHIFT                (0U)
#define LINFlexD_BDRM_DATA4_WIDTH                (8U)
#define LINFlexD_BDRM_DATA4(x)                   (((uint32_t)(((uint32_t)(x)) << LINFlexD_BDRM_DATA4_SHIFT)) & LINFlexD_BDRM_DATA4_MASK)
#define LINFlexD_BDRM_DATA5_MASK                 (0xFF00U)
#define LINFlexD_BDRM_DATA5_SHIFT                (8U)
#define LINFlexD_BDRM_DATA5_WIDTH                (8U)
#define LINFlexD_BDRM_DATA5(x)                   (((uint32_t)(((uint32_t)(x)) << LINFlexD_BDRM_DATA5_SHIFT)) & LINFlexD_BDRM_DATA5_MASK)
#define LINFlexD_BDRM_DATA6_MASK                 (0xFF0000U)
#define LINFlexD_BDRM_DATA6_SHIFT                (16U)
#define LINFlexD_BDRM_DATA6_WIDTH                (8U)
#define LINFlexD_BDRM_DATA6(x)                   (((uint32_t)(((uint32_t)(x)) << LINFlexD_BDRM_DATA6_SHIFT)) & LINFlexD_BDRM_DATA6_MASK)
#define LINFlexD_BDRM_DATA7_MASK                 (0xFF000000U)
#define LINFlexD_BDRM_DATA7_SHIFT                (24U)
#define LINFlexD_BDRM_DATA7_WIDTH                (8U)
#define LINFlexD_BDRM_DATA7(x)                   (((uint32_t)(((uint32_t)(x)) << LINFlexD_BDRM_DATA7_SHIFT)) & LINFlexD_BDRM_DATA7_MASK)
/*! @} */

/*! @name GCR - Global Control Register */
/*! @{ */
#define LINFlexD_GCR_SR_MASK                     (0x1U)
#define LINFlexD_GCR_SR_SHIFT                    (0U)
#define LINFlexD_GCR_SR_WIDTH                    (1U)
#define LINFlexD_GCR_SR(x)                       (((uint32_t)(((uint32_t)(x)) << LINFlexD_GCR_SR_SHIFT)) & LINFlexD_GCR_SR_MASK)
#define LINFlexD_GCR_STOP_MASK                   (0x2U)
#define LINFlexD_GCR_STOP_SHIFT                  (1U)
#define LINFlexD_GCR_STOP_WIDTH                  (1U)
#define LINFlexD_GCR_STOP(x)                     (((uint32_t)(((uint32_t)(x)) << LINFlexD_GCR_STOP_SHIFT)) & LINFlexD_GCR_STOP_MASK)
#define LINFlexD_GCR_RDLIS_MASK                  (0x4U)
#define LINFlexD_GCR_RDLIS_SHIFT                 (2U)
#define LINFlexD_GCR_RDLIS_WIDTH                 (1U)
#define LINFlexD_GCR_RDLIS(x)                    (((uint32_t)(((uint32_t)(x)) << LINFlexD_GCR_RDLIS_SHIFT)) & LINFlexD_GCR_RDLIS_MASK)
#define LINFlexD_GCR_TDLIS_MASK                  (0x8U)
#define LINFlexD_GCR_TDLIS_SHIFT                 (3U)
#define LINFlexD_GCR_TDLIS_WIDTH                 (1U)
#define LINFlexD_GCR_TDLIS(x)                    (((uint32_t)(((uint32_t)(x)) << LINFlexD_GCR_TDLIS_SHIFT)) & LINFlexD_GCR_TDLIS_MASK)
#define LINFlexD_GCR_RDFBM_MASK                  (0x10U)
#define LINFlexD_GCR_RDFBM_SHIFT                 (4U)
#define LINFlexD_GCR_RDFBM_WIDTH                 (1U)
#define LINFlexD_GCR_RDFBM(x)                    (((uint32_t)(((uint32_t)(x)) << LINFlexD_GCR_RDFBM_SHIFT)) & LINFlexD_GCR_RDFBM_MASK)
#define LINFlexD_GCR_TDFBM_MASK                  (0x20U)
#define LINFlexD_GCR_TDFBM_SHIFT                 (5U)
#define LINFlexD_GCR_TDFBM_WIDTH                 (1U)
#define LINFlexD_GCR_TDFBM(x)                    (((uint32_t)(((uint32_t)(x)) << LINFlexD_GCR_TDFBM_SHIFT)) & LINFlexD_GCR_TDFBM_MASK)
/*! @} */

/*! @name UARTPTO - UART Preset Timeout Register */
/*! @{ */
#define LINFlexD_UARTPTO_PTO_MASK                (0xFFFU)
#define LINFlexD_UARTPTO_PTO_SHIFT               (0U)
#define LINFlexD_UARTPTO_PTO_WIDTH               (12U)
#define LINFlexD_UARTPTO_PTO(x)                  (((uint32_t)(((uint32_t)(x)) << LINFlexD_UARTPTO_PTO_SHIFT)) & LINFlexD_UARTPTO_PTO_MASK)
/*! @} */

/*! @name UARTCTO - UART Current Timeout Register */
/*! @{ */
#define LINFlexD_UARTCTO_CTO_MASK                (0xFFFU)
#define LINFlexD_UARTCTO_CTO_SHIFT               (0U)
#define LINFlexD_UARTCTO_CTO_WIDTH               (12U)
#define LINFlexD_UARTCTO_CTO(x)                  (((uint32_t)(((uint32_t)(x)) << LINFlexD_UARTCTO_CTO_SHIFT)) & LINFlexD_UARTCTO_CTO_MASK)
/*! @} */

/*! @name DMATXE - DMA Tx Enable Register */
/*! @{ */
#define LINFlexD_DMATXE_DTE0_MASK                (0x1U)
#define LINFlexD_DMATXE_DTE0_SHIFT               (0U)
#define LINFlexD_DMATXE_DTE0_WIDTH               (1U)
#define LINFlexD_DMATXE_DTE0(x)                  (((uint32_t)(((uint32_t)(x)) << LINFlexD_DMATXE_DTE0_SHIFT)) & LINFlexD_DMATXE_DTE0_MASK)
/*! @} */

/*! @name DMARXE - DMA Rx Enable Register */
/*! @{ */
#define LINFlexD_DMARXE_DRE0_MASK                (0x1U)
#define LINFlexD_DMARXE_DRE0_SHIFT               (0U)
#define LINFlexD_DMARXE_DRE0_WIDTH               (1U)
#define LINFlexD_DMARXE_DRE0(x)                  (((uint32_t)(((uint32_t)(x)) << LINFlexD_DMARXE_DRE0_SHIFT)) & LINFlexD_DMARXE_DRE0_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group LINFlexD_Register_Masks */


/*!
 * @}
 */ /* end of group LINFLEXD_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- MCM Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup MCM_Peripheral_Access_Layer MCM Peripheral Access Layer
 * @{
 */

/** MCM - Size of Registers Arrays */
#define MCM_LMEM_DESC__COUNT                      5u

/** MCM - Register Layout Typedef */
typedef struct {
  __I  uint16_t PLREV;                             /**< SoC-defined platform revision, offset: 0x0 */
  __I  uint16_t PCT;                               /**< Processor core type, offset: 0x2 */
  uint8_t RESERVED_0[8];
  __IO uint32_t CPCR;                              /**< Core Platform Control Register, offset: 0xC */
  __IO uint32_t ISCR;                              /**< Interrupt Status and Control Register, offset: 0x10 */
  uint8_t RESERVED_1[1004];
  __I  uint32_t LMEM_DESC[MCM_LMEM_DESC__COUNT];   /**< Local Memory Descriptor Register0..Local Memory Descriptor Register4, array offset: 0x400, array step: 0x4 */
} MCM_Type, *MCM_MemMapPtr;

/** Number of instances of the MCM module. */
#define MCM_INSTANCE_COUNT                       (1u)

/* MCM - Peripheral instance base addresses */
/** Peripheral MCM base address */
#define MCM_BASE                                 (0xE0080000u)
/** Peripheral MCM base pointer */
#define MCM                                      ((MCM_Type *)MCM_BASE)
/** Array initializer of MCM peripheral base addresses */
#define MCM_BASE_ADDRS                           { MCM_BASE }
/** Array initializer of MCM peripheral base pointers */
#define MCM_BASE_PTRS                            { MCM }

/* ----------------------------------------------------------------------------
   -- MCM Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup MCM_Register_Masks MCM Register Masks
 * @{
 */

/*! @name PLREV - SoC-defined platform revision */
/*! @{ */
#define MCM_PLREV_PLREV_MASK                     (0xFFFFU)
#define MCM_PLREV_PLREV_SHIFT                    (0U)
#define MCM_PLREV_PLREV_WIDTH                    (16U)
#define MCM_PLREV_PLREV(x)                       (((uint16_t)(((uint16_t)(x)) << MCM_PLREV_PLREV_SHIFT)) & MCM_PLREV_PLREV_MASK)
/*! @} */

/*! @name PCT - Processor core type */
/*! @{ */
#define MCM_PCT_PCT_MASK                         (0xFFFFU)
#define MCM_PCT_PCT_SHIFT                        (0U)
#define MCM_PCT_PCT_WIDTH                        (16U)
#define MCM_PCT_PCT(x)                           (((uint16_t)(((uint16_t)(x)) << MCM_PCT_PCT_SHIFT)) & MCM_PCT_PCT_MASK)
/*! @} */

/*! @name CPCR - Core Platform Control Register */
/*! @{ */
#define MCM_CPCR_CM7_AHBSPRI_MASK                (0x8000000U)
#define MCM_CPCR_CM7_AHBSPRI_SHIFT               (27U)
#define MCM_CPCR_CM7_AHBSPRI_WIDTH               (1U)
#define MCM_CPCR_CM7_AHBSPRI(x)                  (((uint32_t)(((uint32_t)(x)) << MCM_CPCR_CM7_AHBSPRI_SHIFT)) & MCM_CPCR_CM7_AHBSPRI_MASK)
/*! @} */

/*! @name ISCR - Interrupt Status and Control Register */
/*! @{ */
#define MCM_ISCR_WABS_MASK                       (0x20U)
#define MCM_ISCR_WABS_SHIFT                      (5U)
#define MCM_ISCR_WABS_WIDTH                      (1U)
#define MCM_ISCR_WABS(x)                         (((uint32_t)(((uint32_t)(x)) << MCM_ISCR_WABS_SHIFT)) & MCM_ISCR_WABS_MASK)
#define MCM_ISCR_WABSO_MASK                      (0x40U)
#define MCM_ISCR_WABSO_SHIFT                     (6U)
#define MCM_ISCR_WABSO_WIDTH                     (1U)
#define MCM_ISCR_WABSO(x)                        (((uint32_t)(((uint32_t)(x)) << MCM_ISCR_WABSO_SHIFT)) & MCM_ISCR_WABSO_MASK)
#define MCM_ISCR_FIOC_MASK                       (0x100U)
#define MCM_ISCR_FIOC_SHIFT                      (8U)
#define MCM_ISCR_FIOC_WIDTH                      (1U)
#define MCM_ISCR_FIOC(x)                         (((uint32_t)(((uint32_t)(x)) << MCM_ISCR_FIOC_SHIFT)) & MCM_ISCR_FIOC_MASK)
#define MCM_ISCR_FDZC_MASK                       (0x200U)
#define MCM_ISCR_FDZC_SHIFT                      (9U)
#define MCM_ISCR_FDZC_WIDTH                      (1U)
#define MCM_ISCR_FDZC(x)                         (((uint32_t)(((uint32_t)(x)) << MCM_ISCR_FDZC_SHIFT)) & MCM_ISCR_FDZC_MASK)
#define MCM_ISCR_FOFC_MASK                       (0x400U)
#define MCM_ISCR_FOFC_SHIFT                      (10U)
#define MCM_ISCR_FOFC_WIDTH                      (1U)
#define MCM_ISCR_FOFC(x)                         (((uint32_t)(((uint32_t)(x)) << MCM_ISCR_FOFC_SHIFT)) & MCM_ISCR_FOFC_MASK)
#define MCM_ISCR_FUFC_MASK                       (0x800U)
#define MCM_ISCR_FUFC_SHIFT                      (11U)
#define MCM_ISCR_FUFC_WIDTH                      (1U)
#define MCM_ISCR_FUFC(x)                         (((uint32_t)(((uint32_t)(x)) << MCM_ISCR_FUFC_SHIFT)) & MCM_ISCR_FUFC_MASK)
#define MCM_ISCR_FIXC_MASK                       (0x1000U)
#define MCM_ISCR_FIXC_SHIFT                      (12U)
#define MCM_ISCR_FIXC_WIDTH                      (1U)
#define MCM_ISCR_FIXC(x)                         (((uint32_t)(((uint32_t)(x)) << MCM_ISCR_FIXC_SHIFT)) & MCM_ISCR_FIXC_MASK)
#define MCM_ISCR_FIDC_MASK                       (0x8000U)
#define MCM_ISCR_FIDC_SHIFT                      (15U)
#define MCM_ISCR_FIDC_WIDTH                      (1U)
#define MCM_ISCR_FIDC(x)                         (((uint32_t)(((uint32_t)(x)) << MCM_ISCR_FIDC_SHIFT)) & MCM_ISCR_FIDC_MASK)
#define MCM_ISCR_WABE_MASK                       (0x200000U)
#define MCM_ISCR_WABE_SHIFT                      (21U)
#define MCM_ISCR_WABE_WIDTH                      (1U)
#define MCM_ISCR_WABE(x)                         (((uint32_t)(((uint32_t)(x)) << MCM_ISCR_WABE_SHIFT)) & MCM_ISCR_WABE_MASK)
#define MCM_ISCR_FIOCE_MASK                      (0x1000000U)
#define MCM_ISCR_FIOCE_SHIFT                     (24U)
#define MCM_ISCR_FIOCE_WIDTH                     (1U)
#define MCM_ISCR_FIOCE(x)                        (((uint32_t)(((uint32_t)(x)) << MCM_ISCR_FIOCE_SHIFT)) & MCM_ISCR_FIOCE_MASK)
#define MCM_ISCR_FDZCE_MASK                      (0x2000000U)
#define MCM_ISCR_FDZCE_SHIFT                     (25U)
#define MCM_ISCR_FDZCE_WIDTH                     (1U)
#define MCM_ISCR_FDZCE(x)                        (((uint32_t)(((uint32_t)(x)) << MCM_ISCR_FDZCE_SHIFT)) & MCM_ISCR_FDZCE_MASK)
#define MCM_ISCR_FOFCE_MASK                      (0x4000000U)
#define MCM_ISCR_FOFCE_SHIFT                     (26U)
#define MCM_ISCR_FOFCE_WIDTH                     (1U)
#define MCM_ISCR_FOFCE(x)                        (((uint32_t)(((uint32_t)(x)) << MCM_ISCR_FOFCE_SHIFT)) & MCM_ISCR_FOFCE_MASK)
#define MCM_ISCR_FUFCE_MASK                      (0x8000000U)
#define MCM_ISCR_FUFCE_SHIFT                     (27U)
#define MCM_ISCR_FUFCE_WIDTH                     (1U)
#define MCM_ISCR_FUFCE(x)                        (((uint32_t)(((uint32_t)(x)) << MCM_ISCR_FUFCE_SHIFT)) & MCM_ISCR_FUFCE_MASK)
#define MCM_ISCR_FIXCE_MASK                      (0x10000000U)
#define MCM_ISCR_FIXCE_SHIFT                     (28U)
#define MCM_ISCR_FIXCE_WIDTH                     (1U)
#define MCM_ISCR_FIXCE(x)                        (((uint32_t)(((uint32_t)(x)) << MCM_ISCR_FIXCE_SHIFT)) & MCM_ISCR_FIXCE_MASK)
#define MCM_ISCR_FIDCE_MASK                      (0x80000000U)
#define MCM_ISCR_FIDCE_SHIFT                     (31U)
#define MCM_ISCR_FIDCE_WIDTH                     (1U)
#define MCM_ISCR_FIDCE(x)                        (((uint32_t)(((uint32_t)(x)) << MCM_ISCR_FIDCE_SHIFT)) & MCM_ISCR_FIDCE_MASK)
/*! @} */

/*! @name LMEM_DESC - Local Memory Descriptor Register0..Local Memory Descriptor Register4 */
/*! @{ */
#define MCM_LMEM_DESC_MT_MASK                    (0xE000U)
#define MCM_LMEM_DESC_MT_SHIFT                   (13U)
#define MCM_LMEM_DESC_MT_WIDTH                   (3U)
#define MCM_LMEM_DESC_MT(x)                      (((uint32_t)(((uint32_t)(x)) << MCM_LMEM_DESC_MT_SHIFT)) & MCM_LMEM_DESC_MT_MASK)
#define MCM_LMEM_DESC_DPW_MASK                   (0xE0000U)
#define MCM_LMEM_DESC_DPW_SHIFT                  (17U)
#define MCM_LMEM_DESC_DPW_WIDTH                  (3U)
#define MCM_LMEM_DESC_DPW(x)                     (((uint32_t)(((uint32_t)(x)) << MCM_LMEM_DESC_DPW_SHIFT)) & MCM_LMEM_DESC_DPW_MASK)
#define MCM_LMEM_DESC_WY_MASK                    (0xF00000U)
#define MCM_LMEM_DESC_WY_SHIFT                   (20U)
#define MCM_LMEM_DESC_WY_WIDTH                   (4U)
#define MCM_LMEM_DESC_WY(x)                      (((uint32_t)(((uint32_t)(x)) << MCM_LMEM_DESC_WY_SHIFT)) & MCM_LMEM_DESC_WY_MASK)
#define MCM_LMEM_DESC_LMSZ_MASK                  (0xF000000U)
#define MCM_LMEM_DESC_LMSZ_SHIFT                 (24U)
#define MCM_LMEM_DESC_LMSZ_WIDTH                 (4U)
#define MCM_LMEM_DESC_LMSZ(x)                    (((uint32_t)(((uint32_t)(x)) << MCM_LMEM_DESC_LMSZ_SHIFT)) & MCM_LMEM_DESC_LMSZ_MASK)
#define MCM_LMEM_DESC_LMSZH_MASK                 (0x10000000U)
#define MCM_LMEM_DESC_LMSZH_SHIFT                (28U)
#define MCM_LMEM_DESC_LMSZH_WIDTH                (1U)
#define MCM_LMEM_DESC_LMSZH(x)                   (((uint32_t)(((uint32_t)(x)) << MCM_LMEM_DESC_LMSZH_SHIFT)) & MCM_LMEM_DESC_LMSZH_MASK)
#define MCM_LMEM_DESC_V_MASK                     (0x80000000U)
#define MCM_LMEM_DESC_V_SHIFT                    (31U)
#define MCM_LMEM_DESC_V_WIDTH                    (1U)
#define MCM_LMEM_DESC_V(x)                       (((uint32_t)(((uint32_t)(x)) << MCM_LMEM_DESC_V_SHIFT)) & MCM_LMEM_DESC_V_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group MCM_Register_Masks */


/*!
 * @}
 */ /* end of group MCM_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- MCT Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup MCT_Peripheral_Access_Layer MCT Peripheral Access Layer
 * @{
 */

/** MCT - Register Layout Typedef */
typedef struct {
  uint8_t RESERVED_0[8];
  __IO uint32_t ALGOSEL;                           /**< Algorithm Select register, offset: 0x8 */
  uint8_t RESERVED_1[4];
  __IO uint32_t UDPR;                              /**< User Diagnostic Port Register, offset: 0x10 */
  uint8_t RESERVED_2[72];
  __IO uint32_t BSTART;                            /**< BIST Start Register, offset: 0x5C */
  uint8_t RESERVED_3[4];
  __I  uint32_t BISTALL;                           /**< BIST All Register, offset: 0x64 */
  uint8_t RESERVED_4[8];
  __IO uint32_t BISTSEL;                           /**< BIST Select Register, offset: 0x70 */
  uint8_t RESERVED_5[12];
  __I  uint32_t BISTSTAT;                          /**< BIST Status Register, offset: 0x80 */
} MCT_Type, *MCT_MemMapPtr;

/** Number of instances of the MCT module. */
#define MCT_INSTANCE_COUNT                       (1u)

/* MCT - Peripheral instance base addresses */
/** Peripheral MTR_MCT base address */
#define MTR_MCT_BASE                             (0xF1000000u)
/** Peripheral MTR_MCT base pointer */
#define MTR_MCT                                  ((MCT_Type *)MTR_MCT_BASE)
/** Array initializer of MCT peripheral base addresses */
#define MCT_BASE_ADDRS                           { MTR_MCT_BASE }
/** Array initializer of MCT peripheral base pointers */
#define MCT_BASE_PTRS                            { MTR_MCT }

/* ----------------------------------------------------------------------------
   -- MCT Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup MCT_Register_Masks MCT Register Masks
 * @{
 */

/*! @name ALGOSEL - Algorithm Select register */
/*! @{ */
#define MCT_ALGOSEL_MARCH_C_PLUS_SINGLE_SELECT_MASK (0x8U)
#define MCT_ALGOSEL_MARCH_C_PLUS_SINGLE_SELECT_SHIFT (3U)
#define MCT_ALGOSEL_MARCH_C_PLUS_SINGLE_SELECT_WIDTH (1U)
#define MCT_ALGOSEL_MARCH_C_PLUS_SINGLE_SELECT(x) (((uint32_t)(((uint32_t)(x)) << MCT_ALGOSEL_MARCH_C_PLUS_SINGLE_SELECT_SHIFT)) & MCT_ALGOSEL_MARCH_C_PLUS_SINGLE_SELECT_MASK)
#define MCT_ALGOSEL_BASICCHK_SELECT_MASK         (0x2000U)
#define MCT_ALGOSEL_BASICCHK_SELECT_SHIFT        (13U)
#define MCT_ALGOSEL_BASICCHK_SELECT_WIDTH        (1U)
#define MCT_ALGOSEL_BASICCHK_SELECT(x)           (((uint32_t)(((uint32_t)(x)) << MCT_ALGOSEL_BASICCHK_SELECT_SHIFT)) & MCT_ALGOSEL_BASICCHK_SELECT_MASK)
/*! @} */

/*! @name UDPR - User Diagnostic Port Register */
/*! @{ */
#define MCT_UDPR_UDPR_MASK                       (0x8000U)
#define MCT_UDPR_UDPR_SHIFT                      (15U)
#define MCT_UDPR_UDPR_WIDTH                      (1U)
#define MCT_UDPR_UDPR(x)                         (((uint32_t)(((uint32_t)(x)) << MCT_UDPR_UDPR_SHIFT)) & MCT_UDPR_UDPR_MASK)
/*! @} */

/*! @name BSTART - BIST Start Register */
/*! @{ */
#define MCT_BSTART_BSTART_MASK                   (0x7U)
#define MCT_BSTART_BSTART_SHIFT                  (0U)
#define MCT_BSTART_BSTART_WIDTH                  (3U)
#define MCT_BSTART_BSTART(x)                     (((uint32_t)(((uint32_t)(x)) << MCT_BSTART_BSTART_SHIFT)) & MCT_BSTART_BSTART_MASK)
#define MCT_BSTART_BSR_MASK                      (0x10U)
#define MCT_BSTART_BSR_SHIFT                     (4U)
#define MCT_BSTART_BSR_WIDTH                     (1U)
#define MCT_BSTART_BSR(x)                        (((uint32_t)(((uint32_t)(x)) << MCT_BSTART_BSR_SHIFT)) & MCT_BSTART_BSR_MASK)
#define MCT_BSTART_CREP_MASK                     (0x80U)
#define MCT_BSTART_CREP_SHIFT                    (7U)
#define MCT_BSTART_CREP_WIDTH                    (1U)
#define MCT_BSTART_CREP(x)                       (((uint32_t)(((uint32_t)(x)) << MCT_BSTART_CREP_SHIFT)) & MCT_BSTART_CREP_MASK)
#define MCT_BSTART_CENS_MASK                     (0x100U)
#define MCT_BSTART_CENS_SHIFT                    (8U)
#define MCT_BSTART_CENS_WIDTH                    (1U)
#define MCT_BSTART_CENS(x)                       (((uint32_t)(((uint32_t)(x)) << MCT_BSTART_CENS_SHIFT)) & MCT_BSTART_CENS_MASK)
#define MCT_BSTART_CENAC_MASK                    (0x200U)
#define MCT_BSTART_CENAC_SHIFT                   (9U)
#define MCT_BSTART_CENAC_WIDTH                   (1U)
#define MCT_BSTART_CENAC(x)                      (((uint32_t)(((uint32_t)(x)) << MCT_BSTART_CENAC_SHIFT)) & MCT_BSTART_CENAC_MASK)
#define MCT_BSTART_STOP_MASK                     (0x400U)
#define MCT_BSTART_STOP_SHIFT                    (10U)
#define MCT_BSTART_STOP_WIDTH                    (1U)
#define MCT_BSTART_STOP(x)                       (((uint32_t)(((uint32_t)(x)) << MCT_BSTART_STOP_SHIFT)) & MCT_BSTART_STOP_MASK)
#define MCT_BSTART_READ_HOLD_MASK                (0x800U)
#define MCT_BSTART_READ_HOLD_SHIFT               (11U)
#define MCT_BSTART_READ_HOLD_WIDTH               (1U)
#define MCT_BSTART_READ_HOLD(x)                  (((uint32_t)(((uint32_t)(x)) << MCT_BSTART_READ_HOLD_SHIFT)) & MCT_BSTART_READ_HOLD_MASK)
#define MCT_BSTART_BRST_MASK                     (0x8000U)
#define MCT_BSTART_BRST_SHIFT                    (15U)
#define MCT_BSTART_BRST_WIDTH                    (1U)
#define MCT_BSTART_BRST(x)                       (((uint32_t)(((uint32_t)(x)) << MCT_BSTART_BRST_SHIFT)) & MCT_BSTART_BRST_MASK)
#define MCT_BSTART_KSTATUS_MASK                  (0x800000U)
#define MCT_BSTART_KSTATUS_SHIFT                 (23U)
#define MCT_BSTART_KSTATUS_WIDTH                 (1U)
#define MCT_BSTART_KSTATUS(x)                    (((uint32_t)(((uint32_t)(x)) << MCT_BSTART_KSTATUS_SHIFT)) & MCT_BSTART_KSTATUS_MASK)
#define MCT_BSTART_COF_MASK                      (0x40000000U)
#define MCT_BSTART_COF_SHIFT                     (30U)
#define MCT_BSTART_COF_WIDTH                     (1U)
#define MCT_BSTART_COF(x)                        (((uint32_t)(((uint32_t)(x)) << MCT_BSTART_COF_SHIFT)) & MCT_BSTART_COF_MASK)
#define MCT_BSTART_CLKEN_MASK                    (0x80000000U)
#define MCT_BSTART_CLKEN_SHIFT                   (31U)
#define MCT_BSTART_CLKEN_WIDTH                   (1U)
#define MCT_BSTART_CLKEN(x)                      (((uint32_t)(((uint32_t)(x)) << MCT_BSTART_CLKEN_SHIFT)) & MCT_BSTART_CLKEN_MASK)
/*! @} */

/*! @name BISTALL - BIST All Register */
/*! @{ */
#define MCT_BISTALL_STAT_ALL_MASK                (0x3U)
#define MCT_BISTALL_STAT_ALL_SHIFT               (0U)
#define MCT_BISTALL_STAT_ALL_WIDTH               (2U)
#define MCT_BISTALL_STAT_ALL(x)                  (((uint32_t)(((uint32_t)(x)) << MCT_BISTALL_STAT_ALL_SHIFT)) & MCT_BISTALL_STAT_ALL_MASK)
#define MCT_BISTALL_BF_MASK                      (0x4U)
#define MCT_BISTALL_BF_SHIFT                     (2U)
#define MCT_BISTALL_BF_WIDTH                     (1U)
#define MCT_BISTALL_BF(x)                        (((uint32_t)(((uint32_t)(x)) << MCT_BISTALL_BF_SHIFT)) & MCT_BISTALL_BF_MASK)
/*! @} */

/*! @name BISTSEL - BIST Select Register */
/*! @{ */
#define MCT_BISTSEL_BIST_SEL_MASK                (0xFFFFFFFFU)
#define MCT_BISTSEL_BIST_SEL_SHIFT               (0U)
#define MCT_BISTSEL_BIST_SEL_WIDTH               (32U)
#define MCT_BISTSEL_BIST_SEL(x)                  (((uint32_t)(((uint32_t)(x)) << MCT_BISTSEL_BIST_SEL_SHIFT)) & MCT_BISTSEL_BIST_SEL_MASK)
/*! @} */

/*! @name BISTSTAT - BIST Status Register */
/*! @{ */
#define MCT_BISTSTAT_BIST0STAT_MASK              (0xFU)
#define MCT_BISTSTAT_BIST0STAT_SHIFT             (0U)
#define MCT_BISTSTAT_BIST0STAT_WIDTH             (4U)
#define MCT_BISTSTAT_BIST0STAT(x)                (((uint32_t)(((uint32_t)(x)) << MCT_BISTSTAT_BIST0STAT_SHIFT)) & MCT_BISTSTAT_BIST0STAT_MASK)
#define MCT_BISTSTAT_BIST1STAT_MASK              (0xF0U)
#define MCT_BISTSTAT_BIST1STAT_SHIFT             (4U)
#define MCT_BISTSTAT_BIST1STAT_WIDTH             (4U)
#define MCT_BISTSTAT_BIST1STAT(x)                (((uint32_t)(((uint32_t)(x)) << MCT_BISTSTAT_BIST1STAT_SHIFT)) & MCT_BISTSTAT_BIST1STAT_MASK)
#define MCT_BISTSTAT_BIST2STAT_MASK              (0xF00U)
#define MCT_BISTSTAT_BIST2STAT_SHIFT             (8U)
#define MCT_BISTSTAT_BIST2STAT_WIDTH             (4U)
#define MCT_BISTSTAT_BIST2STAT(x)                (((uint32_t)(((uint32_t)(x)) << MCT_BISTSTAT_BIST2STAT_SHIFT)) & MCT_BISTSTAT_BIST2STAT_MASK)
#define MCT_BISTSTAT_BIST3STAT_MASK              (0xF000U)
#define MCT_BISTSTAT_BIST3STAT_SHIFT             (12U)
#define MCT_BISTSTAT_BIST3STAT_WIDTH             (4U)
#define MCT_BISTSTAT_BIST3STAT(x)                (((uint32_t)(((uint32_t)(x)) << MCT_BISTSTAT_BIST3STAT_SHIFT)) & MCT_BISTSTAT_BIST3STAT_MASK)
#define MCT_BISTSTAT_BIST4STAT_MASK              (0xF0000U)
#define MCT_BISTSTAT_BIST4STAT_SHIFT             (16U)
#define MCT_BISTSTAT_BIST4STAT_WIDTH             (4U)
#define MCT_BISTSTAT_BIST4STAT(x)                (((uint32_t)(((uint32_t)(x)) << MCT_BISTSTAT_BIST4STAT_SHIFT)) & MCT_BISTSTAT_BIST4STAT_MASK)
#define MCT_BISTSTAT_BIST5STAT_MASK              (0xF00000U)
#define MCT_BISTSTAT_BIST5STAT_SHIFT             (20U)
#define MCT_BISTSTAT_BIST5STAT_WIDTH             (4U)
#define MCT_BISTSTAT_BIST5STAT(x)                (((uint32_t)(((uint32_t)(x)) << MCT_BISTSTAT_BIST5STAT_SHIFT)) & MCT_BISTSTAT_BIST5STAT_MASK)
#define MCT_BISTSTAT_BIST6STAT_MASK              (0xF000000U)
#define MCT_BISTSTAT_BIST6STAT_SHIFT             (24U)
#define MCT_BISTSTAT_BIST6STAT_WIDTH             (4U)
#define MCT_BISTSTAT_BIST6STAT(x)                (((uint32_t)(((uint32_t)(x)) << MCT_BISTSTAT_BIST6STAT_SHIFT)) & MCT_BISTSTAT_BIST6STAT_MASK)
#define MCT_BISTSTAT_BIST7STAT_MASK              (0xF0000000U)
#define MCT_BISTSTAT_BIST7STAT_SHIFT             (28U)
#define MCT_BISTSTAT_BIST7STAT_WIDTH             (4U)
#define MCT_BISTSTAT_BIST7STAT(x)                (((uint32_t)(((uint32_t)(x)) << MCT_BISTSTAT_BIST7STAT_SHIFT)) & MCT_BISTSTAT_BIST7STAT_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group MCT_Register_Masks */


/*!
 * @}
 */ /* end of group MCT_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- MC_CGM Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup MC_CGM_Peripheral_Access_Layer MC_CGM Peripheral Access Layer
 * @{
 */

/** MC_CGM - Size of Registers Arrays */
#define MC_CGM_PCFS_COUNT                         12u
#define MC_CGM_MUX_MUX_DIV_COUNT                  2u
#define MC_CGM_MUX_COUNT                          17u

/** MC_CGM - Register Layout Typedef */
typedef struct {
  __IO uint32_t PCFS_SDUR;                         /**< PCFS Step Duration, offset: 0x0 */
  struct {                                         /* offset: 0x4, array step: 0xC */
    __IO uint32_t DIVC;                              /**< PCFS Divider Change 12 Register, array offset: 0x4, array step: 0xC */
    __IO uint32_t DIVE;                              /**< PCFS Divider End 12 Register, array offset: 0x8, array step: 0xC */
    __IO uint32_t DIVS;                              /**< PCFS Divider Start 12 Register, array offset: 0xC, array step: 0xC */
  } PCFS[MC_CGM_PCFS_COUNT];
  uint8_t RESERVED_0[620];
  struct {                                         /* offset: 0x300, array step: 0x40 */
    __IO uint32_t CSC;                               /**< Clock Mux 0 Select Control Register, array offset: 0x300, array step: 0x40 */
    __I  uint32_t CSS;                               /**< Clock Mux 0 Select Status Register, array offset: 0x304, array step: 0x40 */
    __IO uint32_t DC[MC_CGM_MUX_MUX_DIV_COUNT];      /**< Clock Mux 0 Divider 0 Control Register..Clock Mux 15 Divider 0 Control Register, array offset: 0x308, array step: index*0x40, index2*0x4 */
    uint8_t RESERVED_0[44];
    __I  uint32_t DIV_UPD_STAT;                      /**< CGM Mux 0 Divider Update Status Register..CGM Mux 15 Divider Update Status Register, array offset: 0x33C, array step: 0x40 */
  } MUX[MC_CGM_MUX_COUNT];
} MC_CGM_Type, *MC_CGM_MemMapPtr;

/** Number of instances of the MC_CGM module. */
#define MC_CGM_INSTANCE_COUNT                    (2u)

/* MC_CGM - Peripheral instance base addresses */
/** Peripheral MC_CGM_0 base address */
#define MC_CGM_0_BASE                            (0x40030000u)
/** Peripheral MC_CGM_0 base pointer */
#define MC_CGM_0                                 ((MC_CGM_Type *)MC_CGM_0_BASE)
/** Peripheral MC_CGM_5 base address */
#define MC_CGM_5_BASE                            (0x40068000u)
/** Peripheral MC_CGM_5 base pointer */
#define MC_CGM_5                                 ((MC_CGM_Type *)MC_CGM_5_BASE)
/** Array initializer of MC_CGM peripheral base addresses */
#define MC_CGM_BASE_ADDRS                        { MC_CGM_0_BASE, MC_CGM_5_BASE }
/** Array initializer of MC_CGM peripheral base pointers */
#define MC_CGM_BASE_PTRS                         { MC_CGM_0, MC_CGM_5 }

/* ----------------------------------------------------------------------------
   -- MC_CGM Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup MC_CGM_Register_Masks MC_CGM Register Masks
 * @{
 */

/*! @name PCFS_SDUR - PCFS Step Duration */
/*! @{ */
#define MC_CGM_PCFS_SDUR_SDUR_MASK               (0xFFFFU)
#define MC_CGM_PCFS_SDUR_SDUR_SHIFT              (0U)
#define MC_CGM_PCFS_SDUR_SDUR_WIDTH              (16U)
#define MC_CGM_PCFS_SDUR_SDUR(x)                 (((uint32_t)(((uint32_t)(x)) << MC_CGM_PCFS_SDUR_SDUR_SHIFT)) & MC_CGM_PCFS_SDUR_SDUR_MASK)
/*! @} */

/*! @name DIVC - PCFS Divider Change 12 Register */
/*! @{ */
#define MC_CGM_DIVC_RATE_MASK                    (0xFFU)
#define MC_CGM_DIVC_RATE_SHIFT                   (0U)
#define MC_CGM_DIVC_RATE_WIDTH                   (8U)
#define MC_CGM_DIVC_RATE(x)                      (((uint32_t)(((uint32_t)(x)) << MC_CGM_DIVC_RATE_SHIFT)) & MC_CGM_DIVC_RATE_MASK)
#define MC_CGM_DIVC_INIT_MASK                    (0xFFFF0000U)
#define MC_CGM_DIVC_INIT_SHIFT                   (16U)
#define MC_CGM_DIVC_INIT_WIDTH                   (16U)
#define MC_CGM_DIVC_INIT(x)                      (((uint32_t)(((uint32_t)(x)) << MC_CGM_DIVC_INIT_SHIFT)) & MC_CGM_DIVC_INIT_MASK)
/*! @} */

/*! @name DIVE - PCFS Divider End 12 Register */
/*! @{ */
#define MC_CGM_DIVE_DIVE_MASK                    (0xFFFFFU)
#define MC_CGM_DIVE_DIVE_SHIFT                   (0U)
#define MC_CGM_DIVE_DIVE_WIDTH                   (20U)
#define MC_CGM_DIVE_DIVE(x)                      (((uint32_t)(((uint32_t)(x)) << MC_CGM_DIVE_DIVE_SHIFT)) & MC_CGM_DIVE_DIVE_MASK)
/*! @} */

/*! @name DIVS - PCFS Divider Start 12 Register */
/*! @{ */
#define MC_CGM_DIVS_DIVS_MASK                    (0xFFFFFU)
#define MC_CGM_DIVS_DIVS_SHIFT                   (0U)
#define MC_CGM_DIVS_DIVS_WIDTH                   (20U)
#define MC_CGM_DIVS_DIVS(x)                      (((uint32_t)(((uint32_t)(x)) << MC_CGM_DIVS_DIVS_SHIFT)) & MC_CGM_DIVS_DIVS_MASK)
/*! @} */

/*! @name CSC - Clock Mux 0 Select Control Register */
/*! @{ */
#define MC_CGM_CSC_RAMPUP_MASK                   (0x1U)
#define MC_CGM_CSC_RAMPUP_SHIFT                  (0U)
#define MC_CGM_CSC_RAMPUP_WIDTH                  (1U)
#define MC_CGM_CSC_RAMPUP(x)                     (((uint32_t)(((uint32_t)(x)) << MC_CGM_CSC_RAMPUP_SHIFT)) & MC_CGM_CSC_RAMPUP_MASK)
#define MC_CGM_CSC_RAMPDOWN_MASK                 (0x2U)
#define MC_CGM_CSC_RAMPDOWN_SHIFT                (1U)
#define MC_CGM_CSC_RAMPDOWN_WIDTH                (1U)
#define MC_CGM_CSC_RAMPDOWN(x)                   (((uint32_t)(((uint32_t)(x)) << MC_CGM_CSC_RAMPDOWN_SHIFT)) & MC_CGM_CSC_RAMPDOWN_MASK)
#define MC_CGM_CSC_CG_MASK                       (0x4U)
#define MC_CGM_CSC_CG_SHIFT                      (2U)
#define MC_CGM_CSC_CG_WIDTH                      (1U)
#define MC_CGM_CSC_CG(x)                         (((uint32_t)(((uint32_t)(x)) << MC_CGM_CSC_CG_SHIFT)) & MC_CGM_CSC_CG_MASK)
#define MC_CGM_CSC_CLK_SW_MASK                   (0x4U)
#define MC_CGM_CSC_CLK_SW_SHIFT                  (2U)
#define MC_CGM_CSC_CLK_SW_WIDTH                  (1U)
#define MC_CGM_CSC_CLK_SW(x)                     (((uint32_t)(((uint32_t)(x)) << MC_CGM_CSC_CLK_SW_SHIFT)) & MC_CGM_CSC_CLK_SW_MASK)
#define MC_CGM_CSC_FCG_MASK                      (0x8U)
#define MC_CGM_CSC_FCG_SHIFT                     (3U)
#define MC_CGM_CSC_FCG_WIDTH                     (1U)
#define MC_CGM_CSC_FCG(x)                        (((uint32_t)(((uint32_t)(x)) << MC_CGM_CSC_FCG_SHIFT)) & MC_CGM_CSC_FCG_MASK)
#define MC_CGM_CSC_SAFE_SW_MASK                  (0x8U)
#define MC_CGM_CSC_SAFE_SW_SHIFT                 (3U)
#define MC_CGM_CSC_SAFE_SW_WIDTH                 (1U)
#define MC_CGM_CSC_SAFE_SW(x)                    (((uint32_t)(((uint32_t)(x)) << MC_CGM_CSC_SAFE_SW_SHIFT)) & MC_CGM_CSC_SAFE_SW_MASK)
#define MC_CGM_CSC_SELCTL_MASK                   (0x3F000000U)  /* Merged from fields with different position or width, of widths (4, 5, 6), largest definition used */
#define MC_CGM_CSC_SELCTL_SHIFT                  (24U)
#define MC_CGM_CSC_SELCTL_WIDTH                  (6U)
#define MC_CGM_CSC_SELCTL(x)                     (((uint32_t)(((uint32_t)(x)) << MC_CGM_CSC_SELCTL_SHIFT)) & MC_CGM_CSC_SELCTL_MASK)  /* Merged from fields with different position or width, of widths (4, 5, 6), largest definition used */
/*! @} */

/*! @name CSS - Clock Mux 0 Select Status Register */
/*! @{ */
#define MC_CGM_CSS_RAMPUP_MASK                   (0x1U)
#define MC_CGM_CSS_RAMPUP_SHIFT                  (0U)
#define MC_CGM_CSS_RAMPUP_WIDTH                  (1U)
#define MC_CGM_CSS_RAMPUP(x)                     (((uint32_t)(((uint32_t)(x)) << MC_CGM_CSS_RAMPUP_SHIFT)) & MC_CGM_CSS_RAMPUP_MASK)
#define MC_CGM_CSS_RAMPDOWN_MASK                 (0x2U)
#define MC_CGM_CSS_RAMPDOWN_SHIFT                (1U)
#define MC_CGM_CSS_RAMPDOWN_WIDTH                (1U)
#define MC_CGM_CSS_RAMPDOWN(x)                   (((uint32_t)(((uint32_t)(x)) << MC_CGM_CSS_RAMPDOWN_SHIFT)) & MC_CGM_CSS_RAMPDOWN_MASK)
#define MC_CGM_CSS_CLK_SW_MASK                   (0x4U)
#define MC_CGM_CSS_CLK_SW_SHIFT                  (2U)
#define MC_CGM_CSS_CLK_SW_WIDTH                  (1U)
#define MC_CGM_CSS_CLK_SW(x)                     (((uint32_t)(((uint32_t)(x)) << MC_CGM_CSS_CLK_SW_SHIFT)) & MC_CGM_CSS_CLK_SW_MASK)
#define MC_CGM_CSS_SAFE_SW_MASK                  (0x8U)
#define MC_CGM_CSS_SAFE_SW_SHIFT                 (3U)
#define MC_CGM_CSS_SAFE_SW_WIDTH                 (1U)
#define MC_CGM_CSS_SAFE_SW(x)                    (((uint32_t)(((uint32_t)(x)) << MC_CGM_CSS_SAFE_SW_SHIFT)) & MC_CGM_CSS_SAFE_SW_MASK)
#define MC_CGM_CSS_GRIP_MASK                     (0x10000U)
#define MC_CGM_CSS_GRIP_SHIFT                    (16U)
#define MC_CGM_CSS_GRIP_WIDTH                    (1U)
#define MC_CGM_CSS_GRIP(x)                       (((uint32_t)(((uint32_t)(x)) << MC_CGM_CSS_GRIP_SHIFT)) & MC_CGM_CSS_GRIP_MASK)
#define MC_CGM_CSS_SWIP_MASK                     (0x10000U)
#define MC_CGM_CSS_SWIP_SHIFT                    (16U)
#define MC_CGM_CSS_SWIP_WIDTH                    (1U)
#define MC_CGM_CSS_SWIP(x)                       (((uint32_t)(((uint32_t)(x)) << MC_CGM_CSS_SWIP_SHIFT)) & MC_CGM_CSS_SWIP_MASK)
#define MC_CGM_CSS_CS_MASK                       (0x20000U)
#define MC_CGM_CSS_CS_SHIFT                      (17U)
#define MC_CGM_CSS_CS_WIDTH                      (1U)
#define MC_CGM_CSS_CS(x)                         (((uint32_t)(((uint32_t)(x)) << MC_CGM_CSS_CS_SHIFT)) & MC_CGM_CSS_CS_MASK)
#define MC_CGM_CSS_SWTRG_MASK                    (0xE0000U)
#define MC_CGM_CSS_SWTRG_SHIFT                   (17U)
#define MC_CGM_CSS_SWTRG_WIDTH                   (3U)
#define MC_CGM_CSS_SWTRG(x)                      (((uint32_t)(((uint32_t)(x)) << MC_CGM_CSS_SWTRG_SHIFT)) & MC_CGM_CSS_SWTRG_MASK)
#define MC_CGM_CSS_SELSTAT_MASK                  (0x3F000000U)  /* Merged from fields with different position or width, of widths (4, 5, 6), largest definition used */
#define MC_CGM_CSS_SELSTAT_SHIFT                 (24U)
#define MC_CGM_CSS_SELSTAT_WIDTH                 (6U)
#define MC_CGM_CSS_SELSTAT(x)                    (((uint32_t)(((uint32_t)(x)) << MC_CGM_CSS_SELSTAT_SHIFT)) & MC_CGM_CSS_SELSTAT_MASK)  /* Merged from fields with different position or width, of widths (4, 5, 6), largest definition used */
/*! @} */

/*! @name DC - Clock Mux 0 Divider 0 Control Register..Clock Mux 15 Divider 0 Control Register */
/*! @{ */
#define MC_CGM_DC_PHASE_MASK                     (0xFFU)
#define MC_CGM_DC_PHASE_SHIFT                    (0U)
#define MC_CGM_DC_PHASE_WIDTH                    (8U)
#define MC_CGM_DC_PHASE(x)                       (((uint32_t)(((uint32_t)(x)) << MC_CGM_DC_PHASE_SHIFT)) & MC_CGM_DC_PHASE_MASK)
#define MC_CGM_DC_DIV_MASK                       (0xFF0000U)
#define MC_CGM_DC_DIV_SHIFT                      (16U)
#define MC_CGM_DC_DIV_WIDTH                      (8U)
#define MC_CGM_DC_DIV(x)                         (((uint32_t)(((uint32_t)(x)) << MC_CGM_DC_DIV_SHIFT)) & MC_CGM_DC_DIV_MASK)
#define MC_CGM_DC_DE_MASK                        (0x80000000U)
#define MC_CGM_DC_DE_SHIFT                       (31U)
#define MC_CGM_DC_DE_WIDTH                       (1U)
#define MC_CGM_DC_DE(x)                          (((uint32_t)(((uint32_t)(x)) << MC_CGM_DC_DE_SHIFT)) & MC_CGM_DC_DE_MASK)
/*! @} */

/*! @name DIV_UPD_STAT - CGM Mux 0 Divider Update Status Register..CGM Mux 15 Divider Update Status Register */
/*! @{ */
#define MC_CGM_DIV_UPD_STAT_DIV_STAT_MASK        (0x1U)
#define MC_CGM_DIV_UPD_STAT_DIV_STAT_SHIFT       (0U)
#define MC_CGM_DIV_UPD_STAT_DIV_STAT_WIDTH       (1U)
#define MC_CGM_DIV_UPD_STAT_DIV_STAT(x)          (((uint32_t)(((uint32_t)(x)) << MC_CGM_DIV_UPD_STAT_DIV_STAT_SHIFT)) & MC_CGM_DIV_UPD_STAT_DIV_STAT_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group MC_CGM_Register_Masks */


/*!
 * @}
 */ /* end of group MC_CGM_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- MC_CGM_1 Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup MC_CGM_1_Peripheral_Access_Layer MC_CGM_1 Peripheral Access Layer
 * @{
 */

/** MC_CGM_1 - Size of Registers Arrays */
#define MC_CGM_1_PCFS_COUNT                       4u
#define MC_CGM_1_MUX_COUNT                        1u

/** MC_CGM_1 - Register Layout Typedef */
typedef struct {
  __IO uint32_t PCFS_SDUR;                         /**< PCFS Step Duration, offset: 0x0 */
  struct {                                         /* offset: 0x4, array step: 0xC */
    __IO uint32_t DIVC;                              /**< PCFS Divider Change 4 Register, array offset: 0x4, array step: 0xC */
    __IO uint32_t DIVE;                              /**< PCFS Divider End 4 Register, array offset: 0x8, array step: 0xC */
    __IO uint32_t DIVS;                              /**< PCFS Divider Start 4 Register, array offset: 0xC, array step: 0xC */
  } PCFS[MC_CGM_1_PCFS_COUNT];
  uint8_t RESERVED_0[716];
  struct {                                         /* offset: 0x300, array step: 0x8 */
    __IO uint32_t CSC;                               /**< Clock Mux 0 Select Control Register, array offset: 0x300, array step: 0x8 */
    __I  uint32_t CSS;                               /**< Clock Mux 0 Select Status Register, array offset: 0x304, array step: 0x8 */
  } MUX[MC_CGM_1_MUX_COUNT];
} MC_CGM_1_Type, *MC_CGM_1_MemMapPtr;

/** Number of instances of the MC_CGM_1 module. */
#define MC_CGM_1_INSTANCE_COUNT                  (1u)

/* MC_CGM_1 - Peripheral instance base addresses */
/** Peripheral MC_CGM_1 base address */
#define MC_CGM_1_BASE                            (0x40034000u)
/** Peripheral MC_CGM_1 base pointer */
#define MC_CGM_1                                 ((MC_CGM_1_Type *)MC_CGM_1_BASE)
/** Array initializer of MC_CGM_1 peripheral base addresses */
#define MC_CGM_1_BASE_ADDRS                      { MC_CGM_1_BASE }
/** Array initializer of MC_CGM_1 peripheral base pointers */
#define MC_CGM_1_BASE_PTRS                       { MC_CGM_1 }

/* ----------------------------------------------------------------------------
   -- MC_CGM_1 Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup MC_CGM_1_Register_Masks MC_CGM_1 Register Masks
 * @{
 */

/*! @name PCFS_SDUR - PCFS Step Duration */
/*! @{ */
#define MC_CGM_1_PCFS_SDUR_SDUR_MASK             (0xFFFFU)
#define MC_CGM_1_PCFS_SDUR_SDUR_SHIFT            (0U)
#define MC_CGM_1_PCFS_SDUR_SDUR_WIDTH            (16U)
#define MC_CGM_1_PCFS_SDUR_SDUR(x)               (((uint32_t)(((uint32_t)(x)) << MC_CGM_1_PCFS_SDUR_SDUR_SHIFT)) & MC_CGM_1_PCFS_SDUR_SDUR_MASK)
/*! @} */

/*! @name DIVC - PCFS Divider Change 4 Register */
/*! @{ */
#define MC_CGM_1_DIVC_RATE_MASK                  (0xFFU)
#define MC_CGM_1_DIVC_RATE_SHIFT                 (0U)
#define MC_CGM_1_DIVC_RATE_WIDTH                 (8U)
#define MC_CGM_1_DIVC_RATE(x)                    (((uint32_t)(((uint32_t)(x)) << MC_CGM_1_DIVC_RATE_SHIFT)) & MC_CGM_1_DIVC_RATE_MASK)
#define MC_CGM_1_DIVC_INIT_MASK                  (0xFFFF0000U)
#define MC_CGM_1_DIVC_INIT_SHIFT                 (16U)
#define MC_CGM_1_DIVC_INIT_WIDTH                 (16U)
#define MC_CGM_1_DIVC_INIT(x)                    (((uint32_t)(((uint32_t)(x)) << MC_CGM_1_DIVC_INIT_SHIFT)) & MC_CGM_1_DIVC_INIT_MASK)
/*! @} */

/*! @name DIVE - PCFS Divider End 4 Register */
/*! @{ */
#define MC_CGM_1_DIVE_DIVE_MASK                  (0xFFFFFU)
#define MC_CGM_1_DIVE_DIVE_SHIFT                 (0U)
#define MC_CGM_1_DIVE_DIVE_WIDTH                 (20U)
#define MC_CGM_1_DIVE_DIVE(x)                    (((uint32_t)(((uint32_t)(x)) << MC_CGM_1_DIVE_DIVE_SHIFT)) & MC_CGM_1_DIVE_DIVE_MASK)
/*! @} */

/*! @name DIVS - PCFS Divider Start 4 Register */
/*! @{ */
#define MC_CGM_1_DIVS_DIVS_MASK                  (0xFFFFFU)
#define MC_CGM_1_DIVS_DIVS_SHIFT                 (0U)
#define MC_CGM_1_DIVS_DIVS_WIDTH                 (20U)
#define MC_CGM_1_DIVS_DIVS(x)                    (((uint32_t)(((uint32_t)(x)) << MC_CGM_1_DIVS_DIVS_SHIFT)) & MC_CGM_1_DIVS_DIVS_MASK)
/*! @} */

/*! @name CSC - Clock Mux 0 Select Control Register */
/*! @{ */
#define MC_CGM_1_CSC_RAMPUP_MASK                 (0x1U)
#define MC_CGM_1_CSC_RAMPUP_SHIFT                (0U)
#define MC_CGM_1_CSC_RAMPUP_WIDTH                (1U)
#define MC_CGM_1_CSC_RAMPUP(x)                   (((uint32_t)(((uint32_t)(x)) << MC_CGM_1_CSC_RAMPUP_SHIFT)) & MC_CGM_1_CSC_RAMPUP_MASK)
#define MC_CGM_1_CSC_RAMPDOWN_MASK               (0x2U)
#define MC_CGM_1_CSC_RAMPDOWN_SHIFT              (1U)
#define MC_CGM_1_CSC_RAMPDOWN_WIDTH              (1U)
#define MC_CGM_1_CSC_RAMPDOWN(x)                 (((uint32_t)(((uint32_t)(x)) << MC_CGM_1_CSC_RAMPDOWN_SHIFT)) & MC_CGM_1_CSC_RAMPDOWN_MASK)
#define MC_CGM_1_CSC_CLK_SW_MASK                 (0x4U)
#define MC_CGM_1_CSC_CLK_SW_SHIFT                (2U)
#define MC_CGM_1_CSC_CLK_SW_WIDTH                (1U)
#define MC_CGM_1_CSC_CLK_SW(x)                   (((uint32_t)(((uint32_t)(x)) << MC_CGM_1_CSC_CLK_SW_SHIFT)) & MC_CGM_1_CSC_CLK_SW_MASK)
#define MC_CGM_1_CSC_SAFE_SW_MASK                (0x8U)
#define MC_CGM_1_CSC_SAFE_SW_SHIFT               (3U)
#define MC_CGM_1_CSC_SAFE_SW_WIDTH               (1U)
#define MC_CGM_1_CSC_SAFE_SW(x)                  (((uint32_t)(((uint32_t)(x)) << MC_CGM_1_CSC_SAFE_SW_SHIFT)) & MC_CGM_1_CSC_SAFE_SW_MASK)
#define MC_CGM_1_CSC_SELCTL_MASK                 (0xF000000U)
#define MC_CGM_1_CSC_SELCTL_SHIFT                (24U)
#define MC_CGM_1_CSC_SELCTL_WIDTH                (4U)
#define MC_CGM_1_CSC_SELCTL(x)                   (((uint32_t)(((uint32_t)(x)) << MC_CGM_1_CSC_SELCTL_SHIFT)) & MC_CGM_1_CSC_SELCTL_MASK)
/*! @} */

/*! @name CSS - Clock Mux 0 Select Status Register */
/*! @{ */
#define MC_CGM_1_CSS_RAMPUP_MASK                 (0x1U)
#define MC_CGM_1_CSS_RAMPUP_SHIFT                (0U)
#define MC_CGM_1_CSS_RAMPUP_WIDTH                (1U)
#define MC_CGM_1_CSS_RAMPUP(x)                   (((uint32_t)(((uint32_t)(x)) << MC_CGM_1_CSS_RAMPUP_SHIFT)) & MC_CGM_1_CSS_RAMPUP_MASK)
#define MC_CGM_1_CSS_RAMPDOWN_MASK               (0x2U)
#define MC_CGM_1_CSS_RAMPDOWN_SHIFT              (1U)
#define MC_CGM_1_CSS_RAMPDOWN_WIDTH              (1U)
#define MC_CGM_1_CSS_RAMPDOWN(x)                 (((uint32_t)(((uint32_t)(x)) << MC_CGM_1_CSS_RAMPDOWN_SHIFT)) & MC_CGM_1_CSS_RAMPDOWN_MASK)
#define MC_CGM_1_CSS_CLK_SW_MASK                 (0x4U)
#define MC_CGM_1_CSS_CLK_SW_SHIFT                (2U)
#define MC_CGM_1_CSS_CLK_SW_WIDTH                (1U)
#define MC_CGM_1_CSS_CLK_SW(x)                   (((uint32_t)(((uint32_t)(x)) << MC_CGM_1_CSS_CLK_SW_SHIFT)) & MC_CGM_1_CSS_CLK_SW_MASK)
#define MC_CGM_1_CSS_SAFE_SW_MASK                (0x8U)
#define MC_CGM_1_CSS_SAFE_SW_SHIFT               (3U)
#define MC_CGM_1_CSS_SAFE_SW_WIDTH               (1U)
#define MC_CGM_1_CSS_SAFE_SW(x)                  (((uint32_t)(((uint32_t)(x)) << MC_CGM_1_CSS_SAFE_SW_SHIFT)) & MC_CGM_1_CSS_SAFE_SW_MASK)
#define MC_CGM_1_CSS_SWIP_MASK                   (0x10000U)
#define MC_CGM_1_CSS_SWIP_SHIFT                  (16U)
#define MC_CGM_1_CSS_SWIP_WIDTH                  (1U)
#define MC_CGM_1_CSS_SWIP(x)                     (((uint32_t)(((uint32_t)(x)) << MC_CGM_1_CSS_SWIP_SHIFT)) & MC_CGM_1_CSS_SWIP_MASK)
#define MC_CGM_1_CSS_SWTRG_MASK                  (0xE0000U)
#define MC_CGM_1_CSS_SWTRG_SHIFT                 (17U)
#define MC_CGM_1_CSS_SWTRG_WIDTH                 (3U)
#define MC_CGM_1_CSS_SWTRG(x)                    (((uint32_t)(((uint32_t)(x)) << MC_CGM_1_CSS_SWTRG_SHIFT)) & MC_CGM_1_CSS_SWTRG_MASK)
#define MC_CGM_1_CSS_SELSTAT_MASK                (0xF000000U)
#define MC_CGM_1_CSS_SELSTAT_SHIFT               (24U)
#define MC_CGM_1_CSS_SELSTAT_WIDTH               (4U)
#define MC_CGM_1_CSS_SELSTAT(x)                  (((uint32_t)(((uint32_t)(x)) << MC_CGM_1_CSS_SELSTAT_SHIFT)) & MC_CGM_1_CSS_SELSTAT_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group MC_CGM_1_Register_Masks */


/*!
 * @}
 */ /* end of group MC_CGM_1_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- MC_CGM_2 Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup MC_CGM_2_Peripheral_Access_Layer MC_CGM_2 Peripheral Access Layer
 * @{
 */

/** MC_CGM_2 - Size of Registers Arrays */
#define MC_CGM_2_PCFS_COUNT                       33u
#define MC_CGM_2_MUX_MUX_DIV_COUNT                2u
#define MC_CGM_2_MUX_COUNT                        10u

/** MC_CGM_2 - Register Layout Typedef */
typedef struct {
  __IO uint32_t PCFS_SDUR;                         /**< PCFS Step Duration, offset: 0x0 */
  struct {                                         /* offset: 0x4, array step: 0xC */
    __IO uint32_t DIVC;                              /**< PCFS Divider Change 33 Register, array offset: 0x4, array step: 0xC */
    __IO uint32_t DIVE;                              /**< PCFS Divider End 33 Register, array offset: 0x8, array step: 0xC */
    __IO uint32_t DIVS;                              /**< PCFS Divider Start 33 Register, array offset: 0xC, array step: 0xC */
  } PCFS[MC_CGM_2_PCFS_COUNT];
  uint8_t RESERVED_0[368];
  struct {                                         /* offset: 0x300, array step: 0x40 */
    __IO uint32_t CSC;                               /**< Clock Mux 0 Select Control Register..Clock Mux 9 Select Control Register, array offset: 0x300, array step: 0x40 */
    __I  uint32_t CSS;                               /**< Clock Mux 0 Select Status Register..Clock Mux 9 Select Status Register, array offset: 0x304, array step: 0x40 */
    __IO uint32_t DC[MC_CGM_2_MUX_MUX_DIV_COUNT];    /**< Clock Mux 0 Divider 0 Control Register..Clock Mux 9 Divider 0 Control Register, array offset: 0x308, array step: index*0x40, index2*0x4 */
    uint8_t RESERVED_0[36];
    __IO uint32_t DIV_TRIG_CTRL;                     /**< CGM Mux 0 Divider Trigger Control Register..CGM Mux 9 Divider Trigger Control Register, array offset: 0x334, array step: 0x40 */
    __O  uint32_t DIV_TRIG;                          /**< CGM Mux 0 Divider Trigger Register..CGM Mux 9 Divider Trigger Register, array offset: 0x338, array step: 0x40 */
    __I  uint32_t DIV_UPD_STAT;                      /**< CGM Mux 0 Divider Update Status Register..CGM Mux 9 Divider Update Status Register, array offset: 0x33C, array step: 0x40 */
  } MUX[MC_CGM_2_MUX_COUNT];
} MC_CGM_2_Type, *MC_CGM_2_MemMapPtr;

/** Number of instances of the MC_CGM_2 module. */
#define MC_CGM_2_INSTANCE_COUNT                  (1u)

/* MC_CGM_2 - Peripheral instance base addresses */
/** Peripheral MC_CGM_2 base address */
#define MC_CGM_2_BASE                            (0x44018000u)
/** Peripheral MC_CGM_2 base pointer */
#define MC_CGM_2                                 ((MC_CGM_2_Type *)MC_CGM_2_BASE)
/** Array initializer of MC_CGM_2 peripheral base addresses */
#define MC_CGM_2_BASE_ADDRS                      { MC_CGM_2_BASE }
/** Array initializer of MC_CGM_2 peripheral base pointers */
#define MC_CGM_2_BASE_PTRS                       { MC_CGM_2 }

/* ----------------------------------------------------------------------------
   -- MC_CGM_2 Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup MC_CGM_2_Register_Masks MC_CGM_2 Register Masks
 * @{
 */

/*! @name PCFS_SDUR - PCFS Step Duration */
/*! @{ */
#define MC_CGM_2_PCFS_SDUR_SDUR_MASK             (0xFFFFU)
#define MC_CGM_2_PCFS_SDUR_SDUR_SHIFT            (0U)
#define MC_CGM_2_PCFS_SDUR_SDUR_WIDTH            (16U)
#define MC_CGM_2_PCFS_SDUR_SDUR(x)               (((uint32_t)(((uint32_t)(x)) << MC_CGM_2_PCFS_SDUR_SDUR_SHIFT)) & MC_CGM_2_PCFS_SDUR_SDUR_MASK)
/*! @} */

/*! @name DIVC - PCFS Divider Change 33 Register */
/*! @{ */
#define MC_CGM_2_DIVC_RATE_MASK                  (0xFFU)
#define MC_CGM_2_DIVC_RATE_SHIFT                 (0U)
#define MC_CGM_2_DIVC_RATE_WIDTH                 (8U)
#define MC_CGM_2_DIVC_RATE(x)                    (((uint32_t)(((uint32_t)(x)) << MC_CGM_2_DIVC_RATE_SHIFT)) & MC_CGM_2_DIVC_RATE_MASK)
#define MC_CGM_2_DIVC_INIT_MASK                  (0xFFFF0000U)
#define MC_CGM_2_DIVC_INIT_SHIFT                 (16U)
#define MC_CGM_2_DIVC_INIT_WIDTH                 (16U)
#define MC_CGM_2_DIVC_INIT(x)                    (((uint32_t)(((uint32_t)(x)) << MC_CGM_2_DIVC_INIT_SHIFT)) & MC_CGM_2_DIVC_INIT_MASK)
/*! @} */

/*! @name DIVE - PCFS Divider End 33 Register */
/*! @{ */
#define MC_CGM_2_DIVE_DIVE_MASK                  (0xFFFFFU)
#define MC_CGM_2_DIVE_DIVE_SHIFT                 (0U)
#define MC_CGM_2_DIVE_DIVE_WIDTH                 (20U)
#define MC_CGM_2_DIVE_DIVE(x)                    (((uint32_t)(((uint32_t)(x)) << MC_CGM_2_DIVE_DIVE_SHIFT)) & MC_CGM_2_DIVE_DIVE_MASK)
/*! @} */

/*! @name DIVS - PCFS Divider Start 33 Register */
/*! @{ */
#define MC_CGM_2_DIVS_DIVS_MASK                  (0xFFFFFU)
#define MC_CGM_2_DIVS_DIVS_SHIFT                 (0U)
#define MC_CGM_2_DIVS_DIVS_WIDTH                 (20U)
#define MC_CGM_2_DIVS_DIVS(x)                    (((uint32_t)(((uint32_t)(x)) << MC_CGM_2_DIVS_DIVS_SHIFT)) & MC_CGM_2_DIVS_DIVS_MASK)
/*! @} */

/*! @name CSC - Clock Mux 0 Select Control Register..Clock Mux 9 Select Control Register */
/*! @{ */
#define MC_CGM_2_CSC_RAMPUP_MASK                 (0x1U)
#define MC_CGM_2_CSC_RAMPUP_SHIFT                (0U)
#define MC_CGM_2_CSC_RAMPUP_WIDTH                (1U)
#define MC_CGM_2_CSC_RAMPUP(x)                   (((uint32_t)(((uint32_t)(x)) << MC_CGM_2_CSC_RAMPUP_SHIFT)) & MC_CGM_2_CSC_RAMPUP_MASK)
#define MC_CGM_2_CSC_RAMPDOWN_MASK               (0x2U)
#define MC_CGM_2_CSC_RAMPDOWN_SHIFT              (1U)
#define MC_CGM_2_CSC_RAMPDOWN_WIDTH              (1U)
#define MC_CGM_2_CSC_RAMPDOWN(x)                 (((uint32_t)(((uint32_t)(x)) << MC_CGM_2_CSC_RAMPDOWN_SHIFT)) & MC_CGM_2_CSC_RAMPDOWN_MASK)
#define MC_CGM_2_CSC_CLK_SW_MASK                 (0x4U)
#define MC_CGM_2_CSC_CLK_SW_SHIFT                (2U)
#define MC_CGM_2_CSC_CLK_SW_WIDTH                (1U)
#define MC_CGM_2_CSC_CLK_SW(x)                   (((uint32_t)(((uint32_t)(x)) << MC_CGM_2_CSC_CLK_SW_SHIFT)) & MC_CGM_2_CSC_CLK_SW_MASK)
#define MC_CGM_2_CSC_SAFE_SW_MASK                (0x8U)
#define MC_CGM_2_CSC_SAFE_SW_SHIFT               (3U)
#define MC_CGM_2_CSC_SAFE_SW_WIDTH               (1U)
#define MC_CGM_2_CSC_SAFE_SW(x)                  (((uint32_t)(((uint32_t)(x)) << MC_CGM_2_CSC_SAFE_SW_SHIFT)) & MC_CGM_2_CSC_SAFE_SW_MASK)
#define MC_CGM_2_CSC_SELCTL_MASK                 (0x3F000000U)
#define MC_CGM_2_CSC_SELCTL_SHIFT                (24U)
#define MC_CGM_2_CSC_SELCTL_WIDTH                (6U)
#define MC_CGM_2_CSC_SELCTL(x)                   (((uint32_t)(((uint32_t)(x)) << MC_CGM_2_CSC_SELCTL_SHIFT)) & MC_CGM_2_CSC_SELCTL_MASK)
/*! @} */

/*! @name CSS - Clock Mux 0 Select Status Register..Clock Mux 9 Select Status Register */
/*! @{ */
#define MC_CGM_2_CSS_RAMPUP_MASK                 (0x1U)
#define MC_CGM_2_CSS_RAMPUP_SHIFT                (0U)
#define MC_CGM_2_CSS_RAMPUP_WIDTH                (1U)
#define MC_CGM_2_CSS_RAMPUP(x)                   (((uint32_t)(((uint32_t)(x)) << MC_CGM_2_CSS_RAMPUP_SHIFT)) & MC_CGM_2_CSS_RAMPUP_MASK)
#define MC_CGM_2_CSS_RAMPDOWN_MASK               (0x2U)
#define MC_CGM_2_CSS_RAMPDOWN_SHIFT              (1U)
#define MC_CGM_2_CSS_RAMPDOWN_WIDTH              (1U)
#define MC_CGM_2_CSS_RAMPDOWN(x)                 (((uint32_t)(((uint32_t)(x)) << MC_CGM_2_CSS_RAMPDOWN_SHIFT)) & MC_CGM_2_CSS_RAMPDOWN_MASK)
#define MC_CGM_2_CSS_CLK_SW_MASK                 (0x4U)
#define MC_CGM_2_CSS_CLK_SW_SHIFT                (2U)
#define MC_CGM_2_CSS_CLK_SW_WIDTH                (1U)
#define MC_CGM_2_CSS_CLK_SW(x)                   (((uint32_t)(((uint32_t)(x)) << MC_CGM_2_CSS_CLK_SW_SHIFT)) & MC_CGM_2_CSS_CLK_SW_MASK)
#define MC_CGM_2_CSS_SAFE_SW_MASK                (0x8U)
#define MC_CGM_2_CSS_SAFE_SW_SHIFT               (3U)
#define MC_CGM_2_CSS_SAFE_SW_WIDTH               (1U)
#define MC_CGM_2_CSS_SAFE_SW(x)                  (((uint32_t)(((uint32_t)(x)) << MC_CGM_2_CSS_SAFE_SW_SHIFT)) & MC_CGM_2_CSS_SAFE_SW_MASK)
#define MC_CGM_2_CSS_SWIP_MASK                   (0x10000U)
#define MC_CGM_2_CSS_SWIP_SHIFT                  (16U)
#define MC_CGM_2_CSS_SWIP_WIDTH                  (1U)
#define MC_CGM_2_CSS_SWIP(x)                     (((uint32_t)(((uint32_t)(x)) << MC_CGM_2_CSS_SWIP_SHIFT)) & MC_CGM_2_CSS_SWIP_MASK)
#define MC_CGM_2_CSS_SWTRG_MASK                  (0xE0000U)
#define MC_CGM_2_CSS_SWTRG_SHIFT                 (17U)
#define MC_CGM_2_CSS_SWTRG_WIDTH                 (3U)
#define MC_CGM_2_CSS_SWTRG(x)                    (((uint32_t)(((uint32_t)(x)) << MC_CGM_2_CSS_SWTRG_SHIFT)) & MC_CGM_2_CSS_SWTRG_MASK)
#define MC_CGM_2_CSS_SELSTAT_MASK                (0x3F000000U)
#define MC_CGM_2_CSS_SELSTAT_SHIFT               (24U)
#define MC_CGM_2_CSS_SELSTAT_WIDTH               (6U)
#define MC_CGM_2_CSS_SELSTAT(x)                  (((uint32_t)(((uint32_t)(x)) << MC_CGM_2_CSS_SELSTAT_SHIFT)) & MC_CGM_2_CSS_SELSTAT_MASK)
/*! @} */

/*! @name DC - Clock Mux 0 Divider 0 Control Register..Clock Mux 9 Divider 0 Control Register */
/*! @{ */
#define MC_CGM_2_DC_PHASE_MASK                   (0xFFU)
#define MC_CGM_2_DC_PHASE_SHIFT                  (0U)
#define MC_CGM_2_DC_PHASE_WIDTH                  (8U)
#define MC_CGM_2_DC_PHASE(x)                     (((uint32_t)(((uint32_t)(x)) << MC_CGM_2_DC_PHASE_SHIFT)) & MC_CGM_2_DC_PHASE_MASK)
#define MC_CGM_2_DC_DIV_MASK                     (0xFF0000U)  /* Merged from fields with different position or width, of widths (2, 4, 6, 8), largest definition used */
#define MC_CGM_2_DC_DIV_SHIFT                    (16U)
#define MC_CGM_2_DC_DIV_WIDTH                    (8U)
#define MC_CGM_2_DC_DIV(x)                       (((uint32_t)(((uint32_t)(x)) << MC_CGM_2_DC_DIV_SHIFT)) & MC_CGM_2_DC_DIV_MASK)  /* Merged from fields with different position or width, of widths (2, 4, 6, 8), largest definition used */
#define MC_CGM_2_DC_DE_MASK                      (0x80000000U)
#define MC_CGM_2_DC_DE_SHIFT                     (31U)
#define MC_CGM_2_DC_DE_WIDTH                     (1U)
#define MC_CGM_2_DC_DE(x)                        (((uint32_t)(((uint32_t)(x)) << MC_CGM_2_DC_DE_SHIFT)) & MC_CGM_2_DC_DE_MASK)
/*! @} */

/*! @name DIV_TRIG_CTRL - CGM Mux 0 Divider Trigger Control Register..CGM Mux 9 Divider Trigger Control Register */
/*! @{ */
#define MC_CGM_2_DIV_TRIG_CTRL_TCTL_MASK         (0x1U)
#define MC_CGM_2_DIV_TRIG_CTRL_TCTL_SHIFT        (0U)
#define MC_CGM_2_DIV_TRIG_CTRL_TCTL_WIDTH        (1U)
#define MC_CGM_2_DIV_TRIG_CTRL_TCTL(x)           (((uint32_t)(((uint32_t)(x)) << MC_CGM_2_DIV_TRIG_CTRL_TCTL_SHIFT)) & MC_CGM_2_DIV_TRIG_CTRL_TCTL_MASK)
#define MC_CGM_2_DIV_TRIG_CTRL_HHEN_MASK         (0x80000000U)
#define MC_CGM_2_DIV_TRIG_CTRL_HHEN_SHIFT        (31U)
#define MC_CGM_2_DIV_TRIG_CTRL_HHEN_WIDTH        (1U)
#define MC_CGM_2_DIV_TRIG_CTRL_HHEN(x)           (((uint32_t)(((uint32_t)(x)) << MC_CGM_2_DIV_TRIG_CTRL_HHEN_SHIFT)) & MC_CGM_2_DIV_TRIG_CTRL_HHEN_MASK)
/*! @} */

/*! @name DIV_TRIG - CGM Mux 0 Divider Trigger Register..CGM Mux 9 Divider Trigger Register */
/*! @{ */
#define MC_CGM_2_DIV_TRIG_TRIGGER_MASK           (0xFFFFFFFFU)
#define MC_CGM_2_DIV_TRIG_TRIGGER_SHIFT          (0U)
#define MC_CGM_2_DIV_TRIG_TRIGGER_WIDTH          (32U)
#define MC_CGM_2_DIV_TRIG_TRIGGER(x)             (((uint32_t)(((uint32_t)(x)) << MC_CGM_2_DIV_TRIG_TRIGGER_SHIFT)) & MC_CGM_2_DIV_TRIG_TRIGGER_MASK)
/*! @} */

/*! @name DIV_UPD_STAT - CGM Mux 0 Divider Update Status Register..CGM Mux 9 Divider Update Status Register */
/*! @{ */
#define MC_CGM_2_DIV_UPD_STAT_DIV_STAT_MASK      (0x1U)
#define MC_CGM_2_DIV_UPD_STAT_DIV_STAT_SHIFT     (0U)
#define MC_CGM_2_DIV_UPD_STAT_DIV_STAT_WIDTH     (1U)
#define MC_CGM_2_DIV_UPD_STAT_DIV_STAT(x)        (((uint32_t)(((uint32_t)(x)) << MC_CGM_2_DIV_UPD_STAT_DIV_STAT_SHIFT)) & MC_CGM_2_DIV_UPD_STAT_DIV_STAT_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group MC_CGM_2_Register_Masks */


/*!
 * @}
 */ /* end of group MC_CGM_2_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- MC_ME Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup MC_ME_Peripheral_Access_Layer MC_ME Peripheral Access Layer
 * @{
 */

/** MC_ME - Register Layout Typedef */
typedef struct {
  __IO uint32_t CTL_KEY;                           /**< Control Key Register, offset: 0x0 */
  __IO uint32_t MODE_CONF;                         /**< Mode Configuration Register, offset: 0x4 */
  __IO uint32_t MODE_UPD;                          /**< Mode Update Register, offset: 0x8 */
  __I  uint32_t MODE_STAT;                         /**< Mode Status Register, offset: 0xC */
  __IO uint32_t MAIN_COREID;                       /**< Main Core ID Register, offset: 0x10 */
  uint8_t RESERVED_0[236];
  __IO uint32_t PRTN0_PCONF;                       /**< Partition 0 Process Configuration Register, offset: 0x100 */
  __IO uint32_t PRTN0_PUPD;                        /**< Partition 0 Process Update Register, offset: 0x104 */
  __I  uint32_t PRTN0_STAT;                        /**< Partition 0 Status Register, offset: 0x108 */
  uint8_t RESERVED_1[4];
  __I  uint32_t PRTN0_COFB0_STAT;                  /**< Partition 0 COFB Set 0 Clock Status Register, offset: 0x110 */
  uint8_t RESERVED_2[28];
  __IO uint32_t PRTN0_COFB0_CLKEN;                 /**< Partition 0 COFB Set 0 Clock Enable Register, offset: 0x130 */
  uint8_t RESERVED_3[12];
  __IO uint32_t PRTN0_CORE0_PCONF;                 /**< Partition 0 Core 0 Process Configuration Register, offset: 0x140 */
  __IO uint32_t PRTN0_CORE0_PUPD;                  /**< Partition 0 Core 0 Process Update Register, offset: 0x144 */
  __I  uint32_t PRTN0_CORE0_STAT;                  /**< Partition 0 Core 0 Status Register, offset: 0x148 */
  __IO uint32_t PRTN0_CORE0_ADDR;                  /**< Partition 0 Core 0 Address Register, offset: 0x14C */
  uint8_t RESERVED_4[16];
  __IO uint32_t PRTN0_CORE1_PCONF;                 /**< Partition 0 Core 1 Process Configuration Register, offset: 0x160 */
  __IO uint32_t PRTN0_CORE1_PUPD;                  /**< Partition 0 Core 1 Process Update Register, offset: 0x164 */
  __I  uint32_t PRTN0_CORE1_STAT;                  /**< Partition 0 Core 1 Status Register, offset: 0x168 */
  __IO uint32_t PRTN0_CORE1_ADDR;                  /**< Partition 0 Core 1 Address Register, offset: 0x16C */
  uint8_t RESERVED_5[16];
  __IO uint32_t PRTN0_CORE2_PCONF;                 /**< Partition 0 Core 2 Process Configuration Register, offset: 0x180 */
  __IO uint32_t PRTN0_CORE2_PUPD;                  /**< Partition 0 Core 2 Process Update Register, offset: 0x184 */
  __I  uint32_t PRTN0_CORE2_STAT;                  /**< Partition 0 Core 2 Status Register, offset: 0x188 */
  __IO uint32_t PRTN0_CORE2_ADDR;                  /**< Partition 0 Core 2 Address Register, offset: 0x18C */
  uint8_t RESERVED_6[16];
  __IO uint32_t PRTN0_CORE3_PCONF;                 /**< Partition 0 Core 3 Process Configuration Register, offset: 0x1A0 */
  __IO uint32_t PRTN0_CORE3_PUPD;                  /**< Partition 0 Core 3 Process Update Register, offset: 0x1A4 */
  __I  uint32_t PRTN0_CORE3_STAT;                  /**< Partition 0 Core 3 Status Register, offset: 0x1A8 */
  __IO uint32_t PRTN0_CORE3_ADDR;                  /**< Partition 0 Core 3 Address Register, offset: 0x1AC */
  uint8_t RESERVED_7[336];
  __IO uint32_t PRTN1_PCONF;                       /**< Partition 1 Process Configuration Register, offset: 0x300 */
  __IO uint32_t PRTN1_PUPD;                        /**< Partition 1 Process Update Register, offset: 0x304 */
  __I  uint32_t PRTN1_STAT;                        /**< Partition 1 Status Register, offset: 0x308 */
  uint8_t RESERVED_8[52];
  __IO uint32_t PRTN1_CORE0_PCONF;                 /**< Partition 1 Core 0 Process Configuration Register, offset: 0x340 */
  __IO uint32_t PRTN1_CORE0_PUPD;                  /**< Partition 1 Core 0 Process Update Register, offset: 0x344 */
  __I  uint32_t PRTN1_CORE0_STAT;                  /**< Partition 1 Core 0 Status Register, offset: 0x348 */
  __IO uint32_t PRTN1_CORE0_ADDR;                  /**< Partition 1 Core 0 Address Register, offset: 0x34C */
  uint8_t RESERVED_9[16];
  __IO uint32_t PRTN1_CORE1_PCONF;                 /**< Partition 1 Core 1 Process Configuration Register, offset: 0x360 */
  __IO uint32_t PRTN1_CORE1_PUPD;                  /**< Partition 1 Core 1 Process Update Register, offset: 0x364 */
  __I  uint32_t PRTN1_CORE1_STAT;                  /**< Partition 1 Core 1 Status Register, offset: 0x368 */
  __IO uint32_t PRTN1_CORE1_ADDR;                  /**< Partition 1 Core 1 Address Register, offset: 0x36C */
  uint8_t RESERVED_10[16];
  __IO uint32_t PRTN1_CORE2_PCONF;                 /**< Partition 1 Core 2 Process Configuration Register, offset: 0x380 */
  __IO uint32_t PRTN1_CORE2_PUPD;                  /**< Partition 1 Core 2 Process Update Register, offset: 0x384 */
  __I  uint32_t PRTN1_CORE2_STAT;                  /**< Partition 1 Core 2 Status Register, offset: 0x388 */
  __IO uint32_t PRTN1_CORE2_ADDR;                  /**< Partition 1 Core 2 Address Register, offset: 0x38C */
  uint8_t RESERVED_11[16];
  __IO uint32_t PRTN1_CORE3_PCONF;                 /**< Partition 1 Core 3 Process Configuration Register, offset: 0x3A0 */
  __IO uint32_t PRTN1_CORE3_PUPD;                  /**< Partition 1 Core 3 Process Update Register, offset: 0x3A4 */
  __I  uint32_t PRTN1_CORE3_STAT;                  /**< Partition 1 Core 3 Status Register, offset: 0x3A8 */
  __IO uint32_t PRTN1_CORE3_ADDR;                  /**< Partition 1 Core 3 Address Register, offset: 0x3AC */
  uint8_t RESERVED_12[336];
  __IO uint32_t PRTN2_PCONF;                       /**< Partition 2 Process Configuration Register, offset: 0x500 */
  __IO uint32_t PRTN2_PUPD;                        /**< Partition 2 Process Update Register, offset: 0x504 */
  __I  uint32_t PRTN2_STAT;                        /**< Partition 2 Status Register, offset: 0x508 */
  uint8_t RESERVED_13[4];
  __I  uint32_t PRTN2_COFB0_STAT;                  /**< Partition 2 COFB Set 0 Clock Status Register, offset: 0x510 */
  uint8_t RESERVED_14[28];
  __IO uint32_t PRTN2_COFB0_CLKEN;                 /**< Partition 2 COFB Set 0 Clock Enable Register, offset: 0x530 */
  uint8_t RESERVED_15[460];
  __IO uint32_t PRTN3_PCONF;                       /**< Partition 3 Process Configuration Register, offset: 0x700 */
  __IO uint32_t PRTN3_PUPD;                        /**< Partition 3 Process Update Register, offset: 0x704 */
  __I  uint32_t PRTN3_STAT;                        /**< Partition 3 Status Register, offset: 0x708 */
  uint8_t RESERVED_16[4];
  __I  uint32_t PRTN3_COFB0_STAT;                  /**< Partition 3 COFB Set 0 Clock Status Register, offset: 0x710 */
  uint8_t RESERVED_17[28];
  __IO uint32_t PRTN3_COFB0_CLKEN;                 /**< Partition 3 COFB Set 0 Clock Enable Register, offset: 0x730 */
} MC_ME_Type, *MC_ME_MemMapPtr;

/** Number of instances of the MC_ME module. */
#define MC_ME_INSTANCE_COUNT                     (1u)

/* MC_ME - Peripheral instance base addresses */
/** Peripheral MC_ME base address */
#define MC_ME_BASE                               (0x40088000u)
/** Peripheral MC_ME base pointer */
#define MC_ME                                    ((MC_ME_Type *)MC_ME_BASE)
/** Array initializer of MC_ME peripheral base addresses */
#define MC_ME_BASE_ADDRS                         { MC_ME_BASE }
/** Array initializer of MC_ME peripheral base pointers */
#define MC_ME_BASE_PTRS                          { MC_ME }

/* ----------------------------------------------------------------------------
   -- MC_ME Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup MC_ME_Register_Masks MC_ME Register Masks
 * @{
 */

/*! @name CTL_KEY - Control Key Register */
/*! @{ */
#define MC_ME_CTL_KEY_KEY_MASK                   (0xFFFFU)
#define MC_ME_CTL_KEY_KEY_SHIFT                  (0U)
#define MC_ME_CTL_KEY_KEY_WIDTH                  (16U)
#define MC_ME_CTL_KEY_KEY(x)                     (((uint32_t)(((uint32_t)(x)) << MC_ME_CTL_KEY_KEY_SHIFT)) & MC_ME_CTL_KEY_KEY_MASK)
/*! @} */

/*! @name MODE_CONF - Mode Configuration Register */
/*! @{ */
#define MC_ME_MODE_CONF_DEST_RST_MASK            (0x1U)
#define MC_ME_MODE_CONF_DEST_RST_SHIFT           (0U)
#define MC_ME_MODE_CONF_DEST_RST_WIDTH           (1U)
#define MC_ME_MODE_CONF_DEST_RST(x)              (((uint32_t)(((uint32_t)(x)) << MC_ME_MODE_CONF_DEST_RST_SHIFT)) & MC_ME_MODE_CONF_DEST_RST_MASK)
#define MC_ME_MODE_CONF_FUNC_RST_MASK            (0x2U)
#define MC_ME_MODE_CONF_FUNC_RST_SHIFT           (1U)
#define MC_ME_MODE_CONF_FUNC_RST_WIDTH           (1U)
#define MC_ME_MODE_CONF_FUNC_RST(x)              (((uint32_t)(((uint32_t)(x)) << MC_ME_MODE_CONF_FUNC_RST_SHIFT)) & MC_ME_MODE_CONF_FUNC_RST_MASK)
#define MC_ME_MODE_CONF_STANDBY_MASK             (0x8000U)
#define MC_ME_MODE_CONF_STANDBY_SHIFT            (15U)
#define MC_ME_MODE_CONF_STANDBY_WIDTH            (1U)
#define MC_ME_MODE_CONF_STANDBY(x)               (((uint32_t)(((uint32_t)(x)) << MC_ME_MODE_CONF_STANDBY_SHIFT)) & MC_ME_MODE_CONF_STANDBY_MASK)
/*! @} */

/*! @name MODE_UPD - Mode Update Register */
/*! @{ */
#define MC_ME_MODE_UPD_MODE_UPD_MASK             (0x1U)
#define MC_ME_MODE_UPD_MODE_UPD_SHIFT            (0U)
#define MC_ME_MODE_UPD_MODE_UPD_WIDTH            (1U)
#define MC_ME_MODE_UPD_MODE_UPD(x)               (((uint32_t)(((uint32_t)(x)) << MC_ME_MODE_UPD_MODE_UPD_SHIFT)) & MC_ME_MODE_UPD_MODE_UPD_MASK)
/*! @} */

/*! @name MODE_STAT - Mode Status Register */
/*! @{ */
#define MC_ME_MODE_STAT_PREV_MODE_MASK           (0x1U)
#define MC_ME_MODE_STAT_PREV_MODE_SHIFT          (0U)
#define MC_ME_MODE_STAT_PREV_MODE_WIDTH          (1U)
#define MC_ME_MODE_STAT_PREV_MODE(x)             (((uint32_t)(((uint32_t)(x)) << MC_ME_MODE_STAT_PREV_MODE_SHIFT)) & MC_ME_MODE_STAT_PREV_MODE_MASK)
/*! @} */

/*! @name MAIN_COREID - Main Core ID Register */
/*! @{ */
#define MC_ME_MAIN_COREID_CIDX_MASK              (0x7U)
#define MC_ME_MAIN_COREID_CIDX_SHIFT             (0U)
#define MC_ME_MAIN_COREID_CIDX_WIDTH             (3U)
#define MC_ME_MAIN_COREID_CIDX(x)                (((uint32_t)(((uint32_t)(x)) << MC_ME_MAIN_COREID_CIDX_SHIFT)) & MC_ME_MAIN_COREID_CIDX_MASK)
#define MC_ME_MAIN_COREID_PIDX_MASK              (0x1F00U)
#define MC_ME_MAIN_COREID_PIDX_SHIFT             (8U)
#define MC_ME_MAIN_COREID_PIDX_WIDTH             (5U)
#define MC_ME_MAIN_COREID_PIDX(x)                (((uint32_t)(((uint32_t)(x)) << MC_ME_MAIN_COREID_PIDX_SHIFT)) & MC_ME_MAIN_COREID_PIDX_MASK)
/*! @} */

/*! @name PRTN0_PCONF - Partition 0 Process Configuration Register */
/*! @{ */
#define MC_ME_PRTN0_PCONF_PCE_MASK               (0x1U)
#define MC_ME_PRTN0_PCONF_PCE_SHIFT              (0U)
#define MC_ME_PRTN0_PCONF_PCE_WIDTH              (1U)
#define MC_ME_PRTN0_PCONF_PCE(x)                 (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_PCONF_PCE_SHIFT)) & MC_ME_PRTN0_PCONF_PCE_MASK)
/*! @} */

/*! @name PRTN0_PUPD - Partition 0 Process Update Register */
/*! @{ */
#define MC_ME_PRTN0_PUPD_PCUD_MASK               (0x1U)
#define MC_ME_PRTN0_PUPD_PCUD_SHIFT              (0U)
#define MC_ME_PRTN0_PUPD_PCUD_WIDTH              (1U)
#define MC_ME_PRTN0_PUPD_PCUD(x)                 (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_PUPD_PCUD_SHIFT)) & MC_ME_PRTN0_PUPD_PCUD_MASK)
/*! @} */

/*! @name PRTN0_STAT - Partition 0 Status Register */
/*! @{ */
#define MC_ME_PRTN0_STAT_PCS_MASK                (0x1U)
#define MC_ME_PRTN0_STAT_PCS_SHIFT               (0U)
#define MC_ME_PRTN0_STAT_PCS_WIDTH               (1U)
#define MC_ME_PRTN0_STAT_PCS(x)                  (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_STAT_PCS_SHIFT)) & MC_ME_PRTN0_STAT_PCS_MASK)
/*! @} */

/*! @name PRTN0_COFB0_STAT - Partition 0 COFB Set 0 Clock Status Register */
/*! @{ */
#define MC_ME_PRTN0_COFB0_STAT_BLOCK0_MASK       (0x1U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK0_SHIFT      (0U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK0_WIDTH      (1U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK0(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_COFB0_STAT_BLOCK0_SHIFT)) & MC_ME_PRTN0_COFB0_STAT_BLOCK0_MASK)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK1_MASK       (0x2U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK1_SHIFT      (1U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK1_WIDTH      (1U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK1(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_COFB0_STAT_BLOCK1_SHIFT)) & MC_ME_PRTN0_COFB0_STAT_BLOCK1_MASK)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK2_MASK       (0x4U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK2_SHIFT      (2U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK2_WIDTH      (1U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK2(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_COFB0_STAT_BLOCK2_SHIFT)) & MC_ME_PRTN0_COFB0_STAT_BLOCK2_MASK)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK3_MASK       (0x8U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK3_SHIFT      (3U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK3_WIDTH      (1U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK3(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_COFB0_STAT_BLOCK3_SHIFT)) & MC_ME_PRTN0_COFB0_STAT_BLOCK3_MASK)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK4_MASK       (0x10U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK4_SHIFT      (4U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK4_WIDTH      (1U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK4(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_COFB0_STAT_BLOCK4_SHIFT)) & MC_ME_PRTN0_COFB0_STAT_BLOCK4_MASK)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK5_MASK       (0x20U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK5_SHIFT      (5U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK5_WIDTH      (1U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK5(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_COFB0_STAT_BLOCK5_SHIFT)) & MC_ME_PRTN0_COFB0_STAT_BLOCK5_MASK)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK6_MASK       (0x40U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK6_SHIFT      (6U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK6_WIDTH      (1U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK6(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_COFB0_STAT_BLOCK6_SHIFT)) & MC_ME_PRTN0_COFB0_STAT_BLOCK6_MASK)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK7_MASK       (0x80U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK7_SHIFT      (7U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK7_WIDTH      (1U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK7(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_COFB0_STAT_BLOCK7_SHIFT)) & MC_ME_PRTN0_COFB0_STAT_BLOCK7_MASK)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK8_MASK       (0x100U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK8_SHIFT      (8U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK8_WIDTH      (1U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK8(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_COFB0_STAT_BLOCK8_SHIFT)) & MC_ME_PRTN0_COFB0_STAT_BLOCK8_MASK)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK9_MASK       (0x200U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK9_SHIFT      (9U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK9_WIDTH      (1U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK9(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_COFB0_STAT_BLOCK9_SHIFT)) & MC_ME_PRTN0_COFB0_STAT_BLOCK9_MASK)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK10_MASK      (0x400U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK10_SHIFT     (10U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK10_WIDTH     (1U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK10(x)        (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_COFB0_STAT_BLOCK10_SHIFT)) & MC_ME_PRTN0_COFB0_STAT_BLOCK10_MASK)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK11_MASK      (0x800U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK11_SHIFT     (11U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK11_WIDTH     (1U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK11(x)        (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_COFB0_STAT_BLOCK11_SHIFT)) & MC_ME_PRTN0_COFB0_STAT_BLOCK11_MASK)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK12_MASK      (0x1000U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK12_SHIFT     (12U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK12_WIDTH     (1U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK12(x)        (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_COFB0_STAT_BLOCK12_SHIFT)) & MC_ME_PRTN0_COFB0_STAT_BLOCK12_MASK)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK13_MASK      (0x2000U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK13_SHIFT     (13U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK13_WIDTH     (1U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK13(x)        (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_COFB0_STAT_BLOCK13_SHIFT)) & MC_ME_PRTN0_COFB0_STAT_BLOCK13_MASK)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK14_MASK      (0x4000U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK14_SHIFT     (14U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK14_WIDTH     (1U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK14(x)        (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_COFB0_STAT_BLOCK14_SHIFT)) & MC_ME_PRTN0_COFB0_STAT_BLOCK14_MASK)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK15_MASK      (0x8000U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK15_SHIFT     (15U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK15_WIDTH     (1U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK15(x)        (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_COFB0_STAT_BLOCK15_SHIFT)) & MC_ME_PRTN0_COFB0_STAT_BLOCK15_MASK)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK16_MASK      (0x10000U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK16_SHIFT     (16U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK16_WIDTH     (1U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK16(x)        (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_COFB0_STAT_BLOCK16_SHIFT)) & MC_ME_PRTN0_COFB0_STAT_BLOCK16_MASK)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK17_MASK      (0x20000U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK17_SHIFT     (17U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK17_WIDTH     (1U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK17(x)        (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_COFB0_STAT_BLOCK17_SHIFT)) & MC_ME_PRTN0_COFB0_STAT_BLOCK17_MASK)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK18_MASK      (0x40000U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK18_SHIFT     (18U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK18_WIDTH     (1U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK18(x)        (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_COFB0_STAT_BLOCK18_SHIFT)) & MC_ME_PRTN0_COFB0_STAT_BLOCK18_MASK)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK19_MASK      (0x80000U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK19_SHIFT     (19U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK19_WIDTH     (1U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK19(x)        (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_COFB0_STAT_BLOCK19_SHIFT)) & MC_ME_PRTN0_COFB0_STAT_BLOCK19_MASK)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK20_MASK      (0x100000U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK20_SHIFT     (20U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK20_WIDTH     (1U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK20(x)        (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_COFB0_STAT_BLOCK20_SHIFT)) & MC_ME_PRTN0_COFB0_STAT_BLOCK20_MASK)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK21_MASK      (0x200000U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK21_SHIFT     (21U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK21_WIDTH     (1U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK21(x)        (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_COFB0_STAT_BLOCK21_SHIFT)) & MC_ME_PRTN0_COFB0_STAT_BLOCK21_MASK)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK22_MASK      (0x400000U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK22_SHIFT     (22U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK22_WIDTH     (1U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK22(x)        (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_COFB0_STAT_BLOCK22_SHIFT)) & MC_ME_PRTN0_COFB0_STAT_BLOCK22_MASK)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK23_MASK      (0x800000U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK23_SHIFT     (23U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK23_WIDTH     (1U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK23(x)        (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_COFB0_STAT_BLOCK23_SHIFT)) & MC_ME_PRTN0_COFB0_STAT_BLOCK23_MASK)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK24_MASK      (0x1000000U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK24_SHIFT     (24U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK24_WIDTH     (1U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK24(x)        (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_COFB0_STAT_BLOCK24_SHIFT)) & MC_ME_PRTN0_COFB0_STAT_BLOCK24_MASK)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK25_MASK      (0x2000000U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK25_SHIFT     (25U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK25_WIDTH     (1U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK25(x)        (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_COFB0_STAT_BLOCK25_SHIFT)) & MC_ME_PRTN0_COFB0_STAT_BLOCK25_MASK)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK26_MASK      (0x4000000U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK26_SHIFT     (26U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK26_WIDTH     (1U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK26(x)        (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_COFB0_STAT_BLOCK26_SHIFT)) & MC_ME_PRTN0_COFB0_STAT_BLOCK26_MASK)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK27_MASK      (0x8000000U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK27_SHIFT     (27U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK27_WIDTH     (1U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK27(x)        (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_COFB0_STAT_BLOCK27_SHIFT)) & MC_ME_PRTN0_COFB0_STAT_BLOCK27_MASK)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK28_MASK      (0x10000000U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK28_SHIFT     (28U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK28_WIDTH     (1U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK28(x)        (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_COFB0_STAT_BLOCK28_SHIFT)) & MC_ME_PRTN0_COFB0_STAT_BLOCK28_MASK)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK29_MASK      (0x20000000U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK29_SHIFT     (29U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK29_WIDTH     (1U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK29(x)        (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_COFB0_STAT_BLOCK29_SHIFT)) & MC_ME_PRTN0_COFB0_STAT_BLOCK29_MASK)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK30_MASK      (0x40000000U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK30_SHIFT     (30U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK30_WIDTH     (1U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK30(x)        (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_COFB0_STAT_BLOCK30_SHIFT)) & MC_ME_PRTN0_COFB0_STAT_BLOCK30_MASK)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK31_MASK      (0x80000000U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK31_SHIFT     (31U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK31_WIDTH     (1U)
#define MC_ME_PRTN0_COFB0_STAT_BLOCK31(x)        (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_COFB0_STAT_BLOCK31_SHIFT)) & MC_ME_PRTN0_COFB0_STAT_BLOCK31_MASK)
/*! @} */

/*! @name PRTN0_COFB0_CLKEN - Partition 0 COFB Set 0 Clock Enable Register */
/*! @{ */
#define MC_ME_PRTN0_COFB0_CLKEN_REQ0_MASK        (0x1U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ0_SHIFT       (0U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ0_WIDTH       (1U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ0(x)          (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_COFB0_CLKEN_REQ0_SHIFT)) & MC_ME_PRTN0_COFB0_CLKEN_REQ0_MASK)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ1_MASK        (0x2U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ1_SHIFT       (1U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ1_WIDTH       (1U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ1(x)          (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_COFB0_CLKEN_REQ1_SHIFT)) & MC_ME_PRTN0_COFB0_CLKEN_REQ1_MASK)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ2_MASK        (0x4U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ2_SHIFT       (2U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ2_WIDTH       (1U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ2(x)          (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_COFB0_CLKEN_REQ2_SHIFT)) & MC_ME_PRTN0_COFB0_CLKEN_REQ2_MASK)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ3_MASK        (0x8U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ3_SHIFT       (3U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ3_WIDTH       (1U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ3(x)          (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_COFB0_CLKEN_REQ3_SHIFT)) & MC_ME_PRTN0_COFB0_CLKEN_REQ3_MASK)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ4_MASK        (0x10U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ4_SHIFT       (4U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ4_WIDTH       (1U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ4(x)          (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_COFB0_CLKEN_REQ4_SHIFT)) & MC_ME_PRTN0_COFB0_CLKEN_REQ4_MASK)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ5_MASK        (0x20U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ5_SHIFT       (5U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ5_WIDTH       (1U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ5(x)          (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_COFB0_CLKEN_REQ5_SHIFT)) & MC_ME_PRTN0_COFB0_CLKEN_REQ5_MASK)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ6_MASK        (0x40U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ6_SHIFT       (6U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ6_WIDTH       (1U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ6(x)          (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_COFB0_CLKEN_REQ6_SHIFT)) & MC_ME_PRTN0_COFB0_CLKEN_REQ6_MASK)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ7_MASK        (0x80U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ7_SHIFT       (7U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ7_WIDTH       (1U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ7(x)          (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_COFB0_CLKEN_REQ7_SHIFT)) & MC_ME_PRTN0_COFB0_CLKEN_REQ7_MASK)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ8_MASK        (0x100U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ8_SHIFT       (8U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ8_WIDTH       (1U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ8(x)          (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_COFB0_CLKEN_REQ8_SHIFT)) & MC_ME_PRTN0_COFB0_CLKEN_REQ8_MASK)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ9_MASK        (0x200U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ9_SHIFT       (9U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ9_WIDTH       (1U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ9(x)          (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_COFB0_CLKEN_REQ9_SHIFT)) & MC_ME_PRTN0_COFB0_CLKEN_REQ9_MASK)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ10_MASK       (0x400U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ10_SHIFT      (10U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ10_WIDTH      (1U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ10(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_COFB0_CLKEN_REQ10_SHIFT)) & MC_ME_PRTN0_COFB0_CLKEN_REQ10_MASK)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ11_MASK       (0x800U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ11_SHIFT      (11U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ11_WIDTH      (1U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ11(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_COFB0_CLKEN_REQ11_SHIFT)) & MC_ME_PRTN0_COFB0_CLKEN_REQ11_MASK)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ12_MASK       (0x1000U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ12_SHIFT      (12U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ12_WIDTH      (1U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ12(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_COFB0_CLKEN_REQ12_SHIFT)) & MC_ME_PRTN0_COFB0_CLKEN_REQ12_MASK)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ13_MASK       (0x2000U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ13_SHIFT      (13U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ13_WIDTH      (1U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ13(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_COFB0_CLKEN_REQ13_SHIFT)) & MC_ME_PRTN0_COFB0_CLKEN_REQ13_MASK)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ14_MASK       (0x4000U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ14_SHIFT      (14U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ14_WIDTH      (1U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ14(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_COFB0_CLKEN_REQ14_SHIFT)) & MC_ME_PRTN0_COFB0_CLKEN_REQ14_MASK)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ15_MASK       (0x8000U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ15_SHIFT      (15U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ15_WIDTH      (1U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ15(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_COFB0_CLKEN_REQ15_SHIFT)) & MC_ME_PRTN0_COFB0_CLKEN_REQ15_MASK)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ16_MASK       (0x10000U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ16_SHIFT      (16U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ16_WIDTH      (1U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ16(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_COFB0_CLKEN_REQ16_SHIFT)) & MC_ME_PRTN0_COFB0_CLKEN_REQ16_MASK)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ17_MASK       (0x20000U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ17_SHIFT      (17U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ17_WIDTH      (1U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ17(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_COFB0_CLKEN_REQ17_SHIFT)) & MC_ME_PRTN0_COFB0_CLKEN_REQ17_MASK)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ18_MASK       (0x40000U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ18_SHIFT      (18U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ18_WIDTH      (1U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ18(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_COFB0_CLKEN_REQ18_SHIFT)) & MC_ME_PRTN0_COFB0_CLKEN_REQ18_MASK)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ19_MASK       (0x80000U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ19_SHIFT      (19U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ19_WIDTH      (1U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ19(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_COFB0_CLKEN_REQ19_SHIFT)) & MC_ME_PRTN0_COFB0_CLKEN_REQ19_MASK)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ20_MASK       (0x100000U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ20_SHIFT      (20U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ20_WIDTH      (1U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ20(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_COFB0_CLKEN_REQ20_SHIFT)) & MC_ME_PRTN0_COFB0_CLKEN_REQ20_MASK)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ21_MASK       (0x200000U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ21_SHIFT      (21U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ21_WIDTH      (1U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ21(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_COFB0_CLKEN_REQ21_SHIFT)) & MC_ME_PRTN0_COFB0_CLKEN_REQ21_MASK)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ22_MASK       (0x400000U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ22_SHIFT      (22U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ22_WIDTH      (1U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ22(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_COFB0_CLKEN_REQ22_SHIFT)) & MC_ME_PRTN0_COFB0_CLKEN_REQ22_MASK)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ23_MASK       (0x800000U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ23_SHIFT      (23U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ23_WIDTH      (1U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ23(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_COFB0_CLKEN_REQ23_SHIFT)) & MC_ME_PRTN0_COFB0_CLKEN_REQ23_MASK)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ24_MASK       (0x1000000U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ24_SHIFT      (24U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ24_WIDTH      (1U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ24(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_COFB0_CLKEN_REQ24_SHIFT)) & MC_ME_PRTN0_COFB0_CLKEN_REQ24_MASK)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ25_MASK       (0x2000000U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ25_SHIFT      (25U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ25_WIDTH      (1U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ25(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_COFB0_CLKEN_REQ25_SHIFT)) & MC_ME_PRTN0_COFB0_CLKEN_REQ25_MASK)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ26_MASK       (0x4000000U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ26_SHIFT      (26U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ26_WIDTH      (1U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ26(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_COFB0_CLKEN_REQ26_SHIFT)) & MC_ME_PRTN0_COFB0_CLKEN_REQ26_MASK)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ27_MASK       (0x8000000U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ27_SHIFT      (27U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ27_WIDTH      (1U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ27(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_COFB0_CLKEN_REQ27_SHIFT)) & MC_ME_PRTN0_COFB0_CLKEN_REQ27_MASK)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ28_MASK       (0x10000000U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ28_SHIFT      (28U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ28_WIDTH      (1U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ28(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_COFB0_CLKEN_REQ28_SHIFT)) & MC_ME_PRTN0_COFB0_CLKEN_REQ28_MASK)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ29_MASK       (0x20000000U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ29_SHIFT      (29U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ29_WIDTH      (1U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ29(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_COFB0_CLKEN_REQ29_SHIFT)) & MC_ME_PRTN0_COFB0_CLKEN_REQ29_MASK)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ30_MASK       (0x40000000U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ30_SHIFT      (30U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ30_WIDTH      (1U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ30(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_COFB0_CLKEN_REQ30_SHIFT)) & MC_ME_PRTN0_COFB0_CLKEN_REQ30_MASK)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ31_MASK       (0x80000000U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ31_SHIFT      (31U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ31_WIDTH      (1U)
#define MC_ME_PRTN0_COFB0_CLKEN_REQ31(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_COFB0_CLKEN_REQ31_SHIFT)) & MC_ME_PRTN0_COFB0_CLKEN_REQ31_MASK)
/*! @} */

/*! @name PRTN0_CORE0_PCONF - Partition 0 Core 0 Process Configuration Register */
/*! @{ */
#define MC_ME_PRTN0_CORE0_PCONF_CCE_MASK         (0x1U)
#define MC_ME_PRTN0_CORE0_PCONF_CCE_SHIFT        (0U)
#define MC_ME_PRTN0_CORE0_PCONF_CCE_WIDTH        (1U)
#define MC_ME_PRTN0_CORE0_PCONF_CCE(x)           (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_CORE0_PCONF_CCE_SHIFT)) & MC_ME_PRTN0_CORE0_PCONF_CCE_MASK)
/*! @} */

/*! @name PRTN0_CORE0_PUPD - Partition 0 Core 0 Process Update Register */
/*! @{ */
#define MC_ME_PRTN0_CORE0_PUPD_CCUPD_MASK        (0x1U)
#define MC_ME_PRTN0_CORE0_PUPD_CCUPD_SHIFT       (0U)
#define MC_ME_PRTN0_CORE0_PUPD_CCUPD_WIDTH       (1U)
#define MC_ME_PRTN0_CORE0_PUPD_CCUPD(x)          (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_CORE0_PUPD_CCUPD_SHIFT)) & MC_ME_PRTN0_CORE0_PUPD_CCUPD_MASK)
/*! @} */

/*! @name PRTN0_CORE0_STAT - Partition 0 Core 0 Status Register */
/*! @{ */
#define MC_ME_PRTN0_CORE0_STAT_CCS_MASK          (0x1U)
#define MC_ME_PRTN0_CORE0_STAT_CCS_SHIFT         (0U)
#define MC_ME_PRTN0_CORE0_STAT_CCS_WIDTH         (1U)
#define MC_ME_PRTN0_CORE0_STAT_CCS(x)            (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_CORE0_STAT_CCS_SHIFT)) & MC_ME_PRTN0_CORE0_STAT_CCS_MASK)
#define MC_ME_PRTN0_CORE0_STAT_WFI_MASK          (0x80000000U)
#define MC_ME_PRTN0_CORE0_STAT_WFI_SHIFT         (31U)
#define MC_ME_PRTN0_CORE0_STAT_WFI_WIDTH         (1U)
#define MC_ME_PRTN0_CORE0_STAT_WFI(x)            (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_CORE0_STAT_WFI_SHIFT)) & MC_ME_PRTN0_CORE0_STAT_WFI_MASK)
/*! @} */

/*! @name PRTN0_CORE0_ADDR - Partition 0 Core 0 Address Register */
/*! @{ */
#define MC_ME_PRTN0_CORE0_ADDR_ADDR_MASK         (0xFFFFFFFCU)
#define MC_ME_PRTN0_CORE0_ADDR_ADDR_SHIFT        (2U)
#define MC_ME_PRTN0_CORE0_ADDR_ADDR_WIDTH        (30U)
#define MC_ME_PRTN0_CORE0_ADDR_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_CORE0_ADDR_ADDR_SHIFT)) & MC_ME_PRTN0_CORE0_ADDR_ADDR_MASK)
/*! @} */

/*! @name PRTN0_CORE1_PCONF - Partition 0 Core 1 Process Configuration Register */
/*! @{ */
#define MC_ME_PRTN0_CORE1_PCONF_CCE_MASK         (0x1U)
#define MC_ME_PRTN0_CORE1_PCONF_CCE_SHIFT        (0U)
#define MC_ME_PRTN0_CORE1_PCONF_CCE_WIDTH        (1U)
#define MC_ME_PRTN0_CORE1_PCONF_CCE(x)           (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_CORE1_PCONF_CCE_SHIFT)) & MC_ME_PRTN0_CORE1_PCONF_CCE_MASK)
/*! @} */

/*! @name PRTN0_CORE1_PUPD - Partition 0 Core 1 Process Update Register */
/*! @{ */
#define MC_ME_PRTN0_CORE1_PUPD_CCUPD_MASK        (0x1U)
#define MC_ME_PRTN0_CORE1_PUPD_CCUPD_SHIFT       (0U)
#define MC_ME_PRTN0_CORE1_PUPD_CCUPD_WIDTH       (1U)
#define MC_ME_PRTN0_CORE1_PUPD_CCUPD(x)          (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_CORE1_PUPD_CCUPD_SHIFT)) & MC_ME_PRTN0_CORE1_PUPD_CCUPD_MASK)
/*! @} */

/*! @name PRTN0_CORE1_STAT - Partition 0 Core 1 Status Register */
/*! @{ */
#define MC_ME_PRTN0_CORE1_STAT_CCS_MASK          (0x1U)
#define MC_ME_PRTN0_CORE1_STAT_CCS_SHIFT         (0U)
#define MC_ME_PRTN0_CORE1_STAT_CCS_WIDTH         (1U)
#define MC_ME_PRTN0_CORE1_STAT_CCS(x)            (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_CORE1_STAT_CCS_SHIFT)) & MC_ME_PRTN0_CORE1_STAT_CCS_MASK)
#define MC_ME_PRTN0_CORE1_STAT_WFI_MASK          (0x80000000U)
#define MC_ME_PRTN0_CORE1_STAT_WFI_SHIFT         (31U)
#define MC_ME_PRTN0_CORE1_STAT_WFI_WIDTH         (1U)
#define MC_ME_PRTN0_CORE1_STAT_WFI(x)            (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_CORE1_STAT_WFI_SHIFT)) & MC_ME_PRTN0_CORE1_STAT_WFI_MASK)
/*! @} */

/*! @name PRTN0_CORE1_ADDR - Partition 0 Core 1 Address Register */
/*! @{ */
#define MC_ME_PRTN0_CORE1_ADDR_ADDR_MASK         (0xFFFFFFFCU)
#define MC_ME_PRTN0_CORE1_ADDR_ADDR_SHIFT        (2U)
#define MC_ME_PRTN0_CORE1_ADDR_ADDR_WIDTH        (30U)
#define MC_ME_PRTN0_CORE1_ADDR_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_CORE1_ADDR_ADDR_SHIFT)) & MC_ME_PRTN0_CORE1_ADDR_ADDR_MASK)
/*! @} */

/*! @name PRTN0_CORE2_PCONF - Partition 0 Core 2 Process Configuration Register */
/*! @{ */
#define MC_ME_PRTN0_CORE2_PCONF_CCE_MASK         (0x1U)
#define MC_ME_PRTN0_CORE2_PCONF_CCE_SHIFT        (0U)
#define MC_ME_PRTN0_CORE2_PCONF_CCE_WIDTH        (1U)
#define MC_ME_PRTN0_CORE2_PCONF_CCE(x)           (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_CORE2_PCONF_CCE_SHIFT)) & MC_ME_PRTN0_CORE2_PCONF_CCE_MASK)
/*! @} */

/*! @name PRTN0_CORE2_PUPD - Partition 0 Core 2 Process Update Register */
/*! @{ */
#define MC_ME_PRTN0_CORE2_PUPD_CCUPD_MASK        (0x1U)
#define MC_ME_PRTN0_CORE2_PUPD_CCUPD_SHIFT       (0U)
#define MC_ME_PRTN0_CORE2_PUPD_CCUPD_WIDTH       (1U)
#define MC_ME_PRTN0_CORE2_PUPD_CCUPD(x)          (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_CORE2_PUPD_CCUPD_SHIFT)) & MC_ME_PRTN0_CORE2_PUPD_CCUPD_MASK)
/*! @} */

/*! @name PRTN0_CORE2_STAT - Partition 0 Core 2 Status Register */
/*! @{ */
#define MC_ME_PRTN0_CORE2_STAT_CCS_MASK          (0x1U)
#define MC_ME_PRTN0_CORE2_STAT_CCS_SHIFT         (0U)
#define MC_ME_PRTN0_CORE2_STAT_CCS_WIDTH         (1U)
#define MC_ME_PRTN0_CORE2_STAT_CCS(x)            (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_CORE2_STAT_CCS_SHIFT)) & MC_ME_PRTN0_CORE2_STAT_CCS_MASK)
#define MC_ME_PRTN0_CORE2_STAT_WFI_MASK          (0x80000000U)
#define MC_ME_PRTN0_CORE2_STAT_WFI_SHIFT         (31U)
#define MC_ME_PRTN0_CORE2_STAT_WFI_WIDTH         (1U)
#define MC_ME_PRTN0_CORE2_STAT_WFI(x)            (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_CORE2_STAT_WFI_SHIFT)) & MC_ME_PRTN0_CORE2_STAT_WFI_MASK)
/*! @} */

/*! @name PRTN0_CORE2_ADDR - Partition 0 Core 2 Address Register */
/*! @{ */
#define MC_ME_PRTN0_CORE2_ADDR_ADDR_MASK         (0xFFFFFFFCU)
#define MC_ME_PRTN0_CORE2_ADDR_ADDR_SHIFT        (2U)
#define MC_ME_PRTN0_CORE2_ADDR_ADDR_WIDTH        (30U)
#define MC_ME_PRTN0_CORE2_ADDR_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_CORE2_ADDR_ADDR_SHIFT)) & MC_ME_PRTN0_CORE2_ADDR_ADDR_MASK)
/*! @} */

/*! @name PRTN0_CORE3_PCONF - Partition 0 Core 3 Process Configuration Register */
/*! @{ */
#define MC_ME_PRTN0_CORE3_PCONF_CCE_MASK         (0x1U)
#define MC_ME_PRTN0_CORE3_PCONF_CCE_SHIFT        (0U)
#define MC_ME_PRTN0_CORE3_PCONF_CCE_WIDTH        (1U)
#define MC_ME_PRTN0_CORE3_PCONF_CCE(x)           (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_CORE3_PCONF_CCE_SHIFT)) & MC_ME_PRTN0_CORE3_PCONF_CCE_MASK)
/*! @} */

/*! @name PRTN0_CORE3_PUPD - Partition 0 Core 3 Process Update Register */
/*! @{ */
#define MC_ME_PRTN0_CORE3_PUPD_CCUPD_MASK        (0x1U)
#define MC_ME_PRTN0_CORE3_PUPD_CCUPD_SHIFT       (0U)
#define MC_ME_PRTN0_CORE3_PUPD_CCUPD_WIDTH       (1U)
#define MC_ME_PRTN0_CORE3_PUPD_CCUPD(x)          (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_CORE3_PUPD_CCUPD_SHIFT)) & MC_ME_PRTN0_CORE3_PUPD_CCUPD_MASK)
/*! @} */

/*! @name PRTN0_CORE3_STAT - Partition 0 Core 3 Status Register */
/*! @{ */
#define MC_ME_PRTN0_CORE3_STAT_CCS_MASK          (0x1U)
#define MC_ME_PRTN0_CORE3_STAT_CCS_SHIFT         (0U)
#define MC_ME_PRTN0_CORE3_STAT_CCS_WIDTH         (1U)
#define MC_ME_PRTN0_CORE3_STAT_CCS(x)            (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_CORE3_STAT_CCS_SHIFT)) & MC_ME_PRTN0_CORE3_STAT_CCS_MASK)
#define MC_ME_PRTN0_CORE3_STAT_WFI_MASK          (0x80000000U)
#define MC_ME_PRTN0_CORE3_STAT_WFI_SHIFT         (31U)
#define MC_ME_PRTN0_CORE3_STAT_WFI_WIDTH         (1U)
#define MC_ME_PRTN0_CORE3_STAT_WFI(x)            (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_CORE3_STAT_WFI_SHIFT)) & MC_ME_PRTN0_CORE3_STAT_WFI_MASK)
/*! @} */

/*! @name PRTN0_CORE3_ADDR - Partition 0 Core 3 Address Register */
/*! @{ */
#define MC_ME_PRTN0_CORE3_ADDR_ADDR_MASK         (0xFFFFFFFCU)
#define MC_ME_PRTN0_CORE3_ADDR_ADDR_SHIFT        (2U)
#define MC_ME_PRTN0_CORE3_ADDR_ADDR_WIDTH        (30U)
#define MC_ME_PRTN0_CORE3_ADDR_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN0_CORE3_ADDR_ADDR_SHIFT)) & MC_ME_PRTN0_CORE3_ADDR_ADDR_MASK)
/*! @} */

/*! @name PRTN1_PCONF - Partition 1 Process Configuration Register */
/*! @{ */
#define MC_ME_PRTN1_PCONF_PCE_MASK               (0x1U)
#define MC_ME_PRTN1_PCONF_PCE_SHIFT              (0U)
#define MC_ME_PRTN1_PCONF_PCE_WIDTH              (1U)
#define MC_ME_PRTN1_PCONF_PCE(x)                 (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN1_PCONF_PCE_SHIFT)) & MC_ME_PRTN1_PCONF_PCE_MASK)
#define MC_ME_PRTN1_PCONF_OSSE_MASK              (0x4U)
#define MC_ME_PRTN1_PCONF_OSSE_SHIFT             (2U)
#define MC_ME_PRTN1_PCONF_OSSE_WIDTH             (1U)
#define MC_ME_PRTN1_PCONF_OSSE(x)                (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN1_PCONF_OSSE_SHIFT)) & MC_ME_PRTN1_PCONF_OSSE_MASK)
/*! @} */

/*! @name PRTN1_PUPD - Partition 1 Process Update Register */
/*! @{ */
#define MC_ME_PRTN1_PUPD_PCUD_MASK               (0x1U)
#define MC_ME_PRTN1_PUPD_PCUD_SHIFT              (0U)
#define MC_ME_PRTN1_PUPD_PCUD_WIDTH              (1U)
#define MC_ME_PRTN1_PUPD_PCUD(x)                 (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN1_PUPD_PCUD_SHIFT)) & MC_ME_PRTN1_PUPD_PCUD_MASK)
#define MC_ME_PRTN1_PUPD_OSSUD_MASK              (0x4U)
#define MC_ME_PRTN1_PUPD_OSSUD_SHIFT             (2U)
#define MC_ME_PRTN1_PUPD_OSSUD_WIDTH             (1U)
#define MC_ME_PRTN1_PUPD_OSSUD(x)                (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN1_PUPD_OSSUD_SHIFT)) & MC_ME_PRTN1_PUPD_OSSUD_MASK)
/*! @} */

/*! @name PRTN1_STAT - Partition 1 Status Register */
/*! @{ */
#define MC_ME_PRTN1_STAT_PCS_MASK                (0x1U)
#define MC_ME_PRTN1_STAT_PCS_SHIFT               (0U)
#define MC_ME_PRTN1_STAT_PCS_WIDTH               (1U)
#define MC_ME_PRTN1_STAT_PCS(x)                  (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN1_STAT_PCS_SHIFT)) & MC_ME_PRTN1_STAT_PCS_MASK)
#define MC_ME_PRTN1_STAT_OSSS_MASK               (0x4U)
#define MC_ME_PRTN1_STAT_OSSS_SHIFT              (2U)
#define MC_ME_PRTN1_STAT_OSSS_WIDTH              (1U)
#define MC_ME_PRTN1_STAT_OSSS(x)                 (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN1_STAT_OSSS_SHIFT)) & MC_ME_PRTN1_STAT_OSSS_MASK)
/*! @} */

/*! @name PRTN1_CORE0_PCONF - Partition 1 Core 0 Process Configuration Register */
/*! @{ */
#define MC_ME_PRTN1_CORE0_PCONF_CCE_MASK         (0x1U)
#define MC_ME_PRTN1_CORE0_PCONF_CCE_SHIFT        (0U)
#define MC_ME_PRTN1_CORE0_PCONF_CCE_WIDTH        (1U)
#define MC_ME_PRTN1_CORE0_PCONF_CCE(x)           (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN1_CORE0_PCONF_CCE_SHIFT)) & MC_ME_PRTN1_CORE0_PCONF_CCE_MASK)
/*! @} */

/*! @name PRTN1_CORE0_PUPD - Partition 1 Core 0 Process Update Register */
/*! @{ */
#define MC_ME_PRTN1_CORE0_PUPD_CCUPD_MASK        (0x1U)
#define MC_ME_PRTN1_CORE0_PUPD_CCUPD_SHIFT       (0U)
#define MC_ME_PRTN1_CORE0_PUPD_CCUPD_WIDTH       (1U)
#define MC_ME_PRTN1_CORE0_PUPD_CCUPD(x)          (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN1_CORE0_PUPD_CCUPD_SHIFT)) & MC_ME_PRTN1_CORE0_PUPD_CCUPD_MASK)
/*! @} */

/*! @name PRTN1_CORE0_STAT - Partition 1 Core 0 Status Register */
/*! @{ */
#define MC_ME_PRTN1_CORE0_STAT_CCS_MASK          (0x1U)
#define MC_ME_PRTN1_CORE0_STAT_CCS_SHIFT         (0U)
#define MC_ME_PRTN1_CORE0_STAT_CCS_WIDTH         (1U)
#define MC_ME_PRTN1_CORE0_STAT_CCS(x)            (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN1_CORE0_STAT_CCS_SHIFT)) & MC_ME_PRTN1_CORE0_STAT_CCS_MASK)
#define MC_ME_PRTN1_CORE0_STAT_WFI_MASK          (0x80000000U)
#define MC_ME_PRTN1_CORE0_STAT_WFI_SHIFT         (31U)
#define MC_ME_PRTN1_CORE0_STAT_WFI_WIDTH         (1U)
#define MC_ME_PRTN1_CORE0_STAT_WFI(x)            (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN1_CORE0_STAT_WFI_SHIFT)) & MC_ME_PRTN1_CORE0_STAT_WFI_MASK)
/*! @} */

/*! @name PRTN1_CORE0_ADDR - Partition 1 Core 0 Address Register */
/*! @{ */
#define MC_ME_PRTN1_CORE0_ADDR_ADDR_MASK         (0xFFFFFFFCU)
#define MC_ME_PRTN1_CORE0_ADDR_ADDR_SHIFT        (2U)
#define MC_ME_PRTN1_CORE0_ADDR_ADDR_WIDTH        (30U)
#define MC_ME_PRTN1_CORE0_ADDR_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN1_CORE0_ADDR_ADDR_SHIFT)) & MC_ME_PRTN1_CORE0_ADDR_ADDR_MASK)
/*! @} */

/*! @name PRTN1_CORE1_PCONF - Partition 1 Core 1 Process Configuration Register */
/*! @{ */
#define MC_ME_PRTN1_CORE1_PCONF_CCE_MASK         (0x1U)
#define MC_ME_PRTN1_CORE1_PCONF_CCE_SHIFT        (0U)
#define MC_ME_PRTN1_CORE1_PCONF_CCE_WIDTH        (1U)
#define MC_ME_PRTN1_CORE1_PCONF_CCE(x)           (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN1_CORE1_PCONF_CCE_SHIFT)) & MC_ME_PRTN1_CORE1_PCONF_CCE_MASK)
/*! @} */

/*! @name PRTN1_CORE1_PUPD - Partition 1 Core 1 Process Update Register */
/*! @{ */
#define MC_ME_PRTN1_CORE1_PUPD_CCUPD_MASK        (0x1U)
#define MC_ME_PRTN1_CORE1_PUPD_CCUPD_SHIFT       (0U)
#define MC_ME_PRTN1_CORE1_PUPD_CCUPD_WIDTH       (1U)
#define MC_ME_PRTN1_CORE1_PUPD_CCUPD(x)          (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN1_CORE1_PUPD_CCUPD_SHIFT)) & MC_ME_PRTN1_CORE1_PUPD_CCUPD_MASK)
/*! @} */

/*! @name PRTN1_CORE1_STAT - Partition 1 Core 1 Status Register */
/*! @{ */
#define MC_ME_PRTN1_CORE1_STAT_CCS_MASK          (0x1U)
#define MC_ME_PRTN1_CORE1_STAT_CCS_SHIFT         (0U)
#define MC_ME_PRTN1_CORE1_STAT_CCS_WIDTH         (1U)
#define MC_ME_PRTN1_CORE1_STAT_CCS(x)            (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN1_CORE1_STAT_CCS_SHIFT)) & MC_ME_PRTN1_CORE1_STAT_CCS_MASK)
#define MC_ME_PRTN1_CORE1_STAT_WFI_MASK          (0x80000000U)
#define MC_ME_PRTN1_CORE1_STAT_WFI_SHIFT         (31U)
#define MC_ME_PRTN1_CORE1_STAT_WFI_WIDTH         (1U)
#define MC_ME_PRTN1_CORE1_STAT_WFI(x)            (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN1_CORE1_STAT_WFI_SHIFT)) & MC_ME_PRTN1_CORE1_STAT_WFI_MASK)
/*! @} */

/*! @name PRTN1_CORE1_ADDR - Partition 1 Core 1 Address Register */
/*! @{ */
#define MC_ME_PRTN1_CORE1_ADDR_ADDR_MASK         (0xFFFFFFFCU)
#define MC_ME_PRTN1_CORE1_ADDR_ADDR_SHIFT        (2U)
#define MC_ME_PRTN1_CORE1_ADDR_ADDR_WIDTH        (30U)
#define MC_ME_PRTN1_CORE1_ADDR_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN1_CORE1_ADDR_ADDR_SHIFT)) & MC_ME_PRTN1_CORE1_ADDR_ADDR_MASK)
/*! @} */

/*! @name PRTN1_CORE2_PCONF - Partition 1 Core 2 Process Configuration Register */
/*! @{ */
#define MC_ME_PRTN1_CORE2_PCONF_CCE_MASK         (0x1U)
#define MC_ME_PRTN1_CORE2_PCONF_CCE_SHIFT        (0U)
#define MC_ME_PRTN1_CORE2_PCONF_CCE_WIDTH        (1U)
#define MC_ME_PRTN1_CORE2_PCONF_CCE(x)           (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN1_CORE2_PCONF_CCE_SHIFT)) & MC_ME_PRTN1_CORE2_PCONF_CCE_MASK)
/*! @} */

/*! @name PRTN1_CORE2_PUPD - Partition 1 Core 2 Process Update Register */
/*! @{ */
#define MC_ME_PRTN1_CORE2_PUPD_CCUPD_MASK        (0x1U)
#define MC_ME_PRTN1_CORE2_PUPD_CCUPD_SHIFT       (0U)
#define MC_ME_PRTN1_CORE2_PUPD_CCUPD_WIDTH       (1U)
#define MC_ME_PRTN1_CORE2_PUPD_CCUPD(x)          (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN1_CORE2_PUPD_CCUPD_SHIFT)) & MC_ME_PRTN1_CORE2_PUPD_CCUPD_MASK)
/*! @} */

/*! @name PRTN1_CORE2_STAT - Partition 1 Core 2 Status Register */
/*! @{ */
#define MC_ME_PRTN1_CORE2_STAT_CCS_MASK          (0x1U)
#define MC_ME_PRTN1_CORE2_STAT_CCS_SHIFT         (0U)
#define MC_ME_PRTN1_CORE2_STAT_CCS_WIDTH         (1U)
#define MC_ME_PRTN1_CORE2_STAT_CCS(x)            (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN1_CORE2_STAT_CCS_SHIFT)) & MC_ME_PRTN1_CORE2_STAT_CCS_MASK)
#define MC_ME_PRTN1_CORE2_STAT_WFI_MASK          (0x80000000U)
#define MC_ME_PRTN1_CORE2_STAT_WFI_SHIFT         (31U)
#define MC_ME_PRTN1_CORE2_STAT_WFI_WIDTH         (1U)
#define MC_ME_PRTN1_CORE2_STAT_WFI(x)            (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN1_CORE2_STAT_WFI_SHIFT)) & MC_ME_PRTN1_CORE2_STAT_WFI_MASK)
/*! @} */

/*! @name PRTN1_CORE2_ADDR - Partition 1 Core 2 Address Register */
/*! @{ */
#define MC_ME_PRTN1_CORE2_ADDR_ADDR_MASK         (0xFFFFFFFCU)
#define MC_ME_PRTN1_CORE2_ADDR_ADDR_SHIFT        (2U)
#define MC_ME_PRTN1_CORE2_ADDR_ADDR_WIDTH        (30U)
#define MC_ME_PRTN1_CORE2_ADDR_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN1_CORE2_ADDR_ADDR_SHIFT)) & MC_ME_PRTN1_CORE2_ADDR_ADDR_MASK)
/*! @} */

/*! @name PRTN1_CORE3_PCONF - Partition 1 Core 3 Process Configuration Register */
/*! @{ */
#define MC_ME_PRTN1_CORE3_PCONF_CCE_MASK         (0x1U)
#define MC_ME_PRTN1_CORE3_PCONF_CCE_SHIFT        (0U)
#define MC_ME_PRTN1_CORE3_PCONF_CCE_WIDTH        (1U)
#define MC_ME_PRTN1_CORE3_PCONF_CCE(x)           (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN1_CORE3_PCONF_CCE_SHIFT)) & MC_ME_PRTN1_CORE3_PCONF_CCE_MASK)
/*! @} */

/*! @name PRTN1_CORE3_PUPD - Partition 1 Core 3 Process Update Register */
/*! @{ */
#define MC_ME_PRTN1_CORE3_PUPD_CCUPD_MASK        (0x1U)
#define MC_ME_PRTN1_CORE3_PUPD_CCUPD_SHIFT       (0U)
#define MC_ME_PRTN1_CORE3_PUPD_CCUPD_WIDTH       (1U)
#define MC_ME_PRTN1_CORE3_PUPD_CCUPD(x)          (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN1_CORE3_PUPD_CCUPD_SHIFT)) & MC_ME_PRTN1_CORE3_PUPD_CCUPD_MASK)
/*! @} */

/*! @name PRTN1_CORE3_STAT - Partition 1 Core 3 Status Register */
/*! @{ */
#define MC_ME_PRTN1_CORE3_STAT_CCS_MASK          (0x1U)
#define MC_ME_PRTN1_CORE3_STAT_CCS_SHIFT         (0U)
#define MC_ME_PRTN1_CORE3_STAT_CCS_WIDTH         (1U)
#define MC_ME_PRTN1_CORE3_STAT_CCS(x)            (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN1_CORE3_STAT_CCS_SHIFT)) & MC_ME_PRTN1_CORE3_STAT_CCS_MASK)
#define MC_ME_PRTN1_CORE3_STAT_WFI_MASK          (0x80000000U)
#define MC_ME_PRTN1_CORE3_STAT_WFI_SHIFT         (31U)
#define MC_ME_PRTN1_CORE3_STAT_WFI_WIDTH         (1U)
#define MC_ME_PRTN1_CORE3_STAT_WFI(x)            (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN1_CORE3_STAT_WFI_SHIFT)) & MC_ME_PRTN1_CORE3_STAT_WFI_MASK)
/*! @} */

/*! @name PRTN1_CORE3_ADDR - Partition 1 Core 3 Address Register */
/*! @{ */
#define MC_ME_PRTN1_CORE3_ADDR_ADDR_MASK         (0xFFFFFFFCU)
#define MC_ME_PRTN1_CORE3_ADDR_ADDR_SHIFT        (2U)
#define MC_ME_PRTN1_CORE3_ADDR_ADDR_WIDTH        (30U)
#define MC_ME_PRTN1_CORE3_ADDR_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN1_CORE3_ADDR_ADDR_SHIFT)) & MC_ME_PRTN1_CORE3_ADDR_ADDR_MASK)
/*! @} */

/*! @name PRTN2_PCONF - Partition 2 Process Configuration Register */
/*! @{ */
#define MC_ME_PRTN2_PCONF_PCE_MASK               (0x1U)
#define MC_ME_PRTN2_PCONF_PCE_SHIFT              (0U)
#define MC_ME_PRTN2_PCONF_PCE_WIDTH              (1U)
#define MC_ME_PRTN2_PCONF_PCE(x)                 (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_PCONF_PCE_SHIFT)) & MC_ME_PRTN2_PCONF_PCE_MASK)
#define MC_ME_PRTN2_PCONF_OSSE_MASK              (0x4U)
#define MC_ME_PRTN2_PCONF_OSSE_SHIFT             (2U)
#define MC_ME_PRTN2_PCONF_OSSE_WIDTH             (1U)
#define MC_ME_PRTN2_PCONF_OSSE(x)                (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_PCONF_OSSE_SHIFT)) & MC_ME_PRTN2_PCONF_OSSE_MASK)
/*! @} */

/*! @name PRTN2_PUPD - Partition 2 Process Update Register */
/*! @{ */
#define MC_ME_PRTN2_PUPD_PCUD_MASK               (0x1U)
#define MC_ME_PRTN2_PUPD_PCUD_SHIFT              (0U)
#define MC_ME_PRTN2_PUPD_PCUD_WIDTH              (1U)
#define MC_ME_PRTN2_PUPD_PCUD(x)                 (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_PUPD_PCUD_SHIFT)) & MC_ME_PRTN2_PUPD_PCUD_MASK)
#define MC_ME_PRTN2_PUPD_OSSUD_MASK              (0x4U)
#define MC_ME_PRTN2_PUPD_OSSUD_SHIFT             (2U)
#define MC_ME_PRTN2_PUPD_OSSUD_WIDTH             (1U)
#define MC_ME_PRTN2_PUPD_OSSUD(x)                (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_PUPD_OSSUD_SHIFT)) & MC_ME_PRTN2_PUPD_OSSUD_MASK)
/*! @} */

/*! @name PRTN2_STAT - Partition 2 Status Register */
/*! @{ */
#define MC_ME_PRTN2_STAT_PCS_MASK                (0x1U)
#define MC_ME_PRTN2_STAT_PCS_SHIFT               (0U)
#define MC_ME_PRTN2_STAT_PCS_WIDTH               (1U)
#define MC_ME_PRTN2_STAT_PCS(x)                  (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_STAT_PCS_SHIFT)) & MC_ME_PRTN2_STAT_PCS_MASK)
#define MC_ME_PRTN2_STAT_OSSS_MASK               (0x4U)
#define MC_ME_PRTN2_STAT_OSSS_SHIFT              (2U)
#define MC_ME_PRTN2_STAT_OSSS_WIDTH              (1U)
#define MC_ME_PRTN2_STAT_OSSS(x)                 (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_STAT_OSSS_SHIFT)) & MC_ME_PRTN2_STAT_OSSS_MASK)
/*! @} */

/*! @name PRTN2_COFB0_STAT - Partition 2 COFB Set 0 Clock Status Register */
/*! @{ */
#define MC_ME_PRTN2_COFB0_STAT_BLOCK0_MASK       (0x1U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK0_SHIFT      (0U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK0_WIDTH      (1U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK0(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_COFB0_STAT_BLOCK0_SHIFT)) & MC_ME_PRTN2_COFB0_STAT_BLOCK0_MASK)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK1_MASK       (0x2U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK1_SHIFT      (1U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK1_WIDTH      (1U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK1(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_COFB0_STAT_BLOCK1_SHIFT)) & MC_ME_PRTN2_COFB0_STAT_BLOCK1_MASK)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK2_MASK       (0x4U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK2_SHIFT      (2U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK2_WIDTH      (1U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK2(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_COFB0_STAT_BLOCK2_SHIFT)) & MC_ME_PRTN2_COFB0_STAT_BLOCK2_MASK)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK3_MASK       (0x8U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK3_SHIFT      (3U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK3_WIDTH      (1U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK3(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_COFB0_STAT_BLOCK3_SHIFT)) & MC_ME_PRTN2_COFB0_STAT_BLOCK3_MASK)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK4_MASK       (0x10U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK4_SHIFT      (4U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK4_WIDTH      (1U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK4(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_COFB0_STAT_BLOCK4_SHIFT)) & MC_ME_PRTN2_COFB0_STAT_BLOCK4_MASK)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK5_MASK       (0x20U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK5_SHIFT      (5U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK5_WIDTH      (1U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK5(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_COFB0_STAT_BLOCK5_SHIFT)) & MC_ME_PRTN2_COFB0_STAT_BLOCK5_MASK)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK6_MASK       (0x40U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK6_SHIFT      (6U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK6_WIDTH      (1U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK6(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_COFB0_STAT_BLOCK6_SHIFT)) & MC_ME_PRTN2_COFB0_STAT_BLOCK6_MASK)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK7_MASK       (0x80U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK7_SHIFT      (7U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK7_WIDTH      (1U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK7(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_COFB0_STAT_BLOCK7_SHIFT)) & MC_ME_PRTN2_COFB0_STAT_BLOCK7_MASK)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK8_MASK       (0x100U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK8_SHIFT      (8U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK8_WIDTH      (1U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK8(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_COFB0_STAT_BLOCK8_SHIFT)) & MC_ME_PRTN2_COFB0_STAT_BLOCK8_MASK)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK9_MASK       (0x200U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK9_SHIFT      (9U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK9_WIDTH      (1U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK9(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_COFB0_STAT_BLOCK9_SHIFT)) & MC_ME_PRTN2_COFB0_STAT_BLOCK9_MASK)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK10_MASK      (0x400U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK10_SHIFT     (10U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK10_WIDTH     (1U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK10(x)        (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_COFB0_STAT_BLOCK10_SHIFT)) & MC_ME_PRTN2_COFB0_STAT_BLOCK10_MASK)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK11_MASK      (0x800U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK11_SHIFT     (11U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK11_WIDTH     (1U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK11(x)        (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_COFB0_STAT_BLOCK11_SHIFT)) & MC_ME_PRTN2_COFB0_STAT_BLOCK11_MASK)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK12_MASK      (0x1000U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK12_SHIFT     (12U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK12_WIDTH     (1U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK12(x)        (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_COFB0_STAT_BLOCK12_SHIFT)) & MC_ME_PRTN2_COFB0_STAT_BLOCK12_MASK)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK13_MASK      (0x2000U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK13_SHIFT     (13U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK13_WIDTH     (1U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK13(x)        (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_COFB0_STAT_BLOCK13_SHIFT)) & MC_ME_PRTN2_COFB0_STAT_BLOCK13_MASK)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK14_MASK      (0x4000U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK14_SHIFT     (14U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK14_WIDTH     (1U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK14(x)        (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_COFB0_STAT_BLOCK14_SHIFT)) & MC_ME_PRTN2_COFB0_STAT_BLOCK14_MASK)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK15_MASK      (0x8000U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK15_SHIFT     (15U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK15_WIDTH     (1U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK15(x)        (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_COFB0_STAT_BLOCK15_SHIFT)) & MC_ME_PRTN2_COFB0_STAT_BLOCK15_MASK)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK16_MASK      (0x10000U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK16_SHIFT     (16U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK16_WIDTH     (1U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK16(x)        (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_COFB0_STAT_BLOCK16_SHIFT)) & MC_ME_PRTN2_COFB0_STAT_BLOCK16_MASK)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK17_MASK      (0x20000U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK17_SHIFT     (17U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK17_WIDTH     (1U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK17(x)        (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_COFB0_STAT_BLOCK17_SHIFT)) & MC_ME_PRTN2_COFB0_STAT_BLOCK17_MASK)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK18_MASK      (0x40000U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK18_SHIFT     (18U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK18_WIDTH     (1U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK18(x)        (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_COFB0_STAT_BLOCK18_SHIFT)) & MC_ME_PRTN2_COFB0_STAT_BLOCK18_MASK)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK19_MASK      (0x80000U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK19_SHIFT     (19U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK19_WIDTH     (1U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK19(x)        (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_COFB0_STAT_BLOCK19_SHIFT)) & MC_ME_PRTN2_COFB0_STAT_BLOCK19_MASK)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK20_MASK      (0x100000U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK20_SHIFT     (20U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK20_WIDTH     (1U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK20(x)        (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_COFB0_STAT_BLOCK20_SHIFT)) & MC_ME_PRTN2_COFB0_STAT_BLOCK20_MASK)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK21_MASK      (0x200000U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK21_SHIFT     (21U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK21_WIDTH     (1U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK21(x)        (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_COFB0_STAT_BLOCK21_SHIFT)) & MC_ME_PRTN2_COFB0_STAT_BLOCK21_MASK)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK22_MASK      (0x400000U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK22_SHIFT     (22U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK22_WIDTH     (1U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK22(x)        (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_COFB0_STAT_BLOCK22_SHIFT)) & MC_ME_PRTN2_COFB0_STAT_BLOCK22_MASK)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK23_MASK      (0x800000U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK23_SHIFT     (23U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK23_WIDTH     (1U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK23(x)        (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_COFB0_STAT_BLOCK23_SHIFT)) & MC_ME_PRTN2_COFB0_STAT_BLOCK23_MASK)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK24_MASK      (0x1000000U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK24_SHIFT     (24U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK24_WIDTH     (1U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK24(x)        (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_COFB0_STAT_BLOCK24_SHIFT)) & MC_ME_PRTN2_COFB0_STAT_BLOCK24_MASK)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK25_MASK      (0x2000000U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK25_SHIFT     (25U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK25_WIDTH     (1U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK25(x)        (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_COFB0_STAT_BLOCK25_SHIFT)) & MC_ME_PRTN2_COFB0_STAT_BLOCK25_MASK)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK26_MASK      (0x4000000U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK26_SHIFT     (26U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK26_WIDTH     (1U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK26(x)        (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_COFB0_STAT_BLOCK26_SHIFT)) & MC_ME_PRTN2_COFB0_STAT_BLOCK26_MASK)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK27_MASK      (0x8000000U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK27_SHIFT     (27U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK27_WIDTH     (1U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK27(x)        (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_COFB0_STAT_BLOCK27_SHIFT)) & MC_ME_PRTN2_COFB0_STAT_BLOCK27_MASK)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK28_MASK      (0x10000000U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK28_SHIFT     (28U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK28_WIDTH     (1U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK28(x)        (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_COFB0_STAT_BLOCK28_SHIFT)) & MC_ME_PRTN2_COFB0_STAT_BLOCK28_MASK)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK29_MASK      (0x20000000U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK29_SHIFT     (29U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK29_WIDTH     (1U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK29(x)        (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_COFB0_STAT_BLOCK29_SHIFT)) & MC_ME_PRTN2_COFB0_STAT_BLOCK29_MASK)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK30_MASK      (0x40000000U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK30_SHIFT     (30U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK30_WIDTH     (1U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK30(x)        (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_COFB0_STAT_BLOCK30_SHIFT)) & MC_ME_PRTN2_COFB0_STAT_BLOCK30_MASK)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK31_MASK      (0x80000000U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK31_SHIFT     (31U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK31_WIDTH     (1U)
#define MC_ME_PRTN2_COFB0_STAT_BLOCK31(x)        (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_COFB0_STAT_BLOCK31_SHIFT)) & MC_ME_PRTN2_COFB0_STAT_BLOCK31_MASK)
/*! @} */

/*! @name PRTN2_COFB0_CLKEN - Partition 2 COFB Set 0 Clock Enable Register */
/*! @{ */
#define MC_ME_PRTN2_COFB0_CLKEN_REQ0_MASK        (0x1U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ0_SHIFT       (0U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ0_WIDTH       (1U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ0(x)          (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_COFB0_CLKEN_REQ0_SHIFT)) & MC_ME_PRTN2_COFB0_CLKEN_REQ0_MASK)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ1_MASK        (0x2U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ1_SHIFT       (1U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ1_WIDTH       (1U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ1(x)          (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_COFB0_CLKEN_REQ1_SHIFT)) & MC_ME_PRTN2_COFB0_CLKEN_REQ1_MASK)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ2_MASK        (0x4U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ2_SHIFT       (2U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ2_WIDTH       (1U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ2(x)          (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_COFB0_CLKEN_REQ2_SHIFT)) & MC_ME_PRTN2_COFB0_CLKEN_REQ2_MASK)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ3_MASK        (0x8U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ3_SHIFT       (3U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ3_WIDTH       (1U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ3(x)          (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_COFB0_CLKEN_REQ3_SHIFT)) & MC_ME_PRTN2_COFB0_CLKEN_REQ3_MASK)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ4_MASK        (0x10U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ4_SHIFT       (4U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ4_WIDTH       (1U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ4(x)          (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_COFB0_CLKEN_REQ4_SHIFT)) & MC_ME_PRTN2_COFB0_CLKEN_REQ4_MASK)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ5_MASK        (0x20U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ5_SHIFT       (5U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ5_WIDTH       (1U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ5(x)          (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_COFB0_CLKEN_REQ5_SHIFT)) & MC_ME_PRTN2_COFB0_CLKEN_REQ5_MASK)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ6_MASK        (0x40U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ6_SHIFT       (6U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ6_WIDTH       (1U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ6(x)          (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_COFB0_CLKEN_REQ6_SHIFT)) & MC_ME_PRTN2_COFB0_CLKEN_REQ6_MASK)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ7_MASK        (0x80U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ7_SHIFT       (7U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ7_WIDTH       (1U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ7(x)          (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_COFB0_CLKEN_REQ7_SHIFT)) & MC_ME_PRTN2_COFB0_CLKEN_REQ7_MASK)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ8_MASK        (0x100U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ8_SHIFT       (8U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ8_WIDTH       (1U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ8(x)          (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_COFB0_CLKEN_REQ8_SHIFT)) & MC_ME_PRTN2_COFB0_CLKEN_REQ8_MASK)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ9_MASK        (0x200U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ9_SHIFT       (9U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ9_WIDTH       (1U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ9(x)          (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_COFB0_CLKEN_REQ9_SHIFT)) & MC_ME_PRTN2_COFB0_CLKEN_REQ9_MASK)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ10_MASK       (0x400U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ10_SHIFT      (10U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ10_WIDTH      (1U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ10(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_COFB0_CLKEN_REQ10_SHIFT)) & MC_ME_PRTN2_COFB0_CLKEN_REQ10_MASK)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ11_MASK       (0x800U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ11_SHIFT      (11U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ11_WIDTH      (1U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ11(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_COFB0_CLKEN_REQ11_SHIFT)) & MC_ME_PRTN2_COFB0_CLKEN_REQ11_MASK)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ12_MASK       (0x1000U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ12_SHIFT      (12U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ12_WIDTH      (1U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ12(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_COFB0_CLKEN_REQ12_SHIFT)) & MC_ME_PRTN2_COFB0_CLKEN_REQ12_MASK)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ13_MASK       (0x2000U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ13_SHIFT      (13U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ13_WIDTH      (1U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ13(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_COFB0_CLKEN_REQ13_SHIFT)) & MC_ME_PRTN2_COFB0_CLKEN_REQ13_MASK)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ14_MASK       (0x4000U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ14_SHIFT      (14U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ14_WIDTH      (1U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ14(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_COFB0_CLKEN_REQ14_SHIFT)) & MC_ME_PRTN2_COFB0_CLKEN_REQ14_MASK)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ15_MASK       (0x8000U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ15_SHIFT      (15U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ15_WIDTH      (1U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ15(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_COFB0_CLKEN_REQ15_SHIFT)) & MC_ME_PRTN2_COFB0_CLKEN_REQ15_MASK)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ16_MASK       (0x10000U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ16_SHIFT      (16U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ16_WIDTH      (1U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ16(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_COFB0_CLKEN_REQ16_SHIFT)) & MC_ME_PRTN2_COFB0_CLKEN_REQ16_MASK)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ17_MASK       (0x20000U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ17_SHIFT      (17U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ17_WIDTH      (1U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ17(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_COFB0_CLKEN_REQ17_SHIFT)) & MC_ME_PRTN2_COFB0_CLKEN_REQ17_MASK)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ18_MASK       (0x40000U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ18_SHIFT      (18U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ18_WIDTH      (1U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ18(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_COFB0_CLKEN_REQ18_SHIFT)) & MC_ME_PRTN2_COFB0_CLKEN_REQ18_MASK)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ19_MASK       (0x80000U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ19_SHIFT      (19U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ19_WIDTH      (1U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ19(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_COFB0_CLKEN_REQ19_SHIFT)) & MC_ME_PRTN2_COFB0_CLKEN_REQ19_MASK)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ20_MASK       (0x100000U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ20_SHIFT      (20U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ20_WIDTH      (1U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ20(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_COFB0_CLKEN_REQ20_SHIFT)) & MC_ME_PRTN2_COFB0_CLKEN_REQ20_MASK)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ21_MASK       (0x200000U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ21_SHIFT      (21U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ21_WIDTH      (1U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ21(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_COFB0_CLKEN_REQ21_SHIFT)) & MC_ME_PRTN2_COFB0_CLKEN_REQ21_MASK)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ22_MASK       (0x400000U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ22_SHIFT      (22U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ22_WIDTH      (1U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ22(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_COFB0_CLKEN_REQ22_SHIFT)) & MC_ME_PRTN2_COFB0_CLKEN_REQ22_MASK)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ23_MASK       (0x800000U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ23_SHIFT      (23U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ23_WIDTH      (1U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ23(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_COFB0_CLKEN_REQ23_SHIFT)) & MC_ME_PRTN2_COFB0_CLKEN_REQ23_MASK)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ24_MASK       (0x1000000U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ24_SHIFT      (24U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ24_WIDTH      (1U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ24(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_COFB0_CLKEN_REQ24_SHIFT)) & MC_ME_PRTN2_COFB0_CLKEN_REQ24_MASK)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ25_MASK       (0x2000000U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ25_SHIFT      (25U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ25_WIDTH      (1U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ25(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_COFB0_CLKEN_REQ25_SHIFT)) & MC_ME_PRTN2_COFB0_CLKEN_REQ25_MASK)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ26_MASK       (0x4000000U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ26_SHIFT      (26U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ26_WIDTH      (1U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ26(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_COFB0_CLKEN_REQ26_SHIFT)) & MC_ME_PRTN2_COFB0_CLKEN_REQ26_MASK)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ27_MASK       (0x8000000U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ27_SHIFT      (27U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ27_WIDTH      (1U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ27(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_COFB0_CLKEN_REQ27_SHIFT)) & MC_ME_PRTN2_COFB0_CLKEN_REQ27_MASK)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ28_MASK       (0x10000000U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ28_SHIFT      (28U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ28_WIDTH      (1U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ28(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_COFB0_CLKEN_REQ28_SHIFT)) & MC_ME_PRTN2_COFB0_CLKEN_REQ28_MASK)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ29_MASK       (0x20000000U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ29_SHIFT      (29U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ29_WIDTH      (1U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ29(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_COFB0_CLKEN_REQ29_SHIFT)) & MC_ME_PRTN2_COFB0_CLKEN_REQ29_MASK)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ30_MASK       (0x40000000U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ30_SHIFT      (30U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ30_WIDTH      (1U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ30(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_COFB0_CLKEN_REQ30_SHIFT)) & MC_ME_PRTN2_COFB0_CLKEN_REQ30_MASK)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ31_MASK       (0x80000000U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ31_SHIFT      (31U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ31_WIDTH      (1U)
#define MC_ME_PRTN2_COFB0_CLKEN_REQ31(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN2_COFB0_CLKEN_REQ31_SHIFT)) & MC_ME_PRTN2_COFB0_CLKEN_REQ31_MASK)
/*! @} */

/*! @name PRTN3_PCONF - Partition 3 Process Configuration Register */
/*! @{ */
#define MC_ME_PRTN3_PCONF_PCE_MASK               (0x1U)
#define MC_ME_PRTN3_PCONF_PCE_SHIFT              (0U)
#define MC_ME_PRTN3_PCONF_PCE_WIDTH              (1U)
#define MC_ME_PRTN3_PCONF_PCE(x)                 (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_PCONF_PCE_SHIFT)) & MC_ME_PRTN3_PCONF_PCE_MASK)
#define MC_ME_PRTN3_PCONF_OSSE_MASK              (0x4U)
#define MC_ME_PRTN3_PCONF_OSSE_SHIFT             (2U)
#define MC_ME_PRTN3_PCONF_OSSE_WIDTH             (1U)
#define MC_ME_PRTN3_PCONF_OSSE(x)                (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_PCONF_OSSE_SHIFT)) & MC_ME_PRTN3_PCONF_OSSE_MASK)
/*! @} */

/*! @name PRTN3_PUPD - Partition 3 Process Update Register */
/*! @{ */
#define MC_ME_PRTN3_PUPD_PCUD_MASK               (0x1U)
#define MC_ME_PRTN3_PUPD_PCUD_SHIFT              (0U)
#define MC_ME_PRTN3_PUPD_PCUD_WIDTH              (1U)
#define MC_ME_PRTN3_PUPD_PCUD(x)                 (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_PUPD_PCUD_SHIFT)) & MC_ME_PRTN3_PUPD_PCUD_MASK)
#define MC_ME_PRTN3_PUPD_OSSUD_MASK              (0x4U)
#define MC_ME_PRTN3_PUPD_OSSUD_SHIFT             (2U)
#define MC_ME_PRTN3_PUPD_OSSUD_WIDTH             (1U)
#define MC_ME_PRTN3_PUPD_OSSUD(x)                (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_PUPD_OSSUD_SHIFT)) & MC_ME_PRTN3_PUPD_OSSUD_MASK)
/*! @} */

/*! @name PRTN3_STAT - Partition 3 Status Register */
/*! @{ */
#define MC_ME_PRTN3_STAT_PCS_MASK                (0x1U)
#define MC_ME_PRTN3_STAT_PCS_SHIFT               (0U)
#define MC_ME_PRTN3_STAT_PCS_WIDTH               (1U)
#define MC_ME_PRTN3_STAT_PCS(x)                  (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_STAT_PCS_SHIFT)) & MC_ME_PRTN3_STAT_PCS_MASK)
#define MC_ME_PRTN3_STAT_OSSS_MASK               (0x4U)
#define MC_ME_PRTN3_STAT_OSSS_SHIFT              (2U)
#define MC_ME_PRTN3_STAT_OSSS_WIDTH              (1U)
#define MC_ME_PRTN3_STAT_OSSS(x)                 (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_STAT_OSSS_SHIFT)) & MC_ME_PRTN3_STAT_OSSS_MASK)
/*! @} */

/*! @name PRTN3_COFB0_STAT - Partition 3 COFB Set 0 Clock Status Register */
/*! @{ */
#define MC_ME_PRTN3_COFB0_STAT_BLOCK0_MASK       (0x1U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK0_SHIFT      (0U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK0_WIDTH      (1U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK0(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_COFB0_STAT_BLOCK0_SHIFT)) & MC_ME_PRTN3_COFB0_STAT_BLOCK0_MASK)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK1_MASK       (0x2U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK1_SHIFT      (1U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK1_WIDTH      (1U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK1(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_COFB0_STAT_BLOCK1_SHIFT)) & MC_ME_PRTN3_COFB0_STAT_BLOCK1_MASK)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK2_MASK       (0x4U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK2_SHIFT      (2U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK2_WIDTH      (1U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK2(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_COFB0_STAT_BLOCK2_SHIFT)) & MC_ME_PRTN3_COFB0_STAT_BLOCK2_MASK)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK3_MASK       (0x8U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK3_SHIFT      (3U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK3_WIDTH      (1U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK3(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_COFB0_STAT_BLOCK3_SHIFT)) & MC_ME_PRTN3_COFB0_STAT_BLOCK3_MASK)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK4_MASK       (0x10U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK4_SHIFT      (4U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK4_WIDTH      (1U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK4(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_COFB0_STAT_BLOCK4_SHIFT)) & MC_ME_PRTN3_COFB0_STAT_BLOCK4_MASK)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK5_MASK       (0x20U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK5_SHIFT      (5U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK5_WIDTH      (1U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK5(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_COFB0_STAT_BLOCK5_SHIFT)) & MC_ME_PRTN3_COFB0_STAT_BLOCK5_MASK)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK6_MASK       (0x40U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK6_SHIFT      (6U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK6_WIDTH      (1U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK6(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_COFB0_STAT_BLOCK6_SHIFT)) & MC_ME_PRTN3_COFB0_STAT_BLOCK6_MASK)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK7_MASK       (0x80U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK7_SHIFT      (7U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK7_WIDTH      (1U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK7(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_COFB0_STAT_BLOCK7_SHIFT)) & MC_ME_PRTN3_COFB0_STAT_BLOCK7_MASK)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK8_MASK       (0x100U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK8_SHIFT      (8U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK8_WIDTH      (1U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK8(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_COFB0_STAT_BLOCK8_SHIFT)) & MC_ME_PRTN3_COFB0_STAT_BLOCK8_MASK)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK9_MASK       (0x200U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK9_SHIFT      (9U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK9_WIDTH      (1U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK9(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_COFB0_STAT_BLOCK9_SHIFT)) & MC_ME_PRTN3_COFB0_STAT_BLOCK9_MASK)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK10_MASK      (0x400U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK10_SHIFT     (10U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK10_WIDTH     (1U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK10(x)        (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_COFB0_STAT_BLOCK10_SHIFT)) & MC_ME_PRTN3_COFB0_STAT_BLOCK10_MASK)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK11_MASK      (0x800U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK11_SHIFT     (11U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK11_WIDTH     (1U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK11(x)        (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_COFB0_STAT_BLOCK11_SHIFT)) & MC_ME_PRTN3_COFB0_STAT_BLOCK11_MASK)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK12_MASK      (0x1000U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK12_SHIFT     (12U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK12_WIDTH     (1U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK12(x)        (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_COFB0_STAT_BLOCK12_SHIFT)) & MC_ME_PRTN3_COFB0_STAT_BLOCK12_MASK)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK13_MASK      (0x2000U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK13_SHIFT     (13U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK13_WIDTH     (1U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK13(x)        (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_COFB0_STAT_BLOCK13_SHIFT)) & MC_ME_PRTN3_COFB0_STAT_BLOCK13_MASK)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK14_MASK      (0x4000U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK14_SHIFT     (14U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK14_WIDTH     (1U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK14(x)        (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_COFB0_STAT_BLOCK14_SHIFT)) & MC_ME_PRTN3_COFB0_STAT_BLOCK14_MASK)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK15_MASK      (0x8000U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK15_SHIFT     (15U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK15_WIDTH     (1U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK15(x)        (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_COFB0_STAT_BLOCK15_SHIFT)) & MC_ME_PRTN3_COFB0_STAT_BLOCK15_MASK)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK16_MASK      (0x10000U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK16_SHIFT     (16U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK16_WIDTH     (1U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK16(x)        (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_COFB0_STAT_BLOCK16_SHIFT)) & MC_ME_PRTN3_COFB0_STAT_BLOCK16_MASK)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK17_MASK      (0x20000U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK17_SHIFT     (17U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK17_WIDTH     (1U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK17(x)        (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_COFB0_STAT_BLOCK17_SHIFT)) & MC_ME_PRTN3_COFB0_STAT_BLOCK17_MASK)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK18_MASK      (0x40000U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK18_SHIFT     (18U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK18_WIDTH     (1U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK18(x)        (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_COFB0_STAT_BLOCK18_SHIFT)) & MC_ME_PRTN3_COFB0_STAT_BLOCK18_MASK)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK19_MASK      (0x80000U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK19_SHIFT     (19U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK19_WIDTH     (1U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK19(x)        (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_COFB0_STAT_BLOCK19_SHIFT)) & MC_ME_PRTN3_COFB0_STAT_BLOCK19_MASK)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK20_MASK      (0x100000U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK20_SHIFT     (20U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK20_WIDTH     (1U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK20(x)        (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_COFB0_STAT_BLOCK20_SHIFT)) & MC_ME_PRTN3_COFB0_STAT_BLOCK20_MASK)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK21_MASK      (0x200000U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK21_SHIFT     (21U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK21_WIDTH     (1U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK21(x)        (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_COFB0_STAT_BLOCK21_SHIFT)) & MC_ME_PRTN3_COFB0_STAT_BLOCK21_MASK)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK22_MASK      (0x400000U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK22_SHIFT     (22U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK22_WIDTH     (1U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK22(x)        (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_COFB0_STAT_BLOCK22_SHIFT)) & MC_ME_PRTN3_COFB0_STAT_BLOCK22_MASK)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK23_MASK      (0x800000U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK23_SHIFT     (23U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK23_WIDTH     (1U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK23(x)        (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_COFB0_STAT_BLOCK23_SHIFT)) & MC_ME_PRTN3_COFB0_STAT_BLOCK23_MASK)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK24_MASK      (0x1000000U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK24_SHIFT     (24U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK24_WIDTH     (1U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK24(x)        (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_COFB0_STAT_BLOCK24_SHIFT)) & MC_ME_PRTN3_COFB0_STAT_BLOCK24_MASK)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK25_MASK      (0x2000000U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK25_SHIFT     (25U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK25_WIDTH     (1U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK25(x)        (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_COFB0_STAT_BLOCK25_SHIFT)) & MC_ME_PRTN3_COFB0_STAT_BLOCK25_MASK)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK26_MASK      (0x4000000U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK26_SHIFT     (26U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK26_WIDTH     (1U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK26(x)        (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_COFB0_STAT_BLOCK26_SHIFT)) & MC_ME_PRTN3_COFB0_STAT_BLOCK26_MASK)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK27_MASK      (0x8000000U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK27_SHIFT     (27U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK27_WIDTH     (1U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK27(x)        (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_COFB0_STAT_BLOCK27_SHIFT)) & MC_ME_PRTN3_COFB0_STAT_BLOCK27_MASK)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK28_MASK      (0x10000000U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK28_SHIFT     (28U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK28_WIDTH     (1U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK28(x)        (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_COFB0_STAT_BLOCK28_SHIFT)) & MC_ME_PRTN3_COFB0_STAT_BLOCK28_MASK)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK29_MASK      (0x20000000U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK29_SHIFT     (29U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK29_WIDTH     (1U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK29(x)        (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_COFB0_STAT_BLOCK29_SHIFT)) & MC_ME_PRTN3_COFB0_STAT_BLOCK29_MASK)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK30_MASK      (0x40000000U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK30_SHIFT     (30U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK30_WIDTH     (1U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK30(x)        (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_COFB0_STAT_BLOCK30_SHIFT)) & MC_ME_PRTN3_COFB0_STAT_BLOCK30_MASK)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK31_MASK      (0x80000000U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK31_SHIFT     (31U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK31_WIDTH     (1U)
#define MC_ME_PRTN3_COFB0_STAT_BLOCK31(x)        (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_COFB0_STAT_BLOCK31_SHIFT)) & MC_ME_PRTN3_COFB0_STAT_BLOCK31_MASK)
/*! @} */

/*! @name PRTN3_COFB0_CLKEN - Partition 3 COFB Set 0 Clock Enable Register */
/*! @{ */
#define MC_ME_PRTN3_COFB0_CLKEN_REQ0_MASK        (0x1U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ0_SHIFT       (0U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ0_WIDTH       (1U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ0(x)          (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_COFB0_CLKEN_REQ0_SHIFT)) & MC_ME_PRTN3_COFB0_CLKEN_REQ0_MASK)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ1_MASK        (0x2U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ1_SHIFT       (1U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ1_WIDTH       (1U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ1(x)          (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_COFB0_CLKEN_REQ1_SHIFT)) & MC_ME_PRTN3_COFB0_CLKEN_REQ1_MASK)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ2_MASK        (0x4U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ2_SHIFT       (2U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ2_WIDTH       (1U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ2(x)          (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_COFB0_CLKEN_REQ2_SHIFT)) & MC_ME_PRTN3_COFB0_CLKEN_REQ2_MASK)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ3_MASK        (0x8U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ3_SHIFT       (3U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ3_WIDTH       (1U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ3(x)          (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_COFB0_CLKEN_REQ3_SHIFT)) & MC_ME_PRTN3_COFB0_CLKEN_REQ3_MASK)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ4_MASK        (0x10U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ4_SHIFT       (4U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ4_WIDTH       (1U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ4(x)          (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_COFB0_CLKEN_REQ4_SHIFT)) & MC_ME_PRTN3_COFB0_CLKEN_REQ4_MASK)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ5_MASK        (0x20U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ5_SHIFT       (5U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ5_WIDTH       (1U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ5(x)          (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_COFB0_CLKEN_REQ5_SHIFT)) & MC_ME_PRTN3_COFB0_CLKEN_REQ5_MASK)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ6_MASK        (0x40U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ6_SHIFT       (6U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ6_WIDTH       (1U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ6(x)          (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_COFB0_CLKEN_REQ6_SHIFT)) & MC_ME_PRTN3_COFB0_CLKEN_REQ6_MASK)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ7_MASK        (0x80U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ7_SHIFT       (7U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ7_WIDTH       (1U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ7(x)          (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_COFB0_CLKEN_REQ7_SHIFT)) & MC_ME_PRTN3_COFB0_CLKEN_REQ7_MASK)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ8_MASK        (0x100U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ8_SHIFT       (8U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ8_WIDTH       (1U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ8(x)          (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_COFB0_CLKEN_REQ8_SHIFT)) & MC_ME_PRTN3_COFB0_CLKEN_REQ8_MASK)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ9_MASK        (0x200U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ9_SHIFT       (9U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ9_WIDTH       (1U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ9(x)          (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_COFB0_CLKEN_REQ9_SHIFT)) & MC_ME_PRTN3_COFB0_CLKEN_REQ9_MASK)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ10_MASK       (0x400U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ10_SHIFT      (10U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ10_WIDTH      (1U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ10(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_COFB0_CLKEN_REQ10_SHIFT)) & MC_ME_PRTN3_COFB0_CLKEN_REQ10_MASK)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ11_MASK       (0x800U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ11_SHIFT      (11U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ11_WIDTH      (1U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ11(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_COFB0_CLKEN_REQ11_SHIFT)) & MC_ME_PRTN3_COFB0_CLKEN_REQ11_MASK)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ12_MASK       (0x1000U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ12_SHIFT      (12U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ12_WIDTH      (1U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ12(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_COFB0_CLKEN_REQ12_SHIFT)) & MC_ME_PRTN3_COFB0_CLKEN_REQ12_MASK)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ13_MASK       (0x2000U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ13_SHIFT      (13U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ13_WIDTH      (1U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ13(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_COFB0_CLKEN_REQ13_SHIFT)) & MC_ME_PRTN3_COFB0_CLKEN_REQ13_MASK)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ14_MASK       (0x4000U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ14_SHIFT      (14U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ14_WIDTH      (1U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ14(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_COFB0_CLKEN_REQ14_SHIFT)) & MC_ME_PRTN3_COFB0_CLKEN_REQ14_MASK)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ15_MASK       (0x8000U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ15_SHIFT      (15U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ15_WIDTH      (1U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ15(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_COFB0_CLKEN_REQ15_SHIFT)) & MC_ME_PRTN3_COFB0_CLKEN_REQ15_MASK)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ16_MASK       (0x10000U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ16_SHIFT      (16U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ16_WIDTH      (1U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ16(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_COFB0_CLKEN_REQ16_SHIFT)) & MC_ME_PRTN3_COFB0_CLKEN_REQ16_MASK)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ17_MASK       (0x20000U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ17_SHIFT      (17U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ17_WIDTH      (1U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ17(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_COFB0_CLKEN_REQ17_SHIFT)) & MC_ME_PRTN3_COFB0_CLKEN_REQ17_MASK)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ18_MASK       (0x40000U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ18_SHIFT      (18U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ18_WIDTH      (1U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ18(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_COFB0_CLKEN_REQ18_SHIFT)) & MC_ME_PRTN3_COFB0_CLKEN_REQ18_MASK)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ19_MASK       (0x80000U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ19_SHIFT      (19U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ19_WIDTH      (1U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ19(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_COFB0_CLKEN_REQ19_SHIFT)) & MC_ME_PRTN3_COFB0_CLKEN_REQ19_MASK)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ20_MASK       (0x100000U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ20_SHIFT      (20U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ20_WIDTH      (1U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ20(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_COFB0_CLKEN_REQ20_SHIFT)) & MC_ME_PRTN3_COFB0_CLKEN_REQ20_MASK)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ21_MASK       (0x200000U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ21_SHIFT      (21U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ21_WIDTH      (1U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ21(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_COFB0_CLKEN_REQ21_SHIFT)) & MC_ME_PRTN3_COFB0_CLKEN_REQ21_MASK)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ22_MASK       (0x400000U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ22_SHIFT      (22U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ22_WIDTH      (1U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ22(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_COFB0_CLKEN_REQ22_SHIFT)) & MC_ME_PRTN3_COFB0_CLKEN_REQ22_MASK)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ23_MASK       (0x800000U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ23_SHIFT      (23U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ23_WIDTH      (1U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ23(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_COFB0_CLKEN_REQ23_SHIFT)) & MC_ME_PRTN3_COFB0_CLKEN_REQ23_MASK)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ24_MASK       (0x1000000U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ24_SHIFT      (24U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ24_WIDTH      (1U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ24(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_COFB0_CLKEN_REQ24_SHIFT)) & MC_ME_PRTN3_COFB0_CLKEN_REQ24_MASK)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ25_MASK       (0x2000000U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ25_SHIFT      (25U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ25_WIDTH      (1U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ25(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_COFB0_CLKEN_REQ25_SHIFT)) & MC_ME_PRTN3_COFB0_CLKEN_REQ25_MASK)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ26_MASK       (0x4000000U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ26_SHIFT      (26U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ26_WIDTH      (1U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ26(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_COFB0_CLKEN_REQ26_SHIFT)) & MC_ME_PRTN3_COFB0_CLKEN_REQ26_MASK)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ27_MASK       (0x8000000U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ27_SHIFT      (27U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ27_WIDTH      (1U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ27(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_COFB0_CLKEN_REQ27_SHIFT)) & MC_ME_PRTN3_COFB0_CLKEN_REQ27_MASK)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ28_MASK       (0x10000000U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ28_SHIFT      (28U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ28_WIDTH      (1U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ28(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_COFB0_CLKEN_REQ28_SHIFT)) & MC_ME_PRTN3_COFB0_CLKEN_REQ28_MASK)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ29_MASK       (0x20000000U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ29_SHIFT      (29U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ29_WIDTH      (1U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ29(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_COFB0_CLKEN_REQ29_SHIFT)) & MC_ME_PRTN3_COFB0_CLKEN_REQ29_MASK)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ30_MASK       (0x40000000U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ30_SHIFT      (30U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ30_WIDTH      (1U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ30(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_COFB0_CLKEN_REQ30_SHIFT)) & MC_ME_PRTN3_COFB0_CLKEN_REQ30_MASK)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ31_MASK       (0x80000000U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ31_SHIFT      (31U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ31_WIDTH      (1U)
#define MC_ME_PRTN3_COFB0_CLKEN_REQ31(x)         (((uint32_t)(((uint32_t)(x)) << MC_ME_PRTN3_COFB0_CLKEN_REQ31_SHIFT)) & MC_ME_PRTN3_COFB0_CLKEN_REQ31_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group MC_ME_Register_Masks */


/*!
 * @}
 */ /* end of group MC_ME_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- MC_RGM Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup MC_RGM_Peripheral_Access_Layer MC_RGM Peripheral Access Layer
 * @{
 */

/** MC_RGM - Size of Registers Arrays */
#define MC_RGM_PRST_0_COUNT                       8u
#define MC_RGM_PSTAT_0_COUNT                      8u

/** MC_RGM - Register Layout Typedef */
typedef struct {
  __IO uint32_t DES;                               /**< Destructive Event Status Register, offset: 0x0 */
  uint8_t RESERVED_0[4];
  __IO uint32_t FES;                               /**< Functional /External Reset Status Register, offset: 0x8 */
  uint8_t RESERVED_1[8];
  __IO uint32_t FREC;                              /**< Functional Reset Escalation Counter Register, offset: 0x14 */
  __IO uint32_t FRET;                              /**< Functional Reset Escalation Threshold Register, offset: 0x18 */
  __IO uint32_t DRET;                              /**< Destructive Reset Escalation Threshold Register, offset: 0x1C */
  __IO uint32_t ERCTRL;                            /**< External Reset Control Register, offset: 0x20 */
  __IO uint32_t RDSS;                              /**< Reset During Standby Status Register, offset: 0x24 */
  uint8_t RESERVED_2[24];
  struct {                                         /* offset: 0x40, array step: 0x8 */
    __IO uint32_t PRST_0;                            /**< Peripheral Reset, array offset: 0x40, array step: 0x8 */
    uint8_t RESERVED_0[4];
  } PRST_0[MC_RGM_PRST_0_COUNT];
  uint8_t RESERVED_3[192];
  struct {                                         /* offset: 0x140, array step: 0x8 */
    __I  uint32_t PSTAT_0;                           /**< Peripheral Reset Status Register, array offset: 0x140, array step: 0x8 */
    uint8_t RESERVED_0[4];
  } PSTAT_0[MC_RGM_PSTAT_0_COUNT];
} MC_RGM_Type, *MC_RGM_MemMapPtr;

/** Number of instances of the MC_RGM module. */
#define MC_RGM_INSTANCE_COUNT                    (1u)

/* MC_RGM - Peripheral instance base addresses */
/** Peripheral MC_RGM base address */
#define MC_RGM_BASE                              (0x40078000u)
/** Peripheral MC_RGM base pointer */
#define MC_RGM                                   ((MC_RGM_Type *)MC_RGM_BASE)
/** Array initializer of MC_RGM peripheral base addresses */
#define MC_RGM_BASE_ADDRS                        { MC_RGM_BASE }
/** Array initializer of MC_RGM peripheral base pointers */
#define MC_RGM_BASE_PTRS                         { MC_RGM }

/* ----------------------------------------------------------------------------
   -- MC_RGM Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup MC_RGM_Register_Masks MC_RGM Register Masks
 * @{
 */

/*! @name DES - Destructive Event Status Register */
/*! @{ */
#define MC_RGM_DES_F_POR_MASK                    (0x1U)
#define MC_RGM_DES_F_POR_SHIFT                   (0U)
#define MC_RGM_DES_F_POR_WIDTH                   (1U)
#define MC_RGM_DES_F_POR(x)                      (((uint32_t)(((uint32_t)(x)) << MC_RGM_DES_F_POR_SHIFT)) & MC_RGM_DES_F_POR_MASK)
#define MC_RGM_DES_F_DR_1_MASK                   (0x2U)
#define MC_RGM_DES_F_DR_1_SHIFT                  (1U)
#define MC_RGM_DES_F_DR_1_WIDTH                  (1U)
#define MC_RGM_DES_F_DR_1(x)                     (((uint32_t)(((uint32_t)(x)) << MC_RGM_DES_F_DR_1_SHIFT)) & MC_RGM_DES_F_DR_1_MASK)
#define MC_RGM_DES_F_DR_3_MASK                   (0x8U)
#define MC_RGM_DES_F_DR_3_SHIFT                  (3U)
#define MC_RGM_DES_F_DR_3_WIDTH                  (1U)
#define MC_RGM_DES_F_DR_3(x)                     (((uint32_t)(((uint32_t)(x)) << MC_RGM_DES_F_DR_3_SHIFT)) & MC_RGM_DES_F_DR_3_MASK)
#define MC_RGM_DES_F_DR_4_MASK                   (0x10U)
#define MC_RGM_DES_F_DR_4_SHIFT                  (4U)
#define MC_RGM_DES_F_DR_4_WIDTH                  (1U)
#define MC_RGM_DES_F_DR_4(x)                     (((uint32_t)(((uint32_t)(x)) << MC_RGM_DES_F_DR_4_SHIFT)) & MC_RGM_DES_F_DR_4_MASK)
#define MC_RGM_DES_F_DR_6_MASK                   (0x40U)
#define MC_RGM_DES_F_DR_6_SHIFT                  (6U)
#define MC_RGM_DES_F_DR_6_WIDTH                  (1U)
#define MC_RGM_DES_F_DR_6(x)                     (((uint32_t)(((uint32_t)(x)) << MC_RGM_DES_F_DR_6_SHIFT)) & MC_RGM_DES_F_DR_6_MASK)
#define MC_RGM_DES_F_DR_8_MASK                   (0x100U)
#define MC_RGM_DES_F_DR_8_SHIFT                  (8U)
#define MC_RGM_DES_F_DR_8_WIDTH                  (1U)
#define MC_RGM_DES_F_DR_8(x)                     (((uint32_t)(((uint32_t)(x)) << MC_RGM_DES_F_DR_8_SHIFT)) & MC_RGM_DES_F_DR_8_MASK)
#define MC_RGM_DES_F_DR_9_MASK                   (0x200U)
#define MC_RGM_DES_F_DR_9_SHIFT                  (9U)
#define MC_RGM_DES_F_DR_9_WIDTH                  (1U)
#define MC_RGM_DES_F_DR_9(x)                     (((uint32_t)(((uint32_t)(x)) << MC_RGM_DES_F_DR_9_SHIFT)) & MC_RGM_DES_F_DR_9_MASK)
#define MC_RGM_DES_F_DR_10_MASK                  (0x400U)
#define MC_RGM_DES_F_DR_10_SHIFT                 (10U)
#define MC_RGM_DES_F_DR_10_WIDTH                 (1U)
#define MC_RGM_DES_F_DR_10(x)                    (((uint32_t)(((uint32_t)(x)) << MC_RGM_DES_F_DR_10_SHIFT)) & MC_RGM_DES_F_DR_10_MASK)
#define MC_RGM_DES_F_DR_11_MASK                  (0x800U)
#define MC_RGM_DES_F_DR_11_SHIFT                 (11U)
#define MC_RGM_DES_F_DR_11_WIDTH                 (1U)
#define MC_RGM_DES_F_DR_11(x)                    (((uint32_t)(((uint32_t)(x)) << MC_RGM_DES_F_DR_11_SHIFT)) & MC_RGM_DES_F_DR_11_MASK)
#define MC_RGM_DES_F_DR_12_MASK                  (0x1000U)
#define MC_RGM_DES_F_DR_12_SHIFT                 (12U)
#define MC_RGM_DES_F_DR_12_WIDTH                 (1U)
#define MC_RGM_DES_F_DR_12(x)                    (((uint32_t)(((uint32_t)(x)) << MC_RGM_DES_F_DR_12_SHIFT)) & MC_RGM_DES_F_DR_12_MASK)
#define MC_RGM_DES_F_DR_13_MASK                  (0x2000U)
#define MC_RGM_DES_F_DR_13_SHIFT                 (13U)
#define MC_RGM_DES_F_DR_13_WIDTH                 (1U)
#define MC_RGM_DES_F_DR_13(x)                    (((uint32_t)(((uint32_t)(x)) << MC_RGM_DES_F_DR_13_SHIFT)) & MC_RGM_DES_F_DR_13_MASK)
#define MC_RGM_DES_F_DR_16_MASK                  (0x10000U)
#define MC_RGM_DES_F_DR_16_SHIFT                 (16U)
#define MC_RGM_DES_F_DR_16_WIDTH                 (1U)
#define MC_RGM_DES_F_DR_16(x)                    (((uint32_t)(((uint32_t)(x)) << MC_RGM_DES_F_DR_16_SHIFT)) & MC_RGM_DES_F_DR_16_MASK)
#define MC_RGM_DES_F_DR_17_MASK                  (0x20000U)
#define MC_RGM_DES_F_DR_17_SHIFT                 (17U)
#define MC_RGM_DES_F_DR_17_WIDTH                 (1U)
#define MC_RGM_DES_F_DR_17(x)                    (((uint32_t)(((uint32_t)(x)) << MC_RGM_DES_F_DR_17_SHIFT)) & MC_RGM_DES_F_DR_17_MASK)
#define MC_RGM_DES_F_DR_18_MASK                  (0x40000U)
#define MC_RGM_DES_F_DR_18_SHIFT                 (18U)
#define MC_RGM_DES_F_DR_18_WIDTH                 (1U)
#define MC_RGM_DES_F_DR_18(x)                    (((uint32_t)(((uint32_t)(x)) << MC_RGM_DES_F_DR_18_SHIFT)) & MC_RGM_DES_F_DR_18_MASK)
#define MC_RGM_DES_F_DR_30_MASK                  (0x40000000U)
#define MC_RGM_DES_F_DR_30_SHIFT                 (30U)
#define MC_RGM_DES_F_DR_30_WIDTH                 (1U)
#define MC_RGM_DES_F_DR_30(x)                    (((uint32_t)(((uint32_t)(x)) << MC_RGM_DES_F_DR_30_SHIFT)) & MC_RGM_DES_F_DR_30_MASK)
#define MC_RGM_DES_F_DR_31_MASK                  (0x80000000U)
#define MC_RGM_DES_F_DR_31_SHIFT                 (31U)
#define MC_RGM_DES_F_DR_31_WIDTH                 (1U)
#define MC_RGM_DES_F_DR_31(x)                    (((uint32_t)(((uint32_t)(x)) << MC_RGM_DES_F_DR_31_SHIFT)) & MC_RGM_DES_F_DR_31_MASK)
/*! @} */

/*! @name FES - Functional /External Reset Status Register */
/*! @{ */
#define MC_RGM_FES_F_EXR_MASK                    (0x1U)
#define MC_RGM_FES_F_EXR_SHIFT                   (0U)
#define MC_RGM_FES_F_EXR_WIDTH                   (1U)
#define MC_RGM_FES_F_EXR(x)                      (((uint32_t)(((uint32_t)(x)) << MC_RGM_FES_F_EXR_SHIFT)) & MC_RGM_FES_F_EXR_MASK)
#define MC_RGM_FES_F_FR_3_MASK                   (0x8U)
#define MC_RGM_FES_F_FR_3_SHIFT                  (3U)
#define MC_RGM_FES_F_FR_3_WIDTH                  (1U)
#define MC_RGM_FES_F_FR_3(x)                     (((uint32_t)(((uint32_t)(x)) << MC_RGM_FES_F_FR_3_SHIFT)) & MC_RGM_FES_F_FR_3_MASK)
#define MC_RGM_FES_F_FR_4_MASK                   (0x10U)
#define MC_RGM_FES_F_FR_4_SHIFT                  (4U)
#define MC_RGM_FES_F_FR_4_WIDTH                  (1U)
#define MC_RGM_FES_F_FR_4(x)                     (((uint32_t)(((uint32_t)(x)) << MC_RGM_FES_F_FR_4_SHIFT)) & MC_RGM_FES_F_FR_4_MASK)
#define MC_RGM_FES_F_FR_6_MASK                   (0x40U)
#define MC_RGM_FES_F_FR_6_SHIFT                  (6U)
#define MC_RGM_FES_F_FR_6_WIDTH                  (1U)
#define MC_RGM_FES_F_FR_6(x)                     (((uint32_t)(((uint32_t)(x)) << MC_RGM_FES_F_FR_6_SHIFT)) & MC_RGM_FES_F_FR_6_MASK)
#define MC_RGM_FES_F_FR_18_MASK                  (0x40000U)
#define MC_RGM_FES_F_FR_18_SHIFT                 (18U)
#define MC_RGM_FES_F_FR_18_WIDTH                 (1U)
#define MC_RGM_FES_F_FR_18(x)                    (((uint32_t)(((uint32_t)(x)) << MC_RGM_FES_F_FR_18_SHIFT)) & MC_RGM_FES_F_FR_18_MASK)
#define MC_RGM_FES_F_FR_20_MASK                  (0x100000U)
#define MC_RGM_FES_F_FR_20_SHIFT                 (20U)
#define MC_RGM_FES_F_FR_20_WIDTH                 (1U)
#define MC_RGM_FES_F_FR_20(x)                    (((uint32_t)(((uint32_t)(x)) << MC_RGM_FES_F_FR_20_SHIFT)) & MC_RGM_FES_F_FR_20_MASK)
#define MC_RGM_FES_F_FR_21_MASK                  (0x200000U)
#define MC_RGM_FES_F_FR_21_SHIFT                 (21U)
#define MC_RGM_FES_F_FR_21_WIDTH                 (1U)
#define MC_RGM_FES_F_FR_21(x)                    (((uint32_t)(((uint32_t)(x)) << MC_RGM_FES_F_FR_21_SHIFT)) & MC_RGM_FES_F_FR_21_MASK)
#define MC_RGM_FES_F_FR_30_MASK                  (0x40000000U)
#define MC_RGM_FES_F_FR_30_SHIFT                 (30U)
#define MC_RGM_FES_F_FR_30_WIDTH                 (1U)
#define MC_RGM_FES_F_FR_30(x)                    (((uint32_t)(((uint32_t)(x)) << MC_RGM_FES_F_FR_30_SHIFT)) & MC_RGM_FES_F_FR_30_MASK)
#define MC_RGM_FES_F_FR_31_MASK                  (0x80000000U)
#define MC_RGM_FES_F_FR_31_SHIFT                 (31U)
#define MC_RGM_FES_F_FR_31_WIDTH                 (1U)
#define MC_RGM_FES_F_FR_31(x)                    (((uint32_t)(((uint32_t)(x)) << MC_RGM_FES_F_FR_31_SHIFT)) & MC_RGM_FES_F_FR_31_MASK)
/*! @} */

/*! @name FREC - Functional Reset Escalation Counter Register */
/*! @{ */
#define MC_RGM_FREC_FREC_MASK                    (0xFU)
#define MC_RGM_FREC_FREC_SHIFT                   (0U)
#define MC_RGM_FREC_FREC_WIDTH                   (4U)
#define MC_RGM_FREC_FREC(x)                      (((uint32_t)(((uint32_t)(x)) << MC_RGM_FREC_FREC_SHIFT)) & MC_RGM_FREC_FREC_MASK)
/*! @} */

/*! @name FRET - Functional Reset Escalation Threshold Register */
/*! @{ */
#define MC_RGM_FRET_FRET_MASK                    (0xFU)
#define MC_RGM_FRET_FRET_SHIFT                   (0U)
#define MC_RGM_FRET_FRET_WIDTH                   (4U)
#define MC_RGM_FRET_FRET(x)                      (((uint32_t)(((uint32_t)(x)) << MC_RGM_FRET_FRET_SHIFT)) & MC_RGM_FRET_FRET_MASK)
/*! @} */

/*! @name DRET - Destructive Reset Escalation Threshold Register */
/*! @{ */
#define MC_RGM_DRET_DRET_MASK                    (0xFU)
#define MC_RGM_DRET_DRET_SHIFT                   (0U)
#define MC_RGM_DRET_DRET_WIDTH                   (4U)
#define MC_RGM_DRET_DRET(x)                      (((uint32_t)(((uint32_t)(x)) << MC_RGM_DRET_DRET_SHIFT)) & MC_RGM_DRET_DRET_MASK)
/*! @} */

/*! @name ERCTRL - External Reset Control Register */
/*! @{ */
#define MC_RGM_ERCTRL_ERASSERT_MASK              (0x1U)
#define MC_RGM_ERCTRL_ERASSERT_SHIFT             (0U)
#define MC_RGM_ERCTRL_ERASSERT_WIDTH             (1U)
#define MC_RGM_ERCTRL_ERASSERT(x)                (((uint32_t)(((uint32_t)(x)) << MC_RGM_ERCTRL_ERASSERT_SHIFT)) & MC_RGM_ERCTRL_ERASSERT_MASK)
/*! @} */

/*! @name RDSS - Reset During Standby Status Register */
/*! @{ */
#define MC_RGM_RDSS_DES_RES_MASK                 (0x1U)
#define MC_RGM_RDSS_DES_RES_SHIFT                (0U)
#define MC_RGM_RDSS_DES_RES_WIDTH                (1U)
#define MC_RGM_RDSS_DES_RES(x)                   (((uint32_t)(((uint32_t)(x)) << MC_RGM_RDSS_DES_RES_SHIFT)) & MC_RGM_RDSS_DES_RES_MASK)
#define MC_RGM_RDSS_FES_RES_MASK                 (0x2U)
#define MC_RGM_RDSS_FES_RES_SHIFT                (1U)
#define MC_RGM_RDSS_FES_RES_WIDTH                (1U)
#define MC_RGM_RDSS_FES_RES(x)                   (((uint32_t)(((uint32_t)(x)) << MC_RGM_RDSS_FES_RES_SHIFT)) & MC_RGM_RDSS_FES_RES_MASK)
/*! @} */

/*! @name PRST_0 - Peripheral Reset */
/*! @{ */
#define MC_RGM_PRST_0_PERIPH_0_RST_MASK          (0x1U)
#define MC_RGM_PRST_0_PERIPH_0_RST_SHIFT         (0U)
#define MC_RGM_PRST_0_PERIPH_0_RST_WIDTH         (1U)
#define MC_RGM_PRST_0_PERIPH_0_RST(x)            (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_0_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_0_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_1_RST_MASK          (0x2U)
#define MC_RGM_PRST_0_PERIPH_1_RST_SHIFT         (1U)
#define MC_RGM_PRST_0_PERIPH_1_RST_WIDTH         (1U)
#define MC_RGM_PRST_0_PERIPH_1_RST(x)            (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_1_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_1_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_2_RST_MASK          (0x4U)
#define MC_RGM_PRST_0_PERIPH_2_RST_SHIFT         (2U)
#define MC_RGM_PRST_0_PERIPH_2_RST_WIDTH         (1U)
#define MC_RGM_PRST_0_PERIPH_2_RST(x)            (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_2_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_2_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_3_RST_MASK          (0x8U)
#define MC_RGM_PRST_0_PERIPH_3_RST_SHIFT         (3U)
#define MC_RGM_PRST_0_PERIPH_3_RST_WIDTH         (1U)
#define MC_RGM_PRST_0_PERIPH_3_RST(x)            (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_3_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_3_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_4_RST_MASK          (0x10U)
#define MC_RGM_PRST_0_PERIPH_4_RST_SHIFT         (4U)
#define MC_RGM_PRST_0_PERIPH_4_RST_WIDTH         (1U)
#define MC_RGM_PRST_0_PERIPH_4_RST(x)            (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_4_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_4_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_5_RST_MASK          (0x20U)
#define MC_RGM_PRST_0_PERIPH_5_RST_SHIFT         (5U)
#define MC_RGM_PRST_0_PERIPH_5_RST_WIDTH         (1U)
#define MC_RGM_PRST_0_PERIPH_5_RST(x)            (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_5_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_5_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_6_RST_MASK          (0x40U)
#define MC_RGM_PRST_0_PERIPH_6_RST_SHIFT         (6U)
#define MC_RGM_PRST_0_PERIPH_6_RST_WIDTH         (1U)
#define MC_RGM_PRST_0_PERIPH_6_RST(x)            (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_6_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_6_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_7_RST_MASK          (0x80U)
#define MC_RGM_PRST_0_PERIPH_7_RST_SHIFT         (7U)
#define MC_RGM_PRST_0_PERIPH_7_RST_WIDTH         (1U)
#define MC_RGM_PRST_0_PERIPH_7_RST(x)            (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_7_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_7_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_8_RST_MASK          (0x100U)
#define MC_RGM_PRST_0_PERIPH_8_RST_SHIFT         (8U)
#define MC_RGM_PRST_0_PERIPH_8_RST_WIDTH         (1U)
#define MC_RGM_PRST_0_PERIPH_8_RST(x)            (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_8_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_8_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_9_RST_MASK          (0x200U)
#define MC_RGM_PRST_0_PERIPH_9_RST_SHIFT         (9U)
#define MC_RGM_PRST_0_PERIPH_9_RST_WIDTH         (1U)
#define MC_RGM_PRST_0_PERIPH_9_RST(x)            (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_9_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_9_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_10_RST_MASK         (0x400U)
#define MC_RGM_PRST_0_PERIPH_10_RST_SHIFT        (10U)
#define MC_RGM_PRST_0_PERIPH_10_RST_WIDTH        (1U)
#define MC_RGM_PRST_0_PERIPH_10_RST(x)           (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_10_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_10_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_11_RST_MASK         (0x800U)
#define MC_RGM_PRST_0_PERIPH_11_RST_SHIFT        (11U)
#define MC_RGM_PRST_0_PERIPH_11_RST_WIDTH        (1U)
#define MC_RGM_PRST_0_PERIPH_11_RST(x)           (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_11_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_11_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_12_RST_MASK         (0x1000U)
#define MC_RGM_PRST_0_PERIPH_12_RST_SHIFT        (12U)
#define MC_RGM_PRST_0_PERIPH_12_RST_WIDTH        (1U)
#define MC_RGM_PRST_0_PERIPH_12_RST(x)           (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_12_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_12_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_13_RST_MASK         (0x2000U)
#define MC_RGM_PRST_0_PERIPH_13_RST_SHIFT        (13U)
#define MC_RGM_PRST_0_PERIPH_13_RST_WIDTH        (1U)
#define MC_RGM_PRST_0_PERIPH_13_RST(x)           (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_13_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_13_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_14_RST_MASK         (0x4000U)
#define MC_RGM_PRST_0_PERIPH_14_RST_SHIFT        (14U)
#define MC_RGM_PRST_0_PERIPH_14_RST_WIDTH        (1U)
#define MC_RGM_PRST_0_PERIPH_14_RST(x)           (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_14_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_14_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_15_RST_MASK         (0x8000U)
#define MC_RGM_PRST_0_PERIPH_15_RST_SHIFT        (15U)
#define MC_RGM_PRST_0_PERIPH_15_RST_WIDTH        (1U)
#define MC_RGM_PRST_0_PERIPH_15_RST(x)           (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_15_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_15_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_16_RST_MASK         (0x10000U)
#define MC_RGM_PRST_0_PERIPH_16_RST_SHIFT        (16U)
#define MC_RGM_PRST_0_PERIPH_16_RST_WIDTH        (1U)
#define MC_RGM_PRST_0_PERIPH_16_RST(x)           (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_16_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_16_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_17_RST_MASK         (0x20000U)
#define MC_RGM_PRST_0_PERIPH_17_RST_SHIFT        (17U)
#define MC_RGM_PRST_0_PERIPH_17_RST_WIDTH        (1U)
#define MC_RGM_PRST_0_PERIPH_17_RST(x)           (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_17_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_17_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_18_RST_MASK         (0x40000U)
#define MC_RGM_PRST_0_PERIPH_18_RST_SHIFT        (18U)
#define MC_RGM_PRST_0_PERIPH_18_RST_WIDTH        (1U)
#define MC_RGM_PRST_0_PERIPH_18_RST(x)           (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_18_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_18_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_19_RST_MASK         (0x80000U)
#define MC_RGM_PRST_0_PERIPH_19_RST_SHIFT        (19U)
#define MC_RGM_PRST_0_PERIPH_19_RST_WIDTH        (1U)
#define MC_RGM_PRST_0_PERIPH_19_RST(x)           (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_19_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_19_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_20_RST_MASK         (0x100000U)
#define MC_RGM_PRST_0_PERIPH_20_RST_SHIFT        (20U)
#define MC_RGM_PRST_0_PERIPH_20_RST_WIDTH        (1U)
#define MC_RGM_PRST_0_PERIPH_20_RST(x)           (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_20_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_20_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_21_RST_MASK         (0x200000U)
#define MC_RGM_PRST_0_PERIPH_21_RST_SHIFT        (21U)
#define MC_RGM_PRST_0_PERIPH_21_RST_WIDTH        (1U)
#define MC_RGM_PRST_0_PERIPH_21_RST(x)           (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_21_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_21_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_22_RST_MASK         (0x400000U)
#define MC_RGM_PRST_0_PERIPH_22_RST_SHIFT        (22U)
#define MC_RGM_PRST_0_PERIPH_22_RST_WIDTH        (1U)
#define MC_RGM_PRST_0_PERIPH_22_RST(x)           (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_22_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_22_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_23_RST_MASK         (0x800000U)
#define MC_RGM_PRST_0_PERIPH_23_RST_SHIFT        (23U)
#define MC_RGM_PRST_0_PERIPH_23_RST_WIDTH        (1U)
#define MC_RGM_PRST_0_PERIPH_23_RST(x)           (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_23_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_23_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_24_RST_MASK         (0x1000000U)
#define MC_RGM_PRST_0_PERIPH_24_RST_SHIFT        (24U)
#define MC_RGM_PRST_0_PERIPH_24_RST_WIDTH        (1U)
#define MC_RGM_PRST_0_PERIPH_24_RST(x)           (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_24_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_24_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_25_RST_MASK         (0x2000000U)
#define MC_RGM_PRST_0_PERIPH_25_RST_SHIFT        (25U)
#define MC_RGM_PRST_0_PERIPH_25_RST_WIDTH        (1U)
#define MC_RGM_PRST_0_PERIPH_25_RST(x)           (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_25_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_25_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_26_RST_MASK         (0x4000000U)
#define MC_RGM_PRST_0_PERIPH_26_RST_SHIFT        (26U)
#define MC_RGM_PRST_0_PERIPH_26_RST_WIDTH        (1U)
#define MC_RGM_PRST_0_PERIPH_26_RST(x)           (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_26_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_26_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_27_RST_MASK         (0x8000000U)
#define MC_RGM_PRST_0_PERIPH_27_RST_SHIFT        (27U)
#define MC_RGM_PRST_0_PERIPH_27_RST_WIDTH        (1U)
#define MC_RGM_PRST_0_PERIPH_27_RST(x)           (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_27_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_27_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_28_RST_MASK         (0x10000000U)
#define MC_RGM_PRST_0_PERIPH_28_RST_SHIFT        (28U)
#define MC_RGM_PRST_0_PERIPH_28_RST_WIDTH        (1U)
#define MC_RGM_PRST_0_PERIPH_28_RST(x)           (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_28_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_28_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_29_RST_MASK         (0x20000000U)
#define MC_RGM_PRST_0_PERIPH_29_RST_SHIFT        (29U)
#define MC_RGM_PRST_0_PERIPH_29_RST_WIDTH        (1U)
#define MC_RGM_PRST_0_PERIPH_29_RST(x)           (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_29_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_29_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_30_RST_MASK         (0x40000000U)
#define MC_RGM_PRST_0_PERIPH_30_RST_SHIFT        (30U)
#define MC_RGM_PRST_0_PERIPH_30_RST_WIDTH        (1U)
#define MC_RGM_PRST_0_PERIPH_30_RST(x)           (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_30_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_30_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_31_RST_MASK         (0x80000000U)
#define MC_RGM_PRST_0_PERIPH_31_RST_SHIFT        (31U)
#define MC_RGM_PRST_0_PERIPH_31_RST_WIDTH        (1U)
#define MC_RGM_PRST_0_PERIPH_31_RST(x)           (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_31_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_31_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_64_RST_MASK         (0x1U)
#define MC_RGM_PRST_0_PERIPH_64_RST_SHIFT        (0U)
#define MC_RGM_PRST_0_PERIPH_64_RST_WIDTH        (1U)
#define MC_RGM_PRST_0_PERIPH_64_RST(x)           (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_64_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_64_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_65_RST_MASK         (0x2U)
#define MC_RGM_PRST_0_PERIPH_65_RST_SHIFT        (1U)
#define MC_RGM_PRST_0_PERIPH_65_RST_WIDTH        (1U)
#define MC_RGM_PRST_0_PERIPH_65_RST(x)           (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_65_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_65_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_66_RST_MASK         (0x4U)
#define MC_RGM_PRST_0_PERIPH_66_RST_SHIFT        (2U)
#define MC_RGM_PRST_0_PERIPH_66_RST_WIDTH        (1U)
#define MC_RGM_PRST_0_PERIPH_66_RST(x)           (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_66_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_66_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_67_RST_MASK         (0x8U)
#define MC_RGM_PRST_0_PERIPH_67_RST_SHIFT        (3U)
#define MC_RGM_PRST_0_PERIPH_67_RST_WIDTH        (1U)
#define MC_RGM_PRST_0_PERIPH_67_RST(x)           (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_67_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_67_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_68_RST_MASK         (0x10U)
#define MC_RGM_PRST_0_PERIPH_68_RST_SHIFT        (4U)
#define MC_RGM_PRST_0_PERIPH_68_RST_WIDTH        (1U)
#define MC_RGM_PRST_0_PERIPH_68_RST(x)           (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_68_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_68_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_128_RST_MASK        (0x1U)
#define MC_RGM_PRST_0_PERIPH_128_RST_SHIFT       (0U)
#define MC_RGM_PRST_0_PERIPH_128_RST_WIDTH       (1U)
#define MC_RGM_PRST_0_PERIPH_128_RST(x)          (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_128_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_128_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_129_RST_MASK        (0x2U)
#define MC_RGM_PRST_0_PERIPH_129_RST_SHIFT       (1U)
#define MC_RGM_PRST_0_PERIPH_129_RST_WIDTH       (1U)
#define MC_RGM_PRST_0_PERIPH_129_RST(x)          (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_129_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_129_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_130_RST_MASK        (0x4U)
#define MC_RGM_PRST_0_PERIPH_130_RST_SHIFT       (2U)
#define MC_RGM_PRST_0_PERIPH_130_RST_WIDTH       (1U)
#define MC_RGM_PRST_0_PERIPH_130_RST(x)          (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_130_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_130_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_131_RST_MASK        (0x8U)
#define MC_RGM_PRST_0_PERIPH_131_RST_SHIFT       (3U)
#define MC_RGM_PRST_0_PERIPH_131_RST_WIDTH       (1U)
#define MC_RGM_PRST_0_PERIPH_131_RST(x)          (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_131_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_131_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_132_RST_MASK        (0x10U)
#define MC_RGM_PRST_0_PERIPH_132_RST_SHIFT       (4U)
#define MC_RGM_PRST_0_PERIPH_132_RST_WIDTH       (1U)
#define MC_RGM_PRST_0_PERIPH_132_RST(x)          (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_132_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_132_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_133_RST_MASK        (0x20U)
#define MC_RGM_PRST_0_PERIPH_133_RST_SHIFT       (5U)
#define MC_RGM_PRST_0_PERIPH_133_RST_WIDTH       (1U)
#define MC_RGM_PRST_0_PERIPH_133_RST(x)          (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_133_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_133_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_134_RST_MASK        (0x40U)
#define MC_RGM_PRST_0_PERIPH_134_RST_SHIFT       (6U)
#define MC_RGM_PRST_0_PERIPH_134_RST_WIDTH       (1U)
#define MC_RGM_PRST_0_PERIPH_134_RST(x)          (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_134_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_134_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_135_RST_MASK        (0x80U)
#define MC_RGM_PRST_0_PERIPH_135_RST_SHIFT       (7U)
#define MC_RGM_PRST_0_PERIPH_135_RST_WIDTH       (1U)
#define MC_RGM_PRST_0_PERIPH_135_RST(x)          (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_135_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_135_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_136_RST_MASK        (0x100U)
#define MC_RGM_PRST_0_PERIPH_136_RST_SHIFT       (8U)
#define MC_RGM_PRST_0_PERIPH_136_RST_WIDTH       (1U)
#define MC_RGM_PRST_0_PERIPH_136_RST(x)          (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_136_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_136_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_192_RST_MASK        (0x1U)
#define MC_RGM_PRST_0_PERIPH_192_RST_SHIFT       (0U)
#define MC_RGM_PRST_0_PERIPH_192_RST_WIDTH       (1U)
#define MC_RGM_PRST_0_PERIPH_192_RST(x)          (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_192_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_192_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_193_RST_MASK        (0x2U)
#define MC_RGM_PRST_0_PERIPH_193_RST_SHIFT       (1U)
#define MC_RGM_PRST_0_PERIPH_193_RST_WIDTH       (1U)
#define MC_RGM_PRST_0_PERIPH_193_RST(x)          (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_193_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_193_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_194_RST_MASK        (0x4U)
#define MC_RGM_PRST_0_PERIPH_194_RST_SHIFT       (2U)
#define MC_RGM_PRST_0_PERIPH_194_RST_WIDTH       (1U)
#define MC_RGM_PRST_0_PERIPH_194_RST(x)          (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_194_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_194_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_195_RST_MASK        (0x8U)
#define MC_RGM_PRST_0_PERIPH_195_RST_SHIFT       (3U)
#define MC_RGM_PRST_0_PERIPH_195_RST_WIDTH       (1U)
#define MC_RGM_PRST_0_PERIPH_195_RST(x)          (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_195_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_195_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_196_RST_MASK        (0x10U)
#define MC_RGM_PRST_0_PERIPH_196_RST_SHIFT       (4U)
#define MC_RGM_PRST_0_PERIPH_196_RST_WIDTH       (1U)
#define MC_RGM_PRST_0_PERIPH_196_RST(x)          (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_196_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_196_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_197_RST_MASK        (0x20U)
#define MC_RGM_PRST_0_PERIPH_197_RST_SHIFT       (5U)
#define MC_RGM_PRST_0_PERIPH_197_RST_WIDTH       (1U)
#define MC_RGM_PRST_0_PERIPH_197_RST(x)          (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_197_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_197_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_198_RST_MASK        (0x40U)
#define MC_RGM_PRST_0_PERIPH_198_RST_SHIFT       (6U)
#define MC_RGM_PRST_0_PERIPH_198_RST_WIDTH       (1U)
#define MC_RGM_PRST_0_PERIPH_198_RST(x)          (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_198_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_198_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_199_RST_MASK        (0x80U)
#define MC_RGM_PRST_0_PERIPH_199_RST_SHIFT       (7U)
#define MC_RGM_PRST_0_PERIPH_199_RST_WIDTH       (1U)
#define MC_RGM_PRST_0_PERIPH_199_RST(x)          (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_199_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_199_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_200_RST_MASK        (0x100U)
#define MC_RGM_PRST_0_PERIPH_200_RST_SHIFT       (8U)
#define MC_RGM_PRST_0_PERIPH_200_RST_WIDTH       (1U)
#define MC_RGM_PRST_0_PERIPH_200_RST(x)          (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_200_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_200_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_256_RST_MASK        (0x1U)
#define MC_RGM_PRST_0_PERIPH_256_RST_SHIFT       (0U)
#define MC_RGM_PRST_0_PERIPH_256_RST_WIDTH       (1U)
#define MC_RGM_PRST_0_PERIPH_256_RST(x)          (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_256_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_256_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_257_RST_MASK        (0x2U)
#define MC_RGM_PRST_0_PERIPH_257_RST_SHIFT       (1U)
#define MC_RGM_PRST_0_PERIPH_257_RST_WIDTH       (1U)
#define MC_RGM_PRST_0_PERIPH_257_RST(x)          (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_257_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_257_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_258_RST_MASK        (0x4U)
#define MC_RGM_PRST_0_PERIPH_258_RST_SHIFT       (2U)
#define MC_RGM_PRST_0_PERIPH_258_RST_WIDTH       (1U)
#define MC_RGM_PRST_0_PERIPH_258_RST(x)          (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_258_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_258_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_259_RST_MASK        (0x8U)
#define MC_RGM_PRST_0_PERIPH_259_RST_SHIFT       (3U)
#define MC_RGM_PRST_0_PERIPH_259_RST_WIDTH       (1U)
#define MC_RGM_PRST_0_PERIPH_259_RST(x)          (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_259_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_259_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_260_RST_MASK        (0x10U)
#define MC_RGM_PRST_0_PERIPH_260_RST_SHIFT       (4U)
#define MC_RGM_PRST_0_PERIPH_260_RST_WIDTH       (1U)
#define MC_RGM_PRST_0_PERIPH_260_RST(x)          (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_260_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_260_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_261_RST_MASK        (0x20U)
#define MC_RGM_PRST_0_PERIPH_261_RST_SHIFT       (5U)
#define MC_RGM_PRST_0_PERIPH_261_RST_WIDTH       (1U)
#define MC_RGM_PRST_0_PERIPH_261_RST(x)          (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_261_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_261_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_262_RST_MASK        (0x40U)
#define MC_RGM_PRST_0_PERIPH_262_RST_SHIFT       (6U)
#define MC_RGM_PRST_0_PERIPH_262_RST_WIDTH       (1U)
#define MC_RGM_PRST_0_PERIPH_262_RST(x)          (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_262_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_262_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_263_RST_MASK        (0x80U)
#define MC_RGM_PRST_0_PERIPH_263_RST_SHIFT       (7U)
#define MC_RGM_PRST_0_PERIPH_263_RST_WIDTH       (1U)
#define MC_RGM_PRST_0_PERIPH_263_RST(x)          (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_263_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_263_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_264_RST_MASK        (0x100U)
#define MC_RGM_PRST_0_PERIPH_264_RST_SHIFT       (8U)
#define MC_RGM_PRST_0_PERIPH_264_RST_WIDTH       (1U)
#define MC_RGM_PRST_0_PERIPH_264_RST(x)          (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_264_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_264_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_320_RST_MASK        (0x1U)
#define MC_RGM_PRST_0_PERIPH_320_RST_SHIFT       (0U)
#define MC_RGM_PRST_0_PERIPH_320_RST_WIDTH       (1U)
#define MC_RGM_PRST_0_PERIPH_320_RST(x)          (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_320_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_320_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_321_RST_MASK        (0x2U)
#define MC_RGM_PRST_0_PERIPH_321_RST_SHIFT       (1U)
#define MC_RGM_PRST_0_PERIPH_321_RST_WIDTH       (1U)
#define MC_RGM_PRST_0_PERIPH_321_RST(x)          (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_321_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_321_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_322_RST_MASK        (0x4U)
#define MC_RGM_PRST_0_PERIPH_322_RST_SHIFT       (2U)
#define MC_RGM_PRST_0_PERIPH_322_RST_WIDTH       (1U)
#define MC_RGM_PRST_0_PERIPH_322_RST(x)          (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_322_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_322_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_323_RST_MASK        (0x8U)
#define MC_RGM_PRST_0_PERIPH_323_RST_SHIFT       (3U)
#define MC_RGM_PRST_0_PERIPH_323_RST_WIDTH       (1U)
#define MC_RGM_PRST_0_PERIPH_323_RST(x)          (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_323_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_323_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_324_RST_MASK        (0x10U)
#define MC_RGM_PRST_0_PERIPH_324_RST_SHIFT       (4U)
#define MC_RGM_PRST_0_PERIPH_324_RST_WIDTH       (1U)
#define MC_RGM_PRST_0_PERIPH_324_RST(x)          (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_324_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_324_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_325_RST_MASK        (0x20U)
#define MC_RGM_PRST_0_PERIPH_325_RST_SHIFT       (5U)
#define MC_RGM_PRST_0_PERIPH_325_RST_WIDTH       (1U)
#define MC_RGM_PRST_0_PERIPH_325_RST(x)          (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_325_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_325_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_326_RST_MASK        (0x40U)
#define MC_RGM_PRST_0_PERIPH_326_RST_SHIFT       (6U)
#define MC_RGM_PRST_0_PERIPH_326_RST_WIDTH       (1U)
#define MC_RGM_PRST_0_PERIPH_326_RST(x)          (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_326_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_326_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_327_RST_MASK        (0x80U)
#define MC_RGM_PRST_0_PERIPH_327_RST_SHIFT       (7U)
#define MC_RGM_PRST_0_PERIPH_327_RST_WIDTH       (1U)
#define MC_RGM_PRST_0_PERIPH_327_RST(x)          (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_327_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_327_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_328_RST_MASK        (0x100U)
#define MC_RGM_PRST_0_PERIPH_328_RST_SHIFT       (8U)
#define MC_RGM_PRST_0_PERIPH_328_RST_WIDTH       (1U)
#define MC_RGM_PRST_0_PERIPH_328_RST(x)          (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_328_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_328_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_384_RST_MASK        (0x1U)
#define MC_RGM_PRST_0_PERIPH_384_RST_SHIFT       (0U)
#define MC_RGM_PRST_0_PERIPH_384_RST_WIDTH       (1U)
#define MC_RGM_PRST_0_PERIPH_384_RST(x)          (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_384_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_384_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_385_RST_MASK        (0x2U)
#define MC_RGM_PRST_0_PERIPH_385_RST_SHIFT       (1U)
#define MC_RGM_PRST_0_PERIPH_385_RST_WIDTH       (1U)
#define MC_RGM_PRST_0_PERIPH_385_RST(x)          (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_385_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_385_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_386_RST_MASK        (0x4U)
#define MC_RGM_PRST_0_PERIPH_386_RST_SHIFT       (2U)
#define MC_RGM_PRST_0_PERIPH_386_RST_WIDTH       (1U)
#define MC_RGM_PRST_0_PERIPH_386_RST(x)          (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_386_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_386_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_387_RST_MASK        (0x8U)
#define MC_RGM_PRST_0_PERIPH_387_RST_SHIFT       (3U)
#define MC_RGM_PRST_0_PERIPH_387_RST_WIDTH       (1U)
#define MC_RGM_PRST_0_PERIPH_387_RST(x)          (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_387_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_387_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_388_RST_MASK        (0x10U)
#define MC_RGM_PRST_0_PERIPH_388_RST_SHIFT       (4U)
#define MC_RGM_PRST_0_PERIPH_388_RST_WIDTH       (1U)
#define MC_RGM_PRST_0_PERIPH_388_RST(x)          (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_388_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_388_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_389_RST_MASK        (0x20U)
#define MC_RGM_PRST_0_PERIPH_389_RST_SHIFT       (5U)
#define MC_RGM_PRST_0_PERIPH_389_RST_WIDTH       (1U)
#define MC_RGM_PRST_0_PERIPH_389_RST(x)          (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_389_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_389_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_390_RST_MASK        (0x40U)
#define MC_RGM_PRST_0_PERIPH_390_RST_SHIFT       (6U)
#define MC_RGM_PRST_0_PERIPH_390_RST_WIDTH       (1U)
#define MC_RGM_PRST_0_PERIPH_390_RST(x)          (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_390_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_390_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_391_RST_MASK        (0x80U)
#define MC_RGM_PRST_0_PERIPH_391_RST_SHIFT       (7U)
#define MC_RGM_PRST_0_PERIPH_391_RST_WIDTH       (1U)
#define MC_RGM_PRST_0_PERIPH_391_RST(x)          (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_391_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_391_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_392_RST_MASK        (0x100U)
#define MC_RGM_PRST_0_PERIPH_392_RST_SHIFT       (8U)
#define MC_RGM_PRST_0_PERIPH_392_RST_WIDTH       (1U)
#define MC_RGM_PRST_0_PERIPH_392_RST(x)          (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_392_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_392_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_448_RST_MASK        (0x1U)
#define MC_RGM_PRST_0_PERIPH_448_RST_SHIFT       (0U)
#define MC_RGM_PRST_0_PERIPH_448_RST_WIDTH       (1U)
#define MC_RGM_PRST_0_PERIPH_448_RST(x)          (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_448_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_448_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_449_RST_MASK        (0x2U)
#define MC_RGM_PRST_0_PERIPH_449_RST_SHIFT       (1U)
#define MC_RGM_PRST_0_PERIPH_449_RST_WIDTH       (1U)
#define MC_RGM_PRST_0_PERIPH_449_RST(x)          (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_449_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_449_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_450_RST_MASK        (0x4U)
#define MC_RGM_PRST_0_PERIPH_450_RST_SHIFT       (2U)
#define MC_RGM_PRST_0_PERIPH_450_RST_WIDTH       (1U)
#define MC_RGM_PRST_0_PERIPH_450_RST(x)          (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_450_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_450_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_451_RST_MASK        (0x8U)
#define MC_RGM_PRST_0_PERIPH_451_RST_SHIFT       (3U)
#define MC_RGM_PRST_0_PERIPH_451_RST_WIDTH       (1U)
#define MC_RGM_PRST_0_PERIPH_451_RST(x)          (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_451_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_451_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_452_RST_MASK        (0x10U)
#define MC_RGM_PRST_0_PERIPH_452_RST_SHIFT       (4U)
#define MC_RGM_PRST_0_PERIPH_452_RST_WIDTH       (1U)
#define MC_RGM_PRST_0_PERIPH_452_RST(x)          (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_452_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_452_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_453_RST_MASK        (0x20U)
#define MC_RGM_PRST_0_PERIPH_453_RST_SHIFT       (5U)
#define MC_RGM_PRST_0_PERIPH_453_RST_WIDTH       (1U)
#define MC_RGM_PRST_0_PERIPH_453_RST(x)          (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_453_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_453_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_454_RST_MASK        (0x40U)
#define MC_RGM_PRST_0_PERIPH_454_RST_SHIFT       (6U)
#define MC_RGM_PRST_0_PERIPH_454_RST_WIDTH       (1U)
#define MC_RGM_PRST_0_PERIPH_454_RST(x)          (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_454_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_454_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_455_RST_MASK        (0x80U)
#define MC_RGM_PRST_0_PERIPH_455_RST_SHIFT       (7U)
#define MC_RGM_PRST_0_PERIPH_455_RST_WIDTH       (1U)
#define MC_RGM_PRST_0_PERIPH_455_RST(x)          (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_455_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_455_RST_MASK)
#define MC_RGM_PRST_0_PERIPH_456_RST_MASK        (0x100U)
#define MC_RGM_PRST_0_PERIPH_456_RST_SHIFT       (8U)
#define MC_RGM_PRST_0_PERIPH_456_RST_WIDTH       (1U)
#define MC_RGM_PRST_0_PERIPH_456_RST(x)          (((uint32_t)(((uint32_t)(x)) << MC_RGM_PRST_0_PERIPH_456_RST_SHIFT)) & MC_RGM_PRST_0_PERIPH_456_RST_MASK)
/*! @} */

/*! @name PSTAT_0 - Peripheral Reset Status Register */
/*! @{ */
#define MC_RGM_PSTAT_0_PERIPH_0_STAT_MASK        (0x1U)
#define MC_RGM_PSTAT_0_PERIPH_0_STAT_SHIFT       (0U)
#define MC_RGM_PSTAT_0_PERIPH_0_STAT_WIDTH       (1U)
#define MC_RGM_PSTAT_0_PERIPH_0_STAT(x)          (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_0_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_0_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_1_STAT_MASK        (0x2U)
#define MC_RGM_PSTAT_0_PERIPH_1_STAT_SHIFT       (1U)
#define MC_RGM_PSTAT_0_PERIPH_1_STAT_WIDTH       (1U)
#define MC_RGM_PSTAT_0_PERIPH_1_STAT(x)          (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_1_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_1_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_2_STAT_MASK        (0x4U)
#define MC_RGM_PSTAT_0_PERIPH_2_STAT_SHIFT       (2U)
#define MC_RGM_PSTAT_0_PERIPH_2_STAT_WIDTH       (1U)
#define MC_RGM_PSTAT_0_PERIPH_2_STAT(x)          (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_2_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_2_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_3_STAT_MASK        (0x8U)
#define MC_RGM_PSTAT_0_PERIPH_3_STAT_SHIFT       (3U)
#define MC_RGM_PSTAT_0_PERIPH_3_STAT_WIDTH       (1U)
#define MC_RGM_PSTAT_0_PERIPH_3_STAT(x)          (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_3_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_3_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_4_STAT_MASK        (0x10U)
#define MC_RGM_PSTAT_0_PERIPH_4_STAT_SHIFT       (4U)
#define MC_RGM_PSTAT_0_PERIPH_4_STAT_WIDTH       (1U)
#define MC_RGM_PSTAT_0_PERIPH_4_STAT(x)          (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_4_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_4_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_5_STAT_MASK        (0x20U)
#define MC_RGM_PSTAT_0_PERIPH_5_STAT_SHIFT       (5U)
#define MC_RGM_PSTAT_0_PERIPH_5_STAT_WIDTH       (1U)
#define MC_RGM_PSTAT_0_PERIPH_5_STAT(x)          (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_5_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_5_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_6_STAT_MASK        (0x40U)
#define MC_RGM_PSTAT_0_PERIPH_6_STAT_SHIFT       (6U)
#define MC_RGM_PSTAT_0_PERIPH_6_STAT_WIDTH       (1U)
#define MC_RGM_PSTAT_0_PERIPH_6_STAT(x)          (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_6_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_6_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_7_STAT_MASK        (0x80U)
#define MC_RGM_PSTAT_0_PERIPH_7_STAT_SHIFT       (7U)
#define MC_RGM_PSTAT_0_PERIPH_7_STAT_WIDTH       (1U)
#define MC_RGM_PSTAT_0_PERIPH_7_STAT(x)          (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_7_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_7_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_8_STAT_MASK        (0x100U)
#define MC_RGM_PSTAT_0_PERIPH_8_STAT_SHIFT       (8U)
#define MC_RGM_PSTAT_0_PERIPH_8_STAT_WIDTH       (1U)
#define MC_RGM_PSTAT_0_PERIPH_8_STAT(x)          (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_8_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_8_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_9_STAT_MASK        (0x200U)
#define MC_RGM_PSTAT_0_PERIPH_9_STAT_SHIFT       (9U)
#define MC_RGM_PSTAT_0_PERIPH_9_STAT_WIDTH       (1U)
#define MC_RGM_PSTAT_0_PERIPH_9_STAT(x)          (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_9_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_9_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_10_STAT_MASK       (0x400U)
#define MC_RGM_PSTAT_0_PERIPH_10_STAT_SHIFT      (10U)
#define MC_RGM_PSTAT_0_PERIPH_10_STAT_WIDTH      (1U)
#define MC_RGM_PSTAT_0_PERIPH_10_STAT(x)         (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_10_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_10_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_11_STAT_MASK       (0x800U)
#define MC_RGM_PSTAT_0_PERIPH_11_STAT_SHIFT      (11U)
#define MC_RGM_PSTAT_0_PERIPH_11_STAT_WIDTH      (1U)
#define MC_RGM_PSTAT_0_PERIPH_11_STAT(x)         (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_11_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_11_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_12_STAT_MASK       (0x1000U)
#define MC_RGM_PSTAT_0_PERIPH_12_STAT_SHIFT      (12U)
#define MC_RGM_PSTAT_0_PERIPH_12_STAT_WIDTH      (1U)
#define MC_RGM_PSTAT_0_PERIPH_12_STAT(x)         (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_12_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_12_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_13_STAT_MASK       (0x2000U)
#define MC_RGM_PSTAT_0_PERIPH_13_STAT_SHIFT      (13U)
#define MC_RGM_PSTAT_0_PERIPH_13_STAT_WIDTH      (1U)
#define MC_RGM_PSTAT_0_PERIPH_13_STAT(x)         (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_13_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_13_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_14_STAT_MASK       (0x4000U)
#define MC_RGM_PSTAT_0_PERIPH_14_STAT_SHIFT      (14U)
#define MC_RGM_PSTAT_0_PERIPH_14_STAT_WIDTH      (1U)
#define MC_RGM_PSTAT_0_PERIPH_14_STAT(x)         (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_14_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_14_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_15_STAT_MASK       (0x8000U)
#define MC_RGM_PSTAT_0_PERIPH_15_STAT_SHIFT      (15U)
#define MC_RGM_PSTAT_0_PERIPH_15_STAT_WIDTH      (1U)
#define MC_RGM_PSTAT_0_PERIPH_15_STAT(x)         (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_15_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_15_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_16_STAT_MASK       (0x10000U)
#define MC_RGM_PSTAT_0_PERIPH_16_STAT_SHIFT      (16U)
#define MC_RGM_PSTAT_0_PERIPH_16_STAT_WIDTH      (1U)
#define MC_RGM_PSTAT_0_PERIPH_16_STAT(x)         (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_16_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_16_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_17_STAT_MASK       (0x20000U)
#define MC_RGM_PSTAT_0_PERIPH_17_STAT_SHIFT      (17U)
#define MC_RGM_PSTAT_0_PERIPH_17_STAT_WIDTH      (1U)
#define MC_RGM_PSTAT_0_PERIPH_17_STAT(x)         (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_17_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_17_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_18_STAT_MASK       (0x40000U)
#define MC_RGM_PSTAT_0_PERIPH_18_STAT_SHIFT      (18U)
#define MC_RGM_PSTAT_0_PERIPH_18_STAT_WIDTH      (1U)
#define MC_RGM_PSTAT_0_PERIPH_18_STAT(x)         (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_18_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_18_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_19_STAT_MASK       (0x80000U)
#define MC_RGM_PSTAT_0_PERIPH_19_STAT_SHIFT      (19U)
#define MC_RGM_PSTAT_0_PERIPH_19_STAT_WIDTH      (1U)
#define MC_RGM_PSTAT_0_PERIPH_19_STAT(x)         (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_19_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_19_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_20_STAT_MASK       (0x100000U)
#define MC_RGM_PSTAT_0_PERIPH_20_STAT_SHIFT      (20U)
#define MC_RGM_PSTAT_0_PERIPH_20_STAT_WIDTH      (1U)
#define MC_RGM_PSTAT_0_PERIPH_20_STAT(x)         (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_20_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_20_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_21_STAT_MASK       (0x200000U)
#define MC_RGM_PSTAT_0_PERIPH_21_STAT_SHIFT      (21U)
#define MC_RGM_PSTAT_0_PERIPH_21_STAT_WIDTH      (1U)
#define MC_RGM_PSTAT_0_PERIPH_21_STAT(x)         (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_21_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_21_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_22_STAT_MASK       (0x400000U)
#define MC_RGM_PSTAT_0_PERIPH_22_STAT_SHIFT      (22U)
#define MC_RGM_PSTAT_0_PERIPH_22_STAT_WIDTH      (1U)
#define MC_RGM_PSTAT_0_PERIPH_22_STAT(x)         (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_22_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_22_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_23_STAT_MASK       (0x800000U)
#define MC_RGM_PSTAT_0_PERIPH_23_STAT_SHIFT      (23U)
#define MC_RGM_PSTAT_0_PERIPH_23_STAT_WIDTH      (1U)
#define MC_RGM_PSTAT_0_PERIPH_23_STAT(x)         (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_23_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_23_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_24_STAT_MASK       (0x1000000U)
#define MC_RGM_PSTAT_0_PERIPH_24_STAT_SHIFT      (24U)
#define MC_RGM_PSTAT_0_PERIPH_24_STAT_WIDTH      (1U)
#define MC_RGM_PSTAT_0_PERIPH_24_STAT(x)         (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_24_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_24_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_25_STAT_MASK       (0x2000000U)
#define MC_RGM_PSTAT_0_PERIPH_25_STAT_SHIFT      (25U)
#define MC_RGM_PSTAT_0_PERIPH_25_STAT_WIDTH      (1U)
#define MC_RGM_PSTAT_0_PERIPH_25_STAT(x)         (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_25_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_25_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_26_STAT_MASK       (0x4000000U)
#define MC_RGM_PSTAT_0_PERIPH_26_STAT_SHIFT      (26U)
#define MC_RGM_PSTAT_0_PERIPH_26_STAT_WIDTH      (1U)
#define MC_RGM_PSTAT_0_PERIPH_26_STAT(x)         (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_26_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_26_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_27_STAT_MASK       (0x8000000U)
#define MC_RGM_PSTAT_0_PERIPH_27_STAT_SHIFT      (27U)
#define MC_RGM_PSTAT_0_PERIPH_27_STAT_WIDTH      (1U)
#define MC_RGM_PSTAT_0_PERIPH_27_STAT(x)         (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_27_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_27_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_28_STAT_MASK       (0x10000000U)
#define MC_RGM_PSTAT_0_PERIPH_28_STAT_SHIFT      (28U)
#define MC_RGM_PSTAT_0_PERIPH_28_STAT_WIDTH      (1U)
#define MC_RGM_PSTAT_0_PERIPH_28_STAT(x)         (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_28_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_28_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_29_STAT_MASK       (0x20000000U)
#define MC_RGM_PSTAT_0_PERIPH_29_STAT_SHIFT      (29U)
#define MC_RGM_PSTAT_0_PERIPH_29_STAT_WIDTH      (1U)
#define MC_RGM_PSTAT_0_PERIPH_29_STAT(x)         (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_29_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_29_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_30_STAT_MASK       (0x40000000U)
#define MC_RGM_PSTAT_0_PERIPH_30_STAT_SHIFT      (30U)
#define MC_RGM_PSTAT_0_PERIPH_30_STAT_WIDTH      (1U)
#define MC_RGM_PSTAT_0_PERIPH_30_STAT(x)         (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_30_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_30_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_31_STAT_MASK       (0x80000000U)
#define MC_RGM_PSTAT_0_PERIPH_31_STAT_SHIFT      (31U)
#define MC_RGM_PSTAT_0_PERIPH_31_STAT_WIDTH      (1U)
#define MC_RGM_PSTAT_0_PERIPH_31_STAT(x)         (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_31_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_31_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_64_STAT_MASK       (0x1U)
#define MC_RGM_PSTAT_0_PERIPH_64_STAT_SHIFT      (0U)
#define MC_RGM_PSTAT_0_PERIPH_64_STAT_WIDTH      (1U)
#define MC_RGM_PSTAT_0_PERIPH_64_STAT(x)         (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_64_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_64_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_65_STAT_MASK       (0x2U)
#define MC_RGM_PSTAT_0_PERIPH_65_STAT_SHIFT      (1U)
#define MC_RGM_PSTAT_0_PERIPH_65_STAT_WIDTH      (1U)
#define MC_RGM_PSTAT_0_PERIPH_65_STAT(x)         (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_65_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_65_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_66_STAT_MASK       (0x4U)
#define MC_RGM_PSTAT_0_PERIPH_66_STAT_SHIFT      (2U)
#define MC_RGM_PSTAT_0_PERIPH_66_STAT_WIDTH      (1U)
#define MC_RGM_PSTAT_0_PERIPH_66_STAT(x)         (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_66_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_66_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_67_STAT_MASK       (0x8U)
#define MC_RGM_PSTAT_0_PERIPH_67_STAT_SHIFT      (3U)
#define MC_RGM_PSTAT_0_PERIPH_67_STAT_WIDTH      (1U)
#define MC_RGM_PSTAT_0_PERIPH_67_STAT(x)         (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_67_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_67_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_68_STAT_MASK       (0x10U)
#define MC_RGM_PSTAT_0_PERIPH_68_STAT_SHIFT      (4U)
#define MC_RGM_PSTAT_0_PERIPH_68_STAT_WIDTH      (1U)
#define MC_RGM_PSTAT_0_PERIPH_68_STAT(x)         (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_68_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_68_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_128_STAT_MASK      (0x1U)
#define MC_RGM_PSTAT_0_PERIPH_128_STAT_SHIFT     (0U)
#define MC_RGM_PSTAT_0_PERIPH_128_STAT_WIDTH     (1U)
#define MC_RGM_PSTAT_0_PERIPH_128_STAT(x)        (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_128_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_128_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_129_STAT_MASK      (0x2U)
#define MC_RGM_PSTAT_0_PERIPH_129_STAT_SHIFT     (1U)
#define MC_RGM_PSTAT_0_PERIPH_129_STAT_WIDTH     (1U)
#define MC_RGM_PSTAT_0_PERIPH_129_STAT(x)        (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_129_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_129_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_130_STAT_MASK      (0x4U)
#define MC_RGM_PSTAT_0_PERIPH_130_STAT_SHIFT     (2U)
#define MC_RGM_PSTAT_0_PERIPH_130_STAT_WIDTH     (1U)
#define MC_RGM_PSTAT_0_PERIPH_130_STAT(x)        (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_130_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_130_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_131_STAT_MASK      (0x8U)
#define MC_RGM_PSTAT_0_PERIPH_131_STAT_SHIFT     (3U)
#define MC_RGM_PSTAT_0_PERIPH_131_STAT_WIDTH     (1U)
#define MC_RGM_PSTAT_0_PERIPH_131_STAT(x)        (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_131_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_131_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_132_STAT_MASK      (0x10U)
#define MC_RGM_PSTAT_0_PERIPH_132_STAT_SHIFT     (4U)
#define MC_RGM_PSTAT_0_PERIPH_132_STAT_WIDTH     (1U)
#define MC_RGM_PSTAT_0_PERIPH_132_STAT(x)        (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_132_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_132_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_133_STAT_MASK      (0x20U)
#define MC_RGM_PSTAT_0_PERIPH_133_STAT_SHIFT     (5U)
#define MC_RGM_PSTAT_0_PERIPH_133_STAT_WIDTH     (1U)
#define MC_RGM_PSTAT_0_PERIPH_133_STAT(x)        (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_133_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_133_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_134_STAT_MASK      (0x40U)
#define MC_RGM_PSTAT_0_PERIPH_134_STAT_SHIFT     (6U)
#define MC_RGM_PSTAT_0_PERIPH_134_STAT_WIDTH     (1U)
#define MC_RGM_PSTAT_0_PERIPH_134_STAT(x)        (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_134_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_134_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_135_STAT_MASK      (0x80U)
#define MC_RGM_PSTAT_0_PERIPH_135_STAT_SHIFT     (7U)
#define MC_RGM_PSTAT_0_PERIPH_135_STAT_WIDTH     (1U)
#define MC_RGM_PSTAT_0_PERIPH_135_STAT(x)        (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_135_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_135_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_136_STAT_MASK      (0x100U)
#define MC_RGM_PSTAT_0_PERIPH_136_STAT_SHIFT     (8U)
#define MC_RGM_PSTAT_0_PERIPH_136_STAT_WIDTH     (1U)
#define MC_RGM_PSTAT_0_PERIPH_136_STAT(x)        (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_136_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_136_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_192_STAT_MASK      (0x1U)
#define MC_RGM_PSTAT_0_PERIPH_192_STAT_SHIFT     (0U)
#define MC_RGM_PSTAT_0_PERIPH_192_STAT_WIDTH     (1U)
#define MC_RGM_PSTAT_0_PERIPH_192_STAT(x)        (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_192_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_192_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_193_STAT_MASK      (0x2U)
#define MC_RGM_PSTAT_0_PERIPH_193_STAT_SHIFT     (1U)
#define MC_RGM_PSTAT_0_PERIPH_193_STAT_WIDTH     (1U)
#define MC_RGM_PSTAT_0_PERIPH_193_STAT(x)        (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_193_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_193_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_194_STAT_MASK      (0x4U)
#define MC_RGM_PSTAT_0_PERIPH_194_STAT_SHIFT     (2U)
#define MC_RGM_PSTAT_0_PERIPH_194_STAT_WIDTH     (1U)
#define MC_RGM_PSTAT_0_PERIPH_194_STAT(x)        (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_194_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_194_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_195_STAT_MASK      (0x8U)
#define MC_RGM_PSTAT_0_PERIPH_195_STAT_SHIFT     (3U)
#define MC_RGM_PSTAT_0_PERIPH_195_STAT_WIDTH     (1U)
#define MC_RGM_PSTAT_0_PERIPH_195_STAT(x)        (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_195_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_195_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_196_STAT_MASK      (0x10U)
#define MC_RGM_PSTAT_0_PERIPH_196_STAT_SHIFT     (4U)
#define MC_RGM_PSTAT_0_PERIPH_196_STAT_WIDTH     (1U)
#define MC_RGM_PSTAT_0_PERIPH_196_STAT(x)        (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_196_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_196_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_197_STAT_MASK      (0x20U)
#define MC_RGM_PSTAT_0_PERIPH_197_STAT_SHIFT     (5U)
#define MC_RGM_PSTAT_0_PERIPH_197_STAT_WIDTH     (1U)
#define MC_RGM_PSTAT_0_PERIPH_197_STAT(x)        (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_197_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_197_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_198_STAT_MASK      (0x40U)
#define MC_RGM_PSTAT_0_PERIPH_198_STAT_SHIFT     (6U)
#define MC_RGM_PSTAT_0_PERIPH_198_STAT_WIDTH     (1U)
#define MC_RGM_PSTAT_0_PERIPH_198_STAT(x)        (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_198_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_198_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_199_STAT_MASK      (0x80U)
#define MC_RGM_PSTAT_0_PERIPH_199_STAT_SHIFT     (7U)
#define MC_RGM_PSTAT_0_PERIPH_199_STAT_WIDTH     (1U)
#define MC_RGM_PSTAT_0_PERIPH_199_STAT(x)        (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_199_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_199_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_200_STAT_MASK      (0x100U)
#define MC_RGM_PSTAT_0_PERIPH_200_STAT_SHIFT     (8U)
#define MC_RGM_PSTAT_0_PERIPH_200_STAT_WIDTH     (1U)
#define MC_RGM_PSTAT_0_PERIPH_200_STAT(x)        (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_200_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_200_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_256_STAT_MASK      (0x1U)
#define MC_RGM_PSTAT_0_PERIPH_256_STAT_SHIFT     (0U)
#define MC_RGM_PSTAT_0_PERIPH_256_STAT_WIDTH     (1U)
#define MC_RGM_PSTAT_0_PERIPH_256_STAT(x)        (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_256_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_256_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_257_STAT_MASK      (0x2U)
#define MC_RGM_PSTAT_0_PERIPH_257_STAT_SHIFT     (1U)
#define MC_RGM_PSTAT_0_PERIPH_257_STAT_WIDTH     (1U)
#define MC_RGM_PSTAT_0_PERIPH_257_STAT(x)        (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_257_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_257_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_258_STAT_MASK      (0x4U)
#define MC_RGM_PSTAT_0_PERIPH_258_STAT_SHIFT     (2U)
#define MC_RGM_PSTAT_0_PERIPH_258_STAT_WIDTH     (1U)
#define MC_RGM_PSTAT_0_PERIPH_258_STAT(x)        (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_258_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_258_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_259_STAT_MASK      (0x8U)
#define MC_RGM_PSTAT_0_PERIPH_259_STAT_SHIFT     (3U)
#define MC_RGM_PSTAT_0_PERIPH_259_STAT_WIDTH     (1U)
#define MC_RGM_PSTAT_0_PERIPH_259_STAT(x)        (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_259_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_259_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_260_STAT_MASK      (0x10U)
#define MC_RGM_PSTAT_0_PERIPH_260_STAT_SHIFT     (4U)
#define MC_RGM_PSTAT_0_PERIPH_260_STAT_WIDTH     (1U)
#define MC_RGM_PSTAT_0_PERIPH_260_STAT(x)        (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_260_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_260_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_261_STAT_MASK      (0x20U)
#define MC_RGM_PSTAT_0_PERIPH_261_STAT_SHIFT     (5U)
#define MC_RGM_PSTAT_0_PERIPH_261_STAT_WIDTH     (1U)
#define MC_RGM_PSTAT_0_PERIPH_261_STAT(x)        (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_261_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_261_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_262_STAT_MASK      (0x40U)
#define MC_RGM_PSTAT_0_PERIPH_262_STAT_SHIFT     (6U)
#define MC_RGM_PSTAT_0_PERIPH_262_STAT_WIDTH     (1U)
#define MC_RGM_PSTAT_0_PERIPH_262_STAT(x)        (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_262_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_262_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_263_STAT_MASK      (0x80U)
#define MC_RGM_PSTAT_0_PERIPH_263_STAT_SHIFT     (7U)
#define MC_RGM_PSTAT_0_PERIPH_263_STAT_WIDTH     (1U)
#define MC_RGM_PSTAT_0_PERIPH_263_STAT(x)        (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_263_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_263_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_264_STAT_MASK      (0x100U)
#define MC_RGM_PSTAT_0_PERIPH_264_STAT_SHIFT     (8U)
#define MC_RGM_PSTAT_0_PERIPH_264_STAT_WIDTH     (1U)
#define MC_RGM_PSTAT_0_PERIPH_264_STAT(x)        (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_264_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_264_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_320_STAT_MASK      (0x1U)
#define MC_RGM_PSTAT_0_PERIPH_320_STAT_SHIFT     (0U)
#define MC_RGM_PSTAT_0_PERIPH_320_STAT_WIDTH     (1U)
#define MC_RGM_PSTAT_0_PERIPH_320_STAT(x)        (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_320_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_320_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_321_STAT_MASK      (0x2U)
#define MC_RGM_PSTAT_0_PERIPH_321_STAT_SHIFT     (1U)
#define MC_RGM_PSTAT_0_PERIPH_321_STAT_WIDTH     (1U)
#define MC_RGM_PSTAT_0_PERIPH_321_STAT(x)        (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_321_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_321_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_322_STAT_MASK      (0x4U)
#define MC_RGM_PSTAT_0_PERIPH_322_STAT_SHIFT     (2U)
#define MC_RGM_PSTAT_0_PERIPH_322_STAT_WIDTH     (1U)
#define MC_RGM_PSTAT_0_PERIPH_322_STAT(x)        (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_322_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_322_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_323_STAT_MASK      (0x8U)
#define MC_RGM_PSTAT_0_PERIPH_323_STAT_SHIFT     (3U)
#define MC_RGM_PSTAT_0_PERIPH_323_STAT_WIDTH     (1U)
#define MC_RGM_PSTAT_0_PERIPH_323_STAT(x)        (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_323_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_323_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_324_STAT_MASK      (0x10U)
#define MC_RGM_PSTAT_0_PERIPH_324_STAT_SHIFT     (4U)
#define MC_RGM_PSTAT_0_PERIPH_324_STAT_WIDTH     (1U)
#define MC_RGM_PSTAT_0_PERIPH_324_STAT(x)        (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_324_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_324_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_325_STAT_MASK      (0x20U)
#define MC_RGM_PSTAT_0_PERIPH_325_STAT_SHIFT     (5U)
#define MC_RGM_PSTAT_0_PERIPH_325_STAT_WIDTH     (1U)
#define MC_RGM_PSTAT_0_PERIPH_325_STAT(x)        (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_325_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_325_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_326_STAT_MASK      (0x40U)
#define MC_RGM_PSTAT_0_PERIPH_326_STAT_SHIFT     (6U)
#define MC_RGM_PSTAT_0_PERIPH_326_STAT_WIDTH     (1U)
#define MC_RGM_PSTAT_0_PERIPH_326_STAT(x)        (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_326_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_326_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_327_STAT_MASK      (0x80U)
#define MC_RGM_PSTAT_0_PERIPH_327_STAT_SHIFT     (7U)
#define MC_RGM_PSTAT_0_PERIPH_327_STAT_WIDTH     (1U)
#define MC_RGM_PSTAT_0_PERIPH_327_STAT(x)        (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_327_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_327_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_328_STAT_MASK      (0x100U)
#define MC_RGM_PSTAT_0_PERIPH_328_STAT_SHIFT     (8U)
#define MC_RGM_PSTAT_0_PERIPH_328_STAT_WIDTH     (1U)
#define MC_RGM_PSTAT_0_PERIPH_328_STAT(x)        (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_328_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_328_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_384_STAT_MASK      (0x1U)
#define MC_RGM_PSTAT_0_PERIPH_384_STAT_SHIFT     (0U)
#define MC_RGM_PSTAT_0_PERIPH_384_STAT_WIDTH     (1U)
#define MC_RGM_PSTAT_0_PERIPH_384_STAT(x)        (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_384_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_384_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_385_STAT_MASK      (0x2U)
#define MC_RGM_PSTAT_0_PERIPH_385_STAT_SHIFT     (1U)
#define MC_RGM_PSTAT_0_PERIPH_385_STAT_WIDTH     (1U)
#define MC_RGM_PSTAT_0_PERIPH_385_STAT(x)        (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_385_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_385_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_386_STAT_MASK      (0x4U)
#define MC_RGM_PSTAT_0_PERIPH_386_STAT_SHIFT     (2U)
#define MC_RGM_PSTAT_0_PERIPH_386_STAT_WIDTH     (1U)
#define MC_RGM_PSTAT_0_PERIPH_386_STAT(x)        (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_386_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_386_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_387_STAT_MASK      (0x8U)
#define MC_RGM_PSTAT_0_PERIPH_387_STAT_SHIFT     (3U)
#define MC_RGM_PSTAT_0_PERIPH_387_STAT_WIDTH     (1U)
#define MC_RGM_PSTAT_0_PERIPH_387_STAT(x)        (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_387_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_387_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_388_STAT_MASK      (0x10U)
#define MC_RGM_PSTAT_0_PERIPH_388_STAT_SHIFT     (4U)
#define MC_RGM_PSTAT_0_PERIPH_388_STAT_WIDTH     (1U)
#define MC_RGM_PSTAT_0_PERIPH_388_STAT(x)        (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_388_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_388_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_389_STAT_MASK      (0x20U)
#define MC_RGM_PSTAT_0_PERIPH_389_STAT_SHIFT     (5U)
#define MC_RGM_PSTAT_0_PERIPH_389_STAT_WIDTH     (1U)
#define MC_RGM_PSTAT_0_PERIPH_389_STAT(x)        (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_389_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_389_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_390_STAT_MASK      (0x40U)
#define MC_RGM_PSTAT_0_PERIPH_390_STAT_SHIFT     (6U)
#define MC_RGM_PSTAT_0_PERIPH_390_STAT_WIDTH     (1U)
#define MC_RGM_PSTAT_0_PERIPH_390_STAT(x)        (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_390_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_390_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_391_STAT_MASK      (0x80U)
#define MC_RGM_PSTAT_0_PERIPH_391_STAT_SHIFT     (7U)
#define MC_RGM_PSTAT_0_PERIPH_391_STAT_WIDTH     (1U)
#define MC_RGM_PSTAT_0_PERIPH_391_STAT(x)        (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_391_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_391_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_392_STAT_MASK      (0x100U)
#define MC_RGM_PSTAT_0_PERIPH_392_STAT_SHIFT     (8U)
#define MC_RGM_PSTAT_0_PERIPH_392_STAT_WIDTH     (1U)
#define MC_RGM_PSTAT_0_PERIPH_392_STAT(x)        (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_392_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_392_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_448_STAT_MASK      (0x1U)
#define MC_RGM_PSTAT_0_PERIPH_448_STAT_SHIFT     (0U)
#define MC_RGM_PSTAT_0_PERIPH_448_STAT_WIDTH     (1U)
#define MC_RGM_PSTAT_0_PERIPH_448_STAT(x)        (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_448_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_448_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_449_STAT_MASK      (0x2U)
#define MC_RGM_PSTAT_0_PERIPH_449_STAT_SHIFT     (1U)
#define MC_RGM_PSTAT_0_PERIPH_449_STAT_WIDTH     (1U)
#define MC_RGM_PSTAT_0_PERIPH_449_STAT(x)        (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_449_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_449_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_450_STAT_MASK      (0x4U)
#define MC_RGM_PSTAT_0_PERIPH_450_STAT_SHIFT     (2U)
#define MC_RGM_PSTAT_0_PERIPH_450_STAT_WIDTH     (1U)
#define MC_RGM_PSTAT_0_PERIPH_450_STAT(x)        (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_450_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_450_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_451_STAT_MASK      (0x8U)
#define MC_RGM_PSTAT_0_PERIPH_451_STAT_SHIFT     (3U)
#define MC_RGM_PSTAT_0_PERIPH_451_STAT_WIDTH     (1U)
#define MC_RGM_PSTAT_0_PERIPH_451_STAT(x)        (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_451_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_451_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_452_STAT_MASK      (0x10U)
#define MC_RGM_PSTAT_0_PERIPH_452_STAT_SHIFT     (4U)
#define MC_RGM_PSTAT_0_PERIPH_452_STAT_WIDTH     (1U)
#define MC_RGM_PSTAT_0_PERIPH_452_STAT(x)        (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_452_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_452_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_453_STAT_MASK      (0x20U)
#define MC_RGM_PSTAT_0_PERIPH_453_STAT_SHIFT     (5U)
#define MC_RGM_PSTAT_0_PERIPH_453_STAT_WIDTH     (1U)
#define MC_RGM_PSTAT_0_PERIPH_453_STAT(x)        (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_453_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_453_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_454_STAT_MASK      (0x40U)
#define MC_RGM_PSTAT_0_PERIPH_454_STAT_SHIFT     (6U)
#define MC_RGM_PSTAT_0_PERIPH_454_STAT_WIDTH     (1U)
#define MC_RGM_PSTAT_0_PERIPH_454_STAT(x)        (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_454_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_454_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_455_STAT_MASK      (0x80U)
#define MC_RGM_PSTAT_0_PERIPH_455_STAT_SHIFT     (7U)
#define MC_RGM_PSTAT_0_PERIPH_455_STAT_WIDTH     (1U)
#define MC_RGM_PSTAT_0_PERIPH_455_STAT(x)        (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_455_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_455_STAT_MASK)
#define MC_RGM_PSTAT_0_PERIPH_456_STAT_MASK      (0x100U)
#define MC_RGM_PSTAT_0_PERIPH_456_STAT_SHIFT     (8U)
#define MC_RGM_PSTAT_0_PERIPH_456_STAT_WIDTH     (1U)
#define MC_RGM_PSTAT_0_PERIPH_456_STAT(x)        (((uint32_t)(((uint32_t)(x)) << MC_RGM_PSTAT_0_PERIPH_456_STAT_SHIFT)) & MC_RGM_PSTAT_0_PERIPH_456_STAT_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group MC_RGM_Register_Masks */


/*!
 * @}
 */ /* end of group MC_RGM_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- MDM_AP Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup MDM_AP_Peripheral_Access_Layer MDM_AP Peripheral Access Layer
 * @{
 */

/** MDM_AP - Register Layout Typedef */
typedef struct {
  __I  uint32_t STATUS;                            /**< MDM_AP status, offset: 0x0 */
  __IO uint32_t CONTROL;                           /**< MDM_AP control, offset: 0x4 */
  uint8_t RESERVED_0[40];
  __IO uint32_t WIR_EN;                            /**< WIR enable, offset: 0x30 */
  uint8_t RESERVED_1[4];
  __IO uint32_t WIR_REL;                           /**< WIR release, offset: 0x38 */
  uint8_t RESERVED_2[4];
  __I  uint32_t STATUS2;                           /**< MDM_AP status 2, offset: 0x40 */
  uint8_t RESERVED_3[44];
  __IO uint32_t CORTEX_A53_A0_IP_DBG;              /**< Cortex-A53 A0 debug, offset: 0x70 */
  __IO uint32_t CONTROL2;                          /**< MDM_AP control 2, offset: 0x74 */
  __IO uint32_t CA53_A1_IP_DBG;                    /**< Cortex-A53 A1 debug, offset: 0x78 */
  uint8_t RESERVED_4[4];
  __IO uint32_t CORTEX_A53_B0_IP_DBG;              /**< Cortex-A53 B0 debug, offset: 0x80 */
  uint8_t RESERVED_5[4];
  __IO uint32_t CORTEX_A53_B1_IP_DBG;              /**< Cortex-A53 B1 debug, offset: 0x88 */
  uint8_t RESERVED_6[4];
  __IO uint32_t CORTEX_M7_0_IP_DBG;                /**< Cortex M7_0 debug, offset: 0x90 */
  uint8_t RESERVED_7[4];
  __IO uint32_t CORTEX_M7_1_IP_DBG;                /**< Cortex M7_1 debug, offset: 0x98 */
  uint8_t RESERVED_8[4];
  __IO uint32_t CORTEX_M7_2_IP_DBG;                /**< Cortex M7_2 debug, offset: 0xA0 */
  uint8_t RESERVED_9[28];
  __IO uint32_t DAP_EN_CTRL;                       /**< DAP enable control, offset: 0xC0 */
} MDM_AP_Type, *MDM_AP_MemMapPtr;

/** Number of instances of the MDM_AP module. */
#define MDM_AP_INSTANCE_COUNT                    (1u)

/* MDM_AP - Peripheral instance base addresses */
/** Peripheral MDM_AP base address */
#define MDM_AP_BASE                              (0x51D00600u)
/** Peripheral MDM_AP base pointer */
#define MDM_AP                                   ((MDM_AP_Type *)MDM_AP_BASE)
/** Array initializer of MDM_AP peripheral base addresses */
#define MDM_AP_BASE_ADDRS                        { MDM_AP_BASE }
/** Array initializer of MDM_AP peripheral base pointers */
#define MDM_AP_BASE_PTRS                         { MDM_AP }

/* ----------------------------------------------------------------------------
   -- MDM_AP Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup MDM_AP_Register_Masks MDM_AP Register Masks
 * @{
 */

/*! @name STATUS - MDM_AP status */
/*! @{ */
#define MDM_AP_STATUS_SYSTEM_RESET_MASK          (0x4U)
#define MDM_AP_STATUS_SYSTEM_RESET_SHIFT         (2U)
#define MDM_AP_STATUS_SYSTEM_RESET_WIDTH         (1U)
#define MDM_AP_STATUS_SYSTEM_RESET(x)            (((uint32_t)(((uint32_t)(x)) << MDM_AP_STATUS_SYSTEM_RESET_SHIFT)) & MDM_AP_STATUS_SYSTEM_RESET_MASK)
#define MDM_AP_STATUS_READY_FOR_DBG_MASK         (0x20U)
#define MDM_AP_STATUS_READY_FOR_DBG_SHIFT        (5U)
#define MDM_AP_STATUS_READY_FOR_DBG_WIDTH        (1U)
#define MDM_AP_STATUS_READY_FOR_DBG(x)           (((uint32_t)(((uint32_t)(x)) << MDM_AP_STATUS_READY_FOR_DBG_SHIFT)) & MDM_AP_STATUS_READY_FOR_DBG_MASK)
#define MDM_AP_STATUS_CSYSPWRUPREQ_MASK          (0x40U)
#define MDM_AP_STATUS_CSYSPWRUPREQ_SHIFT         (6U)
#define MDM_AP_STATUS_CSYSPWRUPREQ_WIDTH         (1U)
#define MDM_AP_STATUS_CSYSPWRUPREQ(x)            (((uint32_t)(((uint32_t)(x)) << MDM_AP_STATUS_CSYSPWRUPREQ_SHIFT)) & MDM_AP_STATUS_CSYSPWRUPREQ_MASK)
#define MDM_AP_STATUS_CDBGPWRUPREQ_MASK          (0x80U)
#define MDM_AP_STATUS_CDBGPWRUPREQ_SHIFT         (7U)
#define MDM_AP_STATUS_CDBGPWRUPREQ_WIDTH         (1U)
#define MDM_AP_STATUS_CDBGPWRUPREQ(x)            (((uint32_t)(((uint32_t)(x)) << MDM_AP_STATUS_CDBGPWRUPREQ_SHIFT)) & MDM_AP_STATUS_CDBGPWRUPREQ_MASK)
#define MDM_AP_STATUS_JTAG_ACTIVE_MASK           (0x100U)
#define MDM_AP_STATUS_JTAG_ACTIVE_SHIFT          (8U)
#define MDM_AP_STATUS_JTAG_ACTIVE_WIDTH          (1U)
#define MDM_AP_STATUS_JTAG_ACTIVE(x)             (((uint32_t)(((uint32_t)(x)) << MDM_AP_STATUS_JTAG_ACTIVE_SHIFT)) & MDM_AP_STATUS_JTAG_ACTIVE_MASK)
#define MDM_AP_STATUS_CM7_0_HALTED_MASK          (0x1000U)
#define MDM_AP_STATUS_CM7_0_HALTED_SHIFT         (12U)
#define MDM_AP_STATUS_CM7_0_HALTED_WIDTH         (1U)
#define MDM_AP_STATUS_CM7_0_HALTED(x)            (((uint32_t)(((uint32_t)(x)) << MDM_AP_STATUS_CM7_0_HALTED_SHIFT)) & MDM_AP_STATUS_CM7_0_HALTED_MASK)
#define MDM_AP_STATUS_CM7_1_HALTED_MASK          (0x2000U)
#define MDM_AP_STATUS_CM7_1_HALTED_SHIFT         (13U)
#define MDM_AP_STATUS_CM7_1_HALTED_WIDTH         (1U)
#define MDM_AP_STATUS_CM7_1_HALTED(x)            (((uint32_t)(((uint32_t)(x)) << MDM_AP_STATUS_CM7_1_HALTED_SHIFT)) & MDM_AP_STATUS_CM7_1_HALTED_MASK)
#define MDM_AP_STATUS_CM7_2_HALTED_MASK          (0x4000U)
#define MDM_AP_STATUS_CM7_2_HALTED_SHIFT         (14U)
#define MDM_AP_STATUS_CM7_2_HALTED_WIDTH         (1U)
#define MDM_AP_STATUS_CM7_2_HALTED(x)            (((uint32_t)(((uint32_t)(x)) << MDM_AP_STATUS_CM7_2_HALTED_SHIFT)) & MDM_AP_STATUS_CM7_2_HALTED_MASK)
#define MDM_AP_STATUS_CM7_0_SLEEPDEEP_MASK       (0x10000U)
#define MDM_AP_STATUS_CM7_0_SLEEPDEEP_SHIFT      (16U)
#define MDM_AP_STATUS_CM7_0_SLEEPDEEP_WIDTH      (1U)
#define MDM_AP_STATUS_CM7_0_SLEEPDEEP(x)         (((uint32_t)(((uint32_t)(x)) << MDM_AP_STATUS_CM7_0_SLEEPDEEP_SHIFT)) & MDM_AP_STATUS_CM7_0_SLEEPDEEP_MASK)
#define MDM_AP_STATUS_CM7_1_SLEEPDEEP_MASK       (0x20000U)
#define MDM_AP_STATUS_CM7_1_SLEEPDEEP_SHIFT      (17U)
#define MDM_AP_STATUS_CM7_1_SLEEPDEEP_WIDTH      (1U)
#define MDM_AP_STATUS_CM7_1_SLEEPDEEP(x)         (((uint32_t)(((uint32_t)(x)) << MDM_AP_STATUS_CM7_1_SLEEPDEEP_SHIFT)) & MDM_AP_STATUS_CM7_1_SLEEPDEEP_MASK)
#define MDM_AP_STATUS_CM7_2_SLEEPDEEP_MASK       (0x40000U)
#define MDM_AP_STATUS_CM7_2_SLEEPDEEP_SHIFT      (18U)
#define MDM_AP_STATUS_CM7_2_SLEEPDEEP_WIDTH      (1U)
#define MDM_AP_STATUS_CM7_2_SLEEPDEEP(x)         (((uint32_t)(((uint32_t)(x)) << MDM_AP_STATUS_CM7_2_SLEEPDEEP_SHIFT)) & MDM_AP_STATUS_CM7_2_SLEEPDEEP_MASK)
#define MDM_AP_STATUS_CM7_0_SLEEPING_MASK        (0x100000U)
#define MDM_AP_STATUS_CM7_0_SLEEPING_SHIFT       (20U)
#define MDM_AP_STATUS_CM7_0_SLEEPING_WIDTH       (1U)
#define MDM_AP_STATUS_CM7_0_SLEEPING(x)          (((uint32_t)(((uint32_t)(x)) << MDM_AP_STATUS_CM7_0_SLEEPING_SHIFT)) & MDM_AP_STATUS_CM7_0_SLEEPING_MASK)
#define MDM_AP_STATUS_CM7_1_SLEEPING_MASK        (0x200000U)
#define MDM_AP_STATUS_CM7_1_SLEEPING_SHIFT       (21U)
#define MDM_AP_STATUS_CM7_1_SLEEPING_WIDTH       (1U)
#define MDM_AP_STATUS_CM7_1_SLEEPING(x)          (((uint32_t)(((uint32_t)(x)) << MDM_AP_STATUS_CM7_1_SLEEPING_SHIFT)) & MDM_AP_STATUS_CM7_1_SLEEPING_MASK)
#define MDM_AP_STATUS_CM7_2_SLEEPING_MASK        (0x400000U)
#define MDM_AP_STATUS_CM7_2_SLEEPING_SHIFT       (22U)
#define MDM_AP_STATUS_CM7_2_SLEEPING_WIDTH       (1U)
#define MDM_AP_STATUS_CM7_2_SLEEPING(x)          (((uint32_t)(((uint32_t)(x)) << MDM_AP_STATUS_CM7_2_SLEEPING_SHIFT)) & MDM_AP_STATUS_CM7_2_SLEEPING_MASK)
#define MDM_AP_STATUS_M7_0_DBGRSTRTD_MASK        (0x10000000U)
#define MDM_AP_STATUS_M7_0_DBGRSTRTD_SHIFT       (28U)
#define MDM_AP_STATUS_M7_0_DBGRSTRTD_WIDTH       (1U)
#define MDM_AP_STATUS_M7_0_DBGRSTRTD(x)          (((uint32_t)(((uint32_t)(x)) << MDM_AP_STATUS_M7_0_DBGRSTRTD_SHIFT)) & MDM_AP_STATUS_M7_0_DBGRSTRTD_MASK)
#define MDM_AP_STATUS_M7_1_DBGRSTRTD_MASK        (0x20000000U)
#define MDM_AP_STATUS_M7_1_DBGRSTRTD_SHIFT       (29U)
#define MDM_AP_STATUS_M7_1_DBGRSTRTD_WIDTH       (1U)
#define MDM_AP_STATUS_M7_1_DBGRSTRTD(x)          (((uint32_t)(((uint32_t)(x)) << MDM_AP_STATUS_M7_1_DBGRSTRTD_SHIFT)) & MDM_AP_STATUS_M7_1_DBGRSTRTD_MASK)
#define MDM_AP_STATUS_M7_2_DBGRSTRTD_MASK        (0x40000000U)
#define MDM_AP_STATUS_M7_2_DBGRSTRTD_SHIFT       (30U)
#define MDM_AP_STATUS_M7_2_DBGRSTRTD_WIDTH       (1U)
#define MDM_AP_STATUS_M7_2_DBGRSTRTD(x)          (((uint32_t)(((uint32_t)(x)) << MDM_AP_STATUS_M7_2_DBGRSTRTD_SHIFT)) & MDM_AP_STATUS_M7_2_DBGRSTRTD_MASK)
/*! @} */

/*! @name CONTROL - MDM_AP control */
/*! @{ */
#define MDM_AP_CONTROL_DBG_SETUP_DONE_MASK       (0x8U)
#define MDM_AP_CONTROL_DBG_SETUP_DONE_SHIFT      (3U)
#define MDM_AP_CONTROL_DBG_SETUP_DONE_WIDTH      (1U)
#define MDM_AP_CONTROL_DBG_SETUP_DONE(x)         (((uint32_t)(((uint32_t)(x)) << MDM_AP_CONTROL_DBG_SETUP_DONE_SHIFT)) & MDM_AP_CONTROL_DBG_SETUP_DONE_MASK)
#define MDM_AP_CONTROL_SYSRESETREQ_MASK          (0x10U)
#define MDM_AP_CONTROL_SYSRESETREQ_SHIFT         (4U)
#define MDM_AP_CONTROL_SYSRESETREQ_WIDTH         (1U)
#define MDM_AP_CONTROL_SYSRESETREQ(x)            (((uint32_t)(((uint32_t)(x)) << MDM_AP_CONTROL_SYSRESETREQ_SHIFT)) & MDM_AP_CONTROL_SYSRESETREQ_MASK)
#define MDM_AP_CONTROL_SYSFUNCRST_MASK           (0x20U)
#define MDM_AP_CONTROL_SYSFUNCRST_SHIFT          (5U)
#define MDM_AP_CONTROL_SYSFUNCRST_WIDTH          (1U)
#define MDM_AP_CONTROL_SYSFUNCRST(x)             (((uint32_t)(((uint32_t)(x)) << MDM_AP_CONTROL_SYSFUNCRST_SHIFT)) & MDM_AP_CONTROL_SYSFUNCRST_MASK)
#define MDM_AP_CONTROL_ETR_HANDSHAKE_0_MASK      (0x40U)
#define MDM_AP_CONTROL_ETR_HANDSHAKE_0_SHIFT     (6U)
#define MDM_AP_CONTROL_ETR_HANDSHAKE_0_WIDTH     (1U)
#define MDM_AP_CONTROL_ETR_HANDSHAKE_0(x)        (((uint32_t)(((uint32_t)(x)) << MDM_AP_CONTROL_ETR_HANDSHAKE_0_SHIFT)) & MDM_AP_CONTROL_ETR_HANDSHAKE_0_MASK)
#define MDM_AP_CONTROL_ETR_HANDSHAKE_1_MASK      (0x80U)
#define MDM_AP_CONTROL_ETR_HANDSHAKE_1_SHIFT     (7U)
#define MDM_AP_CONTROL_ETR_HANDSHAKE_1_WIDTH     (1U)
#define MDM_AP_CONTROL_ETR_HANDSHAKE_1(x)        (((uint32_t)(((uint32_t)(x)) << MDM_AP_CONTROL_ETR_HANDSHAKE_1_SHIFT)) & MDM_AP_CONTROL_ETR_HANDSHAKE_1_MASK)
#define MDM_AP_CONTROL_CM7_0_EDBGREQ_MASK        (0x100U)
#define MDM_AP_CONTROL_CM7_0_EDBGREQ_SHIFT       (8U)
#define MDM_AP_CONTROL_CM7_0_EDBGREQ_WIDTH       (1U)
#define MDM_AP_CONTROL_CM7_0_EDBGREQ(x)          (((uint32_t)(((uint32_t)(x)) << MDM_AP_CONTROL_CM7_0_EDBGREQ_SHIFT)) & MDM_AP_CONTROL_CM7_0_EDBGREQ_MASK)
#define MDM_AP_CONTROL_CM7_1_EDBGREQ_MASK        (0x200U)
#define MDM_AP_CONTROL_CM7_1_EDBGREQ_SHIFT       (9U)
#define MDM_AP_CONTROL_CM7_1_EDBGREQ_WIDTH       (1U)
#define MDM_AP_CONTROL_CM7_1_EDBGREQ(x)          (((uint32_t)(((uint32_t)(x)) << MDM_AP_CONTROL_CM7_1_EDBGREQ_SHIFT)) & MDM_AP_CONTROL_CM7_1_EDBGREQ_MASK)
#define MDM_AP_CONTROL_CM7_2_EDBGREQ_MASK        (0x400U)
#define MDM_AP_CONTROL_CM7_2_EDBGREQ_SHIFT       (10U)
#define MDM_AP_CONTROL_CM7_2_EDBGREQ_WIDTH       (1U)
#define MDM_AP_CONTROL_CM7_2_EDBGREQ(x)          (((uint32_t)(((uint32_t)(x)) << MDM_AP_CONTROL_CM7_2_EDBGREQ_SHIFT)) & MDM_AP_CONTROL_CM7_2_EDBGREQ_MASK)
#define MDM_AP_CONTROL_MSK_LOCKSTEP_ALARM_CM70_MASK (0x1000U)
#define MDM_AP_CONTROL_MSK_LOCKSTEP_ALARM_CM70_SHIFT (12U)
#define MDM_AP_CONTROL_MSK_LOCKSTEP_ALARM_CM70_WIDTH (1U)
#define MDM_AP_CONTROL_MSK_LOCKSTEP_ALARM_CM70(x) (((uint32_t)(((uint32_t)(x)) << MDM_AP_CONTROL_MSK_LOCKSTEP_ALARM_CM70_SHIFT)) & MDM_AP_CONTROL_MSK_LOCKSTEP_ALARM_CM70_MASK)
#define MDM_AP_CONTROL_MSK_LOCKSTEP_ALARM_CM71_MASK (0x2000U)
#define MDM_AP_CONTROL_MSK_LOCKSTEP_ALARM_CM71_SHIFT (13U)
#define MDM_AP_CONTROL_MSK_LOCKSTEP_ALARM_CM71_WIDTH (1U)
#define MDM_AP_CONTROL_MSK_LOCKSTEP_ALARM_CM71(x) (((uint32_t)(((uint32_t)(x)) << MDM_AP_CONTROL_MSK_LOCKSTEP_ALARM_CM71_SHIFT)) & MDM_AP_CONTROL_MSK_LOCKSTEP_ALARM_CM71_MASK)
#define MDM_AP_CONTROL_MSK_LOCKSTEP_ALARM_CM72_MASK (0x4000U)
#define MDM_AP_CONTROL_MSK_LOCKSTEP_ALARM_CM72_SHIFT (14U)
#define MDM_AP_CONTROL_MSK_LOCKSTEP_ALARM_CM72_WIDTH (1U)
#define MDM_AP_CONTROL_MSK_LOCKSTEP_ALARM_CM72(x) (((uint32_t)(((uint32_t)(x)) << MDM_AP_CONTROL_MSK_LOCKSTEP_ALARM_CM72_SHIFT)) & MDM_AP_CONTROL_MSK_LOCKSTEP_ALARM_CM72_MASK)
#define MDM_AP_CONTROL_DIS_POR_WDOG_MSK_MASK     (0x8000U)
#define MDM_AP_CONTROL_DIS_POR_WDOG_MSK_SHIFT    (15U)
#define MDM_AP_CONTROL_DIS_POR_WDOG_MSK_WIDTH    (1U)
#define MDM_AP_CONTROL_DIS_POR_WDOG_MSK(x)       (((uint32_t)(((uint32_t)(x)) << MDM_AP_CONTROL_DIS_POR_WDOG_MSK_SHIFT)) & MDM_AP_CONTROL_DIS_POR_WDOG_MSK_MASK)
#define MDM_AP_CONTROL_CA53_A0_EDBGREQ_MASK      (0x10000U)
#define MDM_AP_CONTROL_CA53_A0_EDBGREQ_SHIFT     (16U)
#define MDM_AP_CONTROL_CA53_A0_EDBGREQ_WIDTH     (1U)
#define MDM_AP_CONTROL_CA53_A0_EDBGREQ(x)        (((uint32_t)(((uint32_t)(x)) << MDM_AP_CONTROL_CA53_A0_EDBGREQ_SHIFT)) & MDM_AP_CONTROL_CA53_A0_EDBGREQ_MASK)
#define MDM_AP_CONTROL_CA53_A1_EDBGREQ_MASK      (0x20000U)
#define MDM_AP_CONTROL_CA53_A1_EDBGREQ_SHIFT     (17U)
#define MDM_AP_CONTROL_CA53_A1_EDBGREQ_WIDTH     (1U)
#define MDM_AP_CONTROL_CA53_A1_EDBGREQ(x)        (((uint32_t)(((uint32_t)(x)) << MDM_AP_CONTROL_CA53_A1_EDBGREQ_SHIFT)) & MDM_AP_CONTROL_CA53_A1_EDBGREQ_MASK)
#define MDM_AP_CONTROL_CA53_B0_EDBGREQ_MASK      (0x40000U)
#define MDM_AP_CONTROL_CA53_B0_EDBGREQ_SHIFT     (18U)
#define MDM_AP_CONTROL_CA53_B0_EDBGREQ_WIDTH     (1U)
#define MDM_AP_CONTROL_CA53_B0_EDBGREQ(x)        (((uint32_t)(((uint32_t)(x)) << MDM_AP_CONTROL_CA53_B0_EDBGREQ_SHIFT)) & MDM_AP_CONTROL_CA53_B0_EDBGREQ_MASK)
#define MDM_AP_CONTROL_CA53_B1_EDBGREQ_MASK      (0x80000U)
#define MDM_AP_CONTROL_CA53_B1_EDBGREQ_SHIFT     (19U)
#define MDM_AP_CONTROL_CA53_B1_EDBGREQ_WIDTH     (1U)
#define MDM_AP_CONTROL_CA53_B1_EDBGREQ(x)        (((uint32_t)(((uint32_t)(x)) << MDM_AP_CONTROL_CA53_B1_EDBGREQ_SHIFT)) & MDM_AP_CONTROL_CA53_B1_EDBGREQ_MASK)
#define MDM_AP_CONTROL_TPIU_OVERRIDE_MASK        (0x100000U)
#define MDM_AP_CONTROL_TPIU_OVERRIDE_SHIFT       (20U)
#define MDM_AP_CONTROL_TPIU_OVERRIDE_WIDTH       (1U)
#define MDM_AP_CONTROL_TPIU_OVERRIDE(x)          (((uint32_t)(((uint32_t)(x)) << MDM_AP_CONTROL_TPIU_OVERRIDE_SHIFT)) & MDM_AP_CONTROL_TPIU_OVERRIDE_MASK)
#define MDM_AP_CONTROL_ETR_OVERRIDE_MASK         (0x200000U)
#define MDM_AP_CONTROL_ETR_OVERRIDE_SHIFT        (21U)
#define MDM_AP_CONTROL_ETR_OVERRIDE_WIDTH        (1U)
#define MDM_AP_CONTROL_ETR_OVERRIDE(x)           (((uint32_t)(((uint32_t)(x)) << MDM_AP_CONTROL_ETR_OVERRIDE_SHIFT)) & MDM_AP_CONTROL_ETR_OVERRIDE_MASK)
#define MDM_AP_CONTROL_MSK_DBG_FAULT_MASK        (0x800000U)
#define MDM_AP_CONTROL_MSK_DBG_FAULT_SHIFT       (23U)
#define MDM_AP_CONTROL_MSK_DBG_FAULT_WIDTH       (1U)
#define MDM_AP_CONTROL_MSK_DBG_FAULT(x)          (((uint32_t)(((uint32_t)(x)) << MDM_AP_CONTROL_MSK_DBG_FAULT_SHIFT)) & MDM_AP_CONTROL_MSK_DBG_FAULT_MASK)
#define MDM_AP_CONTROL_MSK_FCCU_RST_TRIGGER_MASK (0x1000000U)
#define MDM_AP_CONTROL_MSK_FCCU_RST_TRIGGER_SHIFT (24U)
#define MDM_AP_CONTROL_MSK_FCCU_RST_TRIGGER_WIDTH (1U)
#define MDM_AP_CONTROL_MSK_FCCU_RST_TRIGGER(x)   (((uint32_t)(((uint32_t)(x)) << MDM_AP_CONTROL_MSK_FCCU_RST_TRIGGER_SHIFT)) & MDM_AP_CONTROL_MSK_FCCU_RST_TRIGGER_MASK)
#define MDM_AP_CONTROL_M7_0_DBGRSTRT_MASK        (0x10000000U)
#define MDM_AP_CONTROL_M7_0_DBGRSTRT_SHIFT       (28U)
#define MDM_AP_CONTROL_M7_0_DBGRSTRT_WIDTH       (1U)
#define MDM_AP_CONTROL_M7_0_DBGRSTRT(x)          (((uint32_t)(((uint32_t)(x)) << MDM_AP_CONTROL_M7_0_DBGRSTRT_SHIFT)) & MDM_AP_CONTROL_M7_0_DBGRSTRT_MASK)
#define MDM_AP_CONTROL_M7_1_DBGRSTRT_MASK        (0x20000000U)
#define MDM_AP_CONTROL_M7_1_DBGRSTRT_SHIFT       (29U)
#define MDM_AP_CONTROL_M7_1_DBGRSTRT_WIDTH       (1U)
#define MDM_AP_CONTROL_M7_1_DBGRSTRT(x)          (((uint32_t)(((uint32_t)(x)) << MDM_AP_CONTROL_M7_1_DBGRSTRT_SHIFT)) & MDM_AP_CONTROL_M7_1_DBGRSTRT_MASK)
#define MDM_AP_CONTROL_M7_2_DBGRSTRT_MASK        (0x40000000U)
#define MDM_AP_CONTROL_M7_2_DBGRSTRT_SHIFT       (30U)
#define MDM_AP_CONTROL_M7_2_DBGRSTRT_WIDTH       (1U)
#define MDM_AP_CONTROL_M7_2_DBGRSTRT(x)          (((uint32_t)(((uint32_t)(x)) << MDM_AP_CONTROL_M7_2_DBGRSTRT_SHIFT)) & MDM_AP_CONTROL_M7_2_DBGRSTRT_MASK)
/*! @} */

/*! @name WIR_EN - WIR enable */
/*! @{ */
#define MDM_AP_WIR_EN_STANDBY_EN_MASK            (0x1U)
#define MDM_AP_WIR_EN_STANDBY_EN_SHIFT           (0U)
#define MDM_AP_WIR_EN_STANDBY_EN_WIDTH           (1U)
#define MDM_AP_WIR_EN_STANDBY_EN(x)              (((uint32_t)(((uint32_t)(x)) << MDM_AP_WIR_EN_STANDBY_EN_SHIFT)) & MDM_AP_WIR_EN_STANDBY_EN_MASK)
/*! @} */

/*! @name WIR_REL - WIR release */
/*! @{ */
#define MDM_AP_WIR_REL_RESET_REL_MASK            (0x1U)
#define MDM_AP_WIR_REL_RESET_REL_SHIFT           (0U)
#define MDM_AP_WIR_REL_RESET_REL_WIDTH           (1U)
#define MDM_AP_WIR_REL_RESET_REL(x)              (((uint32_t)(((uint32_t)(x)) << MDM_AP_WIR_REL_RESET_REL_SHIFT)) & MDM_AP_WIR_REL_RESET_REL_MASK)
/*! @} */

/*! @name STATUS2 - MDM_AP status 2 */
/*! @{ */
#define MDM_AP_STATUS2_CA53_A0_DBGMODE_MASK      (0x1U)
#define MDM_AP_STATUS2_CA53_A0_DBGMODE_SHIFT     (0U)
#define MDM_AP_STATUS2_CA53_A0_DBGMODE_WIDTH     (1U)
#define MDM_AP_STATUS2_CA53_A0_DBGMODE(x)        (((uint32_t)(((uint32_t)(x)) << MDM_AP_STATUS2_CA53_A0_DBGMODE_SHIFT)) & MDM_AP_STATUS2_CA53_A0_DBGMODE_MASK)
#define MDM_AP_STATUS2_CA53_A1_DBGMODE_MASK      (0x2U)
#define MDM_AP_STATUS2_CA53_A1_DBGMODE_SHIFT     (1U)
#define MDM_AP_STATUS2_CA53_A1_DBGMODE_WIDTH     (1U)
#define MDM_AP_STATUS2_CA53_A1_DBGMODE(x)        (((uint32_t)(((uint32_t)(x)) << MDM_AP_STATUS2_CA53_A1_DBGMODE_SHIFT)) & MDM_AP_STATUS2_CA53_A1_DBGMODE_MASK)
#define MDM_AP_STATUS2_CA53_B0_DBGMODE_MASK      (0x4U)
#define MDM_AP_STATUS2_CA53_B0_DBGMODE_SHIFT     (2U)
#define MDM_AP_STATUS2_CA53_B0_DBGMODE_WIDTH     (1U)
#define MDM_AP_STATUS2_CA53_B0_DBGMODE(x)        (((uint32_t)(((uint32_t)(x)) << MDM_AP_STATUS2_CA53_B0_DBGMODE_SHIFT)) & MDM_AP_STATUS2_CA53_B0_DBGMODE_MASK)
#define MDM_AP_STATUS2_CA53_B1_DBGMODE_MASK      (0x8U)
#define MDM_AP_STATUS2_CA53_B1_DBGMODE_SHIFT     (3U)
#define MDM_AP_STATUS2_CA53_B1_DBGMODE_WIDTH     (1U)
#define MDM_AP_STATUS2_CA53_B1_DBGMODE(x)        (((uint32_t)(((uint32_t)(x)) << MDM_AP_STATUS2_CA53_B1_DBGMODE_SHIFT)) & MDM_AP_STATUS2_CA53_B1_DBGMODE_MASK)
#define MDM_AP_STATUS2_CA53_A0_WFI_MASK          (0x10U)
#define MDM_AP_STATUS2_CA53_A0_WFI_SHIFT         (4U)
#define MDM_AP_STATUS2_CA53_A0_WFI_WIDTH         (1U)
#define MDM_AP_STATUS2_CA53_A0_WFI(x)            (((uint32_t)(((uint32_t)(x)) << MDM_AP_STATUS2_CA53_A0_WFI_SHIFT)) & MDM_AP_STATUS2_CA53_A0_WFI_MASK)
#define MDM_AP_STATUS2_CA53_A1_WFI_MASK          (0x20U)
#define MDM_AP_STATUS2_CA53_A1_WFI_SHIFT         (5U)
#define MDM_AP_STATUS2_CA53_A1_WFI_WIDTH         (1U)
#define MDM_AP_STATUS2_CA53_A1_WFI(x)            (((uint32_t)(((uint32_t)(x)) << MDM_AP_STATUS2_CA53_A1_WFI_SHIFT)) & MDM_AP_STATUS2_CA53_A1_WFI_MASK)
#define MDM_AP_STATUS2_CA53_B0_WFI_MASK          (0x40U)
#define MDM_AP_STATUS2_CA53_B0_WFI_SHIFT         (6U)
#define MDM_AP_STATUS2_CA53_B0_WFI_WIDTH         (1U)
#define MDM_AP_STATUS2_CA53_B0_WFI(x)            (((uint32_t)(((uint32_t)(x)) << MDM_AP_STATUS2_CA53_B0_WFI_SHIFT)) & MDM_AP_STATUS2_CA53_B0_WFI_MASK)
#define MDM_AP_STATUS2_CA53_B1_WFI_MASK          (0x80U)
#define MDM_AP_STATUS2_CA53_B1_WFI_SHIFT         (7U)
#define MDM_AP_STATUS2_CA53_B1_WFI_WIDTH         (1U)
#define MDM_AP_STATUS2_CA53_B1_WFI(x)            (((uint32_t)(((uint32_t)(x)) << MDM_AP_STATUS2_CA53_B1_WFI_SHIFT)) & MDM_AP_STATUS2_CA53_B1_WFI_MASK)
#define MDM_AP_STATUS2_CA53_A0_WFE_MASK          (0x100U)
#define MDM_AP_STATUS2_CA53_A0_WFE_SHIFT         (8U)
#define MDM_AP_STATUS2_CA53_A0_WFE_WIDTH         (1U)
#define MDM_AP_STATUS2_CA53_A0_WFE(x)            (((uint32_t)(((uint32_t)(x)) << MDM_AP_STATUS2_CA53_A0_WFE_SHIFT)) & MDM_AP_STATUS2_CA53_A0_WFE_MASK)
#define MDM_AP_STATUS2_CA53_A1_WFE_MASK          (0x200U)
#define MDM_AP_STATUS2_CA53_A1_WFE_SHIFT         (9U)
#define MDM_AP_STATUS2_CA53_A1_WFE_WIDTH         (1U)
#define MDM_AP_STATUS2_CA53_A1_WFE(x)            (((uint32_t)(((uint32_t)(x)) << MDM_AP_STATUS2_CA53_A1_WFE_SHIFT)) & MDM_AP_STATUS2_CA53_A1_WFE_MASK)
#define MDM_AP_STATUS2_CA53_B0_WFE_MASK          (0x400U)
#define MDM_AP_STATUS2_CA53_B0_WFE_SHIFT         (10U)
#define MDM_AP_STATUS2_CA53_B0_WFE_WIDTH         (1U)
#define MDM_AP_STATUS2_CA53_B0_WFE(x)            (((uint32_t)(((uint32_t)(x)) << MDM_AP_STATUS2_CA53_B0_WFE_SHIFT)) & MDM_AP_STATUS2_CA53_B0_WFE_MASK)
#define MDM_AP_STATUS2_CA53_B1_WFE_MASK          (0x800U)
#define MDM_AP_STATUS2_CA53_B1_WFE_SHIFT         (11U)
#define MDM_AP_STATUS2_CA53_B1_WFE_WIDTH         (1U)
#define MDM_AP_STATUS2_CA53_B1_WFE(x)            (((uint32_t)(((uint32_t)(x)) << MDM_AP_STATUS2_CA53_B1_WFE_SHIFT)) & MDM_AP_STATUS2_CA53_B1_WFE_MASK)
/*! @} */

/*! @name CORTEX_A53_A0_IP_DBG - Cortex-A53 A0 debug */
/*! @{ */
#define MDM_AP_CORTEX_A53_A0_IP_DBG_CA53_A0_IP_DBGDIS_MASK (0x1U)
#define MDM_AP_CORTEX_A53_A0_IP_DBG_CA53_A0_IP_DBGDIS_SHIFT (0U)
#define MDM_AP_CORTEX_A53_A0_IP_DBG_CA53_A0_IP_DBGDIS_WIDTH (1U)
#define MDM_AP_CORTEX_A53_A0_IP_DBG_CA53_A0_IP_DBGDIS(x) (((uint32_t)(((uint32_t)(x)) << MDM_AP_CORTEX_A53_A0_IP_DBG_CA53_A0_IP_DBGDIS_SHIFT)) & MDM_AP_CORTEX_A53_A0_IP_DBG_CA53_A0_IP_DBGDIS_MASK)
/*! @} */

/*! @name CONTROL2 - MDM_AP control 2 */
/*! @{ */
#define MDM_AP_CONTROL2_LLCE_C0_EDBGRQ_MASK      (0x10U)
#define MDM_AP_CONTROL2_LLCE_C0_EDBGRQ_SHIFT     (4U)
#define MDM_AP_CONTROL2_LLCE_C0_EDBGRQ_WIDTH     (1U)
#define MDM_AP_CONTROL2_LLCE_C0_EDBGRQ(x)        (((uint32_t)(((uint32_t)(x)) << MDM_AP_CONTROL2_LLCE_C0_EDBGRQ_SHIFT)) & MDM_AP_CONTROL2_LLCE_C0_EDBGRQ_MASK)
#define MDM_AP_CONTROL2_LLCE_C1_EDBGRQ_MASK      (0x20U)
#define MDM_AP_CONTROL2_LLCE_C1_EDBGRQ_SHIFT     (5U)
#define MDM_AP_CONTROL2_LLCE_C1_EDBGRQ_WIDTH     (1U)
#define MDM_AP_CONTROL2_LLCE_C1_EDBGRQ(x)        (((uint32_t)(((uint32_t)(x)) << MDM_AP_CONTROL2_LLCE_C1_EDBGRQ_SHIFT)) & MDM_AP_CONTROL2_LLCE_C1_EDBGRQ_MASK)
#define MDM_AP_CONTROL2_LLCE_C2_EDBGRQ_MASK      (0x40U)
#define MDM_AP_CONTROL2_LLCE_C2_EDBGRQ_SHIFT     (6U)
#define MDM_AP_CONTROL2_LLCE_C2_EDBGRQ_WIDTH     (1U)
#define MDM_AP_CONTROL2_LLCE_C2_EDBGRQ(x)        (((uint32_t)(((uint32_t)(x)) << MDM_AP_CONTROL2_LLCE_C2_EDBGRQ_SHIFT)) & MDM_AP_CONTROL2_LLCE_C2_EDBGRQ_MASK)
#define MDM_AP_CONTROL2_LLCE_C3_EDBGRQ_MASK      (0x80U)
#define MDM_AP_CONTROL2_LLCE_C3_EDBGRQ_SHIFT     (7U)
#define MDM_AP_CONTROL2_LLCE_C3_EDBGRQ_WIDTH     (1U)
#define MDM_AP_CONTROL2_LLCE_C3_EDBGRQ(x)        (((uint32_t)(((uint32_t)(x)) << MDM_AP_CONTROL2_LLCE_C3_EDBGRQ_SHIFT)) & MDM_AP_CONTROL2_LLCE_C3_EDBGRQ_MASK)
/*! @} */

/*! @name CA53_A1_IP_DBG - Cortex-A53 A1 debug */
/*! @{ */
#define MDM_AP_CA53_A1_IP_DBG_CA53_A1_IP_DBGDIS_MASK (0x1U)
#define MDM_AP_CA53_A1_IP_DBG_CA53_A1_IP_DBGDIS_SHIFT (0U)
#define MDM_AP_CA53_A1_IP_DBG_CA53_A1_IP_DBGDIS_WIDTH (1U)
#define MDM_AP_CA53_A1_IP_DBG_CA53_A1_IP_DBGDIS(x) (((uint32_t)(((uint32_t)(x)) << MDM_AP_CA53_A1_IP_DBG_CA53_A1_IP_DBGDIS_SHIFT)) & MDM_AP_CA53_A1_IP_DBG_CA53_A1_IP_DBGDIS_MASK)
/*! @} */

/*! @name CORTEX_A53_B0_IP_DBG - Cortex-A53 B0 debug */
/*! @{ */
#define MDM_AP_CORTEX_A53_B0_IP_DBG_CA53_B0_IP_DBGDIS_MASK (0x1U)
#define MDM_AP_CORTEX_A53_B0_IP_DBG_CA53_B0_IP_DBGDIS_SHIFT (0U)
#define MDM_AP_CORTEX_A53_B0_IP_DBG_CA53_B0_IP_DBGDIS_WIDTH (1U)
#define MDM_AP_CORTEX_A53_B0_IP_DBG_CA53_B0_IP_DBGDIS(x) (((uint32_t)(((uint32_t)(x)) << MDM_AP_CORTEX_A53_B0_IP_DBG_CA53_B0_IP_DBGDIS_SHIFT)) & MDM_AP_CORTEX_A53_B0_IP_DBG_CA53_B0_IP_DBGDIS_MASK)
/*! @} */

/*! @name CORTEX_A53_B1_IP_DBG - Cortex-A53 B1 debug */
/*! @{ */
#define MDM_AP_CORTEX_A53_B1_IP_DBG_CA53_B1_IP_DBGDIS_MASK (0x1U)
#define MDM_AP_CORTEX_A53_B1_IP_DBG_CA53_B1_IP_DBGDIS_SHIFT (0U)
#define MDM_AP_CORTEX_A53_B1_IP_DBG_CA53_B1_IP_DBGDIS_WIDTH (1U)
#define MDM_AP_CORTEX_A53_B1_IP_DBG_CA53_B1_IP_DBGDIS(x) (((uint32_t)(((uint32_t)(x)) << MDM_AP_CORTEX_A53_B1_IP_DBG_CA53_B1_IP_DBGDIS_SHIFT)) & MDM_AP_CORTEX_A53_B1_IP_DBG_CA53_B1_IP_DBGDIS_MASK)
/*! @} */

/*! @name CORTEX_M7_0_IP_DBG - Cortex M7_0 debug */
/*! @{ */
#define MDM_AP_CORTEX_M7_0_IP_DBG_CM7_0_IP_DBGDIS_MASK (0x1U)
#define MDM_AP_CORTEX_M7_0_IP_DBG_CM7_0_IP_DBGDIS_SHIFT (0U)
#define MDM_AP_CORTEX_M7_0_IP_DBG_CM7_0_IP_DBGDIS_WIDTH (1U)
#define MDM_AP_CORTEX_M7_0_IP_DBG_CM7_0_IP_DBGDIS(x) (((uint32_t)(((uint32_t)(x)) << MDM_AP_CORTEX_M7_0_IP_DBG_CM7_0_IP_DBGDIS_SHIFT)) & MDM_AP_CORTEX_M7_0_IP_DBG_CM7_0_IP_DBGDIS_MASK)
/*! @} */

/*! @name CORTEX_M7_1_IP_DBG - Cortex M7_1 debug */
/*! @{ */
#define MDM_AP_CORTEX_M7_1_IP_DBG_CM7_1_IP_DBGDIS_MASK (0x1U)
#define MDM_AP_CORTEX_M7_1_IP_DBG_CM7_1_IP_DBGDIS_SHIFT (0U)
#define MDM_AP_CORTEX_M7_1_IP_DBG_CM7_1_IP_DBGDIS_WIDTH (1U)
#define MDM_AP_CORTEX_M7_1_IP_DBG_CM7_1_IP_DBGDIS(x) (((uint32_t)(((uint32_t)(x)) << MDM_AP_CORTEX_M7_1_IP_DBG_CM7_1_IP_DBGDIS_SHIFT)) & MDM_AP_CORTEX_M7_1_IP_DBG_CM7_1_IP_DBGDIS_MASK)
/*! @} */

/*! @name CORTEX_M7_2_IP_DBG - Cortex M7_2 debug */
/*! @{ */
#define MDM_AP_CORTEX_M7_2_IP_DBG_CM7_2_IP_DBGDIS_MASK (0x1U)
#define MDM_AP_CORTEX_M7_2_IP_DBG_CM7_2_IP_DBGDIS_SHIFT (0U)
#define MDM_AP_CORTEX_M7_2_IP_DBG_CM7_2_IP_DBGDIS_WIDTH (1U)
#define MDM_AP_CORTEX_M7_2_IP_DBG_CM7_2_IP_DBGDIS(x) (((uint32_t)(((uint32_t)(x)) << MDM_AP_CORTEX_M7_2_IP_DBG_CM7_2_IP_DBGDIS_SHIFT)) & MDM_AP_CORTEX_M7_2_IP_DBG_CM7_2_IP_DBGDIS_MASK)
/*! @} */

/*! @name DAP_EN_CTRL - DAP enable control */
/*! @{ */
#define MDM_AP_DAP_EN_CTRL_GDBGEN_MASK           (0x10U)
#define MDM_AP_DAP_EN_CTRL_GDBGEN_SHIFT          (4U)
#define MDM_AP_DAP_EN_CTRL_GDBGEN_WIDTH          (1U)
#define MDM_AP_DAP_EN_CTRL_GDBGEN(x)             (((uint32_t)(((uint32_t)(x)) << MDM_AP_DAP_EN_CTRL_GDBGEN_SHIFT)) & MDM_AP_DAP_EN_CTRL_GDBGEN_MASK)
#define MDM_AP_DAP_EN_CTRL_GNIDEN_MASK           (0x20U)
#define MDM_AP_DAP_EN_CTRL_GNIDEN_SHIFT          (5U)
#define MDM_AP_DAP_EN_CTRL_GNIDEN_WIDTH          (1U)
#define MDM_AP_DAP_EN_CTRL_GNIDEN(x)             (((uint32_t)(((uint32_t)(x)) << MDM_AP_DAP_EN_CTRL_GNIDEN_SHIFT)) & MDM_AP_DAP_EN_CTRL_GNIDEN_MASK)
#define MDM_AP_DAP_EN_CTRL_GSPIDEN_MASK          (0x40U)
#define MDM_AP_DAP_EN_CTRL_GSPIDEN_SHIFT         (6U)
#define MDM_AP_DAP_EN_CTRL_GSPIDEN_WIDTH         (1U)
#define MDM_AP_DAP_EN_CTRL_GSPIDEN(x)            (((uint32_t)(((uint32_t)(x)) << MDM_AP_DAP_EN_CTRL_GSPIDEN_SHIFT)) & MDM_AP_DAP_EN_CTRL_GSPIDEN_MASK)
#define MDM_AP_DAP_EN_CTRL_GSPNIDEN_MASK         (0x80U)
#define MDM_AP_DAP_EN_CTRL_GSPNIDEN_SHIFT        (7U)
#define MDM_AP_DAP_EN_CTRL_GSPNIDEN_WIDTH        (1U)
#define MDM_AP_DAP_EN_CTRL_GSPNIDEN(x)           (((uint32_t)(((uint32_t)(x)) << MDM_AP_DAP_EN_CTRL_GSPNIDEN_SHIFT)) & MDM_AP_DAP_EN_CTRL_GSPNIDEN_MASK)
#define MDM_AP_DAP_EN_CTRL_CDBGEN_MASK           (0x10000000U)
#define MDM_AP_DAP_EN_CTRL_CDBGEN_SHIFT          (28U)
#define MDM_AP_DAP_EN_CTRL_CDBGEN_WIDTH          (1U)
#define MDM_AP_DAP_EN_CTRL_CDBGEN(x)             (((uint32_t)(((uint32_t)(x)) << MDM_AP_DAP_EN_CTRL_CDBGEN_SHIFT)) & MDM_AP_DAP_EN_CTRL_CDBGEN_MASK)
#define MDM_AP_DAP_EN_CTRL_CNIDEN_MASK           (0x20000000U)
#define MDM_AP_DAP_EN_CTRL_CNIDEN_SHIFT          (29U)
#define MDM_AP_DAP_EN_CTRL_CNIDEN_WIDTH          (1U)
#define MDM_AP_DAP_EN_CTRL_CNIDEN(x)             (((uint32_t)(((uint32_t)(x)) << MDM_AP_DAP_EN_CTRL_CNIDEN_SHIFT)) & MDM_AP_DAP_EN_CTRL_CNIDEN_MASK)
#define MDM_AP_DAP_EN_CTRL_CSPIDEN_MASK          (0x40000000U)
#define MDM_AP_DAP_EN_CTRL_CSPIDEN_SHIFT         (30U)
#define MDM_AP_DAP_EN_CTRL_CSPIDEN_WIDTH         (1U)
#define MDM_AP_DAP_EN_CTRL_CSPIDEN(x)            (((uint32_t)(((uint32_t)(x)) << MDM_AP_DAP_EN_CTRL_CSPIDEN_SHIFT)) & MDM_AP_DAP_EN_CTRL_CSPIDEN_MASK)
#define MDM_AP_DAP_EN_CTRL_CSPNIDEN_MASK         (0x80000000U)
#define MDM_AP_DAP_EN_CTRL_CSPNIDEN_SHIFT        (31U)
#define MDM_AP_DAP_EN_CTRL_CSPNIDEN_WIDTH        (1U)
#define MDM_AP_DAP_EN_CTRL_CSPNIDEN(x)           (((uint32_t)(((uint32_t)(x)) << MDM_AP_DAP_EN_CTRL_CSPNIDEN_SHIFT)) & MDM_AP_DAP_EN_CTRL_CSPNIDEN_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group MDM_AP_Register_Masks */


/*!
 * @}
 */ /* end of group MDM_AP_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- MSCM Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup MSCM_Peripheral_Access_Layer MSCM Peripheral Access Layer
 * @{
 */

/** MSCM - Size of Registers Arrays */
#define MSCM_IRSPRC_COUNT                         240u

/** MSCM - Register Layout Typedef */
typedef struct {
  __I  uint32_t CPXTYPE;                           /**< Processor x Type Register, offset: 0x0 */
  __I  uint32_t CPXNUM;                            /**< Processor x Number Register, offset: 0x4 */
  __I  uint32_t CPXREV;                            /**< Processor x Revision, offset: 0x8 */
  __I  uint32_t CPXCFG0;                           /**< Processor x Configuration 0 Register, offset: 0xC */
  __I  uint32_t CPXCFG1;                           /**< Processor x Configuration 1 Register, offset: 0x10 */
  __I  uint32_t CPXCFG2;                           /**< Processor x Configuration 2 Register, offset: 0x14 */
  __I  uint32_t CPXCFG3;                           /**< Processor x Configuration 3 Register, offset: 0x18 */
  uint8_t RESERVED_0[4];
  __I  uint32_t CP0TYPE;                           /**< Processor 0 Type Register, offset: 0x20 */
  __I  uint32_t CP0NUM;                            /**< Processor 0 Number Register, offset: 0x24 */
  __I  uint32_t CP0REV;                            /**< Processor 0 Count Register, offset: 0x28 */
  __I  uint32_t CP0CFG0;                           /**< Processor 0 Configuration 0 Register, offset: 0x2C */
  __I  uint32_t CP0CFG1;                           /**< Processor 0 Configuration 1 Register, offset: 0x30 */
  __I  uint32_t CP0CFG2;                           /**< Processor 0 Configuration 2 Register, offset: 0x34 */
  __I  uint32_t CP0CFG3;                           /**< Processor 0 Configuration 3 Register, offset: 0x38 */
  uint8_t RESERVED_1[4];
  __I  uint32_t CP1TYPE;                           /**< Processor 1 Type Register, offset: 0x40 */
  __I  uint32_t CP1NUM;                            /**< Processor 1 Number Register, offset: 0x44 */
  __I  uint32_t CP1REV;                            /**< Processor 1 Count Register, offset: 0x48 */
  __I  uint32_t CP1CFG0;                           /**< Processor 1 Configuration 0 Register, offset: 0x4C */
  __I  uint32_t CP1CFG1;                           /**< Processor 1 Configuration 1 Register, offset: 0x50 */
  __I  uint32_t CP1CFG2;                           /**< Processor 1 Configuration 2 Register, offset: 0x54 */
  __I  uint32_t CP1CFG3;                           /**< Processor 1 Configuration 3 Register, offset: 0x58 */
  uint8_t RESERVED_2[4];
  __I  uint32_t CP2TYPE;                           /**< Processor 2 Type Register, offset: 0x60 */
  __I  uint32_t CP2NUM;                            /**< Processor 2 Number Register, offset: 0x64 */
  __I  uint32_t CP2REV;                            /**< Processor 1 Count Register, offset: 0x68 */
  __I  uint32_t CP2CFG0;                           /**< Processor 2 Configuration 0 Register, offset: 0x6C */
  __I  uint32_t CP2CFG1;                           /**< Processor 2 Configuration 1 Register, offset: 0x70 */
  __I  uint32_t CP2CFG2;                           /**< Processor 2 Configuration 2 Register, offset: 0x74 */
  __I  uint32_t CP2CFG3;                           /**< Processor 2 Configuration 3 Register, offset: 0x78 */
  uint8_t RESERVED_3[4];
  __I  uint32_t CP3TYPE;                           /**< Processor 3 Type Register, offset: 0x80 */
  __I  uint32_t CP3NUM;                            /**< Processor 3 Number Register, offset: 0x84 */
  __I  uint32_t CP3REV;                            /**< Processor 1 Count Register, offset: 0x88 */
  __I  uint32_t CP3CFG0;                           /**< Processor 3 Configuration 0 Register, offset: 0x8C */
  __I  uint32_t CP3CFG1;                           /**< Processor 3 Configuration 1 Register, offset: 0x90 */
  __I  uint32_t CP3CFG2;                           /**< Processor 3 Configuration 2 Register, offset: 0x94 */
  __I  uint32_t CP3CFG3;                           /**< Processor 3 Configuration 3 Register, offset: 0x98 */
  uint8_t RESERVED_4[4];
  __I  uint32_t CP4TYPE;                           /**< Processor 4 Type Register, offset: 0xA0 */
  __I  uint32_t CP4NUM;                            /**< Processor 4 Number Register, offset: 0xA4 */
  __I  uint32_t CP4REV;                            /**< Processor 4 Count Register, offset: 0xA8 */
  __I  uint32_t CP4CFG0;                           /**< Processor 3 Configuration 0 Register, offset: 0xAC */
  __I  uint32_t CP4CFG1;                           /**< Processor 4 Configuration 1 Register, offset: 0xB0 */
  __I  uint32_t CP4CFG2;                           /**< Processor 3 Configuration 2 Register, offset: 0xB4 */
  __I  uint32_t CP4CFG3;                           /**< Processor 3 Configuration 3 Register, offset: 0xB8 */
  uint8_t RESERVED_5[4];
  __I  uint32_t CP5TYPE;                           /**< Processor 4 Type Register, offset: 0xC0 */
  __I  uint32_t CP5NUM;                            /**< Processor 5 Number Register, offset: 0xC4 */
  __I  uint32_t CP5REV;                            /**< Processor 5 Count Register, offset: 0xC8 */
  __I  uint32_t CP5CFG0;                           /**< Processor 5 Configuration 0 Register, offset: 0xCC */
  __I  uint32_t CP5CFG1;                           /**< Processor 5 Configuration 1 Register, offset: 0xD0 */
  __I  uint32_t CP5CFG2;                           /**< Processor 5 Configuration 2 Register, offset: 0xD4 */
  __I  uint32_t CP5CFG3;                           /**< Processor 5 Configuration 3 Register, offset: 0xD8 */
  uint8_t RESERVED_6[4];
  __I  uint32_t CP6TYPE;                           /**< Processor 6 Type Register, offset: 0xE0 */
  __I  uint32_t CP6NUM;                            /**< Processor 6 Number Register, offset: 0xE4 */
  __I  uint32_t CP6REV;                            /**< Processor 6 Count Register, offset: 0xE8 */
  __I  uint32_t CP6CFG0;                           /**< Processor 6 Configuration 0 Register, offset: 0xEC */
  __I  uint32_t CP6CFG1;                           /**< Processor 6 Configuration 1 Register, offset: 0xF0 */
  __I  uint32_t CP6CFG2;                           /**< Processor 6 Configuration 2 Register, offset: 0xF4 */
  __I  uint32_t CP6CFG3;                           /**< Processor 6 Configuration 3 Register, offset: 0xF8 */
  uint8_t RESERVED_7[260];
  struct {                                         /**< offset: 0x200, array step: 0x20 */
    __IO uint32_t ISR;                               /**< Interrupt Router CPn Interruptx Status Register, array offset: 0x200, index*0x20, index2*0x8 */
    __O  uint32_t IGR;                               /**< Interrupt Router CPn Interruptx Generation Register, array offset: 0x204, index*0x20, index2*0x8 */
  } IRCPnIRx[7][4];
  uint8_t RESERVED_8[56];
  __IO uint32_t IRCP0ISR4;                         /**< Interrupt Router CPn Interruptx Status Register, offset: 0x318 */
  __O  uint32_t IRCP0IGR4;                         /**< Interrupt Router CPn Interruptx Generation Register, offset: 0x31C */
  uint8_t RESERVED_9[24];
  __IO uint32_t IRCP1ISR4;                         /**< Interrupt Router CPn Interruptx Status Register, offset: 0x338 */
  __O  uint32_t IRCP1IGR4;                         /**< Interrupt Router CPn Interruptx Generation Register, offset: 0x33C */
  uint8_t RESERVED_10[24];
  __IO uint32_t IRCP2ISR4;                         /**< Interrupt Router CPn Interruptx Status Register, offset: 0x358 */
  __O  uint32_t IRCP2IGR4;                         /**< Interrupt Router CPn Interruptx Generation Register, offset: 0x35C */
  uint8_t RESERVED_11[24];
  __IO uint32_t IRCP3ISR4;                         /**< Interrupt Router CPn Interruptx Status Register, offset: 0x378 */
  __O  uint32_t IRCP3IGR4;                         /**< Interrupt Router CPn Interruptx Generation Register, offset: 0x37C */
  uint8_t RESERVED_12[24];
  __IO uint32_t IRCP4ISR4;                         /**< Interrupt Router CPn Interruptx Status Register, offset: 0x398 */
  __O  uint32_t IRCP4IGR4;                         /**< Interrupt Router CPn Interruptx Generation Register, offset: 0x39C */
  uint8_t RESERVED_13[24];
  __IO uint32_t IRCP5ISR4;                         /**< Interrupt Router CPn Interruptx Status Register, offset: 0x3B8 */
  __O  uint32_t IRCP5IGR4;                         /**< Interrupt Router CPn Interruptx Generation Register, offset: 0x3BC */
  uint8_t RESERVED_14[24];
  __IO uint32_t IRCP6ISR4;                         /**< Interrupt Router CPn Interruptx Status Register, offset: 0x3D8 */
  __O  uint32_t IRCP6IGR4;                         /**< Interrupt Router CPn Interruptx Generation Register, offset: 0x3DC */
  uint8_t RESERVED_15[32];
  __IO uint32_t IRCPCFG;                           /**< Interrupt Router Configuration Register, offset: 0x400 */
  uint8_t RESERVED_16[1020];
  __IO uint32_t IRNMIC;                            /**< Interrupt Router Non-Maskable Interrupt Control Register, offset: 0x800 */
  uint8_t RESERVED_17[124];
  __IO uint16_t IRSPRC[MSCM_IRSPRC_COUNT];         /**< Interrupt Router Shared Peripheral Routing Control Register, array offset: 0x880, array step: 0x2 */
} MSCM_Type, *MSCM_MemMapPtr;

/** Number of instances of the MSCM module. */
#define MSCM_INSTANCE_COUNT                      (1u)

/* MSCM - Peripheral instance base addresses */
/** Peripheral MSCM base address */
#define MSCM_BASE                                (0x40198000u)
/** Peripheral MSCM base pointer */
#define MSCM                                     ((MSCM_Type *)MSCM_BASE)
/** Array initializer of MSCM peripheral base addresses */
#define MSCM_BASE_ADDRS                          { MSCM_BASE }
/** Array initializer of MSCM peripheral base pointers */
#define MSCM_BASE_PTRS                           { MSCM }

/* ----------------------------------------------------------------------------
   -- MSCM Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup MSCM_Register_Masks MSCM Register Masks
 * @{
 */

/*! @name CPXTYPE - Processor x Type Register */
/*! @{ */
#define MSCM_CPXTYPE_PERSONALITY_MASK            (0xFFFFFFFFU)
#define MSCM_CPXTYPE_PERSONALITY_SHIFT           (0U)
#define MSCM_CPXTYPE_PERSONALITY_WIDTH           (32U)
#define MSCM_CPXTYPE_PERSONALITY(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_CPXTYPE_PERSONALITY_SHIFT)) & MSCM_CPXTYPE_PERSONALITY_MASK)
/*! @} */

/*! @name CPXNUM - Processor x Number Register */
/*! @{ */
#define MSCM_CPXNUM_CPN_MASK                     (0xFFU)
#define MSCM_CPXNUM_CPN_SHIFT                    (0U)
#define MSCM_CPXNUM_CPN_WIDTH                    (8U)
#define MSCM_CPXNUM_CPN(x)                       (((uint32_t)(((uint32_t)(x)) << MSCM_CPXNUM_CPN_SHIFT)) & MSCM_CPXNUM_CPN_MASK)
/*! @} */

/*! @name CPXREV - Processor x Revision */
/*! @{ */
#define MSCM_CPXREV_RYPZ_MASK                    (0xFFU)
#define MSCM_CPXREV_RYPZ_SHIFT                   (0U)
#define MSCM_CPXREV_RYPZ_WIDTH                   (8U)
#define MSCM_CPXREV_RYPZ(x)                      (((uint32_t)(((uint32_t)(x)) << MSCM_CPXREV_RYPZ_SHIFT)) & MSCM_CPXREV_RYPZ_MASK)
/*! @} */

/*! @name CPXCFG0 - Processor x Configuration 0 Register */
/*! @{ */
#define MSCM_CPXCFG0_DCWY_MASK                   (0xFFU)
#define MSCM_CPXCFG0_DCWY_SHIFT                  (0U)
#define MSCM_CPXCFG0_DCWY_WIDTH                  (8U)
#define MSCM_CPXCFG0_DCWY(x)                     (((uint32_t)(((uint32_t)(x)) << MSCM_CPXCFG0_DCWY_SHIFT)) & MSCM_CPXCFG0_DCWY_MASK)
#define MSCM_CPXCFG0_DCSZ_MASK                   (0xFF00U)
#define MSCM_CPXCFG0_DCSZ_SHIFT                  (8U)
#define MSCM_CPXCFG0_DCSZ_WIDTH                  (8U)
#define MSCM_CPXCFG0_DCSZ(x)                     (((uint32_t)(((uint32_t)(x)) << MSCM_CPXCFG0_DCSZ_SHIFT)) & MSCM_CPXCFG0_DCSZ_MASK)
#define MSCM_CPXCFG0_ICWY_MASK                   (0xFF0000U)
#define MSCM_CPXCFG0_ICWY_SHIFT                  (16U)
#define MSCM_CPXCFG0_ICWY_WIDTH                  (8U)
#define MSCM_CPXCFG0_ICWY(x)                     (((uint32_t)(((uint32_t)(x)) << MSCM_CPXCFG0_ICWY_SHIFT)) & MSCM_CPXCFG0_ICWY_MASK)
#define MSCM_CPXCFG0_ICSZ_MASK                   (0xFF000000U)
#define MSCM_CPXCFG0_ICSZ_SHIFT                  (24U)
#define MSCM_CPXCFG0_ICSZ_WIDTH                  (8U)
#define MSCM_CPXCFG0_ICSZ(x)                     (((uint32_t)(((uint32_t)(x)) << MSCM_CPXCFG0_ICSZ_SHIFT)) & MSCM_CPXCFG0_ICSZ_MASK)
/*! @} */

/*! @name CPXCFG1 - Processor x Configuration 1 Register */
/*! @{ */
#define MSCM_CPXCFG1_L2WY_MASK                   (0xFF0000U)
#define MSCM_CPXCFG1_L2WY_SHIFT                  (16U)
#define MSCM_CPXCFG1_L2WY_WIDTH                  (8U)
#define MSCM_CPXCFG1_L2WY(x)                     (((uint32_t)(((uint32_t)(x)) << MSCM_CPXCFG1_L2WY_SHIFT)) & MSCM_CPXCFG1_L2WY_MASK)
#define MSCM_CPXCFG1_L2SZ_MASK                   (0xFF000000U)
#define MSCM_CPXCFG1_L2SZ_SHIFT                  (24U)
#define MSCM_CPXCFG1_L2SZ_WIDTH                  (8U)
#define MSCM_CPXCFG1_L2SZ(x)                     (((uint32_t)(((uint32_t)(x)) << MSCM_CPXCFG1_L2SZ_SHIFT)) & MSCM_CPXCFG1_L2SZ_MASK)
/*! @} */

/*! @name CPXCFG2 - Processor x Configuration 2 Register */
/*! @{ */
#define MSCM_CPXCFG2_ITCMSZ_MASK                 (0xFF00U)
#define MSCM_CPXCFG2_ITCMSZ_SHIFT                (8U)
#define MSCM_CPXCFG2_ITCMSZ_WIDTH                (8U)
#define MSCM_CPXCFG2_ITCMSZ(x)                   (((uint32_t)(((uint32_t)(x)) << MSCM_CPXCFG2_ITCMSZ_SHIFT)) & MSCM_CPXCFG2_ITCMSZ_MASK)
#define MSCM_CPXCFG2_DTCMSZ_MASK                 (0xFF000000U)
#define MSCM_CPXCFG2_DTCMSZ_SHIFT                (24U)
#define MSCM_CPXCFG2_DTCMSZ_WIDTH                (8U)
#define MSCM_CPXCFG2_DTCMSZ(x)                   (((uint32_t)(((uint32_t)(x)) << MSCM_CPXCFG2_DTCMSZ_SHIFT)) & MSCM_CPXCFG2_DTCMSZ_MASK)
/*! @} */

/*! @name CPXCFG3 - Processor x Configuration 3 Register */
/*! @{ */
#define MSCM_CPXCFG3_HW_FPU_MASK                 (0x1U)
#define MSCM_CPXCFG3_HW_FPU_SHIFT                (0U)
#define MSCM_CPXCFG3_HW_FPU_WIDTH                (1U)
#define MSCM_CPXCFG3_HW_FPU(x)                   (((uint32_t)(((uint32_t)(x)) << MSCM_CPXCFG3_HW_FPU_SHIFT)) & MSCM_CPXCFG3_HW_FPU_MASK)
#define MSCM_CPXCFG3_SIMD_MASK                   (0x2U)
#define MSCM_CPXCFG3_SIMD_SHIFT                  (1U)
#define MSCM_CPXCFG3_SIMD_WIDTH                  (1U)
#define MSCM_CPXCFG3_SIMD(x)                     (((uint32_t)(((uint32_t)(x)) << MSCM_CPXCFG3_SIMD_SHIFT)) & MSCM_CPXCFG3_SIMD_MASK)
#define MSCM_CPXCFG3_MMU_MASK                    (0x4U)
#define MSCM_CPXCFG3_MMU_SHIFT                   (2U)
#define MSCM_CPXCFG3_MMU_WIDTH                   (1U)
#define MSCM_CPXCFG3_MMU(x)                      (((uint32_t)(((uint32_t)(x)) << MSCM_CPXCFG3_MMU_SHIFT)) & MSCM_CPXCFG3_MMU_MASK)
#define MSCM_CPXCFG3_CMP_MASK                    (0x8U)
#define MSCM_CPXCFG3_CMP_SHIFT                   (3U)
#define MSCM_CPXCFG3_CMP_WIDTH                   (1U)
#define MSCM_CPXCFG3_CMP(x)                      (((uint32_t)(((uint32_t)(x)) << MSCM_CPXCFG3_CMP_SHIFT)) & MSCM_CPXCFG3_CMP_MASK)
#define MSCM_CPXCFG3_CPY_MASK                    (0x10U)
#define MSCM_CPXCFG3_CPY_SHIFT                   (4U)
#define MSCM_CPXCFG3_CPY_WIDTH                   (1U)
#define MSCM_CPXCFG3_CPY(x)                      (((uint32_t)(((uint32_t)(x)) << MSCM_CPXCFG3_CPY_SHIFT)) & MSCM_CPXCFG3_CPY_MASK)
/*! @} */

/*! @name CP0TYPE - Processor 0 Type Register */
/*! @{ */
#define MSCM_CP0TYPE_PERSONALITY_MASK            (0xFFFFFFFFU)
#define MSCM_CP0TYPE_PERSONALITY_SHIFT           (0U)
#define MSCM_CP0TYPE_PERSONALITY_WIDTH           (32U)
#define MSCM_CP0TYPE_PERSONALITY(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_CP0TYPE_PERSONALITY_SHIFT)) & MSCM_CP0TYPE_PERSONALITY_MASK)
/*! @} */

/*! @name CP0NUM - Processor 0 Number Register */
/*! @{ */
#define MSCM_CP0NUM_CPN_MASK                     (0xFFU)
#define MSCM_CP0NUM_CPN_SHIFT                    (0U)
#define MSCM_CP0NUM_CPN_WIDTH                    (8U)
#define MSCM_CP0NUM_CPN(x)                       (((uint32_t)(((uint32_t)(x)) << MSCM_CP0NUM_CPN_SHIFT)) & MSCM_CP0NUM_CPN_MASK)
/*! @} */

/*! @name CP0REV - Processor 0 Count Register */
/*! @{ */
#define MSCM_CP0REV_RYPZ_MASK                    (0xFFU)
#define MSCM_CP0REV_RYPZ_SHIFT                   (0U)
#define MSCM_CP0REV_RYPZ_WIDTH                   (8U)
#define MSCM_CP0REV_RYPZ(x)                      (((uint32_t)(((uint32_t)(x)) << MSCM_CP0REV_RYPZ_SHIFT)) & MSCM_CP0REV_RYPZ_MASK)
/*! @} */

/*! @name CP0CFG0 - Processor 0 Configuration 0 Register */
/*! @{ */
#define MSCM_CP0CFG0_DCWY_MASK                   (0xFFU)
#define MSCM_CP0CFG0_DCWY_SHIFT                  (0U)
#define MSCM_CP0CFG0_DCWY_WIDTH                  (8U)
#define MSCM_CP0CFG0_DCWY(x)                     (((uint32_t)(((uint32_t)(x)) << MSCM_CP0CFG0_DCWY_SHIFT)) & MSCM_CP0CFG0_DCWY_MASK)
#define MSCM_CP0CFG0_DCSZ_MASK                   (0xFF00U)
#define MSCM_CP0CFG0_DCSZ_SHIFT                  (8U)
#define MSCM_CP0CFG0_DCSZ_WIDTH                  (8U)
#define MSCM_CP0CFG0_DCSZ(x)                     (((uint32_t)(((uint32_t)(x)) << MSCM_CP0CFG0_DCSZ_SHIFT)) & MSCM_CP0CFG0_DCSZ_MASK)
#define MSCM_CP0CFG0_ICWY_MASK                   (0xFF0000U)
#define MSCM_CP0CFG0_ICWY_SHIFT                  (16U)
#define MSCM_CP0CFG0_ICWY_WIDTH                  (8U)
#define MSCM_CP0CFG0_ICWY(x)                     (((uint32_t)(((uint32_t)(x)) << MSCM_CP0CFG0_ICWY_SHIFT)) & MSCM_CP0CFG0_ICWY_MASK)
#define MSCM_CP0CFG0_ICSZ_MASK                   (0xFF000000U)
#define MSCM_CP0CFG0_ICSZ_SHIFT                  (24U)
#define MSCM_CP0CFG0_ICSZ_WIDTH                  (8U)
#define MSCM_CP0CFG0_ICSZ(x)                     (((uint32_t)(((uint32_t)(x)) << MSCM_CP0CFG0_ICSZ_SHIFT)) & MSCM_CP0CFG0_ICSZ_MASK)
/*! @} */

/*! @name CP0CFG1 - Processor 0 Configuration 1 Register */
/*! @{ */
#define MSCM_CP0CFG1_L2WY_MASK                   (0xFF0000U)
#define MSCM_CP0CFG1_L2WY_SHIFT                  (16U)
#define MSCM_CP0CFG1_L2WY_WIDTH                  (8U)
#define MSCM_CP0CFG1_L2WY(x)                     (((uint32_t)(((uint32_t)(x)) << MSCM_CP0CFG1_L2WY_SHIFT)) & MSCM_CP0CFG1_L2WY_MASK)
#define MSCM_CP0CFG1_L2SZ_MASK                   (0xFF000000U)
#define MSCM_CP0CFG1_L2SZ_SHIFT                  (24U)
#define MSCM_CP0CFG1_L2SZ_WIDTH                  (8U)
#define MSCM_CP0CFG1_L2SZ(x)                     (((uint32_t)(((uint32_t)(x)) << MSCM_CP0CFG1_L2SZ_SHIFT)) & MSCM_CP0CFG1_L2SZ_MASK)
/*! @} */

/*! @name CP0CFG2 - Processor 0 Configuration 2 Register */
/*! @{ */
#define MSCM_CP0CFG2_TMUSZ_MASK                  (0xFF00U)
#define MSCM_CP0CFG2_TMUSZ_SHIFT                 (8U)
#define MSCM_CP0CFG2_TMUSZ_WIDTH                 (8U)
#define MSCM_CP0CFG2_TMUSZ(x)                    (((uint32_t)(((uint32_t)(x)) << MSCM_CP0CFG2_TMUSZ_SHIFT)) & MSCM_CP0CFG2_TMUSZ_MASK)
#define MSCM_CP0CFG2_TMLSZ_MASK                  (0xFF000000U)
#define MSCM_CP0CFG2_TMLSZ_SHIFT                 (24U)
#define MSCM_CP0CFG2_TMLSZ_WIDTH                 (8U)
#define MSCM_CP0CFG2_TMLSZ(x)                    (((uint32_t)(((uint32_t)(x)) << MSCM_CP0CFG2_TMLSZ_SHIFT)) & MSCM_CP0CFG2_TMLSZ_MASK)
/*! @} */

/*! @name CP0CFG3 - Processor 0 Configuration 3 Register */
/*! @{ */
#define MSCM_CP0CFG3_HW_FPU_MASK                 (0x1U)
#define MSCM_CP0CFG3_HW_FPU_SHIFT                (0U)
#define MSCM_CP0CFG3_HW_FPU_WIDTH                (1U)
#define MSCM_CP0CFG3_HW_FPU(x)                   (((uint32_t)(((uint32_t)(x)) << MSCM_CP0CFG3_HW_FPU_SHIFT)) & MSCM_CP0CFG3_HW_FPU_MASK)
#define MSCM_CP0CFG3_SIMD_MASK                   (0x2U)
#define MSCM_CP0CFG3_SIMD_SHIFT                  (1U)
#define MSCM_CP0CFG3_SIMD_WIDTH                  (1U)
#define MSCM_CP0CFG3_SIMD(x)                     (((uint32_t)(((uint32_t)(x)) << MSCM_CP0CFG3_SIMD_SHIFT)) & MSCM_CP0CFG3_SIMD_MASK)
#define MSCM_CP0CFG3_MMU_MASK                    (0x4U)
#define MSCM_CP0CFG3_MMU_SHIFT                   (2U)
#define MSCM_CP0CFG3_MMU_WIDTH                   (1U)
#define MSCM_CP0CFG3_MMU(x)                      (((uint32_t)(((uint32_t)(x)) << MSCM_CP0CFG3_MMU_SHIFT)) & MSCM_CP0CFG3_MMU_MASK)
#define MSCM_CP0CFG3_CMP_MASK                    (0x8U)
#define MSCM_CP0CFG3_CMP_SHIFT                   (3U)
#define MSCM_CP0CFG3_CMP_WIDTH                   (1U)
#define MSCM_CP0CFG3_CMP(x)                      (((uint32_t)(((uint32_t)(x)) << MSCM_CP0CFG3_CMP_SHIFT)) & MSCM_CP0CFG3_CMP_MASK)
#define MSCM_CP0CFG3_CPY_MASK                    (0x10U)
#define MSCM_CP0CFG3_CPY_SHIFT                   (4U)
#define MSCM_CP0CFG3_CPY_WIDTH                   (1U)
#define MSCM_CP0CFG3_CPY(x)                      (((uint32_t)(((uint32_t)(x)) << MSCM_CP0CFG3_CPY_SHIFT)) & MSCM_CP0CFG3_CPY_MASK)
/*! @} */

/*! @name CP1TYPE - Processor 1 Type Register */
/*! @{ */
#define MSCM_CP1TYPE_PERSONALITY_MASK            (0xFFFFFFFFU)
#define MSCM_CP1TYPE_PERSONALITY_SHIFT           (0U)
#define MSCM_CP1TYPE_PERSONALITY_WIDTH           (32U)
#define MSCM_CP1TYPE_PERSONALITY(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_CP1TYPE_PERSONALITY_SHIFT)) & MSCM_CP1TYPE_PERSONALITY_MASK)
/*! @} */

/*! @name CP1NUM - Processor 1 Number Register */
/*! @{ */
#define MSCM_CP1NUM_CPN_MASK                     (0xFFU)
#define MSCM_CP1NUM_CPN_SHIFT                    (0U)
#define MSCM_CP1NUM_CPN_WIDTH                    (8U)
#define MSCM_CP1NUM_CPN(x)                       (((uint32_t)(((uint32_t)(x)) << MSCM_CP1NUM_CPN_SHIFT)) & MSCM_CP1NUM_CPN_MASK)
/*! @} */

/*! @name CP1REV - Processor 1 Count Register */
/*! @{ */
#define MSCM_CP1REV_RYPZ_MASK                    (0xFFU)
#define MSCM_CP1REV_RYPZ_SHIFT                   (0U)
#define MSCM_CP1REV_RYPZ_WIDTH                   (8U)
#define MSCM_CP1REV_RYPZ(x)                      (((uint32_t)(((uint32_t)(x)) << MSCM_CP1REV_RYPZ_SHIFT)) & MSCM_CP1REV_RYPZ_MASK)
/*! @} */

/*! @name CP1CFG0 - Processor 1 Configuration 0 Register */
/*! @{ */
#define MSCM_CP1CFG0_DCWY_MASK                   (0xFFU)
#define MSCM_CP1CFG0_DCWY_SHIFT                  (0U)
#define MSCM_CP1CFG0_DCWY_WIDTH                  (8U)
#define MSCM_CP1CFG0_DCWY(x)                     (((uint32_t)(((uint32_t)(x)) << MSCM_CP1CFG0_DCWY_SHIFT)) & MSCM_CP1CFG0_DCWY_MASK)
#define MSCM_CP1CFG0_DCSZ_MASK                   (0xFF00U)
#define MSCM_CP1CFG0_DCSZ_SHIFT                  (8U)
#define MSCM_CP1CFG0_DCSZ_WIDTH                  (8U)
#define MSCM_CP1CFG0_DCSZ(x)                     (((uint32_t)(((uint32_t)(x)) << MSCM_CP1CFG0_DCSZ_SHIFT)) & MSCM_CP1CFG0_DCSZ_MASK)
#define MSCM_CP1CFG0_ICWY_MASK                   (0xFF0000U)
#define MSCM_CP1CFG0_ICWY_SHIFT                  (16U)
#define MSCM_CP1CFG0_ICWY_WIDTH                  (8U)
#define MSCM_CP1CFG0_ICWY(x)                     (((uint32_t)(((uint32_t)(x)) << MSCM_CP1CFG0_ICWY_SHIFT)) & MSCM_CP1CFG0_ICWY_MASK)
#define MSCM_CP1CFG0_ICSZ_MASK                   (0xFF000000U)
#define MSCM_CP1CFG0_ICSZ_SHIFT                  (24U)
#define MSCM_CP1CFG0_ICSZ_WIDTH                  (8U)
#define MSCM_CP1CFG0_ICSZ(x)                     (((uint32_t)(((uint32_t)(x)) << MSCM_CP1CFG0_ICSZ_SHIFT)) & MSCM_CP1CFG0_ICSZ_MASK)
/*! @} */

/*! @name CP1CFG1 - Processor 1 Configuration 1 Register */
/*! @{ */
#define MSCM_CP1CFG1_L2WY_MASK                   (0xFF0000U)
#define MSCM_CP1CFG1_L2WY_SHIFT                  (16U)
#define MSCM_CP1CFG1_L2WY_WIDTH                  (8U)
#define MSCM_CP1CFG1_L2WY(x)                     (((uint32_t)(((uint32_t)(x)) << MSCM_CP1CFG1_L2WY_SHIFT)) & MSCM_CP1CFG1_L2WY_MASK)
#define MSCM_CP1CFG1_L2SZ_MASK                   (0xFF000000U)
#define MSCM_CP1CFG1_L2SZ_SHIFT                  (24U)
#define MSCM_CP1CFG1_L2SZ_WIDTH                  (8U)
#define MSCM_CP1CFG1_L2SZ(x)                     (((uint32_t)(((uint32_t)(x)) << MSCM_CP1CFG1_L2SZ_SHIFT)) & MSCM_CP1CFG1_L2SZ_MASK)
/*! @} */

/*! @name CP1CFG2 - Processor 1 Configuration 2 Register */
/*! @{ */
#define MSCM_CP1CFG2_TMUSZ_MASK                  (0xFF00U)
#define MSCM_CP1CFG2_TMUSZ_SHIFT                 (8U)
#define MSCM_CP1CFG2_TMUSZ_WIDTH                 (8U)
#define MSCM_CP1CFG2_TMUSZ(x)                    (((uint32_t)(((uint32_t)(x)) << MSCM_CP1CFG2_TMUSZ_SHIFT)) & MSCM_CP1CFG2_TMUSZ_MASK)
#define MSCM_CP1CFG2_TMLSZ_MASK                  (0xFF000000U)
#define MSCM_CP1CFG2_TMLSZ_SHIFT                 (24U)
#define MSCM_CP1CFG2_TMLSZ_WIDTH                 (8U)
#define MSCM_CP1CFG2_TMLSZ(x)                    (((uint32_t)(((uint32_t)(x)) << MSCM_CP1CFG2_TMLSZ_SHIFT)) & MSCM_CP1CFG2_TMLSZ_MASK)
/*! @} */

/*! @name CP1CFG3 - Processor 1 Configuration 3 Register */
/*! @{ */
#define MSCM_CP1CFG3_HW_FPU_MASK                 (0x1U)
#define MSCM_CP1CFG3_HW_FPU_SHIFT                (0U)
#define MSCM_CP1CFG3_HW_FPU_WIDTH                (1U)
#define MSCM_CP1CFG3_HW_FPU(x)                   (((uint32_t)(((uint32_t)(x)) << MSCM_CP1CFG3_HW_FPU_SHIFT)) & MSCM_CP1CFG3_HW_FPU_MASK)
#define MSCM_CP1CFG3_SIMD_MASK                   (0x2U)
#define MSCM_CP1CFG3_SIMD_SHIFT                  (1U)
#define MSCM_CP1CFG3_SIMD_WIDTH                  (1U)
#define MSCM_CP1CFG3_SIMD(x)                     (((uint32_t)(((uint32_t)(x)) << MSCM_CP1CFG3_SIMD_SHIFT)) & MSCM_CP1CFG3_SIMD_MASK)
#define MSCM_CP1CFG3_MMU_MASK                    (0x4U)
#define MSCM_CP1CFG3_MMU_SHIFT                   (2U)
#define MSCM_CP1CFG3_MMU_WIDTH                   (1U)
#define MSCM_CP1CFG3_MMU(x)                      (((uint32_t)(((uint32_t)(x)) << MSCM_CP1CFG3_MMU_SHIFT)) & MSCM_CP1CFG3_MMU_MASK)
#define MSCM_CP1CFG3_CMP_MASK                    (0x8U)
#define MSCM_CP1CFG3_CMP_SHIFT                   (3U)
#define MSCM_CP1CFG3_CMP_WIDTH                   (1U)
#define MSCM_CP1CFG3_CMP(x)                      (((uint32_t)(((uint32_t)(x)) << MSCM_CP1CFG3_CMP_SHIFT)) & MSCM_CP1CFG3_CMP_MASK)
#define MSCM_CP1CFG3_CPY_MASK                    (0x10U)
#define MSCM_CP1CFG3_CPY_SHIFT                   (4U)
#define MSCM_CP1CFG3_CPY_WIDTH                   (1U)
#define MSCM_CP1CFG3_CPY(x)                      (((uint32_t)(((uint32_t)(x)) << MSCM_CP1CFG3_CPY_SHIFT)) & MSCM_CP1CFG3_CPY_MASK)
/*! @} */

/*! @name CP2TYPE - Processor 2 Type Register */
/*! @{ */
#define MSCM_CP2TYPE_PERSONALITY_MASK            (0xFFFFFFFFU)
#define MSCM_CP2TYPE_PERSONALITY_SHIFT           (0U)
#define MSCM_CP2TYPE_PERSONALITY_WIDTH           (32U)
#define MSCM_CP2TYPE_PERSONALITY(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_CP2TYPE_PERSONALITY_SHIFT)) & MSCM_CP2TYPE_PERSONALITY_MASK)
/*! @} */

/*! @name CP2NUM - Processor 2 Number Register */
/*! @{ */
#define MSCM_CP2NUM_CPN_MASK                     (0xFFU)
#define MSCM_CP2NUM_CPN_SHIFT                    (0U)
#define MSCM_CP2NUM_CPN_WIDTH                    (8U)
#define MSCM_CP2NUM_CPN(x)                       (((uint32_t)(((uint32_t)(x)) << MSCM_CP2NUM_CPN_SHIFT)) & MSCM_CP2NUM_CPN_MASK)
/*! @} */

/*! @name CP2REV - Processor 1 Count Register */
/*! @{ */
#define MSCM_CP2REV_RYPZ_MASK                    (0xFFU)
#define MSCM_CP2REV_RYPZ_SHIFT                   (0U)
#define MSCM_CP2REV_RYPZ_WIDTH                   (8U)
#define MSCM_CP2REV_RYPZ(x)                      (((uint32_t)(((uint32_t)(x)) << MSCM_CP2REV_RYPZ_SHIFT)) & MSCM_CP2REV_RYPZ_MASK)
/*! @} */

/*! @name CP2CFG0 - Processor 2 Configuration 0 Register */
/*! @{ */
#define MSCM_CP2CFG0_DCWY_MASK                   (0xFFU)
#define MSCM_CP2CFG0_DCWY_SHIFT                  (0U)
#define MSCM_CP2CFG0_DCWY_WIDTH                  (8U)
#define MSCM_CP2CFG0_DCWY(x)                     (((uint32_t)(((uint32_t)(x)) << MSCM_CP2CFG0_DCWY_SHIFT)) & MSCM_CP2CFG0_DCWY_MASK)
#define MSCM_CP2CFG0_DCSZ_MASK                   (0xFF00U)
#define MSCM_CP2CFG0_DCSZ_SHIFT                  (8U)
#define MSCM_CP2CFG0_DCSZ_WIDTH                  (8U)
#define MSCM_CP2CFG0_DCSZ(x)                     (((uint32_t)(((uint32_t)(x)) << MSCM_CP2CFG0_DCSZ_SHIFT)) & MSCM_CP2CFG0_DCSZ_MASK)
#define MSCM_CP2CFG0_ICWY_MASK                   (0xFF0000U)
#define MSCM_CP2CFG0_ICWY_SHIFT                  (16U)
#define MSCM_CP2CFG0_ICWY_WIDTH                  (8U)
#define MSCM_CP2CFG0_ICWY(x)                     (((uint32_t)(((uint32_t)(x)) << MSCM_CP2CFG0_ICWY_SHIFT)) & MSCM_CP2CFG0_ICWY_MASK)
#define MSCM_CP2CFG0_ICSZ_MASK                   (0xFF000000U)
#define MSCM_CP2CFG0_ICSZ_SHIFT                  (24U)
#define MSCM_CP2CFG0_ICSZ_WIDTH                  (8U)
#define MSCM_CP2CFG0_ICSZ(x)                     (((uint32_t)(((uint32_t)(x)) << MSCM_CP2CFG0_ICSZ_SHIFT)) & MSCM_CP2CFG0_ICSZ_MASK)
/*! @} */

/*! @name CP2CFG1 - Processor 2 Configuration 1 Register */
/*! @{ */
#define MSCM_CP2CFG1_L2WY_MASK                   (0xFF0000U)
#define MSCM_CP2CFG1_L2WY_SHIFT                  (16U)
#define MSCM_CP2CFG1_L2WY_WIDTH                  (8U)
#define MSCM_CP2CFG1_L2WY(x)                     (((uint32_t)(((uint32_t)(x)) << MSCM_CP2CFG1_L2WY_SHIFT)) & MSCM_CP2CFG1_L2WY_MASK)
#define MSCM_CP2CFG1_L2SZ_MASK                   (0xFF000000U)
#define MSCM_CP2CFG1_L2SZ_SHIFT                  (24U)
#define MSCM_CP2CFG1_L2SZ_WIDTH                  (8U)
#define MSCM_CP2CFG1_L2SZ(x)                     (((uint32_t)(((uint32_t)(x)) << MSCM_CP2CFG1_L2SZ_SHIFT)) & MSCM_CP2CFG1_L2SZ_MASK)
/*! @} */

/*! @name CP2CFG2 - Processor 2 Configuration 2 Register */
/*! @{ */
#define MSCM_CP2CFG2_TMUSZ_MASK                  (0xFF00U)
#define MSCM_CP2CFG2_TMUSZ_SHIFT                 (8U)
#define MSCM_CP2CFG2_TMUSZ_WIDTH                 (8U)
#define MSCM_CP2CFG2_TMUSZ(x)                    (((uint32_t)(((uint32_t)(x)) << MSCM_CP2CFG2_TMUSZ_SHIFT)) & MSCM_CP2CFG2_TMUSZ_MASK)
#define MSCM_CP2CFG2_TMLSZ_MASK                  (0xFF000000U)
#define MSCM_CP2CFG2_TMLSZ_SHIFT                 (24U)
#define MSCM_CP2CFG2_TMLSZ_WIDTH                 (8U)
#define MSCM_CP2CFG2_TMLSZ(x)                    (((uint32_t)(((uint32_t)(x)) << MSCM_CP2CFG2_TMLSZ_SHIFT)) & MSCM_CP2CFG2_TMLSZ_MASK)
/*! @} */

/*! @name CP2CFG3 - Processor 2 Configuration 3 Register */
/*! @{ */
#define MSCM_CP2CFG3_HW_FPU_MASK                 (0x1U)
#define MSCM_CP2CFG3_HW_FPU_SHIFT                (0U)
#define MSCM_CP2CFG3_HW_FPU_WIDTH                (1U)
#define MSCM_CP2CFG3_HW_FPU(x)                   (((uint32_t)(((uint32_t)(x)) << MSCM_CP2CFG3_HW_FPU_SHIFT)) & MSCM_CP2CFG3_HW_FPU_MASK)
#define MSCM_CP2CFG3_SIMD_MASK                   (0x2U)
#define MSCM_CP2CFG3_SIMD_SHIFT                  (1U)
#define MSCM_CP2CFG3_SIMD_WIDTH                  (1U)
#define MSCM_CP2CFG3_SIMD(x)                     (((uint32_t)(((uint32_t)(x)) << MSCM_CP2CFG3_SIMD_SHIFT)) & MSCM_CP2CFG3_SIMD_MASK)
#define MSCM_CP2CFG3_MMU_MASK                    (0x4U)
#define MSCM_CP2CFG3_MMU_SHIFT                   (2U)
#define MSCM_CP2CFG3_MMU_WIDTH                   (1U)
#define MSCM_CP2CFG3_MMU(x)                      (((uint32_t)(((uint32_t)(x)) << MSCM_CP2CFG3_MMU_SHIFT)) & MSCM_CP2CFG3_MMU_MASK)
#define MSCM_CP2CFG3_CMP_MASK                    (0x8U)
#define MSCM_CP2CFG3_CMP_SHIFT                   (3U)
#define MSCM_CP2CFG3_CMP_WIDTH                   (1U)
#define MSCM_CP2CFG3_CMP(x)                      (((uint32_t)(((uint32_t)(x)) << MSCM_CP2CFG3_CMP_SHIFT)) & MSCM_CP2CFG3_CMP_MASK)
#define MSCM_CP2CFG3_CPY_MASK                    (0x10U)
#define MSCM_CP2CFG3_CPY_SHIFT                   (4U)
#define MSCM_CP2CFG3_CPY_WIDTH                   (1U)
#define MSCM_CP2CFG3_CPY(x)                      (((uint32_t)(((uint32_t)(x)) << MSCM_CP2CFG3_CPY_SHIFT)) & MSCM_CP2CFG3_CPY_MASK)
/*! @} */

/*! @name CP3TYPE - Processor 3 Type Register */
/*! @{ */
#define MSCM_CP3TYPE_PERSONALITY_MASK            (0xFFFFFFFFU)
#define MSCM_CP3TYPE_PERSONALITY_SHIFT           (0U)
#define MSCM_CP3TYPE_PERSONALITY_WIDTH           (32U)
#define MSCM_CP3TYPE_PERSONALITY(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_CP3TYPE_PERSONALITY_SHIFT)) & MSCM_CP3TYPE_PERSONALITY_MASK)
/*! @} */

/*! @name CP3NUM - Processor 3 Number Register */
/*! @{ */
#define MSCM_CP3NUM_CPN_MASK                     (0xFFU)
#define MSCM_CP3NUM_CPN_SHIFT                    (0U)
#define MSCM_CP3NUM_CPN_WIDTH                    (8U)
#define MSCM_CP3NUM_CPN(x)                       (((uint32_t)(((uint32_t)(x)) << MSCM_CP3NUM_CPN_SHIFT)) & MSCM_CP3NUM_CPN_MASK)
/*! @} */

/*! @name CP3REV - Processor 1 Count Register */
/*! @{ */
#define MSCM_CP3REV_RYPZ_MASK                    (0xFFU)
#define MSCM_CP3REV_RYPZ_SHIFT                   (0U)
#define MSCM_CP3REV_RYPZ_WIDTH                   (8U)
#define MSCM_CP3REV_RYPZ(x)                      (((uint32_t)(((uint32_t)(x)) << MSCM_CP3REV_RYPZ_SHIFT)) & MSCM_CP3REV_RYPZ_MASK)
/*! @} */

/*! @name CP3CFG0 - Processor 3 Configuration 0 Register */
/*! @{ */
#define MSCM_CP3CFG0_DCWY_MASK                   (0xFFU)
#define MSCM_CP3CFG0_DCWY_SHIFT                  (0U)
#define MSCM_CP3CFG0_DCWY_WIDTH                  (8U)
#define MSCM_CP3CFG0_DCWY(x)                     (((uint32_t)(((uint32_t)(x)) << MSCM_CP3CFG0_DCWY_SHIFT)) & MSCM_CP3CFG0_DCWY_MASK)
#define MSCM_CP3CFG0_DCSZ_MASK                   (0xFF00U)
#define MSCM_CP3CFG0_DCSZ_SHIFT                  (8U)
#define MSCM_CP3CFG0_DCSZ_WIDTH                  (8U)
#define MSCM_CP3CFG0_DCSZ(x)                     (((uint32_t)(((uint32_t)(x)) << MSCM_CP3CFG0_DCSZ_SHIFT)) & MSCM_CP3CFG0_DCSZ_MASK)
#define MSCM_CP3CFG0_ICWY_MASK                   (0xFF0000U)
#define MSCM_CP3CFG0_ICWY_SHIFT                  (16U)
#define MSCM_CP3CFG0_ICWY_WIDTH                  (8U)
#define MSCM_CP3CFG0_ICWY(x)                     (((uint32_t)(((uint32_t)(x)) << MSCM_CP3CFG0_ICWY_SHIFT)) & MSCM_CP3CFG0_ICWY_MASK)
#define MSCM_CP3CFG0_ICSZ_MASK                   (0xFF000000U)
#define MSCM_CP3CFG0_ICSZ_SHIFT                  (24U)
#define MSCM_CP3CFG0_ICSZ_WIDTH                  (8U)
#define MSCM_CP3CFG0_ICSZ(x)                     (((uint32_t)(((uint32_t)(x)) << MSCM_CP3CFG0_ICSZ_SHIFT)) & MSCM_CP3CFG0_ICSZ_MASK)
/*! @} */

/*! @name CP3CFG1 - Processor 3 Configuration 1 Register */
/*! @{ */
#define MSCM_CP3CFG1_L2WY_MASK                   (0xFF0000U)
#define MSCM_CP3CFG1_L2WY_SHIFT                  (16U)
#define MSCM_CP3CFG1_L2WY_WIDTH                  (8U)
#define MSCM_CP3CFG1_L2WY(x)                     (((uint32_t)(((uint32_t)(x)) << MSCM_CP3CFG1_L2WY_SHIFT)) & MSCM_CP3CFG1_L2WY_MASK)
#define MSCM_CP3CFG1_L2SZ_MASK                   (0xFF000000U)
#define MSCM_CP3CFG1_L2SZ_SHIFT                  (24U)
#define MSCM_CP3CFG1_L2SZ_WIDTH                  (8U)
#define MSCM_CP3CFG1_L2SZ(x)                     (((uint32_t)(((uint32_t)(x)) << MSCM_CP3CFG1_L2SZ_SHIFT)) & MSCM_CP3CFG1_L2SZ_MASK)
/*! @} */

/*! @name CP3CFG2 - Processor 3 Configuration 2 Register */
/*! @{ */
#define MSCM_CP3CFG2_TMUSZ_MASK                  (0xFF00U)
#define MSCM_CP3CFG2_TMUSZ_SHIFT                 (8U)
#define MSCM_CP3CFG2_TMUSZ_WIDTH                 (8U)
#define MSCM_CP3CFG2_TMUSZ(x)                    (((uint32_t)(((uint32_t)(x)) << MSCM_CP3CFG2_TMUSZ_SHIFT)) & MSCM_CP3CFG2_TMUSZ_MASK)
#define MSCM_CP3CFG2_TMLSZ_MASK                  (0xFF000000U)
#define MSCM_CP3CFG2_TMLSZ_SHIFT                 (24U)
#define MSCM_CP3CFG2_TMLSZ_WIDTH                 (8U)
#define MSCM_CP3CFG2_TMLSZ(x)                    (((uint32_t)(((uint32_t)(x)) << MSCM_CP3CFG2_TMLSZ_SHIFT)) & MSCM_CP3CFG2_TMLSZ_MASK)
/*! @} */

/*! @name CP3CFG3 - Processor 3 Configuration 3 Register */
/*! @{ */
#define MSCM_CP3CFG3_HW_FPU_MASK                 (0x1U)
#define MSCM_CP3CFG3_HW_FPU_SHIFT                (0U)
#define MSCM_CP3CFG3_HW_FPU_WIDTH                (1U)
#define MSCM_CP3CFG3_HW_FPU(x)                   (((uint32_t)(((uint32_t)(x)) << MSCM_CP3CFG3_HW_FPU_SHIFT)) & MSCM_CP3CFG3_HW_FPU_MASK)
#define MSCM_CP3CFG3_SIMD_MASK                   (0x2U)
#define MSCM_CP3CFG3_SIMD_SHIFT                  (1U)
#define MSCM_CP3CFG3_SIMD_WIDTH                  (1U)
#define MSCM_CP3CFG3_SIMD(x)                     (((uint32_t)(((uint32_t)(x)) << MSCM_CP3CFG3_SIMD_SHIFT)) & MSCM_CP3CFG3_SIMD_MASK)
#define MSCM_CP3CFG3_MMU_MASK                    (0x4U)
#define MSCM_CP3CFG3_MMU_SHIFT                   (2U)
#define MSCM_CP3CFG3_MMU_WIDTH                   (1U)
#define MSCM_CP3CFG3_MMU(x)                      (((uint32_t)(((uint32_t)(x)) << MSCM_CP3CFG3_MMU_SHIFT)) & MSCM_CP3CFG3_MMU_MASK)
#define MSCM_CP3CFG3_CMP_MASK                    (0x8U)
#define MSCM_CP3CFG3_CMP_SHIFT                   (3U)
#define MSCM_CP3CFG3_CMP_WIDTH                   (1U)
#define MSCM_CP3CFG3_CMP(x)                      (((uint32_t)(((uint32_t)(x)) << MSCM_CP3CFG3_CMP_SHIFT)) & MSCM_CP3CFG3_CMP_MASK)
#define MSCM_CP3CFG3_CPY_MASK                    (0x10U)
#define MSCM_CP3CFG3_CPY_SHIFT                   (4U)
#define MSCM_CP3CFG3_CPY_WIDTH                   (1U)
#define MSCM_CP3CFG3_CPY(x)                      (((uint32_t)(((uint32_t)(x)) << MSCM_CP3CFG3_CPY_SHIFT)) & MSCM_CP3CFG3_CPY_MASK)
/*! @} */

/*! @name CP4TYPE - Processor 4 Type Register */
/*! @{ */
#define MSCM_CP4TYPE_PERSONALITY_MASK            (0xFFFFFFFFU)
#define MSCM_CP4TYPE_PERSONALITY_SHIFT           (0U)
#define MSCM_CP4TYPE_PERSONALITY_WIDTH           (32U)
#define MSCM_CP4TYPE_PERSONALITY(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_CP4TYPE_PERSONALITY_SHIFT)) & MSCM_CP4TYPE_PERSONALITY_MASK)
/*! @} */

/*! @name CP4NUM - Processor 4 Number Register */
/*! @{ */
#define MSCM_CP4NUM_CPN_MASK                     (0xFFU)
#define MSCM_CP4NUM_CPN_SHIFT                    (0U)
#define MSCM_CP4NUM_CPN_WIDTH                    (8U)
#define MSCM_CP4NUM_CPN(x)                       (((uint32_t)(((uint32_t)(x)) << MSCM_CP4NUM_CPN_SHIFT)) & MSCM_CP4NUM_CPN_MASK)
/*! @} */

/*! @name CP4REV - Processor 4 Count Register */
/*! @{ */
#define MSCM_CP4REV_RYPZ_MASK                    (0xFFU)
#define MSCM_CP4REV_RYPZ_SHIFT                   (0U)
#define MSCM_CP4REV_RYPZ_WIDTH                   (8U)
#define MSCM_CP4REV_RYPZ(x)                      (((uint32_t)(((uint32_t)(x)) << MSCM_CP4REV_RYPZ_SHIFT)) & MSCM_CP4REV_RYPZ_MASK)
/*! @} */

/*! @name CP4CFG0 - Processor 3 Configuration 0 Register */
/*! @{ */
#define MSCM_CP4CFG0_DCWY_MASK                   (0xFFU)
#define MSCM_CP4CFG0_DCWY_SHIFT                  (0U)
#define MSCM_CP4CFG0_DCWY_WIDTH                  (8U)
#define MSCM_CP4CFG0_DCWY(x)                     (((uint32_t)(((uint32_t)(x)) << MSCM_CP4CFG0_DCWY_SHIFT)) & MSCM_CP4CFG0_DCWY_MASK)
#define MSCM_CP4CFG0_DCSZ_MASK                   (0xFF00U)
#define MSCM_CP4CFG0_DCSZ_SHIFT                  (8U)
#define MSCM_CP4CFG0_DCSZ_WIDTH                  (8U)
#define MSCM_CP4CFG0_DCSZ(x)                     (((uint32_t)(((uint32_t)(x)) << MSCM_CP4CFG0_DCSZ_SHIFT)) & MSCM_CP4CFG0_DCSZ_MASK)
#define MSCM_CP4CFG0_ICWY_MASK                   (0xFF0000U)
#define MSCM_CP4CFG0_ICWY_SHIFT                  (16U)
#define MSCM_CP4CFG0_ICWY_WIDTH                  (8U)
#define MSCM_CP4CFG0_ICWY(x)                     (((uint32_t)(((uint32_t)(x)) << MSCM_CP4CFG0_ICWY_SHIFT)) & MSCM_CP4CFG0_ICWY_MASK)
#define MSCM_CP4CFG0_ICSZ_MASK                   (0xFF000000U)
#define MSCM_CP4CFG0_ICSZ_SHIFT                  (24U)
#define MSCM_CP4CFG0_ICSZ_WIDTH                  (8U)
#define MSCM_CP4CFG0_ICSZ(x)                     (((uint32_t)(((uint32_t)(x)) << MSCM_CP4CFG0_ICSZ_SHIFT)) & MSCM_CP4CFG0_ICSZ_MASK)
/*! @} */

/*! @name CP4CFG1 - Processor 4 Configuration 1 Register */
/*! @{ */
#define MSCM_CP4CFG1_L2WY_MASK                   (0xFF0000U)
#define MSCM_CP4CFG1_L2WY_SHIFT                  (16U)
#define MSCM_CP4CFG1_L2WY_WIDTH                  (8U)
#define MSCM_CP4CFG1_L2WY(x)                     (((uint32_t)(((uint32_t)(x)) << MSCM_CP4CFG1_L2WY_SHIFT)) & MSCM_CP4CFG1_L2WY_MASK)
#define MSCM_CP4CFG1_L2SZ_MASK                   (0xFF000000U)
#define MSCM_CP4CFG1_L2SZ_SHIFT                  (24U)
#define MSCM_CP4CFG1_L2SZ_WIDTH                  (8U)
#define MSCM_CP4CFG1_L2SZ(x)                     (((uint32_t)(((uint32_t)(x)) << MSCM_CP4CFG1_L2SZ_SHIFT)) & MSCM_CP4CFG1_L2SZ_MASK)
/*! @} */

/*! @name CP4CFG2 - Processor 3 Configuration 2 Register */
/*! @{ */
#define MSCM_CP4CFG2_TMUSZ_MASK                  (0xFF00U)
#define MSCM_CP4CFG2_TMUSZ_SHIFT                 (8U)
#define MSCM_CP4CFG2_TMUSZ_WIDTH                 (8U)
#define MSCM_CP4CFG2_TMUSZ(x)                    (((uint32_t)(((uint32_t)(x)) << MSCM_CP4CFG2_TMUSZ_SHIFT)) & MSCM_CP4CFG2_TMUSZ_MASK)
#define MSCM_CP4CFG2_TMLSZ_MASK                  (0xFF000000U)
#define MSCM_CP4CFG2_TMLSZ_SHIFT                 (24U)
#define MSCM_CP4CFG2_TMLSZ_WIDTH                 (8U)
#define MSCM_CP4CFG2_TMLSZ(x)                    (((uint32_t)(((uint32_t)(x)) << MSCM_CP4CFG2_TMLSZ_SHIFT)) & MSCM_CP4CFG2_TMLSZ_MASK)
/*! @} */

/*! @name CP4CFG3 - Processor 3 Configuration 3 Register */
/*! @{ */
#define MSCM_CP4CFG3_HW_FPU_MASK                 (0x1U)
#define MSCM_CP4CFG3_HW_FPU_SHIFT                (0U)
#define MSCM_CP4CFG3_HW_FPU_WIDTH                (1U)
#define MSCM_CP4CFG3_HW_FPU(x)                   (((uint32_t)(((uint32_t)(x)) << MSCM_CP4CFG3_HW_FPU_SHIFT)) & MSCM_CP4CFG3_HW_FPU_MASK)
#define MSCM_CP4CFG3_SIMD_MASK                   (0x2U)
#define MSCM_CP4CFG3_SIMD_SHIFT                  (1U)
#define MSCM_CP4CFG3_SIMD_WIDTH                  (1U)
#define MSCM_CP4CFG3_SIMD(x)                     (((uint32_t)(((uint32_t)(x)) << MSCM_CP4CFG3_SIMD_SHIFT)) & MSCM_CP4CFG3_SIMD_MASK)
#define MSCM_CP4CFG3_MMU_MASK                    (0x4U)
#define MSCM_CP4CFG3_MMU_SHIFT                   (2U)
#define MSCM_CP4CFG3_MMU_WIDTH                   (1U)
#define MSCM_CP4CFG3_MMU(x)                      (((uint32_t)(((uint32_t)(x)) << MSCM_CP4CFG3_MMU_SHIFT)) & MSCM_CP4CFG3_MMU_MASK)
#define MSCM_CP4CFG3_CMP_MASK                    (0x8U)
#define MSCM_CP4CFG3_CMP_SHIFT                   (3U)
#define MSCM_CP4CFG3_CMP_WIDTH                   (1U)
#define MSCM_CP4CFG3_CMP(x)                      (((uint32_t)(((uint32_t)(x)) << MSCM_CP4CFG3_CMP_SHIFT)) & MSCM_CP4CFG3_CMP_MASK)
#define MSCM_CP4CFG3_CPY_MASK                    (0x10U)
#define MSCM_CP4CFG3_CPY_SHIFT                   (4U)
#define MSCM_CP4CFG3_CPY_WIDTH                   (1U)
#define MSCM_CP4CFG3_CPY(x)                      (((uint32_t)(((uint32_t)(x)) << MSCM_CP4CFG3_CPY_SHIFT)) & MSCM_CP4CFG3_CPY_MASK)
/*! @} */

/*! @name CP5TYPE - Processor 4 Type Register */
/*! @{ */
#define MSCM_CP5TYPE_PERSONALITY_MASK            (0xFFFFFFFFU)
#define MSCM_CP5TYPE_PERSONALITY_SHIFT           (0U)
#define MSCM_CP5TYPE_PERSONALITY_WIDTH           (32U)
#define MSCM_CP5TYPE_PERSONALITY(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_CP5TYPE_PERSONALITY_SHIFT)) & MSCM_CP5TYPE_PERSONALITY_MASK)
/*! @} */

/*! @name CP5NUM - Processor 5 Number Register */
/*! @{ */
#define MSCM_CP5NUM_CPN_MASK                     (0xFFU)
#define MSCM_CP5NUM_CPN_SHIFT                    (0U)
#define MSCM_CP5NUM_CPN_WIDTH                    (8U)
#define MSCM_CP5NUM_CPN(x)                       (((uint32_t)(((uint32_t)(x)) << MSCM_CP5NUM_CPN_SHIFT)) & MSCM_CP5NUM_CPN_MASK)
/*! @} */

/*! @name CP5REV - Processor 5 Count Register */
/*! @{ */
#define MSCM_CP5REV_RYPZ_MASK                    (0xFFU)
#define MSCM_CP5REV_RYPZ_SHIFT                   (0U)
#define MSCM_CP5REV_RYPZ_WIDTH                   (8U)
#define MSCM_CP5REV_RYPZ(x)                      (((uint32_t)(((uint32_t)(x)) << MSCM_CP5REV_RYPZ_SHIFT)) & MSCM_CP5REV_RYPZ_MASK)
/*! @} */

/*! @name CP5CFG0 - Processor 5 Configuration 0 Register */
/*! @{ */
#define MSCM_CP5CFG0_DCWY_MASK                   (0xFFU)
#define MSCM_CP5CFG0_DCWY_SHIFT                  (0U)
#define MSCM_CP5CFG0_DCWY_WIDTH                  (8U)
#define MSCM_CP5CFG0_DCWY(x)                     (((uint32_t)(((uint32_t)(x)) << MSCM_CP5CFG0_DCWY_SHIFT)) & MSCM_CP5CFG0_DCWY_MASK)
#define MSCM_CP5CFG0_DCSZ_MASK                   (0xFF00U)
#define MSCM_CP5CFG0_DCSZ_SHIFT                  (8U)
#define MSCM_CP5CFG0_DCSZ_WIDTH                  (8U)
#define MSCM_CP5CFG0_DCSZ(x)                     (((uint32_t)(((uint32_t)(x)) << MSCM_CP5CFG0_DCSZ_SHIFT)) & MSCM_CP5CFG0_DCSZ_MASK)
#define MSCM_CP5CFG0_ICWY_MASK                   (0xFF0000U)
#define MSCM_CP5CFG0_ICWY_SHIFT                  (16U)
#define MSCM_CP5CFG0_ICWY_WIDTH                  (8U)
#define MSCM_CP5CFG0_ICWY(x)                     (((uint32_t)(((uint32_t)(x)) << MSCM_CP5CFG0_ICWY_SHIFT)) & MSCM_CP5CFG0_ICWY_MASK)
#define MSCM_CP5CFG0_ICSZ_MASK                   (0xFF000000U)
#define MSCM_CP5CFG0_ICSZ_SHIFT                  (24U)
#define MSCM_CP5CFG0_ICSZ_WIDTH                  (8U)
#define MSCM_CP5CFG0_ICSZ(x)                     (((uint32_t)(((uint32_t)(x)) << MSCM_CP5CFG0_ICSZ_SHIFT)) & MSCM_CP5CFG0_ICSZ_MASK)
/*! @} */

/*! @name CP5CFG1 - Processor 5 Configuration 1 Register */
/*! @{ */
#define MSCM_CP5CFG1_L2WY_MASK                   (0xFF0000U)
#define MSCM_CP5CFG1_L2WY_SHIFT                  (16U)
#define MSCM_CP5CFG1_L2WY_WIDTH                  (8U)
#define MSCM_CP5CFG1_L2WY(x)                     (((uint32_t)(((uint32_t)(x)) << MSCM_CP5CFG1_L2WY_SHIFT)) & MSCM_CP5CFG1_L2WY_MASK)
#define MSCM_CP5CFG1_L2SZ_MASK                   (0xFF000000U)
#define MSCM_CP5CFG1_L2SZ_SHIFT                  (24U)
#define MSCM_CP5CFG1_L2SZ_WIDTH                  (8U)
#define MSCM_CP5CFG1_L2SZ(x)                     (((uint32_t)(((uint32_t)(x)) << MSCM_CP5CFG1_L2SZ_SHIFT)) & MSCM_CP5CFG1_L2SZ_MASK)
/*! @} */

/*! @name CP5CFG2 - Processor 5 Configuration 2 Register */
/*! @{ */
#define MSCM_CP5CFG2_TMUSZ_MASK                  (0xFF00U)
#define MSCM_CP5CFG2_TMUSZ_SHIFT                 (8U)
#define MSCM_CP5CFG2_TMUSZ_WIDTH                 (8U)
#define MSCM_CP5CFG2_TMUSZ(x)                    (((uint32_t)(((uint32_t)(x)) << MSCM_CP5CFG2_TMUSZ_SHIFT)) & MSCM_CP5CFG2_TMUSZ_MASK)
#define MSCM_CP5CFG2_TMLSZ_MASK                  (0xFF000000U)
#define MSCM_CP5CFG2_TMLSZ_SHIFT                 (24U)
#define MSCM_CP5CFG2_TMLSZ_WIDTH                 (8U)
#define MSCM_CP5CFG2_TMLSZ(x)                    (((uint32_t)(((uint32_t)(x)) << MSCM_CP5CFG2_TMLSZ_SHIFT)) & MSCM_CP5CFG2_TMLSZ_MASK)
/*! @} */

/*! @name CP5CFG3 - Processor 5 Configuration 3 Register */
/*! @{ */
#define MSCM_CP5CFG3_HW_FPU_MASK                 (0x1U)
#define MSCM_CP5CFG3_HW_FPU_SHIFT                (0U)
#define MSCM_CP5CFG3_HW_FPU_WIDTH                (1U)
#define MSCM_CP5CFG3_HW_FPU(x)                   (((uint32_t)(((uint32_t)(x)) << MSCM_CP5CFG3_HW_FPU_SHIFT)) & MSCM_CP5CFG3_HW_FPU_MASK)
#define MSCM_CP5CFG3_SIMD_MASK                   (0x2U)
#define MSCM_CP5CFG3_SIMD_SHIFT                  (1U)
#define MSCM_CP5CFG3_SIMD_WIDTH                  (1U)
#define MSCM_CP5CFG3_SIMD(x)                     (((uint32_t)(((uint32_t)(x)) << MSCM_CP5CFG3_SIMD_SHIFT)) & MSCM_CP5CFG3_SIMD_MASK)
#define MSCM_CP5CFG3_MMU_MASK                    (0x4U)
#define MSCM_CP5CFG3_MMU_SHIFT                   (2U)
#define MSCM_CP5CFG3_MMU_WIDTH                   (1U)
#define MSCM_CP5CFG3_MMU(x)                      (((uint32_t)(((uint32_t)(x)) << MSCM_CP5CFG3_MMU_SHIFT)) & MSCM_CP5CFG3_MMU_MASK)
#define MSCM_CP5CFG3_CMP_MASK                    (0x8U)
#define MSCM_CP5CFG3_CMP_SHIFT                   (3U)
#define MSCM_CP5CFG3_CMP_WIDTH                   (1U)
#define MSCM_CP5CFG3_CMP(x)                      (((uint32_t)(((uint32_t)(x)) << MSCM_CP5CFG3_CMP_SHIFT)) & MSCM_CP5CFG3_CMP_MASK)
#define MSCM_CP5CFG3_CPY_MASK                    (0x10U)
#define MSCM_CP5CFG3_CPY_SHIFT                   (4U)
#define MSCM_CP5CFG3_CPY_WIDTH                   (1U)
#define MSCM_CP5CFG3_CPY(x)                      (((uint32_t)(((uint32_t)(x)) << MSCM_CP5CFG3_CPY_SHIFT)) & MSCM_CP5CFG3_CPY_MASK)
/*! @} */

/*! @name CP6TYPE - Processor 6 Type Register */
/*! @{ */
#define MSCM_CP6TYPE_PERSONALITY_MASK            (0xFFFFFFFFU)
#define MSCM_CP6TYPE_PERSONALITY_SHIFT           (0U)
#define MSCM_CP6TYPE_PERSONALITY_WIDTH           (32U)
#define MSCM_CP6TYPE_PERSONALITY(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_CP6TYPE_PERSONALITY_SHIFT)) & MSCM_CP6TYPE_PERSONALITY_MASK)
/*! @} */

/*! @name CP6NUM - Processor 6 Number Register */
/*! @{ */
#define MSCM_CP6NUM_CPN_MASK                     (0xFFU)
#define MSCM_CP6NUM_CPN_SHIFT                    (0U)
#define MSCM_CP6NUM_CPN_WIDTH                    (8U)
#define MSCM_CP6NUM_CPN(x)                       (((uint32_t)(((uint32_t)(x)) << MSCM_CP6NUM_CPN_SHIFT)) & MSCM_CP6NUM_CPN_MASK)
/*! @} */

/*! @name CP6REV - Processor 6 Count Register */
/*! @{ */
#define MSCM_CP6REV_RYPZ_MASK                    (0xFFU)
#define MSCM_CP6REV_RYPZ_SHIFT                   (0U)
#define MSCM_CP6REV_RYPZ_WIDTH                   (8U)
#define MSCM_CP6REV_RYPZ(x)                      (((uint32_t)(((uint32_t)(x)) << MSCM_CP6REV_RYPZ_SHIFT)) & MSCM_CP6REV_RYPZ_MASK)
/*! @} */

/*! @name CP6CFG0 - Processor 6 Configuration 0 Register */
/*! @{ */
#define MSCM_CP6CFG0_DCWY_MASK                   (0xFFU)
#define MSCM_CP6CFG0_DCWY_SHIFT                  (0U)
#define MSCM_CP6CFG0_DCWY_WIDTH                  (8U)
#define MSCM_CP6CFG0_DCWY(x)                     (((uint32_t)(((uint32_t)(x)) << MSCM_CP6CFG0_DCWY_SHIFT)) & MSCM_CP6CFG0_DCWY_MASK)
#define MSCM_CP6CFG0_DCSZ_MASK                   (0xFF00U)
#define MSCM_CP6CFG0_DCSZ_SHIFT                  (8U)
#define MSCM_CP6CFG0_DCSZ_WIDTH                  (8U)
#define MSCM_CP6CFG0_DCSZ(x)                     (((uint32_t)(((uint32_t)(x)) << MSCM_CP6CFG0_DCSZ_SHIFT)) & MSCM_CP6CFG0_DCSZ_MASK)
#define MSCM_CP6CFG0_ICWY_MASK                   (0xFF0000U)
#define MSCM_CP6CFG0_ICWY_SHIFT                  (16U)
#define MSCM_CP6CFG0_ICWY_WIDTH                  (8U)
#define MSCM_CP6CFG0_ICWY(x)                     (((uint32_t)(((uint32_t)(x)) << MSCM_CP6CFG0_ICWY_SHIFT)) & MSCM_CP6CFG0_ICWY_MASK)
#define MSCM_CP6CFG0_ICSZ_MASK                   (0xFF000000U)
#define MSCM_CP6CFG0_ICSZ_SHIFT                  (24U)
#define MSCM_CP6CFG0_ICSZ_WIDTH                  (8U)
#define MSCM_CP6CFG0_ICSZ(x)                     (((uint32_t)(((uint32_t)(x)) << MSCM_CP6CFG0_ICSZ_SHIFT)) & MSCM_CP6CFG0_ICSZ_MASK)
/*! @} */

/*! @name CP6CFG1 - Processor 6 Configuration 1 Register */
/*! @{ */
#define MSCM_CP6CFG1_L2WY_MASK                   (0xFF0000U)
#define MSCM_CP6CFG1_L2WY_SHIFT                  (16U)
#define MSCM_CP6CFG1_L2WY_WIDTH                  (8U)
#define MSCM_CP6CFG1_L2WY(x)                     (((uint32_t)(((uint32_t)(x)) << MSCM_CP6CFG1_L2WY_SHIFT)) & MSCM_CP6CFG1_L2WY_MASK)
#define MSCM_CP6CFG1_L2SZ_MASK                   (0xFF000000U)
#define MSCM_CP6CFG1_L2SZ_SHIFT                  (24U)
#define MSCM_CP6CFG1_L2SZ_WIDTH                  (8U)
#define MSCM_CP6CFG1_L2SZ(x)                     (((uint32_t)(((uint32_t)(x)) << MSCM_CP6CFG1_L2SZ_SHIFT)) & MSCM_CP6CFG1_L2SZ_MASK)
/*! @} */

/*! @name CP6CFG2 - Processor 6 Configuration 2 Register */
/*! @{ */
#define MSCM_CP6CFG2_TMUSZ_MASK                  (0xFF00U)
#define MSCM_CP6CFG2_TMUSZ_SHIFT                 (8U)
#define MSCM_CP6CFG2_TMUSZ_WIDTH                 (8U)
#define MSCM_CP6CFG2_TMUSZ(x)                    (((uint32_t)(((uint32_t)(x)) << MSCM_CP6CFG2_TMUSZ_SHIFT)) & MSCM_CP6CFG2_TMUSZ_MASK)
#define MSCM_CP6CFG2_TMLSZ_MASK                  (0xFF000000U)
#define MSCM_CP6CFG2_TMLSZ_SHIFT                 (24U)
#define MSCM_CP6CFG2_TMLSZ_WIDTH                 (8U)
#define MSCM_CP6CFG2_TMLSZ(x)                    (((uint32_t)(((uint32_t)(x)) << MSCM_CP6CFG2_TMLSZ_SHIFT)) & MSCM_CP6CFG2_TMLSZ_MASK)
/*! @} */

/*! @name CP6CFG3 - Processor 6 Configuration 3 Register */
/*! @{ */
#define MSCM_CP6CFG3_HW_FPU_MASK                 (0x1U)
#define MSCM_CP6CFG3_HW_FPU_SHIFT                (0U)
#define MSCM_CP6CFG3_HW_FPU_WIDTH                (1U)
#define MSCM_CP6CFG3_HW_FPU(x)                   (((uint32_t)(((uint32_t)(x)) << MSCM_CP6CFG3_HW_FPU_SHIFT)) & MSCM_CP6CFG3_HW_FPU_MASK)
#define MSCM_CP6CFG3_SIMD_MASK                   (0x2U)
#define MSCM_CP6CFG3_SIMD_SHIFT                  (1U)
#define MSCM_CP6CFG3_SIMD_WIDTH                  (1U)
#define MSCM_CP6CFG3_SIMD(x)                     (((uint32_t)(((uint32_t)(x)) << MSCM_CP6CFG3_SIMD_SHIFT)) & MSCM_CP6CFG3_SIMD_MASK)
#define MSCM_CP6CFG3_MMU_MASK                    (0x4U)
#define MSCM_CP6CFG3_MMU_SHIFT                   (2U)
#define MSCM_CP6CFG3_MMU_WIDTH                   (1U)
#define MSCM_CP6CFG3_MMU(x)                      (((uint32_t)(((uint32_t)(x)) << MSCM_CP6CFG3_MMU_SHIFT)) & MSCM_CP6CFG3_MMU_MASK)
#define MSCM_CP6CFG3_CMP_MASK                    (0x8U)
#define MSCM_CP6CFG3_CMP_SHIFT                   (3U)
#define MSCM_CP6CFG3_CMP_WIDTH                   (1U)
#define MSCM_CP6CFG3_CMP(x)                      (((uint32_t)(((uint32_t)(x)) << MSCM_CP6CFG3_CMP_SHIFT)) & MSCM_CP6CFG3_CMP_MASK)
#define MSCM_CP6CFG3_CPY_MASK                    (0x10U)
#define MSCM_CP6CFG3_CPY_SHIFT                   (4U)
#define MSCM_CP6CFG3_CPY_WIDTH                   (1U)
#define MSCM_CP6CFG3_CPY(x)                      (((uint32_t)(((uint32_t)(x)) << MSCM_CP6CFG3_CPY_SHIFT)) & MSCM_CP6CFG3_CPY_MASK)
/*! @} */

/*! @name IRCP0ISR0 - Interrupt Router CP0 Interrupt0 Status Register */
/*! @{ */
#define MSCM_IRCP0ISR0_CP0_INT_MASK              (0x1U)
#define MSCM_IRCP0ISR0_CP0_INT_SHIFT             (0U)
#define MSCM_IRCP0ISR0_CP0_INT_WIDTH             (1U)
#define MSCM_IRCP0ISR0_CP0_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0ISR0_CP0_INT_SHIFT)) & MSCM_IRCP0ISR0_CP0_INT_MASK)
#define MSCM_IRCP0ISR0_CP1_INT_MASK              (0x2U)
#define MSCM_IRCP0ISR0_CP1_INT_SHIFT             (1U)
#define MSCM_IRCP0ISR0_CP1_INT_WIDTH             (1U)
#define MSCM_IRCP0ISR0_CP1_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0ISR0_CP1_INT_SHIFT)) & MSCM_IRCP0ISR0_CP1_INT_MASK)
#define MSCM_IRCP0ISR0_CP2_INT_MASK              (0x4U)
#define MSCM_IRCP0ISR0_CP2_INT_SHIFT             (2U)
#define MSCM_IRCP0ISR0_CP2_INT_WIDTH             (1U)
#define MSCM_IRCP0ISR0_CP2_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0ISR0_CP2_INT_SHIFT)) & MSCM_IRCP0ISR0_CP2_INT_MASK)
#define MSCM_IRCP0ISR0_CP3_INT_MASK              (0x8U)
#define MSCM_IRCP0ISR0_CP3_INT_SHIFT             (3U)
#define MSCM_IRCP0ISR0_CP3_INT_WIDTH             (1U)
#define MSCM_IRCP0ISR0_CP3_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0ISR0_CP3_INT_SHIFT)) & MSCM_IRCP0ISR0_CP3_INT_MASK)
#define MSCM_IRCP0ISR0_CP4_INT_MASK              (0x10U)
#define MSCM_IRCP0ISR0_CP4_INT_SHIFT             (4U)
#define MSCM_IRCP0ISR0_CP4_INT_WIDTH             (1U)
#define MSCM_IRCP0ISR0_CP4_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0ISR0_CP4_INT_SHIFT)) & MSCM_IRCP0ISR0_CP4_INT_MASK)
#define MSCM_IRCP0ISR0_CP5_INT_MASK              (0x20U)
#define MSCM_IRCP0ISR0_CP5_INT_SHIFT             (5U)
#define MSCM_IRCP0ISR0_CP5_INT_WIDTH             (1U)
#define MSCM_IRCP0ISR0_CP5_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0ISR0_CP5_INT_SHIFT)) & MSCM_IRCP0ISR0_CP5_INT_MASK)
#define MSCM_IRCP0ISR0_CP6_INT_MASK              (0x40U)
#define MSCM_IRCP0ISR0_CP6_INT_SHIFT             (6U)
#define MSCM_IRCP0ISR0_CP6_INT_WIDTH             (1U)
#define MSCM_IRCP0ISR0_CP6_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0ISR0_CP6_INT_SHIFT)) & MSCM_IRCP0ISR0_CP6_INT_MASK)
/*! @} */

/*! @name IRCP0IGR0 - Interrupt Router CP0 Interrupt0 Generation Register */
/*! @{ */
#define MSCM_IRCP0IGR0_INT_EN_MASK               (0x1U)
#define MSCM_IRCP0IGR0_INT_EN_SHIFT              (0U)
#define MSCM_IRCP0IGR0_INT_EN_WIDTH              (1U)
#define MSCM_IRCP0IGR0_INT_EN(x)                 (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0IGR0_INT_EN_SHIFT)) & MSCM_IRCP0IGR0_INT_EN_MASK)
/*! @} */

/*! @name IRCP0ISR1 - Interrupt Router CP0 Interrupt1 Status Register */
/*! @{ */
#define MSCM_IRCP0ISR1_CP0_INT_MASK              (0x1U)
#define MSCM_IRCP0ISR1_CP0_INT_SHIFT             (0U)
#define MSCM_IRCP0ISR1_CP0_INT_WIDTH             (1U)
#define MSCM_IRCP0ISR1_CP0_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0ISR1_CP0_INT_SHIFT)) & MSCM_IRCP0ISR1_CP0_INT_MASK)
#define MSCM_IRCP0ISR1_CP1_INT_MASK              (0x2U)
#define MSCM_IRCP0ISR1_CP1_INT_SHIFT             (1U)
#define MSCM_IRCP0ISR1_CP1_INT_WIDTH             (1U)
#define MSCM_IRCP0ISR1_CP1_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0ISR1_CP1_INT_SHIFT)) & MSCM_IRCP0ISR1_CP1_INT_MASK)
#define MSCM_IRCP0ISR1_CP2_INT_MASK              (0x4U)
#define MSCM_IRCP0ISR1_CP2_INT_SHIFT             (2U)
#define MSCM_IRCP0ISR1_CP2_INT_WIDTH             (1U)
#define MSCM_IRCP0ISR1_CP2_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0ISR1_CP2_INT_SHIFT)) & MSCM_IRCP0ISR1_CP2_INT_MASK)
#define MSCM_IRCP0ISR1_CP3_INT_MASK              (0x8U)
#define MSCM_IRCP0ISR1_CP3_INT_SHIFT             (3U)
#define MSCM_IRCP0ISR1_CP3_INT_WIDTH             (1U)
#define MSCM_IRCP0ISR1_CP3_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0ISR1_CP3_INT_SHIFT)) & MSCM_IRCP0ISR1_CP3_INT_MASK)
#define MSCM_IRCP0ISR1_CP4_INT_MASK              (0x10U)
#define MSCM_IRCP0ISR1_CP4_INT_SHIFT             (4U)
#define MSCM_IRCP0ISR1_CP4_INT_WIDTH             (1U)
#define MSCM_IRCP0ISR1_CP4_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0ISR1_CP4_INT_SHIFT)) & MSCM_IRCP0ISR1_CP4_INT_MASK)
#define MSCM_IRCP0ISR1_CP5_INT_MASK              (0x20U)
#define MSCM_IRCP0ISR1_CP5_INT_SHIFT             (5U)
#define MSCM_IRCP0ISR1_CP5_INT_WIDTH             (1U)
#define MSCM_IRCP0ISR1_CP5_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0ISR1_CP5_INT_SHIFT)) & MSCM_IRCP0ISR1_CP5_INT_MASK)
#define MSCM_IRCP0ISR1_CP6_INT_MASK              (0x40U)
#define MSCM_IRCP0ISR1_CP6_INT_SHIFT             (6U)
#define MSCM_IRCP0ISR1_CP6_INT_WIDTH             (1U)
#define MSCM_IRCP0ISR1_CP6_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0ISR1_CP6_INT_SHIFT)) & MSCM_IRCP0ISR1_CP6_INT_MASK)
/*! @} */

/*! @name IRCP0IGR1 - Interrupt Router CP0 Interrupt1 Generation Register */
/*! @{ */
#define MSCM_IRCP0IGR1_INT_EN_MASK               (0x1U)
#define MSCM_IRCP0IGR1_INT_EN_SHIFT              (0U)
#define MSCM_IRCP0IGR1_INT_EN_WIDTH              (1U)
#define MSCM_IRCP0IGR1_INT_EN(x)                 (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0IGR1_INT_EN_SHIFT)) & MSCM_IRCP0IGR1_INT_EN_MASK)
/*! @} */

/*! @name IRCP0ISR2 - Interrupt Router CP0 Interrupt2 Status Register */
/*! @{ */
#define MSCM_IRCP0ISR2_CP0_INT_MASK              (0x1U)
#define MSCM_IRCP0ISR2_CP0_INT_SHIFT             (0U)
#define MSCM_IRCP0ISR2_CP0_INT_WIDTH             (1U)
#define MSCM_IRCP0ISR2_CP0_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0ISR2_CP0_INT_SHIFT)) & MSCM_IRCP0ISR2_CP0_INT_MASK)
#define MSCM_IRCP0ISR2_CP1_INT_MASK              (0x2U)
#define MSCM_IRCP0ISR2_CP1_INT_SHIFT             (1U)
#define MSCM_IRCP0ISR2_CP1_INT_WIDTH             (1U)
#define MSCM_IRCP0ISR2_CP1_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0ISR2_CP1_INT_SHIFT)) & MSCM_IRCP0ISR2_CP1_INT_MASK)
#define MSCM_IRCP0ISR2_CP2_INT_MASK              (0x4U)
#define MSCM_IRCP0ISR2_CP2_INT_SHIFT             (2U)
#define MSCM_IRCP0ISR2_CP2_INT_WIDTH             (1U)
#define MSCM_IRCP0ISR2_CP2_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0ISR2_CP2_INT_SHIFT)) & MSCM_IRCP0ISR2_CP2_INT_MASK)
#define MSCM_IRCP0ISR2_CP3_INT_MASK              (0x8U)
#define MSCM_IRCP0ISR2_CP3_INT_SHIFT             (3U)
#define MSCM_IRCP0ISR2_CP3_INT_WIDTH             (1U)
#define MSCM_IRCP0ISR2_CP3_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0ISR2_CP3_INT_SHIFT)) & MSCM_IRCP0ISR2_CP3_INT_MASK)
#define MSCM_IRCP0ISR2_CP4_INT_MASK              (0x10U)
#define MSCM_IRCP0ISR2_CP4_INT_SHIFT             (4U)
#define MSCM_IRCP0ISR2_CP4_INT_WIDTH             (1U)
#define MSCM_IRCP0ISR2_CP4_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0ISR2_CP4_INT_SHIFT)) & MSCM_IRCP0ISR2_CP4_INT_MASK)
#define MSCM_IRCP0ISR2_CP5_INT_MASK              (0x20U)
#define MSCM_IRCP0ISR2_CP5_INT_SHIFT             (5U)
#define MSCM_IRCP0ISR2_CP5_INT_WIDTH             (1U)
#define MSCM_IRCP0ISR2_CP5_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0ISR2_CP5_INT_SHIFT)) & MSCM_IRCP0ISR2_CP5_INT_MASK)
#define MSCM_IRCP0ISR2_CP6_INT_MASK              (0x40U)
#define MSCM_IRCP0ISR2_CP6_INT_SHIFT             (6U)
#define MSCM_IRCP0ISR2_CP6_INT_WIDTH             (1U)
#define MSCM_IRCP0ISR2_CP6_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0ISR2_CP6_INT_SHIFT)) & MSCM_IRCP0ISR2_CP6_INT_MASK)
/*! @} */

/*! @name IRCP0IGR2 - Interrupt Router CP0 Interrupt2 Generation Register */
/*! @{ */
#define MSCM_IRCP0IGR2_INT_EN_MASK               (0x1U)
#define MSCM_IRCP0IGR2_INT_EN_SHIFT              (0U)
#define MSCM_IRCP0IGR2_INT_EN_WIDTH              (1U)
#define MSCM_IRCP0IGR2_INT_EN(x)                 (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0IGR2_INT_EN_SHIFT)) & MSCM_IRCP0IGR2_INT_EN_MASK)
/*! @} */

/*! @name IRCP0ISR3 - Interrupt Router CPn Interruptx Status Register */
/*! @{ */
#define MSCM_IRCP0ISR3_PCIE_INT0_MASK            (0x1U)
#define MSCM_IRCP0ISR3_PCIE_INT0_SHIFT           (0U)
#define MSCM_IRCP0ISR3_PCIE_INT0_WIDTH           (1U)
#define MSCM_IRCP0ISR3_PCIE_INT0(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0ISR3_PCIE_INT0_SHIFT)) & MSCM_IRCP0ISR3_PCIE_INT0_MASK)
#define MSCM_IRCP0ISR3_PCIE_INT1_MASK            (0x2U)
#define MSCM_IRCP0ISR3_PCIE_INT1_SHIFT           (1U)
#define MSCM_IRCP0ISR3_PCIE_INT1_WIDTH           (1U)
#define MSCM_IRCP0ISR3_PCIE_INT1(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0ISR3_PCIE_INT1_SHIFT)) & MSCM_IRCP0ISR3_PCIE_INT1_MASK)
#define MSCM_IRCP0ISR3_PCIE_INT2_MASK            (0x4U)
#define MSCM_IRCP0ISR3_PCIE_INT2_SHIFT           (2U)
#define MSCM_IRCP0ISR3_PCIE_INT2_WIDTH           (1U)
#define MSCM_IRCP0ISR3_PCIE_INT2(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0ISR3_PCIE_INT2_SHIFT)) & MSCM_IRCP0ISR3_PCIE_INT2_MASK)
#define MSCM_IRCP0ISR3_PCIE_INT3_MASK            (0x8U)
#define MSCM_IRCP0ISR3_PCIE_INT3_SHIFT           (3U)
#define MSCM_IRCP0ISR3_PCIE_INT3_WIDTH           (1U)
#define MSCM_IRCP0ISR3_PCIE_INT3(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0ISR3_PCIE_INT3_SHIFT)) & MSCM_IRCP0ISR3_PCIE_INT3_MASK)
#define MSCM_IRCP0ISR3_PCIE_INT4_MASK            (0x10U)
#define MSCM_IRCP0ISR3_PCIE_INT4_SHIFT           (4U)
#define MSCM_IRCP0ISR3_PCIE_INT4_WIDTH           (1U)
#define MSCM_IRCP0ISR3_PCIE_INT4(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0ISR3_PCIE_INT4_SHIFT)) & MSCM_IRCP0ISR3_PCIE_INT4_MASK)
#define MSCM_IRCP0ISR3_PCIE_INT5_MASK            (0x20U)
#define MSCM_IRCP0ISR3_PCIE_INT5_SHIFT           (5U)
#define MSCM_IRCP0ISR3_PCIE_INT5_WIDTH           (1U)
#define MSCM_IRCP0ISR3_PCIE_INT5(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0ISR3_PCIE_INT5_SHIFT)) & MSCM_IRCP0ISR3_PCIE_INT5_MASK)
#define MSCM_IRCP0ISR3_PCIE_INT6_MASK            (0x40U)
#define MSCM_IRCP0ISR3_PCIE_INT6_SHIFT           (6U)
#define MSCM_IRCP0ISR3_PCIE_INT6_WIDTH           (1U)
#define MSCM_IRCP0ISR3_PCIE_INT6(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0ISR3_PCIE_INT6_SHIFT)) & MSCM_IRCP0ISR3_PCIE_INT6_MASK)
#define MSCM_IRCP0ISR3_PCIE_INT7_MASK            (0x80U)
#define MSCM_IRCP0ISR3_PCIE_INT7_SHIFT           (7U)
#define MSCM_IRCP0ISR3_PCIE_INT7_WIDTH           (1U)
#define MSCM_IRCP0ISR3_PCIE_INT7(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0ISR3_PCIE_INT7_SHIFT)) & MSCM_IRCP0ISR3_PCIE_INT7_MASK)
#define MSCM_IRCP0ISR3_PCIE_INT8_MASK            (0x100U)
#define MSCM_IRCP0ISR3_PCIE_INT8_SHIFT           (8U)
#define MSCM_IRCP0ISR3_PCIE_INT8_WIDTH           (1U)
#define MSCM_IRCP0ISR3_PCIE_INT8(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0ISR3_PCIE_INT8_SHIFT)) & MSCM_IRCP0ISR3_PCIE_INT8_MASK)
#define MSCM_IRCP0ISR3_PCIE_INT9_MASK            (0x200U)
#define MSCM_IRCP0ISR3_PCIE_INT9_SHIFT           (9U)
#define MSCM_IRCP0ISR3_PCIE_INT9_WIDTH           (1U)
#define MSCM_IRCP0ISR3_PCIE_INT9(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0ISR3_PCIE_INT9_SHIFT)) & MSCM_IRCP0ISR3_PCIE_INT9_MASK)
#define MSCM_IRCP0ISR3_PCIE_INT10_MASK           (0x400U)
#define MSCM_IRCP0ISR3_PCIE_INT10_SHIFT          (10U)
#define MSCM_IRCP0ISR3_PCIE_INT10_WIDTH          (1U)
#define MSCM_IRCP0ISR3_PCIE_INT10(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0ISR3_PCIE_INT10_SHIFT)) & MSCM_IRCP0ISR3_PCIE_INT10_MASK)
#define MSCM_IRCP0ISR3_PCIE_INT11_MASK           (0x800U)
#define MSCM_IRCP0ISR3_PCIE_INT11_SHIFT          (11U)
#define MSCM_IRCP0ISR3_PCIE_INT11_WIDTH          (1U)
#define MSCM_IRCP0ISR3_PCIE_INT11(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0ISR3_PCIE_INT11_SHIFT)) & MSCM_IRCP0ISR3_PCIE_INT11_MASK)
#define MSCM_IRCP0ISR3_PCIE_INT12_MASK           (0x1000U)
#define MSCM_IRCP0ISR3_PCIE_INT12_SHIFT          (12U)
#define MSCM_IRCP0ISR3_PCIE_INT12_WIDTH          (1U)
#define MSCM_IRCP0ISR3_PCIE_INT12(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0ISR3_PCIE_INT12_SHIFT)) & MSCM_IRCP0ISR3_PCIE_INT12_MASK)
#define MSCM_IRCP0ISR3_PCIE_INT13_MASK           (0x2000U)
#define MSCM_IRCP0ISR3_PCIE_INT13_SHIFT          (13U)
#define MSCM_IRCP0ISR3_PCIE_INT13_WIDTH          (1U)
#define MSCM_IRCP0ISR3_PCIE_INT13(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0ISR3_PCIE_INT13_SHIFT)) & MSCM_IRCP0ISR3_PCIE_INT13_MASK)
#define MSCM_IRCP0ISR3_PCIE_INT14_MASK           (0x4000U)
#define MSCM_IRCP0ISR3_PCIE_INT14_SHIFT          (14U)
#define MSCM_IRCP0ISR3_PCIE_INT14_WIDTH          (1U)
#define MSCM_IRCP0ISR3_PCIE_INT14(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0ISR3_PCIE_INT14_SHIFT)) & MSCM_IRCP0ISR3_PCIE_INT14_MASK)
#define MSCM_IRCP0ISR3_PCIE_INT15_MASK           (0x8000U)
#define MSCM_IRCP0ISR3_PCIE_INT15_SHIFT          (15U)
#define MSCM_IRCP0ISR3_PCIE_INT15_WIDTH          (1U)
#define MSCM_IRCP0ISR3_PCIE_INT15(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0ISR3_PCIE_INT15_SHIFT)) & MSCM_IRCP0ISR3_PCIE_INT15_MASK)
/*! @} */

/*! @name IRCP0IGR3 - Interrupt Router CPn Interruptx Generation Register */
/*! @{ */
#define MSCM_IRCP0IGR3_INT0_EN_MASK              (0x1U)
#define MSCM_IRCP0IGR3_INT0_EN_SHIFT             (0U)
#define MSCM_IRCP0IGR3_INT0_EN_WIDTH             (1U)
#define MSCM_IRCP0IGR3_INT0_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0IGR3_INT0_EN_SHIFT)) & MSCM_IRCP0IGR3_INT0_EN_MASK)
#define MSCM_IRCP0IGR3_INT1_EN_MASK              (0x2U)
#define MSCM_IRCP0IGR3_INT1_EN_SHIFT             (1U)
#define MSCM_IRCP0IGR3_INT1_EN_WIDTH             (1U)
#define MSCM_IRCP0IGR3_INT1_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0IGR3_INT1_EN_SHIFT)) & MSCM_IRCP0IGR3_INT1_EN_MASK)
#define MSCM_IRCP0IGR3_INT2_EN_MASK              (0x4U)
#define MSCM_IRCP0IGR3_INT2_EN_SHIFT             (2U)
#define MSCM_IRCP0IGR3_INT2_EN_WIDTH             (1U)
#define MSCM_IRCP0IGR3_INT2_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0IGR3_INT2_EN_SHIFT)) & MSCM_IRCP0IGR3_INT2_EN_MASK)
#define MSCM_IRCP0IGR3_INT3_EN_MASK              (0x8U)
#define MSCM_IRCP0IGR3_INT3_EN_SHIFT             (3U)
#define MSCM_IRCP0IGR3_INT3_EN_WIDTH             (1U)
#define MSCM_IRCP0IGR3_INT3_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0IGR3_INT3_EN_SHIFT)) & MSCM_IRCP0IGR3_INT3_EN_MASK)
#define MSCM_IRCP0IGR3_INT4_EN_MASK              (0x10U)
#define MSCM_IRCP0IGR3_INT4_EN_SHIFT             (4U)
#define MSCM_IRCP0IGR3_INT4_EN_WIDTH             (1U)
#define MSCM_IRCP0IGR3_INT4_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0IGR3_INT4_EN_SHIFT)) & MSCM_IRCP0IGR3_INT4_EN_MASK)
#define MSCM_IRCP0IGR3_INT5_EN_MASK              (0x20U)
#define MSCM_IRCP0IGR3_INT5_EN_SHIFT             (5U)
#define MSCM_IRCP0IGR3_INT5_EN_WIDTH             (1U)
#define MSCM_IRCP0IGR3_INT5_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0IGR3_INT5_EN_SHIFT)) & MSCM_IRCP0IGR3_INT5_EN_MASK)
#define MSCM_IRCP0IGR3_INT6_EN_MASK              (0x40U)
#define MSCM_IRCP0IGR3_INT6_EN_SHIFT             (6U)
#define MSCM_IRCP0IGR3_INT6_EN_WIDTH             (1U)
#define MSCM_IRCP0IGR3_INT6_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0IGR3_INT6_EN_SHIFT)) & MSCM_IRCP0IGR3_INT6_EN_MASK)
#define MSCM_IRCP0IGR3_INT7_EN_MASK              (0x80U)
#define MSCM_IRCP0IGR3_INT7_EN_SHIFT             (7U)
#define MSCM_IRCP0IGR3_INT7_EN_WIDTH             (1U)
#define MSCM_IRCP0IGR3_INT7_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0IGR3_INT7_EN_SHIFT)) & MSCM_IRCP0IGR3_INT7_EN_MASK)
#define MSCM_IRCP0IGR3_INT8_EN_MASK              (0x100U)
#define MSCM_IRCP0IGR3_INT8_EN_SHIFT             (8U)
#define MSCM_IRCP0IGR3_INT8_EN_WIDTH             (1U)
#define MSCM_IRCP0IGR3_INT8_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0IGR3_INT8_EN_SHIFT)) & MSCM_IRCP0IGR3_INT8_EN_MASK)
#define MSCM_IRCP0IGR3_INT9_EN_MASK              (0x200U)
#define MSCM_IRCP0IGR3_INT9_EN_SHIFT             (9U)
#define MSCM_IRCP0IGR3_INT9_EN_WIDTH             (1U)
#define MSCM_IRCP0IGR3_INT9_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0IGR3_INT9_EN_SHIFT)) & MSCM_IRCP0IGR3_INT9_EN_MASK)
#define MSCM_IRCP0IGR3_INT10_EN_MASK             (0x400U)
#define MSCM_IRCP0IGR3_INT10_EN_SHIFT            (10U)
#define MSCM_IRCP0IGR3_INT10_EN_WIDTH            (1U)
#define MSCM_IRCP0IGR3_INT10_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0IGR3_INT10_EN_SHIFT)) & MSCM_IRCP0IGR3_INT10_EN_MASK)
#define MSCM_IRCP0IGR3_INT11_EN_MASK             (0x800U)
#define MSCM_IRCP0IGR3_INT11_EN_SHIFT            (11U)
#define MSCM_IRCP0IGR3_INT11_EN_WIDTH            (1U)
#define MSCM_IRCP0IGR3_INT11_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0IGR3_INT11_EN_SHIFT)) & MSCM_IRCP0IGR3_INT11_EN_MASK)
#define MSCM_IRCP0IGR3_INT12_EN_MASK             (0x1000U)
#define MSCM_IRCP0IGR3_INT12_EN_SHIFT            (12U)
#define MSCM_IRCP0IGR3_INT12_EN_WIDTH            (1U)
#define MSCM_IRCP0IGR3_INT12_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0IGR3_INT12_EN_SHIFT)) & MSCM_IRCP0IGR3_INT12_EN_MASK)
#define MSCM_IRCP0IGR3_INT13_EN_MASK             (0x2000U)
#define MSCM_IRCP0IGR3_INT13_EN_SHIFT            (13U)
#define MSCM_IRCP0IGR3_INT13_EN_WIDTH            (1U)
#define MSCM_IRCP0IGR3_INT13_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0IGR3_INT13_EN_SHIFT)) & MSCM_IRCP0IGR3_INT13_EN_MASK)
#define MSCM_IRCP0IGR3_INT14_EN_MASK             (0x4000U)
#define MSCM_IRCP0IGR3_INT14_EN_SHIFT            (14U)
#define MSCM_IRCP0IGR3_INT14_EN_WIDTH            (1U)
#define MSCM_IRCP0IGR3_INT14_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0IGR3_INT14_EN_SHIFT)) & MSCM_IRCP0IGR3_INT14_EN_MASK)
#define MSCM_IRCP0IGR3_INT15_EN_MASK             (0x8000U)
#define MSCM_IRCP0IGR3_INT15_EN_SHIFT            (15U)
#define MSCM_IRCP0IGR3_INT15_EN_WIDTH            (1U)
#define MSCM_IRCP0IGR3_INT15_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0IGR3_INT15_EN_SHIFT)) & MSCM_IRCP0IGR3_INT15_EN_MASK)
/*! @} */

/*! @name IRCP1ISR0 - Interrupt Router CP1 Interrupt0 Status Register */
/*! @{ */
#define MSCM_IRCP1ISR0_CP0_INT_MASK              (0x1U)
#define MSCM_IRCP1ISR0_CP0_INT_SHIFT             (0U)
#define MSCM_IRCP1ISR0_CP0_INT_WIDTH             (1U)
#define MSCM_IRCP1ISR0_CP0_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1ISR0_CP0_INT_SHIFT)) & MSCM_IRCP1ISR0_CP0_INT_MASK)
#define MSCM_IRCP1ISR0_CP1_INT_MASK              (0x2U)
#define MSCM_IRCP1ISR0_CP1_INT_SHIFT             (1U)
#define MSCM_IRCP1ISR0_CP1_INT_WIDTH             (1U)
#define MSCM_IRCP1ISR0_CP1_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1ISR0_CP1_INT_SHIFT)) & MSCM_IRCP1ISR0_CP1_INT_MASK)
#define MSCM_IRCP1ISR0_CP2_INT_MASK              (0x4U)
#define MSCM_IRCP1ISR0_CP2_INT_SHIFT             (2U)
#define MSCM_IRCP1ISR0_CP2_INT_WIDTH             (1U)
#define MSCM_IRCP1ISR0_CP2_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1ISR0_CP2_INT_SHIFT)) & MSCM_IRCP1ISR0_CP2_INT_MASK)
#define MSCM_IRCP1ISR0_CP3_INT_MASK              (0x8U)
#define MSCM_IRCP1ISR0_CP3_INT_SHIFT             (3U)
#define MSCM_IRCP1ISR0_CP3_INT_WIDTH             (1U)
#define MSCM_IRCP1ISR0_CP3_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1ISR0_CP3_INT_SHIFT)) & MSCM_IRCP1ISR0_CP3_INT_MASK)
#define MSCM_IRCP1ISR0_CP4_INT_MASK              (0x10U)
#define MSCM_IRCP1ISR0_CP4_INT_SHIFT             (4U)
#define MSCM_IRCP1ISR0_CP4_INT_WIDTH             (1U)
#define MSCM_IRCP1ISR0_CP4_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1ISR0_CP4_INT_SHIFT)) & MSCM_IRCP1ISR0_CP4_INT_MASK)
#define MSCM_IRCP1ISR0_CP5_INT_MASK              (0x20U)
#define MSCM_IRCP1ISR0_CP5_INT_SHIFT             (5U)
#define MSCM_IRCP1ISR0_CP5_INT_WIDTH             (1U)
#define MSCM_IRCP1ISR0_CP5_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1ISR0_CP5_INT_SHIFT)) & MSCM_IRCP1ISR0_CP5_INT_MASK)
#define MSCM_IRCP1ISR0_CP6_INT_MASK              (0x40U)
#define MSCM_IRCP1ISR0_CP6_INT_SHIFT             (6U)
#define MSCM_IRCP1ISR0_CP6_INT_WIDTH             (1U)
#define MSCM_IRCP1ISR0_CP6_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1ISR0_CP6_INT_SHIFT)) & MSCM_IRCP1ISR0_CP6_INT_MASK)
/*! @} */

/*! @name IRCP1IGR0 - Interrupt Router CP1 Interrupt0 Generation Register */
/*! @{ */
#define MSCM_IRCP1IGR0_INT_EN_MASK               (0x1U)
#define MSCM_IRCP1IGR0_INT_EN_SHIFT              (0U)
#define MSCM_IRCP1IGR0_INT_EN_WIDTH              (1U)
#define MSCM_IRCP1IGR0_INT_EN(x)                 (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1IGR0_INT_EN_SHIFT)) & MSCM_IRCP1IGR0_INT_EN_MASK)
/*! @} */

/*! @name IRCP1ISR1 - Interrupt Router CP1 Interrupt1 Status Register */
/*! @{ */
#define MSCM_IRCP1ISR1_CP0_INT_MASK              (0x1U)
#define MSCM_IRCP1ISR1_CP0_INT_SHIFT             (0U)
#define MSCM_IRCP1ISR1_CP0_INT_WIDTH             (1U)
#define MSCM_IRCP1ISR1_CP0_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1ISR1_CP0_INT_SHIFT)) & MSCM_IRCP1ISR1_CP0_INT_MASK)
#define MSCM_IRCP1ISR1_CP1_INT_MASK              (0x2U)
#define MSCM_IRCP1ISR1_CP1_INT_SHIFT             (1U)
#define MSCM_IRCP1ISR1_CP1_INT_WIDTH             (1U)
#define MSCM_IRCP1ISR1_CP1_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1ISR1_CP1_INT_SHIFT)) & MSCM_IRCP1ISR1_CP1_INT_MASK)
#define MSCM_IRCP1ISR1_CP2_INT_MASK              (0x4U)
#define MSCM_IRCP1ISR1_CP2_INT_SHIFT             (2U)
#define MSCM_IRCP1ISR1_CP2_INT_WIDTH             (1U)
#define MSCM_IRCP1ISR1_CP2_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1ISR1_CP2_INT_SHIFT)) & MSCM_IRCP1ISR1_CP2_INT_MASK)
#define MSCM_IRCP1ISR1_CP3_INT_MASK              (0x8U)
#define MSCM_IRCP1ISR1_CP3_INT_SHIFT             (3U)
#define MSCM_IRCP1ISR1_CP3_INT_WIDTH             (1U)
#define MSCM_IRCP1ISR1_CP3_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1ISR1_CP3_INT_SHIFT)) & MSCM_IRCP1ISR1_CP3_INT_MASK)
#define MSCM_IRCP1ISR1_CP4_INT_MASK              (0x10U)
#define MSCM_IRCP1ISR1_CP4_INT_SHIFT             (4U)
#define MSCM_IRCP1ISR1_CP4_INT_WIDTH             (1U)
#define MSCM_IRCP1ISR1_CP4_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1ISR1_CP4_INT_SHIFT)) & MSCM_IRCP1ISR1_CP4_INT_MASK)
#define MSCM_IRCP1ISR1_CP5_INT_MASK              (0x20U)
#define MSCM_IRCP1ISR1_CP5_INT_SHIFT             (5U)
#define MSCM_IRCP1ISR1_CP5_INT_WIDTH             (1U)
#define MSCM_IRCP1ISR1_CP5_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1ISR1_CP5_INT_SHIFT)) & MSCM_IRCP1ISR1_CP5_INT_MASK)
#define MSCM_IRCP1ISR1_CP6_INT_MASK              (0x40U)
#define MSCM_IRCP1ISR1_CP6_INT_SHIFT             (6U)
#define MSCM_IRCP1ISR1_CP6_INT_WIDTH             (1U)
#define MSCM_IRCP1ISR1_CP6_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1ISR1_CP6_INT_SHIFT)) & MSCM_IRCP1ISR1_CP6_INT_MASK)
/*! @} */

/*! @name IRCP1IGR1 - Interrupt Router CP1 Interrupt1 Generation Register */
/*! @{ */
#define MSCM_IRCP1IGR1_INT_EN_MASK               (0x1U)
#define MSCM_IRCP1IGR1_INT_EN_SHIFT              (0U)
#define MSCM_IRCP1IGR1_INT_EN_WIDTH              (1U)
#define MSCM_IRCP1IGR1_INT_EN(x)                 (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1IGR1_INT_EN_SHIFT)) & MSCM_IRCP1IGR1_INT_EN_MASK)
/*! @} */

/*! @name IRCP1ISR2 - Interrupt Router CP1 Interrupt2 Status Register */
/*! @{ */
#define MSCM_IRCP1ISR2_CP0_INT_MASK              (0x1U)
#define MSCM_IRCP1ISR2_CP0_INT_SHIFT             (0U)
#define MSCM_IRCP1ISR2_CP0_INT_WIDTH             (1U)
#define MSCM_IRCP1ISR2_CP0_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1ISR2_CP0_INT_SHIFT)) & MSCM_IRCP1ISR2_CP0_INT_MASK)
#define MSCM_IRCP1ISR2_CP1_INT_MASK              (0x2U)
#define MSCM_IRCP1ISR2_CP1_INT_SHIFT             (1U)
#define MSCM_IRCP1ISR2_CP1_INT_WIDTH             (1U)
#define MSCM_IRCP1ISR2_CP1_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1ISR2_CP1_INT_SHIFT)) & MSCM_IRCP1ISR2_CP1_INT_MASK)
#define MSCM_IRCP1ISR2_CP2_INT_MASK              (0x4U)
#define MSCM_IRCP1ISR2_CP2_INT_SHIFT             (2U)
#define MSCM_IRCP1ISR2_CP2_INT_WIDTH             (1U)
#define MSCM_IRCP1ISR2_CP2_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1ISR2_CP2_INT_SHIFT)) & MSCM_IRCP1ISR2_CP2_INT_MASK)
#define MSCM_IRCP1ISR2_CP3_INT_MASK              (0x8U)
#define MSCM_IRCP1ISR2_CP3_INT_SHIFT             (3U)
#define MSCM_IRCP1ISR2_CP3_INT_WIDTH             (1U)
#define MSCM_IRCP1ISR2_CP3_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1ISR2_CP3_INT_SHIFT)) & MSCM_IRCP1ISR2_CP3_INT_MASK)
#define MSCM_IRCP1ISR2_CP4_INT_MASK              (0x10U)
#define MSCM_IRCP1ISR2_CP4_INT_SHIFT             (4U)
#define MSCM_IRCP1ISR2_CP4_INT_WIDTH             (1U)
#define MSCM_IRCP1ISR2_CP4_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1ISR2_CP4_INT_SHIFT)) & MSCM_IRCP1ISR2_CP4_INT_MASK)
#define MSCM_IRCP1ISR2_CP5_INT_MASK              (0x20U)
#define MSCM_IRCP1ISR2_CP5_INT_SHIFT             (5U)
#define MSCM_IRCP1ISR2_CP5_INT_WIDTH             (1U)
#define MSCM_IRCP1ISR2_CP5_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1ISR2_CP5_INT_SHIFT)) & MSCM_IRCP1ISR2_CP5_INT_MASK)
#define MSCM_IRCP1ISR2_CP6_INT_MASK              (0x40U)
#define MSCM_IRCP1ISR2_CP6_INT_SHIFT             (6U)
#define MSCM_IRCP1ISR2_CP6_INT_WIDTH             (1U)
#define MSCM_IRCP1ISR2_CP6_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1ISR2_CP6_INT_SHIFT)) & MSCM_IRCP1ISR2_CP6_INT_MASK)
/*! @} */

/*! @name IRCP1IGR2 - Interrupt Router CP1 Interrupt2 Generation Register */
/*! @{ */
#define MSCM_IRCP1IGR2_INT_EN_MASK               (0x1U)
#define MSCM_IRCP1IGR2_INT_EN_SHIFT              (0U)
#define MSCM_IRCP1IGR2_INT_EN_WIDTH              (1U)
#define MSCM_IRCP1IGR2_INT_EN(x)                 (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1IGR2_INT_EN_SHIFT)) & MSCM_IRCP1IGR2_INT_EN_MASK)
/*! @} */

/*! @name IRCP1ISR3 - Interrupt Router CPn Interruptx Status Register */
/*! @{ */
#define MSCM_IRCP1ISR3_PCIE_INT0_MASK            (0x1U)
#define MSCM_IRCP1ISR3_PCIE_INT0_SHIFT           (0U)
#define MSCM_IRCP1ISR3_PCIE_INT0_WIDTH           (1U)
#define MSCM_IRCP1ISR3_PCIE_INT0(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1ISR3_PCIE_INT0_SHIFT)) & MSCM_IRCP1ISR3_PCIE_INT0_MASK)
#define MSCM_IRCP1ISR3_PCIE_INT1_MASK            (0x2U)
#define MSCM_IRCP1ISR3_PCIE_INT1_SHIFT           (1U)
#define MSCM_IRCP1ISR3_PCIE_INT1_WIDTH           (1U)
#define MSCM_IRCP1ISR3_PCIE_INT1(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1ISR3_PCIE_INT1_SHIFT)) & MSCM_IRCP1ISR3_PCIE_INT1_MASK)
#define MSCM_IRCP1ISR3_PCIE_INT2_MASK            (0x4U)
#define MSCM_IRCP1ISR3_PCIE_INT2_SHIFT           (2U)
#define MSCM_IRCP1ISR3_PCIE_INT2_WIDTH           (1U)
#define MSCM_IRCP1ISR3_PCIE_INT2(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1ISR3_PCIE_INT2_SHIFT)) & MSCM_IRCP1ISR3_PCIE_INT2_MASK)
#define MSCM_IRCP1ISR3_PCIE_INT3_MASK            (0x8U)
#define MSCM_IRCP1ISR3_PCIE_INT3_SHIFT           (3U)
#define MSCM_IRCP1ISR3_PCIE_INT3_WIDTH           (1U)
#define MSCM_IRCP1ISR3_PCIE_INT3(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1ISR3_PCIE_INT3_SHIFT)) & MSCM_IRCP1ISR3_PCIE_INT3_MASK)
#define MSCM_IRCP1ISR3_PCIE_INT4_MASK            (0x10U)
#define MSCM_IRCP1ISR3_PCIE_INT4_SHIFT           (4U)
#define MSCM_IRCP1ISR3_PCIE_INT4_WIDTH           (1U)
#define MSCM_IRCP1ISR3_PCIE_INT4(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1ISR3_PCIE_INT4_SHIFT)) & MSCM_IRCP1ISR3_PCIE_INT4_MASK)
#define MSCM_IRCP1ISR3_PCIE_INT5_MASK            (0x20U)
#define MSCM_IRCP1ISR3_PCIE_INT5_SHIFT           (5U)
#define MSCM_IRCP1ISR3_PCIE_INT5_WIDTH           (1U)
#define MSCM_IRCP1ISR3_PCIE_INT5(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1ISR3_PCIE_INT5_SHIFT)) & MSCM_IRCP1ISR3_PCIE_INT5_MASK)
#define MSCM_IRCP1ISR3_PCIE_INT6_MASK            (0x40U)
#define MSCM_IRCP1ISR3_PCIE_INT6_SHIFT           (6U)
#define MSCM_IRCP1ISR3_PCIE_INT6_WIDTH           (1U)
#define MSCM_IRCP1ISR3_PCIE_INT6(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1ISR3_PCIE_INT6_SHIFT)) & MSCM_IRCP1ISR3_PCIE_INT6_MASK)
#define MSCM_IRCP1ISR3_PCIE_INT7_MASK            (0x80U)
#define MSCM_IRCP1ISR3_PCIE_INT7_SHIFT           (7U)
#define MSCM_IRCP1ISR3_PCIE_INT7_WIDTH           (1U)
#define MSCM_IRCP1ISR3_PCIE_INT7(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1ISR3_PCIE_INT7_SHIFT)) & MSCM_IRCP1ISR3_PCIE_INT7_MASK)
#define MSCM_IRCP1ISR3_PCIE_INT8_MASK            (0x100U)
#define MSCM_IRCP1ISR3_PCIE_INT8_SHIFT           (8U)
#define MSCM_IRCP1ISR3_PCIE_INT8_WIDTH           (1U)
#define MSCM_IRCP1ISR3_PCIE_INT8(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1ISR3_PCIE_INT8_SHIFT)) & MSCM_IRCP1ISR3_PCIE_INT8_MASK)
#define MSCM_IRCP1ISR3_PCIE_INT9_MASK            (0x200U)
#define MSCM_IRCP1ISR3_PCIE_INT9_SHIFT           (9U)
#define MSCM_IRCP1ISR3_PCIE_INT9_WIDTH           (1U)
#define MSCM_IRCP1ISR3_PCIE_INT9(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1ISR3_PCIE_INT9_SHIFT)) & MSCM_IRCP1ISR3_PCIE_INT9_MASK)
#define MSCM_IRCP1ISR3_PCIE_INT10_MASK           (0x400U)
#define MSCM_IRCP1ISR3_PCIE_INT10_SHIFT          (10U)
#define MSCM_IRCP1ISR3_PCIE_INT10_WIDTH          (1U)
#define MSCM_IRCP1ISR3_PCIE_INT10(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1ISR3_PCIE_INT10_SHIFT)) & MSCM_IRCP1ISR3_PCIE_INT10_MASK)
#define MSCM_IRCP1ISR3_PCIE_INT11_MASK           (0x800U)
#define MSCM_IRCP1ISR3_PCIE_INT11_SHIFT          (11U)
#define MSCM_IRCP1ISR3_PCIE_INT11_WIDTH          (1U)
#define MSCM_IRCP1ISR3_PCIE_INT11(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1ISR3_PCIE_INT11_SHIFT)) & MSCM_IRCP1ISR3_PCIE_INT11_MASK)
#define MSCM_IRCP1ISR3_PCIE_INT12_MASK           (0x1000U)
#define MSCM_IRCP1ISR3_PCIE_INT12_SHIFT          (12U)
#define MSCM_IRCP1ISR3_PCIE_INT12_WIDTH          (1U)
#define MSCM_IRCP1ISR3_PCIE_INT12(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1ISR3_PCIE_INT12_SHIFT)) & MSCM_IRCP1ISR3_PCIE_INT12_MASK)
#define MSCM_IRCP1ISR3_PCIE_INT13_MASK           (0x2000U)
#define MSCM_IRCP1ISR3_PCIE_INT13_SHIFT          (13U)
#define MSCM_IRCP1ISR3_PCIE_INT13_WIDTH          (1U)
#define MSCM_IRCP1ISR3_PCIE_INT13(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1ISR3_PCIE_INT13_SHIFT)) & MSCM_IRCP1ISR3_PCIE_INT13_MASK)
#define MSCM_IRCP1ISR3_PCIE_INT14_MASK           (0x4000U)
#define MSCM_IRCP1ISR3_PCIE_INT14_SHIFT          (14U)
#define MSCM_IRCP1ISR3_PCIE_INT14_WIDTH          (1U)
#define MSCM_IRCP1ISR3_PCIE_INT14(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1ISR3_PCIE_INT14_SHIFT)) & MSCM_IRCP1ISR3_PCIE_INT14_MASK)
#define MSCM_IRCP1ISR3_PCIE_INT15_MASK           (0x8000U)
#define MSCM_IRCP1ISR3_PCIE_INT15_SHIFT          (15U)
#define MSCM_IRCP1ISR3_PCIE_INT15_WIDTH          (1U)
#define MSCM_IRCP1ISR3_PCIE_INT15(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1ISR3_PCIE_INT15_SHIFT)) & MSCM_IRCP1ISR3_PCIE_INT15_MASK)
/*! @} */

/*! @name IRCP1IGR3 - Interrupt Router CPn Interruptx Generation Register */
/*! @{ */
#define MSCM_IRCP1IGR3_INT0_EN_MASK              (0x1U)
#define MSCM_IRCP1IGR3_INT0_EN_SHIFT             (0U)
#define MSCM_IRCP1IGR3_INT0_EN_WIDTH             (1U)
#define MSCM_IRCP1IGR3_INT0_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1IGR3_INT0_EN_SHIFT)) & MSCM_IRCP1IGR3_INT0_EN_MASK)
#define MSCM_IRCP1IGR3_INT1_EN_MASK              (0x2U)
#define MSCM_IRCP1IGR3_INT1_EN_SHIFT             (1U)
#define MSCM_IRCP1IGR3_INT1_EN_WIDTH             (1U)
#define MSCM_IRCP1IGR3_INT1_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1IGR3_INT1_EN_SHIFT)) & MSCM_IRCP1IGR3_INT1_EN_MASK)
#define MSCM_IRCP1IGR3_INT2_EN_MASK              (0x4U)
#define MSCM_IRCP1IGR3_INT2_EN_SHIFT             (2U)
#define MSCM_IRCP1IGR3_INT2_EN_WIDTH             (1U)
#define MSCM_IRCP1IGR3_INT2_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1IGR3_INT2_EN_SHIFT)) & MSCM_IRCP1IGR3_INT2_EN_MASK)
#define MSCM_IRCP1IGR3_INT3_EN_MASK              (0x8U)
#define MSCM_IRCP1IGR3_INT3_EN_SHIFT             (3U)
#define MSCM_IRCP1IGR3_INT3_EN_WIDTH             (1U)
#define MSCM_IRCP1IGR3_INT3_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1IGR3_INT3_EN_SHIFT)) & MSCM_IRCP1IGR3_INT3_EN_MASK)
#define MSCM_IRCP1IGR3_INT4_EN_MASK              (0x10U)
#define MSCM_IRCP1IGR3_INT4_EN_SHIFT             (4U)
#define MSCM_IRCP1IGR3_INT4_EN_WIDTH             (1U)
#define MSCM_IRCP1IGR3_INT4_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1IGR3_INT4_EN_SHIFT)) & MSCM_IRCP1IGR3_INT4_EN_MASK)
#define MSCM_IRCP1IGR3_INT5_EN_MASK              (0x20U)
#define MSCM_IRCP1IGR3_INT5_EN_SHIFT             (5U)
#define MSCM_IRCP1IGR3_INT5_EN_WIDTH             (1U)
#define MSCM_IRCP1IGR3_INT5_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1IGR3_INT5_EN_SHIFT)) & MSCM_IRCP1IGR3_INT5_EN_MASK)
#define MSCM_IRCP1IGR3_INT6_EN_MASK              (0x40U)
#define MSCM_IRCP1IGR3_INT6_EN_SHIFT             (6U)
#define MSCM_IRCP1IGR3_INT6_EN_WIDTH             (1U)
#define MSCM_IRCP1IGR3_INT6_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1IGR3_INT6_EN_SHIFT)) & MSCM_IRCP1IGR3_INT6_EN_MASK)
#define MSCM_IRCP1IGR3_INT7_EN_MASK              (0x80U)
#define MSCM_IRCP1IGR3_INT7_EN_SHIFT             (7U)
#define MSCM_IRCP1IGR3_INT7_EN_WIDTH             (1U)
#define MSCM_IRCP1IGR3_INT7_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1IGR3_INT7_EN_SHIFT)) & MSCM_IRCP1IGR3_INT7_EN_MASK)
#define MSCM_IRCP1IGR3_INT8_EN_MASK              (0x100U)
#define MSCM_IRCP1IGR3_INT8_EN_SHIFT             (8U)
#define MSCM_IRCP1IGR3_INT8_EN_WIDTH             (1U)
#define MSCM_IRCP1IGR3_INT8_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1IGR3_INT8_EN_SHIFT)) & MSCM_IRCP1IGR3_INT8_EN_MASK)
#define MSCM_IRCP1IGR3_INT9_EN_MASK              (0x200U)
#define MSCM_IRCP1IGR3_INT9_EN_SHIFT             (9U)
#define MSCM_IRCP1IGR3_INT9_EN_WIDTH             (1U)
#define MSCM_IRCP1IGR3_INT9_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1IGR3_INT9_EN_SHIFT)) & MSCM_IRCP1IGR3_INT9_EN_MASK)
#define MSCM_IRCP1IGR3_INT10_EN_MASK             (0x400U)
#define MSCM_IRCP1IGR3_INT10_EN_SHIFT            (10U)
#define MSCM_IRCP1IGR3_INT10_EN_WIDTH            (1U)
#define MSCM_IRCP1IGR3_INT10_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1IGR3_INT10_EN_SHIFT)) & MSCM_IRCP1IGR3_INT10_EN_MASK)
#define MSCM_IRCP1IGR3_INT11_EN_MASK             (0x800U)
#define MSCM_IRCP1IGR3_INT11_EN_SHIFT            (11U)
#define MSCM_IRCP1IGR3_INT11_EN_WIDTH            (1U)
#define MSCM_IRCP1IGR3_INT11_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1IGR3_INT11_EN_SHIFT)) & MSCM_IRCP1IGR3_INT11_EN_MASK)
#define MSCM_IRCP1IGR3_INT12_EN_MASK             (0x1000U)
#define MSCM_IRCP1IGR3_INT12_EN_SHIFT            (12U)
#define MSCM_IRCP1IGR3_INT12_EN_WIDTH            (1U)
#define MSCM_IRCP1IGR3_INT12_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1IGR3_INT12_EN_SHIFT)) & MSCM_IRCP1IGR3_INT12_EN_MASK)
#define MSCM_IRCP1IGR3_INT13_EN_MASK             (0x2000U)
#define MSCM_IRCP1IGR3_INT13_EN_SHIFT            (13U)
#define MSCM_IRCP1IGR3_INT13_EN_WIDTH            (1U)
#define MSCM_IRCP1IGR3_INT13_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1IGR3_INT13_EN_SHIFT)) & MSCM_IRCP1IGR3_INT13_EN_MASK)
#define MSCM_IRCP1IGR3_INT14_EN_MASK             (0x4000U)
#define MSCM_IRCP1IGR3_INT14_EN_SHIFT            (14U)
#define MSCM_IRCP1IGR3_INT14_EN_WIDTH            (1U)
#define MSCM_IRCP1IGR3_INT14_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1IGR3_INT14_EN_SHIFT)) & MSCM_IRCP1IGR3_INT14_EN_MASK)
#define MSCM_IRCP1IGR3_INT15_EN_MASK             (0x8000U)
#define MSCM_IRCP1IGR3_INT15_EN_SHIFT            (15U)
#define MSCM_IRCP1IGR3_INT15_EN_WIDTH            (1U)
#define MSCM_IRCP1IGR3_INT15_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1IGR3_INT15_EN_SHIFT)) & MSCM_IRCP1IGR3_INT15_EN_MASK)
/*! @} */

/*! @name IRCP2ISR0 - Interrupt Router CP2 Interrupt0 Status Register */
/*! @{ */
#define MSCM_IRCP2ISR0_CP0_INT_MASK              (0x1U)
#define MSCM_IRCP2ISR0_CP0_INT_SHIFT             (0U)
#define MSCM_IRCP2ISR0_CP0_INT_WIDTH             (1U)
#define MSCM_IRCP2ISR0_CP0_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2ISR0_CP0_INT_SHIFT)) & MSCM_IRCP2ISR0_CP0_INT_MASK)
#define MSCM_IRCP2ISR0_CP1_INT_MASK              (0x2U)
#define MSCM_IRCP2ISR0_CP1_INT_SHIFT             (1U)
#define MSCM_IRCP2ISR0_CP1_INT_WIDTH             (1U)
#define MSCM_IRCP2ISR0_CP1_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2ISR0_CP1_INT_SHIFT)) & MSCM_IRCP2ISR0_CP1_INT_MASK)
#define MSCM_IRCP2ISR0_CP2_INT_MASK              (0x4U)
#define MSCM_IRCP2ISR0_CP2_INT_SHIFT             (2U)
#define MSCM_IRCP2ISR0_CP2_INT_WIDTH             (1U)
#define MSCM_IRCP2ISR0_CP2_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2ISR0_CP2_INT_SHIFT)) & MSCM_IRCP2ISR0_CP2_INT_MASK)
#define MSCM_IRCP2ISR0_CP3_INT_MASK              (0x8U)
#define MSCM_IRCP2ISR0_CP3_INT_SHIFT             (3U)
#define MSCM_IRCP2ISR0_CP3_INT_WIDTH             (1U)
#define MSCM_IRCP2ISR0_CP3_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2ISR0_CP3_INT_SHIFT)) & MSCM_IRCP2ISR0_CP3_INT_MASK)
#define MSCM_IRCP2ISR0_CP4_INT_MASK              (0x10U)
#define MSCM_IRCP2ISR0_CP4_INT_SHIFT             (4U)
#define MSCM_IRCP2ISR0_CP4_INT_WIDTH             (1U)
#define MSCM_IRCP2ISR0_CP4_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2ISR0_CP4_INT_SHIFT)) & MSCM_IRCP2ISR0_CP4_INT_MASK)
#define MSCM_IRCP2ISR0_CP5_INT_MASK              (0x20U)
#define MSCM_IRCP2ISR0_CP5_INT_SHIFT             (5U)
#define MSCM_IRCP2ISR0_CP5_INT_WIDTH             (1U)
#define MSCM_IRCP2ISR0_CP5_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2ISR0_CP5_INT_SHIFT)) & MSCM_IRCP2ISR0_CP5_INT_MASK)
#define MSCM_IRCP2ISR0_CP6_INT_MASK              (0x40U)
#define MSCM_IRCP2ISR0_CP6_INT_SHIFT             (6U)
#define MSCM_IRCP2ISR0_CP6_INT_WIDTH             (1U)
#define MSCM_IRCP2ISR0_CP6_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2ISR0_CP6_INT_SHIFT)) & MSCM_IRCP2ISR0_CP6_INT_MASK)
/*! @} */

/*! @name IRCP2IGR0 - Interrupt Router CP2 Interrupt0 Generation Register */
/*! @{ */
#define MSCM_IRCP2IGR0_INT_EN_MASK               (0x1U)
#define MSCM_IRCP2IGR0_INT_EN_SHIFT              (0U)
#define MSCM_IRCP2IGR0_INT_EN_WIDTH              (1U)
#define MSCM_IRCP2IGR0_INT_EN(x)                 (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2IGR0_INT_EN_SHIFT)) & MSCM_IRCP2IGR0_INT_EN_MASK)
/*! @} */

/*! @name IRCP2ISR1 - Interrupt Router CP2 Interrupt1 Status Register */
/*! @{ */
#define MSCM_IRCP2ISR1_CP0_INT_MASK              (0x1U)
#define MSCM_IRCP2ISR1_CP0_INT_SHIFT             (0U)
#define MSCM_IRCP2ISR1_CP0_INT_WIDTH             (1U)
#define MSCM_IRCP2ISR1_CP0_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2ISR1_CP0_INT_SHIFT)) & MSCM_IRCP2ISR1_CP0_INT_MASK)
#define MSCM_IRCP2ISR1_CP1_INT_MASK              (0x2U)
#define MSCM_IRCP2ISR1_CP1_INT_SHIFT             (1U)
#define MSCM_IRCP2ISR1_CP1_INT_WIDTH             (1U)
#define MSCM_IRCP2ISR1_CP1_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2ISR1_CP1_INT_SHIFT)) & MSCM_IRCP2ISR1_CP1_INT_MASK)
#define MSCM_IRCP2ISR1_CP2_INT_MASK              (0x4U)
#define MSCM_IRCP2ISR1_CP2_INT_SHIFT             (2U)
#define MSCM_IRCP2ISR1_CP2_INT_WIDTH             (1U)
#define MSCM_IRCP2ISR1_CP2_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2ISR1_CP2_INT_SHIFT)) & MSCM_IRCP2ISR1_CP2_INT_MASK)
#define MSCM_IRCP2ISR1_CP3_INT_MASK              (0x8U)
#define MSCM_IRCP2ISR1_CP3_INT_SHIFT             (3U)
#define MSCM_IRCP2ISR1_CP3_INT_WIDTH             (1U)
#define MSCM_IRCP2ISR1_CP3_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2ISR1_CP3_INT_SHIFT)) & MSCM_IRCP2ISR1_CP3_INT_MASK)
#define MSCM_IRCP2ISR1_CP4_INT_MASK              (0x10U)
#define MSCM_IRCP2ISR1_CP4_INT_SHIFT             (4U)
#define MSCM_IRCP2ISR1_CP4_INT_WIDTH             (1U)
#define MSCM_IRCP2ISR1_CP4_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2ISR1_CP4_INT_SHIFT)) & MSCM_IRCP2ISR1_CP4_INT_MASK)
#define MSCM_IRCP2ISR1_CP5_INT_MASK              (0x20U)
#define MSCM_IRCP2ISR1_CP5_INT_SHIFT             (5U)
#define MSCM_IRCP2ISR1_CP5_INT_WIDTH             (1U)
#define MSCM_IRCP2ISR1_CP5_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2ISR1_CP5_INT_SHIFT)) & MSCM_IRCP2ISR1_CP5_INT_MASK)
#define MSCM_IRCP2ISR1_CP6_INT_MASK              (0x40U)
#define MSCM_IRCP2ISR1_CP6_INT_SHIFT             (6U)
#define MSCM_IRCP2ISR1_CP6_INT_WIDTH             (1U)
#define MSCM_IRCP2ISR1_CP6_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2ISR1_CP6_INT_SHIFT)) & MSCM_IRCP2ISR1_CP6_INT_MASK)
/*! @} */

/*! @name IRCP2IGR1 - Interrupt Router CP2 Interrupt1 Generation Register */
/*! @{ */
#define MSCM_IRCP2IGR1_INT_EN_MASK               (0x1U)
#define MSCM_IRCP2IGR1_INT_EN_SHIFT              (0U)
#define MSCM_IRCP2IGR1_INT_EN_WIDTH              (1U)
#define MSCM_IRCP2IGR1_INT_EN(x)                 (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2IGR1_INT_EN_SHIFT)) & MSCM_IRCP2IGR1_INT_EN_MASK)
/*! @} */

/*! @name IRCP2ISR2 - Interrupt Router CP2 Interrupt2 Status Register */
/*! @{ */
#define MSCM_IRCP2ISR2_CP0_INT_MASK              (0x1U)
#define MSCM_IRCP2ISR2_CP0_INT_SHIFT             (0U)
#define MSCM_IRCP2ISR2_CP0_INT_WIDTH             (1U)
#define MSCM_IRCP2ISR2_CP0_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2ISR2_CP0_INT_SHIFT)) & MSCM_IRCP2ISR2_CP0_INT_MASK)
#define MSCM_IRCP2ISR2_CP1_INT_MASK              (0x2U)
#define MSCM_IRCP2ISR2_CP1_INT_SHIFT             (1U)
#define MSCM_IRCP2ISR2_CP1_INT_WIDTH             (1U)
#define MSCM_IRCP2ISR2_CP1_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2ISR2_CP1_INT_SHIFT)) & MSCM_IRCP2ISR2_CP1_INT_MASK)
#define MSCM_IRCP2ISR2_CP2_INT_MASK              (0x4U)
#define MSCM_IRCP2ISR2_CP2_INT_SHIFT             (2U)
#define MSCM_IRCP2ISR2_CP2_INT_WIDTH             (1U)
#define MSCM_IRCP2ISR2_CP2_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2ISR2_CP2_INT_SHIFT)) & MSCM_IRCP2ISR2_CP2_INT_MASK)
#define MSCM_IRCP2ISR2_CP3_INT_MASK              (0x8U)
#define MSCM_IRCP2ISR2_CP3_INT_SHIFT             (3U)
#define MSCM_IRCP2ISR2_CP3_INT_WIDTH             (1U)
#define MSCM_IRCP2ISR2_CP3_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2ISR2_CP3_INT_SHIFT)) & MSCM_IRCP2ISR2_CP3_INT_MASK)
#define MSCM_IRCP2ISR2_CP4_INT_MASK              (0x10U)
#define MSCM_IRCP2ISR2_CP4_INT_SHIFT             (4U)
#define MSCM_IRCP2ISR2_CP4_INT_WIDTH             (1U)
#define MSCM_IRCP2ISR2_CP4_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2ISR2_CP4_INT_SHIFT)) & MSCM_IRCP2ISR2_CP4_INT_MASK)
#define MSCM_IRCP2ISR2_CP5_INT_MASK              (0x20U)
#define MSCM_IRCP2ISR2_CP5_INT_SHIFT             (5U)
#define MSCM_IRCP2ISR2_CP5_INT_WIDTH             (1U)
#define MSCM_IRCP2ISR2_CP5_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2ISR2_CP5_INT_SHIFT)) & MSCM_IRCP2ISR2_CP5_INT_MASK)
#define MSCM_IRCP2ISR2_CP6_INT_MASK              (0x40U)
#define MSCM_IRCP2ISR2_CP6_INT_SHIFT             (6U)
#define MSCM_IRCP2ISR2_CP6_INT_WIDTH             (1U)
#define MSCM_IRCP2ISR2_CP6_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2ISR2_CP6_INT_SHIFT)) & MSCM_IRCP2ISR2_CP6_INT_MASK)
/*! @} */

/*! @name IRCP2IGR2 - Interrupt Router CP2 Interrupt2 Generation Register */
/*! @{ */
#define MSCM_IRCP2IGR2_INT_EN_MASK               (0x1U)
#define MSCM_IRCP2IGR2_INT_EN_SHIFT              (0U)
#define MSCM_IRCP2IGR2_INT_EN_WIDTH              (1U)
#define MSCM_IRCP2IGR2_INT_EN(x)                 (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2IGR2_INT_EN_SHIFT)) & MSCM_IRCP2IGR2_INT_EN_MASK)
/*! @} */

/*! @name IRCP2ISR3 - Interrupt Router CPn Interruptx Status Register */
/*! @{ */
#define MSCM_IRCP2ISR3_PCIE_INT0_MASK            (0x1U)
#define MSCM_IRCP2ISR3_PCIE_INT0_SHIFT           (0U)
#define MSCM_IRCP2ISR3_PCIE_INT0_WIDTH           (1U)
#define MSCM_IRCP2ISR3_PCIE_INT0(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2ISR3_PCIE_INT0_SHIFT)) & MSCM_IRCP2ISR3_PCIE_INT0_MASK)
#define MSCM_IRCP2ISR3_PCIE_INT1_MASK            (0x2U)
#define MSCM_IRCP2ISR3_PCIE_INT1_SHIFT           (1U)
#define MSCM_IRCP2ISR3_PCIE_INT1_WIDTH           (1U)
#define MSCM_IRCP2ISR3_PCIE_INT1(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2ISR3_PCIE_INT1_SHIFT)) & MSCM_IRCP2ISR3_PCIE_INT1_MASK)
#define MSCM_IRCP2ISR3_PCIE_INT2_MASK            (0x4U)
#define MSCM_IRCP2ISR3_PCIE_INT2_SHIFT           (2U)
#define MSCM_IRCP2ISR3_PCIE_INT2_WIDTH           (1U)
#define MSCM_IRCP2ISR3_PCIE_INT2(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2ISR3_PCIE_INT2_SHIFT)) & MSCM_IRCP2ISR3_PCIE_INT2_MASK)
#define MSCM_IRCP2ISR3_PCIE_INT3_MASK            (0x8U)
#define MSCM_IRCP2ISR3_PCIE_INT3_SHIFT           (3U)
#define MSCM_IRCP2ISR3_PCIE_INT3_WIDTH           (1U)
#define MSCM_IRCP2ISR3_PCIE_INT3(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2ISR3_PCIE_INT3_SHIFT)) & MSCM_IRCP2ISR3_PCIE_INT3_MASK)
#define MSCM_IRCP2ISR3_PCIE_INT4_MASK            (0x10U)
#define MSCM_IRCP2ISR3_PCIE_INT4_SHIFT           (4U)
#define MSCM_IRCP2ISR3_PCIE_INT4_WIDTH           (1U)
#define MSCM_IRCP2ISR3_PCIE_INT4(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2ISR3_PCIE_INT4_SHIFT)) & MSCM_IRCP2ISR3_PCIE_INT4_MASK)
#define MSCM_IRCP2ISR3_PCIE_INT5_MASK            (0x20U)
#define MSCM_IRCP2ISR3_PCIE_INT5_SHIFT           (5U)
#define MSCM_IRCP2ISR3_PCIE_INT5_WIDTH           (1U)
#define MSCM_IRCP2ISR3_PCIE_INT5(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2ISR3_PCIE_INT5_SHIFT)) & MSCM_IRCP2ISR3_PCIE_INT5_MASK)
#define MSCM_IRCP2ISR3_PCIE_INT6_MASK            (0x40U)
#define MSCM_IRCP2ISR3_PCIE_INT6_SHIFT           (6U)
#define MSCM_IRCP2ISR3_PCIE_INT6_WIDTH           (1U)
#define MSCM_IRCP2ISR3_PCIE_INT6(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2ISR3_PCIE_INT6_SHIFT)) & MSCM_IRCP2ISR3_PCIE_INT6_MASK)
#define MSCM_IRCP2ISR3_PCIE_INT7_MASK            (0x80U)
#define MSCM_IRCP2ISR3_PCIE_INT7_SHIFT           (7U)
#define MSCM_IRCP2ISR3_PCIE_INT7_WIDTH           (1U)
#define MSCM_IRCP2ISR3_PCIE_INT7(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2ISR3_PCIE_INT7_SHIFT)) & MSCM_IRCP2ISR3_PCIE_INT7_MASK)
#define MSCM_IRCP2ISR3_PCIE_INT8_MASK            (0x100U)
#define MSCM_IRCP2ISR3_PCIE_INT8_SHIFT           (8U)
#define MSCM_IRCP2ISR3_PCIE_INT8_WIDTH           (1U)
#define MSCM_IRCP2ISR3_PCIE_INT8(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2ISR3_PCIE_INT8_SHIFT)) & MSCM_IRCP2ISR3_PCIE_INT8_MASK)
#define MSCM_IRCP2ISR3_PCIE_INT9_MASK            (0x200U)
#define MSCM_IRCP2ISR3_PCIE_INT9_SHIFT           (9U)
#define MSCM_IRCP2ISR3_PCIE_INT9_WIDTH           (1U)
#define MSCM_IRCP2ISR3_PCIE_INT9(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2ISR3_PCIE_INT9_SHIFT)) & MSCM_IRCP2ISR3_PCIE_INT9_MASK)
#define MSCM_IRCP2ISR3_PCIE_INT10_MASK           (0x400U)
#define MSCM_IRCP2ISR3_PCIE_INT10_SHIFT          (10U)
#define MSCM_IRCP2ISR3_PCIE_INT10_WIDTH          (1U)
#define MSCM_IRCP2ISR3_PCIE_INT10(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2ISR3_PCIE_INT10_SHIFT)) & MSCM_IRCP2ISR3_PCIE_INT10_MASK)
#define MSCM_IRCP2ISR3_PCIE_INT11_MASK           (0x800U)
#define MSCM_IRCP2ISR3_PCIE_INT11_SHIFT          (11U)
#define MSCM_IRCP2ISR3_PCIE_INT11_WIDTH          (1U)
#define MSCM_IRCP2ISR3_PCIE_INT11(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2ISR3_PCIE_INT11_SHIFT)) & MSCM_IRCP2ISR3_PCIE_INT11_MASK)
#define MSCM_IRCP2ISR3_PCIE_INT12_MASK           (0x1000U)
#define MSCM_IRCP2ISR3_PCIE_INT12_SHIFT          (12U)
#define MSCM_IRCP2ISR3_PCIE_INT12_WIDTH          (1U)
#define MSCM_IRCP2ISR3_PCIE_INT12(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2ISR3_PCIE_INT12_SHIFT)) & MSCM_IRCP2ISR3_PCIE_INT12_MASK)
#define MSCM_IRCP2ISR3_PCIE_INT13_MASK           (0x2000U)
#define MSCM_IRCP2ISR3_PCIE_INT13_SHIFT          (13U)
#define MSCM_IRCP2ISR3_PCIE_INT13_WIDTH          (1U)
#define MSCM_IRCP2ISR3_PCIE_INT13(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2ISR3_PCIE_INT13_SHIFT)) & MSCM_IRCP2ISR3_PCIE_INT13_MASK)
#define MSCM_IRCP2ISR3_PCIE_INT14_MASK           (0x4000U)
#define MSCM_IRCP2ISR3_PCIE_INT14_SHIFT          (14U)
#define MSCM_IRCP2ISR3_PCIE_INT14_WIDTH          (1U)
#define MSCM_IRCP2ISR3_PCIE_INT14(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2ISR3_PCIE_INT14_SHIFT)) & MSCM_IRCP2ISR3_PCIE_INT14_MASK)
#define MSCM_IRCP2ISR3_PCIE_INT15_MASK           (0x8000U)
#define MSCM_IRCP2ISR3_PCIE_INT15_SHIFT          (15U)
#define MSCM_IRCP2ISR3_PCIE_INT15_WIDTH          (1U)
#define MSCM_IRCP2ISR3_PCIE_INT15(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2ISR3_PCIE_INT15_SHIFT)) & MSCM_IRCP2ISR3_PCIE_INT15_MASK)
/*! @} */

/*! @name IRCP2IGR3 - Interrupt Router CPn Interruptx Generation Register */
/*! @{ */
#define MSCM_IRCP2IGR3_INT0_EN_MASK              (0x1U)
#define MSCM_IRCP2IGR3_INT0_EN_SHIFT             (0U)
#define MSCM_IRCP2IGR3_INT0_EN_WIDTH             (1U)
#define MSCM_IRCP2IGR3_INT0_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2IGR3_INT0_EN_SHIFT)) & MSCM_IRCP2IGR3_INT0_EN_MASK)
#define MSCM_IRCP2IGR3_INT1_EN_MASK              (0x2U)
#define MSCM_IRCP2IGR3_INT1_EN_SHIFT             (1U)
#define MSCM_IRCP2IGR3_INT1_EN_WIDTH             (1U)
#define MSCM_IRCP2IGR3_INT1_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2IGR3_INT1_EN_SHIFT)) & MSCM_IRCP2IGR3_INT1_EN_MASK)
#define MSCM_IRCP2IGR3_INT2_EN_MASK              (0x4U)
#define MSCM_IRCP2IGR3_INT2_EN_SHIFT             (2U)
#define MSCM_IRCP2IGR3_INT2_EN_WIDTH             (1U)
#define MSCM_IRCP2IGR3_INT2_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2IGR3_INT2_EN_SHIFT)) & MSCM_IRCP2IGR3_INT2_EN_MASK)
#define MSCM_IRCP2IGR3_INT3_EN_MASK              (0x8U)
#define MSCM_IRCP2IGR3_INT3_EN_SHIFT             (3U)
#define MSCM_IRCP2IGR3_INT3_EN_WIDTH             (1U)
#define MSCM_IRCP2IGR3_INT3_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2IGR3_INT3_EN_SHIFT)) & MSCM_IRCP2IGR3_INT3_EN_MASK)
#define MSCM_IRCP2IGR3_INT4_EN_MASK              (0x10U)
#define MSCM_IRCP2IGR3_INT4_EN_SHIFT             (4U)
#define MSCM_IRCP2IGR3_INT4_EN_WIDTH             (1U)
#define MSCM_IRCP2IGR3_INT4_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2IGR3_INT4_EN_SHIFT)) & MSCM_IRCP2IGR3_INT4_EN_MASK)
#define MSCM_IRCP2IGR3_INT5_EN_MASK              (0x20U)
#define MSCM_IRCP2IGR3_INT5_EN_SHIFT             (5U)
#define MSCM_IRCP2IGR3_INT5_EN_WIDTH             (1U)
#define MSCM_IRCP2IGR3_INT5_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2IGR3_INT5_EN_SHIFT)) & MSCM_IRCP2IGR3_INT5_EN_MASK)
#define MSCM_IRCP2IGR3_INT6_EN_MASK              (0x40U)
#define MSCM_IRCP2IGR3_INT6_EN_SHIFT             (6U)
#define MSCM_IRCP2IGR3_INT6_EN_WIDTH             (1U)
#define MSCM_IRCP2IGR3_INT6_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2IGR3_INT6_EN_SHIFT)) & MSCM_IRCP2IGR3_INT6_EN_MASK)
#define MSCM_IRCP2IGR3_INT7_EN_MASK              (0x80U)
#define MSCM_IRCP2IGR3_INT7_EN_SHIFT             (7U)
#define MSCM_IRCP2IGR3_INT7_EN_WIDTH             (1U)
#define MSCM_IRCP2IGR3_INT7_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2IGR3_INT7_EN_SHIFT)) & MSCM_IRCP2IGR3_INT7_EN_MASK)
#define MSCM_IRCP2IGR3_INT8_EN_MASK              (0x100U)
#define MSCM_IRCP2IGR3_INT8_EN_SHIFT             (8U)
#define MSCM_IRCP2IGR3_INT8_EN_WIDTH             (1U)
#define MSCM_IRCP2IGR3_INT8_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2IGR3_INT8_EN_SHIFT)) & MSCM_IRCP2IGR3_INT8_EN_MASK)
#define MSCM_IRCP2IGR3_INT9_EN_MASK              (0x200U)
#define MSCM_IRCP2IGR3_INT9_EN_SHIFT             (9U)
#define MSCM_IRCP2IGR3_INT9_EN_WIDTH             (1U)
#define MSCM_IRCP2IGR3_INT9_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2IGR3_INT9_EN_SHIFT)) & MSCM_IRCP2IGR3_INT9_EN_MASK)
#define MSCM_IRCP2IGR3_INT10_EN_MASK             (0x400U)
#define MSCM_IRCP2IGR3_INT10_EN_SHIFT            (10U)
#define MSCM_IRCP2IGR3_INT10_EN_WIDTH            (1U)
#define MSCM_IRCP2IGR3_INT10_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2IGR3_INT10_EN_SHIFT)) & MSCM_IRCP2IGR3_INT10_EN_MASK)
#define MSCM_IRCP2IGR3_INT11_EN_MASK             (0x800U)
#define MSCM_IRCP2IGR3_INT11_EN_SHIFT            (11U)
#define MSCM_IRCP2IGR3_INT11_EN_WIDTH            (1U)
#define MSCM_IRCP2IGR3_INT11_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2IGR3_INT11_EN_SHIFT)) & MSCM_IRCP2IGR3_INT11_EN_MASK)
#define MSCM_IRCP2IGR3_INT12_EN_MASK             (0x1000U)
#define MSCM_IRCP2IGR3_INT12_EN_SHIFT            (12U)
#define MSCM_IRCP2IGR3_INT12_EN_WIDTH            (1U)
#define MSCM_IRCP2IGR3_INT12_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2IGR3_INT12_EN_SHIFT)) & MSCM_IRCP2IGR3_INT12_EN_MASK)
#define MSCM_IRCP2IGR3_INT13_EN_MASK             (0x2000U)
#define MSCM_IRCP2IGR3_INT13_EN_SHIFT            (13U)
#define MSCM_IRCP2IGR3_INT13_EN_WIDTH            (1U)
#define MSCM_IRCP2IGR3_INT13_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2IGR3_INT13_EN_SHIFT)) & MSCM_IRCP2IGR3_INT13_EN_MASK)
#define MSCM_IRCP2IGR3_INT14_EN_MASK             (0x4000U)
#define MSCM_IRCP2IGR3_INT14_EN_SHIFT            (14U)
#define MSCM_IRCP2IGR3_INT14_EN_WIDTH            (1U)
#define MSCM_IRCP2IGR3_INT14_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2IGR3_INT14_EN_SHIFT)) & MSCM_IRCP2IGR3_INT14_EN_MASK)
#define MSCM_IRCP2IGR3_INT15_EN_MASK             (0x8000U)
#define MSCM_IRCP2IGR3_INT15_EN_SHIFT            (15U)
#define MSCM_IRCP2IGR3_INT15_EN_WIDTH            (1U)
#define MSCM_IRCP2IGR3_INT15_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2IGR3_INT15_EN_SHIFT)) & MSCM_IRCP2IGR3_INT15_EN_MASK)
/*! @} */

/*! @name IRCP3ISR0 - Interrupt Router CP3 Interrupt0 Status Register */
/*! @{ */
#define MSCM_IRCP3ISR0_CP0_INT_MASK              (0x1U)
#define MSCM_IRCP3ISR0_CP0_INT_SHIFT             (0U)
#define MSCM_IRCP3ISR0_CP0_INT_WIDTH             (1U)
#define MSCM_IRCP3ISR0_CP0_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3ISR0_CP0_INT_SHIFT)) & MSCM_IRCP3ISR0_CP0_INT_MASK)
#define MSCM_IRCP3ISR0_CP1_INT_MASK              (0x2U)
#define MSCM_IRCP3ISR0_CP1_INT_SHIFT             (1U)
#define MSCM_IRCP3ISR0_CP1_INT_WIDTH             (1U)
#define MSCM_IRCP3ISR0_CP1_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3ISR0_CP1_INT_SHIFT)) & MSCM_IRCP3ISR0_CP1_INT_MASK)
#define MSCM_IRCP3ISR0_CP2_INT_MASK              (0x4U)
#define MSCM_IRCP3ISR0_CP2_INT_SHIFT             (2U)
#define MSCM_IRCP3ISR0_CP2_INT_WIDTH             (1U)
#define MSCM_IRCP3ISR0_CP2_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3ISR0_CP2_INT_SHIFT)) & MSCM_IRCP3ISR0_CP2_INT_MASK)
#define MSCM_IRCP3ISR0_CP3_INT_MASK              (0x8U)
#define MSCM_IRCP3ISR0_CP3_INT_SHIFT             (3U)
#define MSCM_IRCP3ISR0_CP3_INT_WIDTH             (1U)
#define MSCM_IRCP3ISR0_CP3_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3ISR0_CP3_INT_SHIFT)) & MSCM_IRCP3ISR0_CP3_INT_MASK)
#define MSCM_IRCP3ISR0_CP4_INT_MASK              (0x10U)
#define MSCM_IRCP3ISR0_CP4_INT_SHIFT             (4U)
#define MSCM_IRCP3ISR0_CP4_INT_WIDTH             (1U)
#define MSCM_IRCP3ISR0_CP4_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3ISR0_CP4_INT_SHIFT)) & MSCM_IRCP3ISR0_CP4_INT_MASK)
#define MSCM_IRCP3ISR0_CP5_INT_MASK              (0x20U)
#define MSCM_IRCP3ISR0_CP5_INT_SHIFT             (5U)
#define MSCM_IRCP3ISR0_CP5_INT_WIDTH             (1U)
#define MSCM_IRCP3ISR0_CP5_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3ISR0_CP5_INT_SHIFT)) & MSCM_IRCP3ISR0_CP5_INT_MASK)
#define MSCM_IRCP3ISR0_CP6_INT_MASK              (0x40U)
#define MSCM_IRCP3ISR0_CP6_INT_SHIFT             (6U)
#define MSCM_IRCP3ISR0_CP6_INT_WIDTH             (1U)
#define MSCM_IRCP3ISR0_CP6_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3ISR0_CP6_INT_SHIFT)) & MSCM_IRCP3ISR0_CP6_INT_MASK)
/*! @} */

/*! @name IRCP3IGR0 - Interrupt Router CP3 Interrupt0 Generation Register */
/*! @{ */
#define MSCM_IRCP3IGR0_INT_EN_MASK               (0x1U)
#define MSCM_IRCP3IGR0_INT_EN_SHIFT              (0U)
#define MSCM_IRCP3IGR0_INT_EN_WIDTH              (1U)
#define MSCM_IRCP3IGR0_INT_EN(x)                 (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3IGR0_INT_EN_SHIFT)) & MSCM_IRCP3IGR0_INT_EN_MASK)
/*! @} */

/*! @name IRCP3ISR1 - Interrupt Router CP3 Interrupt1 Status Register */
/*! @{ */
#define MSCM_IRCP3ISR1_CP0_INT_MASK              (0x1U)
#define MSCM_IRCP3ISR1_CP0_INT_SHIFT             (0U)
#define MSCM_IRCP3ISR1_CP0_INT_WIDTH             (1U)
#define MSCM_IRCP3ISR1_CP0_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3ISR1_CP0_INT_SHIFT)) & MSCM_IRCP3ISR1_CP0_INT_MASK)
#define MSCM_IRCP3ISR1_CP1_INT_MASK              (0x2U)
#define MSCM_IRCP3ISR1_CP1_INT_SHIFT             (1U)
#define MSCM_IRCP3ISR1_CP1_INT_WIDTH             (1U)
#define MSCM_IRCP3ISR1_CP1_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3ISR1_CP1_INT_SHIFT)) & MSCM_IRCP3ISR1_CP1_INT_MASK)
#define MSCM_IRCP3ISR1_CP2_INT_MASK              (0x4U)
#define MSCM_IRCP3ISR1_CP2_INT_SHIFT             (2U)
#define MSCM_IRCP3ISR1_CP2_INT_WIDTH             (1U)
#define MSCM_IRCP3ISR1_CP2_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3ISR1_CP2_INT_SHIFT)) & MSCM_IRCP3ISR1_CP2_INT_MASK)
#define MSCM_IRCP3ISR1_CP3_INT_MASK              (0x8U)
#define MSCM_IRCP3ISR1_CP3_INT_SHIFT             (3U)
#define MSCM_IRCP3ISR1_CP3_INT_WIDTH             (1U)
#define MSCM_IRCP3ISR1_CP3_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3ISR1_CP3_INT_SHIFT)) & MSCM_IRCP3ISR1_CP3_INT_MASK)
#define MSCM_IRCP3ISR1_CP4_INT_MASK              (0x10U)
#define MSCM_IRCP3ISR1_CP4_INT_SHIFT             (4U)
#define MSCM_IRCP3ISR1_CP4_INT_WIDTH             (1U)
#define MSCM_IRCP3ISR1_CP4_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3ISR1_CP4_INT_SHIFT)) & MSCM_IRCP3ISR1_CP4_INT_MASK)
#define MSCM_IRCP3ISR1_CP5_INT_MASK              (0x20U)
#define MSCM_IRCP3ISR1_CP5_INT_SHIFT             (5U)
#define MSCM_IRCP3ISR1_CP5_INT_WIDTH             (1U)
#define MSCM_IRCP3ISR1_CP5_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3ISR1_CP5_INT_SHIFT)) & MSCM_IRCP3ISR1_CP5_INT_MASK)
#define MSCM_IRCP3ISR1_CP6_INT_MASK              (0x40U)
#define MSCM_IRCP3ISR1_CP6_INT_SHIFT             (6U)
#define MSCM_IRCP3ISR1_CP6_INT_WIDTH             (1U)
#define MSCM_IRCP3ISR1_CP6_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3ISR1_CP6_INT_SHIFT)) & MSCM_IRCP3ISR1_CP6_INT_MASK)
/*! @} */

/*! @name IRCP3IGR1 - Interrupt Router CP3 Interrupt1 Generation Register */
/*! @{ */
#define MSCM_IRCP3IGR1_INT_EN_MASK               (0x1U)
#define MSCM_IRCP3IGR1_INT_EN_SHIFT              (0U)
#define MSCM_IRCP3IGR1_INT_EN_WIDTH              (1U)
#define MSCM_IRCP3IGR1_INT_EN(x)                 (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3IGR1_INT_EN_SHIFT)) & MSCM_IRCP3IGR1_INT_EN_MASK)
/*! @} */

/*! @name IRCP3ISR2 - Interrupt Router CP3 Interrupt2 Status Register */
/*! @{ */
#define MSCM_IRCP3ISR2_CP0_INT_MASK              (0x1U)
#define MSCM_IRCP3ISR2_CP0_INT_SHIFT             (0U)
#define MSCM_IRCP3ISR2_CP0_INT_WIDTH             (1U)
#define MSCM_IRCP3ISR2_CP0_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3ISR2_CP0_INT_SHIFT)) & MSCM_IRCP3ISR2_CP0_INT_MASK)
#define MSCM_IRCP3ISR2_CP1_INT_MASK              (0x2U)
#define MSCM_IRCP3ISR2_CP1_INT_SHIFT             (1U)
#define MSCM_IRCP3ISR2_CP1_INT_WIDTH             (1U)
#define MSCM_IRCP3ISR2_CP1_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3ISR2_CP1_INT_SHIFT)) & MSCM_IRCP3ISR2_CP1_INT_MASK)
#define MSCM_IRCP3ISR2_CP2_INT_MASK              (0x4U)
#define MSCM_IRCP3ISR2_CP2_INT_SHIFT             (2U)
#define MSCM_IRCP3ISR2_CP2_INT_WIDTH             (1U)
#define MSCM_IRCP3ISR2_CP2_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3ISR2_CP2_INT_SHIFT)) & MSCM_IRCP3ISR2_CP2_INT_MASK)
#define MSCM_IRCP3ISR2_CP3_INT_MASK              (0x8U)
#define MSCM_IRCP3ISR2_CP3_INT_SHIFT             (3U)
#define MSCM_IRCP3ISR2_CP3_INT_WIDTH             (1U)
#define MSCM_IRCP3ISR2_CP3_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3ISR2_CP3_INT_SHIFT)) & MSCM_IRCP3ISR2_CP3_INT_MASK)
#define MSCM_IRCP3ISR2_CP4_INT_MASK              (0x10U)
#define MSCM_IRCP3ISR2_CP4_INT_SHIFT             (4U)
#define MSCM_IRCP3ISR2_CP4_INT_WIDTH             (1U)
#define MSCM_IRCP3ISR2_CP4_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3ISR2_CP4_INT_SHIFT)) & MSCM_IRCP3ISR2_CP4_INT_MASK)
#define MSCM_IRCP3ISR2_CP5_INT_MASK              (0x20U)
#define MSCM_IRCP3ISR2_CP5_INT_SHIFT             (5U)
#define MSCM_IRCP3ISR2_CP5_INT_WIDTH             (1U)
#define MSCM_IRCP3ISR2_CP5_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3ISR2_CP5_INT_SHIFT)) & MSCM_IRCP3ISR2_CP5_INT_MASK)
#define MSCM_IRCP3ISR2_CP6_INT_MASK              (0x40U)
#define MSCM_IRCP3ISR2_CP6_INT_SHIFT             (6U)
#define MSCM_IRCP3ISR2_CP6_INT_WIDTH             (1U)
#define MSCM_IRCP3ISR2_CP6_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3ISR2_CP6_INT_SHIFT)) & MSCM_IRCP3ISR2_CP6_INT_MASK)
/*! @} */

/*! @name IRCP3IGR2 - Interrupt Router CP3 Interrupt2 Generation Register */
/*! @{ */
#define MSCM_IRCP3IGR2_INT_EN_MASK               (0x1U)
#define MSCM_IRCP3IGR2_INT_EN_SHIFT              (0U)
#define MSCM_IRCP3IGR2_INT_EN_WIDTH              (1U)
#define MSCM_IRCP3IGR2_INT_EN(x)                 (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3IGR2_INT_EN_SHIFT)) & MSCM_IRCP3IGR2_INT_EN_MASK)
/*! @} */

/*! @name IRCP3ISR3 - Interrupt Router CPn Interruptx Status Register */
/*! @{ */
#define MSCM_IRCP3ISR3_PCIE_INT0_MASK            (0x1U)
#define MSCM_IRCP3ISR3_PCIE_INT0_SHIFT           (0U)
#define MSCM_IRCP3ISR3_PCIE_INT0_WIDTH           (1U)
#define MSCM_IRCP3ISR3_PCIE_INT0(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3ISR3_PCIE_INT0_SHIFT)) & MSCM_IRCP3ISR3_PCIE_INT0_MASK)
#define MSCM_IRCP3ISR3_PCIE_INT1_MASK            (0x2U)
#define MSCM_IRCP3ISR3_PCIE_INT1_SHIFT           (1U)
#define MSCM_IRCP3ISR3_PCIE_INT1_WIDTH           (1U)
#define MSCM_IRCP3ISR3_PCIE_INT1(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3ISR3_PCIE_INT1_SHIFT)) & MSCM_IRCP3ISR3_PCIE_INT1_MASK)
#define MSCM_IRCP3ISR3_PCIE_INT2_MASK            (0x4U)
#define MSCM_IRCP3ISR3_PCIE_INT2_SHIFT           (2U)
#define MSCM_IRCP3ISR3_PCIE_INT2_WIDTH           (1U)
#define MSCM_IRCP3ISR3_PCIE_INT2(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3ISR3_PCIE_INT2_SHIFT)) & MSCM_IRCP3ISR3_PCIE_INT2_MASK)
#define MSCM_IRCP3ISR3_PCIE_INT3_MASK            (0x8U)
#define MSCM_IRCP3ISR3_PCIE_INT3_SHIFT           (3U)
#define MSCM_IRCP3ISR3_PCIE_INT3_WIDTH           (1U)
#define MSCM_IRCP3ISR3_PCIE_INT3(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3ISR3_PCIE_INT3_SHIFT)) & MSCM_IRCP3ISR3_PCIE_INT3_MASK)
#define MSCM_IRCP3ISR3_PCIE_INT4_MASK            (0x10U)
#define MSCM_IRCP3ISR3_PCIE_INT4_SHIFT           (4U)
#define MSCM_IRCP3ISR3_PCIE_INT4_WIDTH           (1U)
#define MSCM_IRCP3ISR3_PCIE_INT4(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3ISR3_PCIE_INT4_SHIFT)) & MSCM_IRCP3ISR3_PCIE_INT4_MASK)
#define MSCM_IRCP3ISR3_PCIE_INT5_MASK            (0x20U)
#define MSCM_IRCP3ISR3_PCIE_INT5_SHIFT           (5U)
#define MSCM_IRCP3ISR3_PCIE_INT5_WIDTH           (1U)
#define MSCM_IRCP3ISR3_PCIE_INT5(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3ISR3_PCIE_INT5_SHIFT)) & MSCM_IRCP3ISR3_PCIE_INT5_MASK)
#define MSCM_IRCP3ISR3_PCIE_INT6_MASK            (0x40U)
#define MSCM_IRCP3ISR3_PCIE_INT6_SHIFT           (6U)
#define MSCM_IRCP3ISR3_PCIE_INT6_WIDTH           (1U)
#define MSCM_IRCP3ISR3_PCIE_INT6(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3ISR3_PCIE_INT6_SHIFT)) & MSCM_IRCP3ISR3_PCIE_INT6_MASK)
#define MSCM_IRCP3ISR3_PCIE_INT7_MASK            (0x80U)
#define MSCM_IRCP3ISR3_PCIE_INT7_SHIFT           (7U)
#define MSCM_IRCP3ISR3_PCIE_INT7_WIDTH           (1U)
#define MSCM_IRCP3ISR3_PCIE_INT7(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3ISR3_PCIE_INT7_SHIFT)) & MSCM_IRCP3ISR3_PCIE_INT7_MASK)
#define MSCM_IRCP3ISR3_PCIE_INT8_MASK            (0x100U)
#define MSCM_IRCP3ISR3_PCIE_INT8_SHIFT           (8U)
#define MSCM_IRCP3ISR3_PCIE_INT8_WIDTH           (1U)
#define MSCM_IRCP3ISR3_PCIE_INT8(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3ISR3_PCIE_INT8_SHIFT)) & MSCM_IRCP3ISR3_PCIE_INT8_MASK)
#define MSCM_IRCP3ISR3_PCIE_INT9_MASK            (0x200U)
#define MSCM_IRCP3ISR3_PCIE_INT9_SHIFT           (9U)
#define MSCM_IRCP3ISR3_PCIE_INT9_WIDTH           (1U)
#define MSCM_IRCP3ISR3_PCIE_INT9(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3ISR3_PCIE_INT9_SHIFT)) & MSCM_IRCP3ISR3_PCIE_INT9_MASK)
#define MSCM_IRCP3ISR3_PCIE_INT10_MASK           (0x400U)
#define MSCM_IRCP3ISR3_PCIE_INT10_SHIFT          (10U)
#define MSCM_IRCP3ISR3_PCIE_INT10_WIDTH          (1U)
#define MSCM_IRCP3ISR3_PCIE_INT10(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3ISR3_PCIE_INT10_SHIFT)) & MSCM_IRCP3ISR3_PCIE_INT10_MASK)
#define MSCM_IRCP3ISR3_PCIE_INT11_MASK           (0x800U)
#define MSCM_IRCP3ISR3_PCIE_INT11_SHIFT          (11U)
#define MSCM_IRCP3ISR3_PCIE_INT11_WIDTH          (1U)
#define MSCM_IRCP3ISR3_PCIE_INT11(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3ISR3_PCIE_INT11_SHIFT)) & MSCM_IRCP3ISR3_PCIE_INT11_MASK)
#define MSCM_IRCP3ISR3_PCIE_INT12_MASK           (0x1000U)
#define MSCM_IRCP3ISR3_PCIE_INT12_SHIFT          (12U)
#define MSCM_IRCP3ISR3_PCIE_INT12_WIDTH          (1U)
#define MSCM_IRCP3ISR3_PCIE_INT12(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3ISR3_PCIE_INT12_SHIFT)) & MSCM_IRCP3ISR3_PCIE_INT12_MASK)
#define MSCM_IRCP3ISR3_PCIE_INT13_MASK           (0x2000U)
#define MSCM_IRCP3ISR3_PCIE_INT13_SHIFT          (13U)
#define MSCM_IRCP3ISR3_PCIE_INT13_WIDTH          (1U)
#define MSCM_IRCP3ISR3_PCIE_INT13(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3ISR3_PCIE_INT13_SHIFT)) & MSCM_IRCP3ISR3_PCIE_INT13_MASK)
#define MSCM_IRCP3ISR3_PCIE_INT14_MASK           (0x4000U)
#define MSCM_IRCP3ISR3_PCIE_INT14_SHIFT          (14U)
#define MSCM_IRCP3ISR3_PCIE_INT14_WIDTH          (1U)
#define MSCM_IRCP3ISR3_PCIE_INT14(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3ISR3_PCIE_INT14_SHIFT)) & MSCM_IRCP3ISR3_PCIE_INT14_MASK)
#define MSCM_IRCP3ISR3_PCIE_INT15_MASK           (0x8000U)
#define MSCM_IRCP3ISR3_PCIE_INT15_SHIFT          (15U)
#define MSCM_IRCP3ISR3_PCIE_INT15_WIDTH          (1U)
#define MSCM_IRCP3ISR3_PCIE_INT15(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3ISR3_PCIE_INT15_SHIFT)) & MSCM_IRCP3ISR3_PCIE_INT15_MASK)
/*! @} */

/*! @name IRCP3IGR3 - Interrupt Router CPn Interruptx Generation Register */
/*! @{ */
#define MSCM_IRCP3IGR3_INT0_EN_MASK              (0x1U)
#define MSCM_IRCP3IGR3_INT0_EN_SHIFT             (0U)
#define MSCM_IRCP3IGR3_INT0_EN_WIDTH             (1U)
#define MSCM_IRCP3IGR3_INT0_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3IGR3_INT0_EN_SHIFT)) & MSCM_IRCP3IGR3_INT0_EN_MASK)
#define MSCM_IRCP3IGR3_INT1_EN_MASK              (0x2U)
#define MSCM_IRCP3IGR3_INT1_EN_SHIFT             (1U)
#define MSCM_IRCP3IGR3_INT1_EN_WIDTH             (1U)
#define MSCM_IRCP3IGR3_INT1_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3IGR3_INT1_EN_SHIFT)) & MSCM_IRCP3IGR3_INT1_EN_MASK)
#define MSCM_IRCP3IGR3_INT2_EN_MASK              (0x4U)
#define MSCM_IRCP3IGR3_INT2_EN_SHIFT             (2U)
#define MSCM_IRCP3IGR3_INT2_EN_WIDTH             (1U)
#define MSCM_IRCP3IGR3_INT2_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3IGR3_INT2_EN_SHIFT)) & MSCM_IRCP3IGR3_INT2_EN_MASK)
#define MSCM_IRCP3IGR3_INT3_EN_MASK              (0x8U)
#define MSCM_IRCP3IGR3_INT3_EN_SHIFT             (3U)
#define MSCM_IRCP3IGR3_INT3_EN_WIDTH             (1U)
#define MSCM_IRCP3IGR3_INT3_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3IGR3_INT3_EN_SHIFT)) & MSCM_IRCP3IGR3_INT3_EN_MASK)
#define MSCM_IRCP3IGR3_INT4_EN_MASK              (0x10U)
#define MSCM_IRCP3IGR3_INT4_EN_SHIFT             (4U)
#define MSCM_IRCP3IGR3_INT4_EN_WIDTH             (1U)
#define MSCM_IRCP3IGR3_INT4_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3IGR3_INT4_EN_SHIFT)) & MSCM_IRCP3IGR3_INT4_EN_MASK)
#define MSCM_IRCP3IGR3_INT5_EN_MASK              (0x20U)
#define MSCM_IRCP3IGR3_INT5_EN_SHIFT             (5U)
#define MSCM_IRCP3IGR3_INT5_EN_WIDTH             (1U)
#define MSCM_IRCP3IGR3_INT5_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3IGR3_INT5_EN_SHIFT)) & MSCM_IRCP3IGR3_INT5_EN_MASK)
#define MSCM_IRCP3IGR3_INT6_EN_MASK              (0x40U)
#define MSCM_IRCP3IGR3_INT6_EN_SHIFT             (6U)
#define MSCM_IRCP3IGR3_INT6_EN_WIDTH             (1U)
#define MSCM_IRCP3IGR3_INT6_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3IGR3_INT6_EN_SHIFT)) & MSCM_IRCP3IGR3_INT6_EN_MASK)
#define MSCM_IRCP3IGR3_INT7_EN_MASK              (0x80U)
#define MSCM_IRCP3IGR3_INT7_EN_SHIFT             (7U)
#define MSCM_IRCP3IGR3_INT7_EN_WIDTH             (1U)
#define MSCM_IRCP3IGR3_INT7_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3IGR3_INT7_EN_SHIFT)) & MSCM_IRCP3IGR3_INT7_EN_MASK)
#define MSCM_IRCP3IGR3_INT8_EN_MASK              (0x100U)
#define MSCM_IRCP3IGR3_INT8_EN_SHIFT             (8U)
#define MSCM_IRCP3IGR3_INT8_EN_WIDTH             (1U)
#define MSCM_IRCP3IGR3_INT8_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3IGR3_INT8_EN_SHIFT)) & MSCM_IRCP3IGR3_INT8_EN_MASK)
#define MSCM_IRCP3IGR3_INT9_EN_MASK              (0x200U)
#define MSCM_IRCP3IGR3_INT9_EN_SHIFT             (9U)
#define MSCM_IRCP3IGR3_INT9_EN_WIDTH             (1U)
#define MSCM_IRCP3IGR3_INT9_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3IGR3_INT9_EN_SHIFT)) & MSCM_IRCP3IGR3_INT9_EN_MASK)
#define MSCM_IRCP3IGR3_INT10_EN_MASK             (0x400U)
#define MSCM_IRCP3IGR3_INT10_EN_SHIFT            (10U)
#define MSCM_IRCP3IGR3_INT10_EN_WIDTH            (1U)
#define MSCM_IRCP3IGR3_INT10_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3IGR3_INT10_EN_SHIFT)) & MSCM_IRCP3IGR3_INT10_EN_MASK)
#define MSCM_IRCP3IGR3_INT11_EN_MASK             (0x800U)
#define MSCM_IRCP3IGR3_INT11_EN_SHIFT            (11U)
#define MSCM_IRCP3IGR3_INT11_EN_WIDTH            (1U)
#define MSCM_IRCP3IGR3_INT11_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3IGR3_INT11_EN_SHIFT)) & MSCM_IRCP3IGR3_INT11_EN_MASK)
#define MSCM_IRCP3IGR3_INT12_EN_MASK             (0x1000U)
#define MSCM_IRCP3IGR3_INT12_EN_SHIFT            (12U)
#define MSCM_IRCP3IGR3_INT12_EN_WIDTH            (1U)
#define MSCM_IRCP3IGR3_INT12_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3IGR3_INT12_EN_SHIFT)) & MSCM_IRCP3IGR3_INT12_EN_MASK)
#define MSCM_IRCP3IGR3_INT13_EN_MASK             (0x2000U)
#define MSCM_IRCP3IGR3_INT13_EN_SHIFT            (13U)
#define MSCM_IRCP3IGR3_INT13_EN_WIDTH            (1U)
#define MSCM_IRCP3IGR3_INT13_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3IGR3_INT13_EN_SHIFT)) & MSCM_IRCP3IGR3_INT13_EN_MASK)
#define MSCM_IRCP3IGR3_INT14_EN_MASK             (0x4000U)
#define MSCM_IRCP3IGR3_INT14_EN_SHIFT            (14U)
#define MSCM_IRCP3IGR3_INT14_EN_WIDTH            (1U)
#define MSCM_IRCP3IGR3_INT14_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3IGR3_INT14_EN_SHIFT)) & MSCM_IRCP3IGR3_INT14_EN_MASK)
#define MSCM_IRCP3IGR3_INT15_EN_MASK             (0x8000U)
#define MSCM_IRCP3IGR3_INT15_EN_SHIFT            (15U)
#define MSCM_IRCP3IGR3_INT15_EN_WIDTH            (1U)
#define MSCM_IRCP3IGR3_INT15_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3IGR3_INT15_EN_SHIFT)) & MSCM_IRCP3IGR3_INT15_EN_MASK)
/*! @} */

/*! @name IRCP4ISR0 - Interrupt Router CP4 Interrupt0 Status Register */
/*! @{ */
#define MSCM_IRCP4ISR0_CP0_INT_MASK              (0x1U)
#define MSCM_IRCP4ISR0_CP0_INT_SHIFT             (0U)
#define MSCM_IRCP4ISR0_CP0_INT_WIDTH             (1U)
#define MSCM_IRCP4ISR0_CP0_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4ISR0_CP0_INT_SHIFT)) & MSCM_IRCP4ISR0_CP0_INT_MASK)
#define MSCM_IRCP4ISR0_CP1_INT_MASK              (0x2U)
#define MSCM_IRCP4ISR0_CP1_INT_SHIFT             (1U)
#define MSCM_IRCP4ISR0_CP1_INT_WIDTH             (1U)
#define MSCM_IRCP4ISR0_CP1_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4ISR0_CP1_INT_SHIFT)) & MSCM_IRCP4ISR0_CP1_INT_MASK)
#define MSCM_IRCP4ISR0_CP2_INT_MASK              (0x4U)
#define MSCM_IRCP4ISR0_CP2_INT_SHIFT             (2U)
#define MSCM_IRCP4ISR0_CP2_INT_WIDTH             (1U)
#define MSCM_IRCP4ISR0_CP2_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4ISR0_CP2_INT_SHIFT)) & MSCM_IRCP4ISR0_CP2_INT_MASK)
#define MSCM_IRCP4ISR0_CP3_INT_MASK              (0x8U)
#define MSCM_IRCP4ISR0_CP3_INT_SHIFT             (3U)
#define MSCM_IRCP4ISR0_CP3_INT_WIDTH             (1U)
#define MSCM_IRCP4ISR0_CP3_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4ISR0_CP3_INT_SHIFT)) & MSCM_IRCP4ISR0_CP3_INT_MASK)
#define MSCM_IRCP4ISR0_CP4_INT_MASK              (0x10U)
#define MSCM_IRCP4ISR0_CP4_INT_SHIFT             (4U)
#define MSCM_IRCP4ISR0_CP4_INT_WIDTH             (1U)
#define MSCM_IRCP4ISR0_CP4_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4ISR0_CP4_INT_SHIFT)) & MSCM_IRCP4ISR0_CP4_INT_MASK)
#define MSCM_IRCP4ISR0_CP5_INT_MASK              (0x20U)
#define MSCM_IRCP4ISR0_CP5_INT_SHIFT             (5U)
#define MSCM_IRCP4ISR0_CP5_INT_WIDTH             (1U)
#define MSCM_IRCP4ISR0_CP5_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4ISR0_CP5_INT_SHIFT)) & MSCM_IRCP4ISR0_CP5_INT_MASK)
#define MSCM_IRCP4ISR0_CP6_INT_MASK              (0x40U)
#define MSCM_IRCP4ISR0_CP6_INT_SHIFT             (6U)
#define MSCM_IRCP4ISR0_CP6_INT_WIDTH             (1U)
#define MSCM_IRCP4ISR0_CP6_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4ISR0_CP6_INT_SHIFT)) & MSCM_IRCP4ISR0_CP6_INT_MASK)
/*! @} */

/*! @name IRCP4IGR0 - Interrupt Router CP4 Interrupt0 Generation Register */
/*! @{ */
#define MSCM_IRCP4IGR0_INT_EN_MASK               (0x1U)
#define MSCM_IRCP4IGR0_INT_EN_SHIFT              (0U)
#define MSCM_IRCP4IGR0_INT_EN_WIDTH              (1U)
#define MSCM_IRCP4IGR0_INT_EN(x)                 (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4IGR0_INT_EN_SHIFT)) & MSCM_IRCP4IGR0_INT_EN_MASK)
/*! @} */

/*! @name IRCP4ISR1 - Interrupt Router CP4 Interrupt1 Status Register */
/*! @{ */
#define MSCM_IRCP4ISR1_CP0_INT_MASK              (0x1U)
#define MSCM_IRCP4ISR1_CP0_INT_SHIFT             (0U)
#define MSCM_IRCP4ISR1_CP0_INT_WIDTH             (1U)
#define MSCM_IRCP4ISR1_CP0_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4ISR1_CP0_INT_SHIFT)) & MSCM_IRCP4ISR1_CP0_INT_MASK)
#define MSCM_IRCP4ISR1_CP1_INT_MASK              (0x2U)
#define MSCM_IRCP4ISR1_CP1_INT_SHIFT             (1U)
#define MSCM_IRCP4ISR1_CP1_INT_WIDTH             (1U)
#define MSCM_IRCP4ISR1_CP1_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4ISR1_CP1_INT_SHIFT)) & MSCM_IRCP4ISR1_CP1_INT_MASK)
#define MSCM_IRCP4ISR1_CP2_INT_MASK              (0x4U)
#define MSCM_IRCP4ISR1_CP2_INT_SHIFT             (2U)
#define MSCM_IRCP4ISR1_CP2_INT_WIDTH             (1U)
#define MSCM_IRCP4ISR1_CP2_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4ISR1_CP2_INT_SHIFT)) & MSCM_IRCP4ISR1_CP2_INT_MASK)
#define MSCM_IRCP4ISR1_CP3_INT_MASK              (0x8U)
#define MSCM_IRCP4ISR1_CP3_INT_SHIFT             (3U)
#define MSCM_IRCP4ISR1_CP3_INT_WIDTH             (1U)
#define MSCM_IRCP4ISR1_CP3_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4ISR1_CP3_INT_SHIFT)) & MSCM_IRCP4ISR1_CP3_INT_MASK)
#define MSCM_IRCP4ISR1_CP4_INT_MASK              (0x10U)
#define MSCM_IRCP4ISR1_CP4_INT_SHIFT             (4U)
#define MSCM_IRCP4ISR1_CP4_INT_WIDTH             (1U)
#define MSCM_IRCP4ISR1_CP4_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4ISR1_CP4_INT_SHIFT)) & MSCM_IRCP4ISR1_CP4_INT_MASK)
#define MSCM_IRCP4ISR1_CP5_INT_MASK              (0x20U)
#define MSCM_IRCP4ISR1_CP5_INT_SHIFT             (5U)
#define MSCM_IRCP4ISR1_CP5_INT_WIDTH             (1U)
#define MSCM_IRCP4ISR1_CP5_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4ISR1_CP5_INT_SHIFT)) & MSCM_IRCP4ISR1_CP5_INT_MASK)
#define MSCM_IRCP4ISR1_CP6_INT_MASK              (0x40U)
#define MSCM_IRCP4ISR1_CP6_INT_SHIFT             (6U)
#define MSCM_IRCP4ISR1_CP6_INT_WIDTH             (1U)
#define MSCM_IRCP4ISR1_CP6_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4ISR1_CP6_INT_SHIFT)) & MSCM_IRCP4ISR1_CP6_INT_MASK)
/*! @} */

/*! @name IRCP4IGR1 - Interrupt Router CP4 Interrupt1 Generation Register */
/*! @{ */
#define MSCM_IRCP4IGR1_INT_EN_MASK               (0x1U)
#define MSCM_IRCP4IGR1_INT_EN_SHIFT              (0U)
#define MSCM_IRCP4IGR1_INT_EN_WIDTH              (1U)
#define MSCM_IRCP4IGR1_INT_EN(x)                 (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4IGR1_INT_EN_SHIFT)) & MSCM_IRCP4IGR1_INT_EN_MASK)
/*! @} */

/*! @name IRCP4ISR2 - Interrupt Router CP4 Interrupt2 Status Register */
/*! @{ */
#define MSCM_IRCP4ISR2_CP0_INT_MASK              (0x1U)
#define MSCM_IRCP4ISR2_CP0_INT_SHIFT             (0U)
#define MSCM_IRCP4ISR2_CP0_INT_WIDTH             (1U)
#define MSCM_IRCP4ISR2_CP0_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4ISR2_CP0_INT_SHIFT)) & MSCM_IRCP4ISR2_CP0_INT_MASK)
#define MSCM_IRCP4ISR2_CP1_INT_MASK              (0x2U)
#define MSCM_IRCP4ISR2_CP1_INT_SHIFT             (1U)
#define MSCM_IRCP4ISR2_CP1_INT_WIDTH             (1U)
#define MSCM_IRCP4ISR2_CP1_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4ISR2_CP1_INT_SHIFT)) & MSCM_IRCP4ISR2_CP1_INT_MASK)
#define MSCM_IRCP4ISR2_CP2_INT_MASK              (0x4U)
#define MSCM_IRCP4ISR2_CP2_INT_SHIFT             (2U)
#define MSCM_IRCP4ISR2_CP2_INT_WIDTH             (1U)
#define MSCM_IRCP4ISR2_CP2_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4ISR2_CP2_INT_SHIFT)) & MSCM_IRCP4ISR2_CP2_INT_MASK)
#define MSCM_IRCP4ISR2_CP3_INT_MASK              (0x8U)
#define MSCM_IRCP4ISR2_CP3_INT_SHIFT             (3U)
#define MSCM_IRCP4ISR2_CP3_INT_WIDTH             (1U)
#define MSCM_IRCP4ISR2_CP3_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4ISR2_CP3_INT_SHIFT)) & MSCM_IRCP4ISR2_CP3_INT_MASK)
#define MSCM_IRCP4ISR2_CP4_INT_MASK              (0x10U)
#define MSCM_IRCP4ISR2_CP4_INT_SHIFT             (4U)
#define MSCM_IRCP4ISR2_CP4_INT_WIDTH             (1U)
#define MSCM_IRCP4ISR2_CP4_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4ISR2_CP4_INT_SHIFT)) & MSCM_IRCP4ISR2_CP4_INT_MASK)
#define MSCM_IRCP4ISR2_CP5_INT_MASK              (0x20U)
#define MSCM_IRCP4ISR2_CP5_INT_SHIFT             (5U)
#define MSCM_IRCP4ISR2_CP5_INT_WIDTH             (1U)
#define MSCM_IRCP4ISR2_CP5_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4ISR2_CP5_INT_SHIFT)) & MSCM_IRCP4ISR2_CP5_INT_MASK)
#define MSCM_IRCP4ISR2_CP6_INT_MASK              (0x40U)
#define MSCM_IRCP4ISR2_CP6_INT_SHIFT             (6U)
#define MSCM_IRCP4ISR2_CP6_INT_WIDTH             (1U)
#define MSCM_IRCP4ISR2_CP6_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4ISR2_CP6_INT_SHIFT)) & MSCM_IRCP4ISR2_CP6_INT_MASK)
/*! @} */

/*! @name IRCP4IGR2 - Interrupt Router CP4 Interrupt2 Generation Register */
/*! @{ */
#define MSCM_IRCP4IGR2_INT_EN_MASK               (0x1U)
#define MSCM_IRCP4IGR2_INT_EN_SHIFT              (0U)
#define MSCM_IRCP4IGR2_INT_EN_WIDTH              (1U)
#define MSCM_IRCP4IGR2_INT_EN(x)                 (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4IGR2_INT_EN_SHIFT)) & MSCM_IRCP4IGR2_INT_EN_MASK)
/*! @} */

/*! @name IRCP4ISR3 - Interrupt Router CPn Interruptx Status Register */
/*! @{ */
#define MSCM_IRCP4ISR3_PCIE_INT0_MASK            (0x1U)
#define MSCM_IRCP4ISR3_PCIE_INT0_SHIFT           (0U)
#define MSCM_IRCP4ISR3_PCIE_INT0_WIDTH           (1U)
#define MSCM_IRCP4ISR3_PCIE_INT0(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4ISR3_PCIE_INT0_SHIFT)) & MSCM_IRCP4ISR3_PCIE_INT0_MASK)
#define MSCM_IRCP4ISR3_PCIE_INT1_MASK            (0x2U)
#define MSCM_IRCP4ISR3_PCIE_INT1_SHIFT           (1U)
#define MSCM_IRCP4ISR3_PCIE_INT1_WIDTH           (1U)
#define MSCM_IRCP4ISR3_PCIE_INT1(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4ISR3_PCIE_INT1_SHIFT)) & MSCM_IRCP4ISR3_PCIE_INT1_MASK)
#define MSCM_IRCP4ISR3_PCIE_INT2_MASK            (0x4U)
#define MSCM_IRCP4ISR3_PCIE_INT2_SHIFT           (2U)
#define MSCM_IRCP4ISR3_PCIE_INT2_WIDTH           (1U)
#define MSCM_IRCP4ISR3_PCIE_INT2(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4ISR3_PCIE_INT2_SHIFT)) & MSCM_IRCP4ISR3_PCIE_INT2_MASK)
#define MSCM_IRCP4ISR3_PCIE_INT3_MASK            (0x8U)
#define MSCM_IRCP4ISR3_PCIE_INT3_SHIFT           (3U)
#define MSCM_IRCP4ISR3_PCIE_INT3_WIDTH           (1U)
#define MSCM_IRCP4ISR3_PCIE_INT3(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4ISR3_PCIE_INT3_SHIFT)) & MSCM_IRCP4ISR3_PCIE_INT3_MASK)
#define MSCM_IRCP4ISR3_PCIE_INT4_MASK            (0x10U)
#define MSCM_IRCP4ISR3_PCIE_INT4_SHIFT           (4U)
#define MSCM_IRCP4ISR3_PCIE_INT4_WIDTH           (1U)
#define MSCM_IRCP4ISR3_PCIE_INT4(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4ISR3_PCIE_INT4_SHIFT)) & MSCM_IRCP4ISR3_PCIE_INT4_MASK)
#define MSCM_IRCP4ISR3_PCIE_INT5_MASK            (0x20U)
#define MSCM_IRCP4ISR3_PCIE_INT5_SHIFT           (5U)
#define MSCM_IRCP4ISR3_PCIE_INT5_WIDTH           (1U)
#define MSCM_IRCP4ISR3_PCIE_INT5(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4ISR3_PCIE_INT5_SHIFT)) & MSCM_IRCP4ISR3_PCIE_INT5_MASK)
#define MSCM_IRCP4ISR3_PCIE_INT6_MASK            (0x40U)
#define MSCM_IRCP4ISR3_PCIE_INT6_SHIFT           (6U)
#define MSCM_IRCP4ISR3_PCIE_INT6_WIDTH           (1U)
#define MSCM_IRCP4ISR3_PCIE_INT6(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4ISR3_PCIE_INT6_SHIFT)) & MSCM_IRCP4ISR3_PCIE_INT6_MASK)
#define MSCM_IRCP4ISR3_PCIE_INT7_MASK            (0x80U)
#define MSCM_IRCP4ISR3_PCIE_INT7_SHIFT           (7U)
#define MSCM_IRCP4ISR3_PCIE_INT7_WIDTH           (1U)
#define MSCM_IRCP4ISR3_PCIE_INT7(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4ISR3_PCIE_INT7_SHIFT)) & MSCM_IRCP4ISR3_PCIE_INT7_MASK)
#define MSCM_IRCP4ISR3_PCIE_INT8_MASK            (0x100U)
#define MSCM_IRCP4ISR3_PCIE_INT8_SHIFT           (8U)
#define MSCM_IRCP4ISR3_PCIE_INT8_WIDTH           (1U)
#define MSCM_IRCP4ISR3_PCIE_INT8(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4ISR3_PCIE_INT8_SHIFT)) & MSCM_IRCP4ISR3_PCIE_INT8_MASK)
#define MSCM_IRCP4ISR3_PCIE_INT9_MASK            (0x200U)
#define MSCM_IRCP4ISR3_PCIE_INT9_SHIFT           (9U)
#define MSCM_IRCP4ISR3_PCIE_INT9_WIDTH           (1U)
#define MSCM_IRCP4ISR3_PCIE_INT9(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4ISR3_PCIE_INT9_SHIFT)) & MSCM_IRCP4ISR3_PCIE_INT9_MASK)
#define MSCM_IRCP4ISR3_PCIE_INT10_MASK           (0x400U)
#define MSCM_IRCP4ISR3_PCIE_INT10_SHIFT          (10U)
#define MSCM_IRCP4ISR3_PCIE_INT10_WIDTH          (1U)
#define MSCM_IRCP4ISR3_PCIE_INT10(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4ISR3_PCIE_INT10_SHIFT)) & MSCM_IRCP4ISR3_PCIE_INT10_MASK)
#define MSCM_IRCP4ISR3_PCIE_INT11_MASK           (0x800U)
#define MSCM_IRCP4ISR3_PCIE_INT11_SHIFT          (11U)
#define MSCM_IRCP4ISR3_PCIE_INT11_WIDTH          (1U)
#define MSCM_IRCP4ISR3_PCIE_INT11(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4ISR3_PCIE_INT11_SHIFT)) & MSCM_IRCP4ISR3_PCIE_INT11_MASK)
#define MSCM_IRCP4ISR3_PCIE_INT12_MASK           (0x1000U)
#define MSCM_IRCP4ISR3_PCIE_INT12_SHIFT          (12U)
#define MSCM_IRCP4ISR3_PCIE_INT12_WIDTH          (1U)
#define MSCM_IRCP4ISR3_PCIE_INT12(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4ISR3_PCIE_INT12_SHIFT)) & MSCM_IRCP4ISR3_PCIE_INT12_MASK)
#define MSCM_IRCP4ISR3_PCIE_INT13_MASK           (0x2000U)
#define MSCM_IRCP4ISR3_PCIE_INT13_SHIFT          (13U)
#define MSCM_IRCP4ISR3_PCIE_INT13_WIDTH          (1U)
#define MSCM_IRCP4ISR3_PCIE_INT13(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4ISR3_PCIE_INT13_SHIFT)) & MSCM_IRCP4ISR3_PCIE_INT13_MASK)
#define MSCM_IRCP4ISR3_PCIE_INT14_MASK           (0x4000U)
#define MSCM_IRCP4ISR3_PCIE_INT14_SHIFT          (14U)
#define MSCM_IRCP4ISR3_PCIE_INT14_WIDTH          (1U)
#define MSCM_IRCP4ISR3_PCIE_INT14(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4ISR3_PCIE_INT14_SHIFT)) & MSCM_IRCP4ISR3_PCIE_INT14_MASK)
#define MSCM_IRCP4ISR3_PCIE_INT15_MASK           (0x8000U)
#define MSCM_IRCP4ISR3_PCIE_INT15_SHIFT          (15U)
#define MSCM_IRCP4ISR3_PCIE_INT15_WIDTH          (1U)
#define MSCM_IRCP4ISR3_PCIE_INT15(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4ISR3_PCIE_INT15_SHIFT)) & MSCM_IRCP4ISR3_PCIE_INT15_MASK)
/*! @} */

/*! @name IRCP4IGR3 - Interrupt Router CPn Interruptx Generation Register */
/*! @{ */
#define MSCM_IRCP4IGR3_INT0_EN_MASK              (0x1U)
#define MSCM_IRCP4IGR3_INT0_EN_SHIFT             (0U)
#define MSCM_IRCP4IGR3_INT0_EN_WIDTH             (1U)
#define MSCM_IRCP4IGR3_INT0_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4IGR3_INT0_EN_SHIFT)) & MSCM_IRCP4IGR3_INT0_EN_MASK)
#define MSCM_IRCP4IGR3_INT1_EN_MASK              (0x2U)
#define MSCM_IRCP4IGR3_INT1_EN_SHIFT             (1U)
#define MSCM_IRCP4IGR3_INT1_EN_WIDTH             (1U)
#define MSCM_IRCP4IGR3_INT1_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4IGR3_INT1_EN_SHIFT)) & MSCM_IRCP4IGR3_INT1_EN_MASK)
#define MSCM_IRCP4IGR3_INT2_EN_MASK              (0x4U)
#define MSCM_IRCP4IGR3_INT2_EN_SHIFT             (2U)
#define MSCM_IRCP4IGR3_INT2_EN_WIDTH             (1U)
#define MSCM_IRCP4IGR3_INT2_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4IGR3_INT2_EN_SHIFT)) & MSCM_IRCP4IGR3_INT2_EN_MASK)
#define MSCM_IRCP4IGR3_INT3_EN_MASK              (0x8U)
#define MSCM_IRCP4IGR3_INT3_EN_SHIFT             (3U)
#define MSCM_IRCP4IGR3_INT3_EN_WIDTH             (1U)
#define MSCM_IRCP4IGR3_INT3_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4IGR3_INT3_EN_SHIFT)) & MSCM_IRCP4IGR3_INT3_EN_MASK)
#define MSCM_IRCP4IGR3_INT4_EN_MASK              (0x10U)
#define MSCM_IRCP4IGR3_INT4_EN_SHIFT             (4U)
#define MSCM_IRCP4IGR3_INT4_EN_WIDTH             (1U)
#define MSCM_IRCP4IGR3_INT4_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4IGR3_INT4_EN_SHIFT)) & MSCM_IRCP4IGR3_INT4_EN_MASK)
#define MSCM_IRCP4IGR3_INT5_EN_MASK              (0x20U)
#define MSCM_IRCP4IGR3_INT5_EN_SHIFT             (5U)
#define MSCM_IRCP4IGR3_INT5_EN_WIDTH             (1U)
#define MSCM_IRCP4IGR3_INT5_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4IGR3_INT5_EN_SHIFT)) & MSCM_IRCP4IGR3_INT5_EN_MASK)
#define MSCM_IRCP4IGR3_INT6_EN_MASK              (0x40U)
#define MSCM_IRCP4IGR3_INT6_EN_SHIFT             (6U)
#define MSCM_IRCP4IGR3_INT6_EN_WIDTH             (1U)
#define MSCM_IRCP4IGR3_INT6_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4IGR3_INT6_EN_SHIFT)) & MSCM_IRCP4IGR3_INT6_EN_MASK)
#define MSCM_IRCP4IGR3_INT7_EN_MASK              (0x80U)
#define MSCM_IRCP4IGR3_INT7_EN_SHIFT             (7U)
#define MSCM_IRCP4IGR3_INT7_EN_WIDTH             (1U)
#define MSCM_IRCP4IGR3_INT7_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4IGR3_INT7_EN_SHIFT)) & MSCM_IRCP4IGR3_INT7_EN_MASK)
#define MSCM_IRCP4IGR3_INT8_EN_MASK              (0x100U)
#define MSCM_IRCP4IGR3_INT8_EN_SHIFT             (8U)
#define MSCM_IRCP4IGR3_INT8_EN_WIDTH             (1U)
#define MSCM_IRCP4IGR3_INT8_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4IGR3_INT8_EN_SHIFT)) & MSCM_IRCP4IGR3_INT8_EN_MASK)
#define MSCM_IRCP4IGR3_INT9_EN_MASK              (0x200U)
#define MSCM_IRCP4IGR3_INT9_EN_SHIFT             (9U)
#define MSCM_IRCP4IGR3_INT9_EN_WIDTH             (1U)
#define MSCM_IRCP4IGR3_INT9_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4IGR3_INT9_EN_SHIFT)) & MSCM_IRCP4IGR3_INT9_EN_MASK)
#define MSCM_IRCP4IGR3_INT10_EN_MASK             (0x400U)
#define MSCM_IRCP4IGR3_INT10_EN_SHIFT            (10U)
#define MSCM_IRCP4IGR3_INT10_EN_WIDTH            (1U)
#define MSCM_IRCP4IGR3_INT10_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4IGR3_INT10_EN_SHIFT)) & MSCM_IRCP4IGR3_INT10_EN_MASK)
#define MSCM_IRCP4IGR3_INT11_EN_MASK             (0x800U)
#define MSCM_IRCP4IGR3_INT11_EN_SHIFT            (11U)
#define MSCM_IRCP4IGR3_INT11_EN_WIDTH            (1U)
#define MSCM_IRCP4IGR3_INT11_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4IGR3_INT11_EN_SHIFT)) & MSCM_IRCP4IGR3_INT11_EN_MASK)
#define MSCM_IRCP4IGR3_INT12_EN_MASK             (0x1000U)
#define MSCM_IRCP4IGR3_INT12_EN_SHIFT            (12U)
#define MSCM_IRCP4IGR3_INT12_EN_WIDTH            (1U)
#define MSCM_IRCP4IGR3_INT12_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4IGR3_INT12_EN_SHIFT)) & MSCM_IRCP4IGR3_INT12_EN_MASK)
#define MSCM_IRCP4IGR3_INT13_EN_MASK             (0x2000U)
#define MSCM_IRCP4IGR3_INT13_EN_SHIFT            (13U)
#define MSCM_IRCP4IGR3_INT13_EN_WIDTH            (1U)
#define MSCM_IRCP4IGR3_INT13_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4IGR3_INT13_EN_SHIFT)) & MSCM_IRCP4IGR3_INT13_EN_MASK)
#define MSCM_IRCP4IGR3_INT14_EN_MASK             (0x4000U)
#define MSCM_IRCP4IGR3_INT14_EN_SHIFT            (14U)
#define MSCM_IRCP4IGR3_INT14_EN_WIDTH            (1U)
#define MSCM_IRCP4IGR3_INT14_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4IGR3_INT14_EN_SHIFT)) & MSCM_IRCP4IGR3_INT14_EN_MASK)
#define MSCM_IRCP4IGR3_INT15_EN_MASK             (0x8000U)
#define MSCM_IRCP4IGR3_INT15_EN_SHIFT            (15U)
#define MSCM_IRCP4IGR3_INT15_EN_WIDTH            (1U)
#define MSCM_IRCP4IGR3_INT15_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4IGR3_INT15_EN_SHIFT)) & MSCM_IRCP4IGR3_INT15_EN_MASK)
/*! @} */

/*! @name IRCP5ISR0 - Interrupt Router CP5 Interrupt0 Status Register */
/*! @{ */
#define MSCM_IRCP5ISR0_CP0_INT_MASK              (0x1U)
#define MSCM_IRCP5ISR0_CP0_INT_SHIFT             (0U)
#define MSCM_IRCP5ISR0_CP0_INT_WIDTH             (1U)
#define MSCM_IRCP5ISR0_CP0_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5ISR0_CP0_INT_SHIFT)) & MSCM_IRCP5ISR0_CP0_INT_MASK)
#define MSCM_IRCP5ISR0_CP1_INT_MASK              (0x2U)
#define MSCM_IRCP5ISR0_CP1_INT_SHIFT             (1U)
#define MSCM_IRCP5ISR0_CP1_INT_WIDTH             (1U)
#define MSCM_IRCP5ISR0_CP1_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5ISR0_CP1_INT_SHIFT)) & MSCM_IRCP5ISR0_CP1_INT_MASK)
#define MSCM_IRCP5ISR0_CP2_INT_MASK              (0x4U)
#define MSCM_IRCP5ISR0_CP2_INT_SHIFT             (2U)
#define MSCM_IRCP5ISR0_CP2_INT_WIDTH             (1U)
#define MSCM_IRCP5ISR0_CP2_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5ISR0_CP2_INT_SHIFT)) & MSCM_IRCP5ISR0_CP2_INT_MASK)
#define MSCM_IRCP5ISR0_CP3_INT_MASK              (0x8U)
#define MSCM_IRCP5ISR0_CP3_INT_SHIFT             (3U)
#define MSCM_IRCP5ISR0_CP3_INT_WIDTH             (1U)
#define MSCM_IRCP5ISR0_CP3_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5ISR0_CP3_INT_SHIFT)) & MSCM_IRCP5ISR0_CP3_INT_MASK)
#define MSCM_IRCP5ISR0_CP4_INT_MASK              (0x10U)
#define MSCM_IRCP5ISR0_CP4_INT_SHIFT             (4U)
#define MSCM_IRCP5ISR0_CP4_INT_WIDTH             (1U)
#define MSCM_IRCP5ISR0_CP4_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5ISR0_CP4_INT_SHIFT)) & MSCM_IRCP5ISR0_CP4_INT_MASK)
#define MSCM_IRCP5ISR0_CP5_INT_MASK              (0x20U)
#define MSCM_IRCP5ISR0_CP5_INT_SHIFT             (5U)
#define MSCM_IRCP5ISR0_CP5_INT_WIDTH             (1U)
#define MSCM_IRCP5ISR0_CP5_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5ISR0_CP5_INT_SHIFT)) & MSCM_IRCP5ISR0_CP5_INT_MASK)
#define MSCM_IRCP5ISR0_CP6_INT_MASK              (0x40U)
#define MSCM_IRCP5ISR0_CP6_INT_SHIFT             (6U)
#define MSCM_IRCP5ISR0_CP6_INT_WIDTH             (1U)
#define MSCM_IRCP5ISR0_CP6_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5ISR0_CP6_INT_SHIFT)) & MSCM_IRCP5ISR0_CP6_INT_MASK)
/*! @} */

/*! @name IRCP5IGR0 - Interrupt Router CP5 Interrupt0 Generation Register */
/*! @{ */
#define MSCM_IRCP5IGR0_INT_EN_MASK               (0x1U)
#define MSCM_IRCP5IGR0_INT_EN_SHIFT              (0U)
#define MSCM_IRCP5IGR0_INT_EN_WIDTH              (1U)
#define MSCM_IRCP5IGR0_INT_EN(x)                 (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5IGR0_INT_EN_SHIFT)) & MSCM_IRCP5IGR0_INT_EN_MASK)
/*! @} */

/*! @name IRCP5ISR1 - Interrupt Router CP5 Interrupt1 Status Register */
/*! @{ */
#define MSCM_IRCP5ISR1_CP0_INT_MASK              (0x1U)
#define MSCM_IRCP5ISR1_CP0_INT_SHIFT             (0U)
#define MSCM_IRCP5ISR1_CP0_INT_WIDTH             (1U)
#define MSCM_IRCP5ISR1_CP0_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5ISR1_CP0_INT_SHIFT)) & MSCM_IRCP5ISR1_CP0_INT_MASK)
#define MSCM_IRCP5ISR1_CP1_INT_MASK              (0x2U)
#define MSCM_IRCP5ISR1_CP1_INT_SHIFT             (1U)
#define MSCM_IRCP5ISR1_CP1_INT_WIDTH             (1U)
#define MSCM_IRCP5ISR1_CP1_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5ISR1_CP1_INT_SHIFT)) & MSCM_IRCP5ISR1_CP1_INT_MASK)
#define MSCM_IRCP5ISR1_CP2_INT_MASK              (0x4U)
#define MSCM_IRCP5ISR1_CP2_INT_SHIFT             (2U)
#define MSCM_IRCP5ISR1_CP2_INT_WIDTH             (1U)
#define MSCM_IRCP5ISR1_CP2_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5ISR1_CP2_INT_SHIFT)) & MSCM_IRCP5ISR1_CP2_INT_MASK)
#define MSCM_IRCP5ISR1_CP3_INT_MASK              (0x8U)
#define MSCM_IRCP5ISR1_CP3_INT_SHIFT             (3U)
#define MSCM_IRCP5ISR1_CP3_INT_WIDTH             (1U)
#define MSCM_IRCP5ISR1_CP3_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5ISR1_CP3_INT_SHIFT)) & MSCM_IRCP5ISR1_CP3_INT_MASK)
#define MSCM_IRCP5ISR1_CP4_INT_MASK              (0x10U)
#define MSCM_IRCP5ISR1_CP4_INT_SHIFT             (4U)
#define MSCM_IRCP5ISR1_CP4_INT_WIDTH             (1U)
#define MSCM_IRCP5ISR1_CP4_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5ISR1_CP4_INT_SHIFT)) & MSCM_IRCP5ISR1_CP4_INT_MASK)
#define MSCM_IRCP5ISR1_CP5_INT_MASK              (0x20U)
#define MSCM_IRCP5ISR1_CP5_INT_SHIFT             (5U)
#define MSCM_IRCP5ISR1_CP5_INT_WIDTH             (1U)
#define MSCM_IRCP5ISR1_CP5_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5ISR1_CP5_INT_SHIFT)) & MSCM_IRCP5ISR1_CP5_INT_MASK)
#define MSCM_IRCP5ISR1_CP6_INT_MASK              (0x40U)
#define MSCM_IRCP5ISR1_CP6_INT_SHIFT             (6U)
#define MSCM_IRCP5ISR1_CP6_INT_WIDTH             (1U)
#define MSCM_IRCP5ISR1_CP6_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5ISR1_CP6_INT_SHIFT)) & MSCM_IRCP5ISR1_CP6_INT_MASK)
/*! @} */

/*! @name IRCP5IGR1 - Interrupt Router CP5 Interrupt1 Generation Register */
/*! @{ */
#define MSCM_IRCP5IGR1_INT_EN_MASK               (0x1U)
#define MSCM_IRCP5IGR1_INT_EN_SHIFT              (0U)
#define MSCM_IRCP5IGR1_INT_EN_WIDTH              (1U)
#define MSCM_IRCP5IGR1_INT_EN(x)                 (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5IGR1_INT_EN_SHIFT)) & MSCM_IRCP5IGR1_INT_EN_MASK)
/*! @} */

/*! @name IRCP5ISR2 - Interrupt Router CP5 Interrupt2 Status Register */
/*! @{ */
#define MSCM_IRCP5ISR2_CP0_INT_MASK              (0x1U)
#define MSCM_IRCP5ISR2_CP0_INT_SHIFT             (0U)
#define MSCM_IRCP5ISR2_CP0_INT_WIDTH             (1U)
#define MSCM_IRCP5ISR2_CP0_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5ISR2_CP0_INT_SHIFT)) & MSCM_IRCP5ISR2_CP0_INT_MASK)
#define MSCM_IRCP5ISR2_CP1_INT_MASK              (0x2U)
#define MSCM_IRCP5ISR2_CP1_INT_SHIFT             (1U)
#define MSCM_IRCP5ISR2_CP1_INT_WIDTH             (1U)
#define MSCM_IRCP5ISR2_CP1_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5ISR2_CP1_INT_SHIFT)) & MSCM_IRCP5ISR2_CP1_INT_MASK)
#define MSCM_IRCP5ISR2_CP2_INT_MASK              (0x4U)
#define MSCM_IRCP5ISR2_CP2_INT_SHIFT             (2U)
#define MSCM_IRCP5ISR2_CP2_INT_WIDTH             (1U)
#define MSCM_IRCP5ISR2_CP2_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5ISR2_CP2_INT_SHIFT)) & MSCM_IRCP5ISR2_CP2_INT_MASK)
#define MSCM_IRCP5ISR2_CP3_INT_MASK              (0x8U)
#define MSCM_IRCP5ISR2_CP3_INT_SHIFT             (3U)
#define MSCM_IRCP5ISR2_CP3_INT_WIDTH             (1U)
#define MSCM_IRCP5ISR2_CP3_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5ISR2_CP3_INT_SHIFT)) & MSCM_IRCP5ISR2_CP3_INT_MASK)
#define MSCM_IRCP5ISR2_CP4_INT_MASK              (0x10U)
#define MSCM_IRCP5ISR2_CP4_INT_SHIFT             (4U)
#define MSCM_IRCP5ISR2_CP4_INT_WIDTH             (1U)
#define MSCM_IRCP5ISR2_CP4_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5ISR2_CP4_INT_SHIFT)) & MSCM_IRCP5ISR2_CP4_INT_MASK)
#define MSCM_IRCP5ISR2_CP5_INT_MASK              (0x20U)
#define MSCM_IRCP5ISR2_CP5_INT_SHIFT             (5U)
#define MSCM_IRCP5ISR2_CP5_INT_WIDTH             (1U)
#define MSCM_IRCP5ISR2_CP5_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5ISR2_CP5_INT_SHIFT)) & MSCM_IRCP5ISR2_CP5_INT_MASK)
#define MSCM_IRCP5ISR2_CP6_INT_MASK              (0x40U)
#define MSCM_IRCP5ISR2_CP6_INT_SHIFT             (6U)
#define MSCM_IRCP5ISR2_CP6_INT_WIDTH             (1U)
#define MSCM_IRCP5ISR2_CP6_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5ISR2_CP6_INT_SHIFT)) & MSCM_IRCP5ISR2_CP6_INT_MASK)
/*! @} */

/*! @name IRCP5IGR2 - Interrupt Router CP5 Interrupt2 Generation Register */
/*! @{ */
#define MSCM_IRCP5IGR2_INT_EN_MASK               (0x1U)
#define MSCM_IRCP5IGR2_INT_EN_SHIFT              (0U)
#define MSCM_IRCP5IGR2_INT_EN_WIDTH              (1U)
#define MSCM_IRCP5IGR2_INT_EN(x)                 (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5IGR2_INT_EN_SHIFT)) & MSCM_IRCP5IGR2_INT_EN_MASK)
/*! @} */

/*! @name IRCP5ISR3 - Interrupt Router CPn Interruptx Status Register */
/*! @{ */
#define MSCM_IRCP5ISR3_PCIE_INT0_MASK            (0x1U)
#define MSCM_IRCP5ISR3_PCIE_INT0_SHIFT           (0U)
#define MSCM_IRCP5ISR3_PCIE_INT0_WIDTH           (1U)
#define MSCM_IRCP5ISR3_PCIE_INT0(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5ISR3_PCIE_INT0_SHIFT)) & MSCM_IRCP5ISR3_PCIE_INT0_MASK)
#define MSCM_IRCP5ISR3_PCIE_INT1_MASK            (0x2U)
#define MSCM_IRCP5ISR3_PCIE_INT1_SHIFT           (1U)
#define MSCM_IRCP5ISR3_PCIE_INT1_WIDTH           (1U)
#define MSCM_IRCP5ISR3_PCIE_INT1(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5ISR3_PCIE_INT1_SHIFT)) & MSCM_IRCP5ISR3_PCIE_INT1_MASK)
#define MSCM_IRCP5ISR3_PCIE_INT2_MASK            (0x4U)
#define MSCM_IRCP5ISR3_PCIE_INT2_SHIFT           (2U)
#define MSCM_IRCP5ISR3_PCIE_INT2_WIDTH           (1U)
#define MSCM_IRCP5ISR3_PCIE_INT2(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5ISR3_PCIE_INT2_SHIFT)) & MSCM_IRCP5ISR3_PCIE_INT2_MASK)
#define MSCM_IRCP5ISR3_PCIE_INT3_MASK            (0x8U)
#define MSCM_IRCP5ISR3_PCIE_INT3_SHIFT           (3U)
#define MSCM_IRCP5ISR3_PCIE_INT3_WIDTH           (1U)
#define MSCM_IRCP5ISR3_PCIE_INT3(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5ISR3_PCIE_INT3_SHIFT)) & MSCM_IRCP5ISR3_PCIE_INT3_MASK)
#define MSCM_IRCP5ISR3_PCIE_INT4_MASK            (0x10U)
#define MSCM_IRCP5ISR3_PCIE_INT4_SHIFT           (4U)
#define MSCM_IRCP5ISR3_PCIE_INT4_WIDTH           (1U)
#define MSCM_IRCP5ISR3_PCIE_INT4(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5ISR3_PCIE_INT4_SHIFT)) & MSCM_IRCP5ISR3_PCIE_INT4_MASK)
#define MSCM_IRCP5ISR3_PCIE_INT5_MASK            (0x20U)
#define MSCM_IRCP5ISR3_PCIE_INT5_SHIFT           (5U)
#define MSCM_IRCP5ISR3_PCIE_INT5_WIDTH           (1U)
#define MSCM_IRCP5ISR3_PCIE_INT5(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5ISR3_PCIE_INT5_SHIFT)) & MSCM_IRCP5ISR3_PCIE_INT5_MASK)
#define MSCM_IRCP5ISR3_PCIE_INT6_MASK            (0x40U)
#define MSCM_IRCP5ISR3_PCIE_INT6_SHIFT           (6U)
#define MSCM_IRCP5ISR3_PCIE_INT6_WIDTH           (1U)
#define MSCM_IRCP5ISR3_PCIE_INT6(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5ISR3_PCIE_INT6_SHIFT)) & MSCM_IRCP5ISR3_PCIE_INT6_MASK)
#define MSCM_IRCP5ISR3_PCIE_INT7_MASK            (0x80U)
#define MSCM_IRCP5ISR3_PCIE_INT7_SHIFT           (7U)
#define MSCM_IRCP5ISR3_PCIE_INT7_WIDTH           (1U)
#define MSCM_IRCP5ISR3_PCIE_INT7(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5ISR3_PCIE_INT7_SHIFT)) & MSCM_IRCP5ISR3_PCIE_INT7_MASK)
#define MSCM_IRCP5ISR3_PCIE_INT8_MASK            (0x100U)
#define MSCM_IRCP5ISR3_PCIE_INT8_SHIFT           (8U)
#define MSCM_IRCP5ISR3_PCIE_INT8_WIDTH           (1U)
#define MSCM_IRCP5ISR3_PCIE_INT8(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5ISR3_PCIE_INT8_SHIFT)) & MSCM_IRCP5ISR3_PCIE_INT8_MASK)
#define MSCM_IRCP5ISR3_PCIE_INT9_MASK            (0x200U)
#define MSCM_IRCP5ISR3_PCIE_INT9_SHIFT           (9U)
#define MSCM_IRCP5ISR3_PCIE_INT9_WIDTH           (1U)
#define MSCM_IRCP5ISR3_PCIE_INT9(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5ISR3_PCIE_INT9_SHIFT)) & MSCM_IRCP5ISR3_PCIE_INT9_MASK)
#define MSCM_IRCP5ISR3_PCIE_INT10_MASK           (0x400U)
#define MSCM_IRCP5ISR3_PCIE_INT10_SHIFT          (10U)
#define MSCM_IRCP5ISR3_PCIE_INT10_WIDTH          (1U)
#define MSCM_IRCP5ISR3_PCIE_INT10(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5ISR3_PCIE_INT10_SHIFT)) & MSCM_IRCP5ISR3_PCIE_INT10_MASK)
#define MSCM_IRCP5ISR3_PCIE_INT11_MASK           (0x800U)
#define MSCM_IRCP5ISR3_PCIE_INT11_SHIFT          (11U)
#define MSCM_IRCP5ISR3_PCIE_INT11_WIDTH          (1U)
#define MSCM_IRCP5ISR3_PCIE_INT11(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5ISR3_PCIE_INT11_SHIFT)) & MSCM_IRCP5ISR3_PCIE_INT11_MASK)
#define MSCM_IRCP5ISR3_PCIE_INT12_MASK           (0x1000U)
#define MSCM_IRCP5ISR3_PCIE_INT12_SHIFT          (12U)
#define MSCM_IRCP5ISR3_PCIE_INT12_WIDTH          (1U)
#define MSCM_IRCP5ISR3_PCIE_INT12(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5ISR3_PCIE_INT12_SHIFT)) & MSCM_IRCP5ISR3_PCIE_INT12_MASK)
#define MSCM_IRCP5ISR3_PCIE_INT13_MASK           (0x2000U)
#define MSCM_IRCP5ISR3_PCIE_INT13_SHIFT          (13U)
#define MSCM_IRCP5ISR3_PCIE_INT13_WIDTH          (1U)
#define MSCM_IRCP5ISR3_PCIE_INT13(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5ISR3_PCIE_INT13_SHIFT)) & MSCM_IRCP5ISR3_PCIE_INT13_MASK)
#define MSCM_IRCP5ISR3_PCIE_INT14_MASK           (0x4000U)
#define MSCM_IRCP5ISR3_PCIE_INT14_SHIFT          (14U)
#define MSCM_IRCP5ISR3_PCIE_INT14_WIDTH          (1U)
#define MSCM_IRCP5ISR3_PCIE_INT14(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5ISR3_PCIE_INT14_SHIFT)) & MSCM_IRCP5ISR3_PCIE_INT14_MASK)
#define MSCM_IRCP5ISR3_PCIE_INT15_MASK           (0x8000U)
#define MSCM_IRCP5ISR3_PCIE_INT15_SHIFT          (15U)
#define MSCM_IRCP5ISR3_PCIE_INT15_WIDTH          (1U)
#define MSCM_IRCP5ISR3_PCIE_INT15(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5ISR3_PCIE_INT15_SHIFT)) & MSCM_IRCP5ISR3_PCIE_INT15_MASK)
/*! @} */

/*! @name IRCP5IGR3 - Interrupt Router CPn Interruptx Generation Register */
/*! @{ */
#define MSCM_IRCP5IGR3_INT0_EN_MASK              (0x1U)
#define MSCM_IRCP5IGR3_INT0_EN_SHIFT             (0U)
#define MSCM_IRCP5IGR3_INT0_EN_WIDTH             (1U)
#define MSCM_IRCP5IGR3_INT0_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5IGR3_INT0_EN_SHIFT)) & MSCM_IRCP5IGR3_INT0_EN_MASK)
#define MSCM_IRCP5IGR3_INT1_EN_MASK              (0x2U)
#define MSCM_IRCP5IGR3_INT1_EN_SHIFT             (1U)
#define MSCM_IRCP5IGR3_INT1_EN_WIDTH             (1U)
#define MSCM_IRCP5IGR3_INT1_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5IGR3_INT1_EN_SHIFT)) & MSCM_IRCP5IGR3_INT1_EN_MASK)
#define MSCM_IRCP5IGR3_INT2_EN_MASK              (0x4U)
#define MSCM_IRCP5IGR3_INT2_EN_SHIFT             (2U)
#define MSCM_IRCP5IGR3_INT2_EN_WIDTH             (1U)
#define MSCM_IRCP5IGR3_INT2_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5IGR3_INT2_EN_SHIFT)) & MSCM_IRCP5IGR3_INT2_EN_MASK)
#define MSCM_IRCP5IGR3_INT3_EN_MASK              (0x8U)
#define MSCM_IRCP5IGR3_INT3_EN_SHIFT             (3U)
#define MSCM_IRCP5IGR3_INT3_EN_WIDTH             (1U)
#define MSCM_IRCP5IGR3_INT3_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5IGR3_INT3_EN_SHIFT)) & MSCM_IRCP5IGR3_INT3_EN_MASK)
#define MSCM_IRCP5IGR3_INT4_EN_MASK              (0x10U)
#define MSCM_IRCP5IGR3_INT4_EN_SHIFT             (4U)
#define MSCM_IRCP5IGR3_INT4_EN_WIDTH             (1U)
#define MSCM_IRCP5IGR3_INT4_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5IGR3_INT4_EN_SHIFT)) & MSCM_IRCP5IGR3_INT4_EN_MASK)
#define MSCM_IRCP5IGR3_INT5_EN_MASK              (0x20U)
#define MSCM_IRCP5IGR3_INT5_EN_SHIFT             (5U)
#define MSCM_IRCP5IGR3_INT5_EN_WIDTH             (1U)
#define MSCM_IRCP5IGR3_INT5_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5IGR3_INT5_EN_SHIFT)) & MSCM_IRCP5IGR3_INT5_EN_MASK)
#define MSCM_IRCP5IGR3_INT6_EN_MASK              (0x40U)
#define MSCM_IRCP5IGR3_INT6_EN_SHIFT             (6U)
#define MSCM_IRCP5IGR3_INT6_EN_WIDTH             (1U)
#define MSCM_IRCP5IGR3_INT6_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5IGR3_INT6_EN_SHIFT)) & MSCM_IRCP5IGR3_INT6_EN_MASK)
#define MSCM_IRCP5IGR3_INT7_EN_MASK              (0x80U)
#define MSCM_IRCP5IGR3_INT7_EN_SHIFT             (7U)
#define MSCM_IRCP5IGR3_INT7_EN_WIDTH             (1U)
#define MSCM_IRCP5IGR3_INT7_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5IGR3_INT7_EN_SHIFT)) & MSCM_IRCP5IGR3_INT7_EN_MASK)
#define MSCM_IRCP5IGR3_INT8_EN_MASK              (0x100U)
#define MSCM_IRCP5IGR3_INT8_EN_SHIFT             (8U)
#define MSCM_IRCP5IGR3_INT8_EN_WIDTH             (1U)
#define MSCM_IRCP5IGR3_INT8_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5IGR3_INT8_EN_SHIFT)) & MSCM_IRCP5IGR3_INT8_EN_MASK)
#define MSCM_IRCP5IGR3_INT9_EN_MASK              (0x200U)
#define MSCM_IRCP5IGR3_INT9_EN_SHIFT             (9U)
#define MSCM_IRCP5IGR3_INT9_EN_WIDTH             (1U)
#define MSCM_IRCP5IGR3_INT9_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5IGR3_INT9_EN_SHIFT)) & MSCM_IRCP5IGR3_INT9_EN_MASK)
#define MSCM_IRCP5IGR3_INT10_EN_MASK             (0x400U)
#define MSCM_IRCP5IGR3_INT10_EN_SHIFT            (10U)
#define MSCM_IRCP5IGR3_INT10_EN_WIDTH            (1U)
#define MSCM_IRCP5IGR3_INT10_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5IGR3_INT10_EN_SHIFT)) & MSCM_IRCP5IGR3_INT10_EN_MASK)
#define MSCM_IRCP5IGR3_INT11_EN_MASK             (0x800U)
#define MSCM_IRCP5IGR3_INT11_EN_SHIFT            (11U)
#define MSCM_IRCP5IGR3_INT11_EN_WIDTH            (1U)
#define MSCM_IRCP5IGR3_INT11_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5IGR3_INT11_EN_SHIFT)) & MSCM_IRCP5IGR3_INT11_EN_MASK)
#define MSCM_IRCP5IGR3_INT12_EN_MASK             (0x1000U)
#define MSCM_IRCP5IGR3_INT12_EN_SHIFT            (12U)
#define MSCM_IRCP5IGR3_INT12_EN_WIDTH            (1U)
#define MSCM_IRCP5IGR3_INT12_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5IGR3_INT12_EN_SHIFT)) & MSCM_IRCP5IGR3_INT12_EN_MASK)
#define MSCM_IRCP5IGR3_INT13_EN_MASK             (0x2000U)
#define MSCM_IRCP5IGR3_INT13_EN_SHIFT            (13U)
#define MSCM_IRCP5IGR3_INT13_EN_WIDTH            (1U)
#define MSCM_IRCP5IGR3_INT13_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5IGR3_INT13_EN_SHIFT)) & MSCM_IRCP5IGR3_INT13_EN_MASK)
#define MSCM_IRCP5IGR3_INT14_EN_MASK             (0x4000U)
#define MSCM_IRCP5IGR3_INT14_EN_SHIFT            (14U)
#define MSCM_IRCP5IGR3_INT14_EN_WIDTH            (1U)
#define MSCM_IRCP5IGR3_INT14_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5IGR3_INT14_EN_SHIFT)) & MSCM_IRCP5IGR3_INT14_EN_MASK)
#define MSCM_IRCP5IGR3_INT15_EN_MASK             (0x8000U)
#define MSCM_IRCP5IGR3_INT15_EN_SHIFT            (15U)
#define MSCM_IRCP5IGR3_INT15_EN_WIDTH            (1U)
#define MSCM_IRCP5IGR3_INT15_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5IGR3_INT15_EN_SHIFT)) & MSCM_IRCP5IGR3_INT15_EN_MASK)
/*! @} */

/*! @name IRCP6ISR0 - Interrupt Router CP6 Interrupt0 Status Register */
/*! @{ */
#define MSCM_IRCP6ISR0_CP0_INT_MASK              (0x1U)
#define MSCM_IRCP6ISR0_CP0_INT_SHIFT             (0U)
#define MSCM_IRCP6ISR0_CP0_INT_WIDTH             (1U)
#define MSCM_IRCP6ISR0_CP0_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6ISR0_CP0_INT_SHIFT)) & MSCM_IRCP6ISR0_CP0_INT_MASK)
#define MSCM_IRCP6ISR0_CP1_INT_MASK              (0x2U)
#define MSCM_IRCP6ISR0_CP1_INT_SHIFT             (1U)
#define MSCM_IRCP6ISR0_CP1_INT_WIDTH             (1U)
#define MSCM_IRCP6ISR0_CP1_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6ISR0_CP1_INT_SHIFT)) & MSCM_IRCP6ISR0_CP1_INT_MASK)
#define MSCM_IRCP6ISR0_CP2_INT_MASK              (0x4U)
#define MSCM_IRCP6ISR0_CP2_INT_SHIFT             (2U)
#define MSCM_IRCP6ISR0_CP2_INT_WIDTH             (1U)
#define MSCM_IRCP6ISR0_CP2_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6ISR0_CP2_INT_SHIFT)) & MSCM_IRCP6ISR0_CP2_INT_MASK)
#define MSCM_IRCP6ISR0_CP3_INT_MASK              (0x8U)
#define MSCM_IRCP6ISR0_CP3_INT_SHIFT             (3U)
#define MSCM_IRCP6ISR0_CP3_INT_WIDTH             (1U)
#define MSCM_IRCP6ISR0_CP3_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6ISR0_CP3_INT_SHIFT)) & MSCM_IRCP6ISR0_CP3_INT_MASK)
#define MSCM_IRCP6ISR0_CP4_INT_MASK              (0x10U)
#define MSCM_IRCP6ISR0_CP4_INT_SHIFT             (4U)
#define MSCM_IRCP6ISR0_CP4_INT_WIDTH             (1U)
#define MSCM_IRCP6ISR0_CP4_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6ISR0_CP4_INT_SHIFT)) & MSCM_IRCP6ISR0_CP4_INT_MASK)
#define MSCM_IRCP6ISR0_CP5_INT_MASK              (0x20U)
#define MSCM_IRCP6ISR0_CP5_INT_SHIFT             (5U)
#define MSCM_IRCP6ISR0_CP5_INT_WIDTH             (1U)
#define MSCM_IRCP6ISR0_CP5_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6ISR0_CP5_INT_SHIFT)) & MSCM_IRCP6ISR0_CP5_INT_MASK)
#define MSCM_IRCP6ISR0_CP6_INT_MASK              (0x40U)
#define MSCM_IRCP6ISR0_CP6_INT_SHIFT             (6U)
#define MSCM_IRCP6ISR0_CP6_INT_WIDTH             (1U)
#define MSCM_IRCP6ISR0_CP6_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6ISR0_CP6_INT_SHIFT)) & MSCM_IRCP6ISR0_CP6_INT_MASK)
/*! @} */

/*! @name IRCP6IGR0 - Interrupt Router CP6 Interrupt0 Generation Register */
/*! @{ */
#define MSCM_IRCP6IGR0_INT_EN_MASK               (0x1U)
#define MSCM_IRCP6IGR0_INT_EN_SHIFT              (0U)
#define MSCM_IRCP6IGR0_INT_EN_WIDTH              (1U)
#define MSCM_IRCP6IGR0_INT_EN(x)                 (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6IGR0_INT_EN_SHIFT)) & MSCM_IRCP6IGR0_INT_EN_MASK)
/*! @} */

/*! @name IRCP6ISR1 - Interrupt Router CP6 Interrupt1 Status Register */
/*! @{ */
#define MSCM_IRCP6ISR1_CP0_INT_MASK              (0x1U)
#define MSCM_IRCP6ISR1_CP0_INT_SHIFT             (0U)
#define MSCM_IRCP6ISR1_CP0_INT_WIDTH             (1U)
#define MSCM_IRCP6ISR1_CP0_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6ISR1_CP0_INT_SHIFT)) & MSCM_IRCP6ISR1_CP0_INT_MASK)
#define MSCM_IRCP6ISR1_CP1_INT_MASK              (0x2U)
#define MSCM_IRCP6ISR1_CP1_INT_SHIFT             (1U)
#define MSCM_IRCP6ISR1_CP1_INT_WIDTH             (1U)
#define MSCM_IRCP6ISR1_CP1_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6ISR1_CP1_INT_SHIFT)) & MSCM_IRCP6ISR1_CP1_INT_MASK)
#define MSCM_IRCP6ISR1_CP2_INT_MASK              (0x4U)
#define MSCM_IRCP6ISR1_CP2_INT_SHIFT             (2U)
#define MSCM_IRCP6ISR1_CP2_INT_WIDTH             (1U)
#define MSCM_IRCP6ISR1_CP2_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6ISR1_CP2_INT_SHIFT)) & MSCM_IRCP6ISR1_CP2_INT_MASK)
#define MSCM_IRCP6ISR1_CP3_INT_MASK              (0x8U)
#define MSCM_IRCP6ISR1_CP3_INT_SHIFT             (3U)
#define MSCM_IRCP6ISR1_CP3_INT_WIDTH             (1U)
#define MSCM_IRCP6ISR1_CP3_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6ISR1_CP3_INT_SHIFT)) & MSCM_IRCP6ISR1_CP3_INT_MASK)
#define MSCM_IRCP6ISR1_CP4_INT_MASK              (0x10U)
#define MSCM_IRCP6ISR1_CP4_INT_SHIFT             (4U)
#define MSCM_IRCP6ISR1_CP4_INT_WIDTH             (1U)
#define MSCM_IRCP6ISR1_CP4_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6ISR1_CP4_INT_SHIFT)) & MSCM_IRCP6ISR1_CP4_INT_MASK)
#define MSCM_IRCP6ISR1_CP5_INT_MASK              (0x20U)
#define MSCM_IRCP6ISR1_CP5_INT_SHIFT             (5U)
#define MSCM_IRCP6ISR1_CP5_INT_WIDTH             (1U)
#define MSCM_IRCP6ISR1_CP5_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6ISR1_CP5_INT_SHIFT)) & MSCM_IRCP6ISR1_CP5_INT_MASK)
#define MSCM_IRCP6ISR1_CP6_INT_MASK              (0x40U)
#define MSCM_IRCP6ISR1_CP6_INT_SHIFT             (6U)
#define MSCM_IRCP6ISR1_CP6_INT_WIDTH             (1U)
#define MSCM_IRCP6ISR1_CP6_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6ISR1_CP6_INT_SHIFT)) & MSCM_IRCP6ISR1_CP6_INT_MASK)
/*! @} */

/*! @name IRCP6IGR1 - Interrupt Router CP6 Interrupt1 Generation Register */
/*! @{ */
#define MSCM_IRCP6IGR1_INT_EN_MASK               (0x1U)
#define MSCM_IRCP6IGR1_INT_EN_SHIFT              (0U)
#define MSCM_IRCP6IGR1_INT_EN_WIDTH              (1U)
#define MSCM_IRCP6IGR1_INT_EN(x)                 (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6IGR1_INT_EN_SHIFT)) & MSCM_IRCP6IGR1_INT_EN_MASK)
/*! @} */

/*! @name IRCP6ISR2 - Interrupt Router CP6 Interrupt2 Status Register */
/*! @{ */
#define MSCM_IRCP6ISR2_CP0_INT_MASK              (0x1U)
#define MSCM_IRCP6ISR2_CP0_INT_SHIFT             (0U)
#define MSCM_IRCP6ISR2_CP0_INT_WIDTH             (1U)
#define MSCM_IRCP6ISR2_CP0_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6ISR2_CP0_INT_SHIFT)) & MSCM_IRCP6ISR2_CP0_INT_MASK)
#define MSCM_IRCP6ISR2_CP1_INT_MASK              (0x2U)
#define MSCM_IRCP6ISR2_CP1_INT_SHIFT             (1U)
#define MSCM_IRCP6ISR2_CP1_INT_WIDTH             (1U)
#define MSCM_IRCP6ISR2_CP1_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6ISR2_CP1_INT_SHIFT)) & MSCM_IRCP6ISR2_CP1_INT_MASK)
#define MSCM_IRCP6ISR2_CP2_INT_MASK              (0x4U)
#define MSCM_IRCP6ISR2_CP2_INT_SHIFT             (2U)
#define MSCM_IRCP6ISR2_CP2_INT_WIDTH             (1U)
#define MSCM_IRCP6ISR2_CP2_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6ISR2_CP2_INT_SHIFT)) & MSCM_IRCP6ISR2_CP2_INT_MASK)
#define MSCM_IRCP6ISR2_CP3_INT_MASK              (0x8U)
#define MSCM_IRCP6ISR2_CP3_INT_SHIFT             (3U)
#define MSCM_IRCP6ISR2_CP3_INT_WIDTH             (1U)
#define MSCM_IRCP6ISR2_CP3_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6ISR2_CP3_INT_SHIFT)) & MSCM_IRCP6ISR2_CP3_INT_MASK)
#define MSCM_IRCP6ISR2_CP4_INT_MASK              (0x10U)
#define MSCM_IRCP6ISR2_CP4_INT_SHIFT             (4U)
#define MSCM_IRCP6ISR2_CP4_INT_WIDTH             (1U)
#define MSCM_IRCP6ISR2_CP4_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6ISR2_CP4_INT_SHIFT)) & MSCM_IRCP6ISR2_CP4_INT_MASK)
#define MSCM_IRCP6ISR2_CP5_INT_MASK              (0x20U)
#define MSCM_IRCP6ISR2_CP5_INT_SHIFT             (5U)
#define MSCM_IRCP6ISR2_CP5_INT_WIDTH             (1U)
#define MSCM_IRCP6ISR2_CP5_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6ISR2_CP5_INT_SHIFT)) & MSCM_IRCP6ISR2_CP5_INT_MASK)
#define MSCM_IRCP6ISR2_CP6_INT_MASK              (0x40U)
#define MSCM_IRCP6ISR2_CP6_INT_SHIFT             (6U)
#define MSCM_IRCP6ISR2_CP6_INT_WIDTH             (1U)
#define MSCM_IRCP6ISR2_CP6_INT(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6ISR2_CP6_INT_SHIFT)) & MSCM_IRCP6ISR2_CP6_INT_MASK)
/*! @} */

/*! @name IRCP6IGR2 - Interrupt Router CP6 Interrupt2 Generation Register */
/*! @{ */
#define MSCM_IRCP6IGR2_INT_EN_MASK               (0x1U)
#define MSCM_IRCP6IGR2_INT_EN_SHIFT              (0U)
#define MSCM_IRCP6IGR2_INT_EN_WIDTH              (1U)
#define MSCM_IRCP6IGR2_INT_EN(x)                 (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6IGR2_INT_EN_SHIFT)) & MSCM_IRCP6IGR2_INT_EN_MASK)
/*! @} */

/*! @name IRCP6ISR3 - Interrupt Router CPn Interruptx Status Register */
/*! @{ */
#define MSCM_IRCP6ISR3_PCIE_INT0_MASK            (0x1U)
#define MSCM_IRCP6ISR3_PCIE_INT0_SHIFT           (0U)
#define MSCM_IRCP6ISR3_PCIE_INT0_WIDTH           (1U)
#define MSCM_IRCP6ISR3_PCIE_INT0(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6ISR3_PCIE_INT0_SHIFT)) & MSCM_IRCP6ISR3_PCIE_INT0_MASK)
#define MSCM_IRCP6ISR3_PCIE_INT1_MASK            (0x2U)
#define MSCM_IRCP6ISR3_PCIE_INT1_SHIFT           (1U)
#define MSCM_IRCP6ISR3_PCIE_INT1_WIDTH           (1U)
#define MSCM_IRCP6ISR3_PCIE_INT1(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6ISR3_PCIE_INT1_SHIFT)) & MSCM_IRCP6ISR3_PCIE_INT1_MASK)
#define MSCM_IRCP6ISR3_PCIE_INT2_MASK            (0x4U)
#define MSCM_IRCP6ISR3_PCIE_INT2_SHIFT           (2U)
#define MSCM_IRCP6ISR3_PCIE_INT2_WIDTH           (1U)
#define MSCM_IRCP6ISR3_PCIE_INT2(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6ISR3_PCIE_INT2_SHIFT)) & MSCM_IRCP6ISR3_PCIE_INT2_MASK)
#define MSCM_IRCP6ISR3_PCIE_INT3_MASK            (0x8U)
#define MSCM_IRCP6ISR3_PCIE_INT3_SHIFT           (3U)
#define MSCM_IRCP6ISR3_PCIE_INT3_WIDTH           (1U)
#define MSCM_IRCP6ISR3_PCIE_INT3(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6ISR3_PCIE_INT3_SHIFT)) & MSCM_IRCP6ISR3_PCIE_INT3_MASK)
#define MSCM_IRCP6ISR3_PCIE_INT4_MASK            (0x10U)
#define MSCM_IRCP6ISR3_PCIE_INT4_SHIFT           (4U)
#define MSCM_IRCP6ISR3_PCIE_INT4_WIDTH           (1U)
#define MSCM_IRCP6ISR3_PCIE_INT4(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6ISR3_PCIE_INT4_SHIFT)) & MSCM_IRCP6ISR3_PCIE_INT4_MASK)
#define MSCM_IRCP6ISR3_PCIE_INT5_MASK            (0x20U)
#define MSCM_IRCP6ISR3_PCIE_INT5_SHIFT           (5U)
#define MSCM_IRCP6ISR3_PCIE_INT5_WIDTH           (1U)
#define MSCM_IRCP6ISR3_PCIE_INT5(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6ISR3_PCIE_INT5_SHIFT)) & MSCM_IRCP6ISR3_PCIE_INT5_MASK)
#define MSCM_IRCP6ISR3_PCIE_INT6_MASK            (0x40U)
#define MSCM_IRCP6ISR3_PCIE_INT6_SHIFT           (6U)
#define MSCM_IRCP6ISR3_PCIE_INT6_WIDTH           (1U)
#define MSCM_IRCP6ISR3_PCIE_INT6(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6ISR3_PCIE_INT6_SHIFT)) & MSCM_IRCP6ISR3_PCIE_INT6_MASK)
#define MSCM_IRCP6ISR3_PCIE_INT7_MASK            (0x80U)
#define MSCM_IRCP6ISR3_PCIE_INT7_SHIFT           (7U)
#define MSCM_IRCP6ISR3_PCIE_INT7_WIDTH           (1U)
#define MSCM_IRCP6ISR3_PCIE_INT7(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6ISR3_PCIE_INT7_SHIFT)) & MSCM_IRCP6ISR3_PCIE_INT7_MASK)
#define MSCM_IRCP6ISR3_PCIE_INT8_MASK            (0x100U)
#define MSCM_IRCP6ISR3_PCIE_INT8_SHIFT           (8U)
#define MSCM_IRCP6ISR3_PCIE_INT8_WIDTH           (1U)
#define MSCM_IRCP6ISR3_PCIE_INT8(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6ISR3_PCIE_INT8_SHIFT)) & MSCM_IRCP6ISR3_PCIE_INT8_MASK)
#define MSCM_IRCP6ISR3_PCIE_INT9_MASK            (0x200U)
#define MSCM_IRCP6ISR3_PCIE_INT9_SHIFT           (9U)
#define MSCM_IRCP6ISR3_PCIE_INT9_WIDTH           (1U)
#define MSCM_IRCP6ISR3_PCIE_INT9(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6ISR3_PCIE_INT9_SHIFT)) & MSCM_IRCP6ISR3_PCIE_INT9_MASK)
#define MSCM_IRCP6ISR3_PCIE_INT10_MASK           (0x400U)
#define MSCM_IRCP6ISR3_PCIE_INT10_SHIFT          (10U)
#define MSCM_IRCP6ISR3_PCIE_INT10_WIDTH          (1U)
#define MSCM_IRCP6ISR3_PCIE_INT10(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6ISR3_PCIE_INT10_SHIFT)) & MSCM_IRCP6ISR3_PCIE_INT10_MASK)
#define MSCM_IRCP6ISR3_PCIE_INT11_MASK           (0x800U)
#define MSCM_IRCP6ISR3_PCIE_INT11_SHIFT          (11U)
#define MSCM_IRCP6ISR3_PCIE_INT11_WIDTH          (1U)
#define MSCM_IRCP6ISR3_PCIE_INT11(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6ISR3_PCIE_INT11_SHIFT)) & MSCM_IRCP6ISR3_PCIE_INT11_MASK)
#define MSCM_IRCP6ISR3_PCIE_INT12_MASK           (0x1000U)
#define MSCM_IRCP6ISR3_PCIE_INT12_SHIFT          (12U)
#define MSCM_IRCP6ISR3_PCIE_INT12_WIDTH          (1U)
#define MSCM_IRCP6ISR3_PCIE_INT12(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6ISR3_PCIE_INT12_SHIFT)) & MSCM_IRCP6ISR3_PCIE_INT12_MASK)
#define MSCM_IRCP6ISR3_PCIE_INT13_MASK           (0x2000U)
#define MSCM_IRCP6ISR3_PCIE_INT13_SHIFT          (13U)
#define MSCM_IRCP6ISR3_PCIE_INT13_WIDTH          (1U)
#define MSCM_IRCP6ISR3_PCIE_INT13(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6ISR3_PCIE_INT13_SHIFT)) & MSCM_IRCP6ISR3_PCIE_INT13_MASK)
#define MSCM_IRCP6ISR3_PCIE_INT14_MASK           (0x4000U)
#define MSCM_IRCP6ISR3_PCIE_INT14_SHIFT          (14U)
#define MSCM_IRCP6ISR3_PCIE_INT14_WIDTH          (1U)
#define MSCM_IRCP6ISR3_PCIE_INT14(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6ISR3_PCIE_INT14_SHIFT)) & MSCM_IRCP6ISR3_PCIE_INT14_MASK)
#define MSCM_IRCP6ISR3_PCIE_INT15_MASK           (0x8000U)
#define MSCM_IRCP6ISR3_PCIE_INT15_SHIFT          (15U)
#define MSCM_IRCP6ISR3_PCIE_INT15_WIDTH          (1U)
#define MSCM_IRCP6ISR3_PCIE_INT15(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6ISR3_PCIE_INT15_SHIFT)) & MSCM_IRCP6ISR3_PCIE_INT15_MASK)
/*! @} */

/*! @name IRCP6IGR3 - Interrupt Router CPn Interruptx Generation Register */
/*! @{ */
#define MSCM_IRCP6IGR3_INT0_EN_MASK              (0x1U)
#define MSCM_IRCP6IGR3_INT0_EN_SHIFT             (0U)
#define MSCM_IRCP6IGR3_INT0_EN_WIDTH             (1U)
#define MSCM_IRCP6IGR3_INT0_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6IGR3_INT0_EN_SHIFT)) & MSCM_IRCP6IGR3_INT0_EN_MASK)
#define MSCM_IRCP6IGR3_INT1_EN_MASK              (0x2U)
#define MSCM_IRCP6IGR3_INT1_EN_SHIFT             (1U)
#define MSCM_IRCP6IGR3_INT1_EN_WIDTH             (1U)
#define MSCM_IRCP6IGR3_INT1_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6IGR3_INT1_EN_SHIFT)) & MSCM_IRCP6IGR3_INT1_EN_MASK)
#define MSCM_IRCP6IGR3_INT2_EN_MASK              (0x4U)
#define MSCM_IRCP6IGR3_INT2_EN_SHIFT             (2U)
#define MSCM_IRCP6IGR3_INT2_EN_WIDTH             (1U)
#define MSCM_IRCP6IGR3_INT2_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6IGR3_INT2_EN_SHIFT)) & MSCM_IRCP6IGR3_INT2_EN_MASK)
#define MSCM_IRCP6IGR3_INT3_EN_MASK              (0x8U)
#define MSCM_IRCP6IGR3_INT3_EN_SHIFT             (3U)
#define MSCM_IRCP6IGR3_INT3_EN_WIDTH             (1U)
#define MSCM_IRCP6IGR3_INT3_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6IGR3_INT3_EN_SHIFT)) & MSCM_IRCP6IGR3_INT3_EN_MASK)
#define MSCM_IRCP6IGR3_INT4_EN_MASK              (0x10U)
#define MSCM_IRCP6IGR3_INT4_EN_SHIFT             (4U)
#define MSCM_IRCP6IGR3_INT4_EN_WIDTH             (1U)
#define MSCM_IRCP6IGR3_INT4_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6IGR3_INT4_EN_SHIFT)) & MSCM_IRCP6IGR3_INT4_EN_MASK)
#define MSCM_IRCP6IGR3_INT5_EN_MASK              (0x20U)
#define MSCM_IRCP6IGR3_INT5_EN_SHIFT             (5U)
#define MSCM_IRCP6IGR3_INT5_EN_WIDTH             (1U)
#define MSCM_IRCP6IGR3_INT5_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6IGR3_INT5_EN_SHIFT)) & MSCM_IRCP6IGR3_INT5_EN_MASK)
#define MSCM_IRCP6IGR3_INT6_EN_MASK              (0x40U)
#define MSCM_IRCP6IGR3_INT6_EN_SHIFT             (6U)
#define MSCM_IRCP6IGR3_INT6_EN_WIDTH             (1U)
#define MSCM_IRCP6IGR3_INT6_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6IGR3_INT6_EN_SHIFT)) & MSCM_IRCP6IGR3_INT6_EN_MASK)
#define MSCM_IRCP6IGR3_INT7_EN_MASK              (0x80U)
#define MSCM_IRCP6IGR3_INT7_EN_SHIFT             (7U)
#define MSCM_IRCP6IGR3_INT7_EN_WIDTH             (1U)
#define MSCM_IRCP6IGR3_INT7_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6IGR3_INT7_EN_SHIFT)) & MSCM_IRCP6IGR3_INT7_EN_MASK)
#define MSCM_IRCP6IGR3_INT8_EN_MASK              (0x100U)
#define MSCM_IRCP6IGR3_INT8_EN_SHIFT             (8U)
#define MSCM_IRCP6IGR3_INT8_EN_WIDTH             (1U)
#define MSCM_IRCP6IGR3_INT8_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6IGR3_INT8_EN_SHIFT)) & MSCM_IRCP6IGR3_INT8_EN_MASK)
#define MSCM_IRCP6IGR3_INT9_EN_MASK              (0x200U)
#define MSCM_IRCP6IGR3_INT9_EN_SHIFT             (9U)
#define MSCM_IRCP6IGR3_INT9_EN_WIDTH             (1U)
#define MSCM_IRCP6IGR3_INT9_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6IGR3_INT9_EN_SHIFT)) & MSCM_IRCP6IGR3_INT9_EN_MASK)
#define MSCM_IRCP6IGR3_INT10_EN_MASK             (0x400U)
#define MSCM_IRCP6IGR3_INT10_EN_SHIFT            (10U)
#define MSCM_IRCP6IGR3_INT10_EN_WIDTH            (1U)
#define MSCM_IRCP6IGR3_INT10_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6IGR3_INT10_EN_SHIFT)) & MSCM_IRCP6IGR3_INT10_EN_MASK)
#define MSCM_IRCP6IGR3_INT11_EN_MASK             (0x800U)
#define MSCM_IRCP6IGR3_INT11_EN_SHIFT            (11U)
#define MSCM_IRCP6IGR3_INT11_EN_WIDTH            (1U)
#define MSCM_IRCP6IGR3_INT11_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6IGR3_INT11_EN_SHIFT)) & MSCM_IRCP6IGR3_INT11_EN_MASK)
#define MSCM_IRCP6IGR3_INT12_EN_MASK             (0x1000U)
#define MSCM_IRCP6IGR3_INT12_EN_SHIFT            (12U)
#define MSCM_IRCP6IGR3_INT12_EN_WIDTH            (1U)
#define MSCM_IRCP6IGR3_INT12_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6IGR3_INT12_EN_SHIFT)) & MSCM_IRCP6IGR3_INT12_EN_MASK)
#define MSCM_IRCP6IGR3_INT13_EN_MASK             (0x2000U)
#define MSCM_IRCP6IGR3_INT13_EN_SHIFT            (13U)
#define MSCM_IRCP6IGR3_INT13_EN_WIDTH            (1U)
#define MSCM_IRCP6IGR3_INT13_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6IGR3_INT13_EN_SHIFT)) & MSCM_IRCP6IGR3_INT13_EN_MASK)
#define MSCM_IRCP6IGR3_INT14_EN_MASK             (0x4000U)
#define MSCM_IRCP6IGR3_INT14_EN_SHIFT            (14U)
#define MSCM_IRCP6IGR3_INT14_EN_WIDTH            (1U)
#define MSCM_IRCP6IGR3_INT14_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6IGR3_INT14_EN_SHIFT)) & MSCM_IRCP6IGR3_INT14_EN_MASK)
#define MSCM_IRCP6IGR3_INT15_EN_MASK             (0x8000U)
#define MSCM_IRCP6IGR3_INT15_EN_SHIFT            (15U)
#define MSCM_IRCP6IGR3_INT15_EN_WIDTH            (1U)
#define MSCM_IRCP6IGR3_INT15_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6IGR3_INT15_EN_SHIFT)) & MSCM_IRCP6IGR3_INT15_EN_MASK)
/*! @} */

/*! @name IRCP0ISR4 - Interrupt Router CPn Interruptx Status Register */
/*! @{ */
#define MSCM_IRCP0ISR4_PCIE_INT0_MASK            (0x1U)
#define MSCM_IRCP0ISR4_PCIE_INT0_SHIFT           (0U)
#define MSCM_IRCP0ISR4_PCIE_INT0_WIDTH           (1U)
#define MSCM_IRCP0ISR4_PCIE_INT0(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0ISR4_PCIE_INT0_SHIFT)) & MSCM_IRCP0ISR4_PCIE_INT0_MASK)
#define MSCM_IRCP0ISR4_PCIE_INT1_MASK            (0x2U)
#define MSCM_IRCP0ISR4_PCIE_INT1_SHIFT           (1U)
#define MSCM_IRCP0ISR4_PCIE_INT1_WIDTH           (1U)
#define MSCM_IRCP0ISR4_PCIE_INT1(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0ISR4_PCIE_INT1_SHIFT)) & MSCM_IRCP0ISR4_PCIE_INT1_MASK)
#define MSCM_IRCP0ISR4_PCIE_INT2_MASK            (0x4U)
#define MSCM_IRCP0ISR4_PCIE_INT2_SHIFT           (2U)
#define MSCM_IRCP0ISR4_PCIE_INT2_WIDTH           (1U)
#define MSCM_IRCP0ISR4_PCIE_INT2(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0ISR4_PCIE_INT2_SHIFT)) & MSCM_IRCP0ISR4_PCIE_INT2_MASK)
#define MSCM_IRCP0ISR4_PCIE_INT3_MASK            (0x8U)
#define MSCM_IRCP0ISR4_PCIE_INT3_SHIFT           (3U)
#define MSCM_IRCP0ISR4_PCIE_INT3_WIDTH           (1U)
#define MSCM_IRCP0ISR4_PCIE_INT3(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0ISR4_PCIE_INT3_SHIFT)) & MSCM_IRCP0ISR4_PCIE_INT3_MASK)
#define MSCM_IRCP0ISR4_PCIE_INT4_MASK            (0x10U)
#define MSCM_IRCP0ISR4_PCIE_INT4_SHIFT           (4U)
#define MSCM_IRCP0ISR4_PCIE_INT4_WIDTH           (1U)
#define MSCM_IRCP0ISR4_PCIE_INT4(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0ISR4_PCIE_INT4_SHIFT)) & MSCM_IRCP0ISR4_PCIE_INT4_MASK)
#define MSCM_IRCP0ISR4_PCIE_INT5_MASK            (0x20U)
#define MSCM_IRCP0ISR4_PCIE_INT5_SHIFT           (5U)
#define MSCM_IRCP0ISR4_PCIE_INT5_WIDTH           (1U)
#define MSCM_IRCP0ISR4_PCIE_INT5(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0ISR4_PCIE_INT5_SHIFT)) & MSCM_IRCP0ISR4_PCIE_INT5_MASK)
#define MSCM_IRCP0ISR4_PCIE_INT6_MASK            (0x40U)
#define MSCM_IRCP0ISR4_PCIE_INT6_SHIFT           (6U)
#define MSCM_IRCP0ISR4_PCIE_INT6_WIDTH           (1U)
#define MSCM_IRCP0ISR4_PCIE_INT6(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0ISR4_PCIE_INT6_SHIFT)) & MSCM_IRCP0ISR4_PCIE_INT6_MASK)
#define MSCM_IRCP0ISR4_PCIE_INT7_MASK            (0x80U)
#define MSCM_IRCP0ISR4_PCIE_INT7_SHIFT           (7U)
#define MSCM_IRCP0ISR4_PCIE_INT7_WIDTH           (1U)
#define MSCM_IRCP0ISR4_PCIE_INT7(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0ISR4_PCIE_INT7_SHIFT)) & MSCM_IRCP0ISR4_PCIE_INT7_MASK)
#define MSCM_IRCP0ISR4_PCIE_INT8_MASK            (0x100U)
#define MSCM_IRCP0ISR4_PCIE_INT8_SHIFT           (8U)
#define MSCM_IRCP0ISR4_PCIE_INT8_WIDTH           (1U)
#define MSCM_IRCP0ISR4_PCIE_INT8(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0ISR4_PCIE_INT8_SHIFT)) & MSCM_IRCP0ISR4_PCIE_INT8_MASK)
#define MSCM_IRCP0ISR4_PCIE_INT9_MASK            (0x200U)
#define MSCM_IRCP0ISR4_PCIE_INT9_SHIFT           (9U)
#define MSCM_IRCP0ISR4_PCIE_INT9_WIDTH           (1U)
#define MSCM_IRCP0ISR4_PCIE_INT9(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0ISR4_PCIE_INT9_SHIFT)) & MSCM_IRCP0ISR4_PCIE_INT9_MASK)
#define MSCM_IRCP0ISR4_PCIE_INT10_MASK           (0x400U)
#define MSCM_IRCP0ISR4_PCIE_INT10_SHIFT          (10U)
#define MSCM_IRCP0ISR4_PCIE_INT10_WIDTH          (1U)
#define MSCM_IRCP0ISR4_PCIE_INT10(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0ISR4_PCIE_INT10_SHIFT)) & MSCM_IRCP0ISR4_PCIE_INT10_MASK)
#define MSCM_IRCP0ISR4_PCIE_INT11_MASK           (0x800U)
#define MSCM_IRCP0ISR4_PCIE_INT11_SHIFT          (11U)
#define MSCM_IRCP0ISR4_PCIE_INT11_WIDTH          (1U)
#define MSCM_IRCP0ISR4_PCIE_INT11(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0ISR4_PCIE_INT11_SHIFT)) & MSCM_IRCP0ISR4_PCIE_INT11_MASK)
#define MSCM_IRCP0ISR4_PCIE_INT12_MASK           (0x1000U)
#define MSCM_IRCP0ISR4_PCIE_INT12_SHIFT          (12U)
#define MSCM_IRCP0ISR4_PCIE_INT12_WIDTH          (1U)
#define MSCM_IRCP0ISR4_PCIE_INT12(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0ISR4_PCIE_INT12_SHIFT)) & MSCM_IRCP0ISR4_PCIE_INT12_MASK)
#define MSCM_IRCP0ISR4_PCIE_INT13_MASK           (0x2000U)
#define MSCM_IRCP0ISR4_PCIE_INT13_SHIFT          (13U)
#define MSCM_IRCP0ISR4_PCIE_INT13_WIDTH          (1U)
#define MSCM_IRCP0ISR4_PCIE_INT13(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0ISR4_PCIE_INT13_SHIFT)) & MSCM_IRCP0ISR4_PCIE_INT13_MASK)
#define MSCM_IRCP0ISR4_PCIE_INT14_MASK           (0x4000U)
#define MSCM_IRCP0ISR4_PCIE_INT14_SHIFT          (14U)
#define MSCM_IRCP0ISR4_PCIE_INT14_WIDTH          (1U)
#define MSCM_IRCP0ISR4_PCIE_INT14(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0ISR4_PCIE_INT14_SHIFT)) & MSCM_IRCP0ISR4_PCIE_INT14_MASK)
#define MSCM_IRCP0ISR4_PCIE_INT15_MASK           (0x8000U)
#define MSCM_IRCP0ISR4_PCIE_INT15_SHIFT          (15U)
#define MSCM_IRCP0ISR4_PCIE_INT15_WIDTH          (1U)
#define MSCM_IRCP0ISR4_PCIE_INT15(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0ISR4_PCIE_INT15_SHIFT)) & MSCM_IRCP0ISR4_PCIE_INT15_MASK)
/*! @} */

/*! @name IRCP0IGR4 - Interrupt Router CPn Interruptx Generation Register */
/*! @{ */
#define MSCM_IRCP0IGR4_INT0_EN_MASK              (0x1U)
#define MSCM_IRCP0IGR4_INT0_EN_SHIFT             (0U)
#define MSCM_IRCP0IGR4_INT0_EN_WIDTH             (1U)
#define MSCM_IRCP0IGR4_INT0_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0IGR4_INT0_EN_SHIFT)) & MSCM_IRCP0IGR4_INT0_EN_MASK)
#define MSCM_IRCP0IGR4_INT1_EN_MASK              (0x2U)
#define MSCM_IRCP0IGR4_INT1_EN_SHIFT             (1U)
#define MSCM_IRCP0IGR4_INT1_EN_WIDTH             (1U)
#define MSCM_IRCP0IGR4_INT1_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0IGR4_INT1_EN_SHIFT)) & MSCM_IRCP0IGR4_INT1_EN_MASK)
#define MSCM_IRCP0IGR4_INT2_EN_MASK              (0x4U)
#define MSCM_IRCP0IGR4_INT2_EN_SHIFT             (2U)
#define MSCM_IRCP0IGR4_INT2_EN_WIDTH             (1U)
#define MSCM_IRCP0IGR4_INT2_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0IGR4_INT2_EN_SHIFT)) & MSCM_IRCP0IGR4_INT2_EN_MASK)
#define MSCM_IRCP0IGR4_INT3_EN_MASK              (0x8U)
#define MSCM_IRCP0IGR4_INT3_EN_SHIFT             (3U)
#define MSCM_IRCP0IGR4_INT3_EN_WIDTH             (1U)
#define MSCM_IRCP0IGR4_INT3_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0IGR4_INT3_EN_SHIFT)) & MSCM_IRCP0IGR4_INT3_EN_MASK)
#define MSCM_IRCP0IGR4_INT4_EN_MASK              (0x10U)
#define MSCM_IRCP0IGR4_INT4_EN_SHIFT             (4U)
#define MSCM_IRCP0IGR4_INT4_EN_WIDTH             (1U)
#define MSCM_IRCP0IGR4_INT4_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0IGR4_INT4_EN_SHIFT)) & MSCM_IRCP0IGR4_INT4_EN_MASK)
#define MSCM_IRCP0IGR4_INT5_EN_MASK              (0x20U)
#define MSCM_IRCP0IGR4_INT5_EN_SHIFT             (5U)
#define MSCM_IRCP0IGR4_INT5_EN_WIDTH             (1U)
#define MSCM_IRCP0IGR4_INT5_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0IGR4_INT5_EN_SHIFT)) & MSCM_IRCP0IGR4_INT5_EN_MASK)
#define MSCM_IRCP0IGR4_INT6_EN_MASK              (0x40U)
#define MSCM_IRCP0IGR4_INT6_EN_SHIFT             (6U)
#define MSCM_IRCP0IGR4_INT6_EN_WIDTH             (1U)
#define MSCM_IRCP0IGR4_INT6_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0IGR4_INT6_EN_SHIFT)) & MSCM_IRCP0IGR4_INT6_EN_MASK)
#define MSCM_IRCP0IGR4_INT7_EN_MASK              (0x80U)
#define MSCM_IRCP0IGR4_INT7_EN_SHIFT             (7U)
#define MSCM_IRCP0IGR4_INT7_EN_WIDTH             (1U)
#define MSCM_IRCP0IGR4_INT7_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0IGR4_INT7_EN_SHIFT)) & MSCM_IRCP0IGR4_INT7_EN_MASK)
#define MSCM_IRCP0IGR4_INT8_EN_MASK              (0x100U)
#define MSCM_IRCP0IGR4_INT8_EN_SHIFT             (8U)
#define MSCM_IRCP0IGR4_INT8_EN_WIDTH             (1U)
#define MSCM_IRCP0IGR4_INT8_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0IGR4_INT8_EN_SHIFT)) & MSCM_IRCP0IGR4_INT8_EN_MASK)
#define MSCM_IRCP0IGR4_INT9_EN_MASK              (0x200U)
#define MSCM_IRCP0IGR4_INT9_EN_SHIFT             (9U)
#define MSCM_IRCP0IGR4_INT9_EN_WIDTH             (1U)
#define MSCM_IRCP0IGR4_INT9_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0IGR4_INT9_EN_SHIFT)) & MSCM_IRCP0IGR4_INT9_EN_MASK)
#define MSCM_IRCP0IGR4_INT10_EN_MASK             (0x400U)
#define MSCM_IRCP0IGR4_INT10_EN_SHIFT            (10U)
#define MSCM_IRCP0IGR4_INT10_EN_WIDTH            (1U)
#define MSCM_IRCP0IGR4_INT10_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0IGR4_INT10_EN_SHIFT)) & MSCM_IRCP0IGR4_INT10_EN_MASK)
#define MSCM_IRCP0IGR4_INT11_EN_MASK             (0x800U)
#define MSCM_IRCP0IGR4_INT11_EN_SHIFT            (11U)
#define MSCM_IRCP0IGR4_INT11_EN_WIDTH            (1U)
#define MSCM_IRCP0IGR4_INT11_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0IGR4_INT11_EN_SHIFT)) & MSCM_IRCP0IGR4_INT11_EN_MASK)
#define MSCM_IRCP0IGR4_INT12_EN_MASK             (0x1000U)
#define MSCM_IRCP0IGR4_INT12_EN_SHIFT            (12U)
#define MSCM_IRCP0IGR4_INT12_EN_WIDTH            (1U)
#define MSCM_IRCP0IGR4_INT12_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0IGR4_INT12_EN_SHIFT)) & MSCM_IRCP0IGR4_INT12_EN_MASK)
#define MSCM_IRCP0IGR4_INT13_EN_MASK             (0x2000U)
#define MSCM_IRCP0IGR4_INT13_EN_SHIFT            (13U)
#define MSCM_IRCP0IGR4_INT13_EN_WIDTH            (1U)
#define MSCM_IRCP0IGR4_INT13_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0IGR4_INT13_EN_SHIFT)) & MSCM_IRCP0IGR4_INT13_EN_MASK)
#define MSCM_IRCP0IGR4_INT14_EN_MASK             (0x4000U)
#define MSCM_IRCP0IGR4_INT14_EN_SHIFT            (14U)
#define MSCM_IRCP0IGR4_INT14_EN_WIDTH            (1U)
#define MSCM_IRCP0IGR4_INT14_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0IGR4_INT14_EN_SHIFT)) & MSCM_IRCP0IGR4_INT14_EN_MASK)
#define MSCM_IRCP0IGR4_INT15_EN_MASK             (0x8000U)
#define MSCM_IRCP0IGR4_INT15_EN_SHIFT            (15U)
#define MSCM_IRCP0IGR4_INT15_EN_WIDTH            (1U)
#define MSCM_IRCP0IGR4_INT15_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP0IGR4_INT15_EN_SHIFT)) & MSCM_IRCP0IGR4_INT15_EN_MASK)
/*! @} */

/*! @name IRCP1ISR4 - Interrupt Router CPn Interruptx Status Register */
/*! @{ */
#define MSCM_IRCP1ISR4_PCIE_INT0_MASK            (0x1U)
#define MSCM_IRCP1ISR4_PCIE_INT0_SHIFT           (0U)
#define MSCM_IRCP1ISR4_PCIE_INT0_WIDTH           (1U)
#define MSCM_IRCP1ISR4_PCIE_INT0(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1ISR4_PCIE_INT0_SHIFT)) & MSCM_IRCP1ISR4_PCIE_INT0_MASK)
#define MSCM_IRCP1ISR4_PCIE_INT1_MASK            (0x2U)
#define MSCM_IRCP1ISR4_PCIE_INT1_SHIFT           (1U)
#define MSCM_IRCP1ISR4_PCIE_INT1_WIDTH           (1U)
#define MSCM_IRCP1ISR4_PCIE_INT1(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1ISR4_PCIE_INT1_SHIFT)) & MSCM_IRCP1ISR4_PCIE_INT1_MASK)
#define MSCM_IRCP1ISR4_PCIE_INT2_MASK            (0x4U)
#define MSCM_IRCP1ISR4_PCIE_INT2_SHIFT           (2U)
#define MSCM_IRCP1ISR4_PCIE_INT2_WIDTH           (1U)
#define MSCM_IRCP1ISR4_PCIE_INT2(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1ISR4_PCIE_INT2_SHIFT)) & MSCM_IRCP1ISR4_PCIE_INT2_MASK)
#define MSCM_IRCP1ISR4_PCIE_INT3_MASK            (0x8U)
#define MSCM_IRCP1ISR4_PCIE_INT3_SHIFT           (3U)
#define MSCM_IRCP1ISR4_PCIE_INT3_WIDTH           (1U)
#define MSCM_IRCP1ISR4_PCIE_INT3(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1ISR4_PCIE_INT3_SHIFT)) & MSCM_IRCP1ISR4_PCIE_INT3_MASK)
#define MSCM_IRCP1ISR4_PCIE_INT4_MASK            (0x10U)
#define MSCM_IRCP1ISR4_PCIE_INT4_SHIFT           (4U)
#define MSCM_IRCP1ISR4_PCIE_INT4_WIDTH           (1U)
#define MSCM_IRCP1ISR4_PCIE_INT4(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1ISR4_PCIE_INT4_SHIFT)) & MSCM_IRCP1ISR4_PCIE_INT4_MASK)
#define MSCM_IRCP1ISR4_PCIE_INT5_MASK            (0x20U)
#define MSCM_IRCP1ISR4_PCIE_INT5_SHIFT           (5U)
#define MSCM_IRCP1ISR4_PCIE_INT5_WIDTH           (1U)
#define MSCM_IRCP1ISR4_PCIE_INT5(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1ISR4_PCIE_INT5_SHIFT)) & MSCM_IRCP1ISR4_PCIE_INT5_MASK)
#define MSCM_IRCP1ISR4_PCIE_INT6_MASK            (0x40U)
#define MSCM_IRCP1ISR4_PCIE_INT6_SHIFT           (6U)
#define MSCM_IRCP1ISR4_PCIE_INT6_WIDTH           (1U)
#define MSCM_IRCP1ISR4_PCIE_INT6(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1ISR4_PCIE_INT6_SHIFT)) & MSCM_IRCP1ISR4_PCIE_INT6_MASK)
#define MSCM_IRCP1ISR4_PCIE_INT7_MASK            (0x80U)
#define MSCM_IRCP1ISR4_PCIE_INT7_SHIFT           (7U)
#define MSCM_IRCP1ISR4_PCIE_INT7_WIDTH           (1U)
#define MSCM_IRCP1ISR4_PCIE_INT7(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1ISR4_PCIE_INT7_SHIFT)) & MSCM_IRCP1ISR4_PCIE_INT7_MASK)
#define MSCM_IRCP1ISR4_PCIE_INT8_MASK            (0x100U)
#define MSCM_IRCP1ISR4_PCIE_INT8_SHIFT           (8U)
#define MSCM_IRCP1ISR4_PCIE_INT8_WIDTH           (1U)
#define MSCM_IRCP1ISR4_PCIE_INT8(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1ISR4_PCIE_INT8_SHIFT)) & MSCM_IRCP1ISR4_PCIE_INT8_MASK)
#define MSCM_IRCP1ISR4_PCIE_INT9_MASK            (0x200U)
#define MSCM_IRCP1ISR4_PCIE_INT9_SHIFT           (9U)
#define MSCM_IRCP1ISR4_PCIE_INT9_WIDTH           (1U)
#define MSCM_IRCP1ISR4_PCIE_INT9(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1ISR4_PCIE_INT9_SHIFT)) & MSCM_IRCP1ISR4_PCIE_INT9_MASK)
#define MSCM_IRCP1ISR4_PCIE_INT10_MASK           (0x400U)
#define MSCM_IRCP1ISR4_PCIE_INT10_SHIFT          (10U)
#define MSCM_IRCP1ISR4_PCIE_INT10_WIDTH          (1U)
#define MSCM_IRCP1ISR4_PCIE_INT10(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1ISR4_PCIE_INT10_SHIFT)) & MSCM_IRCP1ISR4_PCIE_INT10_MASK)
#define MSCM_IRCP1ISR4_PCIE_INT11_MASK           (0x800U)
#define MSCM_IRCP1ISR4_PCIE_INT11_SHIFT          (11U)
#define MSCM_IRCP1ISR4_PCIE_INT11_WIDTH          (1U)
#define MSCM_IRCP1ISR4_PCIE_INT11(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1ISR4_PCIE_INT11_SHIFT)) & MSCM_IRCP1ISR4_PCIE_INT11_MASK)
#define MSCM_IRCP1ISR4_PCIE_INT12_MASK           (0x1000U)
#define MSCM_IRCP1ISR4_PCIE_INT12_SHIFT          (12U)
#define MSCM_IRCP1ISR4_PCIE_INT12_WIDTH          (1U)
#define MSCM_IRCP1ISR4_PCIE_INT12(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1ISR4_PCIE_INT12_SHIFT)) & MSCM_IRCP1ISR4_PCIE_INT12_MASK)
#define MSCM_IRCP1ISR4_PCIE_INT13_MASK           (0x2000U)
#define MSCM_IRCP1ISR4_PCIE_INT13_SHIFT          (13U)
#define MSCM_IRCP1ISR4_PCIE_INT13_WIDTH          (1U)
#define MSCM_IRCP1ISR4_PCIE_INT13(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1ISR4_PCIE_INT13_SHIFT)) & MSCM_IRCP1ISR4_PCIE_INT13_MASK)
#define MSCM_IRCP1ISR4_PCIE_INT14_MASK           (0x4000U)
#define MSCM_IRCP1ISR4_PCIE_INT14_SHIFT          (14U)
#define MSCM_IRCP1ISR4_PCIE_INT14_WIDTH          (1U)
#define MSCM_IRCP1ISR4_PCIE_INT14(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1ISR4_PCIE_INT14_SHIFT)) & MSCM_IRCP1ISR4_PCIE_INT14_MASK)
#define MSCM_IRCP1ISR4_PCIE_INT15_MASK           (0x8000U)
#define MSCM_IRCP1ISR4_PCIE_INT15_SHIFT          (15U)
#define MSCM_IRCP1ISR4_PCIE_INT15_WIDTH          (1U)
#define MSCM_IRCP1ISR4_PCIE_INT15(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1ISR4_PCIE_INT15_SHIFT)) & MSCM_IRCP1ISR4_PCIE_INT15_MASK)
/*! @} */

/*! @name IRCP1IGR4 - Interrupt Router CPn Interruptx Generation Register */
/*! @{ */
#define MSCM_IRCP1IGR4_INT0_EN_MASK              (0x1U)
#define MSCM_IRCP1IGR4_INT0_EN_SHIFT             (0U)
#define MSCM_IRCP1IGR4_INT0_EN_WIDTH             (1U)
#define MSCM_IRCP1IGR4_INT0_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1IGR4_INT0_EN_SHIFT)) & MSCM_IRCP1IGR4_INT0_EN_MASK)
#define MSCM_IRCP1IGR4_INT1_EN_MASK              (0x2U)
#define MSCM_IRCP1IGR4_INT1_EN_SHIFT             (1U)
#define MSCM_IRCP1IGR4_INT1_EN_WIDTH             (1U)
#define MSCM_IRCP1IGR4_INT1_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1IGR4_INT1_EN_SHIFT)) & MSCM_IRCP1IGR4_INT1_EN_MASK)
#define MSCM_IRCP1IGR4_INT2_EN_MASK              (0x4U)
#define MSCM_IRCP1IGR4_INT2_EN_SHIFT             (2U)
#define MSCM_IRCP1IGR4_INT2_EN_WIDTH             (1U)
#define MSCM_IRCP1IGR4_INT2_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1IGR4_INT2_EN_SHIFT)) & MSCM_IRCP1IGR4_INT2_EN_MASK)
#define MSCM_IRCP1IGR4_INT3_EN_MASK              (0x8U)
#define MSCM_IRCP1IGR4_INT3_EN_SHIFT             (3U)
#define MSCM_IRCP1IGR4_INT3_EN_WIDTH             (1U)
#define MSCM_IRCP1IGR4_INT3_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1IGR4_INT3_EN_SHIFT)) & MSCM_IRCP1IGR4_INT3_EN_MASK)
#define MSCM_IRCP1IGR4_INT4_EN_MASK              (0x10U)
#define MSCM_IRCP1IGR4_INT4_EN_SHIFT             (4U)
#define MSCM_IRCP1IGR4_INT4_EN_WIDTH             (1U)
#define MSCM_IRCP1IGR4_INT4_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1IGR4_INT4_EN_SHIFT)) & MSCM_IRCP1IGR4_INT4_EN_MASK)
#define MSCM_IRCP1IGR4_INT5_EN_MASK              (0x20U)
#define MSCM_IRCP1IGR4_INT5_EN_SHIFT             (5U)
#define MSCM_IRCP1IGR4_INT5_EN_WIDTH             (1U)
#define MSCM_IRCP1IGR4_INT5_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1IGR4_INT5_EN_SHIFT)) & MSCM_IRCP1IGR4_INT5_EN_MASK)
#define MSCM_IRCP1IGR4_INT6_EN_MASK              (0x40U)
#define MSCM_IRCP1IGR4_INT6_EN_SHIFT             (6U)
#define MSCM_IRCP1IGR4_INT6_EN_WIDTH             (1U)
#define MSCM_IRCP1IGR4_INT6_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1IGR4_INT6_EN_SHIFT)) & MSCM_IRCP1IGR4_INT6_EN_MASK)
#define MSCM_IRCP1IGR4_INT7_EN_MASK              (0x80U)
#define MSCM_IRCP1IGR4_INT7_EN_SHIFT             (7U)
#define MSCM_IRCP1IGR4_INT7_EN_WIDTH             (1U)
#define MSCM_IRCP1IGR4_INT7_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1IGR4_INT7_EN_SHIFT)) & MSCM_IRCP1IGR4_INT7_EN_MASK)
#define MSCM_IRCP1IGR4_INT8_EN_MASK              (0x100U)
#define MSCM_IRCP1IGR4_INT8_EN_SHIFT             (8U)
#define MSCM_IRCP1IGR4_INT8_EN_WIDTH             (1U)
#define MSCM_IRCP1IGR4_INT8_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1IGR4_INT8_EN_SHIFT)) & MSCM_IRCP1IGR4_INT8_EN_MASK)
#define MSCM_IRCP1IGR4_INT9_EN_MASK              (0x200U)
#define MSCM_IRCP1IGR4_INT9_EN_SHIFT             (9U)
#define MSCM_IRCP1IGR4_INT9_EN_WIDTH             (1U)
#define MSCM_IRCP1IGR4_INT9_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1IGR4_INT9_EN_SHIFT)) & MSCM_IRCP1IGR4_INT9_EN_MASK)
#define MSCM_IRCP1IGR4_INT10_EN_MASK             (0x400U)
#define MSCM_IRCP1IGR4_INT10_EN_SHIFT            (10U)
#define MSCM_IRCP1IGR4_INT10_EN_WIDTH            (1U)
#define MSCM_IRCP1IGR4_INT10_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1IGR4_INT10_EN_SHIFT)) & MSCM_IRCP1IGR4_INT10_EN_MASK)
#define MSCM_IRCP1IGR4_INT11_EN_MASK             (0x800U)
#define MSCM_IRCP1IGR4_INT11_EN_SHIFT            (11U)
#define MSCM_IRCP1IGR4_INT11_EN_WIDTH            (1U)
#define MSCM_IRCP1IGR4_INT11_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1IGR4_INT11_EN_SHIFT)) & MSCM_IRCP1IGR4_INT11_EN_MASK)
#define MSCM_IRCP1IGR4_INT12_EN_MASK             (0x1000U)
#define MSCM_IRCP1IGR4_INT12_EN_SHIFT            (12U)
#define MSCM_IRCP1IGR4_INT12_EN_WIDTH            (1U)
#define MSCM_IRCP1IGR4_INT12_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1IGR4_INT12_EN_SHIFT)) & MSCM_IRCP1IGR4_INT12_EN_MASK)
#define MSCM_IRCP1IGR4_INT13_EN_MASK             (0x2000U)
#define MSCM_IRCP1IGR4_INT13_EN_SHIFT            (13U)
#define MSCM_IRCP1IGR4_INT13_EN_WIDTH            (1U)
#define MSCM_IRCP1IGR4_INT13_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1IGR4_INT13_EN_SHIFT)) & MSCM_IRCP1IGR4_INT13_EN_MASK)
#define MSCM_IRCP1IGR4_INT14_EN_MASK             (0x4000U)
#define MSCM_IRCP1IGR4_INT14_EN_SHIFT            (14U)
#define MSCM_IRCP1IGR4_INT14_EN_WIDTH            (1U)
#define MSCM_IRCP1IGR4_INT14_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1IGR4_INT14_EN_SHIFT)) & MSCM_IRCP1IGR4_INT14_EN_MASK)
#define MSCM_IRCP1IGR4_INT15_EN_MASK             (0x8000U)
#define MSCM_IRCP1IGR4_INT15_EN_SHIFT            (15U)
#define MSCM_IRCP1IGR4_INT15_EN_WIDTH            (1U)
#define MSCM_IRCP1IGR4_INT15_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP1IGR4_INT15_EN_SHIFT)) & MSCM_IRCP1IGR4_INT15_EN_MASK)
/*! @} */

/*! @name IRCP2ISR4 - Interrupt Router CPn Interruptx Status Register */
/*! @{ */
#define MSCM_IRCP2ISR4_PCIE_INT0_MASK            (0x1U)
#define MSCM_IRCP2ISR4_PCIE_INT0_SHIFT           (0U)
#define MSCM_IRCP2ISR4_PCIE_INT0_WIDTH           (1U)
#define MSCM_IRCP2ISR4_PCIE_INT0(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2ISR4_PCIE_INT0_SHIFT)) & MSCM_IRCP2ISR4_PCIE_INT0_MASK)
#define MSCM_IRCP2ISR4_PCIE_INT1_MASK            (0x2U)
#define MSCM_IRCP2ISR4_PCIE_INT1_SHIFT           (1U)
#define MSCM_IRCP2ISR4_PCIE_INT1_WIDTH           (1U)
#define MSCM_IRCP2ISR4_PCIE_INT1(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2ISR4_PCIE_INT1_SHIFT)) & MSCM_IRCP2ISR4_PCIE_INT1_MASK)
#define MSCM_IRCP2ISR4_PCIE_INT2_MASK            (0x4U)
#define MSCM_IRCP2ISR4_PCIE_INT2_SHIFT           (2U)
#define MSCM_IRCP2ISR4_PCIE_INT2_WIDTH           (1U)
#define MSCM_IRCP2ISR4_PCIE_INT2(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2ISR4_PCIE_INT2_SHIFT)) & MSCM_IRCP2ISR4_PCIE_INT2_MASK)
#define MSCM_IRCP2ISR4_PCIE_INT3_MASK            (0x8U)
#define MSCM_IRCP2ISR4_PCIE_INT3_SHIFT           (3U)
#define MSCM_IRCP2ISR4_PCIE_INT3_WIDTH           (1U)
#define MSCM_IRCP2ISR4_PCIE_INT3(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2ISR4_PCIE_INT3_SHIFT)) & MSCM_IRCP2ISR4_PCIE_INT3_MASK)
#define MSCM_IRCP2ISR4_PCIE_INT4_MASK            (0x10U)
#define MSCM_IRCP2ISR4_PCIE_INT4_SHIFT           (4U)
#define MSCM_IRCP2ISR4_PCIE_INT4_WIDTH           (1U)
#define MSCM_IRCP2ISR4_PCIE_INT4(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2ISR4_PCIE_INT4_SHIFT)) & MSCM_IRCP2ISR4_PCIE_INT4_MASK)
#define MSCM_IRCP2ISR4_PCIE_INT5_MASK            (0x20U)
#define MSCM_IRCP2ISR4_PCIE_INT5_SHIFT           (5U)
#define MSCM_IRCP2ISR4_PCIE_INT5_WIDTH           (1U)
#define MSCM_IRCP2ISR4_PCIE_INT5(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2ISR4_PCIE_INT5_SHIFT)) & MSCM_IRCP2ISR4_PCIE_INT5_MASK)
#define MSCM_IRCP2ISR4_PCIE_INT6_MASK            (0x40U)
#define MSCM_IRCP2ISR4_PCIE_INT6_SHIFT           (6U)
#define MSCM_IRCP2ISR4_PCIE_INT6_WIDTH           (1U)
#define MSCM_IRCP2ISR4_PCIE_INT6(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2ISR4_PCIE_INT6_SHIFT)) & MSCM_IRCP2ISR4_PCIE_INT6_MASK)
#define MSCM_IRCP2ISR4_PCIE_INT7_MASK            (0x80U)
#define MSCM_IRCP2ISR4_PCIE_INT7_SHIFT           (7U)
#define MSCM_IRCP2ISR4_PCIE_INT7_WIDTH           (1U)
#define MSCM_IRCP2ISR4_PCIE_INT7(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2ISR4_PCIE_INT7_SHIFT)) & MSCM_IRCP2ISR4_PCIE_INT7_MASK)
#define MSCM_IRCP2ISR4_PCIE_INT8_MASK            (0x100U)
#define MSCM_IRCP2ISR4_PCIE_INT8_SHIFT           (8U)
#define MSCM_IRCP2ISR4_PCIE_INT8_WIDTH           (1U)
#define MSCM_IRCP2ISR4_PCIE_INT8(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2ISR4_PCIE_INT8_SHIFT)) & MSCM_IRCP2ISR4_PCIE_INT8_MASK)
#define MSCM_IRCP2ISR4_PCIE_INT9_MASK            (0x200U)
#define MSCM_IRCP2ISR4_PCIE_INT9_SHIFT           (9U)
#define MSCM_IRCP2ISR4_PCIE_INT9_WIDTH           (1U)
#define MSCM_IRCP2ISR4_PCIE_INT9(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2ISR4_PCIE_INT9_SHIFT)) & MSCM_IRCP2ISR4_PCIE_INT9_MASK)
#define MSCM_IRCP2ISR4_PCIE_INT10_MASK           (0x400U)
#define MSCM_IRCP2ISR4_PCIE_INT10_SHIFT          (10U)
#define MSCM_IRCP2ISR4_PCIE_INT10_WIDTH          (1U)
#define MSCM_IRCP2ISR4_PCIE_INT10(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2ISR4_PCIE_INT10_SHIFT)) & MSCM_IRCP2ISR4_PCIE_INT10_MASK)
#define MSCM_IRCP2ISR4_PCIE_INT11_MASK           (0x800U)
#define MSCM_IRCP2ISR4_PCIE_INT11_SHIFT          (11U)
#define MSCM_IRCP2ISR4_PCIE_INT11_WIDTH          (1U)
#define MSCM_IRCP2ISR4_PCIE_INT11(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2ISR4_PCIE_INT11_SHIFT)) & MSCM_IRCP2ISR4_PCIE_INT11_MASK)
#define MSCM_IRCP2ISR4_PCIE_INT12_MASK           (0x1000U)
#define MSCM_IRCP2ISR4_PCIE_INT12_SHIFT          (12U)
#define MSCM_IRCP2ISR4_PCIE_INT12_WIDTH          (1U)
#define MSCM_IRCP2ISR4_PCIE_INT12(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2ISR4_PCIE_INT12_SHIFT)) & MSCM_IRCP2ISR4_PCIE_INT12_MASK)
#define MSCM_IRCP2ISR4_PCIE_INT13_MASK           (0x2000U)
#define MSCM_IRCP2ISR4_PCIE_INT13_SHIFT          (13U)
#define MSCM_IRCP2ISR4_PCIE_INT13_WIDTH          (1U)
#define MSCM_IRCP2ISR4_PCIE_INT13(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2ISR4_PCIE_INT13_SHIFT)) & MSCM_IRCP2ISR4_PCIE_INT13_MASK)
#define MSCM_IRCP2ISR4_PCIE_INT14_MASK           (0x4000U)
#define MSCM_IRCP2ISR4_PCIE_INT14_SHIFT          (14U)
#define MSCM_IRCP2ISR4_PCIE_INT14_WIDTH          (1U)
#define MSCM_IRCP2ISR4_PCIE_INT14(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2ISR4_PCIE_INT14_SHIFT)) & MSCM_IRCP2ISR4_PCIE_INT14_MASK)
#define MSCM_IRCP2ISR4_PCIE_INT15_MASK           (0x8000U)
#define MSCM_IRCP2ISR4_PCIE_INT15_SHIFT          (15U)
#define MSCM_IRCP2ISR4_PCIE_INT15_WIDTH          (1U)
#define MSCM_IRCP2ISR4_PCIE_INT15(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2ISR4_PCIE_INT15_SHIFT)) & MSCM_IRCP2ISR4_PCIE_INT15_MASK)
/*! @} */

/*! @name IRCP2IGR4 - Interrupt Router CPn Interruptx Generation Register */
/*! @{ */
#define MSCM_IRCP2IGR4_INT0_EN_MASK              (0x1U)
#define MSCM_IRCP2IGR4_INT0_EN_SHIFT             (0U)
#define MSCM_IRCP2IGR4_INT0_EN_WIDTH             (1U)
#define MSCM_IRCP2IGR4_INT0_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2IGR4_INT0_EN_SHIFT)) & MSCM_IRCP2IGR4_INT0_EN_MASK)
#define MSCM_IRCP2IGR4_INT1_EN_MASK              (0x2U)
#define MSCM_IRCP2IGR4_INT1_EN_SHIFT             (1U)
#define MSCM_IRCP2IGR4_INT1_EN_WIDTH             (1U)
#define MSCM_IRCP2IGR4_INT1_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2IGR4_INT1_EN_SHIFT)) & MSCM_IRCP2IGR4_INT1_EN_MASK)
#define MSCM_IRCP2IGR4_INT2_EN_MASK              (0x4U)
#define MSCM_IRCP2IGR4_INT2_EN_SHIFT             (2U)
#define MSCM_IRCP2IGR4_INT2_EN_WIDTH             (1U)
#define MSCM_IRCP2IGR4_INT2_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2IGR4_INT2_EN_SHIFT)) & MSCM_IRCP2IGR4_INT2_EN_MASK)
#define MSCM_IRCP2IGR4_INT3_EN_MASK              (0x8U)
#define MSCM_IRCP2IGR4_INT3_EN_SHIFT             (3U)
#define MSCM_IRCP2IGR4_INT3_EN_WIDTH             (1U)
#define MSCM_IRCP2IGR4_INT3_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2IGR4_INT3_EN_SHIFT)) & MSCM_IRCP2IGR4_INT3_EN_MASK)
#define MSCM_IRCP2IGR4_INT4_EN_MASK              (0x10U)
#define MSCM_IRCP2IGR4_INT4_EN_SHIFT             (4U)
#define MSCM_IRCP2IGR4_INT4_EN_WIDTH             (1U)
#define MSCM_IRCP2IGR4_INT4_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2IGR4_INT4_EN_SHIFT)) & MSCM_IRCP2IGR4_INT4_EN_MASK)
#define MSCM_IRCP2IGR4_INT5_EN_MASK              (0x20U)
#define MSCM_IRCP2IGR4_INT5_EN_SHIFT             (5U)
#define MSCM_IRCP2IGR4_INT5_EN_WIDTH             (1U)
#define MSCM_IRCP2IGR4_INT5_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2IGR4_INT5_EN_SHIFT)) & MSCM_IRCP2IGR4_INT5_EN_MASK)
#define MSCM_IRCP2IGR4_INT6_EN_MASK              (0x40U)
#define MSCM_IRCP2IGR4_INT6_EN_SHIFT             (6U)
#define MSCM_IRCP2IGR4_INT6_EN_WIDTH             (1U)
#define MSCM_IRCP2IGR4_INT6_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2IGR4_INT6_EN_SHIFT)) & MSCM_IRCP2IGR4_INT6_EN_MASK)
#define MSCM_IRCP2IGR4_INT7_EN_MASK              (0x80U)
#define MSCM_IRCP2IGR4_INT7_EN_SHIFT             (7U)
#define MSCM_IRCP2IGR4_INT7_EN_WIDTH             (1U)
#define MSCM_IRCP2IGR4_INT7_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2IGR4_INT7_EN_SHIFT)) & MSCM_IRCP2IGR4_INT7_EN_MASK)
#define MSCM_IRCP2IGR4_INT8_EN_MASK              (0x100U)
#define MSCM_IRCP2IGR4_INT8_EN_SHIFT             (8U)
#define MSCM_IRCP2IGR4_INT8_EN_WIDTH             (1U)
#define MSCM_IRCP2IGR4_INT8_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2IGR4_INT8_EN_SHIFT)) & MSCM_IRCP2IGR4_INT8_EN_MASK)
#define MSCM_IRCP2IGR4_INT9_EN_MASK              (0x200U)
#define MSCM_IRCP2IGR4_INT9_EN_SHIFT             (9U)
#define MSCM_IRCP2IGR4_INT9_EN_WIDTH             (1U)
#define MSCM_IRCP2IGR4_INT9_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2IGR4_INT9_EN_SHIFT)) & MSCM_IRCP2IGR4_INT9_EN_MASK)
#define MSCM_IRCP2IGR4_INT10_EN_MASK             (0x400U)
#define MSCM_IRCP2IGR4_INT10_EN_SHIFT            (10U)
#define MSCM_IRCP2IGR4_INT10_EN_WIDTH            (1U)
#define MSCM_IRCP2IGR4_INT10_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2IGR4_INT10_EN_SHIFT)) & MSCM_IRCP2IGR4_INT10_EN_MASK)
#define MSCM_IRCP2IGR4_INT11_EN_MASK             (0x800U)
#define MSCM_IRCP2IGR4_INT11_EN_SHIFT            (11U)
#define MSCM_IRCP2IGR4_INT11_EN_WIDTH            (1U)
#define MSCM_IRCP2IGR4_INT11_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2IGR4_INT11_EN_SHIFT)) & MSCM_IRCP2IGR4_INT11_EN_MASK)
#define MSCM_IRCP2IGR4_INT12_EN_MASK             (0x1000U)
#define MSCM_IRCP2IGR4_INT12_EN_SHIFT            (12U)
#define MSCM_IRCP2IGR4_INT12_EN_WIDTH            (1U)
#define MSCM_IRCP2IGR4_INT12_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2IGR4_INT12_EN_SHIFT)) & MSCM_IRCP2IGR4_INT12_EN_MASK)
#define MSCM_IRCP2IGR4_INT13_EN_MASK             (0x2000U)
#define MSCM_IRCP2IGR4_INT13_EN_SHIFT            (13U)
#define MSCM_IRCP2IGR4_INT13_EN_WIDTH            (1U)
#define MSCM_IRCP2IGR4_INT13_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2IGR4_INT13_EN_SHIFT)) & MSCM_IRCP2IGR4_INT13_EN_MASK)
#define MSCM_IRCP2IGR4_INT14_EN_MASK             (0x4000U)
#define MSCM_IRCP2IGR4_INT14_EN_SHIFT            (14U)
#define MSCM_IRCP2IGR4_INT14_EN_WIDTH            (1U)
#define MSCM_IRCP2IGR4_INT14_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2IGR4_INT14_EN_SHIFT)) & MSCM_IRCP2IGR4_INT14_EN_MASK)
#define MSCM_IRCP2IGR4_INT15_EN_MASK             (0x8000U)
#define MSCM_IRCP2IGR4_INT15_EN_SHIFT            (15U)
#define MSCM_IRCP2IGR4_INT15_EN_WIDTH            (1U)
#define MSCM_IRCP2IGR4_INT15_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP2IGR4_INT15_EN_SHIFT)) & MSCM_IRCP2IGR4_INT15_EN_MASK)
/*! @} */

/*! @name IRCP3ISR4 - Interrupt Router CPn Interruptx Status Register */
/*! @{ */
#define MSCM_IRCP3ISR4_PCIE_INT0_MASK            (0x1U)
#define MSCM_IRCP3ISR4_PCIE_INT0_SHIFT           (0U)
#define MSCM_IRCP3ISR4_PCIE_INT0_WIDTH           (1U)
#define MSCM_IRCP3ISR4_PCIE_INT0(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3ISR4_PCIE_INT0_SHIFT)) & MSCM_IRCP3ISR4_PCIE_INT0_MASK)
#define MSCM_IRCP3ISR4_PCIE_INT1_MASK            (0x2U)
#define MSCM_IRCP3ISR4_PCIE_INT1_SHIFT           (1U)
#define MSCM_IRCP3ISR4_PCIE_INT1_WIDTH           (1U)
#define MSCM_IRCP3ISR4_PCIE_INT1(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3ISR4_PCIE_INT1_SHIFT)) & MSCM_IRCP3ISR4_PCIE_INT1_MASK)
#define MSCM_IRCP3ISR4_PCIE_INT2_MASK            (0x4U)
#define MSCM_IRCP3ISR4_PCIE_INT2_SHIFT           (2U)
#define MSCM_IRCP3ISR4_PCIE_INT2_WIDTH           (1U)
#define MSCM_IRCP3ISR4_PCIE_INT2(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3ISR4_PCIE_INT2_SHIFT)) & MSCM_IRCP3ISR4_PCIE_INT2_MASK)
#define MSCM_IRCP3ISR4_PCIE_INT3_MASK            (0x8U)
#define MSCM_IRCP3ISR4_PCIE_INT3_SHIFT           (3U)
#define MSCM_IRCP3ISR4_PCIE_INT3_WIDTH           (1U)
#define MSCM_IRCP3ISR4_PCIE_INT3(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3ISR4_PCIE_INT3_SHIFT)) & MSCM_IRCP3ISR4_PCIE_INT3_MASK)
#define MSCM_IRCP3ISR4_PCIE_INT4_MASK            (0x10U)
#define MSCM_IRCP3ISR4_PCIE_INT4_SHIFT           (4U)
#define MSCM_IRCP3ISR4_PCIE_INT4_WIDTH           (1U)
#define MSCM_IRCP3ISR4_PCIE_INT4(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3ISR4_PCIE_INT4_SHIFT)) & MSCM_IRCP3ISR4_PCIE_INT4_MASK)
#define MSCM_IRCP3ISR4_PCIE_INT5_MASK            (0x20U)
#define MSCM_IRCP3ISR4_PCIE_INT5_SHIFT           (5U)
#define MSCM_IRCP3ISR4_PCIE_INT5_WIDTH           (1U)
#define MSCM_IRCP3ISR4_PCIE_INT5(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3ISR4_PCIE_INT5_SHIFT)) & MSCM_IRCP3ISR4_PCIE_INT5_MASK)
#define MSCM_IRCP3ISR4_PCIE_INT6_MASK            (0x40U)
#define MSCM_IRCP3ISR4_PCIE_INT6_SHIFT           (6U)
#define MSCM_IRCP3ISR4_PCIE_INT6_WIDTH           (1U)
#define MSCM_IRCP3ISR4_PCIE_INT6(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3ISR4_PCIE_INT6_SHIFT)) & MSCM_IRCP3ISR4_PCIE_INT6_MASK)
#define MSCM_IRCP3ISR4_PCIE_INT7_MASK            (0x80U)
#define MSCM_IRCP3ISR4_PCIE_INT7_SHIFT           (7U)
#define MSCM_IRCP3ISR4_PCIE_INT7_WIDTH           (1U)
#define MSCM_IRCP3ISR4_PCIE_INT7(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3ISR4_PCIE_INT7_SHIFT)) & MSCM_IRCP3ISR4_PCIE_INT7_MASK)
#define MSCM_IRCP3ISR4_PCIE_INT8_MASK            (0x100U)
#define MSCM_IRCP3ISR4_PCIE_INT8_SHIFT           (8U)
#define MSCM_IRCP3ISR4_PCIE_INT8_WIDTH           (1U)
#define MSCM_IRCP3ISR4_PCIE_INT8(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3ISR4_PCIE_INT8_SHIFT)) & MSCM_IRCP3ISR4_PCIE_INT8_MASK)
#define MSCM_IRCP3ISR4_PCIE_INT9_MASK            (0x200U)
#define MSCM_IRCP3ISR4_PCIE_INT9_SHIFT           (9U)
#define MSCM_IRCP3ISR4_PCIE_INT9_WIDTH           (1U)
#define MSCM_IRCP3ISR4_PCIE_INT9(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3ISR4_PCIE_INT9_SHIFT)) & MSCM_IRCP3ISR4_PCIE_INT9_MASK)
#define MSCM_IRCP3ISR4_PCIE_INT10_MASK           (0x400U)
#define MSCM_IRCP3ISR4_PCIE_INT10_SHIFT          (10U)
#define MSCM_IRCP3ISR4_PCIE_INT10_WIDTH          (1U)
#define MSCM_IRCP3ISR4_PCIE_INT10(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3ISR4_PCIE_INT10_SHIFT)) & MSCM_IRCP3ISR4_PCIE_INT10_MASK)
#define MSCM_IRCP3ISR4_PCIE_INT11_MASK           (0x800U)
#define MSCM_IRCP3ISR4_PCIE_INT11_SHIFT          (11U)
#define MSCM_IRCP3ISR4_PCIE_INT11_WIDTH          (1U)
#define MSCM_IRCP3ISR4_PCIE_INT11(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3ISR4_PCIE_INT11_SHIFT)) & MSCM_IRCP3ISR4_PCIE_INT11_MASK)
#define MSCM_IRCP3ISR4_PCIE_INT12_MASK           (0x1000U)
#define MSCM_IRCP3ISR4_PCIE_INT12_SHIFT          (12U)
#define MSCM_IRCP3ISR4_PCIE_INT12_WIDTH          (1U)
#define MSCM_IRCP3ISR4_PCIE_INT12(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3ISR4_PCIE_INT12_SHIFT)) & MSCM_IRCP3ISR4_PCIE_INT12_MASK)
#define MSCM_IRCP3ISR4_PCIE_INT13_MASK           (0x2000U)
#define MSCM_IRCP3ISR4_PCIE_INT13_SHIFT          (13U)
#define MSCM_IRCP3ISR4_PCIE_INT13_WIDTH          (1U)
#define MSCM_IRCP3ISR4_PCIE_INT13(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3ISR4_PCIE_INT13_SHIFT)) & MSCM_IRCP3ISR4_PCIE_INT13_MASK)
#define MSCM_IRCP3ISR4_PCIE_INT14_MASK           (0x4000U)
#define MSCM_IRCP3ISR4_PCIE_INT14_SHIFT          (14U)
#define MSCM_IRCP3ISR4_PCIE_INT14_WIDTH          (1U)
#define MSCM_IRCP3ISR4_PCIE_INT14(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3ISR4_PCIE_INT14_SHIFT)) & MSCM_IRCP3ISR4_PCIE_INT14_MASK)
#define MSCM_IRCP3ISR4_PCIE_INT15_MASK           (0x8000U)
#define MSCM_IRCP3ISR4_PCIE_INT15_SHIFT          (15U)
#define MSCM_IRCP3ISR4_PCIE_INT15_WIDTH          (1U)
#define MSCM_IRCP3ISR4_PCIE_INT15(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3ISR4_PCIE_INT15_SHIFT)) & MSCM_IRCP3ISR4_PCIE_INT15_MASK)
/*! @} */

/*! @name IRCP3IGR4 - Interrupt Router CPn Interruptx Generation Register */
/*! @{ */
#define MSCM_IRCP3IGR4_INT0_EN_MASK              (0x1U)
#define MSCM_IRCP3IGR4_INT0_EN_SHIFT             (0U)
#define MSCM_IRCP3IGR4_INT0_EN_WIDTH             (1U)
#define MSCM_IRCP3IGR4_INT0_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3IGR4_INT0_EN_SHIFT)) & MSCM_IRCP3IGR4_INT0_EN_MASK)
#define MSCM_IRCP3IGR4_INT1_EN_MASK              (0x2U)
#define MSCM_IRCP3IGR4_INT1_EN_SHIFT             (1U)
#define MSCM_IRCP3IGR4_INT1_EN_WIDTH             (1U)
#define MSCM_IRCP3IGR4_INT1_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3IGR4_INT1_EN_SHIFT)) & MSCM_IRCP3IGR4_INT1_EN_MASK)
#define MSCM_IRCP3IGR4_INT2_EN_MASK              (0x4U)
#define MSCM_IRCP3IGR4_INT2_EN_SHIFT             (2U)
#define MSCM_IRCP3IGR4_INT2_EN_WIDTH             (1U)
#define MSCM_IRCP3IGR4_INT2_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3IGR4_INT2_EN_SHIFT)) & MSCM_IRCP3IGR4_INT2_EN_MASK)
#define MSCM_IRCP3IGR4_INT3_EN_MASK              (0x8U)
#define MSCM_IRCP3IGR4_INT3_EN_SHIFT             (3U)
#define MSCM_IRCP3IGR4_INT3_EN_WIDTH             (1U)
#define MSCM_IRCP3IGR4_INT3_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3IGR4_INT3_EN_SHIFT)) & MSCM_IRCP3IGR4_INT3_EN_MASK)
#define MSCM_IRCP3IGR4_INT4_EN_MASK              (0x10U)
#define MSCM_IRCP3IGR4_INT4_EN_SHIFT             (4U)
#define MSCM_IRCP3IGR4_INT4_EN_WIDTH             (1U)
#define MSCM_IRCP3IGR4_INT4_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3IGR4_INT4_EN_SHIFT)) & MSCM_IRCP3IGR4_INT4_EN_MASK)
#define MSCM_IRCP3IGR4_INT5_EN_MASK              (0x20U)
#define MSCM_IRCP3IGR4_INT5_EN_SHIFT             (5U)
#define MSCM_IRCP3IGR4_INT5_EN_WIDTH             (1U)
#define MSCM_IRCP3IGR4_INT5_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3IGR4_INT5_EN_SHIFT)) & MSCM_IRCP3IGR4_INT5_EN_MASK)
#define MSCM_IRCP3IGR4_INT6_EN_MASK              (0x40U)
#define MSCM_IRCP3IGR4_INT6_EN_SHIFT             (6U)
#define MSCM_IRCP3IGR4_INT6_EN_WIDTH             (1U)
#define MSCM_IRCP3IGR4_INT6_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3IGR4_INT6_EN_SHIFT)) & MSCM_IRCP3IGR4_INT6_EN_MASK)
#define MSCM_IRCP3IGR4_INT7_EN_MASK              (0x80U)
#define MSCM_IRCP3IGR4_INT7_EN_SHIFT             (7U)
#define MSCM_IRCP3IGR4_INT7_EN_WIDTH             (1U)
#define MSCM_IRCP3IGR4_INT7_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3IGR4_INT7_EN_SHIFT)) & MSCM_IRCP3IGR4_INT7_EN_MASK)
#define MSCM_IRCP3IGR4_INT8_EN_MASK              (0x100U)
#define MSCM_IRCP3IGR4_INT8_EN_SHIFT             (8U)
#define MSCM_IRCP3IGR4_INT8_EN_WIDTH             (1U)
#define MSCM_IRCP3IGR4_INT8_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3IGR4_INT8_EN_SHIFT)) & MSCM_IRCP3IGR4_INT8_EN_MASK)
#define MSCM_IRCP3IGR4_INT9_EN_MASK              (0x200U)
#define MSCM_IRCP3IGR4_INT9_EN_SHIFT             (9U)
#define MSCM_IRCP3IGR4_INT9_EN_WIDTH             (1U)
#define MSCM_IRCP3IGR4_INT9_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3IGR4_INT9_EN_SHIFT)) & MSCM_IRCP3IGR4_INT9_EN_MASK)
#define MSCM_IRCP3IGR4_INT10_EN_MASK             (0x400U)
#define MSCM_IRCP3IGR4_INT10_EN_SHIFT            (10U)
#define MSCM_IRCP3IGR4_INT10_EN_WIDTH            (1U)
#define MSCM_IRCP3IGR4_INT10_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3IGR4_INT10_EN_SHIFT)) & MSCM_IRCP3IGR4_INT10_EN_MASK)
#define MSCM_IRCP3IGR4_INT11_EN_MASK             (0x800U)
#define MSCM_IRCP3IGR4_INT11_EN_SHIFT            (11U)
#define MSCM_IRCP3IGR4_INT11_EN_WIDTH            (1U)
#define MSCM_IRCP3IGR4_INT11_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3IGR4_INT11_EN_SHIFT)) & MSCM_IRCP3IGR4_INT11_EN_MASK)
#define MSCM_IRCP3IGR4_INT12_EN_MASK             (0x1000U)
#define MSCM_IRCP3IGR4_INT12_EN_SHIFT            (12U)
#define MSCM_IRCP3IGR4_INT12_EN_WIDTH            (1U)
#define MSCM_IRCP3IGR4_INT12_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3IGR4_INT12_EN_SHIFT)) & MSCM_IRCP3IGR4_INT12_EN_MASK)
#define MSCM_IRCP3IGR4_INT13_EN_MASK             (0x2000U)
#define MSCM_IRCP3IGR4_INT13_EN_SHIFT            (13U)
#define MSCM_IRCP3IGR4_INT13_EN_WIDTH            (1U)
#define MSCM_IRCP3IGR4_INT13_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3IGR4_INT13_EN_SHIFT)) & MSCM_IRCP3IGR4_INT13_EN_MASK)
#define MSCM_IRCP3IGR4_INT14_EN_MASK             (0x4000U)
#define MSCM_IRCP3IGR4_INT14_EN_SHIFT            (14U)
#define MSCM_IRCP3IGR4_INT14_EN_WIDTH            (1U)
#define MSCM_IRCP3IGR4_INT14_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3IGR4_INT14_EN_SHIFT)) & MSCM_IRCP3IGR4_INT14_EN_MASK)
#define MSCM_IRCP3IGR4_INT15_EN_MASK             (0x8000U)
#define MSCM_IRCP3IGR4_INT15_EN_SHIFT            (15U)
#define MSCM_IRCP3IGR4_INT15_EN_WIDTH            (1U)
#define MSCM_IRCP3IGR4_INT15_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP3IGR4_INT15_EN_SHIFT)) & MSCM_IRCP3IGR4_INT15_EN_MASK)
/*! @} */

/*! @name IRCP4ISR4 - Interrupt Router CPn Interruptx Status Register */
/*! @{ */
#define MSCM_IRCP4ISR4_PCIE_INT0_MASK            (0x1U)
#define MSCM_IRCP4ISR4_PCIE_INT0_SHIFT           (0U)
#define MSCM_IRCP4ISR4_PCIE_INT0_WIDTH           (1U)
#define MSCM_IRCP4ISR4_PCIE_INT0(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4ISR4_PCIE_INT0_SHIFT)) & MSCM_IRCP4ISR4_PCIE_INT0_MASK)
#define MSCM_IRCP4ISR4_PCIE_INT1_MASK            (0x2U)
#define MSCM_IRCP4ISR4_PCIE_INT1_SHIFT           (1U)
#define MSCM_IRCP4ISR4_PCIE_INT1_WIDTH           (1U)
#define MSCM_IRCP4ISR4_PCIE_INT1(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4ISR4_PCIE_INT1_SHIFT)) & MSCM_IRCP4ISR4_PCIE_INT1_MASK)
#define MSCM_IRCP4ISR4_PCIE_INT2_MASK            (0x4U)
#define MSCM_IRCP4ISR4_PCIE_INT2_SHIFT           (2U)
#define MSCM_IRCP4ISR4_PCIE_INT2_WIDTH           (1U)
#define MSCM_IRCP4ISR4_PCIE_INT2(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4ISR4_PCIE_INT2_SHIFT)) & MSCM_IRCP4ISR4_PCIE_INT2_MASK)
#define MSCM_IRCP4ISR4_PCIE_INT3_MASK            (0x8U)
#define MSCM_IRCP4ISR4_PCIE_INT3_SHIFT           (3U)
#define MSCM_IRCP4ISR4_PCIE_INT3_WIDTH           (1U)
#define MSCM_IRCP4ISR4_PCIE_INT3(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4ISR4_PCIE_INT3_SHIFT)) & MSCM_IRCP4ISR4_PCIE_INT3_MASK)
#define MSCM_IRCP4ISR4_PCIE_INT4_MASK            (0x10U)
#define MSCM_IRCP4ISR4_PCIE_INT4_SHIFT           (4U)
#define MSCM_IRCP4ISR4_PCIE_INT4_WIDTH           (1U)
#define MSCM_IRCP4ISR4_PCIE_INT4(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4ISR4_PCIE_INT4_SHIFT)) & MSCM_IRCP4ISR4_PCIE_INT4_MASK)
#define MSCM_IRCP4ISR4_PCIE_INT5_MASK            (0x20U)
#define MSCM_IRCP4ISR4_PCIE_INT5_SHIFT           (5U)
#define MSCM_IRCP4ISR4_PCIE_INT5_WIDTH           (1U)
#define MSCM_IRCP4ISR4_PCIE_INT5(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4ISR4_PCIE_INT5_SHIFT)) & MSCM_IRCP4ISR4_PCIE_INT5_MASK)
#define MSCM_IRCP4ISR4_PCIE_INT6_MASK            (0x40U)
#define MSCM_IRCP4ISR4_PCIE_INT6_SHIFT           (6U)
#define MSCM_IRCP4ISR4_PCIE_INT6_WIDTH           (1U)
#define MSCM_IRCP4ISR4_PCIE_INT6(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4ISR4_PCIE_INT6_SHIFT)) & MSCM_IRCP4ISR4_PCIE_INT6_MASK)
#define MSCM_IRCP4ISR4_PCIE_INT7_MASK            (0x80U)
#define MSCM_IRCP4ISR4_PCIE_INT7_SHIFT           (7U)
#define MSCM_IRCP4ISR4_PCIE_INT7_WIDTH           (1U)
#define MSCM_IRCP4ISR4_PCIE_INT7(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4ISR4_PCIE_INT7_SHIFT)) & MSCM_IRCP4ISR4_PCIE_INT7_MASK)
#define MSCM_IRCP4ISR4_PCIE_INT8_MASK            (0x100U)
#define MSCM_IRCP4ISR4_PCIE_INT8_SHIFT           (8U)
#define MSCM_IRCP4ISR4_PCIE_INT8_WIDTH           (1U)
#define MSCM_IRCP4ISR4_PCIE_INT8(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4ISR4_PCIE_INT8_SHIFT)) & MSCM_IRCP4ISR4_PCIE_INT8_MASK)
#define MSCM_IRCP4ISR4_PCIE_INT9_MASK            (0x200U)
#define MSCM_IRCP4ISR4_PCIE_INT9_SHIFT           (9U)
#define MSCM_IRCP4ISR4_PCIE_INT9_WIDTH           (1U)
#define MSCM_IRCP4ISR4_PCIE_INT9(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4ISR4_PCIE_INT9_SHIFT)) & MSCM_IRCP4ISR4_PCIE_INT9_MASK)
#define MSCM_IRCP4ISR4_PCIE_INT10_MASK           (0x400U)
#define MSCM_IRCP4ISR4_PCIE_INT10_SHIFT          (10U)
#define MSCM_IRCP4ISR4_PCIE_INT10_WIDTH          (1U)
#define MSCM_IRCP4ISR4_PCIE_INT10(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4ISR4_PCIE_INT10_SHIFT)) & MSCM_IRCP4ISR4_PCIE_INT10_MASK)
#define MSCM_IRCP4ISR4_PCIE_INT11_MASK           (0x800U)
#define MSCM_IRCP4ISR4_PCIE_INT11_SHIFT          (11U)
#define MSCM_IRCP4ISR4_PCIE_INT11_WIDTH          (1U)
#define MSCM_IRCP4ISR4_PCIE_INT11(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4ISR4_PCIE_INT11_SHIFT)) & MSCM_IRCP4ISR4_PCIE_INT11_MASK)
#define MSCM_IRCP4ISR4_PCIE_INT12_MASK           (0x1000U)
#define MSCM_IRCP4ISR4_PCIE_INT12_SHIFT          (12U)
#define MSCM_IRCP4ISR4_PCIE_INT12_WIDTH          (1U)
#define MSCM_IRCP4ISR4_PCIE_INT12(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4ISR4_PCIE_INT12_SHIFT)) & MSCM_IRCP4ISR4_PCIE_INT12_MASK)
#define MSCM_IRCP4ISR4_PCIE_INT13_MASK           (0x2000U)
#define MSCM_IRCP4ISR4_PCIE_INT13_SHIFT          (13U)
#define MSCM_IRCP4ISR4_PCIE_INT13_WIDTH          (1U)
#define MSCM_IRCP4ISR4_PCIE_INT13(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4ISR4_PCIE_INT13_SHIFT)) & MSCM_IRCP4ISR4_PCIE_INT13_MASK)
#define MSCM_IRCP4ISR4_PCIE_INT14_MASK           (0x4000U)
#define MSCM_IRCP4ISR4_PCIE_INT14_SHIFT          (14U)
#define MSCM_IRCP4ISR4_PCIE_INT14_WIDTH          (1U)
#define MSCM_IRCP4ISR4_PCIE_INT14(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4ISR4_PCIE_INT14_SHIFT)) & MSCM_IRCP4ISR4_PCIE_INT14_MASK)
#define MSCM_IRCP4ISR4_PCIE_INT15_MASK           (0x8000U)
#define MSCM_IRCP4ISR4_PCIE_INT15_SHIFT          (15U)
#define MSCM_IRCP4ISR4_PCIE_INT15_WIDTH          (1U)
#define MSCM_IRCP4ISR4_PCIE_INT15(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4ISR4_PCIE_INT15_SHIFT)) & MSCM_IRCP4ISR4_PCIE_INT15_MASK)
/*! @} */

/*! @name IRCP4IGR4 - Interrupt Router CPn Interruptx Generation Register */
/*! @{ */
#define MSCM_IRCP4IGR4_INT0_EN_MASK              (0x1U)
#define MSCM_IRCP4IGR4_INT0_EN_SHIFT             (0U)
#define MSCM_IRCP4IGR4_INT0_EN_WIDTH             (1U)
#define MSCM_IRCP4IGR4_INT0_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4IGR4_INT0_EN_SHIFT)) & MSCM_IRCP4IGR4_INT0_EN_MASK)
#define MSCM_IRCP4IGR4_INT1_EN_MASK              (0x2U)
#define MSCM_IRCP4IGR4_INT1_EN_SHIFT             (1U)
#define MSCM_IRCP4IGR4_INT1_EN_WIDTH             (1U)
#define MSCM_IRCP4IGR4_INT1_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4IGR4_INT1_EN_SHIFT)) & MSCM_IRCP4IGR4_INT1_EN_MASK)
#define MSCM_IRCP4IGR4_INT2_EN_MASK              (0x4U)
#define MSCM_IRCP4IGR4_INT2_EN_SHIFT             (2U)
#define MSCM_IRCP4IGR4_INT2_EN_WIDTH             (1U)
#define MSCM_IRCP4IGR4_INT2_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4IGR4_INT2_EN_SHIFT)) & MSCM_IRCP4IGR4_INT2_EN_MASK)
#define MSCM_IRCP4IGR4_INT3_EN_MASK              (0x8U)
#define MSCM_IRCP4IGR4_INT3_EN_SHIFT             (3U)
#define MSCM_IRCP4IGR4_INT3_EN_WIDTH             (1U)
#define MSCM_IRCP4IGR4_INT3_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4IGR4_INT3_EN_SHIFT)) & MSCM_IRCP4IGR4_INT3_EN_MASK)
#define MSCM_IRCP4IGR4_INT4_EN_MASK              (0x10U)
#define MSCM_IRCP4IGR4_INT4_EN_SHIFT             (4U)
#define MSCM_IRCP4IGR4_INT4_EN_WIDTH             (1U)
#define MSCM_IRCP4IGR4_INT4_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4IGR4_INT4_EN_SHIFT)) & MSCM_IRCP4IGR4_INT4_EN_MASK)
#define MSCM_IRCP4IGR4_INT5_EN_MASK              (0x20U)
#define MSCM_IRCP4IGR4_INT5_EN_SHIFT             (5U)
#define MSCM_IRCP4IGR4_INT5_EN_WIDTH             (1U)
#define MSCM_IRCP4IGR4_INT5_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4IGR4_INT5_EN_SHIFT)) & MSCM_IRCP4IGR4_INT5_EN_MASK)
#define MSCM_IRCP4IGR4_INT6_EN_MASK              (0x40U)
#define MSCM_IRCP4IGR4_INT6_EN_SHIFT             (6U)
#define MSCM_IRCP4IGR4_INT6_EN_WIDTH             (1U)
#define MSCM_IRCP4IGR4_INT6_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4IGR4_INT6_EN_SHIFT)) & MSCM_IRCP4IGR4_INT6_EN_MASK)
#define MSCM_IRCP4IGR4_INT7_EN_MASK              (0x80U)
#define MSCM_IRCP4IGR4_INT7_EN_SHIFT             (7U)
#define MSCM_IRCP4IGR4_INT7_EN_WIDTH             (1U)
#define MSCM_IRCP4IGR4_INT7_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4IGR4_INT7_EN_SHIFT)) & MSCM_IRCP4IGR4_INT7_EN_MASK)
#define MSCM_IRCP4IGR4_INT8_EN_MASK              (0x100U)
#define MSCM_IRCP4IGR4_INT8_EN_SHIFT             (8U)
#define MSCM_IRCP4IGR4_INT8_EN_WIDTH             (1U)
#define MSCM_IRCP4IGR4_INT8_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4IGR4_INT8_EN_SHIFT)) & MSCM_IRCP4IGR4_INT8_EN_MASK)
#define MSCM_IRCP4IGR4_INT9_EN_MASK              (0x200U)
#define MSCM_IRCP4IGR4_INT9_EN_SHIFT             (9U)
#define MSCM_IRCP4IGR4_INT9_EN_WIDTH             (1U)
#define MSCM_IRCP4IGR4_INT9_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4IGR4_INT9_EN_SHIFT)) & MSCM_IRCP4IGR4_INT9_EN_MASK)
#define MSCM_IRCP4IGR4_INT10_EN_MASK             (0x400U)
#define MSCM_IRCP4IGR4_INT10_EN_SHIFT            (10U)
#define MSCM_IRCP4IGR4_INT10_EN_WIDTH            (1U)
#define MSCM_IRCP4IGR4_INT10_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4IGR4_INT10_EN_SHIFT)) & MSCM_IRCP4IGR4_INT10_EN_MASK)
#define MSCM_IRCP4IGR4_INT11_EN_MASK             (0x800U)
#define MSCM_IRCP4IGR4_INT11_EN_SHIFT            (11U)
#define MSCM_IRCP4IGR4_INT11_EN_WIDTH            (1U)
#define MSCM_IRCP4IGR4_INT11_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4IGR4_INT11_EN_SHIFT)) & MSCM_IRCP4IGR4_INT11_EN_MASK)
#define MSCM_IRCP4IGR4_INT12_EN_MASK             (0x1000U)
#define MSCM_IRCP4IGR4_INT12_EN_SHIFT            (12U)
#define MSCM_IRCP4IGR4_INT12_EN_WIDTH            (1U)
#define MSCM_IRCP4IGR4_INT12_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4IGR4_INT12_EN_SHIFT)) & MSCM_IRCP4IGR4_INT12_EN_MASK)
#define MSCM_IRCP4IGR4_INT13_EN_MASK             (0x2000U)
#define MSCM_IRCP4IGR4_INT13_EN_SHIFT            (13U)
#define MSCM_IRCP4IGR4_INT13_EN_WIDTH            (1U)
#define MSCM_IRCP4IGR4_INT13_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4IGR4_INT13_EN_SHIFT)) & MSCM_IRCP4IGR4_INT13_EN_MASK)
#define MSCM_IRCP4IGR4_INT14_EN_MASK             (0x4000U)
#define MSCM_IRCP4IGR4_INT14_EN_SHIFT            (14U)
#define MSCM_IRCP4IGR4_INT14_EN_WIDTH            (1U)
#define MSCM_IRCP4IGR4_INT14_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4IGR4_INT14_EN_SHIFT)) & MSCM_IRCP4IGR4_INT14_EN_MASK)
#define MSCM_IRCP4IGR4_INT15_EN_MASK             (0x8000U)
#define MSCM_IRCP4IGR4_INT15_EN_SHIFT            (15U)
#define MSCM_IRCP4IGR4_INT15_EN_WIDTH            (1U)
#define MSCM_IRCP4IGR4_INT15_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP4IGR4_INT15_EN_SHIFT)) & MSCM_IRCP4IGR4_INT15_EN_MASK)
/*! @} */

/*! @name IRCP5ISR4 - Interrupt Router CPn Interruptx Status Register */
/*! @{ */
#define MSCM_IRCP5ISR4_PCIE_INT0_MASK            (0x1U)
#define MSCM_IRCP5ISR4_PCIE_INT0_SHIFT           (0U)
#define MSCM_IRCP5ISR4_PCIE_INT0_WIDTH           (1U)
#define MSCM_IRCP5ISR4_PCIE_INT0(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5ISR4_PCIE_INT0_SHIFT)) & MSCM_IRCP5ISR4_PCIE_INT0_MASK)
#define MSCM_IRCP5ISR4_PCIE_INT1_MASK            (0x2U)
#define MSCM_IRCP5ISR4_PCIE_INT1_SHIFT           (1U)
#define MSCM_IRCP5ISR4_PCIE_INT1_WIDTH           (1U)
#define MSCM_IRCP5ISR4_PCIE_INT1(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5ISR4_PCIE_INT1_SHIFT)) & MSCM_IRCP5ISR4_PCIE_INT1_MASK)
#define MSCM_IRCP5ISR4_PCIE_INT2_MASK            (0x4U)
#define MSCM_IRCP5ISR4_PCIE_INT2_SHIFT           (2U)
#define MSCM_IRCP5ISR4_PCIE_INT2_WIDTH           (1U)
#define MSCM_IRCP5ISR4_PCIE_INT2(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5ISR4_PCIE_INT2_SHIFT)) & MSCM_IRCP5ISR4_PCIE_INT2_MASK)
#define MSCM_IRCP5ISR4_PCIE_INT3_MASK            (0x8U)
#define MSCM_IRCP5ISR4_PCIE_INT3_SHIFT           (3U)
#define MSCM_IRCP5ISR4_PCIE_INT3_WIDTH           (1U)
#define MSCM_IRCP5ISR4_PCIE_INT3(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5ISR4_PCIE_INT3_SHIFT)) & MSCM_IRCP5ISR4_PCIE_INT3_MASK)
#define MSCM_IRCP5ISR4_PCIE_INT4_MASK            (0x10U)
#define MSCM_IRCP5ISR4_PCIE_INT4_SHIFT           (4U)
#define MSCM_IRCP5ISR4_PCIE_INT4_WIDTH           (1U)
#define MSCM_IRCP5ISR4_PCIE_INT4(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5ISR4_PCIE_INT4_SHIFT)) & MSCM_IRCP5ISR4_PCIE_INT4_MASK)
#define MSCM_IRCP5ISR4_PCIE_INT5_MASK            (0x20U)
#define MSCM_IRCP5ISR4_PCIE_INT5_SHIFT           (5U)
#define MSCM_IRCP5ISR4_PCIE_INT5_WIDTH           (1U)
#define MSCM_IRCP5ISR4_PCIE_INT5(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5ISR4_PCIE_INT5_SHIFT)) & MSCM_IRCP5ISR4_PCIE_INT5_MASK)
#define MSCM_IRCP5ISR4_PCIE_INT6_MASK            (0x40U)
#define MSCM_IRCP5ISR4_PCIE_INT6_SHIFT           (6U)
#define MSCM_IRCP5ISR4_PCIE_INT6_WIDTH           (1U)
#define MSCM_IRCP5ISR4_PCIE_INT6(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5ISR4_PCIE_INT6_SHIFT)) & MSCM_IRCP5ISR4_PCIE_INT6_MASK)
#define MSCM_IRCP5ISR4_PCIE_INT7_MASK            (0x80U)
#define MSCM_IRCP5ISR4_PCIE_INT7_SHIFT           (7U)
#define MSCM_IRCP5ISR4_PCIE_INT7_WIDTH           (1U)
#define MSCM_IRCP5ISR4_PCIE_INT7(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5ISR4_PCIE_INT7_SHIFT)) & MSCM_IRCP5ISR4_PCIE_INT7_MASK)
#define MSCM_IRCP5ISR4_PCIE_INT8_MASK            (0x100U)
#define MSCM_IRCP5ISR4_PCIE_INT8_SHIFT           (8U)
#define MSCM_IRCP5ISR4_PCIE_INT8_WIDTH           (1U)
#define MSCM_IRCP5ISR4_PCIE_INT8(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5ISR4_PCIE_INT8_SHIFT)) & MSCM_IRCP5ISR4_PCIE_INT8_MASK)
#define MSCM_IRCP5ISR4_PCIE_INT9_MASK            (0x200U)
#define MSCM_IRCP5ISR4_PCIE_INT9_SHIFT           (9U)
#define MSCM_IRCP5ISR4_PCIE_INT9_WIDTH           (1U)
#define MSCM_IRCP5ISR4_PCIE_INT9(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5ISR4_PCIE_INT9_SHIFT)) & MSCM_IRCP5ISR4_PCIE_INT9_MASK)
#define MSCM_IRCP5ISR4_PCIE_INT10_MASK           (0x400U)
#define MSCM_IRCP5ISR4_PCIE_INT10_SHIFT          (10U)
#define MSCM_IRCP5ISR4_PCIE_INT10_WIDTH          (1U)
#define MSCM_IRCP5ISR4_PCIE_INT10(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5ISR4_PCIE_INT10_SHIFT)) & MSCM_IRCP5ISR4_PCIE_INT10_MASK)
#define MSCM_IRCP5ISR4_PCIE_INT11_MASK           (0x800U)
#define MSCM_IRCP5ISR4_PCIE_INT11_SHIFT          (11U)
#define MSCM_IRCP5ISR4_PCIE_INT11_WIDTH          (1U)
#define MSCM_IRCP5ISR4_PCIE_INT11(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5ISR4_PCIE_INT11_SHIFT)) & MSCM_IRCP5ISR4_PCIE_INT11_MASK)
#define MSCM_IRCP5ISR4_PCIE_INT12_MASK           (0x1000U)
#define MSCM_IRCP5ISR4_PCIE_INT12_SHIFT          (12U)
#define MSCM_IRCP5ISR4_PCIE_INT12_WIDTH          (1U)
#define MSCM_IRCP5ISR4_PCIE_INT12(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5ISR4_PCIE_INT12_SHIFT)) & MSCM_IRCP5ISR4_PCIE_INT12_MASK)
#define MSCM_IRCP5ISR4_PCIE_INT13_MASK           (0x2000U)
#define MSCM_IRCP5ISR4_PCIE_INT13_SHIFT          (13U)
#define MSCM_IRCP5ISR4_PCIE_INT13_WIDTH          (1U)
#define MSCM_IRCP5ISR4_PCIE_INT13(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5ISR4_PCIE_INT13_SHIFT)) & MSCM_IRCP5ISR4_PCIE_INT13_MASK)
#define MSCM_IRCP5ISR4_PCIE_INT14_MASK           (0x4000U)
#define MSCM_IRCP5ISR4_PCIE_INT14_SHIFT          (14U)
#define MSCM_IRCP5ISR4_PCIE_INT14_WIDTH          (1U)
#define MSCM_IRCP5ISR4_PCIE_INT14(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5ISR4_PCIE_INT14_SHIFT)) & MSCM_IRCP5ISR4_PCIE_INT14_MASK)
#define MSCM_IRCP5ISR4_PCIE_INT15_MASK           (0x8000U)
#define MSCM_IRCP5ISR4_PCIE_INT15_SHIFT          (15U)
#define MSCM_IRCP5ISR4_PCIE_INT15_WIDTH          (1U)
#define MSCM_IRCP5ISR4_PCIE_INT15(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5ISR4_PCIE_INT15_SHIFT)) & MSCM_IRCP5ISR4_PCIE_INT15_MASK)
/*! @} */

/*! @name IRCP5IGR4 - Interrupt Router CPn Interruptx Generation Register */
/*! @{ */
#define MSCM_IRCP5IGR4_INT0_EN_MASK              (0x1U)
#define MSCM_IRCP5IGR4_INT0_EN_SHIFT             (0U)
#define MSCM_IRCP5IGR4_INT0_EN_WIDTH             (1U)
#define MSCM_IRCP5IGR4_INT0_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5IGR4_INT0_EN_SHIFT)) & MSCM_IRCP5IGR4_INT0_EN_MASK)
#define MSCM_IRCP5IGR4_INT1_EN_MASK              (0x2U)
#define MSCM_IRCP5IGR4_INT1_EN_SHIFT             (1U)
#define MSCM_IRCP5IGR4_INT1_EN_WIDTH             (1U)
#define MSCM_IRCP5IGR4_INT1_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5IGR4_INT1_EN_SHIFT)) & MSCM_IRCP5IGR4_INT1_EN_MASK)
#define MSCM_IRCP5IGR4_INT2_EN_MASK              (0x4U)
#define MSCM_IRCP5IGR4_INT2_EN_SHIFT             (2U)
#define MSCM_IRCP5IGR4_INT2_EN_WIDTH             (1U)
#define MSCM_IRCP5IGR4_INT2_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5IGR4_INT2_EN_SHIFT)) & MSCM_IRCP5IGR4_INT2_EN_MASK)
#define MSCM_IRCP5IGR4_INT3_EN_MASK              (0x8U)
#define MSCM_IRCP5IGR4_INT3_EN_SHIFT             (3U)
#define MSCM_IRCP5IGR4_INT3_EN_WIDTH             (1U)
#define MSCM_IRCP5IGR4_INT3_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5IGR4_INT3_EN_SHIFT)) & MSCM_IRCP5IGR4_INT3_EN_MASK)
#define MSCM_IRCP5IGR4_INT4_EN_MASK              (0x10U)
#define MSCM_IRCP5IGR4_INT4_EN_SHIFT             (4U)
#define MSCM_IRCP5IGR4_INT4_EN_WIDTH             (1U)
#define MSCM_IRCP5IGR4_INT4_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5IGR4_INT4_EN_SHIFT)) & MSCM_IRCP5IGR4_INT4_EN_MASK)
#define MSCM_IRCP5IGR4_INT5_EN_MASK              (0x20U)
#define MSCM_IRCP5IGR4_INT5_EN_SHIFT             (5U)
#define MSCM_IRCP5IGR4_INT5_EN_WIDTH             (1U)
#define MSCM_IRCP5IGR4_INT5_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5IGR4_INT5_EN_SHIFT)) & MSCM_IRCP5IGR4_INT5_EN_MASK)
#define MSCM_IRCP5IGR4_INT6_EN_MASK              (0x40U)
#define MSCM_IRCP5IGR4_INT6_EN_SHIFT             (6U)
#define MSCM_IRCP5IGR4_INT6_EN_WIDTH             (1U)
#define MSCM_IRCP5IGR4_INT6_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5IGR4_INT6_EN_SHIFT)) & MSCM_IRCP5IGR4_INT6_EN_MASK)
#define MSCM_IRCP5IGR4_INT7_EN_MASK              (0x80U)
#define MSCM_IRCP5IGR4_INT7_EN_SHIFT             (7U)
#define MSCM_IRCP5IGR4_INT7_EN_WIDTH             (1U)
#define MSCM_IRCP5IGR4_INT7_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5IGR4_INT7_EN_SHIFT)) & MSCM_IRCP5IGR4_INT7_EN_MASK)
#define MSCM_IRCP5IGR4_INT8_EN_MASK              (0x100U)
#define MSCM_IRCP5IGR4_INT8_EN_SHIFT             (8U)
#define MSCM_IRCP5IGR4_INT8_EN_WIDTH             (1U)
#define MSCM_IRCP5IGR4_INT8_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5IGR4_INT8_EN_SHIFT)) & MSCM_IRCP5IGR4_INT8_EN_MASK)
#define MSCM_IRCP5IGR4_INT9_EN_MASK              (0x200U)
#define MSCM_IRCP5IGR4_INT9_EN_SHIFT             (9U)
#define MSCM_IRCP5IGR4_INT9_EN_WIDTH             (1U)
#define MSCM_IRCP5IGR4_INT9_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5IGR4_INT9_EN_SHIFT)) & MSCM_IRCP5IGR4_INT9_EN_MASK)
#define MSCM_IRCP5IGR4_INT10_EN_MASK             (0x400U)
#define MSCM_IRCP5IGR4_INT10_EN_SHIFT            (10U)
#define MSCM_IRCP5IGR4_INT10_EN_WIDTH            (1U)
#define MSCM_IRCP5IGR4_INT10_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5IGR4_INT10_EN_SHIFT)) & MSCM_IRCP5IGR4_INT10_EN_MASK)
#define MSCM_IRCP5IGR4_INT11_EN_MASK             (0x800U)
#define MSCM_IRCP5IGR4_INT11_EN_SHIFT            (11U)
#define MSCM_IRCP5IGR4_INT11_EN_WIDTH            (1U)
#define MSCM_IRCP5IGR4_INT11_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5IGR4_INT11_EN_SHIFT)) & MSCM_IRCP5IGR4_INT11_EN_MASK)
#define MSCM_IRCP5IGR4_INT12_EN_MASK             (0x1000U)
#define MSCM_IRCP5IGR4_INT12_EN_SHIFT            (12U)
#define MSCM_IRCP5IGR4_INT12_EN_WIDTH            (1U)
#define MSCM_IRCP5IGR4_INT12_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5IGR4_INT12_EN_SHIFT)) & MSCM_IRCP5IGR4_INT12_EN_MASK)
#define MSCM_IRCP5IGR4_INT13_EN_MASK             (0x2000U)
#define MSCM_IRCP5IGR4_INT13_EN_SHIFT            (13U)
#define MSCM_IRCP5IGR4_INT13_EN_WIDTH            (1U)
#define MSCM_IRCP5IGR4_INT13_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5IGR4_INT13_EN_SHIFT)) & MSCM_IRCP5IGR4_INT13_EN_MASK)
#define MSCM_IRCP5IGR4_INT14_EN_MASK             (0x4000U)
#define MSCM_IRCP5IGR4_INT14_EN_SHIFT            (14U)
#define MSCM_IRCP5IGR4_INT14_EN_WIDTH            (1U)
#define MSCM_IRCP5IGR4_INT14_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5IGR4_INT14_EN_SHIFT)) & MSCM_IRCP5IGR4_INT14_EN_MASK)
#define MSCM_IRCP5IGR4_INT15_EN_MASK             (0x8000U)
#define MSCM_IRCP5IGR4_INT15_EN_SHIFT            (15U)
#define MSCM_IRCP5IGR4_INT15_EN_WIDTH            (1U)
#define MSCM_IRCP5IGR4_INT15_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP5IGR4_INT15_EN_SHIFT)) & MSCM_IRCP5IGR4_INT15_EN_MASK)
/*! @} */

/*! @name IRCP6ISR4 - Interrupt Router CPn Interruptx Status Register */
/*! @{ */
#define MSCM_IRCP6ISR4_PCIE_INT0_MASK            (0x1U)
#define MSCM_IRCP6ISR4_PCIE_INT0_SHIFT           (0U)
#define MSCM_IRCP6ISR4_PCIE_INT0_WIDTH           (1U)
#define MSCM_IRCP6ISR4_PCIE_INT0(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6ISR4_PCIE_INT0_SHIFT)) & MSCM_IRCP6ISR4_PCIE_INT0_MASK)
#define MSCM_IRCP6ISR4_PCIE_INT1_MASK            (0x2U)
#define MSCM_IRCP6ISR4_PCIE_INT1_SHIFT           (1U)
#define MSCM_IRCP6ISR4_PCIE_INT1_WIDTH           (1U)
#define MSCM_IRCP6ISR4_PCIE_INT1(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6ISR4_PCIE_INT1_SHIFT)) & MSCM_IRCP6ISR4_PCIE_INT1_MASK)
#define MSCM_IRCP6ISR4_PCIE_INT2_MASK            (0x4U)
#define MSCM_IRCP6ISR4_PCIE_INT2_SHIFT           (2U)
#define MSCM_IRCP6ISR4_PCIE_INT2_WIDTH           (1U)
#define MSCM_IRCP6ISR4_PCIE_INT2(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6ISR4_PCIE_INT2_SHIFT)) & MSCM_IRCP6ISR4_PCIE_INT2_MASK)
#define MSCM_IRCP6ISR4_PCIE_INT3_MASK            (0x8U)
#define MSCM_IRCP6ISR4_PCIE_INT3_SHIFT           (3U)
#define MSCM_IRCP6ISR4_PCIE_INT3_WIDTH           (1U)
#define MSCM_IRCP6ISR4_PCIE_INT3(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6ISR4_PCIE_INT3_SHIFT)) & MSCM_IRCP6ISR4_PCIE_INT3_MASK)
#define MSCM_IRCP6ISR4_PCIE_INT4_MASK            (0x10U)
#define MSCM_IRCP6ISR4_PCIE_INT4_SHIFT           (4U)
#define MSCM_IRCP6ISR4_PCIE_INT4_WIDTH           (1U)
#define MSCM_IRCP6ISR4_PCIE_INT4(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6ISR4_PCIE_INT4_SHIFT)) & MSCM_IRCP6ISR4_PCIE_INT4_MASK)
#define MSCM_IRCP6ISR4_PCIE_INT5_MASK            (0x20U)
#define MSCM_IRCP6ISR4_PCIE_INT5_SHIFT           (5U)
#define MSCM_IRCP6ISR4_PCIE_INT5_WIDTH           (1U)
#define MSCM_IRCP6ISR4_PCIE_INT5(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6ISR4_PCIE_INT5_SHIFT)) & MSCM_IRCP6ISR4_PCIE_INT5_MASK)
#define MSCM_IRCP6ISR4_PCIE_INT6_MASK            (0x40U)
#define MSCM_IRCP6ISR4_PCIE_INT6_SHIFT           (6U)
#define MSCM_IRCP6ISR4_PCIE_INT6_WIDTH           (1U)
#define MSCM_IRCP6ISR4_PCIE_INT6(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6ISR4_PCIE_INT6_SHIFT)) & MSCM_IRCP6ISR4_PCIE_INT6_MASK)
#define MSCM_IRCP6ISR4_PCIE_INT7_MASK            (0x80U)
#define MSCM_IRCP6ISR4_PCIE_INT7_SHIFT           (7U)
#define MSCM_IRCP6ISR4_PCIE_INT7_WIDTH           (1U)
#define MSCM_IRCP6ISR4_PCIE_INT7(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6ISR4_PCIE_INT7_SHIFT)) & MSCM_IRCP6ISR4_PCIE_INT7_MASK)
#define MSCM_IRCP6ISR4_PCIE_INT8_MASK            (0x100U)
#define MSCM_IRCP6ISR4_PCIE_INT8_SHIFT           (8U)
#define MSCM_IRCP6ISR4_PCIE_INT8_WIDTH           (1U)
#define MSCM_IRCP6ISR4_PCIE_INT8(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6ISR4_PCIE_INT8_SHIFT)) & MSCM_IRCP6ISR4_PCIE_INT8_MASK)
#define MSCM_IRCP6ISR4_PCIE_INT9_MASK            (0x200U)
#define MSCM_IRCP6ISR4_PCIE_INT9_SHIFT           (9U)
#define MSCM_IRCP6ISR4_PCIE_INT9_WIDTH           (1U)
#define MSCM_IRCP6ISR4_PCIE_INT9(x)              (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6ISR4_PCIE_INT9_SHIFT)) & MSCM_IRCP6ISR4_PCIE_INT9_MASK)
#define MSCM_IRCP6ISR4_PCIE_INT10_MASK           (0x400U)
#define MSCM_IRCP6ISR4_PCIE_INT10_SHIFT          (10U)
#define MSCM_IRCP6ISR4_PCIE_INT10_WIDTH          (1U)
#define MSCM_IRCP6ISR4_PCIE_INT10(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6ISR4_PCIE_INT10_SHIFT)) & MSCM_IRCP6ISR4_PCIE_INT10_MASK)
#define MSCM_IRCP6ISR4_PCIE_INT11_MASK           (0x800U)
#define MSCM_IRCP6ISR4_PCIE_INT11_SHIFT          (11U)
#define MSCM_IRCP6ISR4_PCIE_INT11_WIDTH          (1U)
#define MSCM_IRCP6ISR4_PCIE_INT11(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6ISR4_PCIE_INT11_SHIFT)) & MSCM_IRCP6ISR4_PCIE_INT11_MASK)
#define MSCM_IRCP6ISR4_PCIE_INT12_MASK           (0x1000U)
#define MSCM_IRCP6ISR4_PCIE_INT12_SHIFT          (12U)
#define MSCM_IRCP6ISR4_PCIE_INT12_WIDTH          (1U)
#define MSCM_IRCP6ISR4_PCIE_INT12(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6ISR4_PCIE_INT12_SHIFT)) & MSCM_IRCP6ISR4_PCIE_INT12_MASK)
#define MSCM_IRCP6ISR4_PCIE_INT13_MASK           (0x2000U)
#define MSCM_IRCP6ISR4_PCIE_INT13_SHIFT          (13U)
#define MSCM_IRCP6ISR4_PCIE_INT13_WIDTH          (1U)
#define MSCM_IRCP6ISR4_PCIE_INT13(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6ISR4_PCIE_INT13_SHIFT)) & MSCM_IRCP6ISR4_PCIE_INT13_MASK)
#define MSCM_IRCP6ISR4_PCIE_INT14_MASK           (0x4000U)
#define MSCM_IRCP6ISR4_PCIE_INT14_SHIFT          (14U)
#define MSCM_IRCP6ISR4_PCIE_INT14_WIDTH          (1U)
#define MSCM_IRCP6ISR4_PCIE_INT14(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6ISR4_PCIE_INT14_SHIFT)) & MSCM_IRCP6ISR4_PCIE_INT14_MASK)
#define MSCM_IRCP6ISR4_PCIE_INT15_MASK           (0x8000U)
#define MSCM_IRCP6ISR4_PCIE_INT15_SHIFT          (15U)
#define MSCM_IRCP6ISR4_PCIE_INT15_WIDTH          (1U)
#define MSCM_IRCP6ISR4_PCIE_INT15(x)             (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6ISR4_PCIE_INT15_SHIFT)) & MSCM_IRCP6ISR4_PCIE_INT15_MASK)
/*! @} */

/*! @name IRCP6IGR4 - Interrupt Router CPn Interruptx Generation Register */
/*! @{ */
#define MSCM_IRCP6IGR4_INT0_EN_MASK              (0x1U)
#define MSCM_IRCP6IGR4_INT0_EN_SHIFT             (0U)
#define MSCM_IRCP6IGR4_INT0_EN_WIDTH             (1U)
#define MSCM_IRCP6IGR4_INT0_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6IGR4_INT0_EN_SHIFT)) & MSCM_IRCP6IGR4_INT0_EN_MASK)
#define MSCM_IRCP6IGR4_INT1_EN_MASK              (0x2U)
#define MSCM_IRCP6IGR4_INT1_EN_SHIFT             (1U)
#define MSCM_IRCP6IGR4_INT1_EN_WIDTH             (1U)
#define MSCM_IRCP6IGR4_INT1_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6IGR4_INT1_EN_SHIFT)) & MSCM_IRCP6IGR4_INT1_EN_MASK)
#define MSCM_IRCP6IGR4_INT2_EN_MASK              (0x4U)
#define MSCM_IRCP6IGR4_INT2_EN_SHIFT             (2U)
#define MSCM_IRCP6IGR4_INT2_EN_WIDTH             (1U)
#define MSCM_IRCP6IGR4_INT2_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6IGR4_INT2_EN_SHIFT)) & MSCM_IRCP6IGR4_INT2_EN_MASK)
#define MSCM_IRCP6IGR4_INT3_EN_MASK              (0x8U)
#define MSCM_IRCP6IGR4_INT3_EN_SHIFT             (3U)
#define MSCM_IRCP6IGR4_INT3_EN_WIDTH             (1U)
#define MSCM_IRCP6IGR4_INT3_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6IGR4_INT3_EN_SHIFT)) & MSCM_IRCP6IGR4_INT3_EN_MASK)
#define MSCM_IRCP6IGR4_INT4_EN_MASK              (0x10U)
#define MSCM_IRCP6IGR4_INT4_EN_SHIFT             (4U)
#define MSCM_IRCP6IGR4_INT4_EN_WIDTH             (1U)
#define MSCM_IRCP6IGR4_INT4_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6IGR4_INT4_EN_SHIFT)) & MSCM_IRCP6IGR4_INT4_EN_MASK)
#define MSCM_IRCP6IGR4_INT5_EN_MASK              (0x20U)
#define MSCM_IRCP6IGR4_INT5_EN_SHIFT             (5U)
#define MSCM_IRCP6IGR4_INT5_EN_WIDTH             (1U)
#define MSCM_IRCP6IGR4_INT5_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6IGR4_INT5_EN_SHIFT)) & MSCM_IRCP6IGR4_INT5_EN_MASK)
#define MSCM_IRCP6IGR4_INT6_EN_MASK              (0x40U)
#define MSCM_IRCP6IGR4_INT6_EN_SHIFT             (6U)
#define MSCM_IRCP6IGR4_INT6_EN_WIDTH             (1U)
#define MSCM_IRCP6IGR4_INT6_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6IGR4_INT6_EN_SHIFT)) & MSCM_IRCP6IGR4_INT6_EN_MASK)
#define MSCM_IRCP6IGR4_INT7_EN_MASK              (0x80U)
#define MSCM_IRCP6IGR4_INT7_EN_SHIFT             (7U)
#define MSCM_IRCP6IGR4_INT7_EN_WIDTH             (1U)
#define MSCM_IRCP6IGR4_INT7_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6IGR4_INT7_EN_SHIFT)) & MSCM_IRCP6IGR4_INT7_EN_MASK)
#define MSCM_IRCP6IGR4_INT8_EN_MASK              (0x100U)
#define MSCM_IRCP6IGR4_INT8_EN_SHIFT             (8U)
#define MSCM_IRCP6IGR4_INT8_EN_WIDTH             (1U)
#define MSCM_IRCP6IGR4_INT8_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6IGR4_INT8_EN_SHIFT)) & MSCM_IRCP6IGR4_INT8_EN_MASK)
#define MSCM_IRCP6IGR4_INT9_EN_MASK              (0x200U)
#define MSCM_IRCP6IGR4_INT9_EN_SHIFT             (9U)
#define MSCM_IRCP6IGR4_INT9_EN_WIDTH             (1U)
#define MSCM_IRCP6IGR4_INT9_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6IGR4_INT9_EN_SHIFT)) & MSCM_IRCP6IGR4_INT9_EN_MASK)
#define MSCM_IRCP6IGR4_INT10_EN_MASK             (0x400U)
#define MSCM_IRCP6IGR4_INT10_EN_SHIFT            (10U)
#define MSCM_IRCP6IGR4_INT10_EN_WIDTH            (1U)
#define MSCM_IRCP6IGR4_INT10_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6IGR4_INT10_EN_SHIFT)) & MSCM_IRCP6IGR4_INT10_EN_MASK)
#define MSCM_IRCP6IGR4_INT11_EN_MASK             (0x800U)
#define MSCM_IRCP6IGR4_INT11_EN_SHIFT            (11U)
#define MSCM_IRCP6IGR4_INT11_EN_WIDTH            (1U)
#define MSCM_IRCP6IGR4_INT11_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6IGR4_INT11_EN_SHIFT)) & MSCM_IRCP6IGR4_INT11_EN_MASK)
#define MSCM_IRCP6IGR4_INT12_EN_MASK             (0x1000U)
#define MSCM_IRCP6IGR4_INT12_EN_SHIFT            (12U)
#define MSCM_IRCP6IGR4_INT12_EN_WIDTH            (1U)
#define MSCM_IRCP6IGR4_INT12_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6IGR4_INT12_EN_SHIFT)) & MSCM_IRCP6IGR4_INT12_EN_MASK)
#define MSCM_IRCP6IGR4_INT13_EN_MASK             (0x2000U)
#define MSCM_IRCP6IGR4_INT13_EN_SHIFT            (13U)
#define MSCM_IRCP6IGR4_INT13_EN_WIDTH            (1U)
#define MSCM_IRCP6IGR4_INT13_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6IGR4_INT13_EN_SHIFT)) & MSCM_IRCP6IGR4_INT13_EN_MASK)
#define MSCM_IRCP6IGR4_INT14_EN_MASK             (0x4000U)
#define MSCM_IRCP6IGR4_INT14_EN_SHIFT            (14U)
#define MSCM_IRCP6IGR4_INT14_EN_WIDTH            (1U)
#define MSCM_IRCP6IGR4_INT14_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6IGR4_INT14_EN_SHIFT)) & MSCM_IRCP6IGR4_INT14_EN_MASK)
#define MSCM_IRCP6IGR4_INT15_EN_MASK             (0x8000U)
#define MSCM_IRCP6IGR4_INT15_EN_SHIFT            (15U)
#define MSCM_IRCP6IGR4_INT15_EN_WIDTH            (1U)
#define MSCM_IRCP6IGR4_INT15_EN(x)               (((uint32_t)(((uint32_t)(x)) << MSCM_IRCP6IGR4_INT15_EN_SHIFT)) & MSCM_IRCP6IGR4_INT15_EN_MASK)
/*! @} */

/*! @name IRCPCFG - Interrupt Router Configuration Register */
/*! @{ */
#define MSCM_IRCPCFG_CP0_TR_MASK                 (0x1U)
#define MSCM_IRCPCFG_CP0_TR_SHIFT                (0U)
#define MSCM_IRCPCFG_CP0_TR_WIDTH                (1U)
#define MSCM_IRCPCFG_CP0_TR(x)                   (((uint32_t)(((uint32_t)(x)) << MSCM_IRCPCFG_CP0_TR_SHIFT)) & MSCM_IRCPCFG_CP0_TR_MASK)
#define MSCM_IRCPCFG_CP1_TR_MASK                 (0x2U)
#define MSCM_IRCPCFG_CP1_TR_SHIFT                (1U)
#define MSCM_IRCPCFG_CP1_TR_WIDTH                (1U)
#define MSCM_IRCPCFG_CP1_TR(x)                   (((uint32_t)(((uint32_t)(x)) << MSCM_IRCPCFG_CP1_TR_SHIFT)) & MSCM_IRCPCFG_CP1_TR_MASK)
#define MSCM_IRCPCFG_CP2_TR_MASK                 (0x4U)
#define MSCM_IRCPCFG_CP2_TR_SHIFT                (2U)
#define MSCM_IRCPCFG_CP2_TR_WIDTH                (1U)
#define MSCM_IRCPCFG_CP2_TR(x)                   (((uint32_t)(((uint32_t)(x)) << MSCM_IRCPCFG_CP2_TR_SHIFT)) & MSCM_IRCPCFG_CP2_TR_MASK)
#define MSCM_IRCPCFG_CP3_TR_MASK                 (0x8U)
#define MSCM_IRCPCFG_CP3_TR_SHIFT                (3U)
#define MSCM_IRCPCFG_CP3_TR_WIDTH                (1U)
#define MSCM_IRCPCFG_CP3_TR(x)                   (((uint32_t)(((uint32_t)(x)) << MSCM_IRCPCFG_CP3_TR_SHIFT)) & MSCM_IRCPCFG_CP3_TR_MASK)
#define MSCM_IRCPCFG_CP4_TR_MASK                 (0x10U)
#define MSCM_IRCPCFG_CP4_TR_SHIFT                (4U)
#define MSCM_IRCPCFG_CP4_TR_WIDTH                (1U)
#define MSCM_IRCPCFG_CP4_TR(x)                   (((uint32_t)(((uint32_t)(x)) << MSCM_IRCPCFG_CP4_TR_SHIFT)) & MSCM_IRCPCFG_CP4_TR_MASK)
#define MSCM_IRCPCFG_CP5_TR_MASK                 (0x20U)
#define MSCM_IRCPCFG_CP5_TR_SHIFT                (5U)
#define MSCM_IRCPCFG_CP5_TR_WIDTH                (1U)
#define MSCM_IRCPCFG_CP5_TR(x)                   (((uint32_t)(((uint32_t)(x)) << MSCM_IRCPCFG_CP5_TR_SHIFT)) & MSCM_IRCPCFG_CP5_TR_MASK)
#define MSCM_IRCPCFG_CP6_TR_MASK                 (0x40U)
#define MSCM_IRCPCFG_CP6_TR_SHIFT                (6U)
#define MSCM_IRCPCFG_CP6_TR_WIDTH                (1U)
#define MSCM_IRCPCFG_CP6_TR(x)                   (((uint32_t)(((uint32_t)(x)) << MSCM_IRCPCFG_CP6_TR_SHIFT)) & MSCM_IRCPCFG_CP6_TR_MASK)
#define MSCM_IRCPCFG_LOCK_MASK                   (0x80000000U)
#define MSCM_IRCPCFG_LOCK_SHIFT                  (31U)
#define MSCM_IRCPCFG_LOCK_WIDTH                  (1U)
#define MSCM_IRCPCFG_LOCK(x)                     (((uint32_t)(((uint32_t)(x)) << MSCM_IRCPCFG_LOCK_SHIFT)) & MSCM_IRCPCFG_LOCK_MASK)
/*! @} */

/*! @name IRNMIC - Interrupt Router Non-Maskable Interrupt Control Register */
/*! @{ */
#define MSCM_IRNMIC_CP0_NMI_EN_MASK              (0x1U)
#define MSCM_IRNMIC_CP0_NMI_EN_SHIFT             (0U)
#define MSCM_IRNMIC_CP0_NMI_EN_WIDTH             (1U)
#define MSCM_IRNMIC_CP0_NMI_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRNMIC_CP0_NMI_EN_SHIFT)) & MSCM_IRNMIC_CP0_NMI_EN_MASK)
#define MSCM_IRNMIC_CP1_NMI_EN_MASK              (0x2U)
#define MSCM_IRNMIC_CP1_NMI_EN_SHIFT             (1U)
#define MSCM_IRNMIC_CP1_NMI_EN_WIDTH             (1U)
#define MSCM_IRNMIC_CP1_NMI_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRNMIC_CP1_NMI_EN_SHIFT)) & MSCM_IRNMIC_CP1_NMI_EN_MASK)
#define MSCM_IRNMIC_CP2_NMI_EN_MASK              (0x4U)
#define MSCM_IRNMIC_CP2_NMI_EN_SHIFT             (2U)
#define MSCM_IRNMIC_CP2_NMI_EN_WIDTH             (1U)
#define MSCM_IRNMIC_CP2_NMI_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRNMIC_CP2_NMI_EN_SHIFT)) & MSCM_IRNMIC_CP2_NMI_EN_MASK)
#define MSCM_IRNMIC_CP3_NMI_EN_MASK              (0x8U)
#define MSCM_IRNMIC_CP3_NMI_EN_SHIFT             (3U)
#define MSCM_IRNMIC_CP3_NMI_EN_WIDTH             (1U)
#define MSCM_IRNMIC_CP3_NMI_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRNMIC_CP3_NMI_EN_SHIFT)) & MSCM_IRNMIC_CP3_NMI_EN_MASK)
#define MSCM_IRNMIC_CP4_NMI_EN_MASK              (0x10U)
#define MSCM_IRNMIC_CP4_NMI_EN_SHIFT             (4U)
#define MSCM_IRNMIC_CP4_NMI_EN_WIDTH             (1U)
#define MSCM_IRNMIC_CP4_NMI_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRNMIC_CP4_NMI_EN_SHIFT)) & MSCM_IRNMIC_CP4_NMI_EN_MASK)
#define MSCM_IRNMIC_CP5_NMI_EN_MASK              (0x20U)
#define MSCM_IRNMIC_CP5_NMI_EN_SHIFT             (5U)
#define MSCM_IRNMIC_CP5_NMI_EN_WIDTH             (1U)
#define MSCM_IRNMIC_CP5_NMI_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRNMIC_CP5_NMI_EN_SHIFT)) & MSCM_IRNMIC_CP5_NMI_EN_MASK)
#define MSCM_IRNMIC_CP6_NMI_EN_MASK              (0x40U)
#define MSCM_IRNMIC_CP6_NMI_EN_SHIFT             (6U)
#define MSCM_IRNMIC_CP6_NMI_EN_WIDTH             (1U)
#define MSCM_IRNMIC_CP6_NMI_EN(x)                (((uint32_t)(((uint32_t)(x)) << MSCM_IRNMIC_CP6_NMI_EN_SHIFT)) & MSCM_IRNMIC_CP6_NMI_EN_MASK)
/*! @} */

/*! @name IRSPRC - Interrupt Router Shared Peripheral Routing Control Register */
/*! @{ */
#define MSCM_IRSPRC_GIC500_MASK                  (0x1U)
#define MSCM_IRSPRC_GIC500_SHIFT                 (0U)
#define MSCM_IRSPRC_GIC500_WIDTH                 (1U)
#define MSCM_IRSPRC_GIC500(x)                    (((uint16_t)(((uint16_t)(x)) << MSCM_IRSPRC_GIC500_SHIFT)) & MSCM_IRSPRC_GIC500_MASK)
#define MSCM_IRSPRC_M7_0_MASK                    (0x2U)
#define MSCM_IRSPRC_M7_0_SHIFT                   (1U)
#define MSCM_IRSPRC_M7_0_WIDTH                   (1U)
#define MSCM_IRSPRC_M7_0(x)                      (((uint16_t)(((uint16_t)(x)) << MSCM_IRSPRC_M7_0_SHIFT)) & MSCM_IRSPRC_M7_0_MASK)
#define MSCM_IRSPRC_M7_1_MASK                    (0x4U)
#define MSCM_IRSPRC_M7_1_SHIFT                   (2U)
#define MSCM_IRSPRC_M7_1_WIDTH                   (1U)
#define MSCM_IRSPRC_M7_1(x)                      (((uint16_t)(((uint16_t)(x)) << MSCM_IRSPRC_M7_1_SHIFT)) & MSCM_IRSPRC_M7_1_MASK)
#define MSCM_IRSPRC_M7_2_MASK                    (0x8U)
#define MSCM_IRSPRC_M7_2_SHIFT                   (3U)
#define MSCM_IRSPRC_M7_2_WIDTH                   (1U)
#define MSCM_IRSPRC_M7_2(x)                      (((uint16_t)(((uint16_t)(x)) << MSCM_IRSPRC_M7_2_SHIFT)) & MSCM_IRSPRC_M7_2_MASK)
#define MSCM_IRSPRC_LOCK_MASK                    (0x8000U)
#define MSCM_IRSPRC_LOCK_SHIFT                   (15U)
#define MSCM_IRSPRC_LOCK_WIDTH                   (1U)
#define MSCM_IRSPRC_LOCK(x)                      (((uint16_t)(((uint16_t)(x)) << MSCM_IRSPRC_LOCK_SHIFT)) & MSCM_IRSPRC_LOCK_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group MSCM_Register_Masks */


/*!
 * @}
 */ /* end of group MSCM_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- MTR Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup MTR_Peripheral_Access_Layer MTR Peripheral Access Layer
 * @{
 */

/** MTR - Register Layout Typedef */
typedef struct {
  uint8_t RESERVED_0[120];
  __I  uint32_t EFD;                               /**< ECC Fail Detection Register, offset: 0x78 */
  uint8_t RESERVED_1[60];
  __I  uint32_t BSTAT;                             /**< BIST Status Register, offset: 0xB8 */
} MTR_Type, *MTR_MemMapPtr;

/** Number of instances of the MTR module. */
#define MTR_INSTANCE_COUNT                       (1u)

/* MTR - Peripheral instance base addresses */
/** Peripheral MTR_BIST base address */
#define MTR_BIST_BASE                            (0u)
/** Peripheral MTR_BIST base pointer */
#define MTR_BIST                                 ((MTR_Type *)MTR_BIST_BASE)
/** Array initializer of MTR peripheral base addresses */
#define MTR_BASE_ADDRS                           { MTR_BIST_BASE }
/** Array initializer of MTR peripheral base pointers */
#define MTR_BASE_PTRS                            { MTR_BIST }

/* ----------------------------------------------------------------------------
   -- MTR Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup MTR_Register_Masks MTR Register Masks
 * @{
 */

/*! @name EFD - ECC Fail Detection Register */
/*! @{ */
#define MTR_EFD_EFD0_MASK                        (0x1U)
#define MTR_EFD_EFD0_SHIFT                       (0U)
#define MTR_EFD_EFD0_WIDTH                       (1U)
#define MTR_EFD_EFD0(x)                          (((uint32_t)(((uint32_t)(x)) << MTR_EFD_EFD0_SHIFT)) & MTR_EFD_EFD0_MASK)
#define MTR_EFD_EFD1_MASK                        (0x2U)
#define MTR_EFD_EFD1_SHIFT                       (1U)
#define MTR_EFD_EFD1_WIDTH                       (1U)
#define MTR_EFD_EFD1(x)                          (((uint32_t)(((uint32_t)(x)) << MTR_EFD_EFD1_SHIFT)) & MTR_EFD_EFD1_MASK)
#define MTR_EFD_EFD2_MASK                        (0x4U)
#define MTR_EFD_EFD2_SHIFT                       (2U)
#define MTR_EFD_EFD2_WIDTH                       (1U)
#define MTR_EFD_EFD2(x)                          (((uint32_t)(((uint32_t)(x)) << MTR_EFD_EFD2_SHIFT)) & MTR_EFD_EFD2_MASK)
#define MTR_EFD_EFD3_MASK                        (0x8U)
#define MTR_EFD_EFD3_SHIFT                       (3U)
#define MTR_EFD_EFD3_WIDTH                       (1U)
#define MTR_EFD_EFD3(x)                          (((uint32_t)(((uint32_t)(x)) << MTR_EFD_EFD3_SHIFT)) & MTR_EFD_EFD3_MASK)
#define MTR_EFD_EFD4_MASK                        (0x10U)
#define MTR_EFD_EFD4_SHIFT                       (4U)
#define MTR_EFD_EFD4_WIDTH                       (1U)
#define MTR_EFD_EFD4(x)                          (((uint32_t)(((uint32_t)(x)) << MTR_EFD_EFD4_SHIFT)) & MTR_EFD_EFD4_MASK)
#define MTR_EFD_EFD5_MASK                        (0x20U)
#define MTR_EFD_EFD5_SHIFT                       (5U)
#define MTR_EFD_EFD5_WIDTH                       (1U)
#define MTR_EFD_EFD5(x)                          (((uint32_t)(((uint32_t)(x)) << MTR_EFD_EFD5_SHIFT)) & MTR_EFD_EFD5_MASK)
#define MTR_EFD_EFD6_MASK                        (0x40U)
#define MTR_EFD_EFD6_SHIFT                       (6U)
#define MTR_EFD_EFD6_WIDTH                       (1U)
#define MTR_EFD_EFD6(x)                          (((uint32_t)(((uint32_t)(x)) << MTR_EFD_EFD6_SHIFT)) & MTR_EFD_EFD6_MASK)
#define MTR_EFD_EFD7_MASK                        (0x80U)
#define MTR_EFD_EFD7_SHIFT                       (7U)
#define MTR_EFD_EFD7_WIDTH                       (1U)
#define MTR_EFD_EFD7(x)                          (((uint32_t)(((uint32_t)(x)) << MTR_EFD_EFD7_SHIFT)) & MTR_EFD_EFD7_MASK)
#define MTR_EFD_EFD8_MASK                        (0x100U)
#define MTR_EFD_EFD8_SHIFT                       (8U)
#define MTR_EFD_EFD8_WIDTH                       (1U)
#define MTR_EFD_EFD8(x)                          (((uint32_t)(((uint32_t)(x)) << MTR_EFD_EFD8_SHIFT)) & MTR_EFD_EFD8_MASK)
#define MTR_EFD_EFD9_MASK                        (0x200U)
#define MTR_EFD_EFD9_SHIFT                       (9U)
#define MTR_EFD_EFD9_WIDTH                       (1U)
#define MTR_EFD_EFD9(x)                          (((uint32_t)(((uint32_t)(x)) << MTR_EFD_EFD9_SHIFT)) & MTR_EFD_EFD9_MASK)
#define MTR_EFD_EFD10_MASK                       (0x400U)
#define MTR_EFD_EFD10_SHIFT                      (10U)
#define MTR_EFD_EFD10_WIDTH                      (1U)
#define MTR_EFD_EFD10(x)                         (((uint32_t)(((uint32_t)(x)) << MTR_EFD_EFD10_SHIFT)) & MTR_EFD_EFD10_MASK)
#define MTR_EFD_EFD11_MASK                       (0x800U)
#define MTR_EFD_EFD11_SHIFT                      (11U)
#define MTR_EFD_EFD11_WIDTH                      (1U)
#define MTR_EFD_EFD11(x)                         (((uint32_t)(((uint32_t)(x)) << MTR_EFD_EFD11_SHIFT)) & MTR_EFD_EFD11_MASK)
#define MTR_EFD_EFD12_MASK                       (0x1000U)
#define MTR_EFD_EFD12_SHIFT                      (12U)
#define MTR_EFD_EFD12_WIDTH                      (1U)
#define MTR_EFD_EFD12(x)                         (((uint32_t)(((uint32_t)(x)) << MTR_EFD_EFD12_SHIFT)) & MTR_EFD_EFD12_MASK)
#define MTR_EFD_EFD13_MASK                       (0x2000U)
#define MTR_EFD_EFD13_SHIFT                      (13U)
#define MTR_EFD_EFD13_WIDTH                      (1U)
#define MTR_EFD_EFD13(x)                         (((uint32_t)(((uint32_t)(x)) << MTR_EFD_EFD13_SHIFT)) & MTR_EFD_EFD13_MASK)
#define MTR_EFD_EFD14_MASK                       (0x4000U)
#define MTR_EFD_EFD14_SHIFT                      (14U)
#define MTR_EFD_EFD14_WIDTH                      (1U)
#define MTR_EFD_EFD14(x)                         (((uint32_t)(((uint32_t)(x)) << MTR_EFD_EFD14_SHIFT)) & MTR_EFD_EFD14_MASK)
#define MTR_EFD_EFD15_MASK                       (0x8000U)
#define MTR_EFD_EFD15_SHIFT                      (15U)
#define MTR_EFD_EFD15_WIDTH                      (1U)
#define MTR_EFD_EFD15(x)                         (((uint32_t)(((uint32_t)(x)) << MTR_EFD_EFD15_SHIFT)) & MTR_EFD_EFD15_MASK)
#define MTR_EFD_EFD16_MASK                       (0x10000U)
#define MTR_EFD_EFD16_SHIFT                      (16U)
#define MTR_EFD_EFD16_WIDTH                      (1U)
#define MTR_EFD_EFD16(x)                         (((uint32_t)(((uint32_t)(x)) << MTR_EFD_EFD16_SHIFT)) & MTR_EFD_EFD16_MASK)
#define MTR_EFD_EFD17_MASK                       (0x20000U)
#define MTR_EFD_EFD17_SHIFT                      (17U)
#define MTR_EFD_EFD17_WIDTH                      (1U)
#define MTR_EFD_EFD17(x)                         (((uint32_t)(((uint32_t)(x)) << MTR_EFD_EFD17_SHIFT)) & MTR_EFD_EFD17_MASK)
#define MTR_EFD_EFD18_MASK                       (0x40000U)
#define MTR_EFD_EFD18_SHIFT                      (18U)
#define MTR_EFD_EFD18_WIDTH                      (1U)
#define MTR_EFD_EFD18(x)                         (((uint32_t)(((uint32_t)(x)) << MTR_EFD_EFD18_SHIFT)) & MTR_EFD_EFD18_MASK)
#define MTR_EFD_EFD19_MASK                       (0x80000U)
#define MTR_EFD_EFD19_SHIFT                      (19U)
#define MTR_EFD_EFD19_WIDTH                      (1U)
#define MTR_EFD_EFD19(x)                         (((uint32_t)(((uint32_t)(x)) << MTR_EFD_EFD19_SHIFT)) & MTR_EFD_EFD19_MASK)
#define MTR_EFD_EFD20_MASK                       (0x100000U)
#define MTR_EFD_EFD20_SHIFT                      (20U)
#define MTR_EFD_EFD20_WIDTH                      (1U)
#define MTR_EFD_EFD20(x)                         (((uint32_t)(((uint32_t)(x)) << MTR_EFD_EFD20_SHIFT)) & MTR_EFD_EFD20_MASK)
#define MTR_EFD_EFD21_MASK                       (0x200000U)
#define MTR_EFD_EFD21_SHIFT                      (21U)
#define MTR_EFD_EFD21_WIDTH                      (1U)
#define MTR_EFD_EFD21(x)                         (((uint32_t)(((uint32_t)(x)) << MTR_EFD_EFD21_SHIFT)) & MTR_EFD_EFD21_MASK)
#define MTR_EFD_EFD22_MASK                       (0x400000U)
#define MTR_EFD_EFD22_SHIFT                      (22U)
#define MTR_EFD_EFD22_WIDTH                      (1U)
#define MTR_EFD_EFD22(x)                         (((uint32_t)(((uint32_t)(x)) << MTR_EFD_EFD22_SHIFT)) & MTR_EFD_EFD22_MASK)
#define MTR_EFD_EFD23_MASK                       (0x800000U)
#define MTR_EFD_EFD23_SHIFT                      (23U)
#define MTR_EFD_EFD23_WIDTH                      (1U)
#define MTR_EFD_EFD23(x)                         (((uint32_t)(((uint32_t)(x)) << MTR_EFD_EFD23_SHIFT)) & MTR_EFD_EFD23_MASK)
#define MTR_EFD_EFD24_MASK                       (0x1000000U)
#define MTR_EFD_EFD24_SHIFT                      (24U)
#define MTR_EFD_EFD24_WIDTH                      (1U)
#define MTR_EFD_EFD24(x)                         (((uint32_t)(((uint32_t)(x)) << MTR_EFD_EFD24_SHIFT)) & MTR_EFD_EFD24_MASK)
#define MTR_EFD_EFD25_MASK                       (0x2000000U)
#define MTR_EFD_EFD25_SHIFT                      (25U)
#define MTR_EFD_EFD25_WIDTH                      (1U)
#define MTR_EFD_EFD25(x)                         (((uint32_t)(((uint32_t)(x)) << MTR_EFD_EFD25_SHIFT)) & MTR_EFD_EFD25_MASK)
#define MTR_EFD_EFD26_MASK                       (0x4000000U)
#define MTR_EFD_EFD26_SHIFT                      (26U)
#define MTR_EFD_EFD26_WIDTH                      (1U)
#define MTR_EFD_EFD26(x)                         (((uint32_t)(((uint32_t)(x)) << MTR_EFD_EFD26_SHIFT)) & MTR_EFD_EFD26_MASK)
#define MTR_EFD_EFD27_MASK                       (0x8000000U)
#define MTR_EFD_EFD27_SHIFT                      (27U)
#define MTR_EFD_EFD27_WIDTH                      (1U)
#define MTR_EFD_EFD27(x)                         (((uint32_t)(((uint32_t)(x)) << MTR_EFD_EFD27_SHIFT)) & MTR_EFD_EFD27_MASK)
#define MTR_EFD_EFD28_MASK                       (0x10000000U)
#define MTR_EFD_EFD28_SHIFT                      (28U)
#define MTR_EFD_EFD28_WIDTH                      (1U)
#define MTR_EFD_EFD28(x)                         (((uint32_t)(((uint32_t)(x)) << MTR_EFD_EFD28_SHIFT)) & MTR_EFD_EFD28_MASK)
#define MTR_EFD_EFD29_MASK                       (0x20000000U)
#define MTR_EFD_EFD29_SHIFT                      (29U)
#define MTR_EFD_EFD29_WIDTH                      (1U)
#define MTR_EFD_EFD29(x)                         (((uint32_t)(((uint32_t)(x)) << MTR_EFD_EFD29_SHIFT)) & MTR_EFD_EFD29_MASK)
#define MTR_EFD_EFD30_MASK                       (0x40000000U)
#define MTR_EFD_EFD30_SHIFT                      (30U)
#define MTR_EFD_EFD30_WIDTH                      (1U)
#define MTR_EFD_EFD30(x)                         (((uint32_t)(((uint32_t)(x)) << MTR_EFD_EFD30_SHIFT)) & MTR_EFD_EFD30_MASK)
#define MTR_EFD_EFD31_MASK                       (0x80000000U)
#define MTR_EFD_EFD31_SHIFT                      (31U)
#define MTR_EFD_EFD31_WIDTH                      (1U)
#define MTR_EFD_EFD31(x)                         (((uint32_t)(((uint32_t)(x)) << MTR_EFD_EFD31_SHIFT)) & MTR_EFD_EFD31_MASK)
/*! @} */

/*! @name BSTAT - BIST Status Register */
/*! @{ */
#define MTR_BSTAT_BSTAT_MASK                     (0xFU)
#define MTR_BSTAT_BSTAT_SHIFT                    (0U)
#define MTR_BSTAT_BSTAT_WIDTH                    (4U)
#define MTR_BSTAT_BSTAT(x)                       (((uint32_t)(((uint32_t)(x)) << MTR_BSTAT_BSTAT_SHIFT)) & MTR_BSTAT_BSTAT_MASK)
#define MTR_BSTAT_HOLD_ERR_MASK                  (0x20U)
#define MTR_BSTAT_HOLD_ERR_SHIFT                 (5U)
#define MTR_BSTAT_HOLD_ERR_WIDTH                 (1U)
#define MTR_BSTAT_HOLD_ERR(x)                    (((uint32_t)(((uint32_t)(x)) << MTR_BSTAT_HOLD_ERR_SHIFT)) & MTR_BSTAT_HOLD_ERR_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group MTR_Register_Masks */


/*!
 * @}
 */ /* end of group MTR_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- MU Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup MU_Peripheral_Access_Layer MU Peripheral Access Layer
 * @{
 */

/** MU - Size of Registers Arrays */
#define MU_TR_COUNT                               16u
#define MU_RR_COUNT                               16u

/** MU - Register Layout Typedef */
typedef struct {
  __I  uint32_t VER;                               /**< Version ID Register, offset: 0x0 */
  __I  uint32_t PAR;                               /**< Parameter Register, offset: 0x4 */
  __IO uint32_t CR;                                /**< Control Register, offset: 0x8 */
  __IO uint32_t SR;                                /**< Status Register, offset: 0xC */
  __IO uint32_t CCR0;                              /**< Core Control Register 0, offset: 0x10 */
  uint8_t RESERVED_0[4];
  __IO uint32_t CSSR0;                             /**< Core Sticky Status Register 0, offset: 0x18 */
  uint8_t RESERVED_1[228];
  __IO uint32_t FCR;                               /**< Flag Control Register, offset: 0x100 */
  __I  uint32_t FSR;                               /**< Flag Status Register, offset: 0x104 */
  uint8_t RESERVED_2[8];
  __IO uint32_t GIER;                              /**< General Interrupt Enable Register, offset: 0x110 */
  __IO uint32_t GCR;                               /**< General Control Register, offset: 0x114 */
  __IO uint32_t GSR;                               /**< General Status Register, offset: 0x118 */
  uint8_t RESERVED_3[4];
  __IO uint32_t TCR;                               /**< Transmit Control Register, offset: 0x120 */
  __I  uint32_t TSR;                               /**< Transmit Status Register, offset: 0x124 */
  __IO uint32_t RCR;                               /**< Receive Control Register, offset: 0x128 */
  __I  uint32_t RSR;                               /**< Receive Status Register, offset: 0x12C */
  uint8_t RESERVED_4[208];
  __IO uint32_t TR[MU_TR_COUNT];                   /**< Transmit Register, array offset: 0x200, array step: 0x4 */
  uint8_t RESERVED_5[64];
  __I  uint32_t RR[MU_RR_COUNT];                   /**< Receive Register, array offset: 0x280, array step: 0x4 */
} MU_Type, *MU_MemMapPtr;

/** Number of instances of the MU module. */
#define MU_INSTANCE_COUNT                        (8u)

/* MU - Peripheral instance base addresses */
/** Peripheral MU0__MUA base address */
#define MU0__MUA_BASE                            (0x23258000u)
/** Peripheral MU0__MUA base pointer */
#define MU0__MUA                                 ((MU_Type *)MU0__MUA_BASE)
/** Peripheral MU0__MUB base address */
#define MU0__MUB_BASE                            (0x40210000u)
/** Peripheral MU0__MUB base pointer */
#define MU0__MUB                                 ((MU_Type *)MU0__MUB_BASE)
/** Peripheral MU1__MUA base address */
#define MU1__MUA_BASE                            (0x23259000u)
/** Peripheral MU1__MUA base pointer */
#define MU1__MUA                                 ((MU_Type *)MU1__MUA_BASE)
/** Peripheral MU1__MUB base address */
#define MU1__MUB_BASE                            (0x40211000u)
/** Peripheral MU1__MUB base pointer */
#define MU1__MUB                                 ((MU_Type *)MU1__MUB_BASE)
/** Peripheral MU2__MUA base address */
#define MU2__MUA_BASE                            (0x2325A000u)
/** Peripheral MU2__MUA base pointer */
#define MU2__MUA                                 ((MU_Type *)MU2__MUA_BASE)
/** Peripheral MU2__MUB base address */
#define MU2__MUB_BASE                            (0x40212000u)
/** Peripheral MU2__MUB base pointer */
#define MU2__MUB                                 ((MU_Type *)MU2__MUB_BASE)
/** Peripheral MU3__MUA base address */
#define MU3__MUA_BASE                            (0x2325B000u)
/** Peripheral MU3__MUA base pointer */
#define MU3__MUA                                 ((MU_Type *)MU3__MUA_BASE)
/** Peripheral MU3__MUB base address */
#define MU3__MUB_BASE                            (0x40213000u)
/** Peripheral MU3__MUB base pointer */
#define MU3__MUB                                 ((MU_Type *)MU3__MUB_BASE)
/** Array initializer of MU peripheral base addresses */
#define MU_BASE_ADDRS                            { MU0__MUA_BASE, MU0__MUB_BASE, MU1__MUA_BASE, MU1__MUB_BASE, MU2__MUA_BASE, MU2__MUB_BASE, MU3__MUA_BASE, MU3__MUB_BASE }
/** Array initializer of MU peripheral base pointers */
#define MU_BASE_PTRS                             { MU0__MUA, MU0__MUB, MU1__MUA, MU1__MUB, MU2__MUA, MU2__MUB, MU3__MUA, MU3__MUB }

/* ----------------------------------------------------------------------------
   -- MU Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup MU_Register_Masks MU Register Masks
 * @{
 */

/*! @name VER - Version ID Register */
/*! @{ */
#define MU_VER_FEATURE_MASK                      (0xFFFFU)
#define MU_VER_FEATURE_SHIFT                     (0U)
#define MU_VER_FEATURE_WIDTH                     (16U)
#define MU_VER_FEATURE(x)                        (((uint32_t)(((uint32_t)(x)) << MU_VER_FEATURE_SHIFT)) & MU_VER_FEATURE_MASK)
#define MU_VER_MINOR_MASK                        (0xFF0000U)
#define MU_VER_MINOR_SHIFT                       (16U)
#define MU_VER_MINOR_WIDTH                       (8U)
#define MU_VER_MINOR(x)                          (((uint32_t)(((uint32_t)(x)) << MU_VER_MINOR_SHIFT)) & MU_VER_MINOR_MASK)
#define MU_VER_MAJOR_MASK                        (0xFF000000U)
#define MU_VER_MAJOR_SHIFT                       (24U)
#define MU_VER_MAJOR_WIDTH                       (8U)
#define MU_VER_MAJOR(x)                          (((uint32_t)(((uint32_t)(x)) << MU_VER_MAJOR_SHIFT)) & MU_VER_MAJOR_MASK)
/*! @} */

/*! @name PAR - Parameter Register */
/*! @{ */
#define MU_PAR_TR_NUM_MASK                       (0xFFU)
#define MU_PAR_TR_NUM_SHIFT                      (0U)
#define MU_PAR_TR_NUM_WIDTH                      (8U)
#define MU_PAR_TR_NUM(x)                         (((uint32_t)(((uint32_t)(x)) << MU_PAR_TR_NUM_SHIFT)) & MU_PAR_TR_NUM_MASK)
#define MU_PAR_RR_NUM_MASK                       (0xFF00U)
#define MU_PAR_RR_NUM_SHIFT                      (8U)
#define MU_PAR_RR_NUM_WIDTH                      (8U)
#define MU_PAR_RR_NUM(x)                         (((uint32_t)(((uint32_t)(x)) << MU_PAR_RR_NUM_SHIFT)) & MU_PAR_RR_NUM_MASK)
#define MU_PAR_GIR_NUM_MASK                      (0xFF0000U)
#define MU_PAR_GIR_NUM_SHIFT                     (16U)
#define MU_PAR_GIR_NUM_WIDTH                     (8U)
#define MU_PAR_GIR_NUM(x)                        (((uint32_t)(((uint32_t)(x)) << MU_PAR_GIR_NUM_SHIFT)) & MU_PAR_GIR_NUM_MASK)
#define MU_PAR_FLAG_WIDTH_MASK                   (0xFF000000U)
#define MU_PAR_FLAG_WIDTH_SHIFT                  (24U)
#define MU_PAR_FLAG_WIDTH_WIDTH                  (8U)
#define MU_PAR_FLAG_WIDTH(x)                     (((uint32_t)(((uint32_t)(x)) << MU_PAR_FLAG_WIDTH_SHIFT)) & MU_PAR_FLAG_WIDTH_MASK)
/*! @} */

/*! @name CR - Control Register */
/*! @{ */
#define MU_CR_MUR_MASK                           (0x1U)
#define MU_CR_MUR_SHIFT                          (0U)
#define MU_CR_MUR_WIDTH                          (1U)
#define MU_CR_MUR(x)                             (((uint32_t)(((uint32_t)(x)) << MU_CR_MUR_SHIFT)) & MU_CR_MUR_MASK)
#define MU_CR_MURIE_MASK                         (0x2U)
#define MU_CR_MURIE_SHIFT                        (1U)
#define MU_CR_MURIE_WIDTH                        (1U)
#define MU_CR_MURIE(x)                           (((uint32_t)(((uint32_t)(x)) << MU_CR_MURIE_SHIFT)) & MU_CR_MURIE_MASK)
/*! @} */

/*! @name SR - Status Register */
/*! @{ */
#define MU_SR_MURS_MASK                          (0x1U)
#define MU_SR_MURS_SHIFT                         (0U)
#define MU_SR_MURS_WIDTH                         (1U)
#define MU_SR_MURS(x)                            (((uint32_t)(((uint32_t)(x)) << MU_SR_MURS_SHIFT)) & MU_SR_MURS_MASK)
#define MU_SR_MURIP_MASK                         (0x2U)
#define MU_SR_MURIP_SHIFT                        (1U)
#define MU_SR_MURIP_WIDTH                        (1U)
#define MU_SR_MURIP(x)                           (((uint32_t)(((uint32_t)(x)) << MU_SR_MURIP_SHIFT)) & MU_SR_MURIP_MASK)
#define MU_SR_EP_MASK                            (0x4U)
#define MU_SR_EP_SHIFT                           (2U)
#define MU_SR_EP_WIDTH                           (1U)
#define MU_SR_EP(x)                              (((uint32_t)(((uint32_t)(x)) << MU_SR_EP_SHIFT)) & MU_SR_EP_MASK)
#define MU_SR_FUP_MASK                           (0x8U)
#define MU_SR_FUP_SHIFT                          (3U)
#define MU_SR_FUP_WIDTH                          (1U)
#define MU_SR_FUP(x)                             (((uint32_t)(((uint32_t)(x)) << MU_SR_FUP_SHIFT)) & MU_SR_FUP_MASK)
#define MU_SR_GIRP_MASK                          (0x10U)
#define MU_SR_GIRP_SHIFT                         (4U)
#define MU_SR_GIRP_WIDTH                         (1U)
#define MU_SR_GIRP(x)                            (((uint32_t)(((uint32_t)(x)) << MU_SR_GIRP_SHIFT)) & MU_SR_GIRP_MASK)
#define MU_SR_TEP_MASK                           (0x20U)
#define MU_SR_TEP_SHIFT                          (5U)
#define MU_SR_TEP_WIDTH                          (1U)
#define MU_SR_TEP(x)                             (((uint32_t)(((uint32_t)(x)) << MU_SR_TEP_SHIFT)) & MU_SR_TEP_MASK)
#define MU_SR_RFP_MASK                           (0x40U)
#define MU_SR_RFP_SHIFT                          (6U)
#define MU_SR_RFP_WIDTH                          (1U)
#define MU_SR_RFP(x)                             (((uint32_t)(((uint32_t)(x)) << MU_SR_RFP_SHIFT)) & MU_SR_RFP_MASK)
/*! @} */

/*! @name CCR0 - Core Control Register 0 */
/*! @{ */
#define MU_CCR0_NMI_MASK                         (0x1U)
#define MU_CCR0_NMI_SHIFT                        (0U)
#define MU_CCR0_NMI_WIDTH                        (1U)
#define MU_CCR0_NMI(x)                           (((uint32_t)(((uint32_t)(x)) << MU_CCR0_NMI_SHIFT)) & MU_CCR0_NMI_MASK)
/*! @} */

/*! @name CSSR0 - Core Sticky Status Register 0 */
/*! @{ */
#define MU_CSSR0_NMIC_MASK                       (0x1U)
#define MU_CSSR0_NMIC_SHIFT                      (0U)
#define MU_CSSR0_NMIC_WIDTH                      (1U)
#define MU_CSSR0_NMIC(x)                         (((uint32_t)(((uint32_t)(x)) << MU_CSSR0_NMIC_SHIFT)) & MU_CSSR0_NMIC_MASK)
/*! @} */

/*! @name FCR - Flag Control Register */
/*! @{ */
#define MU_FCR_F0_MASK                           (0x1U)
#define MU_FCR_F0_SHIFT                          (0U)
#define MU_FCR_F0_WIDTH                          (1U)
#define MU_FCR_F0(x)                             (((uint32_t)(((uint32_t)(x)) << MU_FCR_F0_SHIFT)) & MU_FCR_F0_MASK)
#define MU_FCR_F1_MASK                           (0x2U)
#define MU_FCR_F1_SHIFT                          (1U)
#define MU_FCR_F1_WIDTH                          (1U)
#define MU_FCR_F1(x)                             (((uint32_t)(((uint32_t)(x)) << MU_FCR_F1_SHIFT)) & MU_FCR_F1_MASK)
#define MU_FCR_F2_MASK                           (0x4U)
#define MU_FCR_F2_SHIFT                          (2U)
#define MU_FCR_F2_WIDTH                          (1U)
#define MU_FCR_F2(x)                             (((uint32_t)(((uint32_t)(x)) << MU_FCR_F2_SHIFT)) & MU_FCR_F2_MASK)
#define MU_FCR_F3_MASK                           (0x8U)
#define MU_FCR_F3_SHIFT                          (3U)
#define MU_FCR_F3_WIDTH                          (1U)
#define MU_FCR_F3(x)                             (((uint32_t)(((uint32_t)(x)) << MU_FCR_F3_SHIFT)) & MU_FCR_F3_MASK)
#define MU_FCR_F4_MASK                           (0x10U)
#define MU_FCR_F4_SHIFT                          (4U)
#define MU_FCR_F4_WIDTH                          (1U)
#define MU_FCR_F4(x)                             (((uint32_t)(((uint32_t)(x)) << MU_FCR_F4_SHIFT)) & MU_FCR_F4_MASK)
#define MU_FCR_F5_MASK                           (0x20U)
#define MU_FCR_F5_SHIFT                          (5U)
#define MU_FCR_F5_WIDTH                          (1U)
#define MU_FCR_F5(x)                             (((uint32_t)(((uint32_t)(x)) << MU_FCR_F5_SHIFT)) & MU_FCR_F5_MASK)
#define MU_FCR_F6_MASK                           (0x40U)
#define MU_FCR_F6_SHIFT                          (6U)
#define MU_FCR_F6_WIDTH                          (1U)
#define MU_FCR_F6(x)                             (((uint32_t)(((uint32_t)(x)) << MU_FCR_F6_SHIFT)) & MU_FCR_F6_MASK)
#define MU_FCR_F7_MASK                           (0x80U)
#define MU_FCR_F7_SHIFT                          (7U)
#define MU_FCR_F7_WIDTH                          (1U)
#define MU_FCR_F7(x)                             (((uint32_t)(((uint32_t)(x)) << MU_FCR_F7_SHIFT)) & MU_FCR_F7_MASK)
#define MU_FCR_F8_MASK                           (0x100U)
#define MU_FCR_F8_SHIFT                          (8U)
#define MU_FCR_F8_WIDTH                          (1U)
#define MU_FCR_F8(x)                             (((uint32_t)(((uint32_t)(x)) << MU_FCR_F8_SHIFT)) & MU_FCR_F8_MASK)
#define MU_FCR_F9_MASK                           (0x200U)
#define MU_FCR_F9_SHIFT                          (9U)
#define MU_FCR_F9_WIDTH                          (1U)
#define MU_FCR_F9(x)                             (((uint32_t)(((uint32_t)(x)) << MU_FCR_F9_SHIFT)) & MU_FCR_F9_MASK)
#define MU_FCR_F10_MASK                          (0x400U)
#define MU_FCR_F10_SHIFT                         (10U)
#define MU_FCR_F10_WIDTH                         (1U)
#define MU_FCR_F10(x)                            (((uint32_t)(((uint32_t)(x)) << MU_FCR_F10_SHIFT)) & MU_FCR_F10_MASK)
#define MU_FCR_F11_MASK                          (0x800U)
#define MU_FCR_F11_SHIFT                         (11U)
#define MU_FCR_F11_WIDTH                         (1U)
#define MU_FCR_F11(x)                            (((uint32_t)(((uint32_t)(x)) << MU_FCR_F11_SHIFT)) & MU_FCR_F11_MASK)
#define MU_FCR_F12_MASK                          (0x1000U)
#define MU_FCR_F12_SHIFT                         (12U)
#define MU_FCR_F12_WIDTH                         (1U)
#define MU_FCR_F12(x)                            (((uint32_t)(((uint32_t)(x)) << MU_FCR_F12_SHIFT)) & MU_FCR_F12_MASK)
#define MU_FCR_F13_MASK                          (0x2000U)
#define MU_FCR_F13_SHIFT                         (13U)
#define MU_FCR_F13_WIDTH                         (1U)
#define MU_FCR_F13(x)                            (((uint32_t)(((uint32_t)(x)) << MU_FCR_F13_SHIFT)) & MU_FCR_F13_MASK)
#define MU_FCR_F14_MASK                          (0x4000U)
#define MU_FCR_F14_SHIFT                         (14U)
#define MU_FCR_F14_WIDTH                         (1U)
#define MU_FCR_F14(x)                            (((uint32_t)(((uint32_t)(x)) << MU_FCR_F14_SHIFT)) & MU_FCR_F14_MASK)
#define MU_FCR_F15_MASK                          (0x8000U)
#define MU_FCR_F15_SHIFT                         (15U)
#define MU_FCR_F15_WIDTH                         (1U)
#define MU_FCR_F15(x)                            (((uint32_t)(((uint32_t)(x)) << MU_FCR_F15_SHIFT)) & MU_FCR_F15_MASK)
#define MU_FCR_F16_MASK                          (0x10000U)
#define MU_FCR_F16_SHIFT                         (16U)
#define MU_FCR_F16_WIDTH                         (1U)
#define MU_FCR_F16(x)                            (((uint32_t)(((uint32_t)(x)) << MU_FCR_F16_SHIFT)) & MU_FCR_F16_MASK)
#define MU_FCR_F17_MASK                          (0x20000U)
#define MU_FCR_F17_SHIFT                         (17U)
#define MU_FCR_F17_WIDTH                         (1U)
#define MU_FCR_F17(x)                            (((uint32_t)(((uint32_t)(x)) << MU_FCR_F17_SHIFT)) & MU_FCR_F17_MASK)
#define MU_FCR_F18_MASK                          (0x40000U)
#define MU_FCR_F18_SHIFT                         (18U)
#define MU_FCR_F18_WIDTH                         (1U)
#define MU_FCR_F18(x)                            (((uint32_t)(((uint32_t)(x)) << MU_FCR_F18_SHIFT)) & MU_FCR_F18_MASK)
#define MU_FCR_F19_MASK                          (0x80000U)
#define MU_FCR_F19_SHIFT                         (19U)
#define MU_FCR_F19_WIDTH                         (1U)
#define MU_FCR_F19(x)                            (((uint32_t)(((uint32_t)(x)) << MU_FCR_F19_SHIFT)) & MU_FCR_F19_MASK)
#define MU_FCR_F20_MASK                          (0x100000U)
#define MU_FCR_F20_SHIFT                         (20U)
#define MU_FCR_F20_WIDTH                         (1U)
#define MU_FCR_F20(x)                            (((uint32_t)(((uint32_t)(x)) << MU_FCR_F20_SHIFT)) & MU_FCR_F20_MASK)
#define MU_FCR_F21_MASK                          (0x200000U)
#define MU_FCR_F21_SHIFT                         (21U)
#define MU_FCR_F21_WIDTH                         (1U)
#define MU_FCR_F21(x)                            (((uint32_t)(((uint32_t)(x)) << MU_FCR_F21_SHIFT)) & MU_FCR_F21_MASK)
#define MU_FCR_F22_MASK                          (0x400000U)
#define MU_FCR_F22_SHIFT                         (22U)
#define MU_FCR_F22_WIDTH                         (1U)
#define MU_FCR_F22(x)                            (((uint32_t)(((uint32_t)(x)) << MU_FCR_F22_SHIFT)) & MU_FCR_F22_MASK)
#define MU_FCR_F23_MASK                          (0x800000U)
#define MU_FCR_F23_SHIFT                         (23U)
#define MU_FCR_F23_WIDTH                         (1U)
#define MU_FCR_F23(x)                            (((uint32_t)(((uint32_t)(x)) << MU_FCR_F23_SHIFT)) & MU_FCR_F23_MASK)
#define MU_FCR_F24_MASK                          (0x1000000U)
#define MU_FCR_F24_SHIFT                         (24U)
#define MU_FCR_F24_WIDTH                         (1U)
#define MU_FCR_F24(x)                            (((uint32_t)(((uint32_t)(x)) << MU_FCR_F24_SHIFT)) & MU_FCR_F24_MASK)
#define MU_FCR_F25_MASK                          (0x2000000U)
#define MU_FCR_F25_SHIFT                         (25U)
#define MU_FCR_F25_WIDTH                         (1U)
#define MU_FCR_F25(x)                            (((uint32_t)(((uint32_t)(x)) << MU_FCR_F25_SHIFT)) & MU_FCR_F25_MASK)
#define MU_FCR_F26_MASK                          (0x4000000U)
#define MU_FCR_F26_SHIFT                         (26U)
#define MU_FCR_F26_WIDTH                         (1U)
#define MU_FCR_F26(x)                            (((uint32_t)(((uint32_t)(x)) << MU_FCR_F26_SHIFT)) & MU_FCR_F26_MASK)
#define MU_FCR_F27_MASK                          (0x8000000U)
#define MU_FCR_F27_SHIFT                         (27U)
#define MU_FCR_F27_WIDTH                         (1U)
#define MU_FCR_F27(x)                            (((uint32_t)(((uint32_t)(x)) << MU_FCR_F27_SHIFT)) & MU_FCR_F27_MASK)
#define MU_FCR_F28_MASK                          (0x10000000U)
#define MU_FCR_F28_SHIFT                         (28U)
#define MU_FCR_F28_WIDTH                         (1U)
#define MU_FCR_F28(x)                            (((uint32_t)(((uint32_t)(x)) << MU_FCR_F28_SHIFT)) & MU_FCR_F28_MASK)
#define MU_FCR_F29_MASK                          (0x20000000U)
#define MU_FCR_F29_SHIFT                         (29U)
#define MU_FCR_F29_WIDTH                         (1U)
#define MU_FCR_F29(x)                            (((uint32_t)(((uint32_t)(x)) << MU_FCR_F29_SHIFT)) & MU_FCR_F29_MASK)
#define MU_FCR_F30_MASK                          (0x40000000U)
#define MU_FCR_F30_SHIFT                         (30U)
#define MU_FCR_F30_WIDTH                         (1U)
#define MU_FCR_F30(x)                            (((uint32_t)(((uint32_t)(x)) << MU_FCR_F30_SHIFT)) & MU_FCR_F30_MASK)
#define MU_FCR_F31_MASK                          (0x80000000U)
#define MU_FCR_F31_SHIFT                         (31U)
#define MU_FCR_F31_WIDTH                         (1U)
#define MU_FCR_F31(x)                            (((uint32_t)(((uint32_t)(x)) << MU_FCR_F31_SHIFT)) & MU_FCR_F31_MASK)
/*! @} */

/*! @name FSR - Flag Status Register */
/*! @{ */
#define MU_FSR_F0_MASK                           (0x1U)
#define MU_FSR_F0_SHIFT                          (0U)
#define MU_FSR_F0_WIDTH                          (1U)
#define MU_FSR_F0(x)                             (((uint32_t)(((uint32_t)(x)) << MU_FSR_F0_SHIFT)) & MU_FSR_F0_MASK)
#define MU_FSR_F1_MASK                           (0x2U)
#define MU_FSR_F1_SHIFT                          (1U)
#define MU_FSR_F1_WIDTH                          (1U)
#define MU_FSR_F1(x)                             (((uint32_t)(((uint32_t)(x)) << MU_FSR_F1_SHIFT)) & MU_FSR_F1_MASK)
#define MU_FSR_F2_MASK                           (0x4U)
#define MU_FSR_F2_SHIFT                          (2U)
#define MU_FSR_F2_WIDTH                          (1U)
#define MU_FSR_F2(x)                             (((uint32_t)(((uint32_t)(x)) << MU_FSR_F2_SHIFT)) & MU_FSR_F2_MASK)
#define MU_FSR_F3_MASK                           (0x8U)
#define MU_FSR_F3_SHIFT                          (3U)
#define MU_FSR_F3_WIDTH                          (1U)
#define MU_FSR_F3(x)                             (((uint32_t)(((uint32_t)(x)) << MU_FSR_F3_SHIFT)) & MU_FSR_F3_MASK)
#define MU_FSR_F4_MASK                           (0x10U)
#define MU_FSR_F4_SHIFT                          (4U)
#define MU_FSR_F4_WIDTH                          (1U)
#define MU_FSR_F4(x)                             (((uint32_t)(((uint32_t)(x)) << MU_FSR_F4_SHIFT)) & MU_FSR_F4_MASK)
#define MU_FSR_F5_MASK                           (0x20U)
#define MU_FSR_F5_SHIFT                          (5U)
#define MU_FSR_F5_WIDTH                          (1U)
#define MU_FSR_F5(x)                             (((uint32_t)(((uint32_t)(x)) << MU_FSR_F5_SHIFT)) & MU_FSR_F5_MASK)
#define MU_FSR_F6_MASK                           (0x40U)
#define MU_FSR_F6_SHIFT                          (6U)
#define MU_FSR_F6_WIDTH                          (1U)
#define MU_FSR_F6(x)                             (((uint32_t)(((uint32_t)(x)) << MU_FSR_F6_SHIFT)) & MU_FSR_F6_MASK)
#define MU_FSR_F7_MASK                           (0x80U)
#define MU_FSR_F7_SHIFT                          (7U)
#define MU_FSR_F7_WIDTH                          (1U)
#define MU_FSR_F7(x)                             (((uint32_t)(((uint32_t)(x)) << MU_FSR_F7_SHIFT)) & MU_FSR_F7_MASK)
#define MU_FSR_F8_MASK                           (0x100U)
#define MU_FSR_F8_SHIFT                          (8U)
#define MU_FSR_F8_WIDTH                          (1U)
#define MU_FSR_F8(x)                             (((uint32_t)(((uint32_t)(x)) << MU_FSR_F8_SHIFT)) & MU_FSR_F8_MASK)
#define MU_FSR_F9_MASK                           (0x200U)
#define MU_FSR_F9_SHIFT                          (9U)
#define MU_FSR_F9_WIDTH                          (1U)
#define MU_FSR_F9(x)                             (((uint32_t)(((uint32_t)(x)) << MU_FSR_F9_SHIFT)) & MU_FSR_F9_MASK)
#define MU_FSR_F10_MASK                          (0x400U)
#define MU_FSR_F10_SHIFT                         (10U)
#define MU_FSR_F10_WIDTH                         (1U)
#define MU_FSR_F10(x)                            (((uint32_t)(((uint32_t)(x)) << MU_FSR_F10_SHIFT)) & MU_FSR_F10_MASK)
#define MU_FSR_F11_MASK                          (0x800U)
#define MU_FSR_F11_SHIFT                         (11U)
#define MU_FSR_F11_WIDTH                         (1U)
#define MU_FSR_F11(x)                            (((uint32_t)(((uint32_t)(x)) << MU_FSR_F11_SHIFT)) & MU_FSR_F11_MASK)
#define MU_FSR_F12_MASK                          (0x1000U)
#define MU_FSR_F12_SHIFT                         (12U)
#define MU_FSR_F12_WIDTH                         (1U)
#define MU_FSR_F12(x)                            (((uint32_t)(((uint32_t)(x)) << MU_FSR_F12_SHIFT)) & MU_FSR_F12_MASK)
#define MU_FSR_F13_MASK                          (0x2000U)
#define MU_FSR_F13_SHIFT                         (13U)
#define MU_FSR_F13_WIDTH                         (1U)
#define MU_FSR_F13(x)                            (((uint32_t)(((uint32_t)(x)) << MU_FSR_F13_SHIFT)) & MU_FSR_F13_MASK)
#define MU_FSR_F14_MASK                          (0x4000U)
#define MU_FSR_F14_SHIFT                         (14U)
#define MU_FSR_F14_WIDTH                         (1U)
#define MU_FSR_F14(x)                            (((uint32_t)(((uint32_t)(x)) << MU_FSR_F14_SHIFT)) & MU_FSR_F14_MASK)
#define MU_FSR_F15_MASK                          (0x8000U)
#define MU_FSR_F15_SHIFT                         (15U)
#define MU_FSR_F15_WIDTH                         (1U)
#define MU_FSR_F15(x)                            (((uint32_t)(((uint32_t)(x)) << MU_FSR_F15_SHIFT)) & MU_FSR_F15_MASK)
#define MU_FSR_F16_MASK                          (0x10000U)
#define MU_FSR_F16_SHIFT                         (16U)
#define MU_FSR_F16_WIDTH                         (1U)
#define MU_FSR_F16(x)                            (((uint32_t)(((uint32_t)(x)) << MU_FSR_F16_SHIFT)) & MU_FSR_F16_MASK)
#define MU_FSR_F17_MASK                          (0x20000U)
#define MU_FSR_F17_SHIFT                         (17U)
#define MU_FSR_F17_WIDTH                         (1U)
#define MU_FSR_F17(x)                            (((uint32_t)(((uint32_t)(x)) << MU_FSR_F17_SHIFT)) & MU_FSR_F17_MASK)
#define MU_FSR_F18_MASK                          (0x40000U)
#define MU_FSR_F18_SHIFT                         (18U)
#define MU_FSR_F18_WIDTH                         (1U)
#define MU_FSR_F18(x)                            (((uint32_t)(((uint32_t)(x)) << MU_FSR_F18_SHIFT)) & MU_FSR_F18_MASK)
#define MU_FSR_F19_MASK                          (0x80000U)
#define MU_FSR_F19_SHIFT                         (19U)
#define MU_FSR_F19_WIDTH                         (1U)
#define MU_FSR_F19(x)                            (((uint32_t)(((uint32_t)(x)) << MU_FSR_F19_SHIFT)) & MU_FSR_F19_MASK)
#define MU_FSR_F20_MASK                          (0x100000U)
#define MU_FSR_F20_SHIFT                         (20U)
#define MU_FSR_F20_WIDTH                         (1U)
#define MU_FSR_F20(x)                            (((uint32_t)(((uint32_t)(x)) << MU_FSR_F20_SHIFT)) & MU_FSR_F20_MASK)
#define MU_FSR_F21_MASK                          (0x200000U)
#define MU_FSR_F21_SHIFT                         (21U)
#define MU_FSR_F21_WIDTH                         (1U)
#define MU_FSR_F21(x)                            (((uint32_t)(((uint32_t)(x)) << MU_FSR_F21_SHIFT)) & MU_FSR_F21_MASK)
#define MU_FSR_F22_MASK                          (0x400000U)
#define MU_FSR_F22_SHIFT                         (22U)
#define MU_FSR_F22_WIDTH                         (1U)
#define MU_FSR_F22(x)                            (((uint32_t)(((uint32_t)(x)) << MU_FSR_F22_SHIFT)) & MU_FSR_F22_MASK)
#define MU_FSR_F23_MASK                          (0x800000U)
#define MU_FSR_F23_SHIFT                         (23U)
#define MU_FSR_F23_WIDTH                         (1U)
#define MU_FSR_F23(x)                            (((uint32_t)(((uint32_t)(x)) << MU_FSR_F23_SHIFT)) & MU_FSR_F23_MASK)
#define MU_FSR_F24_MASK                          (0x1000000U)
#define MU_FSR_F24_SHIFT                         (24U)
#define MU_FSR_F24_WIDTH                         (1U)
#define MU_FSR_F24(x)                            (((uint32_t)(((uint32_t)(x)) << MU_FSR_F24_SHIFT)) & MU_FSR_F24_MASK)
#define MU_FSR_F25_MASK                          (0x2000000U)
#define MU_FSR_F25_SHIFT                         (25U)
#define MU_FSR_F25_WIDTH                         (1U)
#define MU_FSR_F25(x)                            (((uint32_t)(((uint32_t)(x)) << MU_FSR_F25_SHIFT)) & MU_FSR_F25_MASK)
#define MU_FSR_F26_MASK                          (0x4000000U)
#define MU_FSR_F26_SHIFT                         (26U)
#define MU_FSR_F26_WIDTH                         (1U)
#define MU_FSR_F26(x)                            (((uint32_t)(((uint32_t)(x)) << MU_FSR_F26_SHIFT)) & MU_FSR_F26_MASK)
#define MU_FSR_F27_MASK                          (0x8000000U)
#define MU_FSR_F27_SHIFT                         (27U)
#define MU_FSR_F27_WIDTH                         (1U)
#define MU_FSR_F27(x)                            (((uint32_t)(((uint32_t)(x)) << MU_FSR_F27_SHIFT)) & MU_FSR_F27_MASK)
#define MU_FSR_F28_MASK                          (0x10000000U)
#define MU_FSR_F28_SHIFT                         (28U)
#define MU_FSR_F28_WIDTH                         (1U)
#define MU_FSR_F28(x)                            (((uint32_t)(((uint32_t)(x)) << MU_FSR_F28_SHIFT)) & MU_FSR_F28_MASK)
#define MU_FSR_F29_MASK                          (0x20000000U)
#define MU_FSR_F29_SHIFT                         (29U)
#define MU_FSR_F29_WIDTH                         (1U)
#define MU_FSR_F29(x)                            (((uint32_t)(((uint32_t)(x)) << MU_FSR_F29_SHIFT)) & MU_FSR_F29_MASK)
#define MU_FSR_F30_MASK                          (0x40000000U)
#define MU_FSR_F30_SHIFT                         (30U)
#define MU_FSR_F30_WIDTH                         (1U)
#define MU_FSR_F30(x)                            (((uint32_t)(((uint32_t)(x)) << MU_FSR_F30_SHIFT)) & MU_FSR_F30_MASK)
#define MU_FSR_F31_MASK                          (0x80000000U)
#define MU_FSR_F31_SHIFT                         (31U)
#define MU_FSR_F31_WIDTH                         (1U)
#define MU_FSR_F31(x)                            (((uint32_t)(((uint32_t)(x)) << MU_FSR_F31_SHIFT)) & MU_FSR_F31_MASK)
/*! @} */

/*! @name GIER - General Interrupt Enable Register */
/*! @{ */
#define MU_GIER_GIE0_MASK                        (0x1U)
#define MU_GIER_GIE0_SHIFT                       (0U)
#define MU_GIER_GIE0_WIDTH                       (1U)
#define MU_GIER_GIE0(x)                          (((uint32_t)(((uint32_t)(x)) << MU_GIER_GIE0_SHIFT)) & MU_GIER_GIE0_MASK)
#define MU_GIER_GIE1_MASK                        (0x2U)
#define MU_GIER_GIE1_SHIFT                       (1U)
#define MU_GIER_GIE1_WIDTH                       (1U)
#define MU_GIER_GIE1(x)                          (((uint32_t)(((uint32_t)(x)) << MU_GIER_GIE1_SHIFT)) & MU_GIER_GIE1_MASK)
#define MU_GIER_GIE2_MASK                        (0x4U)
#define MU_GIER_GIE2_SHIFT                       (2U)
#define MU_GIER_GIE2_WIDTH                       (1U)
#define MU_GIER_GIE2(x)                          (((uint32_t)(((uint32_t)(x)) << MU_GIER_GIE2_SHIFT)) & MU_GIER_GIE2_MASK)
#define MU_GIER_GIE3_MASK                        (0x8U)
#define MU_GIER_GIE3_SHIFT                       (3U)
#define MU_GIER_GIE3_WIDTH                       (1U)
#define MU_GIER_GIE3(x)                          (((uint32_t)(((uint32_t)(x)) << MU_GIER_GIE3_SHIFT)) & MU_GIER_GIE3_MASK)
#define MU_GIER_GIE4_MASK                        (0x10U)
#define MU_GIER_GIE4_SHIFT                       (4U)
#define MU_GIER_GIE4_WIDTH                       (1U)
#define MU_GIER_GIE4(x)                          (((uint32_t)(((uint32_t)(x)) << MU_GIER_GIE4_SHIFT)) & MU_GIER_GIE4_MASK)
#define MU_GIER_GIE5_MASK                        (0x20U)
#define MU_GIER_GIE5_SHIFT                       (5U)
#define MU_GIER_GIE5_WIDTH                       (1U)
#define MU_GIER_GIE5(x)                          (((uint32_t)(((uint32_t)(x)) << MU_GIER_GIE5_SHIFT)) & MU_GIER_GIE5_MASK)
#define MU_GIER_GIE6_MASK                        (0x40U)
#define MU_GIER_GIE6_SHIFT                       (6U)
#define MU_GIER_GIE6_WIDTH                       (1U)
#define MU_GIER_GIE6(x)                          (((uint32_t)(((uint32_t)(x)) << MU_GIER_GIE6_SHIFT)) & MU_GIER_GIE6_MASK)
#define MU_GIER_GIE7_MASK                        (0x80U)
#define MU_GIER_GIE7_SHIFT                       (7U)
#define MU_GIER_GIE7_WIDTH                       (1U)
#define MU_GIER_GIE7(x)                          (((uint32_t)(((uint32_t)(x)) << MU_GIER_GIE7_SHIFT)) & MU_GIER_GIE7_MASK)
#define MU_GIER_GIE8_MASK                        (0x100U)
#define MU_GIER_GIE8_SHIFT                       (8U)
#define MU_GIER_GIE8_WIDTH                       (1U)
#define MU_GIER_GIE8(x)                          (((uint32_t)(((uint32_t)(x)) << MU_GIER_GIE8_SHIFT)) & MU_GIER_GIE8_MASK)
#define MU_GIER_GIE9_MASK                        (0x200U)
#define MU_GIER_GIE9_SHIFT                       (9U)
#define MU_GIER_GIE9_WIDTH                       (1U)
#define MU_GIER_GIE9(x)                          (((uint32_t)(((uint32_t)(x)) << MU_GIER_GIE9_SHIFT)) & MU_GIER_GIE9_MASK)
#define MU_GIER_GIE10_MASK                       (0x400U)
#define MU_GIER_GIE10_SHIFT                      (10U)
#define MU_GIER_GIE10_WIDTH                      (1U)
#define MU_GIER_GIE10(x)                         (((uint32_t)(((uint32_t)(x)) << MU_GIER_GIE10_SHIFT)) & MU_GIER_GIE10_MASK)
#define MU_GIER_GIE11_MASK                       (0x800U)
#define MU_GIER_GIE11_SHIFT                      (11U)
#define MU_GIER_GIE11_WIDTH                      (1U)
#define MU_GIER_GIE11(x)                         (((uint32_t)(((uint32_t)(x)) << MU_GIER_GIE11_SHIFT)) & MU_GIER_GIE11_MASK)
#define MU_GIER_GIE12_MASK                       (0x1000U)
#define MU_GIER_GIE12_SHIFT                      (12U)
#define MU_GIER_GIE12_WIDTH                      (1U)
#define MU_GIER_GIE12(x)                         (((uint32_t)(((uint32_t)(x)) << MU_GIER_GIE12_SHIFT)) & MU_GIER_GIE12_MASK)
#define MU_GIER_GIE13_MASK                       (0x2000U)
#define MU_GIER_GIE13_SHIFT                      (13U)
#define MU_GIER_GIE13_WIDTH                      (1U)
#define MU_GIER_GIE13(x)                         (((uint32_t)(((uint32_t)(x)) << MU_GIER_GIE13_SHIFT)) & MU_GIER_GIE13_MASK)
#define MU_GIER_GIE14_MASK                       (0x4000U)
#define MU_GIER_GIE14_SHIFT                      (14U)
#define MU_GIER_GIE14_WIDTH                      (1U)
#define MU_GIER_GIE14(x)                         (((uint32_t)(((uint32_t)(x)) << MU_GIER_GIE14_SHIFT)) & MU_GIER_GIE14_MASK)
#define MU_GIER_GIE15_MASK                       (0x8000U)
#define MU_GIER_GIE15_SHIFT                      (15U)
#define MU_GIER_GIE15_WIDTH                      (1U)
#define MU_GIER_GIE15(x)                         (((uint32_t)(((uint32_t)(x)) << MU_GIER_GIE15_SHIFT)) & MU_GIER_GIE15_MASK)
#define MU_GIER_GIE16_MASK                       (0x10000U)
#define MU_GIER_GIE16_SHIFT                      (16U)
#define MU_GIER_GIE16_WIDTH                      (1U)
#define MU_GIER_GIE16(x)                         (((uint32_t)(((uint32_t)(x)) << MU_GIER_GIE16_SHIFT)) & MU_GIER_GIE16_MASK)
#define MU_GIER_GIE17_MASK                       (0x20000U)
#define MU_GIER_GIE17_SHIFT                      (17U)
#define MU_GIER_GIE17_WIDTH                      (1U)
#define MU_GIER_GIE17(x)                         (((uint32_t)(((uint32_t)(x)) << MU_GIER_GIE17_SHIFT)) & MU_GIER_GIE17_MASK)
#define MU_GIER_GIE18_MASK                       (0x40000U)
#define MU_GIER_GIE18_SHIFT                      (18U)
#define MU_GIER_GIE18_WIDTH                      (1U)
#define MU_GIER_GIE18(x)                         (((uint32_t)(((uint32_t)(x)) << MU_GIER_GIE18_SHIFT)) & MU_GIER_GIE18_MASK)
#define MU_GIER_GIE19_MASK                       (0x80000U)
#define MU_GIER_GIE19_SHIFT                      (19U)
#define MU_GIER_GIE19_WIDTH                      (1U)
#define MU_GIER_GIE19(x)                         (((uint32_t)(((uint32_t)(x)) << MU_GIER_GIE19_SHIFT)) & MU_GIER_GIE19_MASK)
#define MU_GIER_GIE20_MASK                       (0x100000U)
#define MU_GIER_GIE20_SHIFT                      (20U)
#define MU_GIER_GIE20_WIDTH                      (1U)
#define MU_GIER_GIE20(x)                         (((uint32_t)(((uint32_t)(x)) << MU_GIER_GIE20_SHIFT)) & MU_GIER_GIE20_MASK)
#define MU_GIER_GIE21_MASK                       (0x200000U)
#define MU_GIER_GIE21_SHIFT                      (21U)
#define MU_GIER_GIE21_WIDTH                      (1U)
#define MU_GIER_GIE21(x)                         (((uint32_t)(((uint32_t)(x)) << MU_GIER_GIE21_SHIFT)) & MU_GIER_GIE21_MASK)
#define MU_GIER_GIE22_MASK                       (0x400000U)
#define MU_GIER_GIE22_SHIFT                      (22U)
#define MU_GIER_GIE22_WIDTH                      (1U)
#define MU_GIER_GIE22(x)                         (((uint32_t)(((uint32_t)(x)) << MU_GIER_GIE22_SHIFT)) & MU_GIER_GIE22_MASK)
#define MU_GIER_GIE23_MASK                       (0x800000U)
#define MU_GIER_GIE23_SHIFT                      (23U)
#define MU_GIER_GIE23_WIDTH                      (1U)
#define MU_GIER_GIE23(x)                         (((uint32_t)(((uint32_t)(x)) << MU_GIER_GIE23_SHIFT)) & MU_GIER_GIE23_MASK)
#define MU_GIER_GIE24_MASK                       (0x1000000U)
#define MU_GIER_GIE24_SHIFT                      (24U)
#define MU_GIER_GIE24_WIDTH                      (1U)
#define MU_GIER_GIE24(x)                         (((uint32_t)(((uint32_t)(x)) << MU_GIER_GIE24_SHIFT)) & MU_GIER_GIE24_MASK)
#define MU_GIER_GIE25_MASK                       (0x2000000U)
#define MU_GIER_GIE25_SHIFT                      (25U)
#define MU_GIER_GIE25_WIDTH                      (1U)
#define MU_GIER_GIE25(x)                         (((uint32_t)(((uint32_t)(x)) << MU_GIER_GIE25_SHIFT)) & MU_GIER_GIE25_MASK)
#define MU_GIER_GIE26_MASK                       (0x4000000U)
#define MU_GIER_GIE26_SHIFT                      (26U)
#define MU_GIER_GIE26_WIDTH                      (1U)
#define MU_GIER_GIE26(x)                         (((uint32_t)(((uint32_t)(x)) << MU_GIER_GIE26_SHIFT)) & MU_GIER_GIE26_MASK)
#define MU_GIER_GIE27_MASK                       (0x8000000U)
#define MU_GIER_GIE27_SHIFT                      (27U)
#define MU_GIER_GIE27_WIDTH                      (1U)
#define MU_GIER_GIE27(x)                         (((uint32_t)(((uint32_t)(x)) << MU_GIER_GIE27_SHIFT)) & MU_GIER_GIE27_MASK)
#define MU_GIER_GIE28_MASK                       (0x10000000U)
#define MU_GIER_GIE28_SHIFT                      (28U)
#define MU_GIER_GIE28_WIDTH                      (1U)
#define MU_GIER_GIE28(x)                         (((uint32_t)(((uint32_t)(x)) << MU_GIER_GIE28_SHIFT)) & MU_GIER_GIE28_MASK)
#define MU_GIER_GIE29_MASK                       (0x20000000U)
#define MU_GIER_GIE29_SHIFT                      (29U)
#define MU_GIER_GIE29_WIDTH                      (1U)
#define MU_GIER_GIE29(x)                         (((uint32_t)(((uint32_t)(x)) << MU_GIER_GIE29_SHIFT)) & MU_GIER_GIE29_MASK)
#define MU_GIER_GIE30_MASK                       (0x40000000U)
#define MU_GIER_GIE30_SHIFT                      (30U)
#define MU_GIER_GIE30_WIDTH                      (1U)
#define MU_GIER_GIE30(x)                         (((uint32_t)(((uint32_t)(x)) << MU_GIER_GIE30_SHIFT)) & MU_GIER_GIE30_MASK)
#define MU_GIER_GIE31_MASK                       (0x80000000U)
#define MU_GIER_GIE31_SHIFT                      (31U)
#define MU_GIER_GIE31_WIDTH                      (1U)
#define MU_GIER_GIE31(x)                         (((uint32_t)(((uint32_t)(x)) << MU_GIER_GIE31_SHIFT)) & MU_GIER_GIE31_MASK)
/*! @} */

/*! @name GCR - General Control Register */
/*! @{ */
#define MU_GCR_GIR0_MASK                         (0x1U)
#define MU_GCR_GIR0_SHIFT                        (0U)
#define MU_GCR_GIR0_WIDTH                        (1U)
#define MU_GCR_GIR0(x)                           (((uint32_t)(((uint32_t)(x)) << MU_GCR_GIR0_SHIFT)) & MU_GCR_GIR0_MASK)
#define MU_GCR_GIR1_MASK                         (0x2U)
#define MU_GCR_GIR1_SHIFT                        (1U)
#define MU_GCR_GIR1_WIDTH                        (1U)
#define MU_GCR_GIR1(x)                           (((uint32_t)(((uint32_t)(x)) << MU_GCR_GIR1_SHIFT)) & MU_GCR_GIR1_MASK)
#define MU_GCR_GIR2_MASK                         (0x4U)
#define MU_GCR_GIR2_SHIFT                        (2U)
#define MU_GCR_GIR2_WIDTH                        (1U)
#define MU_GCR_GIR2(x)                           (((uint32_t)(((uint32_t)(x)) << MU_GCR_GIR2_SHIFT)) & MU_GCR_GIR2_MASK)
#define MU_GCR_GIR3_MASK                         (0x8U)
#define MU_GCR_GIR3_SHIFT                        (3U)
#define MU_GCR_GIR3_WIDTH                        (1U)
#define MU_GCR_GIR3(x)                           (((uint32_t)(((uint32_t)(x)) << MU_GCR_GIR3_SHIFT)) & MU_GCR_GIR3_MASK)
#define MU_GCR_GIR4_MASK                         (0x10U)
#define MU_GCR_GIR4_SHIFT                        (4U)
#define MU_GCR_GIR4_WIDTH                        (1U)
#define MU_GCR_GIR4(x)                           (((uint32_t)(((uint32_t)(x)) << MU_GCR_GIR4_SHIFT)) & MU_GCR_GIR4_MASK)
#define MU_GCR_GIR5_MASK                         (0x20U)
#define MU_GCR_GIR5_SHIFT                        (5U)
#define MU_GCR_GIR5_WIDTH                        (1U)
#define MU_GCR_GIR5(x)                           (((uint32_t)(((uint32_t)(x)) << MU_GCR_GIR5_SHIFT)) & MU_GCR_GIR5_MASK)
#define MU_GCR_GIR6_MASK                         (0x40U)
#define MU_GCR_GIR6_SHIFT                        (6U)
#define MU_GCR_GIR6_WIDTH                        (1U)
#define MU_GCR_GIR6(x)                           (((uint32_t)(((uint32_t)(x)) << MU_GCR_GIR6_SHIFT)) & MU_GCR_GIR6_MASK)
#define MU_GCR_GIR7_MASK                         (0x80U)
#define MU_GCR_GIR7_SHIFT                        (7U)
#define MU_GCR_GIR7_WIDTH                        (1U)
#define MU_GCR_GIR7(x)                           (((uint32_t)(((uint32_t)(x)) << MU_GCR_GIR7_SHIFT)) & MU_GCR_GIR7_MASK)
#define MU_GCR_GIR8_MASK                         (0x100U)
#define MU_GCR_GIR8_SHIFT                        (8U)
#define MU_GCR_GIR8_WIDTH                        (1U)
#define MU_GCR_GIR8(x)                           (((uint32_t)(((uint32_t)(x)) << MU_GCR_GIR8_SHIFT)) & MU_GCR_GIR8_MASK)
#define MU_GCR_GIR9_MASK                         (0x200U)
#define MU_GCR_GIR9_SHIFT                        (9U)
#define MU_GCR_GIR9_WIDTH                        (1U)
#define MU_GCR_GIR9(x)                           (((uint32_t)(((uint32_t)(x)) << MU_GCR_GIR9_SHIFT)) & MU_GCR_GIR9_MASK)
#define MU_GCR_GIR10_MASK                        (0x400U)
#define MU_GCR_GIR10_SHIFT                       (10U)
#define MU_GCR_GIR10_WIDTH                       (1U)
#define MU_GCR_GIR10(x)                          (((uint32_t)(((uint32_t)(x)) << MU_GCR_GIR10_SHIFT)) & MU_GCR_GIR10_MASK)
#define MU_GCR_GIR11_MASK                        (0x800U)
#define MU_GCR_GIR11_SHIFT                       (11U)
#define MU_GCR_GIR11_WIDTH                       (1U)
#define MU_GCR_GIR11(x)                          (((uint32_t)(((uint32_t)(x)) << MU_GCR_GIR11_SHIFT)) & MU_GCR_GIR11_MASK)
#define MU_GCR_GIR12_MASK                        (0x1000U)
#define MU_GCR_GIR12_SHIFT                       (12U)
#define MU_GCR_GIR12_WIDTH                       (1U)
#define MU_GCR_GIR12(x)                          (((uint32_t)(((uint32_t)(x)) << MU_GCR_GIR12_SHIFT)) & MU_GCR_GIR12_MASK)
#define MU_GCR_GIR13_MASK                        (0x2000U)
#define MU_GCR_GIR13_SHIFT                       (13U)
#define MU_GCR_GIR13_WIDTH                       (1U)
#define MU_GCR_GIR13(x)                          (((uint32_t)(((uint32_t)(x)) << MU_GCR_GIR13_SHIFT)) & MU_GCR_GIR13_MASK)
#define MU_GCR_GIR14_MASK                        (0x4000U)
#define MU_GCR_GIR14_SHIFT                       (14U)
#define MU_GCR_GIR14_WIDTH                       (1U)
#define MU_GCR_GIR14(x)                          (((uint32_t)(((uint32_t)(x)) << MU_GCR_GIR14_SHIFT)) & MU_GCR_GIR14_MASK)
#define MU_GCR_GIR15_MASK                        (0x8000U)
#define MU_GCR_GIR15_SHIFT                       (15U)
#define MU_GCR_GIR15_WIDTH                       (1U)
#define MU_GCR_GIR15(x)                          (((uint32_t)(((uint32_t)(x)) << MU_GCR_GIR15_SHIFT)) & MU_GCR_GIR15_MASK)
#define MU_GCR_GIR16_MASK                        (0x10000U)
#define MU_GCR_GIR16_SHIFT                       (16U)
#define MU_GCR_GIR16_WIDTH                       (1U)
#define MU_GCR_GIR16(x)                          (((uint32_t)(((uint32_t)(x)) << MU_GCR_GIR16_SHIFT)) & MU_GCR_GIR16_MASK)
#define MU_GCR_GIR17_MASK                        (0x20000U)
#define MU_GCR_GIR17_SHIFT                       (17U)
#define MU_GCR_GIR17_WIDTH                       (1U)
#define MU_GCR_GIR17(x)                          (((uint32_t)(((uint32_t)(x)) << MU_GCR_GIR17_SHIFT)) & MU_GCR_GIR17_MASK)
#define MU_GCR_GIR18_MASK                        (0x40000U)
#define MU_GCR_GIR18_SHIFT                       (18U)
#define MU_GCR_GIR18_WIDTH                       (1U)
#define MU_GCR_GIR18(x)                          (((uint32_t)(((uint32_t)(x)) << MU_GCR_GIR18_SHIFT)) & MU_GCR_GIR18_MASK)
#define MU_GCR_GIR19_MASK                        (0x80000U)
#define MU_GCR_GIR19_SHIFT                       (19U)
#define MU_GCR_GIR19_WIDTH                       (1U)
#define MU_GCR_GIR19(x)                          (((uint32_t)(((uint32_t)(x)) << MU_GCR_GIR19_SHIFT)) & MU_GCR_GIR19_MASK)
#define MU_GCR_GIR20_MASK                        (0x100000U)
#define MU_GCR_GIR20_SHIFT                       (20U)
#define MU_GCR_GIR20_WIDTH                       (1U)
#define MU_GCR_GIR20(x)                          (((uint32_t)(((uint32_t)(x)) << MU_GCR_GIR20_SHIFT)) & MU_GCR_GIR20_MASK)
#define MU_GCR_GIR21_MASK                        (0x200000U)
#define MU_GCR_GIR21_SHIFT                       (21U)
#define MU_GCR_GIR21_WIDTH                       (1U)
#define MU_GCR_GIR21(x)                          (((uint32_t)(((uint32_t)(x)) << MU_GCR_GIR21_SHIFT)) & MU_GCR_GIR21_MASK)
#define MU_GCR_GIR22_MASK                        (0x400000U)
#define MU_GCR_GIR22_SHIFT                       (22U)
#define MU_GCR_GIR22_WIDTH                       (1U)
#define MU_GCR_GIR22(x)                          (((uint32_t)(((uint32_t)(x)) << MU_GCR_GIR22_SHIFT)) & MU_GCR_GIR22_MASK)
#define MU_GCR_GIR23_MASK                        (0x800000U)
#define MU_GCR_GIR23_SHIFT                       (23U)
#define MU_GCR_GIR23_WIDTH                       (1U)
#define MU_GCR_GIR23(x)                          (((uint32_t)(((uint32_t)(x)) << MU_GCR_GIR23_SHIFT)) & MU_GCR_GIR23_MASK)
#define MU_GCR_GIR24_MASK                        (0x1000000U)
#define MU_GCR_GIR24_SHIFT                       (24U)
#define MU_GCR_GIR24_WIDTH                       (1U)
#define MU_GCR_GIR24(x)                          (((uint32_t)(((uint32_t)(x)) << MU_GCR_GIR24_SHIFT)) & MU_GCR_GIR24_MASK)
#define MU_GCR_GIR25_MASK                        (0x2000000U)
#define MU_GCR_GIR25_SHIFT                       (25U)
#define MU_GCR_GIR25_WIDTH                       (1U)
#define MU_GCR_GIR25(x)                          (((uint32_t)(((uint32_t)(x)) << MU_GCR_GIR25_SHIFT)) & MU_GCR_GIR25_MASK)
#define MU_GCR_GIR26_MASK                        (0x4000000U)
#define MU_GCR_GIR26_SHIFT                       (26U)
#define MU_GCR_GIR26_WIDTH                       (1U)
#define MU_GCR_GIR26(x)                          (((uint32_t)(((uint32_t)(x)) << MU_GCR_GIR26_SHIFT)) & MU_GCR_GIR26_MASK)
#define MU_GCR_GIR27_MASK                        (0x8000000U)
#define MU_GCR_GIR27_SHIFT                       (27U)
#define MU_GCR_GIR27_WIDTH                       (1U)
#define MU_GCR_GIR27(x)                          (((uint32_t)(((uint32_t)(x)) << MU_GCR_GIR27_SHIFT)) & MU_GCR_GIR27_MASK)
#define MU_GCR_GIR28_MASK                        (0x10000000U)
#define MU_GCR_GIR28_SHIFT                       (28U)
#define MU_GCR_GIR28_WIDTH                       (1U)
#define MU_GCR_GIR28(x)                          (((uint32_t)(((uint32_t)(x)) << MU_GCR_GIR28_SHIFT)) & MU_GCR_GIR28_MASK)
#define MU_GCR_GIR29_MASK                        (0x20000000U)
#define MU_GCR_GIR29_SHIFT                       (29U)
#define MU_GCR_GIR29_WIDTH                       (1U)
#define MU_GCR_GIR29(x)                          (((uint32_t)(((uint32_t)(x)) << MU_GCR_GIR29_SHIFT)) & MU_GCR_GIR29_MASK)
#define MU_GCR_GIR30_MASK                        (0x40000000U)
#define MU_GCR_GIR30_SHIFT                       (30U)
#define MU_GCR_GIR30_WIDTH                       (1U)
#define MU_GCR_GIR30(x)                          (((uint32_t)(((uint32_t)(x)) << MU_GCR_GIR30_SHIFT)) & MU_GCR_GIR30_MASK)
#define MU_GCR_GIR31_MASK                        (0x80000000U)
#define MU_GCR_GIR31_SHIFT                       (31U)
#define MU_GCR_GIR31_WIDTH                       (1U)
#define MU_GCR_GIR31(x)                          (((uint32_t)(((uint32_t)(x)) << MU_GCR_GIR31_SHIFT)) & MU_GCR_GIR31_MASK)
/*! @} */

/*! @name GSR - General Status Register */
/*! @{ */
#define MU_GSR_GIP0_MASK                         (0x1U)
#define MU_GSR_GIP0_SHIFT                        (0U)
#define MU_GSR_GIP0_WIDTH                        (1U)
#define MU_GSR_GIP0(x)                           (((uint32_t)(((uint32_t)(x)) << MU_GSR_GIP0_SHIFT)) & MU_GSR_GIP0_MASK)
#define MU_GSR_GIP1_MASK                         (0x2U)
#define MU_GSR_GIP1_SHIFT                        (1U)
#define MU_GSR_GIP1_WIDTH                        (1U)
#define MU_GSR_GIP1(x)                           (((uint32_t)(((uint32_t)(x)) << MU_GSR_GIP1_SHIFT)) & MU_GSR_GIP1_MASK)
#define MU_GSR_GIP2_MASK                         (0x4U)
#define MU_GSR_GIP2_SHIFT                        (2U)
#define MU_GSR_GIP2_WIDTH                        (1U)
#define MU_GSR_GIP2(x)                           (((uint32_t)(((uint32_t)(x)) << MU_GSR_GIP2_SHIFT)) & MU_GSR_GIP2_MASK)
#define MU_GSR_GIP3_MASK                         (0x8U)
#define MU_GSR_GIP3_SHIFT                        (3U)
#define MU_GSR_GIP3_WIDTH                        (1U)
#define MU_GSR_GIP3(x)                           (((uint32_t)(((uint32_t)(x)) << MU_GSR_GIP3_SHIFT)) & MU_GSR_GIP3_MASK)
#define MU_GSR_GIP4_MASK                         (0x10U)
#define MU_GSR_GIP4_SHIFT                        (4U)
#define MU_GSR_GIP4_WIDTH                        (1U)
#define MU_GSR_GIP4(x)                           (((uint32_t)(((uint32_t)(x)) << MU_GSR_GIP4_SHIFT)) & MU_GSR_GIP4_MASK)
#define MU_GSR_GIP5_MASK                         (0x20U)
#define MU_GSR_GIP5_SHIFT                        (5U)
#define MU_GSR_GIP5_WIDTH                        (1U)
#define MU_GSR_GIP5(x)                           (((uint32_t)(((uint32_t)(x)) << MU_GSR_GIP5_SHIFT)) & MU_GSR_GIP5_MASK)
#define MU_GSR_GIP6_MASK                         (0x40U)
#define MU_GSR_GIP6_SHIFT                        (6U)
#define MU_GSR_GIP6_WIDTH                        (1U)
#define MU_GSR_GIP6(x)                           (((uint32_t)(((uint32_t)(x)) << MU_GSR_GIP6_SHIFT)) & MU_GSR_GIP6_MASK)
#define MU_GSR_GIP7_MASK                         (0x80U)
#define MU_GSR_GIP7_SHIFT                        (7U)
#define MU_GSR_GIP7_WIDTH                        (1U)
#define MU_GSR_GIP7(x)                           (((uint32_t)(((uint32_t)(x)) << MU_GSR_GIP7_SHIFT)) & MU_GSR_GIP7_MASK)
#define MU_GSR_GIP8_MASK                         (0x100U)
#define MU_GSR_GIP8_SHIFT                        (8U)
#define MU_GSR_GIP8_WIDTH                        (1U)
#define MU_GSR_GIP8(x)                           (((uint32_t)(((uint32_t)(x)) << MU_GSR_GIP8_SHIFT)) & MU_GSR_GIP8_MASK)
#define MU_GSR_GIP9_MASK                         (0x200U)
#define MU_GSR_GIP9_SHIFT                        (9U)
#define MU_GSR_GIP9_WIDTH                        (1U)
#define MU_GSR_GIP9(x)                           (((uint32_t)(((uint32_t)(x)) << MU_GSR_GIP9_SHIFT)) & MU_GSR_GIP9_MASK)
#define MU_GSR_GIP10_MASK                        (0x400U)
#define MU_GSR_GIP10_SHIFT                       (10U)
#define MU_GSR_GIP10_WIDTH                       (1U)
#define MU_GSR_GIP10(x)                          (((uint32_t)(((uint32_t)(x)) << MU_GSR_GIP10_SHIFT)) & MU_GSR_GIP10_MASK)
#define MU_GSR_GIP11_MASK                        (0x800U)
#define MU_GSR_GIP11_SHIFT                       (11U)
#define MU_GSR_GIP11_WIDTH                       (1U)
#define MU_GSR_GIP11(x)                          (((uint32_t)(((uint32_t)(x)) << MU_GSR_GIP11_SHIFT)) & MU_GSR_GIP11_MASK)
#define MU_GSR_GIP12_MASK                        (0x1000U)
#define MU_GSR_GIP12_SHIFT                       (12U)
#define MU_GSR_GIP12_WIDTH                       (1U)
#define MU_GSR_GIP12(x)                          (((uint32_t)(((uint32_t)(x)) << MU_GSR_GIP12_SHIFT)) & MU_GSR_GIP12_MASK)
#define MU_GSR_GIP13_MASK                        (0x2000U)
#define MU_GSR_GIP13_SHIFT                       (13U)
#define MU_GSR_GIP13_WIDTH                       (1U)
#define MU_GSR_GIP13(x)                          (((uint32_t)(((uint32_t)(x)) << MU_GSR_GIP13_SHIFT)) & MU_GSR_GIP13_MASK)
#define MU_GSR_GIP14_MASK                        (0x4000U)
#define MU_GSR_GIP14_SHIFT                       (14U)
#define MU_GSR_GIP14_WIDTH                       (1U)
#define MU_GSR_GIP14(x)                          (((uint32_t)(((uint32_t)(x)) << MU_GSR_GIP14_SHIFT)) & MU_GSR_GIP14_MASK)
#define MU_GSR_GIP15_MASK                        (0x8000U)
#define MU_GSR_GIP15_SHIFT                       (15U)
#define MU_GSR_GIP15_WIDTH                       (1U)
#define MU_GSR_GIP15(x)                          (((uint32_t)(((uint32_t)(x)) << MU_GSR_GIP15_SHIFT)) & MU_GSR_GIP15_MASK)
#define MU_GSR_GIP16_MASK                        (0x10000U)
#define MU_GSR_GIP16_SHIFT                       (16U)
#define MU_GSR_GIP16_WIDTH                       (1U)
#define MU_GSR_GIP16(x)                          (((uint32_t)(((uint32_t)(x)) << MU_GSR_GIP16_SHIFT)) & MU_GSR_GIP16_MASK)
#define MU_GSR_GIP17_MASK                        (0x20000U)
#define MU_GSR_GIP17_SHIFT                       (17U)
#define MU_GSR_GIP17_WIDTH                       (1U)
#define MU_GSR_GIP17(x)                          (((uint32_t)(((uint32_t)(x)) << MU_GSR_GIP17_SHIFT)) & MU_GSR_GIP17_MASK)
#define MU_GSR_GIP18_MASK                        (0x40000U)
#define MU_GSR_GIP18_SHIFT                       (18U)
#define MU_GSR_GIP18_WIDTH                       (1U)
#define MU_GSR_GIP18(x)                          (((uint32_t)(((uint32_t)(x)) << MU_GSR_GIP18_SHIFT)) & MU_GSR_GIP18_MASK)
#define MU_GSR_GIP19_MASK                        (0x80000U)
#define MU_GSR_GIP19_SHIFT                       (19U)
#define MU_GSR_GIP19_WIDTH                       (1U)
#define MU_GSR_GIP19(x)                          (((uint32_t)(((uint32_t)(x)) << MU_GSR_GIP19_SHIFT)) & MU_GSR_GIP19_MASK)
#define MU_GSR_GIP20_MASK                        (0x100000U)
#define MU_GSR_GIP20_SHIFT                       (20U)
#define MU_GSR_GIP20_WIDTH                       (1U)
#define MU_GSR_GIP20(x)                          (((uint32_t)(((uint32_t)(x)) << MU_GSR_GIP20_SHIFT)) & MU_GSR_GIP20_MASK)
#define MU_GSR_GIP21_MASK                        (0x200000U)
#define MU_GSR_GIP21_SHIFT                       (21U)
#define MU_GSR_GIP21_WIDTH                       (1U)
#define MU_GSR_GIP21(x)                          (((uint32_t)(((uint32_t)(x)) << MU_GSR_GIP21_SHIFT)) & MU_GSR_GIP21_MASK)
#define MU_GSR_GIP22_MASK                        (0x400000U)
#define MU_GSR_GIP22_SHIFT                       (22U)
#define MU_GSR_GIP22_WIDTH                       (1U)
#define MU_GSR_GIP22(x)                          (((uint32_t)(((uint32_t)(x)) << MU_GSR_GIP22_SHIFT)) & MU_GSR_GIP22_MASK)
#define MU_GSR_GIP23_MASK                        (0x800000U)
#define MU_GSR_GIP23_SHIFT                       (23U)
#define MU_GSR_GIP23_WIDTH                       (1U)
#define MU_GSR_GIP23(x)                          (((uint32_t)(((uint32_t)(x)) << MU_GSR_GIP23_SHIFT)) & MU_GSR_GIP23_MASK)
#define MU_GSR_GIP24_MASK                        (0x1000000U)
#define MU_GSR_GIP24_SHIFT                       (24U)
#define MU_GSR_GIP24_WIDTH                       (1U)
#define MU_GSR_GIP24(x)                          (((uint32_t)(((uint32_t)(x)) << MU_GSR_GIP24_SHIFT)) & MU_GSR_GIP24_MASK)
#define MU_GSR_GIP25_MASK                        (0x2000000U)
#define MU_GSR_GIP25_SHIFT                       (25U)
#define MU_GSR_GIP25_WIDTH                       (1U)
#define MU_GSR_GIP25(x)                          (((uint32_t)(((uint32_t)(x)) << MU_GSR_GIP25_SHIFT)) & MU_GSR_GIP25_MASK)
#define MU_GSR_GIP26_MASK                        (0x4000000U)
#define MU_GSR_GIP26_SHIFT                       (26U)
#define MU_GSR_GIP26_WIDTH                       (1U)
#define MU_GSR_GIP26(x)                          (((uint32_t)(((uint32_t)(x)) << MU_GSR_GIP26_SHIFT)) & MU_GSR_GIP26_MASK)
#define MU_GSR_GIP27_MASK                        (0x8000000U)
#define MU_GSR_GIP27_SHIFT                       (27U)
#define MU_GSR_GIP27_WIDTH                       (1U)
#define MU_GSR_GIP27(x)                          (((uint32_t)(((uint32_t)(x)) << MU_GSR_GIP27_SHIFT)) & MU_GSR_GIP27_MASK)
#define MU_GSR_GIP28_MASK                        (0x10000000U)
#define MU_GSR_GIP28_SHIFT                       (28U)
#define MU_GSR_GIP28_WIDTH                       (1U)
#define MU_GSR_GIP28(x)                          (((uint32_t)(((uint32_t)(x)) << MU_GSR_GIP28_SHIFT)) & MU_GSR_GIP28_MASK)
#define MU_GSR_GIP29_MASK                        (0x20000000U)
#define MU_GSR_GIP29_SHIFT                       (29U)
#define MU_GSR_GIP29_WIDTH                       (1U)
#define MU_GSR_GIP29(x)                          (((uint32_t)(((uint32_t)(x)) << MU_GSR_GIP29_SHIFT)) & MU_GSR_GIP29_MASK)
#define MU_GSR_GIP30_MASK                        (0x40000000U)
#define MU_GSR_GIP30_SHIFT                       (30U)
#define MU_GSR_GIP30_WIDTH                       (1U)
#define MU_GSR_GIP30(x)                          (((uint32_t)(((uint32_t)(x)) << MU_GSR_GIP30_SHIFT)) & MU_GSR_GIP30_MASK)
#define MU_GSR_GIP31_MASK                        (0x80000000U)
#define MU_GSR_GIP31_SHIFT                       (31U)
#define MU_GSR_GIP31_WIDTH                       (1U)
#define MU_GSR_GIP31(x)                          (((uint32_t)(((uint32_t)(x)) << MU_GSR_GIP31_SHIFT)) & MU_GSR_GIP31_MASK)
/*! @} */

/*! @name TCR - Transmit Control Register */
/*! @{ */
#define MU_TCR_TIE0_MASK                         (0x1U)
#define MU_TCR_TIE0_SHIFT                        (0U)
#define MU_TCR_TIE0_WIDTH                        (1U)
#define MU_TCR_TIE0(x)                           (((uint32_t)(((uint32_t)(x)) << MU_TCR_TIE0_SHIFT)) & MU_TCR_TIE0_MASK)
#define MU_TCR_TIE1_MASK                         (0x2U)
#define MU_TCR_TIE1_SHIFT                        (1U)
#define MU_TCR_TIE1_WIDTH                        (1U)
#define MU_TCR_TIE1(x)                           (((uint32_t)(((uint32_t)(x)) << MU_TCR_TIE1_SHIFT)) & MU_TCR_TIE1_MASK)
#define MU_TCR_TIE2_MASK                         (0x4U)
#define MU_TCR_TIE2_SHIFT                        (2U)
#define MU_TCR_TIE2_WIDTH                        (1U)
#define MU_TCR_TIE2(x)                           (((uint32_t)(((uint32_t)(x)) << MU_TCR_TIE2_SHIFT)) & MU_TCR_TIE2_MASK)
#define MU_TCR_TIE3_MASK                         (0x8U)
#define MU_TCR_TIE3_SHIFT                        (3U)
#define MU_TCR_TIE3_WIDTH                        (1U)
#define MU_TCR_TIE3(x)                           (((uint32_t)(((uint32_t)(x)) << MU_TCR_TIE3_SHIFT)) & MU_TCR_TIE3_MASK)
#define MU_TCR_TIE4_MASK                         (0x10U)
#define MU_TCR_TIE4_SHIFT                        (4U)
#define MU_TCR_TIE4_WIDTH                        (1U)
#define MU_TCR_TIE4(x)                           (((uint32_t)(((uint32_t)(x)) << MU_TCR_TIE4_SHIFT)) & MU_TCR_TIE4_MASK)
#define MU_TCR_TIE5_MASK                         (0x20U)
#define MU_TCR_TIE5_SHIFT                        (5U)
#define MU_TCR_TIE5_WIDTH                        (1U)
#define MU_TCR_TIE5(x)                           (((uint32_t)(((uint32_t)(x)) << MU_TCR_TIE5_SHIFT)) & MU_TCR_TIE5_MASK)
#define MU_TCR_TIE6_MASK                         (0x40U)
#define MU_TCR_TIE6_SHIFT                        (6U)
#define MU_TCR_TIE6_WIDTH                        (1U)
#define MU_TCR_TIE6(x)                           (((uint32_t)(((uint32_t)(x)) << MU_TCR_TIE6_SHIFT)) & MU_TCR_TIE6_MASK)
#define MU_TCR_TIE7_MASK                         (0x80U)
#define MU_TCR_TIE7_SHIFT                        (7U)
#define MU_TCR_TIE7_WIDTH                        (1U)
#define MU_TCR_TIE7(x)                           (((uint32_t)(((uint32_t)(x)) << MU_TCR_TIE7_SHIFT)) & MU_TCR_TIE7_MASK)
#define MU_TCR_TIE8_MASK                         (0x100U)
#define MU_TCR_TIE8_SHIFT                        (8U)
#define MU_TCR_TIE8_WIDTH                        (1U)
#define MU_TCR_TIE8(x)                           (((uint32_t)(((uint32_t)(x)) << MU_TCR_TIE8_SHIFT)) & MU_TCR_TIE8_MASK)
#define MU_TCR_TIE9_MASK                         (0x200U)
#define MU_TCR_TIE9_SHIFT                        (9U)
#define MU_TCR_TIE9_WIDTH                        (1U)
#define MU_TCR_TIE9(x)                           (((uint32_t)(((uint32_t)(x)) << MU_TCR_TIE9_SHIFT)) & MU_TCR_TIE9_MASK)
#define MU_TCR_TIE10_MASK                        (0x400U)
#define MU_TCR_TIE10_SHIFT                       (10U)
#define MU_TCR_TIE10_WIDTH                       (1U)
#define MU_TCR_TIE10(x)                          (((uint32_t)(((uint32_t)(x)) << MU_TCR_TIE10_SHIFT)) & MU_TCR_TIE10_MASK)
#define MU_TCR_TIE11_MASK                        (0x800U)
#define MU_TCR_TIE11_SHIFT                       (11U)
#define MU_TCR_TIE11_WIDTH                       (1U)
#define MU_TCR_TIE11(x)                          (((uint32_t)(((uint32_t)(x)) << MU_TCR_TIE11_SHIFT)) & MU_TCR_TIE11_MASK)
#define MU_TCR_TIE12_MASK                        (0x1000U)
#define MU_TCR_TIE12_SHIFT                       (12U)
#define MU_TCR_TIE12_WIDTH                       (1U)
#define MU_TCR_TIE12(x)                          (((uint32_t)(((uint32_t)(x)) << MU_TCR_TIE12_SHIFT)) & MU_TCR_TIE12_MASK)
#define MU_TCR_TIE13_MASK                        (0x2000U)
#define MU_TCR_TIE13_SHIFT                       (13U)
#define MU_TCR_TIE13_WIDTH                       (1U)
#define MU_TCR_TIE13(x)                          (((uint32_t)(((uint32_t)(x)) << MU_TCR_TIE13_SHIFT)) & MU_TCR_TIE13_MASK)
#define MU_TCR_TIE14_MASK                        (0x4000U)
#define MU_TCR_TIE14_SHIFT                       (14U)
#define MU_TCR_TIE14_WIDTH                       (1U)
#define MU_TCR_TIE14(x)                          (((uint32_t)(((uint32_t)(x)) << MU_TCR_TIE14_SHIFT)) & MU_TCR_TIE14_MASK)
#define MU_TCR_TIE15_MASK                        (0x8000U)
#define MU_TCR_TIE15_SHIFT                       (15U)
#define MU_TCR_TIE15_WIDTH                       (1U)
#define MU_TCR_TIE15(x)                          (((uint32_t)(((uint32_t)(x)) << MU_TCR_TIE15_SHIFT)) & MU_TCR_TIE15_MASK)
/*! @} */

/*! @name TSR - Transmit Status Register */
/*! @{ */
#define MU_TSR_TE0_MASK                          (0x1U)
#define MU_TSR_TE0_SHIFT                         (0U)
#define MU_TSR_TE0_WIDTH                         (1U)
#define MU_TSR_TE0(x)                            (((uint32_t)(((uint32_t)(x)) << MU_TSR_TE0_SHIFT)) & MU_TSR_TE0_MASK)
#define MU_TSR_TE1_MASK                          (0x2U)
#define MU_TSR_TE1_SHIFT                         (1U)
#define MU_TSR_TE1_WIDTH                         (1U)
#define MU_TSR_TE1(x)                            (((uint32_t)(((uint32_t)(x)) << MU_TSR_TE1_SHIFT)) & MU_TSR_TE1_MASK)
#define MU_TSR_TE2_MASK                          (0x4U)
#define MU_TSR_TE2_SHIFT                         (2U)
#define MU_TSR_TE2_WIDTH                         (1U)
#define MU_TSR_TE2(x)                            (((uint32_t)(((uint32_t)(x)) << MU_TSR_TE2_SHIFT)) & MU_TSR_TE2_MASK)
#define MU_TSR_TE3_MASK                          (0x8U)
#define MU_TSR_TE3_SHIFT                         (3U)
#define MU_TSR_TE3_WIDTH                         (1U)
#define MU_TSR_TE3(x)                            (((uint32_t)(((uint32_t)(x)) << MU_TSR_TE3_SHIFT)) & MU_TSR_TE3_MASK)
#define MU_TSR_TE4_MASK                          (0x10U)
#define MU_TSR_TE4_SHIFT                         (4U)
#define MU_TSR_TE4_WIDTH                         (1U)
#define MU_TSR_TE4(x)                            (((uint32_t)(((uint32_t)(x)) << MU_TSR_TE4_SHIFT)) & MU_TSR_TE4_MASK)
#define MU_TSR_TE5_MASK                          (0x20U)
#define MU_TSR_TE5_SHIFT                         (5U)
#define MU_TSR_TE5_WIDTH                         (1U)
#define MU_TSR_TE5(x)                            (((uint32_t)(((uint32_t)(x)) << MU_TSR_TE5_SHIFT)) & MU_TSR_TE5_MASK)
#define MU_TSR_TE6_MASK                          (0x40U)
#define MU_TSR_TE6_SHIFT                         (6U)
#define MU_TSR_TE6_WIDTH                         (1U)
#define MU_TSR_TE6(x)                            (((uint32_t)(((uint32_t)(x)) << MU_TSR_TE6_SHIFT)) & MU_TSR_TE6_MASK)
#define MU_TSR_TE7_MASK                          (0x80U)
#define MU_TSR_TE7_SHIFT                         (7U)
#define MU_TSR_TE7_WIDTH                         (1U)
#define MU_TSR_TE7(x)                            (((uint32_t)(((uint32_t)(x)) << MU_TSR_TE7_SHIFT)) & MU_TSR_TE7_MASK)
#define MU_TSR_TE8_MASK                          (0x100U)
#define MU_TSR_TE8_SHIFT                         (8U)
#define MU_TSR_TE8_WIDTH                         (1U)
#define MU_TSR_TE8(x)                            (((uint32_t)(((uint32_t)(x)) << MU_TSR_TE8_SHIFT)) & MU_TSR_TE8_MASK)
#define MU_TSR_TE9_MASK                          (0x200U)
#define MU_TSR_TE9_SHIFT                         (9U)
#define MU_TSR_TE9_WIDTH                         (1U)
#define MU_TSR_TE9(x)                            (((uint32_t)(((uint32_t)(x)) << MU_TSR_TE9_SHIFT)) & MU_TSR_TE9_MASK)
#define MU_TSR_TE10_MASK                         (0x400U)
#define MU_TSR_TE10_SHIFT                        (10U)
#define MU_TSR_TE10_WIDTH                        (1U)
#define MU_TSR_TE10(x)                           (((uint32_t)(((uint32_t)(x)) << MU_TSR_TE10_SHIFT)) & MU_TSR_TE10_MASK)
#define MU_TSR_TE11_MASK                         (0x800U)
#define MU_TSR_TE11_SHIFT                        (11U)
#define MU_TSR_TE11_WIDTH                        (1U)
#define MU_TSR_TE11(x)                           (((uint32_t)(((uint32_t)(x)) << MU_TSR_TE11_SHIFT)) & MU_TSR_TE11_MASK)
#define MU_TSR_TE12_MASK                         (0x1000U)
#define MU_TSR_TE12_SHIFT                        (12U)
#define MU_TSR_TE12_WIDTH                        (1U)
#define MU_TSR_TE12(x)                           (((uint32_t)(((uint32_t)(x)) << MU_TSR_TE12_SHIFT)) & MU_TSR_TE12_MASK)
#define MU_TSR_TE13_MASK                         (0x2000U)
#define MU_TSR_TE13_SHIFT                        (13U)
#define MU_TSR_TE13_WIDTH                        (1U)
#define MU_TSR_TE13(x)                           (((uint32_t)(((uint32_t)(x)) << MU_TSR_TE13_SHIFT)) & MU_TSR_TE13_MASK)
#define MU_TSR_TE14_MASK                         (0x4000U)
#define MU_TSR_TE14_SHIFT                        (14U)
#define MU_TSR_TE14_WIDTH                        (1U)
#define MU_TSR_TE14(x)                           (((uint32_t)(((uint32_t)(x)) << MU_TSR_TE14_SHIFT)) & MU_TSR_TE14_MASK)
#define MU_TSR_TE15_MASK                         (0x8000U)
#define MU_TSR_TE15_SHIFT                        (15U)
#define MU_TSR_TE15_WIDTH                        (1U)
#define MU_TSR_TE15(x)                           (((uint32_t)(((uint32_t)(x)) << MU_TSR_TE15_SHIFT)) & MU_TSR_TE15_MASK)
/*! @} */

/*! @name RCR - Receive Control Register */
/*! @{ */
#define MU_RCR_RIE0_MASK                         (0x1U)
#define MU_RCR_RIE0_SHIFT                        (0U)
#define MU_RCR_RIE0_WIDTH                        (1U)
#define MU_RCR_RIE0(x)                           (((uint32_t)(((uint32_t)(x)) << MU_RCR_RIE0_SHIFT)) & MU_RCR_RIE0_MASK)
#define MU_RCR_RIE1_MASK                         (0x2U)
#define MU_RCR_RIE1_SHIFT                        (1U)
#define MU_RCR_RIE1_WIDTH                        (1U)
#define MU_RCR_RIE1(x)                           (((uint32_t)(((uint32_t)(x)) << MU_RCR_RIE1_SHIFT)) & MU_RCR_RIE1_MASK)
#define MU_RCR_RIE2_MASK                         (0x4U)
#define MU_RCR_RIE2_SHIFT                        (2U)
#define MU_RCR_RIE2_WIDTH                        (1U)
#define MU_RCR_RIE2(x)                           (((uint32_t)(((uint32_t)(x)) << MU_RCR_RIE2_SHIFT)) & MU_RCR_RIE2_MASK)
#define MU_RCR_RIE3_MASK                         (0x8U)
#define MU_RCR_RIE3_SHIFT                        (3U)
#define MU_RCR_RIE3_WIDTH                        (1U)
#define MU_RCR_RIE3(x)                           (((uint32_t)(((uint32_t)(x)) << MU_RCR_RIE3_SHIFT)) & MU_RCR_RIE3_MASK)
#define MU_RCR_RIE4_MASK                         (0x10U)
#define MU_RCR_RIE4_SHIFT                        (4U)
#define MU_RCR_RIE4_WIDTH                        (1U)
#define MU_RCR_RIE4(x)                           (((uint32_t)(((uint32_t)(x)) << MU_RCR_RIE4_SHIFT)) & MU_RCR_RIE4_MASK)
#define MU_RCR_RIE5_MASK                         (0x20U)
#define MU_RCR_RIE5_SHIFT                        (5U)
#define MU_RCR_RIE5_WIDTH                        (1U)
#define MU_RCR_RIE5(x)                           (((uint32_t)(((uint32_t)(x)) << MU_RCR_RIE5_SHIFT)) & MU_RCR_RIE5_MASK)
#define MU_RCR_RIE6_MASK                         (0x40U)
#define MU_RCR_RIE6_SHIFT                        (6U)
#define MU_RCR_RIE6_WIDTH                        (1U)
#define MU_RCR_RIE6(x)                           (((uint32_t)(((uint32_t)(x)) << MU_RCR_RIE6_SHIFT)) & MU_RCR_RIE6_MASK)
#define MU_RCR_RIE7_MASK                         (0x80U)
#define MU_RCR_RIE7_SHIFT                        (7U)
#define MU_RCR_RIE7_WIDTH                        (1U)
#define MU_RCR_RIE7(x)                           (((uint32_t)(((uint32_t)(x)) << MU_RCR_RIE7_SHIFT)) & MU_RCR_RIE7_MASK)
#define MU_RCR_RIE8_MASK                         (0x100U)
#define MU_RCR_RIE8_SHIFT                        (8U)
#define MU_RCR_RIE8_WIDTH                        (1U)
#define MU_RCR_RIE8(x)                           (((uint32_t)(((uint32_t)(x)) << MU_RCR_RIE8_SHIFT)) & MU_RCR_RIE8_MASK)
#define MU_RCR_RIE9_MASK                         (0x200U)
#define MU_RCR_RIE9_SHIFT                        (9U)
#define MU_RCR_RIE9_WIDTH                        (1U)
#define MU_RCR_RIE9(x)                           (((uint32_t)(((uint32_t)(x)) << MU_RCR_RIE9_SHIFT)) & MU_RCR_RIE9_MASK)
#define MU_RCR_RIE10_MASK                        (0x400U)
#define MU_RCR_RIE10_SHIFT                       (10U)
#define MU_RCR_RIE10_WIDTH                       (1U)
#define MU_RCR_RIE10(x)                          (((uint32_t)(((uint32_t)(x)) << MU_RCR_RIE10_SHIFT)) & MU_RCR_RIE10_MASK)
#define MU_RCR_RIE11_MASK                        (0x800U)
#define MU_RCR_RIE11_SHIFT                       (11U)
#define MU_RCR_RIE11_WIDTH                       (1U)
#define MU_RCR_RIE11(x)                          (((uint32_t)(((uint32_t)(x)) << MU_RCR_RIE11_SHIFT)) & MU_RCR_RIE11_MASK)
#define MU_RCR_RIE12_MASK                        (0x1000U)
#define MU_RCR_RIE12_SHIFT                       (12U)
#define MU_RCR_RIE12_WIDTH                       (1U)
#define MU_RCR_RIE12(x)                          (((uint32_t)(((uint32_t)(x)) << MU_RCR_RIE12_SHIFT)) & MU_RCR_RIE12_MASK)
#define MU_RCR_RIE13_MASK                        (0x2000U)
#define MU_RCR_RIE13_SHIFT                       (13U)
#define MU_RCR_RIE13_WIDTH                       (1U)
#define MU_RCR_RIE13(x)                          (((uint32_t)(((uint32_t)(x)) << MU_RCR_RIE13_SHIFT)) & MU_RCR_RIE13_MASK)
#define MU_RCR_RIE14_MASK                        (0x4000U)
#define MU_RCR_RIE14_SHIFT                       (14U)
#define MU_RCR_RIE14_WIDTH                       (1U)
#define MU_RCR_RIE14(x)                          (((uint32_t)(((uint32_t)(x)) << MU_RCR_RIE14_SHIFT)) & MU_RCR_RIE14_MASK)
#define MU_RCR_RIE15_MASK                        (0x8000U)
#define MU_RCR_RIE15_SHIFT                       (15U)
#define MU_RCR_RIE15_WIDTH                       (1U)
#define MU_RCR_RIE15(x)                          (((uint32_t)(((uint32_t)(x)) << MU_RCR_RIE15_SHIFT)) & MU_RCR_RIE15_MASK)
/*! @} */

/*! @name RSR - Receive Status Register */
/*! @{ */
#define MU_RSR_RF0_MASK                          (0x1U)
#define MU_RSR_RF0_SHIFT                         (0U)
#define MU_RSR_RF0_WIDTH                         (1U)
#define MU_RSR_RF0(x)                            (((uint32_t)(((uint32_t)(x)) << MU_RSR_RF0_SHIFT)) & MU_RSR_RF0_MASK)
#define MU_RSR_RF1_MASK                          (0x2U)
#define MU_RSR_RF1_SHIFT                         (1U)
#define MU_RSR_RF1_WIDTH                         (1U)
#define MU_RSR_RF1(x)                            (((uint32_t)(((uint32_t)(x)) << MU_RSR_RF1_SHIFT)) & MU_RSR_RF1_MASK)
#define MU_RSR_RF2_MASK                          (0x4U)
#define MU_RSR_RF2_SHIFT                         (2U)
#define MU_RSR_RF2_WIDTH                         (1U)
#define MU_RSR_RF2(x)                            (((uint32_t)(((uint32_t)(x)) << MU_RSR_RF2_SHIFT)) & MU_RSR_RF2_MASK)
#define MU_RSR_RF3_MASK                          (0x8U)
#define MU_RSR_RF3_SHIFT                         (3U)
#define MU_RSR_RF3_WIDTH                         (1U)
#define MU_RSR_RF3(x)                            (((uint32_t)(((uint32_t)(x)) << MU_RSR_RF3_SHIFT)) & MU_RSR_RF3_MASK)
#define MU_RSR_RF4_MASK                          (0x10U)
#define MU_RSR_RF4_SHIFT                         (4U)
#define MU_RSR_RF4_WIDTH                         (1U)
#define MU_RSR_RF4(x)                            (((uint32_t)(((uint32_t)(x)) << MU_RSR_RF4_SHIFT)) & MU_RSR_RF4_MASK)
#define MU_RSR_RF5_MASK                          (0x20U)
#define MU_RSR_RF5_SHIFT                         (5U)
#define MU_RSR_RF5_WIDTH                         (1U)
#define MU_RSR_RF5(x)                            (((uint32_t)(((uint32_t)(x)) << MU_RSR_RF5_SHIFT)) & MU_RSR_RF5_MASK)
#define MU_RSR_RF6_MASK                          (0x40U)
#define MU_RSR_RF6_SHIFT                         (6U)
#define MU_RSR_RF6_WIDTH                         (1U)
#define MU_RSR_RF6(x)                            (((uint32_t)(((uint32_t)(x)) << MU_RSR_RF6_SHIFT)) & MU_RSR_RF6_MASK)
#define MU_RSR_RF7_MASK                          (0x80U)
#define MU_RSR_RF7_SHIFT                         (7U)
#define MU_RSR_RF7_WIDTH                         (1U)
#define MU_RSR_RF7(x)                            (((uint32_t)(((uint32_t)(x)) << MU_RSR_RF7_SHIFT)) & MU_RSR_RF7_MASK)
#define MU_RSR_RF8_MASK                          (0x100U)
#define MU_RSR_RF8_SHIFT                         (8U)
#define MU_RSR_RF8_WIDTH                         (1U)
#define MU_RSR_RF8(x)                            (((uint32_t)(((uint32_t)(x)) << MU_RSR_RF8_SHIFT)) & MU_RSR_RF8_MASK)
#define MU_RSR_RF9_MASK                          (0x200U)
#define MU_RSR_RF9_SHIFT                         (9U)
#define MU_RSR_RF9_WIDTH                         (1U)
#define MU_RSR_RF9(x)                            (((uint32_t)(((uint32_t)(x)) << MU_RSR_RF9_SHIFT)) & MU_RSR_RF9_MASK)
#define MU_RSR_RF10_MASK                         (0x400U)
#define MU_RSR_RF10_SHIFT                        (10U)
#define MU_RSR_RF10_WIDTH                        (1U)
#define MU_RSR_RF10(x)                           (((uint32_t)(((uint32_t)(x)) << MU_RSR_RF10_SHIFT)) & MU_RSR_RF10_MASK)
#define MU_RSR_RF11_MASK                         (0x800U)
#define MU_RSR_RF11_SHIFT                        (11U)
#define MU_RSR_RF11_WIDTH                        (1U)
#define MU_RSR_RF11(x)                           (((uint32_t)(((uint32_t)(x)) << MU_RSR_RF11_SHIFT)) & MU_RSR_RF11_MASK)
#define MU_RSR_RF12_MASK                         (0x1000U)
#define MU_RSR_RF12_SHIFT                        (12U)
#define MU_RSR_RF12_WIDTH                        (1U)
#define MU_RSR_RF12(x)                           (((uint32_t)(((uint32_t)(x)) << MU_RSR_RF12_SHIFT)) & MU_RSR_RF12_MASK)
#define MU_RSR_RF13_MASK                         (0x2000U)
#define MU_RSR_RF13_SHIFT                        (13U)
#define MU_RSR_RF13_WIDTH                        (1U)
#define MU_RSR_RF13(x)                           (((uint32_t)(((uint32_t)(x)) << MU_RSR_RF13_SHIFT)) & MU_RSR_RF13_MASK)
#define MU_RSR_RF14_MASK                         (0x4000U)
#define MU_RSR_RF14_SHIFT                        (14U)
#define MU_RSR_RF14_WIDTH                        (1U)
#define MU_RSR_RF14(x)                           (((uint32_t)(((uint32_t)(x)) << MU_RSR_RF14_SHIFT)) & MU_RSR_RF14_MASK)
#define MU_RSR_RF15_MASK                         (0x8000U)
#define MU_RSR_RF15_SHIFT                        (15U)
#define MU_RSR_RF15_WIDTH                        (1U)
#define MU_RSR_RF15(x)                           (((uint32_t)(((uint32_t)(x)) << MU_RSR_RF15_SHIFT)) & MU_RSR_RF15_MASK)
/*! @} */

/*! @name TR - Transmit Register */
/*! @{ */
#define MU_TR_TR_DATA_MASK                       (0xFFFFFFFFU)
#define MU_TR_TR_DATA_SHIFT                      (0U)
#define MU_TR_TR_DATA_WIDTH                      (32U)
#define MU_TR_TR_DATA(x)                         (((uint32_t)(((uint32_t)(x)) << MU_TR_TR_DATA_SHIFT)) & MU_TR_TR_DATA_MASK)
/*! @} */

/*! @name RR - Receive Register */
/*! @{ */
#define MU_RR_RR_DATA_MASK                       (0xFFFFFFFFU)
#define MU_RR_RR_DATA_SHIFT                      (0U)
#define MU_RR_RR_DATA_WIDTH                      (32U)
#define MU_RR_RR_DATA(x)                         (((uint32_t)(((uint32_t)(x)) << MU_RR_RR_DATA_SHIFT)) & MU_RR_RR_DATA_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group MU_Register_Masks */


/*!
 * @}
 */ /* end of group MU_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- NCBUID_reset_value Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup NCBUID_reset_value_Peripheral_Access_Layer NCBUID_reset_value Peripheral Access Layer
 * @{
 */

/** NCBUID_reset_value - Register Layout Typedef */
typedef struct {
  __IO uint32_t NCBUTC;                            /**< NCBU Transaction Control, offset: 0x0 */
  __I  uint32_t NCBUTA;                            /**< NCBU Transaction Activity, offset: 0x4 */
  uint8_t RESERVED_0[248];
  __IO uint32_t NCBUCEC;                           /**< NCBU Correctable Error Control, offset: 0x100 */
  __IO uint32_t NCBUCES;                           /**< NCBU Correctable Error Status, offset: 0x104 */
  __IO uint32_t NCBUCELR0;                         /**< NCBU Correctable Error Location Register 0, offset: 0x108 */
  __IO uint32_t NCBUCELR1;                         /**< NCBU Correctable Error Location Register 1, offset: 0x10C */
  uint8_t RESERVED_1[20];
  __IO uint32_t NCBUCESA;                          /**< NCBU Correctable Error Status Alias, offset: 0x124 */
  uint8_t RESERVED_2[24];
  __IO uint32_t NCBUUEC;                           /**< NCBU Uncorrectable Error Control, offset: 0x140 */
  __IO uint32_t NCBUUES;                           /**< NCBU Uncorrectable Error Status, offset: 0x144 */
  __IO uint32_t NCBUUELR0;                         /**< NCBU Uncorrectable Error Location Register 0, offset: 0x148 */
  __IO uint32_t NCBUUELR1;                         /**< NCBU Uncorrectable Error Location Register 1, offset: 0x14C */
  uint8_t RESERVED_3[20];
  __IO uint32_t NCBUUESA;                          /**< NCBU Uncorrectable Error Status Alias, offset: 0x164 */
  uint8_t RESERVED_4[3732];
  __I  uint32_t NCBUID;                            /**< NCBU Identification Register, offset: 0xFFC */
} NCBUID_reset_value_Type, *NCBUID_reset_value_MemMapPtr;

/** Number of instances of the NCBUID_reset_value module. */
#define NCBUID_reset_value_INSTANCE_COUNT        (2u)

/* NCBUID_reset_value - Peripheral instance base addresses */
/** Peripheral NCBU0 base address */
#define NCBU0_BASE                               (0x50460000u)
/** Peripheral NCBU0 base pointer */
#define NCBU0                                    ((NCBUID_reset_value_Type *)NCBU0_BASE)
/** Peripheral NCBU1 base address */
#define NCBU1_BASE                               (0x50461000u)
/** Peripheral NCBU1 base pointer */
#define NCBU1                                    ((NCBUID_reset_value_Type *)NCBU1_BASE)
/** Array initializer of NCBUID_reset_value peripheral base addresses */
#define NCBUID_reset_value_BASE_ADDRS            { NCBU0_BASE, NCBU1_BASE }
/** Array initializer of NCBUID_reset_value peripheral base pointers */
#define NCBUID_reset_value_BASE_PTRS             { NCBU0, NCBU1 }

/* ----------------------------------------------------------------------------
   -- NCBUID_reset_value Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup NCBUID_reset_value_Register_Masks NCBUID_reset_value Register Masks
 * @{
 */

/*! @name NCBUTC - NCBU Transaction Control */
/*! @{ */
#define NCBUID_reset_value_NCBUTC_TRANSEN_MASK   (0x1U)
#define NCBUID_reset_value_NCBUTC_TRANSEN_SHIFT  (0U)
#define NCBUID_reset_value_NCBUTC_TRANSEN_WIDTH  (1U)
#define NCBUID_reset_value_NCBUTC_TRANSEN(x)     (((uint32_t)(((uint32_t)(x)) << NCBUID_reset_value_NCBUTC_TRANSEN_SHIFT)) & NCBUID_reset_value_NCBUTC_TRANSEN_MASK)
/*! @} */

/*! @name NCBUTA - NCBU Transaction Activity */
/*! @{ */
#define NCBUID_reset_value_NCBUTA_TRANSACTV_MASK (0x1U)
#define NCBUID_reset_value_NCBUTA_TRANSACTV_SHIFT (0U)
#define NCBUID_reset_value_NCBUTA_TRANSACTV_WIDTH (1U)
#define NCBUID_reset_value_NCBUTA_TRANSACTV(x)   (((uint32_t)(((uint32_t)(x)) << NCBUID_reset_value_NCBUTA_TRANSACTV_SHIFT)) & NCBUID_reset_value_NCBUTA_TRANSACTV_MASK)
#define NCBUID_reset_value_NCBUTA_SNPACTV_MASK   (0x2U)
#define NCBUID_reset_value_NCBUTA_SNPACTV_SHIFT  (1U)
#define NCBUID_reset_value_NCBUTA_SNPACTV_WIDTH  (1U)
#define NCBUID_reset_value_NCBUTA_SNPACTV(x)     (((uint32_t)(((uint32_t)(x)) << NCBUID_reset_value_NCBUTA_SNPACTV_SHIFT)) & NCBUID_reset_value_NCBUTA_SNPACTV_MASK)
#define NCBUID_reset_value_NCBUTA_COHACTV_MASK   (0x4U)
#define NCBUID_reset_value_NCBUTA_COHACTV_SHIFT  (2U)
#define NCBUID_reset_value_NCBUTA_COHACTV_WIDTH  (1U)
#define NCBUID_reset_value_NCBUTA_COHACTV(x)     (((uint32_t)(((uint32_t)(x)) << NCBUID_reset_value_NCBUTA_COHACTV_SHIFT)) & NCBUID_reset_value_NCBUTA_COHACTV_MASK)
/*! @} */

/*! @name NCBUCEC - NCBU Correctable Error Control */
/*! @{ */
#define NCBUID_reset_value_NCBUCEC_ERRDETEN_MASK (0x1U)
#define NCBUID_reset_value_NCBUCEC_ERRDETEN_SHIFT (0U)
#define NCBUID_reset_value_NCBUCEC_ERRDETEN_WIDTH (1U)
#define NCBUID_reset_value_NCBUCEC_ERRDETEN(x)   (((uint32_t)(((uint32_t)(x)) << NCBUID_reset_value_NCBUCEC_ERRDETEN_SHIFT)) & NCBUID_reset_value_NCBUCEC_ERRDETEN_MASK)
#define NCBUID_reset_value_NCBUCEC_ERRINTEN_MASK (0x2U)
#define NCBUID_reset_value_NCBUCEC_ERRINTEN_SHIFT (1U)
#define NCBUID_reset_value_NCBUCEC_ERRINTEN_WIDTH (1U)
#define NCBUID_reset_value_NCBUCEC_ERRINTEN(x)   (((uint32_t)(((uint32_t)(x)) << NCBUID_reset_value_NCBUCEC_ERRINTEN_SHIFT)) & NCBUID_reset_value_NCBUCEC_ERRINTEN_MASK)
#define NCBUID_reset_value_NCBUCEC_ERRTHRESHOLD_MASK (0xFF0U)
#define NCBUID_reset_value_NCBUCEC_ERRTHRESHOLD_SHIFT (4U)
#define NCBUID_reset_value_NCBUCEC_ERRTHRESHOLD_WIDTH (8U)
#define NCBUID_reset_value_NCBUCEC_ERRTHRESHOLD(x) (((uint32_t)(((uint32_t)(x)) << NCBUID_reset_value_NCBUCEC_ERRTHRESHOLD_SHIFT)) & NCBUID_reset_value_NCBUCEC_ERRTHRESHOLD_MASK)
/*! @} */

/*! @name NCBUCES - NCBU Correctable Error Status */
/*! @{ */
#define NCBUID_reset_value_NCBUCES_ERRVLD_MASK   (0x1U)
#define NCBUID_reset_value_NCBUCES_ERRVLD_SHIFT  (0U)
#define NCBUID_reset_value_NCBUCES_ERRVLD_WIDTH  (1U)
#define NCBUID_reset_value_NCBUCES_ERRVLD(x)     (((uint32_t)(((uint32_t)(x)) << NCBUID_reset_value_NCBUCES_ERRVLD_SHIFT)) & NCBUID_reset_value_NCBUCES_ERRVLD_MASK)
#define NCBUID_reset_value_NCBUCES_ERROVF_MASK   (0x2U)
#define NCBUID_reset_value_NCBUCES_ERROVF_SHIFT  (1U)
#define NCBUID_reset_value_NCBUCES_ERROVF_WIDTH  (1U)
#define NCBUID_reset_value_NCBUCES_ERROVF(x)     (((uint32_t)(((uint32_t)(x)) << NCBUID_reset_value_NCBUCES_ERROVF_SHIFT)) & NCBUID_reset_value_NCBUCES_ERROVF_MASK)
#define NCBUID_reset_value_NCBUCES_ERRCOUNT_MASK (0xFF0U)
#define NCBUID_reset_value_NCBUCES_ERRCOUNT_SHIFT (4U)
#define NCBUID_reset_value_NCBUCES_ERRCOUNT_WIDTH (8U)
#define NCBUID_reset_value_NCBUCES_ERRCOUNT(x)   (((uint32_t)(((uint32_t)(x)) << NCBUID_reset_value_NCBUCES_ERRCOUNT_SHIFT)) & NCBUID_reset_value_NCBUCES_ERRCOUNT_MASK)
#define NCBUID_reset_value_NCBUCES_ERRTYPE_MASK  (0xF000U)
#define NCBUID_reset_value_NCBUCES_ERRTYPE_SHIFT (12U)
#define NCBUID_reset_value_NCBUCES_ERRTYPE_WIDTH (4U)
#define NCBUID_reset_value_NCBUCES_ERRTYPE(x)    (((uint32_t)(((uint32_t)(x)) << NCBUID_reset_value_NCBUCES_ERRTYPE_SHIFT)) & NCBUID_reset_value_NCBUCES_ERRTYPE_MASK)
#define NCBUID_reset_value_NCBUCES_ERRINFO_MASK  (0xFF0000U)
#define NCBUID_reset_value_NCBUCES_ERRINFO_SHIFT (16U)
#define NCBUID_reset_value_NCBUCES_ERRINFO_WIDTH (8U)
#define NCBUID_reset_value_NCBUCES_ERRINFO(x)    (((uint32_t)(((uint32_t)(x)) << NCBUID_reset_value_NCBUCES_ERRINFO_SHIFT)) & NCBUID_reset_value_NCBUCES_ERRINFO_MASK)
/*! @} */

/*! @name NCBUCELR0 - NCBU Correctable Error Location Register 0 */
/*! @{ */
#define NCBUID_reset_value_NCBUCELR0_ERRENTRY_MASK (0xFFFFFU)
#define NCBUID_reset_value_NCBUCELR0_ERRENTRY_SHIFT (0U)
#define NCBUID_reset_value_NCBUCELR0_ERRENTRY_WIDTH (20U)
#define NCBUID_reset_value_NCBUCELR0_ERRENTRY(x) (((uint32_t)(((uint32_t)(x)) << NCBUID_reset_value_NCBUCELR0_ERRENTRY_SHIFT)) & NCBUID_reset_value_NCBUCELR0_ERRENTRY_MASK)
#define NCBUID_reset_value_NCBUCELR0_ERRWAY_MASK (0x3F00000U)
#define NCBUID_reset_value_NCBUCELR0_ERRWAY_SHIFT (20U)
#define NCBUID_reset_value_NCBUCELR0_ERRWAY_WIDTH (6U)
#define NCBUID_reset_value_NCBUCELR0_ERRWAY(x)   (((uint32_t)(((uint32_t)(x)) << NCBUID_reset_value_NCBUCELR0_ERRWAY_SHIFT)) & NCBUID_reset_value_NCBUCELR0_ERRWAY_MASK)
#define NCBUID_reset_value_NCBUCELR0_ERRWORD_MASK (0xFC000000U)
#define NCBUID_reset_value_NCBUCELR0_ERRWORD_SHIFT (26U)
#define NCBUID_reset_value_NCBUCELR0_ERRWORD_WIDTH (6U)
#define NCBUID_reset_value_NCBUCELR0_ERRWORD(x)  (((uint32_t)(((uint32_t)(x)) << NCBUID_reset_value_NCBUCELR0_ERRWORD_SHIFT)) & NCBUID_reset_value_NCBUCELR0_ERRWORD_MASK)
/*! @} */

/*! @name NCBUCELR1 - NCBU Correctable Error Location Register 1 */
/*! @{ */
#define NCBUID_reset_value_NCBUCELR1_ERRADDR_MASK (0xFFFU)
#define NCBUID_reset_value_NCBUCELR1_ERRADDR_SHIFT (0U)
#define NCBUID_reset_value_NCBUCELR1_ERRADDR_WIDTH (12U)
#define NCBUID_reset_value_NCBUCELR1_ERRADDR(x)  (((uint32_t)(((uint32_t)(x)) << NCBUID_reset_value_NCBUCELR1_ERRADDR_SHIFT)) & NCBUID_reset_value_NCBUCELR1_ERRADDR_MASK)
/*! @} */

/*! @name NCBUCESA - NCBU Correctable Error Status Alias */
/*! @{ */
#define NCBUID_reset_value_NCBUCESA_ERRVLD_MASK  (0x1U)
#define NCBUID_reset_value_NCBUCESA_ERRVLD_SHIFT (0U)
#define NCBUID_reset_value_NCBUCESA_ERRVLD_WIDTH (1U)
#define NCBUID_reset_value_NCBUCESA_ERRVLD(x)    (((uint32_t)(((uint32_t)(x)) << NCBUID_reset_value_NCBUCESA_ERRVLD_SHIFT)) & NCBUID_reset_value_NCBUCESA_ERRVLD_MASK)
#define NCBUID_reset_value_NCBUCESA_ERROVF_MASK  (0x2U)
#define NCBUID_reset_value_NCBUCESA_ERROVF_SHIFT (1U)
#define NCBUID_reset_value_NCBUCESA_ERROVF_WIDTH (1U)
#define NCBUID_reset_value_NCBUCESA_ERROVF(x)    (((uint32_t)(((uint32_t)(x)) << NCBUID_reset_value_NCBUCESA_ERROVF_SHIFT)) & NCBUID_reset_value_NCBUCESA_ERROVF_MASK)
#define NCBUID_reset_value_NCBUCESA_ERRCOUNT_MASK (0xFF0U)
#define NCBUID_reset_value_NCBUCESA_ERRCOUNT_SHIFT (4U)
#define NCBUID_reset_value_NCBUCESA_ERRCOUNT_WIDTH (8U)
#define NCBUID_reset_value_NCBUCESA_ERRCOUNT(x)  (((uint32_t)(((uint32_t)(x)) << NCBUID_reset_value_NCBUCESA_ERRCOUNT_SHIFT)) & NCBUID_reset_value_NCBUCESA_ERRCOUNT_MASK)
#define NCBUID_reset_value_NCBUCESA_ERRTYPE_MASK (0xF000U)
#define NCBUID_reset_value_NCBUCESA_ERRTYPE_SHIFT (12U)
#define NCBUID_reset_value_NCBUCESA_ERRTYPE_WIDTH (4U)
#define NCBUID_reset_value_NCBUCESA_ERRTYPE(x)   (((uint32_t)(((uint32_t)(x)) << NCBUID_reset_value_NCBUCESA_ERRTYPE_SHIFT)) & NCBUID_reset_value_NCBUCESA_ERRTYPE_MASK)
#define NCBUID_reset_value_NCBUCESA_ERRINFO_MASK (0xFF0000U)
#define NCBUID_reset_value_NCBUCESA_ERRINFO_SHIFT (16U)
#define NCBUID_reset_value_NCBUCESA_ERRINFO_WIDTH (8U)
#define NCBUID_reset_value_NCBUCESA_ERRINFO(x)   (((uint32_t)(((uint32_t)(x)) << NCBUID_reset_value_NCBUCESA_ERRINFO_SHIFT)) & NCBUID_reset_value_NCBUCESA_ERRINFO_MASK)
/*! @} */

/*! @name NCBUUEC - NCBU Uncorrectable Error Control */
/*! @{ */
#define NCBUID_reset_value_NCBUUEC_ERRDETEN_MASK (0x1U)
#define NCBUID_reset_value_NCBUUEC_ERRDETEN_SHIFT (0U)
#define NCBUID_reset_value_NCBUUEC_ERRDETEN_WIDTH (1U)
#define NCBUID_reset_value_NCBUUEC_ERRDETEN(x)   (((uint32_t)(((uint32_t)(x)) << NCBUID_reset_value_NCBUUEC_ERRDETEN_SHIFT)) & NCBUID_reset_value_NCBUUEC_ERRDETEN_MASK)
#define NCBUID_reset_value_NCBUUEC_ERRINTEN_MASK (0x2U)
#define NCBUID_reset_value_NCBUUEC_ERRINTEN_SHIFT (1U)
#define NCBUID_reset_value_NCBUUEC_ERRINTEN_WIDTH (1U)
#define NCBUID_reset_value_NCBUUEC_ERRINTEN(x)   (((uint32_t)(((uint32_t)(x)) << NCBUID_reset_value_NCBUUEC_ERRINTEN_SHIFT)) & NCBUID_reset_value_NCBUUEC_ERRINTEN_MASK)
#define NCBUID_reset_value_NCBUUEC_ERRTHRESHOLD_MASK (0xFF0U)
#define NCBUID_reset_value_NCBUUEC_ERRTHRESHOLD_SHIFT (4U)
#define NCBUID_reset_value_NCBUUEC_ERRTHRESHOLD_WIDTH (8U)
#define NCBUID_reset_value_NCBUUEC_ERRTHRESHOLD(x) (((uint32_t)(((uint32_t)(x)) << NCBUID_reset_value_NCBUUEC_ERRTHRESHOLD_SHIFT)) & NCBUID_reset_value_NCBUUEC_ERRTHRESHOLD_MASK)
/*! @} */

/*! @name NCBUUES - NCBU Uncorrectable Error Status */
/*! @{ */
#define NCBUID_reset_value_NCBUUES_ERRVLD_MASK   (0x1U)
#define NCBUID_reset_value_NCBUUES_ERRVLD_SHIFT  (0U)
#define NCBUID_reset_value_NCBUUES_ERRVLD_WIDTH  (1U)
#define NCBUID_reset_value_NCBUUES_ERRVLD(x)     (((uint32_t)(((uint32_t)(x)) << NCBUID_reset_value_NCBUUES_ERRVLD_SHIFT)) & NCBUID_reset_value_NCBUUES_ERRVLD_MASK)
#define NCBUID_reset_value_NCBUUES_ERROVF_MASK   (0x2U)
#define NCBUID_reset_value_NCBUUES_ERROVF_SHIFT  (1U)
#define NCBUID_reset_value_NCBUUES_ERROVF_WIDTH  (1U)
#define NCBUID_reset_value_NCBUUES_ERROVF(x)     (((uint32_t)(((uint32_t)(x)) << NCBUID_reset_value_NCBUUES_ERROVF_SHIFT)) & NCBUID_reset_value_NCBUUES_ERROVF_MASK)
#define NCBUID_reset_value_NCBUUES_ERRCOUNT_MASK (0xFF0U)
#define NCBUID_reset_value_NCBUUES_ERRCOUNT_SHIFT (4U)
#define NCBUID_reset_value_NCBUUES_ERRCOUNT_WIDTH (8U)
#define NCBUID_reset_value_NCBUUES_ERRCOUNT(x)   (((uint32_t)(((uint32_t)(x)) << NCBUID_reset_value_NCBUUES_ERRCOUNT_SHIFT)) & NCBUID_reset_value_NCBUUES_ERRCOUNT_MASK)
#define NCBUID_reset_value_NCBUUES_ERRTYPE_MASK  (0xF000U)
#define NCBUID_reset_value_NCBUUES_ERRTYPE_SHIFT (12U)
#define NCBUID_reset_value_NCBUUES_ERRTYPE_WIDTH (4U)
#define NCBUID_reset_value_NCBUUES_ERRTYPE(x)    (((uint32_t)(((uint32_t)(x)) << NCBUID_reset_value_NCBUUES_ERRTYPE_SHIFT)) & NCBUID_reset_value_NCBUUES_ERRTYPE_MASK)
#define NCBUID_reset_value_NCBUUES_ERRINFO_MASK  (0xFF0000U)
#define NCBUID_reset_value_NCBUUES_ERRINFO_SHIFT (16U)
#define NCBUID_reset_value_NCBUUES_ERRINFO_WIDTH (8U)
#define NCBUID_reset_value_NCBUUES_ERRINFO(x)    (((uint32_t)(((uint32_t)(x)) << NCBUID_reset_value_NCBUUES_ERRINFO_SHIFT)) & NCBUID_reset_value_NCBUUES_ERRINFO_MASK)
/*! @} */

/*! @name NCBUUELR0 - NCBU Uncorrectable Error Location Register 0 */
/*! @{ */
#define NCBUID_reset_value_NCBUUELR0_ERRENTRY_MASK (0xFFFFFU)
#define NCBUID_reset_value_NCBUUELR0_ERRENTRY_SHIFT (0U)
#define NCBUID_reset_value_NCBUUELR0_ERRENTRY_WIDTH (20U)
#define NCBUID_reset_value_NCBUUELR0_ERRENTRY(x) (((uint32_t)(((uint32_t)(x)) << NCBUID_reset_value_NCBUUELR0_ERRENTRY_SHIFT)) & NCBUID_reset_value_NCBUUELR0_ERRENTRY_MASK)
#define NCBUID_reset_value_NCBUUELR0_ERRWAY_MASK (0x3F00000U)
#define NCBUID_reset_value_NCBUUELR0_ERRWAY_SHIFT (20U)
#define NCBUID_reset_value_NCBUUELR0_ERRWAY_WIDTH (6U)
#define NCBUID_reset_value_NCBUUELR0_ERRWAY(x)   (((uint32_t)(((uint32_t)(x)) << NCBUID_reset_value_NCBUUELR0_ERRWAY_SHIFT)) & NCBUID_reset_value_NCBUUELR0_ERRWAY_MASK)
#define NCBUID_reset_value_NCBUUELR0_ERRWORD_MASK (0xFC000000U)
#define NCBUID_reset_value_NCBUUELR0_ERRWORD_SHIFT (26U)
#define NCBUID_reset_value_NCBUUELR0_ERRWORD_WIDTH (6U)
#define NCBUID_reset_value_NCBUUELR0_ERRWORD(x)  (((uint32_t)(((uint32_t)(x)) << NCBUID_reset_value_NCBUUELR0_ERRWORD_SHIFT)) & NCBUID_reset_value_NCBUUELR0_ERRWORD_MASK)
/*! @} */

/*! @name NCBUUELR1 - NCBU Uncorrectable Error Location Register 1 */
/*! @{ */
#define NCBUID_reset_value_NCBUUELR1_ERRADDR_MASK (0xFFFU)
#define NCBUID_reset_value_NCBUUELR1_ERRADDR_SHIFT (0U)
#define NCBUID_reset_value_NCBUUELR1_ERRADDR_WIDTH (12U)
#define NCBUID_reset_value_NCBUUELR1_ERRADDR(x)  (((uint32_t)(((uint32_t)(x)) << NCBUID_reset_value_NCBUUELR1_ERRADDR_SHIFT)) & NCBUID_reset_value_NCBUUELR1_ERRADDR_MASK)
/*! @} */

/*! @name NCBUUESA - NCBU Uncorrectable Error Status Alias */
/*! @{ */
#define NCBUID_reset_value_NCBUUESA_ERRVLD_MASK  (0x1U)
#define NCBUID_reset_value_NCBUUESA_ERRVLD_SHIFT (0U)
#define NCBUID_reset_value_NCBUUESA_ERRVLD_WIDTH (1U)
#define NCBUID_reset_value_NCBUUESA_ERRVLD(x)    (((uint32_t)(((uint32_t)(x)) << NCBUID_reset_value_NCBUUESA_ERRVLD_SHIFT)) & NCBUID_reset_value_NCBUUESA_ERRVLD_MASK)
#define NCBUID_reset_value_NCBUUESA_ERROVF_MASK  (0x2U)
#define NCBUID_reset_value_NCBUUESA_ERROVF_SHIFT (1U)
#define NCBUID_reset_value_NCBUUESA_ERROVF_WIDTH (1U)
#define NCBUID_reset_value_NCBUUESA_ERROVF(x)    (((uint32_t)(((uint32_t)(x)) << NCBUID_reset_value_NCBUUESA_ERROVF_SHIFT)) & NCBUID_reset_value_NCBUUESA_ERROVF_MASK)
#define NCBUID_reset_value_NCBUUESA_ERRCOUNT_MASK (0xFF0U)
#define NCBUID_reset_value_NCBUUESA_ERRCOUNT_SHIFT (4U)
#define NCBUID_reset_value_NCBUUESA_ERRCOUNT_WIDTH (8U)
#define NCBUID_reset_value_NCBUUESA_ERRCOUNT(x)  (((uint32_t)(((uint32_t)(x)) << NCBUID_reset_value_NCBUUESA_ERRCOUNT_SHIFT)) & NCBUID_reset_value_NCBUUESA_ERRCOUNT_MASK)
#define NCBUID_reset_value_NCBUUESA_ERRTYPE_MASK (0xF000U)
#define NCBUID_reset_value_NCBUUESA_ERRTYPE_SHIFT (12U)
#define NCBUID_reset_value_NCBUUESA_ERRTYPE_WIDTH (4U)
#define NCBUID_reset_value_NCBUUESA_ERRTYPE(x)   (((uint32_t)(((uint32_t)(x)) << NCBUID_reset_value_NCBUUESA_ERRTYPE_SHIFT)) & NCBUID_reset_value_NCBUUESA_ERRTYPE_MASK)
#define NCBUID_reset_value_NCBUUESA_ERRINFO_MASK (0xFF0000U)
#define NCBUID_reset_value_NCBUUESA_ERRINFO_SHIFT (16U)
#define NCBUID_reset_value_NCBUUESA_ERRINFO_WIDTH (8U)
#define NCBUID_reset_value_NCBUUESA_ERRINFO(x)   (((uint32_t)(((uint32_t)(x)) << NCBUID_reset_value_NCBUUESA_ERRINFO_SHIFT)) & NCBUID_reset_value_NCBUUESA_ERRINFO_MASK)
/*! @} */

/*! @name NCBUID - NCBU Identification Register */
/*! @{ */
#define NCBUID_reset_value_NCBUID_IMPLVER_MASK   (0xFFU)
#define NCBUID_reset_value_NCBUID_IMPLVER_SHIFT  (0U)
#define NCBUID_reset_value_NCBUID_IMPLVER_WIDTH  (8U)
#define NCBUID_reset_value_NCBUID_IMPLVER(x)     (((uint32_t)(((uint32_t)(x)) << NCBUID_reset_value_NCBUID_IMPLVER_SHIFT)) & NCBUID_reset_value_NCBUID_IMPLVER_MASK)
#define NCBUID_reset_value_NCBUID_NCBID_MASK     (0x7F00U)
#define NCBUID_reset_value_NCBUID_NCBID_SHIFT    (8U)
#define NCBUID_reset_value_NCBUID_NCBID_WIDTH    (7U)
#define NCBUID_reset_value_NCBUID_NCBID(x)       (((uint32_t)(((uint32_t)(x)) << NCBUID_reset_value_NCBUID_NCBID_SHIFT)) & NCBUID_reset_value_NCBUID_NCBID_MASK)
#define NCBUID_reset_value_NCBUID_CA_MASK        (0x8000U)
#define NCBUID_reset_value_NCBUID_CA_SHIFT       (15U)
#define NCBUID_reset_value_NCBUID_CA_WIDTH       (1U)
#define NCBUID_reset_value_NCBUID_CA(x)          (((uint32_t)(((uint32_t)(x)) << NCBUID_reset_value_NCBUID_CA_SHIFT)) & NCBUID_reset_value_NCBUID_CA_MASK)
#define NCBUID_reset_value_NCBUID_TYPE_MASK      (0xF0000U)
#define NCBUID_reset_value_NCBUID_TYPE_SHIFT     (16U)
#define NCBUID_reset_value_NCBUID_TYPE_WIDTH     (4U)
#define NCBUID_reset_value_NCBUID_TYPE(x)        (((uint32_t)(((uint32_t)(x)) << NCBUID_reset_value_NCBUID_TYPE_SHIFT)) & NCBUID_reset_value_NCBUID_TYPE_MASK)
#define NCBUID_reset_value_NCBUID_SFID_MASK      (0x1F00000U)
#define NCBUID_reset_value_NCBUID_SFID_SHIFT     (20U)
#define NCBUID_reset_value_NCBUID_SFID_WIDTH     (5U)
#define NCBUID_reset_value_NCBUID_SFID(x)        (((uint32_t)(((uint32_t)(x)) << NCBUID_reset_value_NCBUID_SFID_SHIFT)) & NCBUID_reset_value_NCBUID_SFID_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group NCBUID_reset_value_Register_Masks */


/*!
 * @}
 */ /* end of group NCBUID_reset_value_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- OCOTP Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup OCOTP_Peripheral_Access_Layer OCOTP Peripheral Access Layer
 * @{
 */

/** OCOTP - Size of Registers Arrays */
#define OCOTP_GPR_COUNT                           2u
#define OCOTP_STICKY_REG_COUNT                    2u
#define OCOTP_SEC_COUNT                           4u
#define OCOTP_DED_COUNT                           4u
#define OCOTP_SHADOWS_COUNT                       128u

/** OCOTP - Register Layout Typedef */
typedef struct {
  __IO uint32_t CTRL_SYS;                          /**< System master's control, offset: 0x0 */
  __IO uint32_t ADDR_SYS;                          /**< System master's eFuse address for read or write operation, offset: 0x4 */
  __IO uint32_t WRDATA_SYS;                        /**< System master's eFuse write data, offset: 0x8 */
  __I  uint32_t RDATA_SYS;                         /**< System master's eFuse read data, offset: 0xC */
  uint8_t RESERVED_0[32];
  __IO uint32_t CTRL_FBX;                          /**< FBXC control, offset: 0x30 */
  __IO uint32_t CRC_RGN_SYS;                       /**< eFuse region for CRC validation, offset: 0x34 */
  __IO uint32_t CRC_ADDR_SYS;                      /**< Pre-calculated CRC eFuse address for comparision, offset: 0x38 */
  __I  uint32_t CRC_VALUE_SYS;                     /**< CRC calculated from the eFuses, offset: 0x3C */
  __IO uint32_t GPR[OCOTP_GPR_COUNT];              /**< General purpose, array offset: 0x40, array step: 0x4 */
  uint8_t RESERVED_1[8];
  __IO uint32_t STATUS_SYS;                        /**< System master's access status, offset: 0x50 */
  uint8_t RESERVED_2[8];
  __I  uint32_t VERSION;                           /**< OCOTP design version, offset: 0x5C */
  __IO uint32_t STR[OCOTP_STICKY_REG_COUNT];       /**< Sticky, array offset: 0x60, array step: 0x4 */
  uint8_t RESERVED_3[8];
  __I  uint32_t SEC[OCOTP_SEC_COUNT];              /**< ECC status for single-bit ECC error, array offset: 0x70, array step: 0x4 */
  uint8_t RESERVED_4[48];
  __I  uint32_t DED[OCOTP_DED_COUNT];              /**< ECC status for double-bit ECC error, array offset: 0xB0, array step: 0x4 */
  uint8_t RESERVED_5[48];
  __IO uint32_t ERR_INJCTR;                        /**< ECC error injector, offset: 0xF0 */
  uint8_t RESERVED_6[268];
  __IO uint32_t SHADOWS[OCOTP_SHADOWS_COUNT];      /**< Shadow, array offset: 0x200, array step: 0x4 */
} OCOTP_Type, *OCOTP_MemMapPtr;

/** Number of instances of the OCOTP module. */
#define OCOTP_INSTANCE_COUNT                     (1u)

/* OCOTP - Peripheral instance base addresses */
/** Peripheral OCOTP base address */
#define OCOTP_BASE                               (0x400A4000u)
/** Peripheral OCOTP base pointer */
#define OCOTP                                    ((OCOTP_Type *)OCOTP_BASE)
/** Array initializer of OCOTP peripheral base addresses */
#define OCOTP_BASE_ADDRS                         { OCOTP_BASE }
/** Array initializer of OCOTP peripheral base pointers */
#define OCOTP_BASE_PTRS                          { OCOTP }

/* ----------------------------------------------------------------------------
   -- OCOTP Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup OCOTP_Register_Masks OCOTP Register Masks
 * @{
 */

/*! @name CTRL_SYS - System master's control */
/*! @{ */
#define OCOTP_CTRL_SYS_CRC_TEST_MASK             (0x2U)
#define OCOTP_CTRL_SYS_CRC_TEST_SHIFT            (1U)
#define OCOTP_CTRL_SYS_CRC_TEST_WIDTH            (1U)
#define OCOTP_CTRL_SYS_CRC_TEST(x)               (((uint32_t)(((uint32_t)(x)) << OCOTP_CTRL_SYS_CRC_TEST_SHIFT)) & OCOTP_CTRL_SYS_CRC_TEST_MASK)
#define OCOTP_CTRL_SYS_RD_WR_MASK                (0x3CU)
#define OCOTP_CTRL_SYS_RD_WR_SHIFT               (2U)
#define OCOTP_CTRL_SYS_RD_WR_WIDTH               (4U)
#define OCOTP_CTRL_SYS_RD_WR(x)                  (((uint32_t)(((uint32_t)(x)) << OCOTP_CTRL_SYS_RD_WR_SHIFT)) & OCOTP_CTRL_SYS_RD_WR_MASK)
#define OCOTP_CTRL_SYS_AUTH_KEY_MASK             (0xFFFF0000U)
#define OCOTP_CTRL_SYS_AUTH_KEY_SHIFT            (16U)
#define OCOTP_CTRL_SYS_AUTH_KEY_WIDTH            (16U)
#define OCOTP_CTRL_SYS_AUTH_KEY(x)               (((uint32_t)(((uint32_t)(x)) << OCOTP_CTRL_SYS_AUTH_KEY_SHIFT)) & OCOTP_CTRL_SYS_AUTH_KEY_MASK)
/*! @} */

/*! @name ADDR_SYS - System master's eFuse address for read or write operation */
/*! @{ */
#define OCOTP_ADDR_SYS_ADDR_MASK                 (0xFFFFU)
#define OCOTP_ADDR_SYS_ADDR_SHIFT                (0U)
#define OCOTP_ADDR_SYS_ADDR_WIDTH                (16U)
#define OCOTP_ADDR_SYS_ADDR(x)                   (((uint32_t)(((uint32_t)(x)) << OCOTP_ADDR_SYS_ADDR_SHIFT)) & OCOTP_ADDR_SYS_ADDR_MASK)
/*! @} */

/*! @name WRDATA_SYS - System master's eFuse write data */
/*! @{ */
#define OCOTP_WRDATA_SYS_DATA_MASK               (0xFFFFFFFFU)
#define OCOTP_WRDATA_SYS_DATA_SHIFT              (0U)
#define OCOTP_WRDATA_SYS_DATA_WIDTH              (32U)
#define OCOTP_WRDATA_SYS_DATA(x)                 (((uint32_t)(((uint32_t)(x)) << OCOTP_WRDATA_SYS_DATA_SHIFT)) & OCOTP_WRDATA_SYS_DATA_MASK)
/*! @} */

/*! @name RDATA_SYS - System master's eFuse read data */
/*! @{ */
#define OCOTP_RDATA_SYS_DATA_MASK                (0xFFFFFFFFU)
#define OCOTP_RDATA_SYS_DATA_SHIFT               (0U)
#define OCOTP_RDATA_SYS_DATA_WIDTH               (32U)
#define OCOTP_RDATA_SYS_DATA(x)                  (((uint32_t)(((uint32_t)(x)) << OCOTP_RDATA_SYS_DATA_SHIFT)) & OCOTP_RDATA_SYS_DATA_MASK)
/*! @} */

/*! @name CTRL_FBX - FBXC control */
/*! @{ */
#define OCOTP_CTRL_FBX_SEC_MODE_MASK             (0x100U)
#define OCOTP_CTRL_FBX_SEC_MODE_SHIFT            (8U)
#define OCOTP_CTRL_FBX_SEC_MODE_WIDTH            (1U)
#define OCOTP_CTRL_FBX_SEC_MODE(x)               (((uint32_t)(((uint32_t)(x)) << OCOTP_CTRL_FBX_SEC_MODE_SHIFT)) & OCOTP_CTRL_FBX_SEC_MODE_MASK)
#define OCOTP_CTRL_FBX_FBX_PD_MASK               (0x10000U)
#define OCOTP_CTRL_FBX_FBX_PD_SHIFT              (16U)
#define OCOTP_CTRL_FBX_FBX_PD_WIDTH              (1U)
#define OCOTP_CTRL_FBX_FBX_PD(x)                 (((uint32_t)(((uint32_t)(x)) << OCOTP_CTRL_FBX_FBX_PD_SHIFT)) & OCOTP_CTRL_FBX_FBX_PD_MASK)
#define OCOTP_CTRL_FBX_IPG_STOP_MASK             (0x20000U)
#define OCOTP_CTRL_FBX_IPG_STOP_SHIFT            (17U)
#define OCOTP_CTRL_FBX_IPG_STOP_WIDTH            (1U)
#define OCOTP_CTRL_FBX_IPG_STOP(x)               (((uint32_t)(((uint32_t)(x)) << OCOTP_CTRL_FBX_IPG_STOP_SHIFT)) & OCOTP_CTRL_FBX_IPG_STOP_MASK)
#define OCOTP_CTRL_FBX_IPG_STOP_ACK_MASK         (0x40000U)
#define OCOTP_CTRL_FBX_IPG_STOP_ACK_SHIFT        (18U)
#define OCOTP_CTRL_FBX_IPG_STOP_ACK_WIDTH        (1U)
#define OCOTP_CTRL_FBX_IPG_STOP_ACK(x)           (((uint32_t)(((uint32_t)(x)) << OCOTP_CTRL_FBX_IPG_STOP_ACK_SHIFT)) & OCOTP_CTRL_FBX_IPG_STOP_ACK_MASK)
/*! @} */

/*! @name CRC_RGN_SYS - eFuse region for CRC validation */
/*! @{ */
#define OCOTP_CRC_RGN_SYS_START_ADDR_MASK        (0xFFFFU)
#define OCOTP_CRC_RGN_SYS_START_ADDR_SHIFT       (0U)
#define OCOTP_CRC_RGN_SYS_START_ADDR_WIDTH       (16U)
#define OCOTP_CRC_RGN_SYS_START_ADDR(x)          (((uint32_t)(((uint32_t)(x)) << OCOTP_CRC_RGN_SYS_START_ADDR_SHIFT)) & OCOTP_CRC_RGN_SYS_START_ADDR_MASK)
#define OCOTP_CRC_RGN_SYS_END_ADDR_MASK          (0xFFFF0000U)
#define OCOTP_CRC_RGN_SYS_END_ADDR_SHIFT         (16U)
#define OCOTP_CRC_RGN_SYS_END_ADDR_WIDTH         (16U)
#define OCOTP_CRC_RGN_SYS_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << OCOTP_CRC_RGN_SYS_END_ADDR_SHIFT)) & OCOTP_CRC_RGN_SYS_END_ADDR_MASK)
/*! @} */

/*! @name CRC_ADDR_SYS - Pre-calculated CRC eFuse address for comparision */
/*! @{ */
#define OCOTP_CRC_ADDR_SYS_ADDR_MASK             (0xFFFFU)
#define OCOTP_CRC_ADDR_SYS_ADDR_SHIFT            (0U)
#define OCOTP_CRC_ADDR_SYS_ADDR_WIDTH            (16U)
#define OCOTP_CRC_ADDR_SYS_ADDR(x)               (((uint32_t)(((uint32_t)(x)) << OCOTP_CRC_ADDR_SYS_ADDR_SHIFT)) & OCOTP_CRC_ADDR_SYS_ADDR_MASK)
/*! @} */

/*! @name CRC_VALUE_SYS - CRC calculated from the eFuses */
/*! @{ */
#define OCOTP_CRC_VALUE_SYS_CRC_MASK             (0xFFFFFFFFU)
#define OCOTP_CRC_VALUE_SYS_CRC_SHIFT            (0U)
#define OCOTP_CRC_VALUE_SYS_CRC_WIDTH            (32U)
#define OCOTP_CRC_VALUE_SYS_CRC(x)               (((uint32_t)(((uint32_t)(x)) << OCOTP_CRC_VALUE_SYS_CRC_SHIFT)) & OCOTP_CRC_VALUE_SYS_CRC_MASK)
/*! @} */

/*! @name GPR - General purpose */
/*! @{ */
#define OCOTP_GPR_GPR_MASK                       (0xFFFFFFFFU)
#define OCOTP_GPR_GPR_SHIFT                      (0U)
#define OCOTP_GPR_GPR_WIDTH                      (32U)
#define OCOTP_GPR_GPR(x)                         (((uint32_t)(((uint32_t)(x)) << OCOTP_GPR_GPR_SHIFT)) & OCOTP_GPR_GPR_MASK)
/*! @} */

/*! @name STATUS_SYS - System master's access status */
/*! @{ */
#define OCOTP_STATUS_SYS_BUSY_MASK               (0x1U)
#define OCOTP_STATUS_SYS_BUSY_SHIFT              (0U)
#define OCOTP_STATUS_SYS_BUSY_WIDTH              (1U)
#define OCOTP_STATUS_SYS_BUSY(x)                 (((uint32_t)(((uint32_t)(x)) << OCOTP_STATUS_SYS_BUSY_SHIFT)) & OCOTP_STATUS_SYS_BUSY_MASK)
#define OCOTP_STATUS_SYS_CRC_FAIL_MASK           (0x2U)
#define OCOTP_STATUS_SYS_CRC_FAIL_SHIFT          (1U)
#define OCOTP_STATUS_SYS_CRC_FAIL_WIDTH          (1U)
#define OCOTP_STATUS_SYS_CRC_FAIL(x)             (((uint32_t)(((uint32_t)(x)) << OCOTP_STATUS_SYS_CRC_FAIL_SHIFT)) & OCOTP_STATUS_SYS_CRC_FAIL_MASK)
#define OCOTP_STATUS_SYS_ERROR_MASK              (0x4U)
#define OCOTP_STATUS_SYS_ERROR_SHIFT             (2U)
#define OCOTP_STATUS_SYS_ERROR_WIDTH             (1U)
#define OCOTP_STATUS_SYS_ERROR(x)                (((uint32_t)(((uint32_t)(x)) << OCOTP_STATUS_SYS_ERROR_SHIFT)) & OCOTP_STATUS_SYS_ERROR_MASK)
/*! @} */

/*! @name VERSION - OCOTP design version */
/*! @{ */
#define OCOTP_VERSION_STEP_MASK                  (0xFFFFU)
#define OCOTP_VERSION_STEP_SHIFT                 (0U)
#define OCOTP_VERSION_STEP_WIDTH                 (16U)
#define OCOTP_VERSION_STEP(x)                    (((uint32_t)(((uint32_t)(x)) << OCOTP_VERSION_STEP_SHIFT)) & OCOTP_VERSION_STEP_MASK)
#define OCOTP_VERSION_MINOR_MASK                 (0xFF0000U)
#define OCOTP_VERSION_MINOR_SHIFT                (16U)
#define OCOTP_VERSION_MINOR_WIDTH                (8U)
#define OCOTP_VERSION_MINOR(x)                   (((uint32_t)(((uint32_t)(x)) << OCOTP_VERSION_MINOR_SHIFT)) & OCOTP_VERSION_MINOR_MASK)
#define OCOTP_VERSION_MAJOR_MASK                 (0xFF000000U)
#define OCOTP_VERSION_MAJOR_SHIFT                (24U)
#define OCOTP_VERSION_MAJOR_WIDTH                (8U)
#define OCOTP_VERSION_MAJOR(x)                   (((uint32_t)(((uint32_t)(x)) << OCOTP_VERSION_MAJOR_SHIFT)) & OCOTP_VERSION_MAJOR_MASK)
/*! @} */

/*! @name STR - Sticky */
/*! @{ */
#define OCOTP_STR_STR_MASK                       (0xFFFFFFFFU)
#define OCOTP_STR_STR_SHIFT                      (0U)
#define OCOTP_STR_STR_WIDTH                      (32U)
#define OCOTP_STR_STR(x)                         (((uint32_t)(((uint32_t)(x)) << OCOTP_STR_STR_SHIFT)) & OCOTP_STR_STR_MASK)
/*! @} */

/*! @name SEC - ECC status for single-bit ECC error */
/*! @{ */
#define OCOTP_SEC_SEC1_MASK                      (0x1U)
#define OCOTP_SEC_SEC1_SHIFT                     (0U)
#define OCOTP_SEC_SEC1_WIDTH                     (1U)
#define OCOTP_SEC_SEC1(x)                        (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC1_SHIFT)) & OCOTP_SEC_SEC1_MASK)
#define OCOTP_SEC_SEC2_MASK                      (0x2U)
#define OCOTP_SEC_SEC2_SHIFT                     (1U)
#define OCOTP_SEC_SEC2_WIDTH                     (1U)
#define OCOTP_SEC_SEC2(x)                        (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC2_SHIFT)) & OCOTP_SEC_SEC2_MASK)
#define OCOTP_SEC_SEC3_MASK                      (0x4U)
#define OCOTP_SEC_SEC3_SHIFT                     (2U)
#define OCOTP_SEC_SEC3_WIDTH                     (1U)
#define OCOTP_SEC_SEC3(x)                        (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC3_SHIFT)) & OCOTP_SEC_SEC3_MASK)
#define OCOTP_SEC_SEC4_MASK                      (0x8U)
#define OCOTP_SEC_SEC4_SHIFT                     (3U)
#define OCOTP_SEC_SEC4_WIDTH                     (1U)
#define OCOTP_SEC_SEC4(x)                        (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC4_SHIFT)) & OCOTP_SEC_SEC4_MASK)
#define OCOTP_SEC_SEC5_MASK                      (0x10U)
#define OCOTP_SEC_SEC5_SHIFT                     (4U)
#define OCOTP_SEC_SEC5_WIDTH                     (1U)
#define OCOTP_SEC_SEC5(x)                        (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC5_SHIFT)) & OCOTP_SEC_SEC5_MASK)
#define OCOTP_SEC_SEC6_MASK                      (0x20U)
#define OCOTP_SEC_SEC6_SHIFT                     (5U)
#define OCOTP_SEC_SEC6_WIDTH                     (1U)
#define OCOTP_SEC_SEC6(x)                        (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC6_SHIFT)) & OCOTP_SEC_SEC6_MASK)
#define OCOTP_SEC_SEC7_MASK                      (0x40U)
#define OCOTP_SEC_SEC7_SHIFT                     (6U)
#define OCOTP_SEC_SEC7_WIDTH                     (1U)
#define OCOTP_SEC_SEC7(x)                        (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC7_SHIFT)) & OCOTP_SEC_SEC7_MASK)
#define OCOTP_SEC_SEC8_MASK                      (0x80U)
#define OCOTP_SEC_SEC8_SHIFT                     (7U)
#define OCOTP_SEC_SEC8_WIDTH                     (1U)
#define OCOTP_SEC_SEC8(x)                        (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC8_SHIFT)) & OCOTP_SEC_SEC8_MASK)
#define OCOTP_SEC_SEC9_MASK                      (0x100U)
#define OCOTP_SEC_SEC9_SHIFT                     (8U)
#define OCOTP_SEC_SEC9_WIDTH                     (1U)
#define OCOTP_SEC_SEC9(x)                        (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC9_SHIFT)) & OCOTP_SEC_SEC9_MASK)
#define OCOTP_SEC_SEC10_MASK                     (0x200U)
#define OCOTP_SEC_SEC10_SHIFT                    (9U)
#define OCOTP_SEC_SEC10_WIDTH                    (1U)
#define OCOTP_SEC_SEC10(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC10_SHIFT)) & OCOTP_SEC_SEC10_MASK)
#define OCOTP_SEC_SEC11_MASK                     (0x400U)
#define OCOTP_SEC_SEC11_SHIFT                    (10U)
#define OCOTP_SEC_SEC11_WIDTH                    (1U)
#define OCOTP_SEC_SEC11(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC11_SHIFT)) & OCOTP_SEC_SEC11_MASK)
#define OCOTP_SEC_SEC12_MASK                     (0x800U)
#define OCOTP_SEC_SEC12_SHIFT                    (11U)
#define OCOTP_SEC_SEC12_WIDTH                    (1U)
#define OCOTP_SEC_SEC12(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC12_SHIFT)) & OCOTP_SEC_SEC12_MASK)
#define OCOTP_SEC_SEC13_MASK                     (0x1000U)
#define OCOTP_SEC_SEC13_SHIFT                    (12U)
#define OCOTP_SEC_SEC13_WIDTH                    (1U)
#define OCOTP_SEC_SEC13(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC13_SHIFT)) & OCOTP_SEC_SEC13_MASK)
#define OCOTP_SEC_SEC14_MASK                     (0x2000U)
#define OCOTP_SEC_SEC14_SHIFT                    (13U)
#define OCOTP_SEC_SEC14_WIDTH                    (1U)
#define OCOTP_SEC_SEC14(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC14_SHIFT)) & OCOTP_SEC_SEC14_MASK)
#define OCOTP_SEC_SEC15_MASK                     (0x4000U)
#define OCOTP_SEC_SEC15_SHIFT                    (14U)
#define OCOTP_SEC_SEC15_WIDTH                    (1U)
#define OCOTP_SEC_SEC15(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC15_SHIFT)) & OCOTP_SEC_SEC15_MASK)
#define OCOTP_SEC_SEC16_MASK                     (0x8000U)
#define OCOTP_SEC_SEC16_SHIFT                    (15U)
#define OCOTP_SEC_SEC16_WIDTH                    (1U)
#define OCOTP_SEC_SEC16(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC16_SHIFT)) & OCOTP_SEC_SEC16_MASK)
#define OCOTP_SEC_SEC17_MASK                     (0x10000U)
#define OCOTP_SEC_SEC17_SHIFT                    (16U)
#define OCOTP_SEC_SEC17_WIDTH                    (1U)
#define OCOTP_SEC_SEC17(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC17_SHIFT)) & OCOTP_SEC_SEC17_MASK)
#define OCOTP_SEC_SEC18_MASK                     (0x20000U)
#define OCOTP_SEC_SEC18_SHIFT                    (17U)
#define OCOTP_SEC_SEC18_WIDTH                    (1U)
#define OCOTP_SEC_SEC18(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC18_SHIFT)) & OCOTP_SEC_SEC18_MASK)
#define OCOTP_SEC_SEC19_MASK                     (0x40000U)
#define OCOTP_SEC_SEC19_SHIFT                    (18U)
#define OCOTP_SEC_SEC19_WIDTH                    (1U)
#define OCOTP_SEC_SEC19(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC19_SHIFT)) & OCOTP_SEC_SEC19_MASK)
#define OCOTP_SEC_SEC20_MASK                     (0x80000U)
#define OCOTP_SEC_SEC20_SHIFT                    (19U)
#define OCOTP_SEC_SEC20_WIDTH                    (1U)
#define OCOTP_SEC_SEC20(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC20_SHIFT)) & OCOTP_SEC_SEC20_MASK)
#define OCOTP_SEC_SEC21_MASK                     (0x100000U)
#define OCOTP_SEC_SEC21_SHIFT                    (20U)
#define OCOTP_SEC_SEC21_WIDTH                    (1U)
#define OCOTP_SEC_SEC21(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC21_SHIFT)) & OCOTP_SEC_SEC21_MASK)
#define OCOTP_SEC_SEC22_MASK                     (0x200000U)
#define OCOTP_SEC_SEC22_SHIFT                    (21U)
#define OCOTP_SEC_SEC22_WIDTH                    (1U)
#define OCOTP_SEC_SEC22(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC22_SHIFT)) & OCOTP_SEC_SEC22_MASK)
#define OCOTP_SEC_SEC23_MASK                     (0x400000U)
#define OCOTP_SEC_SEC23_SHIFT                    (22U)
#define OCOTP_SEC_SEC23_WIDTH                    (1U)
#define OCOTP_SEC_SEC23(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC23_SHIFT)) & OCOTP_SEC_SEC23_MASK)
#define OCOTP_SEC_SEC24_MASK                     (0x800000U)
#define OCOTP_SEC_SEC24_SHIFT                    (23U)
#define OCOTP_SEC_SEC24_WIDTH                    (1U)
#define OCOTP_SEC_SEC24(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC24_SHIFT)) & OCOTP_SEC_SEC24_MASK)
#define OCOTP_SEC_SEC25_MASK                     (0x1000000U)
#define OCOTP_SEC_SEC25_SHIFT                    (24U)
#define OCOTP_SEC_SEC25_WIDTH                    (1U)
#define OCOTP_SEC_SEC25(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC25_SHIFT)) & OCOTP_SEC_SEC25_MASK)
#define OCOTP_SEC_SEC26_MASK                     (0x2000000U)
#define OCOTP_SEC_SEC26_SHIFT                    (25U)
#define OCOTP_SEC_SEC26_WIDTH                    (1U)
#define OCOTP_SEC_SEC26(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC26_SHIFT)) & OCOTP_SEC_SEC26_MASK)
#define OCOTP_SEC_SEC27_MASK                     (0x4000000U)
#define OCOTP_SEC_SEC27_SHIFT                    (26U)
#define OCOTP_SEC_SEC27_WIDTH                    (1U)
#define OCOTP_SEC_SEC27(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC27_SHIFT)) & OCOTP_SEC_SEC27_MASK)
#define OCOTP_SEC_SEC28_MASK                     (0x8000000U)
#define OCOTP_SEC_SEC28_SHIFT                    (27U)
#define OCOTP_SEC_SEC28_WIDTH                    (1U)
#define OCOTP_SEC_SEC28(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC28_SHIFT)) & OCOTP_SEC_SEC28_MASK)
#define OCOTP_SEC_SEC29_MASK                     (0x10000000U)
#define OCOTP_SEC_SEC29_SHIFT                    (28U)
#define OCOTP_SEC_SEC29_WIDTH                    (1U)
#define OCOTP_SEC_SEC29(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC29_SHIFT)) & OCOTP_SEC_SEC29_MASK)
#define OCOTP_SEC_SEC30_MASK                     (0x20000000U)
#define OCOTP_SEC_SEC30_SHIFT                    (29U)
#define OCOTP_SEC_SEC30_WIDTH                    (1U)
#define OCOTP_SEC_SEC30(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC30_SHIFT)) & OCOTP_SEC_SEC30_MASK)
#define OCOTP_SEC_SEC31_MASK                     (0x40000000U)
#define OCOTP_SEC_SEC31_SHIFT                    (30U)
#define OCOTP_SEC_SEC31_WIDTH                    (1U)
#define OCOTP_SEC_SEC31(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC31_SHIFT)) & OCOTP_SEC_SEC31_MASK)
#define OCOTP_SEC_SEC32_MASK                     (0x80000000U)
#define OCOTP_SEC_SEC32_SHIFT                    (31U)
#define OCOTP_SEC_SEC32_WIDTH                    (1U)
#define OCOTP_SEC_SEC32(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC32_SHIFT)) & OCOTP_SEC_SEC32_MASK)
#define OCOTP_SEC_SEC33_MASK                     (0x1U)
#define OCOTP_SEC_SEC33_SHIFT                    (0U)
#define OCOTP_SEC_SEC33_WIDTH                    (1U)
#define OCOTP_SEC_SEC33(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC33_SHIFT)) & OCOTP_SEC_SEC33_MASK)
#define OCOTP_SEC_SEC34_MASK                     (0x2U)
#define OCOTP_SEC_SEC34_SHIFT                    (1U)
#define OCOTP_SEC_SEC34_WIDTH                    (1U)
#define OCOTP_SEC_SEC34(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC34_SHIFT)) & OCOTP_SEC_SEC34_MASK)
#define OCOTP_SEC_SEC35_MASK                     (0x4U)
#define OCOTP_SEC_SEC35_SHIFT                    (2U)
#define OCOTP_SEC_SEC35_WIDTH                    (1U)
#define OCOTP_SEC_SEC35(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC35_SHIFT)) & OCOTP_SEC_SEC35_MASK)
#define OCOTP_SEC_SEC36_MASK                     (0x8U)
#define OCOTP_SEC_SEC36_SHIFT                    (3U)
#define OCOTP_SEC_SEC36_WIDTH                    (1U)
#define OCOTP_SEC_SEC36(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC36_SHIFT)) & OCOTP_SEC_SEC36_MASK)
#define OCOTP_SEC_SEC37_MASK                     (0x10U)
#define OCOTP_SEC_SEC37_SHIFT                    (4U)
#define OCOTP_SEC_SEC37_WIDTH                    (1U)
#define OCOTP_SEC_SEC37(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC37_SHIFT)) & OCOTP_SEC_SEC37_MASK)
#define OCOTP_SEC_SEC38_MASK                     (0x20U)
#define OCOTP_SEC_SEC38_SHIFT                    (5U)
#define OCOTP_SEC_SEC38_WIDTH                    (1U)
#define OCOTP_SEC_SEC38(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC38_SHIFT)) & OCOTP_SEC_SEC38_MASK)
#define OCOTP_SEC_SEC39_MASK                     (0x40U)
#define OCOTP_SEC_SEC39_SHIFT                    (6U)
#define OCOTP_SEC_SEC39_WIDTH                    (1U)
#define OCOTP_SEC_SEC39(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC39_SHIFT)) & OCOTP_SEC_SEC39_MASK)
#define OCOTP_SEC_SEC40_MASK                     (0x80U)
#define OCOTP_SEC_SEC40_SHIFT                    (7U)
#define OCOTP_SEC_SEC40_WIDTH                    (1U)
#define OCOTP_SEC_SEC40(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC40_SHIFT)) & OCOTP_SEC_SEC40_MASK)
#define OCOTP_SEC_SEC41_MASK                     (0x100U)
#define OCOTP_SEC_SEC41_SHIFT                    (8U)
#define OCOTP_SEC_SEC41_WIDTH                    (1U)
#define OCOTP_SEC_SEC41(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC41_SHIFT)) & OCOTP_SEC_SEC41_MASK)
#define OCOTP_SEC_SEC42_MASK                     (0x200U)
#define OCOTP_SEC_SEC42_SHIFT                    (9U)
#define OCOTP_SEC_SEC42_WIDTH                    (1U)
#define OCOTP_SEC_SEC42(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC42_SHIFT)) & OCOTP_SEC_SEC42_MASK)
#define OCOTP_SEC_SEC43_MASK                     (0x400U)
#define OCOTP_SEC_SEC43_SHIFT                    (10U)
#define OCOTP_SEC_SEC43_WIDTH                    (1U)
#define OCOTP_SEC_SEC43(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC43_SHIFT)) & OCOTP_SEC_SEC43_MASK)
#define OCOTP_SEC_SEC44_MASK                     (0x800U)
#define OCOTP_SEC_SEC44_SHIFT                    (11U)
#define OCOTP_SEC_SEC44_WIDTH                    (1U)
#define OCOTP_SEC_SEC44(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC44_SHIFT)) & OCOTP_SEC_SEC44_MASK)
#define OCOTP_SEC_SEC45_MASK                     (0x1000U)
#define OCOTP_SEC_SEC45_SHIFT                    (12U)
#define OCOTP_SEC_SEC45_WIDTH                    (1U)
#define OCOTP_SEC_SEC45(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC45_SHIFT)) & OCOTP_SEC_SEC45_MASK)
#define OCOTP_SEC_SEC46_MASK                     (0x2000U)
#define OCOTP_SEC_SEC46_SHIFT                    (13U)
#define OCOTP_SEC_SEC46_WIDTH                    (1U)
#define OCOTP_SEC_SEC46(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC46_SHIFT)) & OCOTP_SEC_SEC46_MASK)
#define OCOTP_SEC_SEC47_MASK                     (0x4000U)
#define OCOTP_SEC_SEC47_SHIFT                    (14U)
#define OCOTP_SEC_SEC47_WIDTH                    (1U)
#define OCOTP_SEC_SEC47(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC47_SHIFT)) & OCOTP_SEC_SEC47_MASK)
#define OCOTP_SEC_SEC48_MASK                     (0x8000U)
#define OCOTP_SEC_SEC48_SHIFT                    (15U)
#define OCOTP_SEC_SEC48_WIDTH                    (1U)
#define OCOTP_SEC_SEC48(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC48_SHIFT)) & OCOTP_SEC_SEC48_MASK)
#define OCOTP_SEC_SEC49_MASK                     (0x10000U)
#define OCOTP_SEC_SEC49_SHIFT                    (16U)
#define OCOTP_SEC_SEC49_WIDTH                    (1U)
#define OCOTP_SEC_SEC49(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC49_SHIFT)) & OCOTP_SEC_SEC49_MASK)
#define OCOTP_SEC_SEC50_MASK                     (0x20000U)
#define OCOTP_SEC_SEC50_SHIFT                    (17U)
#define OCOTP_SEC_SEC50_WIDTH                    (1U)
#define OCOTP_SEC_SEC50(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC50_SHIFT)) & OCOTP_SEC_SEC50_MASK)
#define OCOTP_SEC_SEC51_MASK                     (0x40000U)
#define OCOTP_SEC_SEC51_SHIFT                    (18U)
#define OCOTP_SEC_SEC51_WIDTH                    (1U)
#define OCOTP_SEC_SEC51(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC51_SHIFT)) & OCOTP_SEC_SEC51_MASK)
#define OCOTP_SEC_SEC52_MASK                     (0x80000U)
#define OCOTP_SEC_SEC52_SHIFT                    (19U)
#define OCOTP_SEC_SEC52_WIDTH                    (1U)
#define OCOTP_SEC_SEC52(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC52_SHIFT)) & OCOTP_SEC_SEC52_MASK)
#define OCOTP_SEC_SEC53_MASK                     (0x100000U)
#define OCOTP_SEC_SEC53_SHIFT                    (20U)
#define OCOTP_SEC_SEC53_WIDTH                    (1U)
#define OCOTP_SEC_SEC53(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC53_SHIFT)) & OCOTP_SEC_SEC53_MASK)
#define OCOTP_SEC_SEC54_MASK                     (0x200000U)
#define OCOTP_SEC_SEC54_SHIFT                    (21U)
#define OCOTP_SEC_SEC54_WIDTH                    (1U)
#define OCOTP_SEC_SEC54(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC54_SHIFT)) & OCOTP_SEC_SEC54_MASK)
#define OCOTP_SEC_SEC55_MASK                     (0x400000U)
#define OCOTP_SEC_SEC55_SHIFT                    (22U)
#define OCOTP_SEC_SEC55_WIDTH                    (1U)
#define OCOTP_SEC_SEC55(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC55_SHIFT)) & OCOTP_SEC_SEC55_MASK)
#define OCOTP_SEC_SEC56_MASK                     (0x800000U)
#define OCOTP_SEC_SEC56_SHIFT                    (23U)
#define OCOTP_SEC_SEC56_WIDTH                    (1U)
#define OCOTP_SEC_SEC56(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC56_SHIFT)) & OCOTP_SEC_SEC56_MASK)
#define OCOTP_SEC_SEC57_MASK                     (0x1000000U)
#define OCOTP_SEC_SEC57_SHIFT                    (24U)
#define OCOTP_SEC_SEC57_WIDTH                    (1U)
#define OCOTP_SEC_SEC57(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC57_SHIFT)) & OCOTP_SEC_SEC57_MASK)
#define OCOTP_SEC_SEC58_MASK                     (0x2000000U)
#define OCOTP_SEC_SEC58_SHIFT                    (25U)
#define OCOTP_SEC_SEC58_WIDTH                    (1U)
#define OCOTP_SEC_SEC58(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC58_SHIFT)) & OCOTP_SEC_SEC58_MASK)
#define OCOTP_SEC_SEC59_MASK                     (0x4000000U)
#define OCOTP_SEC_SEC59_SHIFT                    (26U)
#define OCOTP_SEC_SEC59_WIDTH                    (1U)
#define OCOTP_SEC_SEC59(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC59_SHIFT)) & OCOTP_SEC_SEC59_MASK)
#define OCOTP_SEC_SEC60_MASK                     (0x8000000U)
#define OCOTP_SEC_SEC60_SHIFT                    (27U)
#define OCOTP_SEC_SEC60_WIDTH                    (1U)
#define OCOTP_SEC_SEC60(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC60_SHIFT)) & OCOTP_SEC_SEC60_MASK)
#define OCOTP_SEC_SEC61_MASK                     (0x10000000U)
#define OCOTP_SEC_SEC61_SHIFT                    (28U)
#define OCOTP_SEC_SEC61_WIDTH                    (1U)
#define OCOTP_SEC_SEC61(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC61_SHIFT)) & OCOTP_SEC_SEC61_MASK)
#define OCOTP_SEC_SEC62_MASK                     (0x20000000U)
#define OCOTP_SEC_SEC62_SHIFT                    (29U)
#define OCOTP_SEC_SEC62_WIDTH                    (1U)
#define OCOTP_SEC_SEC62(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC62_SHIFT)) & OCOTP_SEC_SEC62_MASK)
#define OCOTP_SEC_SEC63_MASK                     (0x40000000U)
#define OCOTP_SEC_SEC63_SHIFT                    (30U)
#define OCOTP_SEC_SEC63_WIDTH                    (1U)
#define OCOTP_SEC_SEC63(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC63_SHIFT)) & OCOTP_SEC_SEC63_MASK)
#define OCOTP_SEC_SEC64_MASK                     (0x80000000U)
#define OCOTP_SEC_SEC64_SHIFT                    (31U)
#define OCOTP_SEC_SEC64_WIDTH                    (1U)
#define OCOTP_SEC_SEC64(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC64_SHIFT)) & OCOTP_SEC_SEC64_MASK)
#define OCOTP_SEC_SEC65_MASK                     (0x1U)
#define OCOTP_SEC_SEC65_SHIFT                    (0U)
#define OCOTP_SEC_SEC65_WIDTH                    (1U)
#define OCOTP_SEC_SEC65(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC65_SHIFT)) & OCOTP_SEC_SEC65_MASK)
#define OCOTP_SEC_SEC66_MASK                     (0x2U)
#define OCOTP_SEC_SEC66_SHIFT                    (1U)
#define OCOTP_SEC_SEC66_WIDTH                    (1U)
#define OCOTP_SEC_SEC66(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC66_SHIFT)) & OCOTP_SEC_SEC66_MASK)
#define OCOTP_SEC_SEC67_MASK                     (0x4U)
#define OCOTP_SEC_SEC67_SHIFT                    (2U)
#define OCOTP_SEC_SEC67_WIDTH                    (1U)
#define OCOTP_SEC_SEC67(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC67_SHIFT)) & OCOTP_SEC_SEC67_MASK)
#define OCOTP_SEC_SEC68_MASK                     (0x8U)
#define OCOTP_SEC_SEC68_SHIFT                    (3U)
#define OCOTP_SEC_SEC68_WIDTH                    (1U)
#define OCOTP_SEC_SEC68(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC68_SHIFT)) & OCOTP_SEC_SEC68_MASK)
#define OCOTP_SEC_SEC69_MASK                     (0x10U)
#define OCOTP_SEC_SEC69_SHIFT                    (4U)
#define OCOTP_SEC_SEC69_WIDTH                    (1U)
#define OCOTP_SEC_SEC69(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC69_SHIFT)) & OCOTP_SEC_SEC69_MASK)
#define OCOTP_SEC_SEC70_MASK                     (0x20U)
#define OCOTP_SEC_SEC70_SHIFT                    (5U)
#define OCOTP_SEC_SEC70_WIDTH                    (1U)
#define OCOTP_SEC_SEC70(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC70_SHIFT)) & OCOTP_SEC_SEC70_MASK)
#define OCOTP_SEC_SEC71_MASK                     (0x40U)
#define OCOTP_SEC_SEC71_SHIFT                    (6U)
#define OCOTP_SEC_SEC71_WIDTH                    (1U)
#define OCOTP_SEC_SEC71(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC71_SHIFT)) & OCOTP_SEC_SEC71_MASK)
#define OCOTP_SEC_SEC72_MASK                     (0x80U)
#define OCOTP_SEC_SEC72_SHIFT                    (7U)
#define OCOTP_SEC_SEC72_WIDTH                    (1U)
#define OCOTP_SEC_SEC72(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC72_SHIFT)) & OCOTP_SEC_SEC72_MASK)
#define OCOTP_SEC_SEC73_MASK                     (0x100U)
#define OCOTP_SEC_SEC73_SHIFT                    (8U)
#define OCOTP_SEC_SEC73_WIDTH                    (1U)
#define OCOTP_SEC_SEC73(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC73_SHIFT)) & OCOTP_SEC_SEC73_MASK)
#define OCOTP_SEC_SEC74_MASK                     (0x200U)
#define OCOTP_SEC_SEC74_SHIFT                    (9U)
#define OCOTP_SEC_SEC74_WIDTH                    (1U)
#define OCOTP_SEC_SEC74(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC74_SHIFT)) & OCOTP_SEC_SEC74_MASK)
#define OCOTP_SEC_SEC75_MASK                     (0x400U)
#define OCOTP_SEC_SEC75_SHIFT                    (10U)
#define OCOTP_SEC_SEC75_WIDTH                    (1U)
#define OCOTP_SEC_SEC75(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC75_SHIFT)) & OCOTP_SEC_SEC75_MASK)
#define OCOTP_SEC_SEC76_MASK                     (0x800U)
#define OCOTP_SEC_SEC76_SHIFT                    (11U)
#define OCOTP_SEC_SEC76_WIDTH                    (1U)
#define OCOTP_SEC_SEC76(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC76_SHIFT)) & OCOTP_SEC_SEC76_MASK)
#define OCOTP_SEC_SEC77_MASK                     (0x1000U)
#define OCOTP_SEC_SEC77_SHIFT                    (12U)
#define OCOTP_SEC_SEC77_WIDTH                    (1U)
#define OCOTP_SEC_SEC77(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC77_SHIFT)) & OCOTP_SEC_SEC77_MASK)
#define OCOTP_SEC_SEC78_MASK                     (0x2000U)
#define OCOTP_SEC_SEC78_SHIFT                    (13U)
#define OCOTP_SEC_SEC78_WIDTH                    (1U)
#define OCOTP_SEC_SEC78(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC78_SHIFT)) & OCOTP_SEC_SEC78_MASK)
#define OCOTP_SEC_SEC79_MASK                     (0x4000U)
#define OCOTP_SEC_SEC79_SHIFT                    (14U)
#define OCOTP_SEC_SEC79_WIDTH                    (1U)
#define OCOTP_SEC_SEC79(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC79_SHIFT)) & OCOTP_SEC_SEC79_MASK)
#define OCOTP_SEC_SEC80_MASK                     (0x8000U)
#define OCOTP_SEC_SEC80_SHIFT                    (15U)
#define OCOTP_SEC_SEC80_WIDTH                    (1U)
#define OCOTP_SEC_SEC80(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC80_SHIFT)) & OCOTP_SEC_SEC80_MASK)
#define OCOTP_SEC_SEC81_MASK                     (0x10000U)
#define OCOTP_SEC_SEC81_SHIFT                    (16U)
#define OCOTP_SEC_SEC81_WIDTH                    (1U)
#define OCOTP_SEC_SEC81(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC81_SHIFT)) & OCOTP_SEC_SEC81_MASK)
#define OCOTP_SEC_SEC82_MASK                     (0x20000U)
#define OCOTP_SEC_SEC82_SHIFT                    (17U)
#define OCOTP_SEC_SEC82_WIDTH                    (1U)
#define OCOTP_SEC_SEC82(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC82_SHIFT)) & OCOTP_SEC_SEC82_MASK)
#define OCOTP_SEC_SEC83_MASK                     (0x40000U)
#define OCOTP_SEC_SEC83_SHIFT                    (18U)
#define OCOTP_SEC_SEC83_WIDTH                    (1U)
#define OCOTP_SEC_SEC83(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC83_SHIFT)) & OCOTP_SEC_SEC83_MASK)
#define OCOTP_SEC_SEC84_MASK                     (0x80000U)
#define OCOTP_SEC_SEC84_SHIFT                    (19U)
#define OCOTP_SEC_SEC84_WIDTH                    (1U)
#define OCOTP_SEC_SEC84(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC84_SHIFT)) & OCOTP_SEC_SEC84_MASK)
#define OCOTP_SEC_SEC85_MASK                     (0x100000U)
#define OCOTP_SEC_SEC85_SHIFT                    (20U)
#define OCOTP_SEC_SEC85_WIDTH                    (1U)
#define OCOTP_SEC_SEC85(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC85_SHIFT)) & OCOTP_SEC_SEC85_MASK)
#define OCOTP_SEC_SEC86_MASK                     (0x200000U)
#define OCOTP_SEC_SEC86_SHIFT                    (21U)
#define OCOTP_SEC_SEC86_WIDTH                    (1U)
#define OCOTP_SEC_SEC86(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC86_SHIFT)) & OCOTP_SEC_SEC86_MASK)
#define OCOTP_SEC_SEC87_MASK                     (0x400000U)
#define OCOTP_SEC_SEC87_SHIFT                    (22U)
#define OCOTP_SEC_SEC87_WIDTH                    (1U)
#define OCOTP_SEC_SEC87(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC87_SHIFT)) & OCOTP_SEC_SEC87_MASK)
#define OCOTP_SEC_SEC88_MASK                     (0x800000U)
#define OCOTP_SEC_SEC88_SHIFT                    (23U)
#define OCOTP_SEC_SEC88_WIDTH                    (1U)
#define OCOTP_SEC_SEC88(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC88_SHIFT)) & OCOTP_SEC_SEC88_MASK)
#define OCOTP_SEC_SEC89_MASK                     (0x1000000U)
#define OCOTP_SEC_SEC89_SHIFT                    (24U)
#define OCOTP_SEC_SEC89_WIDTH                    (1U)
#define OCOTP_SEC_SEC89(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC89_SHIFT)) & OCOTP_SEC_SEC89_MASK)
#define OCOTP_SEC_SEC90_MASK                     (0x2000000U)
#define OCOTP_SEC_SEC90_SHIFT                    (25U)
#define OCOTP_SEC_SEC90_WIDTH                    (1U)
#define OCOTP_SEC_SEC90(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC90_SHIFT)) & OCOTP_SEC_SEC90_MASK)
#define OCOTP_SEC_SEC91_MASK                     (0x4000000U)
#define OCOTP_SEC_SEC91_SHIFT                    (26U)
#define OCOTP_SEC_SEC91_WIDTH                    (1U)
#define OCOTP_SEC_SEC91(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC91_SHIFT)) & OCOTP_SEC_SEC91_MASK)
#define OCOTP_SEC_SEC92_MASK                     (0x8000000U)
#define OCOTP_SEC_SEC92_SHIFT                    (27U)
#define OCOTP_SEC_SEC92_WIDTH                    (1U)
#define OCOTP_SEC_SEC92(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC92_SHIFT)) & OCOTP_SEC_SEC92_MASK)
#define OCOTP_SEC_SEC93_MASK                     (0x10000000U)
#define OCOTP_SEC_SEC93_SHIFT                    (28U)
#define OCOTP_SEC_SEC93_WIDTH                    (1U)
#define OCOTP_SEC_SEC93(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC93_SHIFT)) & OCOTP_SEC_SEC93_MASK)
#define OCOTP_SEC_SEC94_MASK                     (0x20000000U)
#define OCOTP_SEC_SEC94_SHIFT                    (29U)
#define OCOTP_SEC_SEC94_WIDTH                    (1U)
#define OCOTP_SEC_SEC94(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC94_SHIFT)) & OCOTP_SEC_SEC94_MASK)
#define OCOTP_SEC_SEC95_MASK                     (0x40000000U)
#define OCOTP_SEC_SEC95_SHIFT                    (30U)
#define OCOTP_SEC_SEC95_WIDTH                    (1U)
#define OCOTP_SEC_SEC95(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC95_SHIFT)) & OCOTP_SEC_SEC95_MASK)
#define OCOTP_SEC_SEC96_MASK                     (0x80000000U)
#define OCOTP_SEC_SEC96_SHIFT                    (31U)
#define OCOTP_SEC_SEC96_WIDTH                    (1U)
#define OCOTP_SEC_SEC96(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_SEC_SEC96_SHIFT)) & OCOTP_SEC_SEC96_MASK)
/*! @} */

/*! @name DED - ECC status for double-bit ECC error */
/*! @{ */
#define OCOTP_DED_DED1_MASK                      (0x1U)
#define OCOTP_DED_DED1_SHIFT                     (0U)
#define OCOTP_DED_DED1_WIDTH                     (1U)
#define OCOTP_DED_DED1(x)                        (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED1_SHIFT)) & OCOTP_DED_DED1_MASK)
#define OCOTP_DED_DED2_MASK                      (0x2U)
#define OCOTP_DED_DED2_SHIFT                     (1U)
#define OCOTP_DED_DED2_WIDTH                     (1U)
#define OCOTP_DED_DED2(x)                        (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED2_SHIFT)) & OCOTP_DED_DED2_MASK)
#define OCOTP_DED_DED3_MASK                      (0x4U)
#define OCOTP_DED_DED3_SHIFT                     (2U)
#define OCOTP_DED_DED3_WIDTH                     (1U)
#define OCOTP_DED_DED3(x)                        (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED3_SHIFT)) & OCOTP_DED_DED3_MASK)
#define OCOTP_DED_DED4_MASK                      (0x8U)
#define OCOTP_DED_DED4_SHIFT                     (3U)
#define OCOTP_DED_DED4_WIDTH                     (1U)
#define OCOTP_DED_DED4(x)                        (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED4_SHIFT)) & OCOTP_DED_DED4_MASK)
#define OCOTP_DED_DED5_MASK                      (0x10U)
#define OCOTP_DED_DED5_SHIFT                     (4U)
#define OCOTP_DED_DED5_WIDTH                     (1U)
#define OCOTP_DED_DED5(x)                        (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED5_SHIFT)) & OCOTP_DED_DED5_MASK)
#define OCOTP_DED_DED6_MASK                      (0x20U)
#define OCOTP_DED_DED6_SHIFT                     (5U)
#define OCOTP_DED_DED6_WIDTH                     (1U)
#define OCOTP_DED_DED6(x)                        (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED6_SHIFT)) & OCOTP_DED_DED6_MASK)
#define OCOTP_DED_DED7_MASK                      (0x40U)
#define OCOTP_DED_DED7_SHIFT                     (6U)
#define OCOTP_DED_DED7_WIDTH                     (1U)
#define OCOTP_DED_DED7(x)                        (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED7_SHIFT)) & OCOTP_DED_DED7_MASK)
#define OCOTP_DED_DED8_MASK                      (0x80U)
#define OCOTP_DED_DED8_SHIFT                     (7U)
#define OCOTP_DED_DED8_WIDTH                     (1U)
#define OCOTP_DED_DED8(x)                        (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED8_SHIFT)) & OCOTP_DED_DED8_MASK)
#define OCOTP_DED_DED9_MASK                      (0x100U)
#define OCOTP_DED_DED9_SHIFT                     (8U)
#define OCOTP_DED_DED9_WIDTH                     (1U)
#define OCOTP_DED_DED9(x)                        (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED9_SHIFT)) & OCOTP_DED_DED9_MASK)
#define OCOTP_DED_DED10_MASK                     (0x200U)
#define OCOTP_DED_DED10_SHIFT                    (9U)
#define OCOTP_DED_DED10_WIDTH                    (1U)
#define OCOTP_DED_DED10(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED10_SHIFT)) & OCOTP_DED_DED10_MASK)
#define OCOTP_DED_DED11_MASK                     (0x400U)
#define OCOTP_DED_DED11_SHIFT                    (10U)
#define OCOTP_DED_DED11_WIDTH                    (1U)
#define OCOTP_DED_DED11(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED11_SHIFT)) & OCOTP_DED_DED11_MASK)
#define OCOTP_DED_DED12_MASK                     (0x800U)
#define OCOTP_DED_DED12_SHIFT                    (11U)
#define OCOTP_DED_DED12_WIDTH                    (1U)
#define OCOTP_DED_DED12(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED12_SHIFT)) & OCOTP_DED_DED12_MASK)
#define OCOTP_DED_DED13_MASK                     (0x1000U)
#define OCOTP_DED_DED13_SHIFT                    (12U)
#define OCOTP_DED_DED13_WIDTH                    (1U)
#define OCOTP_DED_DED13(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED13_SHIFT)) & OCOTP_DED_DED13_MASK)
#define OCOTP_DED_DED14_MASK                     (0x2000U)
#define OCOTP_DED_DED14_SHIFT                    (13U)
#define OCOTP_DED_DED14_WIDTH                    (1U)
#define OCOTP_DED_DED14(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED14_SHIFT)) & OCOTP_DED_DED14_MASK)
#define OCOTP_DED_DED15_MASK                     (0x4000U)
#define OCOTP_DED_DED15_SHIFT                    (14U)
#define OCOTP_DED_DED15_WIDTH                    (1U)
#define OCOTP_DED_DED15(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED15_SHIFT)) & OCOTP_DED_DED15_MASK)
#define OCOTP_DED_DED16_MASK                     (0x8000U)
#define OCOTP_DED_DED16_SHIFT                    (15U)
#define OCOTP_DED_DED16_WIDTH                    (1U)
#define OCOTP_DED_DED16(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED16_SHIFT)) & OCOTP_DED_DED16_MASK)
#define OCOTP_DED_DED17_MASK                     (0x10000U)
#define OCOTP_DED_DED17_SHIFT                    (16U)
#define OCOTP_DED_DED17_WIDTH                    (1U)
#define OCOTP_DED_DED17(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED17_SHIFT)) & OCOTP_DED_DED17_MASK)
#define OCOTP_DED_DED18_MASK                     (0x20000U)
#define OCOTP_DED_DED18_SHIFT                    (17U)
#define OCOTP_DED_DED18_WIDTH                    (1U)
#define OCOTP_DED_DED18(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED18_SHIFT)) & OCOTP_DED_DED18_MASK)
#define OCOTP_DED_DED19_MASK                     (0x40000U)
#define OCOTP_DED_DED19_SHIFT                    (18U)
#define OCOTP_DED_DED19_WIDTH                    (1U)
#define OCOTP_DED_DED19(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED19_SHIFT)) & OCOTP_DED_DED19_MASK)
#define OCOTP_DED_DED20_MASK                     (0x80000U)
#define OCOTP_DED_DED20_SHIFT                    (19U)
#define OCOTP_DED_DED20_WIDTH                    (1U)
#define OCOTP_DED_DED20(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED20_SHIFT)) & OCOTP_DED_DED20_MASK)
#define OCOTP_DED_DED21_MASK                     (0x100000U)
#define OCOTP_DED_DED21_SHIFT                    (20U)
#define OCOTP_DED_DED21_WIDTH                    (1U)
#define OCOTP_DED_DED21(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED21_SHIFT)) & OCOTP_DED_DED21_MASK)
#define OCOTP_DED_DED22_MASK                     (0x200000U)
#define OCOTP_DED_DED22_SHIFT                    (21U)
#define OCOTP_DED_DED22_WIDTH                    (1U)
#define OCOTP_DED_DED22(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED22_SHIFT)) & OCOTP_DED_DED22_MASK)
#define OCOTP_DED_DED23_MASK                     (0x400000U)
#define OCOTP_DED_DED23_SHIFT                    (22U)
#define OCOTP_DED_DED23_WIDTH                    (1U)
#define OCOTP_DED_DED23(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED23_SHIFT)) & OCOTP_DED_DED23_MASK)
#define OCOTP_DED_DED24_MASK                     (0x800000U)
#define OCOTP_DED_DED24_SHIFT                    (23U)
#define OCOTP_DED_DED24_WIDTH                    (1U)
#define OCOTP_DED_DED24(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED24_SHIFT)) & OCOTP_DED_DED24_MASK)
#define OCOTP_DED_DED25_MASK                     (0x1000000U)
#define OCOTP_DED_DED25_SHIFT                    (24U)
#define OCOTP_DED_DED25_WIDTH                    (1U)
#define OCOTP_DED_DED25(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED25_SHIFT)) & OCOTP_DED_DED25_MASK)
#define OCOTP_DED_DED26_MASK                     (0x2000000U)
#define OCOTP_DED_DED26_SHIFT                    (25U)
#define OCOTP_DED_DED26_WIDTH                    (1U)
#define OCOTP_DED_DED26(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED26_SHIFT)) & OCOTP_DED_DED26_MASK)
#define OCOTP_DED_DED27_MASK                     (0x4000000U)
#define OCOTP_DED_DED27_SHIFT                    (26U)
#define OCOTP_DED_DED27_WIDTH                    (1U)
#define OCOTP_DED_DED27(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED27_SHIFT)) & OCOTP_DED_DED27_MASK)
#define OCOTP_DED_DED28_MASK                     (0x8000000U)
#define OCOTP_DED_DED28_SHIFT                    (27U)
#define OCOTP_DED_DED28_WIDTH                    (1U)
#define OCOTP_DED_DED28(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED28_SHIFT)) & OCOTP_DED_DED28_MASK)
#define OCOTP_DED_DED29_MASK                     (0x10000000U)
#define OCOTP_DED_DED29_SHIFT                    (28U)
#define OCOTP_DED_DED29_WIDTH                    (1U)
#define OCOTP_DED_DED29(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED29_SHIFT)) & OCOTP_DED_DED29_MASK)
#define OCOTP_DED_DED30_MASK                     (0x20000000U)
#define OCOTP_DED_DED30_SHIFT                    (29U)
#define OCOTP_DED_DED30_WIDTH                    (1U)
#define OCOTP_DED_DED30(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED30_SHIFT)) & OCOTP_DED_DED30_MASK)
#define OCOTP_DED_DED31_MASK                     (0x40000000U)
#define OCOTP_DED_DED31_SHIFT                    (30U)
#define OCOTP_DED_DED31_WIDTH                    (1U)
#define OCOTP_DED_DED31(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED31_SHIFT)) & OCOTP_DED_DED31_MASK)
#define OCOTP_DED_DED32_MASK                     (0x80000000U)
#define OCOTP_DED_DED32_SHIFT                    (31U)
#define OCOTP_DED_DED32_WIDTH                    (1U)
#define OCOTP_DED_DED32(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED32_SHIFT)) & OCOTP_DED_DED32_MASK)
#define OCOTP_DED_DED33_MASK                     (0x1U)
#define OCOTP_DED_DED33_SHIFT                    (0U)
#define OCOTP_DED_DED33_WIDTH                    (1U)
#define OCOTP_DED_DED33(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED33_SHIFT)) & OCOTP_DED_DED33_MASK)
#define OCOTP_DED_DED34_MASK                     (0x2U)
#define OCOTP_DED_DED34_SHIFT                    (1U)
#define OCOTP_DED_DED34_WIDTH                    (1U)
#define OCOTP_DED_DED34(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED34_SHIFT)) & OCOTP_DED_DED34_MASK)
#define OCOTP_DED_DED35_MASK                     (0x4U)
#define OCOTP_DED_DED35_SHIFT                    (2U)
#define OCOTP_DED_DED35_WIDTH                    (1U)
#define OCOTP_DED_DED35(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED35_SHIFT)) & OCOTP_DED_DED35_MASK)
#define OCOTP_DED_DED36_MASK                     (0x8U)
#define OCOTP_DED_DED36_SHIFT                    (3U)
#define OCOTP_DED_DED36_WIDTH                    (1U)
#define OCOTP_DED_DED36(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED36_SHIFT)) & OCOTP_DED_DED36_MASK)
#define OCOTP_DED_DED37_MASK                     (0x10U)
#define OCOTP_DED_DED37_SHIFT                    (4U)
#define OCOTP_DED_DED37_WIDTH                    (1U)
#define OCOTP_DED_DED37(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED37_SHIFT)) & OCOTP_DED_DED37_MASK)
#define OCOTP_DED_DED38_MASK                     (0x20U)
#define OCOTP_DED_DED38_SHIFT                    (5U)
#define OCOTP_DED_DED38_WIDTH                    (1U)
#define OCOTP_DED_DED38(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED38_SHIFT)) & OCOTP_DED_DED38_MASK)
#define OCOTP_DED_DED39_MASK                     (0x40U)
#define OCOTP_DED_DED39_SHIFT                    (6U)
#define OCOTP_DED_DED39_WIDTH                    (1U)
#define OCOTP_DED_DED39(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED39_SHIFT)) & OCOTP_DED_DED39_MASK)
#define OCOTP_DED_DED40_MASK                     (0x80U)
#define OCOTP_DED_DED40_SHIFT                    (7U)
#define OCOTP_DED_DED40_WIDTH                    (1U)
#define OCOTP_DED_DED40(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED40_SHIFT)) & OCOTP_DED_DED40_MASK)
#define OCOTP_DED_DED41_MASK                     (0x100U)
#define OCOTP_DED_DED41_SHIFT                    (8U)
#define OCOTP_DED_DED41_WIDTH                    (1U)
#define OCOTP_DED_DED41(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED41_SHIFT)) & OCOTP_DED_DED41_MASK)
#define OCOTP_DED_DED42_MASK                     (0x200U)
#define OCOTP_DED_DED42_SHIFT                    (9U)
#define OCOTP_DED_DED42_WIDTH                    (1U)
#define OCOTP_DED_DED42(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED42_SHIFT)) & OCOTP_DED_DED42_MASK)
#define OCOTP_DED_DED43_MASK                     (0x400U)
#define OCOTP_DED_DED43_SHIFT                    (10U)
#define OCOTP_DED_DED43_WIDTH                    (1U)
#define OCOTP_DED_DED43(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED43_SHIFT)) & OCOTP_DED_DED43_MASK)
#define OCOTP_DED_DED44_MASK                     (0x800U)
#define OCOTP_DED_DED44_SHIFT                    (11U)
#define OCOTP_DED_DED44_WIDTH                    (1U)
#define OCOTP_DED_DED44(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED44_SHIFT)) & OCOTP_DED_DED44_MASK)
#define OCOTP_DED_DED45_MASK                     (0x1000U)
#define OCOTP_DED_DED45_SHIFT                    (12U)
#define OCOTP_DED_DED45_WIDTH                    (1U)
#define OCOTP_DED_DED45(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED45_SHIFT)) & OCOTP_DED_DED45_MASK)
#define OCOTP_DED_DED46_MASK                     (0x2000U)
#define OCOTP_DED_DED46_SHIFT                    (13U)
#define OCOTP_DED_DED46_WIDTH                    (1U)
#define OCOTP_DED_DED46(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED46_SHIFT)) & OCOTP_DED_DED46_MASK)
#define OCOTP_DED_DED47_MASK                     (0x4000U)
#define OCOTP_DED_DED47_SHIFT                    (14U)
#define OCOTP_DED_DED47_WIDTH                    (1U)
#define OCOTP_DED_DED47(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED47_SHIFT)) & OCOTP_DED_DED47_MASK)
#define OCOTP_DED_DED48_MASK                     (0x8000U)
#define OCOTP_DED_DED48_SHIFT                    (15U)
#define OCOTP_DED_DED48_WIDTH                    (1U)
#define OCOTP_DED_DED48(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED48_SHIFT)) & OCOTP_DED_DED48_MASK)
#define OCOTP_DED_DED49_MASK                     (0x10000U)
#define OCOTP_DED_DED49_SHIFT                    (16U)
#define OCOTP_DED_DED49_WIDTH                    (1U)
#define OCOTP_DED_DED49(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED49_SHIFT)) & OCOTP_DED_DED49_MASK)
#define OCOTP_DED_DED50_MASK                     (0x20000U)
#define OCOTP_DED_DED50_SHIFT                    (17U)
#define OCOTP_DED_DED50_WIDTH                    (1U)
#define OCOTP_DED_DED50(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED50_SHIFT)) & OCOTP_DED_DED50_MASK)
#define OCOTP_DED_DED51_MASK                     (0x40000U)
#define OCOTP_DED_DED51_SHIFT                    (18U)
#define OCOTP_DED_DED51_WIDTH                    (1U)
#define OCOTP_DED_DED51(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED51_SHIFT)) & OCOTP_DED_DED51_MASK)
#define OCOTP_DED_DED52_MASK                     (0x80000U)
#define OCOTP_DED_DED52_SHIFT                    (19U)
#define OCOTP_DED_DED52_WIDTH                    (1U)
#define OCOTP_DED_DED52(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED52_SHIFT)) & OCOTP_DED_DED52_MASK)
#define OCOTP_DED_DED53_MASK                     (0x100000U)
#define OCOTP_DED_DED53_SHIFT                    (20U)
#define OCOTP_DED_DED53_WIDTH                    (1U)
#define OCOTP_DED_DED53(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED53_SHIFT)) & OCOTP_DED_DED53_MASK)
#define OCOTP_DED_DED54_MASK                     (0x200000U)
#define OCOTP_DED_DED54_SHIFT                    (21U)
#define OCOTP_DED_DED54_WIDTH                    (1U)
#define OCOTP_DED_DED54(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED54_SHIFT)) & OCOTP_DED_DED54_MASK)
#define OCOTP_DED_DED55_MASK                     (0x400000U)
#define OCOTP_DED_DED55_SHIFT                    (22U)
#define OCOTP_DED_DED55_WIDTH                    (1U)
#define OCOTP_DED_DED55(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED55_SHIFT)) & OCOTP_DED_DED55_MASK)
#define OCOTP_DED_DED56_MASK                     (0x800000U)
#define OCOTP_DED_DED56_SHIFT                    (23U)
#define OCOTP_DED_DED56_WIDTH                    (1U)
#define OCOTP_DED_DED56(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED56_SHIFT)) & OCOTP_DED_DED56_MASK)
#define OCOTP_DED_DED57_MASK                     (0x1000000U)
#define OCOTP_DED_DED57_SHIFT                    (24U)
#define OCOTP_DED_DED57_WIDTH                    (1U)
#define OCOTP_DED_DED57(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED57_SHIFT)) & OCOTP_DED_DED57_MASK)
#define OCOTP_DED_DED58_MASK                     (0x2000000U)
#define OCOTP_DED_DED58_SHIFT                    (25U)
#define OCOTP_DED_DED58_WIDTH                    (1U)
#define OCOTP_DED_DED58(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED58_SHIFT)) & OCOTP_DED_DED58_MASK)
#define OCOTP_DED_DED59_MASK                     (0x4000000U)
#define OCOTP_DED_DED59_SHIFT                    (26U)
#define OCOTP_DED_DED59_WIDTH                    (1U)
#define OCOTP_DED_DED59(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED59_SHIFT)) & OCOTP_DED_DED59_MASK)
#define OCOTP_DED_DED60_MASK                     (0x8000000U)
#define OCOTP_DED_DED60_SHIFT                    (27U)
#define OCOTP_DED_DED60_WIDTH                    (1U)
#define OCOTP_DED_DED60(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED60_SHIFT)) & OCOTP_DED_DED60_MASK)
#define OCOTP_DED_DED61_MASK                     (0x10000000U)
#define OCOTP_DED_DED61_SHIFT                    (28U)
#define OCOTP_DED_DED61_WIDTH                    (1U)
#define OCOTP_DED_DED61(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED61_SHIFT)) & OCOTP_DED_DED61_MASK)
#define OCOTP_DED_DED62_MASK                     (0x20000000U)
#define OCOTP_DED_DED62_SHIFT                    (29U)
#define OCOTP_DED_DED62_WIDTH                    (1U)
#define OCOTP_DED_DED62(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED62_SHIFT)) & OCOTP_DED_DED62_MASK)
#define OCOTP_DED_DED63_MASK                     (0x40000000U)
#define OCOTP_DED_DED63_SHIFT                    (30U)
#define OCOTP_DED_DED63_WIDTH                    (1U)
#define OCOTP_DED_DED63(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED63_SHIFT)) & OCOTP_DED_DED63_MASK)
#define OCOTP_DED_DED64_MASK                     (0x80000000U)
#define OCOTP_DED_DED64_SHIFT                    (31U)
#define OCOTP_DED_DED64_WIDTH                    (1U)
#define OCOTP_DED_DED64(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED64_SHIFT)) & OCOTP_DED_DED64_MASK)
#define OCOTP_DED_DED65_MASK                     (0x1U)
#define OCOTP_DED_DED65_SHIFT                    (0U)
#define OCOTP_DED_DED65_WIDTH                    (1U)
#define OCOTP_DED_DED65(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED65_SHIFT)) & OCOTP_DED_DED65_MASK)
#define OCOTP_DED_DED66_MASK                     (0x2U)
#define OCOTP_DED_DED66_SHIFT                    (1U)
#define OCOTP_DED_DED66_WIDTH                    (1U)
#define OCOTP_DED_DED66(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED66_SHIFT)) & OCOTP_DED_DED66_MASK)
#define OCOTP_DED_DED67_MASK                     (0x4U)
#define OCOTP_DED_DED67_SHIFT                    (2U)
#define OCOTP_DED_DED67_WIDTH                    (1U)
#define OCOTP_DED_DED67(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED67_SHIFT)) & OCOTP_DED_DED67_MASK)
#define OCOTP_DED_DED68_MASK                     (0x8U)
#define OCOTP_DED_DED68_SHIFT                    (3U)
#define OCOTP_DED_DED68_WIDTH                    (1U)
#define OCOTP_DED_DED68(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED68_SHIFT)) & OCOTP_DED_DED68_MASK)
#define OCOTP_DED_DED69_MASK                     (0x10U)
#define OCOTP_DED_DED69_SHIFT                    (4U)
#define OCOTP_DED_DED69_WIDTH                    (1U)
#define OCOTP_DED_DED69(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED69_SHIFT)) & OCOTP_DED_DED69_MASK)
#define OCOTP_DED_DED70_MASK                     (0x20U)
#define OCOTP_DED_DED70_SHIFT                    (5U)
#define OCOTP_DED_DED70_WIDTH                    (1U)
#define OCOTP_DED_DED70(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED70_SHIFT)) & OCOTP_DED_DED70_MASK)
#define OCOTP_DED_DED71_MASK                     (0x40U)
#define OCOTP_DED_DED71_SHIFT                    (6U)
#define OCOTP_DED_DED71_WIDTH                    (1U)
#define OCOTP_DED_DED71(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED71_SHIFT)) & OCOTP_DED_DED71_MASK)
#define OCOTP_DED_DED72_MASK                     (0x80U)
#define OCOTP_DED_DED72_SHIFT                    (7U)
#define OCOTP_DED_DED72_WIDTH                    (1U)
#define OCOTP_DED_DED72(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED72_SHIFT)) & OCOTP_DED_DED72_MASK)
#define OCOTP_DED_DED73_MASK                     (0x100U)
#define OCOTP_DED_DED73_SHIFT                    (8U)
#define OCOTP_DED_DED73_WIDTH                    (1U)
#define OCOTP_DED_DED73(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED73_SHIFT)) & OCOTP_DED_DED73_MASK)
#define OCOTP_DED_DED74_MASK                     (0x200U)
#define OCOTP_DED_DED74_SHIFT                    (9U)
#define OCOTP_DED_DED74_WIDTH                    (1U)
#define OCOTP_DED_DED74(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED74_SHIFT)) & OCOTP_DED_DED74_MASK)
#define OCOTP_DED_DED75_MASK                     (0x400U)
#define OCOTP_DED_DED75_SHIFT                    (10U)
#define OCOTP_DED_DED75_WIDTH                    (1U)
#define OCOTP_DED_DED75(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED75_SHIFT)) & OCOTP_DED_DED75_MASK)
#define OCOTP_DED_DED76_MASK                     (0x800U)
#define OCOTP_DED_DED76_SHIFT                    (11U)
#define OCOTP_DED_DED76_WIDTH                    (1U)
#define OCOTP_DED_DED76(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED76_SHIFT)) & OCOTP_DED_DED76_MASK)
#define OCOTP_DED_DED77_MASK                     (0x1000U)
#define OCOTP_DED_DED77_SHIFT                    (12U)
#define OCOTP_DED_DED77_WIDTH                    (1U)
#define OCOTP_DED_DED77(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED77_SHIFT)) & OCOTP_DED_DED77_MASK)
#define OCOTP_DED_DED78_MASK                     (0x2000U)
#define OCOTP_DED_DED78_SHIFT                    (13U)
#define OCOTP_DED_DED78_WIDTH                    (1U)
#define OCOTP_DED_DED78(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED78_SHIFT)) & OCOTP_DED_DED78_MASK)
#define OCOTP_DED_DED79_MASK                     (0x4000U)
#define OCOTP_DED_DED79_SHIFT                    (14U)
#define OCOTP_DED_DED79_WIDTH                    (1U)
#define OCOTP_DED_DED79(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED79_SHIFT)) & OCOTP_DED_DED79_MASK)
#define OCOTP_DED_DED80_MASK                     (0x8000U)
#define OCOTP_DED_DED80_SHIFT                    (15U)
#define OCOTP_DED_DED80_WIDTH                    (1U)
#define OCOTP_DED_DED80(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED80_SHIFT)) & OCOTP_DED_DED80_MASK)
#define OCOTP_DED_DED81_MASK                     (0x10000U)
#define OCOTP_DED_DED81_SHIFT                    (16U)
#define OCOTP_DED_DED81_WIDTH                    (1U)
#define OCOTP_DED_DED81(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED81_SHIFT)) & OCOTP_DED_DED81_MASK)
#define OCOTP_DED_DED82_MASK                     (0x20000U)
#define OCOTP_DED_DED82_SHIFT                    (17U)
#define OCOTP_DED_DED82_WIDTH                    (1U)
#define OCOTP_DED_DED82(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED82_SHIFT)) & OCOTP_DED_DED82_MASK)
#define OCOTP_DED_DED83_MASK                     (0x40000U)
#define OCOTP_DED_DED83_SHIFT                    (18U)
#define OCOTP_DED_DED83_WIDTH                    (1U)
#define OCOTP_DED_DED83(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED83_SHIFT)) & OCOTP_DED_DED83_MASK)
#define OCOTP_DED_DED84_MASK                     (0x80000U)
#define OCOTP_DED_DED84_SHIFT                    (19U)
#define OCOTP_DED_DED84_WIDTH                    (1U)
#define OCOTP_DED_DED84(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED84_SHIFT)) & OCOTP_DED_DED84_MASK)
#define OCOTP_DED_DED85_MASK                     (0x100000U)
#define OCOTP_DED_DED85_SHIFT                    (20U)
#define OCOTP_DED_DED85_WIDTH                    (1U)
#define OCOTP_DED_DED85(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED85_SHIFT)) & OCOTP_DED_DED85_MASK)
#define OCOTP_DED_DED86_MASK                     (0x200000U)
#define OCOTP_DED_DED86_SHIFT                    (21U)
#define OCOTP_DED_DED86_WIDTH                    (1U)
#define OCOTP_DED_DED86(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED86_SHIFT)) & OCOTP_DED_DED86_MASK)
#define OCOTP_DED_DED87_MASK                     (0x400000U)
#define OCOTP_DED_DED87_SHIFT                    (22U)
#define OCOTP_DED_DED87_WIDTH                    (1U)
#define OCOTP_DED_DED87(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED87_SHIFT)) & OCOTP_DED_DED87_MASK)
#define OCOTP_DED_DED88_MASK                     (0x800000U)
#define OCOTP_DED_DED88_SHIFT                    (23U)
#define OCOTP_DED_DED88_WIDTH                    (1U)
#define OCOTP_DED_DED88(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED88_SHIFT)) & OCOTP_DED_DED88_MASK)
#define OCOTP_DED_DED89_MASK                     (0x1000000U)
#define OCOTP_DED_DED89_SHIFT                    (24U)
#define OCOTP_DED_DED89_WIDTH                    (1U)
#define OCOTP_DED_DED89(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED89_SHIFT)) & OCOTP_DED_DED89_MASK)
#define OCOTP_DED_DED90_MASK                     (0x2000000U)
#define OCOTP_DED_DED90_SHIFT                    (25U)
#define OCOTP_DED_DED90_WIDTH                    (1U)
#define OCOTP_DED_DED90(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED90_SHIFT)) & OCOTP_DED_DED90_MASK)
#define OCOTP_DED_DED91_MASK                     (0x4000000U)
#define OCOTP_DED_DED91_SHIFT                    (26U)
#define OCOTP_DED_DED91_WIDTH                    (1U)
#define OCOTP_DED_DED91(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED91_SHIFT)) & OCOTP_DED_DED91_MASK)
#define OCOTP_DED_DED92_MASK                     (0x8000000U)
#define OCOTP_DED_DED92_SHIFT                    (27U)
#define OCOTP_DED_DED92_WIDTH                    (1U)
#define OCOTP_DED_DED92(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED92_SHIFT)) & OCOTP_DED_DED92_MASK)
#define OCOTP_DED_DED93_MASK                     (0x10000000U)
#define OCOTP_DED_DED93_SHIFT                    (28U)
#define OCOTP_DED_DED93_WIDTH                    (1U)
#define OCOTP_DED_DED93(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED93_SHIFT)) & OCOTP_DED_DED93_MASK)
#define OCOTP_DED_DED94_MASK                     (0x20000000U)
#define OCOTP_DED_DED94_SHIFT                    (29U)
#define OCOTP_DED_DED94_WIDTH                    (1U)
#define OCOTP_DED_DED94(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED94_SHIFT)) & OCOTP_DED_DED94_MASK)
#define OCOTP_DED_DED95_MASK                     (0x40000000U)
#define OCOTP_DED_DED95_SHIFT                    (30U)
#define OCOTP_DED_DED95_WIDTH                    (1U)
#define OCOTP_DED_DED95(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED95_SHIFT)) & OCOTP_DED_DED95_MASK)
#define OCOTP_DED_DED96_MASK                     (0x80000000U)
#define OCOTP_DED_DED96_SHIFT                    (31U)
#define OCOTP_DED_DED96_WIDTH                    (1U)
#define OCOTP_DED_DED96(x)                       (((uint32_t)(((uint32_t)(x)) << OCOTP_DED_DED96_SHIFT)) & OCOTP_DED_DED96_MASK)
/*! @} */

/*! @name ERR_INJCTR - ECC error injector */
/*! @{ */
#define OCOTP_ERR_INJCTR_ADDR_MASK               (0xFFFFU)
#define OCOTP_ERR_INJCTR_ADDR_SHIFT              (0U)
#define OCOTP_ERR_INJCTR_ADDR_WIDTH              (16U)
#define OCOTP_ERR_INJCTR_ADDR(x)                 (((uint32_t)(((uint32_t)(x)) << OCOTP_ERR_INJCTR_ADDR_SHIFT)) & OCOTP_ERR_INJCTR_ADDR_MASK)
/*! @} */

/*! @name SHADOWS - Shadow */
/*! @{ */
#define OCOTP_SHADOWS_EFUSES_MASK                (0xFFFFFFFFU)
#define OCOTP_SHADOWS_EFUSES_SHIFT               (0U)
#define OCOTP_SHADOWS_EFUSES_WIDTH               (32U)
#define OCOTP_SHADOWS_EFUSES(x)                  (((uint32_t)(((uint32_t)(x)) << OCOTP_SHADOWS_EFUSES_SHIFT)) & OCOTP_SHADOWS_EFUSES_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group OCOTP_Register_Masks */


/*!
 * @}
 */ /* end of group OCOTP_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- PIT Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup PIT_Peripheral_Access_Layer PIT Peripheral Access Layer
 * @{
 */

/** PIT - Size of Registers Arrays */
#define PIT_TIMER_COUNT                           7u

/** PIT - Register Layout Typedef */
typedef struct {
  __IO uint32_t MCR;                               /**< PIT Module Control Register, offset: 0x0 */
  uint8_t RESERVED_0[220];
  __I  uint32_t LTMR64H;                           /**< PIT Upper Lifetime Timer Register, offset: 0xE0 */
  __I  uint32_t LTMR64L;                           /**< PIT Lower Lifetime Timer Register, offset: 0xE4 */
  uint8_t RESERVED_1[24];
  struct {                                         /* offset: 0x100, array step: 0x10 */
    __IO uint32_t LDVAL;                             /**< Timer Load Value Register, array offset: 0x100, array step: 0x10 */
    __I  uint32_t CVAL;                              /**< Current Timer Value Register, array offset: 0x104, array step: 0x10 */
    __IO uint32_t TCTRL;                             /**< Timer Control Register, array offset: 0x108, array step: 0x10 */
    __IO uint32_t TFLG;                              /**< Timer Flag Register, array offset: 0x10C, array step: 0x10 */
  } TIMER[PIT_TIMER_COUNT];
} PIT_Type, *PIT_MemMapPtr;

/** Number of instances of the PIT module. */
#define PIT_INSTANCE_COUNT                       (2u)

/* PIT - Peripheral instance base addresses */
/** Peripheral PIT_0 base address */
#define PIT_0_BASE                               (0x40188000u)
/** Peripheral PIT_0 base pointer */
#define PIT_0                                    ((PIT_Type *)PIT_0_BASE)
/** Peripheral PIT_1 base address */
#define PIT_1_BASE                               (0x40288000u)
/** Peripheral PIT_1 base pointer */
#define PIT_1                                    ((PIT_Type *)PIT_1_BASE)
/** Array initializer of PIT peripheral base addresses */
#define PIT_BASE_ADDRS                           { PIT_0_BASE, PIT_1_BASE }
/** Array initializer of PIT peripheral base pointers */
#define PIT_BASE_PTRS                            { PIT_0, PIT_1 }
/** Number of interrupt channels for the PIT module. */
#define PIT_IRQS_CH_COUNT                        (7u)
/** Interrupt vectors for the PIT peripheral type */
#define PIT_IRQS                                 { { PIT0_IRQn, PIT0_IRQn, PIT0_IRQn, PIT0_IRQn, PIT0_IRQn, PIT0_IRQn, PIT0_IRQn }, \
                                                   { PIT1_IRQn, PIT1_IRQn, PIT1_IRQn, PIT1_IRQn, PIT1_IRQn, PIT1_IRQn, NotAvail_IRQn } }
/* ----------------------------------------------------------------------------
   -- PIT Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup PIT_Register_Masks PIT Register Masks
 * @{
 */

/*! @name MCR - PIT Module Control Register */
/*! @{ */
#define PIT_MCR_FRZ_MASK                         (0x1U)
#define PIT_MCR_FRZ_SHIFT                        (0U)
#define PIT_MCR_FRZ_WIDTH                        (1U)
#define PIT_MCR_FRZ(x)                           (((uint32_t)(((uint32_t)(x)) << PIT_MCR_FRZ_SHIFT)) & PIT_MCR_FRZ_MASK)
#define PIT_MCR_MDIS_MASK                        (0x2U)
#define PIT_MCR_MDIS_SHIFT                       (1U)
#define PIT_MCR_MDIS_WIDTH                       (1U)
#define PIT_MCR_MDIS(x)                          (((uint32_t)(((uint32_t)(x)) << PIT_MCR_MDIS_SHIFT)) & PIT_MCR_MDIS_MASK)
/*! @} */

/*! @name LTMR64H - PIT Upper Lifetime Timer Register */
/*! @{ */
#define PIT_LTMR64H_LTH_MASK                     (0xFFFFFFFFU)
#define PIT_LTMR64H_LTH_SHIFT                    (0U)
#define PIT_LTMR64H_LTH_WIDTH                    (32U)
#define PIT_LTMR64H_LTH(x)                       (((uint32_t)(((uint32_t)(x)) << PIT_LTMR64H_LTH_SHIFT)) & PIT_LTMR64H_LTH_MASK)
/*! @} */

/*! @name LTMR64L - PIT Lower Lifetime Timer Register */
/*! @{ */
#define PIT_LTMR64L_LTL_MASK                     (0xFFFFFFFFU)
#define PIT_LTMR64L_LTL_SHIFT                    (0U)
#define PIT_LTMR64L_LTL_WIDTH                    (32U)
#define PIT_LTMR64L_LTL(x)                       (((uint32_t)(((uint32_t)(x)) << PIT_LTMR64L_LTL_SHIFT)) & PIT_LTMR64L_LTL_MASK)
/*! @} */

/*! @name LDVAL - Timer Load Value Register */
/*! @{ */
#define PIT_LDVAL_TSV_MASK                       (0xFFFFFFFFU)
#define PIT_LDVAL_TSV_SHIFT                      (0U)
#define PIT_LDVAL_TSV_WIDTH                      (32U)
#define PIT_LDVAL_TSV(x)                         (((uint32_t)(((uint32_t)(x)) << PIT_LDVAL_TSV_SHIFT)) & PIT_LDVAL_TSV_MASK)
/*! @} */

/*! @name CVAL - Current Timer Value Register */
/*! @{ */
#define PIT_CVAL_TVL_MASK                        (0xFFFFFFFFU)
#define PIT_CVAL_TVL_SHIFT                       (0U)
#define PIT_CVAL_TVL_WIDTH                       (32U)
#define PIT_CVAL_TVL(x)                          (((uint32_t)(((uint32_t)(x)) << PIT_CVAL_TVL_SHIFT)) & PIT_CVAL_TVL_MASK)
/*! @} */

/*! @name TCTRL - Timer Control Register */
/*! @{ */
#define PIT_TCTRL_TEN_MASK                       (0x1U)
#define PIT_TCTRL_TEN_SHIFT                      (0U)
#define PIT_TCTRL_TEN_WIDTH                      (1U)
#define PIT_TCTRL_TEN(x)                         (((uint32_t)(((uint32_t)(x)) << PIT_TCTRL_TEN_SHIFT)) & PIT_TCTRL_TEN_MASK)
#define PIT_TCTRL_TIE_MASK                       (0x2U)
#define PIT_TCTRL_TIE_SHIFT                      (1U)
#define PIT_TCTRL_TIE_WIDTH                      (1U)
#define PIT_TCTRL_TIE(x)                         (((uint32_t)(((uint32_t)(x)) << PIT_TCTRL_TIE_SHIFT)) & PIT_TCTRL_TIE_MASK)
#define PIT_TCTRL_CHN_MASK                       (0x4U)
#define PIT_TCTRL_CHN_SHIFT                      (2U)
#define PIT_TCTRL_CHN_WIDTH                      (1U)
#define PIT_TCTRL_CHN(x)                         (((uint32_t)(((uint32_t)(x)) << PIT_TCTRL_CHN_SHIFT)) & PIT_TCTRL_CHN_MASK)
/*! @} */

/*! @name TFLG - Timer Flag Register */
/*! @{ */
#define PIT_TFLG_TIF_MASK                        (0x1U)
#define PIT_TFLG_TIF_SHIFT                       (0U)
#define PIT_TFLG_TIF_WIDTH                       (1U)
#define PIT_TFLG_TIF(x)                          (((uint32_t)(((uint32_t)(x)) << PIT_TFLG_TIF_SHIFT)) & PIT_TFLG_TIF_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group PIT_Register_Masks */


/*!
 * @}
 */ /* end of group PIT_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- PMC Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup PMC_Peripheral_Access_Layer PMC Peripheral Access Layer
 * @{
 */

/** PMC - Size of Registers Arrays */
#define PMC_POR_WDOG_EVENT_CAPTURE_COUNT          3u

/** PMC - Register Layout Typedef */
typedef struct {
  __IO uint32_t SSR;                               /**< Source of System Reset, offset: 0x0 */
  __IO uint32_t NCSPD_CTL;                         /**< Non-Critical Supply Presence Detector Control, offset: 0x4 */
  uint8_t RESERVED_0[4];
  __IO uint32_t NCSPD_STAT;                        /**< Non-Critical Supply Presence Detector Status Flag, offset: 0xC */
  __IO uint32_t CSPD_EVENT_CAPTURE;                /**< Critical Supply Presence Detector Event Flag (CSPDEF), offset: 0x10 */
  __IO uint32_t NCSPD_EVENT_CAPTURE;               /**< Non-Critical Supply Presence Detector Event Flag (NCSPDEF), offset: 0x14 */
  uint8_t RESERVED_1[4];
  __IO uint32_t POR_WDOG_EVENT_CAPTURE[PMC_POR_WDOG_EVENT_CAPTURE_COUNT]; /**< Device Status Flag (DSF0)..Device Status Flag (DSF2), array offset: 0x1C, array step: 0x4 */
} PMC_Type, *PMC_MemMapPtr;

/** Number of instances of the PMC module. */
#define PMC_INSTANCE_COUNT                       (1u)

/* PMC - Peripheral instance base addresses */
/** Peripheral PMC base address */
#define PMC_BASE                                 (0x4008C000u)
/** Peripheral PMC base pointer */
#define PMC                                      ((PMC_Type *)PMC_BASE)
/** Array initializer of PMC peripheral base addresses */
#define PMC_BASE_ADDRS                           { PMC_BASE }
/** Array initializer of PMC peripheral base pointers */
#define PMC_BASE_PTRS                            { PMC }

/* ----------------------------------------------------------------------------
   -- PMC Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup PMC_Register_Masks PMC Register Masks
 * @{
 */

/*! @name SSR - Source of System Reset */
/*! @{ */
#define PMC_SSR_POR_SUP_MASK                     (0x1U)
#define PMC_SSR_POR_SUP_SHIFT                    (0U)
#define PMC_SSR_POR_SUP_WIDTH                    (1U)
#define PMC_SSR_POR_SUP(x)                       (((uint32_t)(((uint32_t)(x)) << PMC_SSR_POR_SUP_SHIFT)) & PMC_SSR_POR_SUP_MASK)
#define PMC_SSR_CSPD_EVENT_MASK                  (0x2U)
#define PMC_SSR_CSPD_EVENT_SHIFT                 (1U)
#define PMC_SSR_CSPD_EVENT_WIDTH                 (1U)
#define PMC_SSR_CSPD_EVENT(x)                    (((uint32_t)(((uint32_t)(x)) << PMC_SSR_CSPD_EVENT_SHIFT)) & PMC_SSR_CSPD_EVENT_MASK)
#define PMC_SSR_POR_WDOG_EVENT_MASK              (0x4U)
#define PMC_SSR_POR_WDOG_EVENT_SHIFT             (2U)
#define PMC_SSR_POR_WDOG_EVENT_WIDTH             (1U)
#define PMC_SSR_POR_WDOG_EVENT(x)                (((uint32_t)(((uint32_t)(x)) << PMC_SSR_POR_WDOG_EVENT_SHIFT)) & PMC_SSR_POR_WDOG_EVENT_MASK)
/*! @} */

/*! @name NCSPD_CTL - Non-Critical Supply Presence Detector Control */
/*! @{ */
#define PMC_NCSPD_CTL_NCSPD_CTL0_MASK            (0x1U)
#define PMC_NCSPD_CTL_NCSPD_CTL0_SHIFT           (0U)
#define PMC_NCSPD_CTL_NCSPD_CTL0_WIDTH           (1U)
#define PMC_NCSPD_CTL_NCSPD_CTL0(x)              (((uint32_t)(((uint32_t)(x)) << PMC_NCSPD_CTL_NCSPD_CTL0_SHIFT)) & PMC_NCSPD_CTL_NCSPD_CTL0_MASK)
#define PMC_NCSPD_CTL_NCSPD_CTL1_MASK            (0x2U)
#define PMC_NCSPD_CTL_NCSPD_CTL1_SHIFT           (1U)
#define PMC_NCSPD_CTL_NCSPD_CTL1_WIDTH           (1U)
#define PMC_NCSPD_CTL_NCSPD_CTL1(x)              (((uint32_t)(((uint32_t)(x)) << PMC_NCSPD_CTL_NCSPD_CTL1_SHIFT)) & PMC_NCSPD_CTL_NCSPD_CTL1_MASK)
#define PMC_NCSPD_CTL_NCSPD_CTL2_MASK            (0x4U)
#define PMC_NCSPD_CTL_NCSPD_CTL2_SHIFT           (2U)
#define PMC_NCSPD_CTL_NCSPD_CTL2_WIDTH           (1U)
#define PMC_NCSPD_CTL_NCSPD_CTL2(x)              (((uint32_t)(((uint32_t)(x)) << PMC_NCSPD_CTL_NCSPD_CTL2_SHIFT)) & PMC_NCSPD_CTL_NCSPD_CTL2_MASK)
#define PMC_NCSPD_CTL_NCSPD_CTL3_MASK            (0x8U)
#define PMC_NCSPD_CTL_NCSPD_CTL3_SHIFT           (3U)
#define PMC_NCSPD_CTL_NCSPD_CTL3_WIDTH           (1U)
#define PMC_NCSPD_CTL_NCSPD_CTL3(x)              (((uint32_t)(((uint32_t)(x)) << PMC_NCSPD_CTL_NCSPD_CTL3_SHIFT)) & PMC_NCSPD_CTL_NCSPD_CTL3_MASK)
#define PMC_NCSPD_CTL_NCSPD_CTL4_MASK            (0x10U)
#define PMC_NCSPD_CTL_NCSPD_CTL4_SHIFT           (4U)
#define PMC_NCSPD_CTL_NCSPD_CTL4_WIDTH           (1U)
#define PMC_NCSPD_CTL_NCSPD_CTL4(x)              (((uint32_t)(((uint32_t)(x)) << PMC_NCSPD_CTL_NCSPD_CTL4_SHIFT)) & PMC_NCSPD_CTL_NCSPD_CTL4_MASK)
#define PMC_NCSPD_CTL_NCSPD_CTL5_MASK            (0x20U)
#define PMC_NCSPD_CTL_NCSPD_CTL5_SHIFT           (5U)
#define PMC_NCSPD_CTL_NCSPD_CTL5_WIDTH           (1U)
#define PMC_NCSPD_CTL_NCSPD_CTL5(x)              (((uint32_t)(((uint32_t)(x)) << PMC_NCSPD_CTL_NCSPD_CTL5_SHIFT)) & PMC_NCSPD_CTL_NCSPD_CTL5_MASK)
#define PMC_NCSPD_CTL_NCSPD_CTL6_MASK            (0x40U)
#define PMC_NCSPD_CTL_NCSPD_CTL6_SHIFT           (6U)
#define PMC_NCSPD_CTL_NCSPD_CTL6_WIDTH           (1U)
#define PMC_NCSPD_CTL_NCSPD_CTL6(x)              (((uint32_t)(((uint32_t)(x)) << PMC_NCSPD_CTL_NCSPD_CTL6_SHIFT)) & PMC_NCSPD_CTL_NCSPD_CTL6_MASK)
#define PMC_NCSPD_CTL_NCSPD_CTL7_MASK            (0x80U)
#define PMC_NCSPD_CTL_NCSPD_CTL7_SHIFT           (7U)
#define PMC_NCSPD_CTL_NCSPD_CTL7_WIDTH           (1U)
#define PMC_NCSPD_CTL_NCSPD_CTL7(x)              (((uint32_t)(((uint32_t)(x)) << PMC_NCSPD_CTL_NCSPD_CTL7_SHIFT)) & PMC_NCSPD_CTL_NCSPD_CTL7_MASK)
#define PMC_NCSPD_CTL_NCSPD_CTL8_MASK            (0x100U)
#define PMC_NCSPD_CTL_NCSPD_CTL8_SHIFT           (8U)
#define PMC_NCSPD_CTL_NCSPD_CTL8_WIDTH           (1U)
#define PMC_NCSPD_CTL_NCSPD_CTL8(x)              (((uint32_t)(((uint32_t)(x)) << PMC_NCSPD_CTL_NCSPD_CTL8_SHIFT)) & PMC_NCSPD_CTL_NCSPD_CTL8_MASK)
#define PMC_NCSPD_CTL_NCSPD_CTL9_MASK            (0x200U)
#define PMC_NCSPD_CTL_NCSPD_CTL9_SHIFT           (9U)
#define PMC_NCSPD_CTL_NCSPD_CTL9_WIDTH           (1U)
#define PMC_NCSPD_CTL_NCSPD_CTL9(x)              (((uint32_t)(((uint32_t)(x)) << PMC_NCSPD_CTL_NCSPD_CTL9_SHIFT)) & PMC_NCSPD_CTL_NCSPD_CTL9_MASK)
/*! @} */

/*! @name NCSPD_STAT - Non-Critical Supply Presence Detector Status Flag */
/*! @{ */
#define PMC_NCSPD_STAT_NCSPD_STAT0_MASK          (0x1U)
#define PMC_NCSPD_STAT_NCSPD_STAT0_SHIFT         (0U)
#define PMC_NCSPD_STAT_NCSPD_STAT0_WIDTH         (1U)
#define PMC_NCSPD_STAT_NCSPD_STAT0(x)            (((uint32_t)(((uint32_t)(x)) << PMC_NCSPD_STAT_NCSPD_STAT0_SHIFT)) & PMC_NCSPD_STAT_NCSPD_STAT0_MASK)
#define PMC_NCSPD_STAT_NCSPD_STAT1_MASK          (0x2U)
#define PMC_NCSPD_STAT_NCSPD_STAT1_SHIFT         (1U)
#define PMC_NCSPD_STAT_NCSPD_STAT1_WIDTH         (1U)
#define PMC_NCSPD_STAT_NCSPD_STAT1(x)            (((uint32_t)(((uint32_t)(x)) << PMC_NCSPD_STAT_NCSPD_STAT1_SHIFT)) & PMC_NCSPD_STAT_NCSPD_STAT1_MASK)
#define PMC_NCSPD_STAT_NCSPD_STAT2_MASK          (0x4U)
#define PMC_NCSPD_STAT_NCSPD_STAT2_SHIFT         (2U)
#define PMC_NCSPD_STAT_NCSPD_STAT2_WIDTH         (1U)
#define PMC_NCSPD_STAT_NCSPD_STAT2(x)            (((uint32_t)(((uint32_t)(x)) << PMC_NCSPD_STAT_NCSPD_STAT2_SHIFT)) & PMC_NCSPD_STAT_NCSPD_STAT2_MASK)
#define PMC_NCSPD_STAT_NCSPD_STAT3_MASK          (0x8U)
#define PMC_NCSPD_STAT_NCSPD_STAT3_SHIFT         (3U)
#define PMC_NCSPD_STAT_NCSPD_STAT3_WIDTH         (1U)
#define PMC_NCSPD_STAT_NCSPD_STAT3(x)            (((uint32_t)(((uint32_t)(x)) << PMC_NCSPD_STAT_NCSPD_STAT3_SHIFT)) & PMC_NCSPD_STAT_NCSPD_STAT3_MASK)
#define PMC_NCSPD_STAT_NCSPD_STAT4_MASK          (0x10U)
#define PMC_NCSPD_STAT_NCSPD_STAT4_SHIFT         (4U)
#define PMC_NCSPD_STAT_NCSPD_STAT4_WIDTH         (1U)
#define PMC_NCSPD_STAT_NCSPD_STAT4(x)            (((uint32_t)(((uint32_t)(x)) << PMC_NCSPD_STAT_NCSPD_STAT4_SHIFT)) & PMC_NCSPD_STAT_NCSPD_STAT4_MASK)
#define PMC_NCSPD_STAT_NCSPD_STAT5_MASK          (0x20U)
#define PMC_NCSPD_STAT_NCSPD_STAT5_SHIFT         (5U)
#define PMC_NCSPD_STAT_NCSPD_STAT5_WIDTH         (1U)
#define PMC_NCSPD_STAT_NCSPD_STAT5(x)            (((uint32_t)(((uint32_t)(x)) << PMC_NCSPD_STAT_NCSPD_STAT5_SHIFT)) & PMC_NCSPD_STAT_NCSPD_STAT5_MASK)
#define PMC_NCSPD_STAT_NCSPD_STAT6_MASK          (0x40U)
#define PMC_NCSPD_STAT_NCSPD_STAT6_SHIFT         (6U)
#define PMC_NCSPD_STAT_NCSPD_STAT6_WIDTH         (1U)
#define PMC_NCSPD_STAT_NCSPD_STAT6(x)            (((uint32_t)(((uint32_t)(x)) << PMC_NCSPD_STAT_NCSPD_STAT6_SHIFT)) & PMC_NCSPD_STAT_NCSPD_STAT6_MASK)
#define PMC_NCSPD_STAT_NCSPD_STAT7_MASK          (0x80U)
#define PMC_NCSPD_STAT_NCSPD_STAT7_SHIFT         (7U)
#define PMC_NCSPD_STAT_NCSPD_STAT7_WIDTH         (1U)
#define PMC_NCSPD_STAT_NCSPD_STAT7(x)            (((uint32_t)(((uint32_t)(x)) << PMC_NCSPD_STAT_NCSPD_STAT7_SHIFT)) & PMC_NCSPD_STAT_NCSPD_STAT7_MASK)
#define PMC_NCSPD_STAT_NCSPD_STAT8_MASK          (0x100U)
#define PMC_NCSPD_STAT_NCSPD_STAT8_SHIFT         (8U)
#define PMC_NCSPD_STAT_NCSPD_STAT8_WIDTH         (1U)
#define PMC_NCSPD_STAT_NCSPD_STAT8(x)            (((uint32_t)(((uint32_t)(x)) << PMC_NCSPD_STAT_NCSPD_STAT8_SHIFT)) & PMC_NCSPD_STAT_NCSPD_STAT8_MASK)
#define PMC_NCSPD_STAT_NCSPD_STAT9_MASK          (0x200U)
#define PMC_NCSPD_STAT_NCSPD_STAT9_SHIFT         (9U)
#define PMC_NCSPD_STAT_NCSPD_STAT9_WIDTH         (1U)
#define PMC_NCSPD_STAT_NCSPD_STAT9(x)            (((uint32_t)(((uint32_t)(x)) << PMC_NCSPD_STAT_NCSPD_STAT9_SHIFT)) & PMC_NCSPD_STAT_NCSPD_STAT9_MASK)
/*! @} */

/*! @name CSPD_EVENT_CAPTURE - Critical Supply Presence Detector Event Flag (CSPDEF) */
/*! @{ */
#define PMC_CSPD_EVENT_CAPTURE_HVCPOREF_MASK     (0x1U)
#define PMC_CSPD_EVENT_CAPTURE_HVCPOREF_SHIFT    (0U)
#define PMC_CSPD_EVENT_CAPTURE_HVCPOREF_WIDTH    (1U)
#define PMC_CSPD_EVENT_CAPTURE_HVCPOREF(x)       (((uint32_t)(((uint32_t)(x)) << PMC_CSPD_EVENT_CAPTURE_HVCPOREF_SHIFT)) & PMC_CSPD_EVENT_CAPTURE_HVCPOREF_MASK)
#define PMC_CSPD_EVENT_CAPTURE_CSPD_EVENT_CAPTURE0_MASK (0x2U)
#define PMC_CSPD_EVENT_CAPTURE_CSPD_EVENT_CAPTURE0_SHIFT (1U)
#define PMC_CSPD_EVENT_CAPTURE_CSPD_EVENT_CAPTURE0_WIDTH (1U)
#define PMC_CSPD_EVENT_CAPTURE_CSPD_EVENT_CAPTURE0(x) (((uint32_t)(((uint32_t)(x)) << PMC_CSPD_EVENT_CAPTURE_CSPD_EVENT_CAPTURE0_SHIFT)) & PMC_CSPD_EVENT_CAPTURE_CSPD_EVENT_CAPTURE0_MASK)
#define PMC_CSPD_EVENT_CAPTURE_CSPD_EVENT_CAPTURE1_MASK (0x4U)
#define PMC_CSPD_EVENT_CAPTURE_CSPD_EVENT_CAPTURE1_SHIFT (2U)
#define PMC_CSPD_EVENT_CAPTURE_CSPD_EVENT_CAPTURE1_WIDTH (1U)
#define PMC_CSPD_EVENT_CAPTURE_CSPD_EVENT_CAPTURE1(x) (((uint32_t)(((uint32_t)(x)) << PMC_CSPD_EVENT_CAPTURE_CSPD_EVENT_CAPTURE1_SHIFT)) & PMC_CSPD_EVENT_CAPTURE_CSPD_EVENT_CAPTURE1_MASK)
/*! @} */

/*! @name NCSPD_EVENT_CAPTURE - Non-Critical Supply Presence Detector Event Flag (NCSPDEF) */
/*! @{ */
#define PMC_NCSPD_EVENT_CAPTURE_NCSPD_EVENT_CAPTURE0_MASK (0x1U)
#define PMC_NCSPD_EVENT_CAPTURE_NCSPD_EVENT_CAPTURE0_SHIFT (0U)
#define PMC_NCSPD_EVENT_CAPTURE_NCSPD_EVENT_CAPTURE0_WIDTH (1U)
#define PMC_NCSPD_EVENT_CAPTURE_NCSPD_EVENT_CAPTURE0(x) (((uint32_t)(((uint32_t)(x)) << PMC_NCSPD_EVENT_CAPTURE_NCSPD_EVENT_CAPTURE0_SHIFT)) & PMC_NCSPD_EVENT_CAPTURE_NCSPD_EVENT_CAPTURE0_MASK)
#define PMC_NCSPD_EVENT_CAPTURE_NCSPD_EVENT_CAPTURE1_MASK (0x2U)
#define PMC_NCSPD_EVENT_CAPTURE_NCSPD_EVENT_CAPTURE1_SHIFT (1U)
#define PMC_NCSPD_EVENT_CAPTURE_NCSPD_EVENT_CAPTURE1_WIDTH (1U)
#define PMC_NCSPD_EVENT_CAPTURE_NCSPD_EVENT_CAPTURE1(x) (((uint32_t)(((uint32_t)(x)) << PMC_NCSPD_EVENT_CAPTURE_NCSPD_EVENT_CAPTURE1_SHIFT)) & PMC_NCSPD_EVENT_CAPTURE_NCSPD_EVENT_CAPTURE1_MASK)
#define PMC_NCSPD_EVENT_CAPTURE_NCSPD_EVENT_CAPTURE2_MASK (0x4U)
#define PMC_NCSPD_EVENT_CAPTURE_NCSPD_EVENT_CAPTURE2_SHIFT (2U)
#define PMC_NCSPD_EVENT_CAPTURE_NCSPD_EVENT_CAPTURE2_WIDTH (1U)
#define PMC_NCSPD_EVENT_CAPTURE_NCSPD_EVENT_CAPTURE2(x) (((uint32_t)(((uint32_t)(x)) << PMC_NCSPD_EVENT_CAPTURE_NCSPD_EVENT_CAPTURE2_SHIFT)) & PMC_NCSPD_EVENT_CAPTURE_NCSPD_EVENT_CAPTURE2_MASK)
#define PMC_NCSPD_EVENT_CAPTURE_NCSPD_EVENT_CAPTURE3_MASK (0x8U)
#define PMC_NCSPD_EVENT_CAPTURE_NCSPD_EVENT_CAPTURE3_SHIFT (3U)
#define PMC_NCSPD_EVENT_CAPTURE_NCSPD_EVENT_CAPTURE3_WIDTH (1U)
#define PMC_NCSPD_EVENT_CAPTURE_NCSPD_EVENT_CAPTURE3(x) (((uint32_t)(((uint32_t)(x)) << PMC_NCSPD_EVENT_CAPTURE_NCSPD_EVENT_CAPTURE3_SHIFT)) & PMC_NCSPD_EVENT_CAPTURE_NCSPD_EVENT_CAPTURE3_MASK)
#define PMC_NCSPD_EVENT_CAPTURE_NCSPD_EVENT_CAPTURE4_MASK (0x10U)
#define PMC_NCSPD_EVENT_CAPTURE_NCSPD_EVENT_CAPTURE4_SHIFT (4U)
#define PMC_NCSPD_EVENT_CAPTURE_NCSPD_EVENT_CAPTURE4_WIDTH (1U)
#define PMC_NCSPD_EVENT_CAPTURE_NCSPD_EVENT_CAPTURE4(x) (((uint32_t)(((uint32_t)(x)) << PMC_NCSPD_EVENT_CAPTURE_NCSPD_EVENT_CAPTURE4_SHIFT)) & PMC_NCSPD_EVENT_CAPTURE_NCSPD_EVENT_CAPTURE4_MASK)
#define PMC_NCSPD_EVENT_CAPTURE_NCSPD_EVENT_CAPTURE5_MASK (0x20U)
#define PMC_NCSPD_EVENT_CAPTURE_NCSPD_EVENT_CAPTURE5_SHIFT (5U)
#define PMC_NCSPD_EVENT_CAPTURE_NCSPD_EVENT_CAPTURE5_WIDTH (1U)
#define PMC_NCSPD_EVENT_CAPTURE_NCSPD_EVENT_CAPTURE5(x) (((uint32_t)(((uint32_t)(x)) << PMC_NCSPD_EVENT_CAPTURE_NCSPD_EVENT_CAPTURE5_SHIFT)) & PMC_NCSPD_EVENT_CAPTURE_NCSPD_EVENT_CAPTURE5_MASK)
#define PMC_NCSPD_EVENT_CAPTURE_NCSPD_EVENT_CAPTURE6_MASK (0x40U)
#define PMC_NCSPD_EVENT_CAPTURE_NCSPD_EVENT_CAPTURE6_SHIFT (6U)
#define PMC_NCSPD_EVENT_CAPTURE_NCSPD_EVENT_CAPTURE6_WIDTH (1U)
#define PMC_NCSPD_EVENT_CAPTURE_NCSPD_EVENT_CAPTURE6(x) (((uint32_t)(((uint32_t)(x)) << PMC_NCSPD_EVENT_CAPTURE_NCSPD_EVENT_CAPTURE6_SHIFT)) & PMC_NCSPD_EVENT_CAPTURE_NCSPD_EVENT_CAPTURE6_MASK)
#define PMC_NCSPD_EVENT_CAPTURE_NCSPD_EVENT_CAPTURE7_MASK (0x80U)
#define PMC_NCSPD_EVENT_CAPTURE_NCSPD_EVENT_CAPTURE7_SHIFT (7U)
#define PMC_NCSPD_EVENT_CAPTURE_NCSPD_EVENT_CAPTURE7_WIDTH (1U)
#define PMC_NCSPD_EVENT_CAPTURE_NCSPD_EVENT_CAPTURE7(x) (((uint32_t)(((uint32_t)(x)) << PMC_NCSPD_EVENT_CAPTURE_NCSPD_EVENT_CAPTURE7_SHIFT)) & PMC_NCSPD_EVENT_CAPTURE_NCSPD_EVENT_CAPTURE7_MASK)
#define PMC_NCSPD_EVENT_CAPTURE_NCSPD_EVENT_CAPTURE8_MASK (0x100U)
#define PMC_NCSPD_EVENT_CAPTURE_NCSPD_EVENT_CAPTURE8_SHIFT (8U)
#define PMC_NCSPD_EVENT_CAPTURE_NCSPD_EVENT_CAPTURE8_WIDTH (1U)
#define PMC_NCSPD_EVENT_CAPTURE_NCSPD_EVENT_CAPTURE8(x) (((uint32_t)(((uint32_t)(x)) << PMC_NCSPD_EVENT_CAPTURE_NCSPD_EVENT_CAPTURE8_SHIFT)) & PMC_NCSPD_EVENT_CAPTURE_NCSPD_EVENT_CAPTURE8_MASK)
#define PMC_NCSPD_EVENT_CAPTURE_NCSPD_EVENT_CAPTURE9_MASK (0x200U)
#define PMC_NCSPD_EVENT_CAPTURE_NCSPD_EVENT_CAPTURE9_SHIFT (9U)
#define PMC_NCSPD_EVENT_CAPTURE_NCSPD_EVENT_CAPTURE9_WIDTH (1U)
#define PMC_NCSPD_EVENT_CAPTURE_NCSPD_EVENT_CAPTURE9(x) (((uint32_t)(((uint32_t)(x)) << PMC_NCSPD_EVENT_CAPTURE_NCSPD_EVENT_CAPTURE9_SHIFT)) & PMC_NCSPD_EVENT_CAPTURE_NCSPD_EVENT_CAPTURE9_MASK)
/*! @} */

/*! @name POR_WDOG_EVENT_CAPTURE - Device Status Flag (DSF0)..Device Status Flag (DSF2) */
/*! @{ */
#define PMC_POR_WDOG_EVENT_CAPTURE_DSFBIT0_MASK  (0xFFFFFFFFU)
#define PMC_POR_WDOG_EVENT_CAPTURE_DSFBIT0_SHIFT (0U)
#define PMC_POR_WDOG_EVENT_CAPTURE_DSFBIT0_WIDTH (32U)
#define PMC_POR_WDOG_EVENT_CAPTURE_DSFBIT0(x)    (((uint32_t)(((uint32_t)(x)) << PMC_POR_WDOG_EVENT_CAPTURE_DSFBIT0_SHIFT)) & PMC_POR_WDOG_EVENT_CAPTURE_DSFBIT0_MASK)
#define PMC_POR_WDOG_EVENT_CAPTURE_DSFBIT1_MASK  (0xFFFFFFFFU)
#define PMC_POR_WDOG_EVENT_CAPTURE_DSFBIT1_SHIFT (0U)
#define PMC_POR_WDOG_EVENT_CAPTURE_DSFBIT1_WIDTH (32U)
#define PMC_POR_WDOG_EVENT_CAPTURE_DSFBIT1(x)    (((uint32_t)(((uint32_t)(x)) << PMC_POR_WDOG_EVENT_CAPTURE_DSFBIT1_SHIFT)) & PMC_POR_WDOG_EVENT_CAPTURE_DSFBIT1_MASK)
#define PMC_POR_WDOG_EVENT_CAPTURE_DSFBIT2_MASK  (0xFFFFFFFFU)
#define PMC_POR_WDOG_EVENT_CAPTURE_DSFBIT2_SHIFT (0U)
#define PMC_POR_WDOG_EVENT_CAPTURE_DSFBIT2_WIDTH (32U)
#define PMC_POR_WDOG_EVENT_CAPTURE_DSFBIT2(x)    (((uint32_t)(((uint32_t)(x)) << PMC_POR_WDOG_EVENT_CAPTURE_DSFBIT2_SHIFT)) & PMC_POR_WDOG_EVENT_CAPTURE_DSFBIT2_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group PMC_Register_Masks */


/*!
 * @}
 */ /* end of group PMC_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- PMUEVENTOBSERVER Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup PMUEVENTOBSERVER_Peripheral_Access_Layer PMUEVENTOBSERVER Peripheral Access Layer
 * @{
 */

/** PMUEVENTOBSERVER - Size of Registers Arrays */
#define PMUEVENTOBSERVER_CTL_COUNT                30u
#define PMUEVENTOBSERVER_STAT_COUNT               30u

/** PMUEVENTOBSERVER - Register Layout Typedef */
typedef struct {
  __IO uint32_t CTL[PMUEVENTOBSERVER_CTL_COUNT];   /**< PMUEVENT Observer Control Register, array offset: 0x0, array step: 0x4 */
  uint8_t RESERVED_0[8];
  __IO uint32_t STAT[PMUEVENTOBSERVER_STAT_COUNT]; /**< PMUEVENT Observer Status Register, array offset: 0x80, array step: 0x4 */
} PMUEVENTOBSERVER_Type, *PMUEVENTOBSERVER_MemMapPtr;

/** Number of instances of the PMUEVENTOBSERVER module. */
#define PMUEVENTOBSERVER_INSTANCE_COUNT          (1u)

/* PMUEVENTOBSERVER - Peripheral instance base addresses */
/** Peripheral PMUEVENTOBSERVER base address */
#define PMUEVENTOBSERVER_BASE                    (0u)
/** Peripheral PMUEVENTOBSERVER base pointer */
#define PMUEVENTOBSERVER                         ((PMUEVENTOBSERVER_Type *)PMUEVENTOBSERVER_BASE)
/** Array initializer of PMUEVENTOBSERVER peripheral base addresses */
#define PMUEVENTOBSERVER_BASE_ADDRS              { PMUEVENTOBSERVER_BASE }
/** Array initializer of PMUEVENTOBSERVER peripheral base pointers */
#define PMUEVENTOBSERVER_BASE_PTRS               { PMUEVENTOBSERVER }

/* ----------------------------------------------------------------------------
   -- PMUEVENTOBSERVER Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup PMUEVENTOBSERVER_Register_Masks PMUEVENTOBSERVER Register Masks
 * @{
 */

/*! @name CTL - PMUEVENT Observer Control Register */
/*! @{ */
#define PMUEVENTOBSERVER_CTL_REVTINPSEL_MASK     (0x3U)
#define PMUEVENTOBSERVER_CTL_REVTINPSEL_SHIFT    (0U)
#define PMUEVENTOBSERVER_CTL_REVTINPSEL_WIDTH    (2U)
#define PMUEVENTOBSERVER_CTL_REVTINPSEL(x)       (((uint32_t)(((uint32_t)(x)) << PMUEVENTOBSERVER_CTL_REVTINPSEL_SHIFT)) & PMUEVENTOBSERVER_CTL_REVTINPSEL_MASK)
#define PMUEVENTOBSERVER_CTL_CTRSTRTSEL_MASK     (0x30U)
#define PMUEVENTOBSERVER_CTL_CTRSTRTSEL_SHIFT    (4U)
#define PMUEVENTOBSERVER_CTL_CTRSTRTSEL_WIDTH    (2U)
#define PMUEVENTOBSERVER_CTL_CTRSTRTSEL(x)       (((uint32_t)(((uint32_t)(x)) << PMUEVENTOBSERVER_CTL_CTRSTRTSEL_SHIFT)) & PMUEVENTOBSERVER_CTL_CTRSTRTSEL_MASK)
#define PMUEVENTOBSERVER_CTL_CTRSTPSEL_MASK      (0xC0U)
#define PMUEVENTOBSERVER_CTL_CTRSTPSEL_SHIFT     (6U)
#define PMUEVENTOBSERVER_CTL_CTRSTPSEL_WIDTH     (2U)
#define PMUEVENTOBSERVER_CTL_CTRSTPSEL(x)        (((uint32_t)(((uint32_t)(x)) << PMUEVENTOBSERVER_CTL_CTRSTPSEL_SHIFT)) & PMUEVENTOBSERVER_CTL_CTRSTPSEL_MASK)
#define PMUEVENTOBSERVER_CTL_CPYCOUNT_MASK       (0x100U)
#define PMUEVENTOBSERVER_CTL_CPYCOUNT_SHIFT      (8U)
#define PMUEVENTOBSERVER_CTL_CPYCOUNT_WIDTH      (1U)
#define PMUEVENTOBSERVER_CTL_CPYCOUNT(x)         (((uint32_t)(((uint32_t)(x)) << PMUEVENTOBSERVER_CTL_CPYCOUNT_SHIFT)) & PMUEVENTOBSERVER_CTL_CPYCOUNT_MASK)
#define PMUEVENTOBSERVER_CTL_CLRCNTR_MASK        (0x200U)
#define PMUEVENTOBSERVER_CTL_CLRCNTR_SHIFT       (9U)
#define PMUEVENTOBSERVER_CTL_CLRCNTR_WIDTH       (1U)
#define PMUEVENTOBSERVER_CTL_CLRCNTR(x)          (((uint32_t)(((uint32_t)(x)) << PMUEVENTOBSERVER_CTL_CLRCNTR_SHIFT)) & PMUEVENTOBSERVER_CTL_CLRCNTR_MASK)
/*! @} */

/*! @name STAT - PMUEVENT Observer Status Register */
/*! @{ */
#define PMUEVENTOBSERVER_STAT_COUNT_VAL_MASK     (0xFFFFFFFFU)
#define PMUEVENTOBSERVER_STAT_COUNT_VAL_SHIFT    (0U)
#define PMUEVENTOBSERVER_STAT_COUNT_VAL_WIDTH    (32U)
#define PMUEVENTOBSERVER_STAT_COUNT_VAL(x)       (((uint32_t)(((uint32_t)(x)) << PMUEVENTOBSERVER_STAT_COUNT_VAL_SHIFT)) & PMUEVENTOBSERVER_STAT_COUNT_VAL_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group PMUEVENTOBSERVER_Register_Masks */


/*!
 * @}
 */ /* end of group PMUEVENTOBSERVER_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- Perf_Registers Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup Perf_Registers_Peripheral_Access_Layer Perf_Registers Peripheral Access Layer
 * @{
 */

/** Perf_Registers - Size of Registers Arrays */
#define Perf_Registers_COUNTER_N_DATA_REG_ADDR_COUNT 4u

/** Perf_Registers - Register Layout Typedef */
typedef struct {
  __IO uint32_t COUNTER_0_CTRL_REG_ADDR;           /**< Counter control 0, offset: 0x0 */
  __IO uint32_t COUNTER_1_CTRL_REG_ADDR;           /**< Counter control 1, offset: 0x4 */
  __IO uint32_t COUNTER_2_CTRL_REG_ADDR;           /**< Counter control 2, offset: 0x8 */
  __IO uint32_t COUNTER_3_CTRL_REG_ADDR;           /**< Counter control 3, offset: 0xC */
  uint8_t RESERVED_0[16];
  __I  uint32_t COUNTER_DATA_REG_ADDR[Perf_Registers_COUNTER_N_DATA_REG_ADDR_COUNT]; /**< Counter Data, array offset: 0x20, array step: 0x4 */
  uint8_t RESERVED_1[16];
  __IO uint32_t MRR_0_DATA_REG_ADDR;               /**< Mode Register Read 0 Data, offset: 0x40 */
  __I  uint32_t MRR_1_DATA_REG_ADDR;               /**< Mode Register Read 1 Data, offset: 0x44 */
} Perf_Registers_Type, *Perf_Registers_MemMapPtr;

/** Number of instances of the Perf_Registers module. */
#define Perf_Registers_INSTANCE_COUNT            (1u)

/* Perf_Registers - Peripheral instance base addresses */
/** Peripheral PERF_REGISTERS base address */
#define PERF_REGISTERS_BASE                      (0x403E0000u)
/** Peripheral PERF_REGISTERS base pointer */
#define PERF_REGISTERS                           ((Perf_Registers_Type *)PERF_REGISTERS_BASE)
/** Array initializer of Perf_Registers peripheral base addresses */
#define Perf_Registers_BASE_ADDRS                { PERF_REGISTERS_BASE }
/** Array initializer of Perf_Registers peripheral base pointers */
#define Perf_Registers_BASE_PTRS                 { PERF_REGISTERS }

/* ----------------------------------------------------------------------------
   -- Perf_Registers Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup Perf_Registers_Register_Masks Perf_Registers Register Masks
 * @{
 */

/*! @name COUNTER_0_CTRL_REG_ADDR - Counter control 0 */
/*! @{ */
#define Perf_Registers_COUNTER_0_CTRL_REG_ADDR_CNTR_OFL_MASK (0x1U)
#define Perf_Registers_COUNTER_0_CTRL_REG_ADDR_CNTR_OFL_SHIFT (0U)
#define Perf_Registers_COUNTER_0_CTRL_REG_ADDR_CNTR_OFL_WIDTH (1U)
#define Perf_Registers_COUNTER_0_CTRL_REG_ADDR_CNTR_OFL(x) (((uint32_t)(((uint32_t)(x)) << Perf_Registers_COUNTER_0_CTRL_REG_ADDR_CNTR_OFL_SHIFT)) & Perf_Registers_COUNTER_0_CTRL_REG_ADDR_CNTR_OFL_MASK)
#define Perf_Registers_COUNTER_0_CTRL_REG_ADDR_CNTR_CLR_MASK (0x2U)
#define Perf_Registers_COUNTER_0_CTRL_REG_ADDR_CNTR_CLR_SHIFT (1U)
#define Perf_Registers_COUNTER_0_CTRL_REG_ADDR_CNTR_CLR_WIDTH (1U)
#define Perf_Registers_COUNTER_0_CTRL_REG_ADDR_CNTR_CLR(x) (((uint32_t)(((uint32_t)(x)) << Perf_Registers_COUNTER_0_CTRL_REG_ADDR_CNTR_CLR_SHIFT)) & Perf_Registers_COUNTER_0_CTRL_REG_ADDR_CNTR_CLR_MASK)
#define Perf_Registers_COUNTER_0_CTRL_REG_ADDR_CNTR_EN_MASK (0x4U)
#define Perf_Registers_COUNTER_0_CTRL_REG_ADDR_CNTR_EN_SHIFT (2U)
#define Perf_Registers_COUNTER_0_CTRL_REG_ADDR_CNTR_EN_WIDTH (1U)
#define Perf_Registers_COUNTER_0_CTRL_REG_ADDR_CNTR_EN(x) (((uint32_t)(((uint32_t)(x)) << Perf_Registers_COUNTER_0_CTRL_REG_ADDR_CNTR_EN_SHIFT)) & Perf_Registers_COUNTER_0_CTRL_REG_ADDR_CNTR_EN_MASK)
/*! @} */

/*! @name COUNTER_1_CTRL_REG_ADDR - Counter control 1 */
/*! @{ */
#define Perf_Registers_COUNTER_1_CTRL_REG_ADDR_CNTR_OFL_MASK (0x1U)
#define Perf_Registers_COUNTER_1_CTRL_REG_ADDR_CNTR_OFL_SHIFT (0U)
#define Perf_Registers_COUNTER_1_CTRL_REG_ADDR_CNTR_OFL_WIDTH (1U)
#define Perf_Registers_COUNTER_1_CTRL_REG_ADDR_CNTR_OFL(x) (((uint32_t)(((uint32_t)(x)) << Perf_Registers_COUNTER_1_CTRL_REG_ADDR_CNTR_OFL_SHIFT)) & Perf_Registers_COUNTER_1_CTRL_REG_ADDR_CNTR_OFL_MASK)
#define Perf_Registers_COUNTER_1_CTRL_REG_ADDR_CNTR_CLR_MASK (0x2U)
#define Perf_Registers_COUNTER_1_CTRL_REG_ADDR_CNTR_CLR_SHIFT (1U)
#define Perf_Registers_COUNTER_1_CTRL_REG_ADDR_CNTR_CLR_WIDTH (1U)
#define Perf_Registers_COUNTER_1_CTRL_REG_ADDR_CNTR_CLR(x) (((uint32_t)(((uint32_t)(x)) << Perf_Registers_COUNTER_1_CTRL_REG_ADDR_CNTR_CLR_SHIFT)) & Perf_Registers_COUNTER_1_CTRL_REG_ADDR_CNTR_CLR_MASK)
#define Perf_Registers_COUNTER_1_CTRL_REG_ADDR_CNTR_EN_MASK (0x4U)
#define Perf_Registers_COUNTER_1_CTRL_REG_ADDR_CNTR_EN_SHIFT (2U)
#define Perf_Registers_COUNTER_1_CTRL_REG_ADDR_CNTR_EN_WIDTH (1U)
#define Perf_Registers_COUNTER_1_CTRL_REG_ADDR_CNTR_EN(x) (((uint32_t)(((uint32_t)(x)) << Perf_Registers_COUNTER_1_CTRL_REG_ADDR_CNTR_EN_SHIFT)) & Perf_Registers_COUNTER_1_CTRL_REG_ADDR_CNTR_EN_MASK)
#define Perf_Registers_COUNTER_1_CTRL_REG_ADDR_COUNT_PR_MASK (0xFF0000U)
#define Perf_Registers_COUNTER_1_CTRL_REG_ADDR_COUNT_PR_SHIFT (16U)
#define Perf_Registers_COUNTER_1_CTRL_REG_ADDR_COUNT_PR_WIDTH (8U)
#define Perf_Registers_COUNTER_1_CTRL_REG_ADDR_COUNT_PR(x) (((uint32_t)(((uint32_t)(x)) << Perf_Registers_COUNTER_1_CTRL_REG_ADDR_COUNT_PR_SHIFT)) & Perf_Registers_COUNTER_1_CTRL_REG_ADDR_COUNT_PR_MASK)
#define Perf_Registers_COUNTER_1_CTRL_REG_ADDR_CSV_MASK (0xFF000000U)
#define Perf_Registers_COUNTER_1_CTRL_REG_ADDR_CSV_SHIFT (24U)
#define Perf_Registers_COUNTER_1_CTRL_REG_ADDR_CSV_WIDTH (8U)
#define Perf_Registers_COUNTER_1_CTRL_REG_ADDR_CSV(x) (((uint32_t)(((uint32_t)(x)) << Perf_Registers_COUNTER_1_CTRL_REG_ADDR_CSV_SHIFT)) & Perf_Registers_COUNTER_1_CTRL_REG_ADDR_CSV_MASK)
/*! @} */

/*! @name COUNTER_2_CTRL_REG_ADDR - Counter control 2 */
/*! @{ */
#define Perf_Registers_COUNTER_2_CTRL_REG_ADDR_CNTR_OFL_MASK (0x1U)
#define Perf_Registers_COUNTER_2_CTRL_REG_ADDR_CNTR_OFL_SHIFT (0U)
#define Perf_Registers_COUNTER_2_CTRL_REG_ADDR_CNTR_OFL_WIDTH (1U)
#define Perf_Registers_COUNTER_2_CTRL_REG_ADDR_CNTR_OFL(x) (((uint32_t)(((uint32_t)(x)) << Perf_Registers_COUNTER_2_CTRL_REG_ADDR_CNTR_OFL_SHIFT)) & Perf_Registers_COUNTER_2_CTRL_REG_ADDR_CNTR_OFL_MASK)
#define Perf_Registers_COUNTER_2_CTRL_REG_ADDR_CNTR_CLR_MASK (0x2U)
#define Perf_Registers_COUNTER_2_CTRL_REG_ADDR_CNTR_CLR_SHIFT (1U)
#define Perf_Registers_COUNTER_2_CTRL_REG_ADDR_CNTR_CLR_WIDTH (1U)
#define Perf_Registers_COUNTER_2_CTRL_REG_ADDR_CNTR_CLR(x) (((uint32_t)(((uint32_t)(x)) << Perf_Registers_COUNTER_2_CTRL_REG_ADDR_CNTR_CLR_SHIFT)) & Perf_Registers_COUNTER_2_CTRL_REG_ADDR_CNTR_CLR_MASK)
#define Perf_Registers_COUNTER_2_CTRL_REG_ADDR_CNTR_EN_MASK (0x4U)
#define Perf_Registers_COUNTER_2_CTRL_REG_ADDR_CNTR_EN_SHIFT (2U)
#define Perf_Registers_COUNTER_2_CTRL_REG_ADDR_CNTR_EN_WIDTH (1U)
#define Perf_Registers_COUNTER_2_CTRL_REG_ADDR_CNTR_EN(x) (((uint32_t)(((uint32_t)(x)) << Perf_Registers_COUNTER_2_CTRL_REG_ADDR_CNTR_EN_SHIFT)) & Perf_Registers_COUNTER_2_CTRL_REG_ADDR_CNTR_EN_MASK)
#define Perf_Registers_COUNTER_2_CTRL_REG_ADDR_COUNT_PR_MASK (0xFF0000U)
#define Perf_Registers_COUNTER_2_CTRL_REG_ADDR_COUNT_PR_SHIFT (16U)
#define Perf_Registers_COUNTER_2_CTRL_REG_ADDR_COUNT_PR_WIDTH (8U)
#define Perf_Registers_COUNTER_2_CTRL_REG_ADDR_COUNT_PR(x) (((uint32_t)(((uint32_t)(x)) << Perf_Registers_COUNTER_2_CTRL_REG_ADDR_COUNT_PR_SHIFT)) & Perf_Registers_COUNTER_2_CTRL_REG_ADDR_COUNT_PR_MASK)
#define Perf_Registers_COUNTER_2_CTRL_REG_ADDR_CSV_MASK (0xFF000000U)
#define Perf_Registers_COUNTER_2_CTRL_REG_ADDR_CSV_SHIFT (24U)
#define Perf_Registers_COUNTER_2_CTRL_REG_ADDR_CSV_WIDTH (8U)
#define Perf_Registers_COUNTER_2_CTRL_REG_ADDR_CSV(x) (((uint32_t)(((uint32_t)(x)) << Perf_Registers_COUNTER_2_CTRL_REG_ADDR_CSV_SHIFT)) & Perf_Registers_COUNTER_2_CTRL_REG_ADDR_CSV_MASK)
/*! @} */

/*! @name COUNTER_3_CTRL_REG_ADDR - Counter control 3 */
/*! @{ */
#define Perf_Registers_COUNTER_3_CTRL_REG_ADDR_CNTR_OFL_MASK (0x1U)
#define Perf_Registers_COUNTER_3_CTRL_REG_ADDR_CNTR_OFL_SHIFT (0U)
#define Perf_Registers_COUNTER_3_CTRL_REG_ADDR_CNTR_OFL_WIDTH (1U)
#define Perf_Registers_COUNTER_3_CTRL_REG_ADDR_CNTR_OFL(x) (((uint32_t)(((uint32_t)(x)) << Perf_Registers_COUNTER_3_CTRL_REG_ADDR_CNTR_OFL_SHIFT)) & Perf_Registers_COUNTER_3_CTRL_REG_ADDR_CNTR_OFL_MASK)
#define Perf_Registers_COUNTER_3_CTRL_REG_ADDR_CNTR_CLR_MASK (0x2U)
#define Perf_Registers_COUNTER_3_CTRL_REG_ADDR_CNTR_CLR_SHIFT (1U)
#define Perf_Registers_COUNTER_3_CTRL_REG_ADDR_CNTR_CLR_WIDTH (1U)
#define Perf_Registers_COUNTER_3_CTRL_REG_ADDR_CNTR_CLR(x) (((uint32_t)(((uint32_t)(x)) << Perf_Registers_COUNTER_3_CTRL_REG_ADDR_CNTR_CLR_SHIFT)) & Perf_Registers_COUNTER_3_CTRL_REG_ADDR_CNTR_CLR_MASK)
#define Perf_Registers_COUNTER_3_CTRL_REG_ADDR_CNTR_EN_MASK (0x4U)
#define Perf_Registers_COUNTER_3_CTRL_REG_ADDR_CNTR_EN_SHIFT (2U)
#define Perf_Registers_COUNTER_3_CTRL_REG_ADDR_CNTR_EN_WIDTH (1U)
#define Perf_Registers_COUNTER_3_CTRL_REG_ADDR_CNTR_EN(x) (((uint32_t)(((uint32_t)(x)) << Perf_Registers_COUNTER_3_CTRL_REG_ADDR_CNTR_EN_SHIFT)) & Perf_Registers_COUNTER_3_CTRL_REG_ADDR_CNTR_EN_MASK)
#define Perf_Registers_COUNTER_3_CTRL_REG_ADDR_COUNT_PR_MASK (0xFF0000U)
#define Perf_Registers_COUNTER_3_CTRL_REG_ADDR_COUNT_PR_SHIFT (16U)
#define Perf_Registers_COUNTER_3_CTRL_REG_ADDR_COUNT_PR_WIDTH (8U)
#define Perf_Registers_COUNTER_3_CTRL_REG_ADDR_COUNT_PR(x) (((uint32_t)(((uint32_t)(x)) << Perf_Registers_COUNTER_3_CTRL_REG_ADDR_COUNT_PR_SHIFT)) & Perf_Registers_COUNTER_3_CTRL_REG_ADDR_COUNT_PR_MASK)
#define Perf_Registers_COUNTER_3_CTRL_REG_ADDR_CSV_MASK (0xFF000000U)
#define Perf_Registers_COUNTER_3_CTRL_REG_ADDR_CSV_SHIFT (24U)
#define Perf_Registers_COUNTER_3_CTRL_REG_ADDR_CSV_WIDTH (8U)
#define Perf_Registers_COUNTER_3_CTRL_REG_ADDR_CSV(x) (((uint32_t)(((uint32_t)(x)) << Perf_Registers_COUNTER_3_CTRL_REG_ADDR_CSV_SHIFT)) & Perf_Registers_COUNTER_3_CTRL_REG_ADDR_CSV_MASK)
/*! @} */

/*! @name COUNTER_DATA_REG_ADDR - Counter Data */
/*! @{ */
#define Perf_Registers_COUNTER_DATA_REG_ADDR_COUNT_VL_MASK (0xFFFFFFFFU)
#define Perf_Registers_COUNTER_DATA_REG_ADDR_COUNT_VL_SHIFT (0U)
#define Perf_Registers_COUNTER_DATA_REG_ADDR_COUNT_VL_WIDTH (32U)
#define Perf_Registers_COUNTER_DATA_REG_ADDR_COUNT_VL(x) (((uint32_t)(((uint32_t)(x)) << Perf_Registers_COUNTER_DATA_REG_ADDR_COUNT_VL_SHIFT)) & Perf_Registers_COUNTER_DATA_REG_ADDR_COUNT_VL_MASK)
/*! @} */

/*! @name MRR_0_DATA_REG_ADDR - Mode Register Read 0 Data */
/*! @{ */
#define Perf_Registers_MRR_0_DATA_REG_ADDR_MRR_DDR_SEL_REG_MASK (0x1U)
#define Perf_Registers_MRR_0_DATA_REG_ADDR_MRR_DDR_SEL_REG_SHIFT (0U)
#define Perf_Registers_MRR_0_DATA_REG_ADDR_MRR_DDR_SEL_REG_WIDTH (1U)
#define Perf_Registers_MRR_0_DATA_REG_ADDR_MRR_DDR_SEL_REG(x) (((uint32_t)(((uint32_t)(x)) << Perf_Registers_MRR_0_DATA_REG_ADDR_MRR_DDR_SEL_REG_SHIFT)) & Perf_Registers_MRR_0_DATA_REG_ADDR_MRR_DDR_SEL_REG_MASK)
#define Perf_Registers_MRR_0_DATA_REG_ADDR_MPR_MODE_SEL_REG_MASK (0x2U)
#define Perf_Registers_MRR_0_DATA_REG_ADDR_MPR_MODE_SEL_REG_SHIFT (1U)
#define Perf_Registers_MRR_0_DATA_REG_ADDR_MPR_MODE_SEL_REG_WIDTH (1U)
#define Perf_Registers_MRR_0_DATA_REG_ADDR_MPR_MODE_SEL_REG(x) (((uint32_t)(((uint32_t)(x)) << Perf_Registers_MRR_0_DATA_REG_ADDR_MPR_MODE_SEL_REG_SHIFT)) & Perf_Registers_MRR_0_DATA_REG_ADDR_MPR_MODE_SEL_REG_MASK)
#define Perf_Registers_MRR_0_DATA_REG_ADDR_MPR_VALID_CLR_REG_MASK (0x4U)
#define Perf_Registers_MRR_0_DATA_REG_ADDR_MPR_VALID_CLR_REG_SHIFT (2U)
#define Perf_Registers_MRR_0_DATA_REG_ADDR_MPR_VALID_CLR_REG_WIDTH (1U)
#define Perf_Registers_MRR_0_DATA_REG_ADDR_MPR_VALID_CLR_REG(x) (((uint32_t)(((uint32_t)(x)) << Perf_Registers_MRR_0_DATA_REG_ADDR_MPR_VALID_CLR_REG_SHIFT)) & Perf_Registers_MRR_0_DATA_REG_ADDR_MPR_VALID_CLR_REG_MASK)
#define Perf_Registers_MRR_0_DATA_REG_ADDR_VALID_OUT_MASK (0x8U)
#define Perf_Registers_MRR_0_DATA_REG_ADDR_VALID_OUT_SHIFT (3U)
#define Perf_Registers_MRR_0_DATA_REG_ADDR_VALID_OUT_WIDTH (1U)
#define Perf_Registers_MRR_0_DATA_REG_ADDR_VALID_OUT(x) (((uint32_t)(((uint32_t)(x)) << Perf_Registers_MRR_0_DATA_REG_ADDR_VALID_OUT_SHIFT)) & Perf_Registers_MRR_0_DATA_REG_ADDR_VALID_OUT_MASK)
/*! @} */

/*! @name MRR_1_DATA_REG_ADDR - Mode Register Read 1 Data */
/*! @{ */
#define Perf_Registers_MRR_1_DATA_REG_ADDR_MRR_VL_MASK (0xFFFFFFFFU)
#define Perf_Registers_MRR_1_DATA_REG_ADDR_MRR_VL_SHIFT (0U)
#define Perf_Registers_MRR_1_DATA_REG_ADDR_MRR_VL_WIDTH (32U)
#define Perf_Registers_MRR_1_DATA_REG_ADDR_MRR_VL(x) (((uint32_t)(((uint32_t)(x)) << Perf_Registers_MRR_1_DATA_REG_ADDR_MRR_VL_SHIFT)) & Perf_Registers_MRR_1_DATA_REG_ADDR_MRR_VL_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group Perf_Registers_Register_Masks */


/*!
 * @}
 */ /* end of group Perf_Registers_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- QuadSPI Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup QuadSPI_Peripheral_Access_Layer QuadSPI Peripheral Access Layer
 * @{
 */

/** QuadSPI - Size of Registers Arrays */
#define QuadSPI_RBDR_COUNT                        64u
#define QuadSPI_LUT_COUNT                         80u

/** QuadSPI - Register Layout Typedef */
typedef struct {
  __IO uint32_t MCR;                               /**< Module Configuration Register, offset: 0x0 */
  uint8_t RESERVED_0[4];
  __IO uint32_t IPCR;                              /**< IP Configuration Register, offset: 0x8 */
  __IO uint32_t FLSHCR;                            /**< Flash Memory Configuration Register, offset: 0xC */
  __IO uint32_t BUF0CR;                            /**< Buffer 0 Configuration Register, offset: 0x10 */
  __IO uint32_t BUF1CR;                            /**< Buffer 1 Configuration Register, offset: 0x14 */
  __IO uint32_t BUF2CR;                            /**< Buffer 2 Configuration Register, offset: 0x18 */
  __IO uint32_t BUF3CR;                            /**< Buffer 3 Configuration Register, offset: 0x1C */
  __IO uint32_t BFGENCR;                           /**< Buffer Generic Configuration Register, offset: 0x20 */
  uint8_t RESERVED_1[12];
  __IO uint32_t BUF0IND;                           /**< Buffer 0 Top Index Register, offset: 0x30 */
  __IO uint32_t BUF1IND;                           /**< Buffer 1 Top Index Register, offset: 0x34 */
  __IO uint32_t BUF2IND;                           /**< Buffer 2 Top Index Register, offset: 0x38 */
  uint8_t RESERVED_2[20];
  __IO uint32_t AWRCR;                             /**< AHB Write Configuration Register, offset: 0x50 */
  uint8_t RESERVED_3[12];
  __IO uint32_t DLLCRA;                            /**< DLL Flash Memory A Configuration Register, offset: 0x60 */
  __IO uint32_t DLLCRB;                            /**< DLL Flash Memory B Configuration Register, offset: 0x64 */
  uint8_t RESERVED_4[4];
  __IO uint32_t PARITYCR;                          /**< Parity Configuration Register, offset: 0x6C */
  uint8_t RESERVED_5[144];
  __IO uint32_t SFAR;                              /**< Serial Flash Memory Address Register, offset: 0x100 */
  __IO uint32_t SFACR;                             /**< Serial Flash Memory Address Configuration Register, offset: 0x104 */
  __IO uint32_t SMPR;                              /**< Sampling Register, offset: 0x108 */
  __I  uint32_t RBSR;                              /**< RX Buffer Status Register, offset: 0x10C */
  __IO uint32_t RBCT;                              /**< RX Buffer Control Register, offset: 0x110 */
  uint8_t RESERVED_6[12];
  __I  uint32_t AWRSR;                             /**< AHB Write Status Register, offset: 0x120 */
  uint8_t RESERVED_7[8];
  __I  uint32_t DLLSR;                             /**< DLL Status Register, offset: 0x12C */
  __IO uint32_t DLCR;                              /**< Data Learning Configuration Register, offset: 0x130 */
  __I  uint32_t DLSR_FA;                           /**< Data Learning Status Flash Memory A Register, offset: 0x134 */
  __I  uint32_t DLSR_FB;                           /**< Data Learning Status Flash Memory B Register, offset: 0x138 */
  uint8_t RESERVED_8[20];
  __I  uint32_t TBSR;                              /**< TX Buffer Status Register, offset: 0x150 */
  __IO uint32_t TBDR;                              /**< TX Buffer Data Register, offset: 0x154 */
  __IO uint32_t TBCT;                              /**< TX Buffer Control Register, offset: 0x158 */
  __I  uint32_t SR;                                /**< Status Register, offset: 0x15C */
  __IO uint32_t FR;                                /**< Flag Register, offset: 0x160 */
  __IO uint32_t RSER;                              /**< Interrupt and DMA Request Select and Enable Register, offset: 0x164 */
  uint8_t RESERVED_9[4];
  __IO uint32_t SPTRCLR;                           /**< Sequence Pointer Clear Register, offset: 0x16C */
  uint8_t RESERVED_10[16];
  __IO uint32_t SFA1AD;                            /**< Serial Flash Memory A1 Top Address Register, offset: 0x180 */
  __IO uint32_t SFA2AD;                            /**< Serial Flash Memory A2 Top Address Register, offset: 0x184 */
  __IO uint32_t SFB1AD;                            /**< Serial Flash Memory B1 Top Address Register, offset: 0x188 */
  __IO uint32_t SFB2AD;                            /**< Serial Flash Memory B2 Top Address Register, offset: 0x18C */
  __IO uint32_t DLPR;                              /**< Data Learn Pattern Register, offset: 0x190 */
  uint8_t RESERVED_11[108];
  __I  uint32_t RBDR[QuadSPI_RBDR_COUNT];          /**< RX Buffer Data Register, array offset: 0x200, array step: 0x4 */
  __IO uint32_t LUTKEY;                            /**< LUT Key Register, offset: 0x300 */
  __IO uint32_t LCKCR;                             /**< LUT Lock Configuration Register, offset: 0x304 */
  uint8_t RESERVED_12[8];
  __IO uint32_t LUT[QuadSPI_LUT_COUNT];            /**< LUT Register, array offset: 0x310, array step: 0x4 */
} QuadSPI_Type, *QuadSPI_MemMapPtr;

/** Number of instances of the QuadSPI module. */
#define QuadSPI_INSTANCE_COUNT                   (1u)

/* QuadSPI - Peripheral instance base addresses */
/** Peripheral QUADSPI base address */
#define QUADSPI_BASE                             (0x40134000u)
/** Peripheral QUADSPI base pointer */
#define QUADSPI                                  ((QuadSPI_Type *)QUADSPI_BASE)
/** Array initializer of QuadSPI peripheral base addresses */
#define QuadSPI_BASE_ADDRS                       { QUADSPI_BASE }
/** Array initializer of QuadSPI peripheral base pointers */
#define QuadSPI_BASE_PTRS                        { QUADSPI }

/* ----------------------------------------------------------------------------
   -- QuadSPI Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup QuadSPI_Register_Masks QuadSPI Register Masks
 * @{
 */

/*! @name MCR - Module Configuration Register */
/*! @{ */
#define QuadSPI_MCR_SWRSTSD_MASK                 (0x1U)
#define QuadSPI_MCR_SWRSTSD_SHIFT                (0U)
#define QuadSPI_MCR_SWRSTSD_WIDTH                (1U)
#define QuadSPI_MCR_SWRSTSD(x)                   (((uint32_t)(((uint32_t)(x)) << QuadSPI_MCR_SWRSTSD_SHIFT)) & QuadSPI_MCR_SWRSTSD_MASK)
#define QuadSPI_MCR_SWRSTHD_MASK                 (0x2U)
#define QuadSPI_MCR_SWRSTHD_SHIFT                (1U)
#define QuadSPI_MCR_SWRSTHD_WIDTH                (1U)
#define QuadSPI_MCR_SWRSTHD(x)                   (((uint32_t)(((uint32_t)(x)) << QuadSPI_MCR_SWRSTHD_SHIFT)) & QuadSPI_MCR_SWRSTHD_MASK)
#define QuadSPI_MCR_END_CFG_MASK                 (0xCU)
#define QuadSPI_MCR_END_CFG_SHIFT                (2U)
#define QuadSPI_MCR_END_CFG_WIDTH                (2U)
#define QuadSPI_MCR_END_CFG(x)                   (((uint32_t)(((uint32_t)(x)) << QuadSPI_MCR_END_CFG_SHIFT)) & QuadSPI_MCR_END_CFG_MASK)
#define QuadSPI_MCR_DQS_OUT_EN_MASK              (0x10U)
#define QuadSPI_MCR_DQS_OUT_EN_SHIFT             (4U)
#define QuadSPI_MCR_DQS_OUT_EN_WIDTH             (1U)
#define QuadSPI_MCR_DQS_OUT_EN(x)                (((uint32_t)(((uint32_t)(x)) << QuadSPI_MCR_DQS_OUT_EN_SHIFT)) & QuadSPI_MCR_DQS_OUT_EN_MASK)
#define QuadSPI_MCR_DQS_LAT_EN_MASK              (0x20U)
#define QuadSPI_MCR_DQS_LAT_EN_SHIFT             (5U)
#define QuadSPI_MCR_DQS_LAT_EN_WIDTH             (1U)
#define QuadSPI_MCR_DQS_LAT_EN(x)                (((uint32_t)(((uint32_t)(x)) << QuadSPI_MCR_DQS_LAT_EN_SHIFT)) & QuadSPI_MCR_DQS_LAT_EN_MASK)
#define QuadSPI_MCR_DQS_EN_MASK                  (0x40U)
#define QuadSPI_MCR_DQS_EN_SHIFT                 (6U)
#define QuadSPI_MCR_DQS_EN_WIDTH                 (1U)
#define QuadSPI_MCR_DQS_EN(x)                    (((uint32_t)(((uint32_t)(x)) << QuadSPI_MCR_DQS_EN_SHIFT)) & QuadSPI_MCR_DQS_EN_MASK)
#define QuadSPI_MCR_DDR_EN_MASK                  (0x80U)
#define QuadSPI_MCR_DDR_EN_SHIFT                 (7U)
#define QuadSPI_MCR_DDR_EN_WIDTH                 (1U)
#define QuadSPI_MCR_DDR_EN(x)                    (((uint32_t)(((uint32_t)(x)) << QuadSPI_MCR_DDR_EN_SHIFT)) & QuadSPI_MCR_DDR_EN_MASK)
#define QuadSPI_MCR_VAR_LAT_EN_MASK              (0x100U)
#define QuadSPI_MCR_VAR_LAT_EN_SHIFT             (8U)
#define QuadSPI_MCR_VAR_LAT_EN_WIDTH             (1U)
#define QuadSPI_MCR_VAR_LAT_EN(x)                (((uint32_t)(((uint32_t)(x)) << QuadSPI_MCR_VAR_LAT_EN_SHIFT)) & QuadSPI_MCR_VAR_LAT_EN_MASK)
#define QuadSPI_MCR_CLR_RXF_MASK                 (0x400U)
#define QuadSPI_MCR_CLR_RXF_SHIFT                (10U)
#define QuadSPI_MCR_CLR_RXF_WIDTH                (1U)
#define QuadSPI_MCR_CLR_RXF(x)                   (((uint32_t)(((uint32_t)(x)) << QuadSPI_MCR_CLR_RXF_SHIFT)) & QuadSPI_MCR_CLR_RXF_MASK)
#define QuadSPI_MCR_CLR_TXF_MASK                 (0x800U)
#define QuadSPI_MCR_CLR_TXF_SHIFT                (11U)
#define QuadSPI_MCR_CLR_TXF_WIDTH                (1U)
#define QuadSPI_MCR_CLR_TXF(x)                   (((uint32_t)(((uint32_t)(x)) << QuadSPI_MCR_CLR_TXF_SHIFT)) & QuadSPI_MCR_CLR_TXF_MASK)
#define QuadSPI_MCR_DLPEN_MASK                   (0x1000U)
#define QuadSPI_MCR_DLPEN_SHIFT                  (12U)
#define QuadSPI_MCR_DLPEN_WIDTH                  (1U)
#define QuadSPI_MCR_DLPEN(x)                     (((uint32_t)(((uint32_t)(x)) << QuadSPI_MCR_DLPEN_SHIFT)) & QuadSPI_MCR_DLPEN_MASK)
#define QuadSPI_MCR_MDIS_MASK                    (0x4000U)
#define QuadSPI_MCR_MDIS_SHIFT                   (14U)
#define QuadSPI_MCR_MDIS_WIDTH                   (1U)
#define QuadSPI_MCR_MDIS(x)                      (((uint32_t)(((uint32_t)(x)) << QuadSPI_MCR_MDIS_SHIFT)) & QuadSPI_MCR_MDIS_MASK)
#define QuadSPI_MCR_ISD2FA_MASK                  (0x10000U)
#define QuadSPI_MCR_ISD2FA_SHIFT                 (16U)
#define QuadSPI_MCR_ISD2FA_WIDTH                 (1U)
#define QuadSPI_MCR_ISD2FA(x)                    (((uint32_t)(((uint32_t)(x)) << QuadSPI_MCR_ISD2FA_SHIFT)) & QuadSPI_MCR_ISD2FA_MASK)
#define QuadSPI_MCR_ISD3FA_MASK                  (0x20000U)
#define QuadSPI_MCR_ISD3FA_SHIFT                 (17U)
#define QuadSPI_MCR_ISD3FA_WIDTH                 (1U)
#define QuadSPI_MCR_ISD3FA(x)                    (((uint32_t)(((uint32_t)(x)) << QuadSPI_MCR_ISD3FA_SHIFT)) & QuadSPI_MCR_ISD3FA_MASK)
#define QuadSPI_MCR_ISD2FB_MASK                  (0x40000U)
#define QuadSPI_MCR_ISD2FB_SHIFT                 (18U)
#define QuadSPI_MCR_ISD2FB_WIDTH                 (1U)
#define QuadSPI_MCR_ISD2FB(x)                    (((uint32_t)(((uint32_t)(x)) << QuadSPI_MCR_ISD2FB_SHIFT)) & QuadSPI_MCR_ISD2FB_MASK)
#define QuadSPI_MCR_ISD3FB_MASK                  (0x80000U)
#define QuadSPI_MCR_ISD3FB_SHIFT                 (19U)
#define QuadSPI_MCR_ISD3FB_WIDTH                 (1U)
#define QuadSPI_MCR_ISD3FB(x)                    (((uint32_t)(((uint32_t)(x)) << QuadSPI_MCR_ISD3FB_SHIFT)) & QuadSPI_MCR_ISD3FB_MASK)
#define QuadSPI_MCR_DIAG_MASK                    (0x800000U)
#define QuadSPI_MCR_DIAG_SHIFT                   (23U)
#define QuadSPI_MCR_DIAG_WIDTH                   (1U)
#define QuadSPI_MCR_DIAG(x)                      (((uint32_t)(((uint32_t)(x)) << QuadSPI_MCR_DIAG_SHIFT)) & QuadSPI_MCR_DIAG_MASK)
#define QuadSPI_MCR_DQS_FA_SEL_MASK              (0x3000000U)
#define QuadSPI_MCR_DQS_FA_SEL_SHIFT             (24U)
#define QuadSPI_MCR_DQS_FA_SEL_WIDTH             (2U)
#define QuadSPI_MCR_DQS_FA_SEL(x)                (((uint32_t)(((uint32_t)(x)) << QuadSPI_MCR_DQS_FA_SEL_SHIFT)) & QuadSPI_MCR_DQS_FA_SEL_MASK)
#define QuadSPI_MCR_CKN_FA_EN_MASK               (0x4000000U)
#define QuadSPI_MCR_CKN_FA_EN_SHIFT              (26U)
#define QuadSPI_MCR_CKN_FA_EN_WIDTH              (1U)
#define QuadSPI_MCR_CKN_FA_EN(x)                 (((uint32_t)(((uint32_t)(x)) << QuadSPI_MCR_CKN_FA_EN_SHIFT)) & QuadSPI_MCR_CKN_FA_EN_MASK)
#define QuadSPI_MCR_CK2_DCARS_FA_MASK            (0x8000000U)
#define QuadSPI_MCR_CK2_DCARS_FA_SHIFT           (27U)
#define QuadSPI_MCR_CK2_DCARS_FA_WIDTH           (1U)
#define QuadSPI_MCR_CK2_DCARS_FA(x)              (((uint32_t)(((uint32_t)(x)) << QuadSPI_MCR_CK2_DCARS_FA_SHIFT)) & QuadSPI_MCR_CK2_DCARS_FA_MASK)
#define QuadSPI_MCR_DQS_FB_SEL_MASK              (0x30000000U)
#define QuadSPI_MCR_DQS_FB_SEL_SHIFT             (28U)
#define QuadSPI_MCR_DQS_FB_SEL_WIDTH             (2U)
#define QuadSPI_MCR_DQS_FB_SEL(x)                (((uint32_t)(((uint32_t)(x)) << QuadSPI_MCR_DQS_FB_SEL_SHIFT)) & QuadSPI_MCR_DQS_FB_SEL_MASK)
#define QuadSPI_MCR_CKN_FB_EN_MASK               (0x40000000U)
#define QuadSPI_MCR_CKN_FB_EN_SHIFT              (30U)
#define QuadSPI_MCR_CKN_FB_EN_WIDTH              (1U)
#define QuadSPI_MCR_CKN_FB_EN(x)                 (((uint32_t)(((uint32_t)(x)) << QuadSPI_MCR_CKN_FB_EN_SHIFT)) & QuadSPI_MCR_CKN_FB_EN_MASK)
#define QuadSPI_MCR_CK2_DCARS_FB_MASK            (0x80000000U)
#define QuadSPI_MCR_CK2_DCARS_FB_SHIFT           (31U)
#define QuadSPI_MCR_CK2_DCARS_FB_WIDTH           (1U)
#define QuadSPI_MCR_CK2_DCARS_FB(x)              (((uint32_t)(((uint32_t)(x)) << QuadSPI_MCR_CK2_DCARS_FB_SHIFT)) & QuadSPI_MCR_CK2_DCARS_FB_MASK)
/*! @} */

/*! @name IPCR - IP Configuration Register */
/*! @{ */
#define QuadSPI_IPCR_IDATSZ_MASK                 (0xFFFFU)
#define QuadSPI_IPCR_IDATSZ_SHIFT                (0U)
#define QuadSPI_IPCR_IDATSZ_WIDTH                (16U)
#define QuadSPI_IPCR_IDATSZ(x)                   (((uint32_t)(((uint32_t)(x)) << QuadSPI_IPCR_IDATSZ_SHIFT)) & QuadSPI_IPCR_IDATSZ_MASK)
#define QuadSPI_IPCR_PAR_EN_MASK                 (0x10000U)
#define QuadSPI_IPCR_PAR_EN_SHIFT                (16U)
#define QuadSPI_IPCR_PAR_EN_WIDTH                (1U)
#define QuadSPI_IPCR_PAR_EN(x)                   (((uint32_t)(((uint32_t)(x)) << QuadSPI_IPCR_PAR_EN_SHIFT)) & QuadSPI_IPCR_PAR_EN_MASK)
#define QuadSPI_IPCR_SEQID_MASK                  (0xF000000U)
#define QuadSPI_IPCR_SEQID_SHIFT                 (24U)
#define QuadSPI_IPCR_SEQID_WIDTH                 (4U)
#define QuadSPI_IPCR_SEQID(x)                    (((uint32_t)(((uint32_t)(x)) << QuadSPI_IPCR_SEQID_SHIFT)) & QuadSPI_IPCR_SEQID_MASK)
/*! @} */

/*! @name FLSHCR - Flash Memory Configuration Register */
/*! @{ */
#define QuadSPI_FLSHCR_TCSS_MASK                 (0xFU)
#define QuadSPI_FLSHCR_TCSS_SHIFT                (0U)
#define QuadSPI_FLSHCR_TCSS_WIDTH                (4U)
#define QuadSPI_FLSHCR_TCSS(x)                   (((uint32_t)(((uint32_t)(x)) << QuadSPI_FLSHCR_TCSS_SHIFT)) & QuadSPI_FLSHCR_TCSS_MASK)
#define QuadSPI_FLSHCR_TCSH_MASK                 (0xF00U)
#define QuadSPI_FLSHCR_TCSH_SHIFT                (8U)
#define QuadSPI_FLSHCR_TCSH_WIDTH                (4U)
#define QuadSPI_FLSHCR_TCSH(x)                   (((uint32_t)(((uint32_t)(x)) << QuadSPI_FLSHCR_TCSH_SHIFT)) & QuadSPI_FLSHCR_TCSH_MASK)
#define QuadSPI_FLSHCR_TDH_MASK                  (0x30000U)
#define QuadSPI_FLSHCR_TDH_SHIFT                 (16U)
#define QuadSPI_FLSHCR_TDH_WIDTH                 (2U)
#define QuadSPI_FLSHCR_TDH(x)                    (((uint32_t)(((uint32_t)(x)) << QuadSPI_FLSHCR_TDH_SHIFT)) & QuadSPI_FLSHCR_TDH_MASK)
/*! @} */

/*! @name BUF0CR - Buffer 0 Configuration Register */
/*! @{ */
#define QuadSPI_BUF0CR_MSTRID_MASK               (0x3FU)
#define QuadSPI_BUF0CR_MSTRID_SHIFT              (0U)
#define QuadSPI_BUF0CR_MSTRID_WIDTH              (6U)
#define QuadSPI_BUF0CR_MSTRID(x)                 (((uint32_t)(((uint32_t)(x)) << QuadSPI_BUF0CR_MSTRID_SHIFT)) & QuadSPI_BUF0CR_MSTRID_MASK)
#define QuadSPI_BUF0CR_ADATSZ_MASK               (0xFF00U)
#define QuadSPI_BUF0CR_ADATSZ_SHIFT              (8U)
#define QuadSPI_BUF0CR_ADATSZ_WIDTH              (8U)
#define QuadSPI_BUF0CR_ADATSZ(x)                 (((uint32_t)(((uint32_t)(x)) << QuadSPI_BUF0CR_ADATSZ_SHIFT)) & QuadSPI_BUF0CR_ADATSZ_MASK)
/*! @} */

/*! @name BUF1CR - Buffer 1 Configuration Register */
/*! @{ */
#define QuadSPI_BUF1CR_MSTRID_MASK               (0x3FU)
#define QuadSPI_BUF1CR_MSTRID_SHIFT              (0U)
#define QuadSPI_BUF1CR_MSTRID_WIDTH              (6U)
#define QuadSPI_BUF1CR_MSTRID(x)                 (((uint32_t)(((uint32_t)(x)) << QuadSPI_BUF1CR_MSTRID_SHIFT)) & QuadSPI_BUF1CR_MSTRID_MASK)
#define QuadSPI_BUF1CR_ADATSZ_MASK               (0xFF00U)
#define QuadSPI_BUF1CR_ADATSZ_SHIFT              (8U)
#define QuadSPI_BUF1CR_ADATSZ_WIDTH              (8U)
#define QuadSPI_BUF1CR_ADATSZ(x)                 (((uint32_t)(((uint32_t)(x)) << QuadSPI_BUF1CR_ADATSZ_SHIFT)) & QuadSPI_BUF1CR_ADATSZ_MASK)
/*! @} */

/*! @name BUF2CR - Buffer 2 Configuration Register */
/*! @{ */
#define QuadSPI_BUF2CR_MSTRID_MASK               (0x3FU)
#define QuadSPI_BUF2CR_MSTRID_SHIFT              (0U)
#define QuadSPI_BUF2CR_MSTRID_WIDTH              (6U)
#define QuadSPI_BUF2CR_MSTRID(x)                 (((uint32_t)(((uint32_t)(x)) << QuadSPI_BUF2CR_MSTRID_SHIFT)) & QuadSPI_BUF2CR_MSTRID_MASK)
#define QuadSPI_BUF2CR_ADATSZ_MASK               (0xFF00U)
#define QuadSPI_BUF2CR_ADATSZ_SHIFT              (8U)
#define QuadSPI_BUF2CR_ADATSZ_WIDTH              (8U)
#define QuadSPI_BUF2CR_ADATSZ(x)                 (((uint32_t)(((uint32_t)(x)) << QuadSPI_BUF2CR_ADATSZ_SHIFT)) & QuadSPI_BUF2CR_ADATSZ_MASK)
/*! @} */

/*! @name BUF3CR - Buffer 3 Configuration Register */
/*! @{ */
#define QuadSPI_BUF3CR_MSTRID_MASK               (0x3FU)
#define QuadSPI_BUF3CR_MSTRID_SHIFT              (0U)
#define QuadSPI_BUF3CR_MSTRID_WIDTH              (6U)
#define QuadSPI_BUF3CR_MSTRID(x)                 (((uint32_t)(((uint32_t)(x)) << QuadSPI_BUF3CR_MSTRID_SHIFT)) & QuadSPI_BUF3CR_MSTRID_MASK)
#define QuadSPI_BUF3CR_ADATSZ_MASK               (0xFF00U)
#define QuadSPI_BUF3CR_ADATSZ_SHIFT              (8U)
#define QuadSPI_BUF3CR_ADATSZ_WIDTH              (8U)
#define QuadSPI_BUF3CR_ADATSZ(x)                 (((uint32_t)(((uint32_t)(x)) << QuadSPI_BUF3CR_ADATSZ_SHIFT)) & QuadSPI_BUF3CR_ADATSZ_MASK)
#define QuadSPI_BUF3CR_ALLMST_MASK               (0x80000000U)
#define QuadSPI_BUF3CR_ALLMST_SHIFT              (31U)
#define QuadSPI_BUF3CR_ALLMST_WIDTH              (1U)
#define QuadSPI_BUF3CR_ALLMST(x)                 (((uint32_t)(((uint32_t)(x)) << QuadSPI_BUF3CR_ALLMST_SHIFT)) & QuadSPI_BUF3CR_ALLMST_MASK)
/*! @} */

/*! @name BFGENCR - Buffer Generic Configuration Register */
/*! @{ */
#define QuadSPI_BFGENCR_SEQID_MASK               (0xF000U)
#define QuadSPI_BFGENCR_SEQID_SHIFT              (12U)
#define QuadSPI_BFGENCR_SEQID_WIDTH              (4U)
#define QuadSPI_BFGENCR_SEQID(x)                 (((uint32_t)(((uint32_t)(x)) << QuadSPI_BFGENCR_SEQID_SHIFT)) & QuadSPI_BFGENCR_SEQID_MASK)
#define QuadSPI_BFGENCR_PAR_EN_MASK              (0x10000U)
#define QuadSPI_BFGENCR_PAR_EN_SHIFT             (16U)
#define QuadSPI_BFGENCR_PAR_EN_WIDTH             (1U)
#define QuadSPI_BFGENCR_PAR_EN(x)                (((uint32_t)(((uint32_t)(x)) << QuadSPI_BFGENCR_PAR_EN_SHIFT)) & QuadSPI_BFGENCR_PAR_EN_MASK)
/*! @} */

/*! @name BUF0IND - Buffer 0 Top Index Register */
/*! @{ */
#define QuadSPI_BUF0IND_TPINDX0_MASK             (0x7F8U)
#define QuadSPI_BUF0IND_TPINDX0_SHIFT            (3U)
#define QuadSPI_BUF0IND_TPINDX0_WIDTH            (8U)
#define QuadSPI_BUF0IND_TPINDX0(x)               (((uint32_t)(((uint32_t)(x)) << QuadSPI_BUF0IND_TPINDX0_SHIFT)) & QuadSPI_BUF0IND_TPINDX0_MASK)
/*! @} */

/*! @name BUF1IND - Buffer 1 Top Index Register */
/*! @{ */
#define QuadSPI_BUF1IND_TPINDX1_MASK             (0x7F8U)
#define QuadSPI_BUF1IND_TPINDX1_SHIFT            (3U)
#define QuadSPI_BUF1IND_TPINDX1_WIDTH            (8U)
#define QuadSPI_BUF1IND_TPINDX1(x)               (((uint32_t)(((uint32_t)(x)) << QuadSPI_BUF1IND_TPINDX1_SHIFT)) & QuadSPI_BUF1IND_TPINDX1_MASK)
/*! @} */

/*! @name BUF2IND - Buffer 2 Top Index Register */
/*! @{ */
#define QuadSPI_BUF2IND_TPINDX2_MASK             (0x7F8U)
#define QuadSPI_BUF2IND_TPINDX2_SHIFT            (3U)
#define QuadSPI_BUF2IND_TPINDX2_WIDTH            (8U)
#define QuadSPI_BUF2IND_TPINDX2(x)               (((uint32_t)(((uint32_t)(x)) << QuadSPI_BUF2IND_TPINDX2_SHIFT)) & QuadSPI_BUF2IND_TPINDX2_MASK)
/*! @} */

/*! @name AWRCR - AHB Write Configuration Register */
/*! @{ */
#define QuadSPI_AWRCR_AWTRGLVL_MASK              (0xFU)
#define QuadSPI_AWRCR_AWTRGLVL_SHIFT             (0U)
#define QuadSPI_AWRCR_AWTRGLVL_WIDTH             (4U)
#define QuadSPI_AWRCR_AWTRGLVL(x)                (((uint32_t)(((uint32_t)(x)) << QuadSPI_AWRCR_AWTRGLVL_SHIFT)) & QuadSPI_AWRCR_AWTRGLVL_MASK)
#define QuadSPI_AWRCR_PPW_RD_DIS_MASK            (0x4000U)
#define QuadSPI_AWRCR_PPW_RD_DIS_SHIFT           (14U)
#define QuadSPI_AWRCR_PPW_RD_DIS_WIDTH           (1U)
#define QuadSPI_AWRCR_PPW_RD_DIS(x)              (((uint32_t)(((uint32_t)(x)) << QuadSPI_AWRCR_PPW_RD_DIS_SHIFT)) & QuadSPI_AWRCR_PPW_RD_DIS_MASK)
#define QuadSPI_AWRCR_PPW_WR_DIS_MASK            (0x8000U)
#define QuadSPI_AWRCR_PPW_WR_DIS_SHIFT           (15U)
#define QuadSPI_AWRCR_PPW_WR_DIS_WIDTH           (1U)
#define QuadSPI_AWRCR_PPW_WR_DIS(x)              (((uint32_t)(((uint32_t)(x)) << QuadSPI_AWRCR_PPW_WR_DIS_SHIFT)) & QuadSPI_AWRCR_PPW_WR_DIS_MASK)
/*! @} */

/*! @name DLLCRA - DLL Flash Memory A Configuration Register */
/*! @{ */
#define QuadSPI_DLLCRA_SLV_UPD_MASK              (0x1U)
#define QuadSPI_DLLCRA_SLV_UPD_SHIFT             (0U)
#define QuadSPI_DLLCRA_SLV_UPD_WIDTH             (1U)
#define QuadSPI_DLLCRA_SLV_UPD(x)                (((uint32_t)(((uint32_t)(x)) << QuadSPI_DLLCRA_SLV_UPD_SHIFT)) & QuadSPI_DLLCRA_SLV_UPD_MASK)
#define QuadSPI_DLLCRA_SLV_DLL_BYPASS_MASK       (0x2U)
#define QuadSPI_DLLCRA_SLV_DLL_BYPASS_SHIFT      (1U)
#define QuadSPI_DLLCRA_SLV_DLL_BYPASS_WIDTH      (1U)
#define QuadSPI_DLLCRA_SLV_DLL_BYPASS(x)         (((uint32_t)(((uint32_t)(x)) << QuadSPI_DLLCRA_SLV_DLL_BYPASS_SHIFT)) & QuadSPI_DLLCRA_SLV_DLL_BYPASS_MASK)
#define QuadSPI_DLLCRA_SLV_EN_MASK               (0x4U)
#define QuadSPI_DLLCRA_SLV_EN_SHIFT              (2U)
#define QuadSPI_DLLCRA_SLV_EN_WIDTH              (1U)
#define QuadSPI_DLLCRA_SLV_EN(x)                 (((uint32_t)(((uint32_t)(x)) << QuadSPI_DLLCRA_SLV_EN_SHIFT)) & QuadSPI_DLLCRA_SLV_EN_MASK)
#define QuadSPI_DLLCRA_SLAVE_AUTO_UPDT_MASK      (0x8U)
#define QuadSPI_DLLCRA_SLAVE_AUTO_UPDT_SHIFT     (3U)
#define QuadSPI_DLLCRA_SLAVE_AUTO_UPDT_WIDTH     (1U)
#define QuadSPI_DLLCRA_SLAVE_AUTO_UPDT(x)        (((uint32_t)(((uint32_t)(x)) << QuadSPI_DLLCRA_SLAVE_AUTO_UPDT_SHIFT)) & QuadSPI_DLLCRA_SLAVE_AUTO_UPDT_MASK)
#define QuadSPI_DLLCRA_SLV_DLY_FINE_MASK         (0xE0U)
#define QuadSPI_DLLCRA_SLV_DLY_FINE_SHIFT        (5U)
#define QuadSPI_DLLCRA_SLV_DLY_FINE_WIDTH        (3U)
#define QuadSPI_DLLCRA_SLV_DLY_FINE(x)           (((uint32_t)(((uint32_t)(x)) << QuadSPI_DLLCRA_SLV_DLY_FINE_SHIFT)) & QuadSPI_DLLCRA_SLV_DLY_FINE_MASK)
#define QuadSPI_DLLCRA_SLV_DLY_COARSE_MASK       (0xF00U)
#define QuadSPI_DLLCRA_SLV_DLY_COARSE_SHIFT      (8U)
#define QuadSPI_DLLCRA_SLV_DLY_COARSE_WIDTH      (4U)
#define QuadSPI_DLLCRA_SLV_DLY_COARSE(x)         (((uint32_t)(((uint32_t)(x)) << QuadSPI_DLLCRA_SLV_DLY_COARSE_SHIFT)) & QuadSPI_DLLCRA_SLV_DLY_COARSE_MASK)
#define QuadSPI_DLLCRA_SLV_DLY_OFFSET_MASK       (0x7000U)
#define QuadSPI_DLLCRA_SLV_DLY_OFFSET_SHIFT      (12U)
#define QuadSPI_DLLCRA_SLV_DLY_OFFSET_WIDTH      (3U)
#define QuadSPI_DLLCRA_SLV_DLY_OFFSET(x)         (((uint32_t)(((uint32_t)(x)) << QuadSPI_DLLCRA_SLV_DLY_OFFSET_SHIFT)) & QuadSPI_DLLCRA_SLV_DLY_OFFSET_MASK)
#define QuadSPI_DLLCRA_SLV_FINE_OFFSET_MASK      (0xF0000U)
#define QuadSPI_DLLCRA_SLV_FINE_OFFSET_SHIFT     (16U)
#define QuadSPI_DLLCRA_SLV_FINE_OFFSET_WIDTH     (4U)
#define QuadSPI_DLLCRA_SLV_FINE_OFFSET(x)        (((uint32_t)(((uint32_t)(x)) << QuadSPI_DLLCRA_SLV_FINE_OFFSET_SHIFT)) & QuadSPI_DLLCRA_SLV_FINE_OFFSET_MASK)
#define QuadSPI_DLLCRA_DLLRES_MASK               (0xF00000U)
#define QuadSPI_DLLCRA_DLLRES_SHIFT              (20U)
#define QuadSPI_DLLCRA_DLLRES_WIDTH              (4U)
#define QuadSPI_DLLCRA_DLLRES(x)                 (((uint32_t)(((uint32_t)(x)) << QuadSPI_DLLCRA_DLLRES_SHIFT)) & QuadSPI_DLLCRA_DLLRES_MASK)
#define QuadSPI_DLLCRA_DLL_REFCNTR_MASK          (0xF000000U)
#define QuadSPI_DLLCRA_DLL_REFCNTR_SHIFT         (24U)
#define QuadSPI_DLLCRA_DLL_REFCNTR_WIDTH         (4U)
#define QuadSPI_DLLCRA_DLL_REFCNTR(x)            (((uint32_t)(((uint32_t)(x)) << QuadSPI_DLLCRA_DLL_REFCNTR_SHIFT)) & QuadSPI_DLLCRA_DLL_REFCNTR_MASK)
#define QuadSPI_DLLCRA_FREQEN_MASK               (0x40000000U)
#define QuadSPI_DLLCRA_FREQEN_SHIFT              (30U)
#define QuadSPI_DLLCRA_FREQEN_WIDTH              (1U)
#define QuadSPI_DLLCRA_FREQEN(x)                 (((uint32_t)(((uint32_t)(x)) << QuadSPI_DLLCRA_FREQEN_SHIFT)) & QuadSPI_DLLCRA_FREQEN_MASK)
#define QuadSPI_DLLCRA_DLLEN_MASK                (0x80000000U)
#define QuadSPI_DLLCRA_DLLEN_SHIFT               (31U)
#define QuadSPI_DLLCRA_DLLEN_WIDTH               (1U)
#define QuadSPI_DLLCRA_DLLEN(x)                  (((uint32_t)(((uint32_t)(x)) << QuadSPI_DLLCRA_DLLEN_SHIFT)) & QuadSPI_DLLCRA_DLLEN_MASK)
/*! @} */

/*! @name DLLCRB - DLL Flash Memory B Configuration Register */
/*! @{ */
#define QuadSPI_DLLCRB_SLV_UPD_MASK              (0x1U)
#define QuadSPI_DLLCRB_SLV_UPD_SHIFT             (0U)
#define QuadSPI_DLLCRB_SLV_UPD_WIDTH             (1U)
#define QuadSPI_DLLCRB_SLV_UPD(x)                (((uint32_t)(((uint32_t)(x)) << QuadSPI_DLLCRB_SLV_UPD_SHIFT)) & QuadSPI_DLLCRB_SLV_UPD_MASK)
#define QuadSPI_DLLCRB_SLV_DLL_BYPASS_MASK       (0x2U)
#define QuadSPI_DLLCRB_SLV_DLL_BYPASS_SHIFT      (1U)
#define QuadSPI_DLLCRB_SLV_DLL_BYPASS_WIDTH      (1U)
#define QuadSPI_DLLCRB_SLV_DLL_BYPASS(x)         (((uint32_t)(((uint32_t)(x)) << QuadSPI_DLLCRB_SLV_DLL_BYPASS_SHIFT)) & QuadSPI_DLLCRB_SLV_DLL_BYPASS_MASK)
#define QuadSPI_DLLCRB_SLV_EN_MASK               (0x4U)
#define QuadSPI_DLLCRB_SLV_EN_SHIFT              (2U)
#define QuadSPI_DLLCRB_SLV_EN_WIDTH              (1U)
#define QuadSPI_DLLCRB_SLV_EN(x)                 (((uint32_t)(((uint32_t)(x)) << QuadSPI_DLLCRB_SLV_EN_SHIFT)) & QuadSPI_DLLCRB_SLV_EN_MASK)
#define QuadSPI_DLLCRB_SLAVE_AUTO_UPDT_MASK      (0x8U)
#define QuadSPI_DLLCRB_SLAVE_AUTO_UPDT_SHIFT     (3U)
#define QuadSPI_DLLCRB_SLAVE_AUTO_UPDT_WIDTH     (1U)
#define QuadSPI_DLLCRB_SLAVE_AUTO_UPDT(x)        (((uint32_t)(((uint32_t)(x)) << QuadSPI_DLLCRB_SLAVE_AUTO_UPDT_SHIFT)) & QuadSPI_DLLCRB_SLAVE_AUTO_UPDT_MASK)
#define QuadSPI_DLLCRB_SLV_DLY_FINE_MASK         (0xE0U)
#define QuadSPI_DLLCRB_SLV_DLY_FINE_SHIFT        (5U)
#define QuadSPI_DLLCRB_SLV_DLY_FINE_WIDTH        (3U)
#define QuadSPI_DLLCRB_SLV_DLY_FINE(x)           (((uint32_t)(((uint32_t)(x)) << QuadSPI_DLLCRB_SLV_DLY_FINE_SHIFT)) & QuadSPI_DLLCRB_SLV_DLY_FINE_MASK)
#define QuadSPI_DLLCRB_SLV_DLY_COARSE_MASK       (0xF00U)
#define QuadSPI_DLLCRB_SLV_DLY_COARSE_SHIFT      (8U)
#define QuadSPI_DLLCRB_SLV_DLY_COARSE_WIDTH      (4U)
#define QuadSPI_DLLCRB_SLV_DLY_COARSE(x)         (((uint32_t)(((uint32_t)(x)) << QuadSPI_DLLCRB_SLV_DLY_COARSE_SHIFT)) & QuadSPI_DLLCRB_SLV_DLY_COARSE_MASK)
#define QuadSPI_DLLCRB_SLV_DLY_OFFSET_MASK       (0x7000U)
#define QuadSPI_DLLCRB_SLV_DLY_OFFSET_SHIFT      (12U)
#define QuadSPI_DLLCRB_SLV_DLY_OFFSET_WIDTH      (3U)
#define QuadSPI_DLLCRB_SLV_DLY_OFFSET(x)         (((uint32_t)(((uint32_t)(x)) << QuadSPI_DLLCRB_SLV_DLY_OFFSET_SHIFT)) & QuadSPI_DLLCRB_SLV_DLY_OFFSET_MASK)
#define QuadSPI_DLLCRB_SLV_FINE_OFFSET_MASK      (0xF0000U)
#define QuadSPI_DLLCRB_SLV_FINE_OFFSET_SHIFT     (16U)
#define QuadSPI_DLLCRB_SLV_FINE_OFFSET_WIDTH     (4U)
#define QuadSPI_DLLCRB_SLV_FINE_OFFSET(x)        (((uint32_t)(((uint32_t)(x)) << QuadSPI_DLLCRB_SLV_FINE_OFFSET_SHIFT)) & QuadSPI_DLLCRB_SLV_FINE_OFFSET_MASK)
#define QuadSPI_DLLCRB_DLLRES_MASK               (0xF00000U)
#define QuadSPI_DLLCRB_DLLRES_SHIFT              (20U)
#define QuadSPI_DLLCRB_DLLRES_WIDTH              (4U)
#define QuadSPI_DLLCRB_DLLRES(x)                 (((uint32_t)(((uint32_t)(x)) << QuadSPI_DLLCRB_DLLRES_SHIFT)) & QuadSPI_DLLCRB_DLLRES_MASK)
#define QuadSPI_DLLCRB_DLL_REFCNTR_MASK          (0xF000000U)
#define QuadSPI_DLLCRB_DLL_REFCNTR_SHIFT         (24U)
#define QuadSPI_DLLCRB_DLL_REFCNTR_WIDTH         (4U)
#define QuadSPI_DLLCRB_DLL_REFCNTR(x)            (((uint32_t)(((uint32_t)(x)) << QuadSPI_DLLCRB_DLL_REFCNTR_SHIFT)) & QuadSPI_DLLCRB_DLL_REFCNTR_MASK)
#define QuadSPI_DLLCRB_FREQEN_MASK               (0x40000000U)
#define QuadSPI_DLLCRB_FREQEN_SHIFT              (30U)
#define QuadSPI_DLLCRB_FREQEN_WIDTH              (1U)
#define QuadSPI_DLLCRB_FREQEN(x)                 (((uint32_t)(((uint32_t)(x)) << QuadSPI_DLLCRB_FREQEN_SHIFT)) & QuadSPI_DLLCRB_FREQEN_MASK)
#define QuadSPI_DLLCRB_DLLEN_MASK                (0x80000000U)
#define QuadSPI_DLLCRB_DLLEN_SHIFT               (31U)
#define QuadSPI_DLLCRB_DLLEN_WIDTH               (1U)
#define QuadSPI_DLLCRB_DLLEN(x)                  (((uint32_t)(((uint32_t)(x)) << QuadSPI_DLLCRB_DLLEN_SHIFT)) & QuadSPI_DLLCRB_DLLEN_MASK)
/*! @} */

/*! @name PARITYCR - Parity Configuration Register */
/*! @{ */
#define QuadSPI_PARITYCR_CRCBIN_FA_MASK          (0x20U)
#define QuadSPI_PARITYCR_CRCBIN_FA_SHIFT         (5U)
#define QuadSPI_PARITYCR_CRCBIN_FA_WIDTH         (1U)
#define QuadSPI_PARITYCR_CRCBIN_FA(x)            (((uint32_t)(((uint32_t)(x)) << QuadSPI_PARITYCR_CRCBIN_FA_SHIFT)) & QuadSPI_PARITYCR_CRCBIN_FA_MASK)
#define QuadSPI_PARITYCR_CRCBEN_FA_MASK          (0x40U)
#define QuadSPI_PARITYCR_CRCBEN_FA_SHIFT         (6U)
#define QuadSPI_PARITYCR_CRCBEN_FA_WIDTH         (1U)
#define QuadSPI_PARITYCR_CRCBEN_FA(x)            (((uint32_t)(((uint32_t)(x)) << QuadSPI_PARITYCR_CRCBEN_FA_SHIFT)) & QuadSPI_PARITYCR_CRCBEN_FA_MASK)
#define QuadSPI_PARITYCR_CRCEN_FA_MASK           (0x80U)
#define QuadSPI_PARITYCR_CRCEN_FA_SHIFT          (7U)
#define QuadSPI_PARITYCR_CRCEN_FA_WIDTH          (1U)
#define QuadSPI_PARITYCR_CRCEN_FA(x)             (((uint32_t)(((uint32_t)(x)) << QuadSPI_PARITYCR_CRCEN_FA_SHIFT)) & QuadSPI_PARITYCR_CRCEN_FA_MASK)
#define QuadSPI_PARITYCR_BYTE_SIZE_FA_MASK       (0x100U)
#define QuadSPI_PARITYCR_BYTE_SIZE_FA_SHIFT      (8U)
#define QuadSPI_PARITYCR_BYTE_SIZE_FA_WIDTH      (1U)
#define QuadSPI_PARITYCR_BYTE_SIZE_FA(x)         (((uint32_t)(((uint32_t)(x)) << QuadSPI_PARITYCR_BYTE_SIZE_FA_SHIFT)) & QuadSPI_PARITYCR_BYTE_SIZE_FA_MASK)
#define QuadSPI_PARITYCR_CHUNKSIZE_FA_MASK       (0x7E00U)
#define QuadSPI_PARITYCR_CHUNKSIZE_FA_SHIFT      (9U)
#define QuadSPI_PARITYCR_CHUNKSIZE_FA_WIDTH      (6U)
#define QuadSPI_PARITYCR_CHUNKSIZE_FA(x)         (((uint32_t)(((uint32_t)(x)) << QuadSPI_PARITYCR_CHUNKSIZE_FA_SHIFT)) & QuadSPI_PARITYCR_CHUNKSIZE_FA_MASK)
#define QuadSPI_PARITYCR_CRC_WNDW_FA_MASK        (0x8000U)
#define QuadSPI_PARITYCR_CRC_WNDW_FA_SHIFT       (15U)
#define QuadSPI_PARITYCR_CRC_WNDW_FA_WIDTH       (1U)
#define QuadSPI_PARITYCR_CRC_WNDW_FA(x)          (((uint32_t)(((uint32_t)(x)) << QuadSPI_PARITYCR_CRC_WNDW_FA_SHIFT)) & QuadSPI_PARITYCR_CRC_WNDW_FA_MASK)
#define QuadSPI_PARITYCR_CRCBIN_FB_MASK          (0x200000U)
#define QuadSPI_PARITYCR_CRCBIN_FB_SHIFT         (21U)
#define QuadSPI_PARITYCR_CRCBIN_FB_WIDTH         (1U)
#define QuadSPI_PARITYCR_CRCBIN_FB(x)            (((uint32_t)(((uint32_t)(x)) << QuadSPI_PARITYCR_CRCBIN_FB_SHIFT)) & QuadSPI_PARITYCR_CRCBIN_FB_MASK)
#define QuadSPI_PARITYCR_CRCBEN_FB_MASK          (0x400000U)
#define QuadSPI_PARITYCR_CRCBEN_FB_SHIFT         (22U)
#define QuadSPI_PARITYCR_CRCBEN_FB_WIDTH         (1U)
#define QuadSPI_PARITYCR_CRCBEN_FB(x)            (((uint32_t)(((uint32_t)(x)) << QuadSPI_PARITYCR_CRCBEN_FB_SHIFT)) & QuadSPI_PARITYCR_CRCBEN_FB_MASK)
#define QuadSPI_PARITYCR_CRCEN_FB_MASK           (0x800000U)
#define QuadSPI_PARITYCR_CRCEN_FB_SHIFT          (23U)
#define QuadSPI_PARITYCR_CRCEN_FB_WIDTH          (1U)
#define QuadSPI_PARITYCR_CRCEN_FB(x)             (((uint32_t)(((uint32_t)(x)) << QuadSPI_PARITYCR_CRCEN_FB_SHIFT)) & QuadSPI_PARITYCR_CRCEN_FB_MASK)
#define QuadSPI_PARITYCR_BYTE_SIZE_FB_MASK       (0x1000000U)
#define QuadSPI_PARITYCR_BYTE_SIZE_FB_SHIFT      (24U)
#define QuadSPI_PARITYCR_BYTE_SIZE_FB_WIDTH      (1U)
#define QuadSPI_PARITYCR_BYTE_SIZE_FB(x)         (((uint32_t)(((uint32_t)(x)) << QuadSPI_PARITYCR_BYTE_SIZE_FB_SHIFT)) & QuadSPI_PARITYCR_BYTE_SIZE_FB_MASK)
#define QuadSPI_PARITYCR_CHUNKSIZE_FB_MASK       (0x7E000000U)
#define QuadSPI_PARITYCR_CHUNKSIZE_FB_SHIFT      (25U)
#define QuadSPI_PARITYCR_CHUNKSIZE_FB_WIDTH      (6U)
#define QuadSPI_PARITYCR_CHUNKSIZE_FB(x)         (((uint32_t)(((uint32_t)(x)) << QuadSPI_PARITYCR_CHUNKSIZE_FB_SHIFT)) & QuadSPI_PARITYCR_CHUNKSIZE_FB_MASK)
#define QuadSPI_PARITYCR_CRC_WNDW_FB_MASK        (0x80000000U)
#define QuadSPI_PARITYCR_CRC_WNDW_FB_SHIFT       (31U)
#define QuadSPI_PARITYCR_CRC_WNDW_FB_WIDTH       (1U)
#define QuadSPI_PARITYCR_CRC_WNDW_FB(x)          (((uint32_t)(((uint32_t)(x)) << QuadSPI_PARITYCR_CRC_WNDW_FB_SHIFT)) & QuadSPI_PARITYCR_CRC_WNDW_FB_MASK)
/*! @} */

/*! @name SFAR - Serial Flash Memory Address Register */
/*! @{ */
#define QuadSPI_SFAR_SFADR_MASK                  (0xFFFFFFFFU)
#define QuadSPI_SFAR_SFADR_SHIFT                 (0U)
#define QuadSPI_SFAR_SFADR_WIDTH                 (32U)
#define QuadSPI_SFAR_SFADR(x)                    (((uint32_t)(((uint32_t)(x)) << QuadSPI_SFAR_SFADR_SHIFT)) & QuadSPI_SFAR_SFADR_MASK)
/*! @} */

/*! @name SFACR - Serial Flash Memory Address Configuration Register */
/*! @{ */
#define QuadSPI_SFACR_CAS_MASK                   (0xFU)
#define QuadSPI_SFACR_CAS_SHIFT                  (0U)
#define QuadSPI_SFACR_CAS_WIDTH                  (4U)
#define QuadSPI_SFACR_CAS(x)                     (((uint32_t)(((uint32_t)(x)) << QuadSPI_SFACR_CAS_SHIFT)) & QuadSPI_SFACR_CAS_MASK)
#define QuadSPI_SFACR_PPWB_MASK                  (0x1F00U)
#define QuadSPI_SFACR_PPWB_SHIFT                 (8U)
#define QuadSPI_SFACR_PPWB_WIDTH                 (5U)
#define QuadSPI_SFACR_PPWB(x)                    (((uint32_t)(((uint32_t)(x)) << QuadSPI_SFACR_PPWB_SHIFT)) & QuadSPI_SFACR_PPWB_MASK)
#define QuadSPI_SFACR_WA_MASK                    (0x10000U)
#define QuadSPI_SFACR_WA_SHIFT                   (16U)
#define QuadSPI_SFACR_WA_WIDTH                   (1U)
#define QuadSPI_SFACR_WA(x)                      (((uint32_t)(((uint32_t)(x)) << QuadSPI_SFACR_WA_SHIFT)) & QuadSPI_SFACR_WA_MASK)
#define QuadSPI_SFACR_BYTE_SWAP_MASK             (0x20000U)
#define QuadSPI_SFACR_BYTE_SWAP_SHIFT            (17U)
#define QuadSPI_SFACR_BYTE_SWAP_WIDTH            (1U)
#define QuadSPI_SFACR_BYTE_SWAP(x)               (((uint32_t)(((uint32_t)(x)) << QuadSPI_SFACR_BYTE_SWAP_SHIFT)) & QuadSPI_SFACR_BYTE_SWAP_MASK)
/*! @} */

/*! @name SMPR - Sampling Register */
/*! @{ */
#define QuadSPI_SMPR_FSPHS_MASK                  (0x20U)
#define QuadSPI_SMPR_FSPHS_SHIFT                 (5U)
#define QuadSPI_SMPR_FSPHS_WIDTH                 (1U)
#define QuadSPI_SMPR_FSPHS(x)                    (((uint32_t)(((uint32_t)(x)) << QuadSPI_SMPR_FSPHS_SHIFT)) & QuadSPI_SMPR_FSPHS_MASK)
#define QuadSPI_SMPR_FSDLY_MASK                  (0x40U)
#define QuadSPI_SMPR_FSDLY_SHIFT                 (6U)
#define QuadSPI_SMPR_FSDLY_WIDTH                 (1U)
#define QuadSPI_SMPR_FSDLY(x)                    (((uint32_t)(((uint32_t)(x)) << QuadSPI_SMPR_FSDLY_SHIFT)) & QuadSPI_SMPR_FSDLY_MASK)
#define QuadSPI_SMPR_DLLFSMPFA_MASK              (0x7000000U)
#define QuadSPI_SMPR_DLLFSMPFA_SHIFT             (24U)
#define QuadSPI_SMPR_DLLFSMPFA_WIDTH             (3U)
#define QuadSPI_SMPR_DLLFSMPFA(x)                (((uint32_t)(((uint32_t)(x)) << QuadSPI_SMPR_DLLFSMPFA_SHIFT)) & QuadSPI_SMPR_DLLFSMPFA_MASK)
#define QuadSPI_SMPR_DLLFSMPFB_MASK              (0x70000000U)
#define QuadSPI_SMPR_DLLFSMPFB_SHIFT             (28U)
#define QuadSPI_SMPR_DLLFSMPFB_WIDTH             (3U)
#define QuadSPI_SMPR_DLLFSMPFB(x)                (((uint32_t)(((uint32_t)(x)) << QuadSPI_SMPR_DLLFSMPFB_SHIFT)) & QuadSPI_SMPR_DLLFSMPFB_MASK)
/*! @} */

/*! @name RBSR - RX Buffer Status Register */
/*! @{ */
#define QuadSPI_RBSR_RDBFL_MASK                  (0xFFU)
#define QuadSPI_RBSR_RDBFL_SHIFT                 (0U)
#define QuadSPI_RBSR_RDBFL_WIDTH                 (8U)
#define QuadSPI_RBSR_RDBFL(x)                    (((uint32_t)(((uint32_t)(x)) << QuadSPI_RBSR_RDBFL_SHIFT)) & QuadSPI_RBSR_RDBFL_MASK)
#define QuadSPI_RBSR_RDCTR_MASK                  (0xFFFF0000U)
#define QuadSPI_RBSR_RDCTR_SHIFT                 (16U)
#define QuadSPI_RBSR_RDCTR_WIDTH                 (16U)
#define QuadSPI_RBSR_RDCTR(x)                    (((uint32_t)(((uint32_t)(x)) << QuadSPI_RBSR_RDCTR_SHIFT)) & QuadSPI_RBSR_RDCTR_MASK)
/*! @} */

/*! @name RBCT - RX Buffer Control Register */
/*! @{ */
#define QuadSPI_RBCT_WMRK_MASK                   (0x7FU)
#define QuadSPI_RBCT_WMRK_SHIFT                  (0U)
#define QuadSPI_RBCT_WMRK_WIDTH                  (7U)
#define QuadSPI_RBCT_WMRK(x)                     (((uint32_t)(((uint32_t)(x)) << QuadSPI_RBCT_WMRK_SHIFT)) & QuadSPI_RBCT_WMRK_MASK)
#define QuadSPI_RBCT_RXBRD_MASK                  (0x100U)
#define QuadSPI_RBCT_RXBRD_SHIFT                 (8U)
#define QuadSPI_RBCT_RXBRD_WIDTH                 (1U)
#define QuadSPI_RBCT_RXBRD(x)                    (((uint32_t)(((uint32_t)(x)) << QuadSPI_RBCT_RXBRD_SHIFT)) & QuadSPI_RBCT_RXBRD_MASK)
/*! @} */

/*! @name AWRSR - AHB Write Status Register */
/*! @{ */
#define QuadSPI_AWRSR_SEQAUJOIN_MASK             (0x4U)
#define QuadSPI_AWRSR_SEQAUJOIN_SHIFT            (2U)
#define QuadSPI_AWRSR_SEQAUJOIN_WIDTH            (1U)
#define QuadSPI_AWRSR_SEQAUJOIN(x)               (((uint32_t)(((uint32_t)(x)) << QuadSPI_AWRSR_SEQAUJOIN_SHIFT)) & QuadSPI_AWRSR_SEQAUJOIN_MASK)
/*! @} */

/*! @name DLLSR - DLL Status Register */
/*! @{ */
#define QuadSPI_DLLSR_DLLA_SLV_COARSE_VAL_MASK   (0xFU)
#define QuadSPI_DLLSR_DLLA_SLV_COARSE_VAL_SHIFT  (0U)
#define QuadSPI_DLLSR_DLLA_SLV_COARSE_VAL_WIDTH  (4U)
#define QuadSPI_DLLSR_DLLA_SLV_COARSE_VAL(x)     (((uint32_t)(((uint32_t)(x)) << QuadSPI_DLLSR_DLLA_SLV_COARSE_VAL_SHIFT)) & QuadSPI_DLLSR_DLLA_SLV_COARSE_VAL_MASK)
#define QuadSPI_DLLSR_DLLA_SLV_FINE_VAL_MASK     (0xF0U)
#define QuadSPI_DLLSR_DLLA_SLV_FINE_VAL_SHIFT    (4U)
#define QuadSPI_DLLSR_DLLA_SLV_FINE_VAL_WIDTH    (4U)
#define QuadSPI_DLLSR_DLLA_SLV_FINE_VAL(x)       (((uint32_t)(((uint32_t)(x)) << QuadSPI_DLLSR_DLLA_SLV_FINE_VAL_SHIFT)) & QuadSPI_DLLSR_DLLA_SLV_FINE_VAL_MASK)
#define QuadSPI_DLLSR_DLLA_FINE_UNDERFLOW_MASK   (0x1000U)
#define QuadSPI_DLLSR_DLLA_FINE_UNDERFLOW_SHIFT  (12U)
#define QuadSPI_DLLSR_DLLA_FINE_UNDERFLOW_WIDTH  (1U)
#define QuadSPI_DLLSR_DLLA_FINE_UNDERFLOW(x)     (((uint32_t)(((uint32_t)(x)) << QuadSPI_DLLSR_DLLA_FINE_UNDERFLOW_SHIFT)) & QuadSPI_DLLSR_DLLA_FINE_UNDERFLOW_MASK)
#define QuadSPI_DLLSR_DLLA_RANGE_ERR_MASK        (0x2000U)
#define QuadSPI_DLLSR_DLLA_RANGE_ERR_SHIFT       (13U)
#define QuadSPI_DLLSR_DLLA_RANGE_ERR_WIDTH       (1U)
#define QuadSPI_DLLSR_DLLA_RANGE_ERR(x)          (((uint32_t)(((uint32_t)(x)) << QuadSPI_DLLSR_DLLA_RANGE_ERR_SHIFT)) & QuadSPI_DLLSR_DLLA_RANGE_ERR_MASK)
#define QuadSPI_DLLSR_SLVA_LOCK_MASK             (0x4000U)
#define QuadSPI_DLLSR_SLVA_LOCK_SHIFT            (14U)
#define QuadSPI_DLLSR_SLVA_LOCK_WIDTH            (1U)
#define QuadSPI_DLLSR_SLVA_LOCK(x)               (((uint32_t)(((uint32_t)(x)) << QuadSPI_DLLSR_SLVA_LOCK_SHIFT)) & QuadSPI_DLLSR_SLVA_LOCK_MASK)
#define QuadSPI_DLLSR_DLLA_LOCK_MASK             (0x8000U)
#define QuadSPI_DLLSR_DLLA_LOCK_SHIFT            (15U)
#define QuadSPI_DLLSR_DLLA_LOCK_WIDTH            (1U)
#define QuadSPI_DLLSR_DLLA_LOCK(x)               (((uint32_t)(((uint32_t)(x)) << QuadSPI_DLLSR_DLLA_LOCK_SHIFT)) & QuadSPI_DLLSR_DLLA_LOCK_MASK)
#define QuadSPI_DLLSR_DLLB_SLV_COARSE_VAL_MASK   (0xF0000U)
#define QuadSPI_DLLSR_DLLB_SLV_COARSE_VAL_SHIFT  (16U)
#define QuadSPI_DLLSR_DLLB_SLV_COARSE_VAL_WIDTH  (4U)
#define QuadSPI_DLLSR_DLLB_SLV_COARSE_VAL(x)     (((uint32_t)(((uint32_t)(x)) << QuadSPI_DLLSR_DLLB_SLV_COARSE_VAL_SHIFT)) & QuadSPI_DLLSR_DLLB_SLV_COARSE_VAL_MASK)
#define QuadSPI_DLLSR_DLLB_SLV_FINE_VAL_MASK     (0xF00000U)
#define QuadSPI_DLLSR_DLLB_SLV_FINE_VAL_SHIFT    (20U)
#define QuadSPI_DLLSR_DLLB_SLV_FINE_VAL_WIDTH    (4U)
#define QuadSPI_DLLSR_DLLB_SLV_FINE_VAL(x)       (((uint32_t)(((uint32_t)(x)) << QuadSPI_DLLSR_DLLB_SLV_FINE_VAL_SHIFT)) & QuadSPI_DLLSR_DLLB_SLV_FINE_VAL_MASK)
#define QuadSPI_DLLSR_DLLB_FINE_UNDERFLOW_MASK   (0x10000000U)
#define QuadSPI_DLLSR_DLLB_FINE_UNDERFLOW_SHIFT  (28U)
#define QuadSPI_DLLSR_DLLB_FINE_UNDERFLOW_WIDTH  (1U)
#define QuadSPI_DLLSR_DLLB_FINE_UNDERFLOW(x)     (((uint32_t)(((uint32_t)(x)) << QuadSPI_DLLSR_DLLB_FINE_UNDERFLOW_SHIFT)) & QuadSPI_DLLSR_DLLB_FINE_UNDERFLOW_MASK)
#define QuadSPI_DLLSR_DLLB_RANGE_ERR_MASK        (0x20000000U)
#define QuadSPI_DLLSR_DLLB_RANGE_ERR_SHIFT       (29U)
#define QuadSPI_DLLSR_DLLB_RANGE_ERR_WIDTH       (1U)
#define QuadSPI_DLLSR_DLLB_RANGE_ERR(x)          (((uint32_t)(((uint32_t)(x)) << QuadSPI_DLLSR_DLLB_RANGE_ERR_SHIFT)) & QuadSPI_DLLSR_DLLB_RANGE_ERR_MASK)
#define QuadSPI_DLLSR_SLVB_LOCK_MASK             (0x40000000U)
#define QuadSPI_DLLSR_SLVB_LOCK_SHIFT            (30U)
#define QuadSPI_DLLSR_SLVB_LOCK_WIDTH            (1U)
#define QuadSPI_DLLSR_SLVB_LOCK(x)               (((uint32_t)(((uint32_t)(x)) << QuadSPI_DLLSR_SLVB_LOCK_SHIFT)) & QuadSPI_DLLSR_SLVB_LOCK_MASK)
#define QuadSPI_DLLSR_DLLB_LOCK_MASK             (0x80000000U)
#define QuadSPI_DLLSR_DLLB_LOCK_SHIFT            (31U)
#define QuadSPI_DLLSR_DLLB_LOCK_WIDTH            (1U)
#define QuadSPI_DLLSR_DLLB_LOCK(x)               (((uint32_t)(((uint32_t)(x)) << QuadSPI_DLLSR_DLLB_LOCK_SHIFT)) & QuadSPI_DLLSR_DLLB_LOCK_MASK)
/*! @} */

/*! @name DLCR - Data Learning Configuration Register */
/*! @{ */
#define QuadSPI_DLCR_DLP_SEL_FA_MASK             (0xC000U)
#define QuadSPI_DLCR_DLP_SEL_FA_SHIFT            (14U)
#define QuadSPI_DLCR_DLP_SEL_FA_WIDTH            (2U)
#define QuadSPI_DLCR_DLP_SEL_FA(x)               (((uint32_t)(((uint32_t)(x)) << QuadSPI_DLCR_DLP_SEL_FA_SHIFT)) & QuadSPI_DLCR_DLP_SEL_FA_MASK)
#define QuadSPI_DLCR_DL_NONDLP_FLSH_MASK         (0x1000000U)
#define QuadSPI_DLCR_DL_NONDLP_FLSH_SHIFT        (24U)
#define QuadSPI_DLCR_DL_NONDLP_FLSH_WIDTH        (1U)
#define QuadSPI_DLCR_DL_NONDLP_FLSH(x)           (((uint32_t)(((uint32_t)(x)) << QuadSPI_DLCR_DL_NONDLP_FLSH_SHIFT)) & QuadSPI_DLCR_DL_NONDLP_FLSH_MASK)
#define QuadSPI_DLCR_DLP_SEL_FB_MASK             (0xC0000000U)
#define QuadSPI_DLCR_DLP_SEL_FB_SHIFT            (30U)
#define QuadSPI_DLCR_DLP_SEL_FB_WIDTH            (2U)
#define QuadSPI_DLCR_DLP_SEL_FB(x)               (((uint32_t)(((uint32_t)(x)) << QuadSPI_DLCR_DLP_SEL_FB_SHIFT)) & QuadSPI_DLCR_DLP_SEL_FB_MASK)
/*! @} */

/*! @name DLSR_FA - Data Learning Status Flash Memory A Register */
/*! @{ */
#define QuadSPI_DLSR_FA_NEG_EDGE_MASK            (0xFFU)
#define QuadSPI_DLSR_FA_NEG_EDGE_SHIFT           (0U)
#define QuadSPI_DLSR_FA_NEG_EDGE_WIDTH           (8U)
#define QuadSPI_DLSR_FA_NEG_EDGE(x)              (((uint32_t)(((uint32_t)(x)) << QuadSPI_DLSR_FA_NEG_EDGE_SHIFT)) & QuadSPI_DLSR_FA_NEG_EDGE_MASK)
#define QuadSPI_DLSR_FA_POS_EDGE_MASK            (0xFF00U)
#define QuadSPI_DLSR_FA_POS_EDGE_SHIFT           (8U)
#define QuadSPI_DLSR_FA_POS_EDGE_WIDTH           (8U)
#define QuadSPI_DLSR_FA_POS_EDGE(x)              (((uint32_t)(((uint32_t)(x)) << QuadSPI_DLSR_FA_POS_EDGE_SHIFT)) & QuadSPI_DLSR_FA_POS_EDGE_MASK)
#define QuadSPI_DLSR_FA_DLPFFA_MASK              (0x80000000U)
#define QuadSPI_DLSR_FA_DLPFFA_SHIFT             (31U)
#define QuadSPI_DLSR_FA_DLPFFA_WIDTH             (1U)
#define QuadSPI_DLSR_FA_DLPFFA(x)                (((uint32_t)(((uint32_t)(x)) << QuadSPI_DLSR_FA_DLPFFA_SHIFT)) & QuadSPI_DLSR_FA_DLPFFA_MASK)
/*! @} */

/*! @name DLSR_FB - Data Learning Status Flash Memory B Register */
/*! @{ */
#define QuadSPI_DLSR_FB_NEG_EDGE_MASK            (0xFFU)
#define QuadSPI_DLSR_FB_NEG_EDGE_SHIFT           (0U)
#define QuadSPI_DLSR_FB_NEG_EDGE_WIDTH           (8U)
#define QuadSPI_DLSR_FB_NEG_EDGE(x)              (((uint32_t)(((uint32_t)(x)) << QuadSPI_DLSR_FB_NEG_EDGE_SHIFT)) & QuadSPI_DLSR_FB_NEG_EDGE_MASK)
#define QuadSPI_DLSR_FB_POS_EDGE_MASK            (0xFF00U)
#define QuadSPI_DLSR_FB_POS_EDGE_SHIFT           (8U)
#define QuadSPI_DLSR_FB_POS_EDGE_WIDTH           (8U)
#define QuadSPI_DLSR_FB_POS_EDGE(x)              (((uint32_t)(((uint32_t)(x)) << QuadSPI_DLSR_FB_POS_EDGE_SHIFT)) & QuadSPI_DLSR_FB_POS_EDGE_MASK)
#define QuadSPI_DLSR_FB_DLPFFB_MASK              (0x80000000U)
#define QuadSPI_DLSR_FB_DLPFFB_SHIFT             (31U)
#define QuadSPI_DLSR_FB_DLPFFB_WIDTH             (1U)
#define QuadSPI_DLSR_FB_DLPFFB(x)                (((uint32_t)(((uint32_t)(x)) << QuadSPI_DLSR_FB_DLPFFB_SHIFT)) & QuadSPI_DLSR_FB_DLPFFB_MASK)
/*! @} */

/*! @name TBSR - TX Buffer Status Register */
/*! @{ */
#define QuadSPI_TBSR_TRBFL_MASK                  (0xFFU)
#define QuadSPI_TBSR_TRBFL_SHIFT                 (0U)
#define QuadSPI_TBSR_TRBFL_WIDTH                 (8U)
#define QuadSPI_TBSR_TRBFL(x)                    (((uint32_t)(((uint32_t)(x)) << QuadSPI_TBSR_TRBFL_SHIFT)) & QuadSPI_TBSR_TRBFL_MASK)
#define QuadSPI_TBSR_TRCTR_MASK                  (0xFFFF0000U)
#define QuadSPI_TBSR_TRCTR_SHIFT                 (16U)
#define QuadSPI_TBSR_TRCTR_WIDTH                 (16U)
#define QuadSPI_TBSR_TRCTR(x)                    (((uint32_t)(((uint32_t)(x)) << QuadSPI_TBSR_TRCTR_SHIFT)) & QuadSPI_TBSR_TRCTR_MASK)
/*! @} */

/*! @name TBDR - TX Buffer Data Register */
/*! @{ */
#define QuadSPI_TBDR_TXDATA_MASK                 (0xFFFFFFFFU)
#define QuadSPI_TBDR_TXDATA_SHIFT                (0U)
#define QuadSPI_TBDR_TXDATA_WIDTH                (32U)
#define QuadSPI_TBDR_TXDATA(x)                   (((uint32_t)(((uint32_t)(x)) << QuadSPI_TBDR_TXDATA_SHIFT)) & QuadSPI_TBDR_TXDATA_MASK)
/*! @} */

/*! @name TBCT - TX Buffer Control Register */
/*! @{ */
#define QuadSPI_TBCT_WMRK_MASK                   (0xFFU)
#define QuadSPI_TBCT_WMRK_SHIFT                  (0U)
#define QuadSPI_TBCT_WMRK_WIDTH                  (8U)
#define QuadSPI_TBCT_WMRK(x)                     (((uint32_t)(((uint32_t)(x)) << QuadSPI_TBCT_WMRK_SHIFT)) & QuadSPI_TBCT_WMRK_MASK)
/*! @} */

/*! @name SR - Status Register */
/*! @{ */
#define QuadSPI_SR_BUSY_MASK                     (0x1U)
#define QuadSPI_SR_BUSY_SHIFT                    (0U)
#define QuadSPI_SR_BUSY_WIDTH                    (1U)
#define QuadSPI_SR_BUSY(x)                       (((uint32_t)(((uint32_t)(x)) << QuadSPI_SR_BUSY_SHIFT)) & QuadSPI_SR_BUSY_MASK)
#define QuadSPI_SR_IP_ACC_MASK                   (0x2U)
#define QuadSPI_SR_IP_ACC_SHIFT                  (1U)
#define QuadSPI_SR_IP_ACC_WIDTH                  (1U)
#define QuadSPI_SR_IP_ACC(x)                     (((uint32_t)(((uint32_t)(x)) << QuadSPI_SR_IP_ACC_SHIFT)) & QuadSPI_SR_IP_ACC_MASK)
#define QuadSPI_SR_AHB_ACC_MASK                  (0x4U)
#define QuadSPI_SR_AHB_ACC_SHIFT                 (2U)
#define QuadSPI_SR_AHB_ACC_WIDTH                 (1U)
#define QuadSPI_SR_AHB_ACC(x)                    (((uint32_t)(((uint32_t)(x)) << QuadSPI_SR_AHB_ACC_SHIFT)) & QuadSPI_SR_AHB_ACC_MASK)
#define QuadSPI_SR_AWRACC_MASK                   (0x10U)
#define QuadSPI_SR_AWRACC_SHIFT                  (4U)
#define QuadSPI_SR_AWRACC_WIDTH                  (1U)
#define QuadSPI_SR_AWRACC(x)                     (((uint32_t)(((uint32_t)(x)) << QuadSPI_SR_AWRACC_SHIFT)) & QuadSPI_SR_AWRACC_MASK)
#define QuadSPI_SR_AHBTRN_MASK                   (0x40U)
#define QuadSPI_SR_AHBTRN_SHIFT                  (6U)
#define QuadSPI_SR_AHBTRN_WIDTH                  (1U)
#define QuadSPI_SR_AHBTRN(x)                     (((uint32_t)(((uint32_t)(x)) << QuadSPI_SR_AHBTRN_SHIFT)) & QuadSPI_SR_AHBTRN_MASK)
#define QuadSPI_SR_AHB0NE_MASK                   (0x80U)
#define QuadSPI_SR_AHB0NE_SHIFT                  (7U)
#define QuadSPI_SR_AHB0NE_WIDTH                  (1U)
#define QuadSPI_SR_AHB0NE(x)                     (((uint32_t)(((uint32_t)(x)) << QuadSPI_SR_AHB0NE_SHIFT)) & QuadSPI_SR_AHB0NE_MASK)
#define QuadSPI_SR_AHB1NE_MASK                   (0x100U)
#define QuadSPI_SR_AHB1NE_SHIFT                  (8U)
#define QuadSPI_SR_AHB1NE_WIDTH                  (1U)
#define QuadSPI_SR_AHB1NE(x)                     (((uint32_t)(((uint32_t)(x)) << QuadSPI_SR_AHB1NE_SHIFT)) & QuadSPI_SR_AHB1NE_MASK)
#define QuadSPI_SR_AHB2NE_MASK                   (0x200U)
#define QuadSPI_SR_AHB2NE_SHIFT                  (9U)
#define QuadSPI_SR_AHB2NE_WIDTH                  (1U)
#define QuadSPI_SR_AHB2NE(x)                     (((uint32_t)(((uint32_t)(x)) << QuadSPI_SR_AHB2NE_SHIFT)) & QuadSPI_SR_AHB2NE_MASK)
#define QuadSPI_SR_AHB3NE_MASK                   (0x400U)
#define QuadSPI_SR_AHB3NE_SHIFT                  (10U)
#define QuadSPI_SR_AHB3NE_WIDTH                  (1U)
#define QuadSPI_SR_AHB3NE(x)                     (((uint32_t)(((uint32_t)(x)) << QuadSPI_SR_AHB3NE_SHIFT)) & QuadSPI_SR_AHB3NE_MASK)
#define QuadSPI_SR_AHB0FUL_MASK                  (0x800U)
#define QuadSPI_SR_AHB0FUL_SHIFT                 (11U)
#define QuadSPI_SR_AHB0FUL_WIDTH                 (1U)
#define QuadSPI_SR_AHB0FUL(x)                    (((uint32_t)(((uint32_t)(x)) << QuadSPI_SR_AHB0FUL_SHIFT)) & QuadSPI_SR_AHB0FUL_MASK)
#define QuadSPI_SR_AHB1FUL_MASK                  (0x1000U)
#define QuadSPI_SR_AHB1FUL_SHIFT                 (12U)
#define QuadSPI_SR_AHB1FUL_WIDTH                 (1U)
#define QuadSPI_SR_AHB1FUL(x)                    (((uint32_t)(((uint32_t)(x)) << QuadSPI_SR_AHB1FUL_SHIFT)) & QuadSPI_SR_AHB1FUL_MASK)
#define QuadSPI_SR_AHB2FUL_MASK                  (0x2000U)
#define QuadSPI_SR_AHB2FUL_SHIFT                 (13U)
#define QuadSPI_SR_AHB2FUL_WIDTH                 (1U)
#define QuadSPI_SR_AHB2FUL(x)                    (((uint32_t)(((uint32_t)(x)) << QuadSPI_SR_AHB2FUL_SHIFT)) & QuadSPI_SR_AHB2FUL_MASK)
#define QuadSPI_SR_AHB3FUL_MASK                  (0x4000U)
#define QuadSPI_SR_AHB3FUL_SHIFT                 (14U)
#define QuadSPI_SR_AHB3FUL_WIDTH                 (1U)
#define QuadSPI_SR_AHB3FUL(x)                    (((uint32_t)(((uint32_t)(x)) << QuadSPI_SR_AHB3FUL_SHIFT)) & QuadSPI_SR_AHB3FUL_MASK)
#define QuadSPI_SR_RXWE_MASK                     (0x10000U)
#define QuadSPI_SR_RXWE_SHIFT                    (16U)
#define QuadSPI_SR_RXWE_WIDTH                    (1U)
#define QuadSPI_SR_RXWE(x)                       (((uint32_t)(((uint32_t)(x)) << QuadSPI_SR_RXWE_SHIFT)) & QuadSPI_SR_RXWE_MASK)
#define QuadSPI_SR_RXFULL_MASK                   (0x80000U)
#define QuadSPI_SR_RXFULL_SHIFT                  (19U)
#define QuadSPI_SR_RXFULL_WIDTH                  (1U)
#define QuadSPI_SR_RXFULL(x)                     (((uint32_t)(((uint32_t)(x)) << QuadSPI_SR_RXFULL_SHIFT)) & QuadSPI_SR_RXFULL_MASK)
#define QuadSPI_SR_RXDMA_MASK                    (0x800000U)
#define QuadSPI_SR_RXDMA_SHIFT                   (23U)
#define QuadSPI_SR_RXDMA_WIDTH                   (1U)
#define QuadSPI_SR_RXDMA(x)                      (((uint32_t)(((uint32_t)(x)) << QuadSPI_SR_RXDMA_SHIFT)) & QuadSPI_SR_RXDMA_MASK)
#define QuadSPI_SR_TXNE_MASK                     (0x1000000U)
#define QuadSPI_SR_TXNE_SHIFT                    (24U)
#define QuadSPI_SR_TXNE_WIDTH                    (1U)
#define QuadSPI_SR_TXNE(x)                       (((uint32_t)(((uint32_t)(x)) << QuadSPI_SR_TXNE_SHIFT)) & QuadSPI_SR_TXNE_MASK)
#define QuadSPI_SR_TXWA_MASK                     (0x2000000U)
#define QuadSPI_SR_TXWA_SHIFT                    (25U)
#define QuadSPI_SR_TXWA_WIDTH                    (1U)
#define QuadSPI_SR_TXWA(x)                       (((uint32_t)(((uint32_t)(x)) << QuadSPI_SR_TXWA_SHIFT)) & QuadSPI_SR_TXWA_MASK)
#define QuadSPI_SR_TXDMA_MASK                    (0x4000000U)
#define QuadSPI_SR_TXDMA_SHIFT                   (26U)
#define QuadSPI_SR_TXDMA_WIDTH                   (1U)
#define QuadSPI_SR_TXDMA(x)                      (((uint32_t)(((uint32_t)(x)) << QuadSPI_SR_TXDMA_SHIFT)) & QuadSPI_SR_TXDMA_MASK)
#define QuadSPI_SR_TXFULL_MASK                   (0x8000000U)
#define QuadSPI_SR_TXFULL_SHIFT                  (27U)
#define QuadSPI_SR_TXFULL_WIDTH                  (1U)
#define QuadSPI_SR_TXFULL(x)                     (((uint32_t)(((uint32_t)(x)) << QuadSPI_SR_TXFULL_SHIFT)) & QuadSPI_SR_TXFULL_MASK)
/*! @} */

/*! @name FR - Flag Register */
/*! @{ */
#define QuadSPI_FR_TFF_MASK                      (0x1U)
#define QuadSPI_FR_TFF_SHIFT                     (0U)
#define QuadSPI_FR_TFF_WIDTH                     (1U)
#define QuadSPI_FR_TFF(x)                        (((uint32_t)(((uint32_t)(x)) << QuadSPI_FR_TFF_SHIFT)) & QuadSPI_FR_TFF_MASK)
#define QuadSPI_FR_IPIEF_MASK                    (0x40U)
#define QuadSPI_FR_IPIEF_SHIFT                   (6U)
#define QuadSPI_FR_IPIEF_WIDTH                   (1U)
#define QuadSPI_FR_IPIEF(x)                      (((uint32_t)(((uint32_t)(x)) << QuadSPI_FR_IPIEF_SHIFT)) & QuadSPI_FR_IPIEF_MASK)
#define QuadSPI_FR_IPAEF_MASK                    (0x80U)
#define QuadSPI_FR_IPAEF_SHIFT                   (7U)
#define QuadSPI_FR_IPAEF_WIDTH                   (1U)
#define QuadSPI_FR_IPAEF(x)                      (((uint32_t)(((uint32_t)(x)) << QuadSPI_FR_IPAEF_SHIFT)) & QuadSPI_FR_IPAEF_MASK)
#define QuadSPI_FR_PPWF_MASK                     (0x100U)
#define QuadSPI_FR_PPWF_SHIFT                    (8U)
#define QuadSPI_FR_PPWF_WIDTH                    (1U)
#define QuadSPI_FR_PPWF(x)                       (((uint32_t)(((uint32_t)(x)) << QuadSPI_FR_PPWF_SHIFT)) & QuadSPI_FR_PPWF_MASK)
#define QuadSPI_FR_CRCBEF_MASK                   (0x200U)
#define QuadSPI_FR_CRCBEF_SHIFT                  (9U)
#define QuadSPI_FR_CRCBEF_WIDTH                  (1U)
#define QuadSPI_FR_CRCBEF(x)                     (((uint32_t)(((uint32_t)(x)) << QuadSPI_FR_CRCBEF_SHIFT)) & QuadSPI_FR_CRCBEF_MASK)
#define QuadSPI_FR_CRCAEF_MASK                   (0x400U)
#define QuadSPI_FR_CRCAEF_SHIFT                  (10U)
#define QuadSPI_FR_CRCAEF_WIDTH                  (1U)
#define QuadSPI_FR_CRCAEF(x)                     (((uint32_t)(((uint32_t)(x)) << QuadSPI_FR_CRCAEF_SHIFT)) & QuadSPI_FR_CRCAEF_MASK)
#define QuadSPI_FR_IUEF_MASK                     (0x800U)
#define QuadSPI_FR_IUEF_SHIFT                    (11U)
#define QuadSPI_FR_IUEF_WIDTH                    (1U)
#define QuadSPI_FR_IUEF(x)                       (((uint32_t)(((uint32_t)(x)) << QuadSPI_FR_IUEF_SHIFT)) & QuadSPI_FR_IUEF_MASK)
#define QuadSPI_FR_ABOF_MASK                     (0x1000U)
#define QuadSPI_FR_ABOF_SHIFT                    (12U)
#define QuadSPI_FR_ABOF_WIDTH                    (1U)
#define QuadSPI_FR_ABOF(x)                       (((uint32_t)(((uint32_t)(x)) << QuadSPI_FR_ABOF_SHIFT)) & QuadSPI_FR_ABOF_MASK)
#define QuadSPI_FR_AITEF_MASK                    (0x4000U)
#define QuadSPI_FR_AITEF_SHIFT                   (14U)
#define QuadSPI_FR_AITEF_WIDTH                   (1U)
#define QuadSPI_FR_AITEF(x)                      (((uint32_t)(((uint32_t)(x)) << QuadSPI_FR_AITEF_SHIFT)) & QuadSPI_FR_AITEF_MASK)
#define QuadSPI_FR_AAEF_MASK                     (0x8000U)
#define QuadSPI_FR_AAEF_SHIFT                    (15U)
#define QuadSPI_FR_AAEF_WIDTH                    (1U)
#define QuadSPI_FR_AAEF(x)                       (((uint32_t)(((uint32_t)(x)) << QuadSPI_FR_AAEF_SHIFT)) & QuadSPI_FR_AAEF_MASK)
#define QuadSPI_FR_RBDF_MASK                     (0x10000U)
#define QuadSPI_FR_RBDF_SHIFT                    (16U)
#define QuadSPI_FR_RBDF_WIDTH                    (1U)
#define QuadSPI_FR_RBDF(x)                       (((uint32_t)(((uint32_t)(x)) << QuadSPI_FR_RBDF_SHIFT)) & QuadSPI_FR_RBDF_MASK)
#define QuadSPI_FR_RBOF_MASK                     (0x20000U)
#define QuadSPI_FR_RBOF_SHIFT                    (17U)
#define QuadSPI_FR_RBOF_WIDTH                    (1U)
#define QuadSPI_FR_RBOF(x)                       (((uint32_t)(((uint32_t)(x)) << QuadSPI_FR_RBOF_SHIFT)) & QuadSPI_FR_RBOF_MASK)
#define QuadSPI_FR_ILLINE_MASK                   (0x800000U)
#define QuadSPI_FR_ILLINE_SHIFT                  (23U)
#define QuadSPI_FR_ILLINE_WIDTH                  (1U)
#define QuadSPI_FR_ILLINE(x)                     (((uint32_t)(((uint32_t)(x)) << QuadSPI_FR_ILLINE_SHIFT)) & QuadSPI_FR_ILLINE_MASK)
#define QuadSPI_FR_DLLUNLCK_MASK                 (0x1000000U)
#define QuadSPI_FR_DLLUNLCK_SHIFT                (24U)
#define QuadSPI_FR_DLLUNLCK_WIDTH                (1U)
#define QuadSPI_FR_DLLUNLCK(x)                   (((uint32_t)(((uint32_t)(x)) << QuadSPI_FR_DLLUNLCK_SHIFT)) & QuadSPI_FR_DLLUNLCK_MASK)
#define QuadSPI_FR_TBUF_MASK                     (0x4000000U)
#define QuadSPI_FR_TBUF_SHIFT                    (26U)
#define QuadSPI_FR_TBUF_WIDTH                    (1U)
#define QuadSPI_FR_TBUF(x)                       (((uint32_t)(((uint32_t)(x)) << QuadSPI_FR_TBUF_SHIFT)) & QuadSPI_FR_TBUF_MASK)
#define QuadSPI_FR_TBFF_MASK                     (0x8000000U)
#define QuadSPI_FR_TBFF_SHIFT                    (27U)
#define QuadSPI_FR_TBFF_WIDTH                    (1U)
#define QuadSPI_FR_TBFF(x)                       (((uint32_t)(((uint32_t)(x)) << QuadSPI_FR_TBFF_SHIFT)) & QuadSPI_FR_TBFF_MASK)
#define QuadSPI_FR_DLLABRT_MASK                  (0x10000000U)
#define QuadSPI_FR_DLLABRT_SHIFT                 (28U)
#define QuadSPI_FR_DLLABRT_WIDTH                 (1U)
#define QuadSPI_FR_DLLABRT(x)                    (((uint32_t)(((uint32_t)(x)) << QuadSPI_FR_DLLABRT_SHIFT)) & QuadSPI_FR_DLLABRT_MASK)
#define QuadSPI_FR_DLPFF_MASK                    (0x80000000U)
#define QuadSPI_FR_DLPFF_SHIFT                   (31U)
#define QuadSPI_FR_DLPFF_WIDTH                   (1U)
#define QuadSPI_FR_DLPFF(x)                      (((uint32_t)(((uint32_t)(x)) << QuadSPI_FR_DLPFF_SHIFT)) & QuadSPI_FR_DLPFF_MASK)
/*! @} */

/*! @name RSER - Interrupt and DMA Request Select and Enable Register */
/*! @{ */
#define QuadSPI_RSER_TFIE_MASK                   (0x1U)
#define QuadSPI_RSER_TFIE_SHIFT                  (0U)
#define QuadSPI_RSER_TFIE_WIDTH                  (1U)
#define QuadSPI_RSER_TFIE(x)                     (((uint32_t)(((uint32_t)(x)) << QuadSPI_RSER_TFIE_SHIFT)) & QuadSPI_RSER_TFIE_MASK)
#define QuadSPI_RSER_IPIEIE_MASK                 (0x40U)
#define QuadSPI_RSER_IPIEIE_SHIFT                (6U)
#define QuadSPI_RSER_IPIEIE_WIDTH                (1U)
#define QuadSPI_RSER_IPIEIE(x)                   (((uint32_t)(((uint32_t)(x)) << QuadSPI_RSER_IPIEIE_SHIFT)) & QuadSPI_RSER_IPIEIE_MASK)
#define QuadSPI_RSER_IPAEIE_MASK                 (0x80U)
#define QuadSPI_RSER_IPAEIE_SHIFT                (7U)
#define QuadSPI_RSER_IPAEIE_WIDTH                (1U)
#define QuadSPI_RSER_IPAEIE(x)                   (((uint32_t)(((uint32_t)(x)) << QuadSPI_RSER_IPAEIE_SHIFT)) & QuadSPI_RSER_IPAEIE_MASK)
#define QuadSPI_RSER_PPWIE_MASK                  (0x100U)
#define QuadSPI_RSER_PPWIE_SHIFT                 (8U)
#define QuadSPI_RSER_PPWIE_WIDTH                 (1U)
#define QuadSPI_RSER_PPWIE(x)                    (((uint32_t)(((uint32_t)(x)) << QuadSPI_RSER_PPWIE_SHIFT)) & QuadSPI_RSER_PPWIE_MASK)
#define QuadSPI_RSER_CRCBIE_MASK                 (0x200U)
#define QuadSPI_RSER_CRCBIE_SHIFT                (9U)
#define QuadSPI_RSER_CRCBIE_WIDTH                (1U)
#define QuadSPI_RSER_CRCBIE(x)                   (((uint32_t)(((uint32_t)(x)) << QuadSPI_RSER_CRCBIE_SHIFT)) & QuadSPI_RSER_CRCBIE_MASK)
#define QuadSPI_RSER_CRCAIE_MASK                 (0x400U)
#define QuadSPI_RSER_CRCAIE_SHIFT                (10U)
#define QuadSPI_RSER_CRCAIE_WIDTH                (1U)
#define QuadSPI_RSER_CRCAIE(x)                   (((uint32_t)(((uint32_t)(x)) << QuadSPI_RSER_CRCAIE_SHIFT)) & QuadSPI_RSER_CRCAIE_MASK)
#define QuadSPI_RSER_IUEIE_MASK                  (0x800U)
#define QuadSPI_RSER_IUEIE_SHIFT                 (11U)
#define QuadSPI_RSER_IUEIE_WIDTH                 (1U)
#define QuadSPI_RSER_IUEIE(x)                    (((uint32_t)(((uint32_t)(x)) << QuadSPI_RSER_IUEIE_SHIFT)) & QuadSPI_RSER_IUEIE_MASK)
#define QuadSPI_RSER_ABOIE_MASK                  (0x1000U)
#define QuadSPI_RSER_ABOIE_SHIFT                 (12U)
#define QuadSPI_RSER_ABOIE_WIDTH                 (1U)
#define QuadSPI_RSER_ABOIE(x)                    (((uint32_t)(((uint32_t)(x)) << QuadSPI_RSER_ABOIE_SHIFT)) & QuadSPI_RSER_ABOIE_MASK)
#define QuadSPI_RSER_AIBSIE_MASK                 (0x2000U)
#define QuadSPI_RSER_AIBSIE_SHIFT                (13U)
#define QuadSPI_RSER_AIBSIE_WIDTH                (1U)
#define QuadSPI_RSER_AIBSIE(x)                   (((uint32_t)(((uint32_t)(x)) << QuadSPI_RSER_AIBSIE_SHIFT)) & QuadSPI_RSER_AIBSIE_MASK)
#define QuadSPI_RSER_AITIE_MASK                  (0x4000U)
#define QuadSPI_RSER_AITIE_SHIFT                 (14U)
#define QuadSPI_RSER_AITIE_WIDTH                 (1U)
#define QuadSPI_RSER_AITIE(x)                    (((uint32_t)(((uint32_t)(x)) << QuadSPI_RSER_AITIE_SHIFT)) & QuadSPI_RSER_AITIE_MASK)
#define QuadSPI_RSER_AAIE_MASK                   (0x8000U)
#define QuadSPI_RSER_AAIE_SHIFT                  (15U)
#define QuadSPI_RSER_AAIE_WIDTH                  (1U)
#define QuadSPI_RSER_AAIE(x)                     (((uint32_t)(((uint32_t)(x)) << QuadSPI_RSER_AAIE_SHIFT)) & QuadSPI_RSER_AAIE_MASK)
#define QuadSPI_RSER_RBDIE_MASK                  (0x10000U)
#define QuadSPI_RSER_RBDIE_SHIFT                 (16U)
#define QuadSPI_RSER_RBDIE_WIDTH                 (1U)
#define QuadSPI_RSER_RBDIE(x)                    (((uint32_t)(((uint32_t)(x)) << QuadSPI_RSER_RBDIE_SHIFT)) & QuadSPI_RSER_RBDIE_MASK)
#define QuadSPI_RSER_RBOIE_MASK                  (0x20000U)
#define QuadSPI_RSER_RBOIE_SHIFT                 (17U)
#define QuadSPI_RSER_RBOIE_WIDTH                 (1U)
#define QuadSPI_RSER_RBOIE(x)                    (((uint32_t)(((uint32_t)(x)) << QuadSPI_RSER_RBOIE_SHIFT)) & QuadSPI_RSER_RBOIE_MASK)
#define QuadSPI_RSER_RBDDE_MASK                  (0x200000U)
#define QuadSPI_RSER_RBDDE_SHIFT                 (21U)
#define QuadSPI_RSER_RBDDE_WIDTH                 (1U)
#define QuadSPI_RSER_RBDDE(x)                    (((uint32_t)(((uint32_t)(x)) << QuadSPI_RSER_RBDDE_SHIFT)) & QuadSPI_RSER_RBDDE_MASK)
#define QuadSPI_RSER_ILLINIE_MASK                (0x800000U)
#define QuadSPI_RSER_ILLINIE_SHIFT               (23U)
#define QuadSPI_RSER_ILLINIE_WIDTH               (1U)
#define QuadSPI_RSER_ILLINIE(x)                  (((uint32_t)(((uint32_t)(x)) << QuadSPI_RSER_ILLINIE_SHIFT)) & QuadSPI_RSER_ILLINIE_MASK)
#define QuadSPI_RSER_DLLULIE_MASK                (0x1000000U)
#define QuadSPI_RSER_DLLULIE_SHIFT               (24U)
#define QuadSPI_RSER_DLLULIE_WIDTH               (1U)
#define QuadSPI_RSER_DLLULIE(x)                  (((uint32_t)(((uint32_t)(x)) << QuadSPI_RSER_DLLULIE_SHIFT)) & QuadSPI_RSER_DLLULIE_MASK)
#define QuadSPI_RSER_TBFDE_MASK                  (0x2000000U)
#define QuadSPI_RSER_TBFDE_SHIFT                 (25U)
#define QuadSPI_RSER_TBFDE_WIDTH                 (1U)
#define QuadSPI_RSER_TBFDE(x)                    (((uint32_t)(((uint32_t)(x)) << QuadSPI_RSER_TBFDE_SHIFT)) & QuadSPI_RSER_TBFDE_MASK)
#define QuadSPI_RSER_TBUIE_MASK                  (0x4000000U)
#define QuadSPI_RSER_TBUIE_SHIFT                 (26U)
#define QuadSPI_RSER_TBUIE_WIDTH                 (1U)
#define QuadSPI_RSER_TBUIE(x)                    (((uint32_t)(((uint32_t)(x)) << QuadSPI_RSER_TBUIE_SHIFT)) & QuadSPI_RSER_TBUIE_MASK)
#define QuadSPI_RSER_TBFIE_MASK                  (0x8000000U)
#define QuadSPI_RSER_TBFIE_SHIFT                 (27U)
#define QuadSPI_RSER_TBFIE_WIDTH                 (1U)
#define QuadSPI_RSER_TBFIE(x)                    (((uint32_t)(((uint32_t)(x)) << QuadSPI_RSER_TBFIE_SHIFT)) & QuadSPI_RSER_TBFIE_MASK)
#define QuadSPI_RSER_DLPFIE_MASK                 (0x80000000U)
#define QuadSPI_RSER_DLPFIE_SHIFT                (31U)
#define QuadSPI_RSER_DLPFIE_WIDTH                (1U)
#define QuadSPI_RSER_DLPFIE(x)                   (((uint32_t)(((uint32_t)(x)) << QuadSPI_RSER_DLPFIE_SHIFT)) & QuadSPI_RSER_DLPFIE_MASK)
/*! @} */

/*! @name SPTRCLR - Sequence Pointer Clear Register */
/*! @{ */
#define QuadSPI_SPTRCLR_BFPTRC_MASK              (0x1U)
#define QuadSPI_SPTRCLR_BFPTRC_SHIFT             (0U)
#define QuadSPI_SPTRCLR_BFPTRC_WIDTH             (1U)
#define QuadSPI_SPTRCLR_BFPTRC(x)                (((uint32_t)(((uint32_t)(x)) << QuadSPI_SPTRCLR_BFPTRC_SHIFT)) & QuadSPI_SPTRCLR_BFPTRC_MASK)
#define QuadSPI_SPTRCLR_IPPTRC_MASK              (0x100U)
#define QuadSPI_SPTRCLR_IPPTRC_SHIFT             (8U)
#define QuadSPI_SPTRCLR_IPPTRC_WIDTH             (1U)
#define QuadSPI_SPTRCLR_IPPTRC(x)                (((uint32_t)(((uint32_t)(x)) << QuadSPI_SPTRCLR_IPPTRC_SHIFT)) & QuadSPI_SPTRCLR_IPPTRC_MASK)
#define QuadSPI_SPTRCLR_ABRT_CLR_MASK            (0x10000U)
#define QuadSPI_SPTRCLR_ABRT_CLR_SHIFT           (16U)
#define QuadSPI_SPTRCLR_ABRT_CLR_WIDTH           (1U)
#define QuadSPI_SPTRCLR_ABRT_CLR(x)              (((uint32_t)(((uint32_t)(x)) << QuadSPI_SPTRCLR_ABRT_CLR_SHIFT)) & QuadSPI_SPTRCLR_ABRT_CLR_MASK)
#define QuadSPI_SPTRCLR_PREFETCH_DIS_MASK        (0x20000U)
#define QuadSPI_SPTRCLR_PREFETCH_DIS_SHIFT       (17U)
#define QuadSPI_SPTRCLR_PREFETCH_DIS_WIDTH       (1U)
#define QuadSPI_SPTRCLR_PREFETCH_DIS(x)          (((uint32_t)(((uint32_t)(x)) << QuadSPI_SPTRCLR_PREFETCH_DIS_SHIFT)) & QuadSPI_SPTRCLR_PREFETCH_DIS_MASK)
/*! @} */

/*! @name SFA1AD - Serial Flash Memory A1 Top Address Register */
/*! @{ */
#define QuadSPI_SFA1AD_TPADA1_MASK               (0xFFFFFC00U)
#define QuadSPI_SFA1AD_TPADA1_SHIFT              (10U)
#define QuadSPI_SFA1AD_TPADA1_WIDTH              (22U)
#define QuadSPI_SFA1AD_TPADA1(x)                 (((uint32_t)(((uint32_t)(x)) << QuadSPI_SFA1AD_TPADA1_SHIFT)) & QuadSPI_SFA1AD_TPADA1_MASK)
/*! @} */

/*! @name SFA2AD - Serial Flash Memory A2 Top Address Register */
/*! @{ */
#define QuadSPI_SFA2AD_TPADA2_MASK               (0xFFFFFC00U)
#define QuadSPI_SFA2AD_TPADA2_SHIFT              (10U)
#define QuadSPI_SFA2AD_TPADA2_WIDTH              (22U)
#define QuadSPI_SFA2AD_TPADA2(x)                 (((uint32_t)(((uint32_t)(x)) << QuadSPI_SFA2AD_TPADA2_SHIFT)) & QuadSPI_SFA2AD_TPADA2_MASK)
/*! @} */

/*! @name SFB1AD - Serial Flash Memory B1 Top Address Register */
/*! @{ */
#define QuadSPI_SFB1AD_TPADB1_MASK               (0xFFFFFC00U)
#define QuadSPI_SFB1AD_TPADB1_SHIFT              (10U)
#define QuadSPI_SFB1AD_TPADB1_WIDTH              (22U)
#define QuadSPI_SFB1AD_TPADB1(x)                 (((uint32_t)(((uint32_t)(x)) << QuadSPI_SFB1AD_TPADB1_SHIFT)) & QuadSPI_SFB1AD_TPADB1_MASK)
/*! @} */

/*! @name SFB2AD - Serial Flash Memory B2 Top Address Register */
/*! @{ */
#define QuadSPI_SFB2AD_TPADB2_MASK               (0xFFFFFC00U)
#define QuadSPI_SFB2AD_TPADB2_SHIFT              (10U)
#define QuadSPI_SFB2AD_TPADB2_WIDTH              (22U)
#define QuadSPI_SFB2AD_TPADB2(x)                 (((uint32_t)(((uint32_t)(x)) << QuadSPI_SFB2AD_TPADB2_SHIFT)) & QuadSPI_SFB2AD_TPADB2_MASK)
/*! @} */

/*! @name DLPR - Data Learn Pattern Register */
/*! @{ */
#define QuadSPI_DLPR_DLPV_MASK                   (0xFFFFFFFFU)
#define QuadSPI_DLPR_DLPV_SHIFT                  (0U)
#define QuadSPI_DLPR_DLPV_WIDTH                  (32U)
#define QuadSPI_DLPR_DLPV(x)                     (((uint32_t)(((uint32_t)(x)) << QuadSPI_DLPR_DLPV_SHIFT)) & QuadSPI_DLPR_DLPV_MASK)
/*! @} */

/*! @name RBDR - RX Buffer Data Register */
/*! @{ */
#define QuadSPI_RBDR_RXDATA_MASK                 (0xFFFFFFFFU)
#define QuadSPI_RBDR_RXDATA_SHIFT                (0U)
#define QuadSPI_RBDR_RXDATA_WIDTH                (32U)
#define QuadSPI_RBDR_RXDATA(x)                   (((uint32_t)(((uint32_t)(x)) << QuadSPI_RBDR_RXDATA_SHIFT)) & QuadSPI_RBDR_RXDATA_MASK)
/*! @} */

/*! @name LUTKEY - LUT Key Register */
/*! @{ */
#define QuadSPI_LUTKEY_KEY_MASK                  (0xFFFFFFFFU)
#define QuadSPI_LUTKEY_KEY_SHIFT                 (0U)
#define QuadSPI_LUTKEY_KEY_WIDTH                 (32U)
#define QuadSPI_LUTKEY_KEY(x)                    (((uint32_t)(((uint32_t)(x)) << QuadSPI_LUTKEY_KEY_SHIFT)) & QuadSPI_LUTKEY_KEY_MASK)
/*! @} */

/*! @name LCKCR - LUT Lock Configuration Register */
/*! @{ */
#define QuadSPI_LCKCR_LOCK_MASK                  (0x1U)
#define QuadSPI_LCKCR_LOCK_SHIFT                 (0U)
#define QuadSPI_LCKCR_LOCK_WIDTH                 (1U)
#define QuadSPI_LCKCR_LOCK(x)                    (((uint32_t)(((uint32_t)(x)) << QuadSPI_LCKCR_LOCK_SHIFT)) & QuadSPI_LCKCR_LOCK_MASK)
#define QuadSPI_LCKCR_UNLOCK_MASK                (0x2U)
#define QuadSPI_LCKCR_UNLOCK_SHIFT               (1U)
#define QuadSPI_LCKCR_UNLOCK_WIDTH               (1U)
#define QuadSPI_LCKCR_UNLOCK(x)                  (((uint32_t)(((uint32_t)(x)) << QuadSPI_LCKCR_UNLOCK_SHIFT)) & QuadSPI_LCKCR_UNLOCK_MASK)
/*! @} */

/*! @name LUT - LUT Register */
/*! @{ */
#define QuadSPI_LUT_OPRND0_MASK                  (0xFFU)
#define QuadSPI_LUT_OPRND0_SHIFT                 (0U)
#define QuadSPI_LUT_OPRND0_WIDTH                 (8U)
#define QuadSPI_LUT_OPRND0(x)                    (((uint32_t)(((uint32_t)(x)) << QuadSPI_LUT_OPRND0_SHIFT)) & QuadSPI_LUT_OPRND0_MASK)
#define QuadSPI_LUT_PAD0_MASK                    (0x300U)
#define QuadSPI_LUT_PAD0_SHIFT                   (8U)
#define QuadSPI_LUT_PAD0_WIDTH                   (2U)
#define QuadSPI_LUT_PAD0(x)                      (((uint32_t)(((uint32_t)(x)) << QuadSPI_LUT_PAD0_SHIFT)) & QuadSPI_LUT_PAD0_MASK)
#define QuadSPI_LUT_INSTR0_MASK                  (0xFC00U)
#define QuadSPI_LUT_INSTR0_SHIFT                 (10U)
#define QuadSPI_LUT_INSTR0_WIDTH                 (6U)
#define QuadSPI_LUT_INSTR0(x)                    (((uint32_t)(((uint32_t)(x)) << QuadSPI_LUT_INSTR0_SHIFT)) & QuadSPI_LUT_INSTR0_MASK)
#define QuadSPI_LUT_OPRND1_MASK                  (0xFF0000U)
#define QuadSPI_LUT_OPRND1_SHIFT                 (16U)
#define QuadSPI_LUT_OPRND1_WIDTH                 (8U)
#define QuadSPI_LUT_OPRND1(x)                    (((uint32_t)(((uint32_t)(x)) << QuadSPI_LUT_OPRND1_SHIFT)) & QuadSPI_LUT_OPRND1_MASK)
#define QuadSPI_LUT_PAD1_MASK                    (0x3000000U)
#define QuadSPI_LUT_PAD1_SHIFT                   (24U)
#define QuadSPI_LUT_PAD1_WIDTH                   (2U)
#define QuadSPI_LUT_PAD1(x)                      (((uint32_t)(((uint32_t)(x)) << QuadSPI_LUT_PAD1_SHIFT)) & QuadSPI_LUT_PAD1_MASK)
#define QuadSPI_LUT_INSTR1_MASK                  (0xFC000000U)
#define QuadSPI_LUT_INSTR1_SHIFT                 (26U)
#define QuadSPI_LUT_INSTR1_WIDTH                 (6U)
#define QuadSPI_LUT_INSTR1(x)                    (((uint32_t)(((uint32_t)(x)) << QuadSPI_LUT_INSTR1_SHIFT)) & QuadSPI_LUT_INSTR1_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group QuadSPI_Register_Masks */


/*!
 * @}
 */ /* end of group QuadSPI_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- QuadSPI_ARDB Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup QuadSPI_ARDB_Peripheral_Access_Layer QuadSPI_ARDB Peripheral Access Layer
 * @{
 */

/** QuadSPI_ARDB - Size of Registers Arrays */
#define QuadSPI_ARDB_ARDB_COUNT                   128u

/** QuadSPI_ARDB - Register Layout Typedef */
typedef struct {
  __I  uint32_t ARDB[QuadSPI_ARDB_ARDB_COUNT];     /**< AHB RX Data Buffer Register, array offset: 0x0, array step: 0x4 */
} QuadSPI_ARDB_Type, *QuadSPI_ARDB_MemMapPtr;

/** Number of instances of the QuadSPI_ARDB module. */
#define QuadSPI_ARDB_INSTANCE_COUNT              (1u)

/* QuadSPI_ARDB - Peripheral instance base addresses */
/** Peripheral QUADSPI_ARDB base address */
#define QUADSPI_ARDB_BASE                        (0x41000000u)
/** Peripheral QUADSPI_ARDB base pointer */
#define QUADSPI_ARDB                             ((QuadSPI_ARDB_Type *)QUADSPI_ARDB_BASE)
/** Array initializer of QuadSPI_ARDB peripheral base addresses */
#define QuadSPI_ARDB_BASE_ADDRS                  { QUADSPI_ARDB_BASE }
/** Array initializer of QuadSPI_ARDB peripheral base pointers */
#define QuadSPI_ARDB_BASE_PTRS                   { QUADSPI_ARDB }

/* ----------------------------------------------------------------------------
   -- QuadSPI_ARDB Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup QuadSPI_ARDB_Register_Masks QuadSPI_ARDB Register Masks
 * @{
 */

/*! @name ARDB - AHB RX Data Buffer Register */
/*! @{ */
#define QuadSPI_ARDB_ARDB_ARXD_MASK              (0xFFFFFFFFU)
#define QuadSPI_ARDB_ARDB_ARXD_SHIFT             (0U)
#define QuadSPI_ARDB_ARDB_ARXD_WIDTH             (32U)
#define QuadSPI_ARDB_ARDB_ARXD(x)                (((uint32_t)(((uint32_t)(x)) << QuadSPI_ARDB_ARDB_ARXD_SHIFT)) & QuadSPI_ARDB_ARDB_ARXD_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group QuadSPI_ARDB_Register_Masks */


/*!
 * @}
 */ /* end of group QuadSPI_ARDB_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- REGISTER_PROTECTION Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup REGISTER_PROTECTION_Peripheral_Access_Layer REGISTER_PROTECTION Peripheral Access Layer
 * @{
 */

/** REGISTER_PROTECTION - Register Layout Typedef */
typedef struct {
  __IO uint8_t SLBRN;                              /**< Soft Lock Bit Register, offset: 0x0 */
  uint8_t RESERVED_0[2303];
  __IO uint32_t GCR;                               /**< Global Configuration Register, offset: 0x900 */
} REGISTER_PROTECTION_Type, *REGISTER_PROTECTION_MemMapPtr;

/** Number of instances of the REGISTER_PROTECTION module. */
#define REGISTER_PROTECTION_INSTANCE_COUNT       (1u)

/* REGISTER_PROTECTION - Peripheral instance base addresses */
/** Peripheral REG_PROT base address */
#define REG_PROT_BASE                            (0u)
/** Peripheral REG_PROT base pointer */
#define REG_PROT                                 ((REGISTER_PROTECTION_Type *)REG_PROT_BASE)
/** Array initializer of REGISTER_PROTECTION peripheral base addresses */
#define REGISTER_PROTECTION_BASE_ADDRS           { REG_PROT_BASE }
/** Array initializer of REGISTER_PROTECTION peripheral base pointers */
#define REGISTER_PROTECTION_BASE_PTRS            { REG_PROT }

/* ----------------------------------------------------------------------------
   -- REGISTER_PROTECTION Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup REGISTER_PROTECTION_Register_Masks REGISTER_PROTECTION Register Masks
 * @{
 */

/*! @name SLBRN - Soft Lock Bit Register */
/*! @{ */
#define REGISTER_PROTECTION_SLBR_SLB3_MASK       (0x1U)
#define REGISTER_PROTECTION_SLBR_SLB3_SHIFT      (0U)
#define REGISTER_PROTECTION_SLBR_SLB3_WIDTH      (1U)
#define REGISTER_PROTECTION_SLBR_SLB3(x)         (((uint8_t)(((uint8_t)(x)) << REGISTER_PROTECTION_SLBR_SLB3_SHIFT)) & REGISTER_PROTECTION_SLBR_SLB3_MASK)
#define REGISTER_PROTECTION_SLBR_SLB2_MASK       (0x2U)
#define REGISTER_PROTECTION_SLBR_SLB2_SHIFT      (1U)
#define REGISTER_PROTECTION_SLBR_SLB2_WIDTH      (1U)
#define REGISTER_PROTECTION_SLBR_SLB2(x)         (((uint8_t)(((uint8_t)(x)) << REGISTER_PROTECTION_SLBR_SLB2_SHIFT)) & REGISTER_PROTECTION_SLBR_SLB2_MASK)
#define REGISTER_PROTECTION_SLBR_SLB1_MASK       (0x4U)
#define REGISTER_PROTECTION_SLBR_SLB1_SHIFT      (2U)
#define REGISTER_PROTECTION_SLBR_SLB1_WIDTH      (1U)
#define REGISTER_PROTECTION_SLBR_SLB1(x)         (((uint8_t)(((uint8_t)(x)) << REGISTER_PROTECTION_SLBR_SLB1_SHIFT)) & REGISTER_PROTECTION_SLBR_SLB1_MASK)
#define REGISTER_PROTECTION_SLBR_SLB0_MASK       (0x8U)
#define REGISTER_PROTECTION_SLBR_SLB0_SHIFT      (3U)
#define REGISTER_PROTECTION_SLBR_SLB0_WIDTH      (1U)
#define REGISTER_PROTECTION_SLBR_SLB0(x)         (((uint8_t)(((uint8_t)(x)) << REGISTER_PROTECTION_SLBR_SLB0_SHIFT)) & REGISTER_PROTECTION_SLBR_SLB0_MASK)
#define REGISTER_PROTECTION_SLBR_WE3_MASK        (0x10U)
#define REGISTER_PROTECTION_SLBR_WE3_SHIFT       (4U)
#define REGISTER_PROTECTION_SLBR_WE3_WIDTH       (1U)
#define REGISTER_PROTECTION_SLBR_WE3(x)          (((uint8_t)(((uint8_t)(x)) << REGISTER_PROTECTION_SLBR_WE3_SHIFT)) & REGISTER_PROTECTION_SLBR_WE3_MASK)
#define REGISTER_PROTECTION_SLBR_WE2_MASK        (0x20U)
#define REGISTER_PROTECTION_SLBR_WE2_SHIFT       (5U)
#define REGISTER_PROTECTION_SLBR_WE2_WIDTH       (1U)
#define REGISTER_PROTECTION_SLBR_WE2(x)          (((uint8_t)(((uint8_t)(x)) << REGISTER_PROTECTION_SLBR_WE2_SHIFT)) & REGISTER_PROTECTION_SLBR_WE2_MASK)
#define REGISTER_PROTECTION_SLBR_WE1_MASK        (0x40U)
#define REGISTER_PROTECTION_SLBR_WE1_SHIFT       (6U)
#define REGISTER_PROTECTION_SLBR_WE1_WIDTH       (1U)
#define REGISTER_PROTECTION_SLBR_WE1(x)          (((uint8_t)(((uint8_t)(x)) << REGISTER_PROTECTION_SLBR_WE1_SHIFT)) & REGISTER_PROTECTION_SLBR_WE1_MASK)
#define REGISTER_PROTECTION_SLBR_WE0_MASK        (0x80U)
#define REGISTER_PROTECTION_SLBR_WE0_SHIFT       (7U)
#define REGISTER_PROTECTION_SLBR_WE0_WIDTH       (1U)
#define REGISTER_PROTECTION_SLBR_WE0(x)          (((uint8_t)(((uint8_t)(x)) << REGISTER_PROTECTION_SLBR_WE0_SHIFT)) & REGISTER_PROTECTION_SLBR_WE0_MASK)
/*! @} */

/*! @name GCR - Global Configuration Register */
/*! @{ */
#define REGISTER_PROTECTION_GCR_UAA_MASK         (0x800000U)
#define REGISTER_PROTECTION_GCR_UAA_SHIFT        (23U)
#define REGISTER_PROTECTION_GCR_UAA_WIDTH        (1U)
#define REGISTER_PROTECTION_GCR_UAA(x)           (((uint32_t)(((uint32_t)(x)) << REGISTER_PROTECTION_GCR_UAA_SHIFT)) & REGISTER_PROTECTION_GCR_UAA_MASK)
#define REGISTER_PROTECTION_GCR_HLB_MASK         (0x80000000U)
#define REGISTER_PROTECTION_GCR_HLB_SHIFT        (31U)
#define REGISTER_PROTECTION_GCR_HLB_WIDTH        (1U)
#define REGISTER_PROTECTION_GCR_HLB(x)           (((uint32_t)(((uint32_t)(x)) << REGISTER_PROTECTION_GCR_HLB_SHIFT)) & REGISTER_PROTECTION_GCR_HLB_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group REGISTER_PROTECTION_Register_Masks */


/*!
 * @}
 */ /* end of group REGISTER_PROTECTION_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- RESET Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup RESET_Peripheral_Access_Layer RESET Peripheral Access Layer
 * @{
 */

/** RESET - Register Layout Typedef */
typedef struct {
  uint8_t RESERVED_0[4];
  __IO uint32_t RD1_CTRL_REG;                      /**< Software Reset Domain 1 control register, offset: 0x4 */
  __IO uint32_t RD2_CTRL_REG;                      /**< Software Reset Domain 2 control register, offset: 0x8 */
  __IO uint32_t RD3_CTRL_REG;                      /**< Software Reset Domain 3 control register, offset: 0xC */
  uint8_t RESERVED_1[116];
  __I  uint32_t RD1_STAT_REG;                      /**< Software Reset Domain 1 status register, offset: 0x84 */
  __I  uint32_t RD2_STAT_REG;                      /**< Software Reset Domain 2 status register, offset: 0x88 */
  __I  uint32_t RD3_STAT_REG;                      /**< Software Reset Domain 3 status register, offset: 0x8C */
} RESET_Type, *RESET_MemMapPtr;

/** Number of instances of the RESET module. */
#define RESET_INSTANCE_COUNT                     (1u)

/* RESET - Peripheral instance base addresses */
/** Peripheral RDC base address */
#define RDC_BASE                                 (0x40080000u)
/** Peripheral RDC base pointer */
#define RDC                                      ((RESET_Type *)RDC_BASE)
/** Array initializer of RESET peripheral base addresses */
#define RESET_BASE_ADDRS                         { RDC_BASE }
/** Array initializer of RESET peripheral base pointers */
#define RESET_BASE_PTRS                          { RDC }

/* ----------------------------------------------------------------------------
   -- RESET Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup RESET_Register_Masks RESET Register Masks
 * @{
 */

/*! @name RD1_CTRL_REG - Software Reset Domain 1 control register */
/*! @{ */
#define RESET_RD1_CTRL_REG_RD1_INTERCONNECT_INTERFACE_DISABLE_MASK (0x8U)
#define RESET_RD1_CTRL_REG_RD1_INTERCONNECT_INTERFACE_DISABLE_SHIFT (3U)
#define RESET_RD1_CTRL_REG_RD1_INTERCONNECT_INTERFACE_DISABLE_WIDTH (1U)
#define RESET_RD1_CTRL_REG_RD1_INTERCONNECT_INTERFACE_DISABLE(x) (((uint32_t)(((uint32_t)(x)) << RESET_RD1_CTRL_REG_RD1_INTERCONNECT_INTERFACE_DISABLE_SHIFT)) & RESET_RD1_CTRL_REG_RD1_INTERCONNECT_INTERFACE_DISABLE_MASK)
#define RESET_RD1_CTRL_REG_RD1_CTRL_UNLOCK_MASK  (0x80000000U)
#define RESET_RD1_CTRL_REG_RD1_CTRL_UNLOCK_SHIFT (31U)
#define RESET_RD1_CTRL_REG_RD1_CTRL_UNLOCK_WIDTH (1U)
#define RESET_RD1_CTRL_REG_RD1_CTRL_UNLOCK(x)    (((uint32_t)(((uint32_t)(x)) << RESET_RD1_CTRL_REG_RD1_CTRL_UNLOCK_SHIFT)) & RESET_RD1_CTRL_REG_RD1_CTRL_UNLOCK_MASK)
/*! @} */

/*! @name RD2_CTRL_REG - Software Reset Domain 2 control register */
/*! @{ */
#define RESET_RD2_CTRL_REG_RD2_INTERCONNECT_INTERFACE_DISABLE_MASK (0x8U)
#define RESET_RD2_CTRL_REG_RD2_INTERCONNECT_INTERFACE_DISABLE_SHIFT (3U)
#define RESET_RD2_CTRL_REG_RD2_INTERCONNECT_INTERFACE_DISABLE_WIDTH (1U)
#define RESET_RD2_CTRL_REG_RD2_INTERCONNECT_INTERFACE_DISABLE(x) (((uint32_t)(((uint32_t)(x)) << RESET_RD2_CTRL_REG_RD2_INTERCONNECT_INTERFACE_DISABLE_SHIFT)) & RESET_RD2_CTRL_REG_RD2_INTERCONNECT_INTERFACE_DISABLE_MASK)
#define RESET_RD2_CTRL_REG_RD2_CTRL_UNLOCK_MASK  (0x80000000U)
#define RESET_RD2_CTRL_REG_RD2_CTRL_UNLOCK_SHIFT (31U)
#define RESET_RD2_CTRL_REG_RD2_CTRL_UNLOCK_WIDTH (1U)
#define RESET_RD2_CTRL_REG_RD2_CTRL_UNLOCK(x)    (((uint32_t)(((uint32_t)(x)) << RESET_RD2_CTRL_REG_RD2_CTRL_UNLOCK_SHIFT)) & RESET_RD2_CTRL_REG_RD2_CTRL_UNLOCK_MASK)
/*! @} */

/*! @name RD3_CTRL_REG - Software Reset Domain 3 control register */
/*! @{ */
#define RESET_RD3_CTRL_REG_RD3_INTERCONNECT_INTERFACE_DISABLE_MASK (0x8U)
#define RESET_RD3_CTRL_REG_RD3_INTERCONNECT_INTERFACE_DISABLE_SHIFT (3U)
#define RESET_RD3_CTRL_REG_RD3_INTERCONNECT_INTERFACE_DISABLE_WIDTH (1U)
#define RESET_RD3_CTRL_REG_RD3_INTERCONNECT_INTERFACE_DISABLE(x) (((uint32_t)(((uint32_t)(x)) << RESET_RD3_CTRL_REG_RD3_INTERCONNECT_INTERFACE_DISABLE_SHIFT)) & RESET_RD3_CTRL_REG_RD3_INTERCONNECT_INTERFACE_DISABLE_MASK)
#define RESET_RD3_CTRL_REG_RD3_CTRL_UNLOCK_MASK  (0x80000000U)
#define RESET_RD3_CTRL_REG_RD3_CTRL_UNLOCK_SHIFT (31U)
#define RESET_RD3_CTRL_REG_RD3_CTRL_UNLOCK_WIDTH (1U)
#define RESET_RD3_CTRL_REG_RD3_CTRL_UNLOCK(x)    (((uint32_t)(((uint32_t)(x)) << RESET_RD3_CTRL_REG_RD3_CTRL_UNLOCK_SHIFT)) & RESET_RD3_CTRL_REG_RD3_CTRL_UNLOCK_MASK)
/*! @} */

/*! @name RD1_STAT_REG - Software Reset Domain 1 status register */
/*! @{ */
#define RESET_RD1_STAT_REG_RD1_INTERCONNECT_INTERFACE_DISABLE_REQ_ACK_STAT_MASK (0x8U)
#define RESET_RD1_STAT_REG_RD1_INTERCONNECT_INTERFACE_DISABLE_REQ_ACK_STAT_SHIFT (3U)
#define RESET_RD1_STAT_REG_RD1_INTERCONNECT_INTERFACE_DISABLE_REQ_ACK_STAT_WIDTH (1U)
#define RESET_RD1_STAT_REG_RD1_INTERCONNECT_INTERFACE_DISABLE_REQ_ACK_STAT(x) (((uint32_t)(((uint32_t)(x)) << RESET_RD1_STAT_REG_RD1_INTERCONNECT_INTERFACE_DISABLE_REQ_ACK_STAT_SHIFT)) & RESET_RD1_STAT_REG_RD1_INTERCONNECT_INTERFACE_DISABLE_REQ_ACK_STAT_MASK)
#define RESET_RD1_STAT_REG_RD1_INTERCONNECT_INTERFACE_DISABLE_STAT_MASK (0x10U)
#define RESET_RD1_STAT_REG_RD1_INTERCONNECT_INTERFACE_DISABLE_STAT_SHIFT (4U)
#define RESET_RD1_STAT_REG_RD1_INTERCONNECT_INTERFACE_DISABLE_STAT_WIDTH (1U)
#define RESET_RD1_STAT_REG_RD1_INTERCONNECT_INTERFACE_DISABLE_STAT(x) (((uint32_t)(((uint32_t)(x)) << RESET_RD1_STAT_REG_RD1_INTERCONNECT_INTERFACE_DISABLE_STAT_SHIFT)) & RESET_RD1_STAT_REG_RD1_INTERCONNECT_INTERFACE_DISABLE_STAT_MASK)
/*! @} */

/*! @name RD2_STAT_REG - Software Reset Domain 2 status register */
/*! @{ */
#define RESET_RD2_STAT_REG_RD2_INTERCONNECT_INTERFACE_DISABLE_REQ_ACK_STAT_MASK (0x8U)
#define RESET_RD2_STAT_REG_RD2_INTERCONNECT_INTERFACE_DISABLE_REQ_ACK_STAT_SHIFT (3U)
#define RESET_RD2_STAT_REG_RD2_INTERCONNECT_INTERFACE_DISABLE_REQ_ACK_STAT_WIDTH (1U)
#define RESET_RD2_STAT_REG_RD2_INTERCONNECT_INTERFACE_DISABLE_REQ_ACK_STAT(x) (((uint32_t)(((uint32_t)(x)) << RESET_RD2_STAT_REG_RD2_INTERCONNECT_INTERFACE_DISABLE_REQ_ACK_STAT_SHIFT)) & RESET_RD2_STAT_REG_RD2_INTERCONNECT_INTERFACE_DISABLE_REQ_ACK_STAT_MASK)
#define RESET_RD2_STAT_REG_RD2_INTERCONNECT_INTERFACE_DISABLE_STAT_MASK (0x10U)
#define RESET_RD2_STAT_REG_RD2_INTERCONNECT_INTERFACE_DISABLE_STAT_SHIFT (4U)
#define RESET_RD2_STAT_REG_RD2_INTERCONNECT_INTERFACE_DISABLE_STAT_WIDTH (1U)
#define RESET_RD2_STAT_REG_RD2_INTERCONNECT_INTERFACE_DISABLE_STAT(x) (((uint32_t)(((uint32_t)(x)) << RESET_RD2_STAT_REG_RD2_INTERCONNECT_INTERFACE_DISABLE_STAT_SHIFT)) & RESET_RD2_STAT_REG_RD2_INTERCONNECT_INTERFACE_DISABLE_STAT_MASK)
/*! @} */

/*! @name RD3_STAT_REG - Software Reset Domain 3 status register */
/*! @{ */
#define RESET_RD3_STAT_REG_RD3_INTERCONNECT_INTERFACE_DISABLE_REQ_ACK_STAT_MASK (0x8U)
#define RESET_RD3_STAT_REG_RD3_INTERCONNECT_INTERFACE_DISABLE_REQ_ACK_STAT_SHIFT (3U)
#define RESET_RD3_STAT_REG_RD3_INTERCONNECT_INTERFACE_DISABLE_REQ_ACK_STAT_WIDTH (1U)
#define RESET_RD3_STAT_REG_RD3_INTERCONNECT_INTERFACE_DISABLE_REQ_ACK_STAT(x) (((uint32_t)(((uint32_t)(x)) << RESET_RD3_STAT_REG_RD3_INTERCONNECT_INTERFACE_DISABLE_REQ_ACK_STAT_SHIFT)) & RESET_RD3_STAT_REG_RD3_INTERCONNECT_INTERFACE_DISABLE_REQ_ACK_STAT_MASK)
#define RESET_RD3_STAT_REG_RD3_INTERCONNECT_INTERFACE_DISABLE_STAT_MASK (0x10U)
#define RESET_RD3_STAT_REG_RD3_INTERCONNECT_INTERFACE_DISABLE_STAT_SHIFT (4U)
#define RESET_RD3_STAT_REG_RD3_INTERCONNECT_INTERFACE_DISABLE_STAT_WIDTH (1U)
#define RESET_RD3_STAT_REG_RD3_INTERCONNECT_INTERFACE_DISABLE_STAT(x) (((uint32_t)(((uint32_t)(x)) << RESET_RD3_STAT_REG_RD3_INTERCONNECT_INTERFACE_DISABLE_STAT_SHIFT)) & RESET_RD3_STAT_REG_RD3_INTERCONNECT_INTERFACE_DISABLE_STAT_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group RESET_Register_Masks */


/*!
 * @}
 */ /* end of group RESET_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- RTC Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup RTC_Peripheral_Access_Layer RTC Peripheral Access Layer
 * @{
 */

/** RTC - Register Layout Typedef */
typedef struct {
  __IO uint32_t RTCSUPV;                           /**< RTC Supervisor Control register, offset: 0x0 */
  __IO uint32_t RTCC;                              /**< RTC Control register, offset: 0x4 */
  __IO uint32_t RTCS;                              /**< RTC Status register, offset: 0x8 */
  __I  uint32_t RTCCNT;                            /**< RTC Counter register, offset: 0xC */
  __IO uint32_t APIVAL;                            /**< API Compare Value register, offset: 0x10 */
  __IO uint32_t RTCVAL;                            /**< RTC Compare Value register, offset: 0x14 */
} RTC_Type, *RTC_MemMapPtr;

/** Number of instances of the RTC module. */
#define RTC_INSTANCE_COUNT                       (1u)

/* RTC - Peripheral instance base addresses */
/** Peripheral RTC base address */
#define RTC_BASE                                 (0x40060000u)
/** Peripheral RTC base pointer */
#define RTC                                      ((RTC_Type *)RTC_BASE)
/** Array initializer of RTC peripheral base addresses */
#define RTC_BASE_ADDRS                           { RTC_BASE }
/** Array initializer of RTC peripheral base pointers */
#define RTC_BASE_PTRS                            { RTC }
#define RTC_IRQS                                 { RTC0_IRQn }
#define RTC_API_IRQS                             { RTC0_IRQn }

/* ----------------------------------------------------------------------------
   -- RTC Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup RTC_Register_Masks RTC Register Masks
 * @{
 */

/*! @name RTCSUPV - RTC Supervisor Control register */
/*! @{ */
#define RTC_RTCSUPV_SUPV_MASK                    (0x80000000U)
#define RTC_RTCSUPV_SUPV_SHIFT                   (31U)
#define RTC_RTCSUPV_SUPV_WIDTH                   (1U)
#define RTC_RTCSUPV_SUPV(x)                      (((uint32_t)(((uint32_t)(x)) << RTC_RTCSUPV_SUPV_SHIFT)) & RTC_RTCSUPV_SUPV_MASK)
/*! @} */

/*! @name RTCC - RTC Control register */
/*! @{ */
#define RTC_RTCC_TRIG_EN_MASK                    (0x1U)
#define RTC_RTCC_TRIG_EN_SHIFT                   (0U)
#define RTC_RTCC_TRIG_EN_WIDTH                   (1U)
#define RTC_RTCC_TRIG_EN(x)                      (((uint32_t)(((uint32_t)(x)) << RTC_RTCC_TRIG_EN_SHIFT)) & RTC_RTCC_TRIG_EN_MASK)
#define RTC_RTCC_DIV32EN_MASK                    (0x400U)
#define RTC_RTCC_DIV32EN_SHIFT                   (10U)
#define RTC_RTCC_DIV32EN_WIDTH                   (1U)
#define RTC_RTCC_DIV32EN(x)                      (((uint32_t)(((uint32_t)(x)) << RTC_RTCC_DIV32EN_SHIFT)) & RTC_RTCC_DIV32EN_MASK)
#define RTC_RTCC_DIV512EN_MASK                   (0x800U)
#define RTC_RTCC_DIV512EN_SHIFT                  (11U)
#define RTC_RTCC_DIV512EN_WIDTH                  (1U)
#define RTC_RTCC_DIV512EN(x)                     (((uint32_t)(((uint32_t)(x)) << RTC_RTCC_DIV512EN_SHIFT)) & RTC_RTCC_DIV512EN_MASK)
#define RTC_RTCC_CLKSEL_MASK                     (0x3000U)
#define RTC_RTCC_CLKSEL_SHIFT                    (12U)
#define RTC_RTCC_CLKSEL_WIDTH                    (2U)
#define RTC_RTCC_CLKSEL(x)                       (((uint32_t)(((uint32_t)(x)) << RTC_RTCC_CLKSEL_SHIFT)) & RTC_RTCC_CLKSEL_MASK)
#define RTC_RTCC_APIIE_MASK                      (0x4000U)
#define RTC_RTCC_APIIE_SHIFT                     (14U)
#define RTC_RTCC_APIIE_WIDTH                     (1U)
#define RTC_RTCC_APIIE(x)                        (((uint32_t)(((uint32_t)(x)) << RTC_RTCC_APIIE_SHIFT)) & RTC_RTCC_APIIE_MASK)
#define RTC_RTCC_APIEN_MASK                      (0x8000U)
#define RTC_RTCC_APIEN_SHIFT                     (15U)
#define RTC_RTCC_APIEN_WIDTH                     (1U)
#define RTC_RTCC_APIEN(x)                        (((uint32_t)(((uint32_t)(x)) << RTC_RTCC_APIEN_SHIFT)) & RTC_RTCC_APIEN_MASK)
#define RTC_RTCC_ROVREN_MASK                     (0x10000000U)
#define RTC_RTCC_ROVREN_SHIFT                    (28U)
#define RTC_RTCC_ROVREN_WIDTH                    (1U)
#define RTC_RTCC_ROVREN(x)                       (((uint32_t)(((uint32_t)(x)) << RTC_RTCC_ROVREN_SHIFT)) & RTC_RTCC_ROVREN_MASK)
#define RTC_RTCC_FRZEN_MASK                      (0x20000000U)
#define RTC_RTCC_FRZEN_SHIFT                     (29U)
#define RTC_RTCC_FRZEN_WIDTH                     (1U)
#define RTC_RTCC_FRZEN(x)                        (((uint32_t)(((uint32_t)(x)) << RTC_RTCC_FRZEN_SHIFT)) & RTC_RTCC_FRZEN_MASK)
#define RTC_RTCC_RTCIE_MASK                      (0x40000000U)
#define RTC_RTCC_RTCIE_SHIFT                     (30U)
#define RTC_RTCC_RTCIE_WIDTH                     (1U)
#define RTC_RTCC_RTCIE(x)                        (((uint32_t)(((uint32_t)(x)) << RTC_RTCC_RTCIE_SHIFT)) & RTC_RTCC_RTCIE_MASK)
#define RTC_RTCC_CNTEN_MASK                      (0x80000000U)
#define RTC_RTCC_CNTEN_SHIFT                     (31U)
#define RTC_RTCC_CNTEN_WIDTH                     (1U)
#define RTC_RTCC_CNTEN(x)                        (((uint32_t)(((uint32_t)(x)) << RTC_RTCC_CNTEN_SHIFT)) & RTC_RTCC_CNTEN_MASK)
/*! @} */

/*! @name RTCS - RTC Status register */
/*! @{ */
#define RTC_RTCS_ROVRF_MASK                      (0x400U)
#define RTC_RTCS_ROVRF_SHIFT                     (10U)
#define RTC_RTCS_ROVRF_WIDTH                     (1U)
#define RTC_RTCS_ROVRF(x)                        (((uint32_t)(((uint32_t)(x)) << RTC_RTCS_ROVRF_SHIFT)) & RTC_RTCS_ROVRF_MASK)
#define RTC_RTCS_APIF_MASK                       (0x2000U)
#define RTC_RTCS_APIF_SHIFT                      (13U)
#define RTC_RTCS_APIF_WIDTH                      (1U)
#define RTC_RTCS_APIF(x)                         (((uint32_t)(((uint32_t)(x)) << RTC_RTCS_APIF_SHIFT)) & RTC_RTCS_APIF_MASK)
#define RTC_RTCS_INV_API_MASK                    (0x20000U)
#define RTC_RTCS_INV_API_SHIFT                   (17U)
#define RTC_RTCS_INV_API_WIDTH                   (1U)
#define RTC_RTCS_INV_API(x)                      (((uint32_t)(((uint32_t)(x)) << RTC_RTCS_INV_API_SHIFT)) & RTC_RTCS_INV_API_MASK)
#define RTC_RTCS_INV_RTC_MASK                    (0x40000U)
#define RTC_RTCS_INV_RTC_SHIFT                   (18U)
#define RTC_RTCS_INV_RTC_WIDTH                   (1U)
#define RTC_RTCS_INV_RTC(x)                      (((uint32_t)(((uint32_t)(x)) << RTC_RTCS_INV_RTC_SHIFT)) & RTC_RTCS_INV_RTC_MASK)
#define RTC_RTCS_RTCF_MASK                       (0x20000000U)
#define RTC_RTCS_RTCF_SHIFT                      (29U)
#define RTC_RTCS_RTCF_WIDTH                      (1U)
#define RTC_RTCS_RTCF(x)                         (((uint32_t)(((uint32_t)(x)) << RTC_RTCS_RTCF_SHIFT)) & RTC_RTCS_RTCF_MASK)
/*! @} */

/*! @name RTCCNT - RTC Counter register */
/*! @{ */
#define RTC_RTCCNT_RTCCNT_MASK                   (0xFFFFFFFFU)
#define RTC_RTCCNT_RTCCNT_SHIFT                  (0U)
#define RTC_RTCCNT_RTCCNT_WIDTH                  (32U)
#define RTC_RTCCNT_RTCCNT(x)                     (((uint32_t)(((uint32_t)(x)) << RTC_RTCCNT_RTCCNT_SHIFT)) & RTC_RTCCNT_RTCCNT_MASK)
/*! @} */

/*! @name APIVAL - API Compare Value register */
/*! @{ */
#define RTC_APIVAL_APIVAL_MASK                   (0xFFFFFFFFU)
#define RTC_APIVAL_APIVAL_SHIFT                  (0U)
#define RTC_APIVAL_APIVAL_WIDTH                  (32U)
#define RTC_APIVAL_APIVAL(x)                     (((uint32_t)(((uint32_t)(x)) << RTC_APIVAL_APIVAL_SHIFT)) & RTC_APIVAL_APIVAL_MASK)
/*! @} */

/*! @name RTCVAL - RTC Compare Value register */
/*! @{ */
#define RTC_RTCVAL_RTCVAL_MASK                   (0xFFFFFFFFU)
#define RTC_RTCVAL_RTCVAL_SHIFT                  (0U)
#define RTC_RTCVAL_RTCVAL_WIDTH                  (32U)
#define RTC_RTCVAL_RTCVAL(x)                     (((uint32_t)(((uint32_t)(x)) << RTC_RTCVAL_RTCVAL_SHIFT)) & RTC_RTCVAL_RTCVAL_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group RTC_Register_Masks */


/*!
 * @}
 */ /* end of group RTC_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- S32G_GPR Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup S32G_GPR_Peripheral_Access_Layer S32G_GPR Peripheral Access Layer
 * @{
 */

/** S32G_GPR - Register Layout Typedef */
typedef struct {
  __IO uint32_t PFE_COH_EN;                        /**< PFE Port Coherency Enable, offset: 0x0 */
  __IO uint32_t PFE_EMACX_INTF_SEL;                /**< PFE EMAC Interface Mode, offset: 0x4 */
  __I  uint32_t PFE_SYS_GEN0;                      /**< PFE Generic System Status 0, offset: 0x8 */
  __I  uint32_t PFE_SYS_GEN1;                      /**< PFE Generic System Status 1, offset: 0xC */
  __I  uint32_t PFE_SYS_GEN2;                      /**< PFE Generic System Status 2, offset: 0x10 */
  __I  uint32_t PFE_SYS_GEN3;                      /**< PFE Generic System Status 3, offset: 0x14 */
  uint8_t RESERVED_0[8];
  __IO uint32_t PFE_PWR_CTRL;                      /**< PFE EMACX Power Control, offset: 0x20 */
  uint8_t RESERVED_1[28];
  __I  uint32_t LLCE_STAT;                         /**< LLCE Subsystem Status, offset: 0x40 */
  __IO uint32_t LLCE_CTRL;                         /**< LLCE Power Control, offset: 0x44 */
  __IO uint32_t DDR_URGENT_CTRL;                   /**< DDR Urgent Control, offset: 0x48 */
  __O  uint32_t FLXTIM_CTRL;                       /**< FlexTimer Global Load Control, offset: 0x4C */
  __I  uint32_t FLXTIM_STAT;                       /**< FlexTimer LDOK Status, offset: 0x50 */
  __IO uint32_t CMU_STAT;                          /**< Top CMU_FC Status, offset: 0x54 */
  __I  uint32_t NOC_NOPEND_TRANS;                  /**< Accelerator NoC NoPendingTrans Status, offset: 0x58 */
  __IO uint32_t CLKOUT_PAD_CTRL;                   /**< CLKOUT PAD Control, offset: 0x5C */
  uint8_t RESERVED_2[48];
  __IO uint32_t PCIE_TOGGLE;                       /**< PCIe RD/WD Toggle Control, offset: 0x90 */
  __I  uint32_t PCIE_TOGGLEDONE_STAT;              /**< PCIe Toggle Done Status, offset: 0x94 */
  uint8_t RESERVED_3[72];
  __IO uint32_t GENCTRL0;                          /**< Generic Control 0, offset: 0xE0 */
  __IO uint32_t GENCTRL1;                          /**< Generic Control 1, offset: 0xE4 */
  __IO uint32_t GENCTRL2;                          /**< Generic Control 2, offset: 0xE8 */
  __IO uint32_t GENCTRL3;                          /**< Generic Control 3, offset: 0xEC */
  __I  uint32_t GENSTAT0;                          /**< Generic Status 0, offset: 0xF0 */
  __I  uint32_t GENSTAT1;                          /**< Generic Status 1, offset: 0xF4 */
  __I  uint32_t GENSTAT2;                          /**< Generic Status 2, offset: 0xF8 */
  __I  uint32_t GENSTAT3;                          /**< Generic Status 3, offset: 0xFC */
} S32G_GPR_Type, *S32G_GPR_MemMapPtr;

/** Number of instances of the S32G_GPR module. */
#define S32G_GPR_INSTANCE_COUNT                  (1u)

/* S32G_GPR - Peripheral instance base addresses */
/** Peripheral S32G_GPR base address */
#define S32G_GPR_BASE                            (0x4007CA00u)
/** Peripheral S32G_GPR base pointer */
#define S32G_GPR                                 ((S32G_GPR_Type *)S32G_GPR_BASE)
/** Array initializer of S32G_GPR peripheral base addresses */
#define S32G_GPR_BASE_ADDRS                      { S32G_GPR_BASE }
/** Array initializer of S32G_GPR peripheral base pointers */
#define S32G_GPR_BASE_PTRS                       { S32G_GPR }

/* ----------------------------------------------------------------------------
   -- S32G_GPR Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup S32G_GPR_Register_Masks S32G_GPR Register Masks
 * @{
 */

/*! @name PFE_COH_EN - PFE Port Coherency Enable */
/*! @{ */
#define S32G_GPR_PFE_COH_EN_DDR_MASK             (0x1U)
#define S32G_GPR_PFE_COH_EN_DDR_SHIFT            (0U)
#define S32G_GPR_PFE_COH_EN_DDR_WIDTH            (1U)
#define S32G_GPR_PFE_COH_EN_DDR(x)               (((uint32_t)(((uint32_t)(x)) << S32G_GPR_PFE_COH_EN_DDR_SHIFT)) & S32G_GPR_PFE_COH_EN_DDR_MASK)
#define S32G_GPR_PFE_COH_EN_HIF0_MASK            (0x2U)
#define S32G_GPR_PFE_COH_EN_HIF0_SHIFT           (1U)
#define S32G_GPR_PFE_COH_EN_HIF0_WIDTH           (1U)
#define S32G_GPR_PFE_COH_EN_HIF0(x)              (((uint32_t)(((uint32_t)(x)) << S32G_GPR_PFE_COH_EN_HIF0_SHIFT)) & S32G_GPR_PFE_COH_EN_HIF0_MASK)
#define S32G_GPR_PFE_COH_EN_HIF1_MASK            (0x4U)
#define S32G_GPR_PFE_COH_EN_HIF1_SHIFT           (2U)
#define S32G_GPR_PFE_COH_EN_HIF1_WIDTH           (1U)
#define S32G_GPR_PFE_COH_EN_HIF1(x)              (((uint32_t)(((uint32_t)(x)) << S32G_GPR_PFE_COH_EN_HIF1_SHIFT)) & S32G_GPR_PFE_COH_EN_HIF1_MASK)
#define S32G_GPR_PFE_COH_EN_HIF2_MASK            (0x8U)
#define S32G_GPR_PFE_COH_EN_HIF2_SHIFT           (3U)
#define S32G_GPR_PFE_COH_EN_HIF2_WIDTH           (1U)
#define S32G_GPR_PFE_COH_EN_HIF2(x)              (((uint32_t)(((uint32_t)(x)) << S32G_GPR_PFE_COH_EN_HIF2_SHIFT)) & S32G_GPR_PFE_COH_EN_HIF2_MASK)
#define S32G_GPR_PFE_COH_EN_HIF3_MASK            (0x10U)
#define S32G_GPR_PFE_COH_EN_HIF3_SHIFT           (4U)
#define S32G_GPR_PFE_COH_EN_HIF3_WIDTH           (1U)
#define S32G_GPR_PFE_COH_EN_HIF3(x)              (((uint32_t)(((uint32_t)(x)) << S32G_GPR_PFE_COH_EN_HIF3_SHIFT)) & S32G_GPR_PFE_COH_EN_HIF3_MASK)
#define S32G_GPR_PFE_COH_EN_UTIL_MASK            (0x20U)
#define S32G_GPR_PFE_COH_EN_UTIL_SHIFT           (5U)
#define S32G_GPR_PFE_COH_EN_UTIL_WIDTH           (1U)
#define S32G_GPR_PFE_COH_EN_UTIL(x)              (((uint32_t)(((uint32_t)(x)) << S32G_GPR_PFE_COH_EN_UTIL_SHIFT)) & S32G_GPR_PFE_COH_EN_UTIL_MASK)
/*! @} */

/*! @name PFE_EMACX_INTF_SEL - PFE EMAC Interface Mode */
/*! @{ */
#define S32G_GPR_PFE_EMACX_INTF_SEL_EMAC0_MASK   (0xFU)
#define S32G_GPR_PFE_EMACX_INTF_SEL_EMAC0_SHIFT  (0U)
#define S32G_GPR_PFE_EMACX_INTF_SEL_EMAC0_WIDTH  (4U)
#define S32G_GPR_PFE_EMACX_INTF_SEL_EMAC0(x)     (((uint32_t)(((uint32_t)(x)) << S32G_GPR_PFE_EMACX_INTF_SEL_EMAC0_SHIFT)) & S32G_GPR_PFE_EMACX_INTF_SEL_EMAC0_MASK)
#define S32G_GPR_PFE_EMACX_INTF_SEL_EMAC1_MASK   (0xF0U)
#define S32G_GPR_PFE_EMACX_INTF_SEL_EMAC1_SHIFT  (4U)
#define S32G_GPR_PFE_EMACX_INTF_SEL_EMAC1_WIDTH  (4U)
#define S32G_GPR_PFE_EMACX_INTF_SEL_EMAC1(x)     (((uint32_t)(((uint32_t)(x)) << S32G_GPR_PFE_EMACX_INTF_SEL_EMAC1_SHIFT)) & S32G_GPR_PFE_EMACX_INTF_SEL_EMAC1_MASK)
#define S32G_GPR_PFE_EMACX_INTF_SEL_EMAC2_MASK   (0xF00U)
#define S32G_GPR_PFE_EMACX_INTF_SEL_EMAC2_SHIFT  (8U)
#define S32G_GPR_PFE_EMACX_INTF_SEL_EMAC2_WIDTH  (4U)
#define S32G_GPR_PFE_EMACX_INTF_SEL_EMAC2(x)     (((uint32_t)(((uint32_t)(x)) << S32G_GPR_PFE_EMACX_INTF_SEL_EMAC2_SHIFT)) & S32G_GPR_PFE_EMACX_INTF_SEL_EMAC2_MASK)
/*! @} */

/*! @name PFE_SYS_GEN0 - PFE Generic System Status 0 */
/*! @{ */
#define S32G_GPR_PFE_SYS_GEN0_STAT_MASK          (0xFFFFFFFFU)
#define S32G_GPR_PFE_SYS_GEN0_STAT_SHIFT         (0U)
#define S32G_GPR_PFE_SYS_GEN0_STAT_WIDTH         (32U)
#define S32G_GPR_PFE_SYS_GEN0_STAT(x)            (((uint32_t)(((uint32_t)(x)) << S32G_GPR_PFE_SYS_GEN0_STAT_SHIFT)) & S32G_GPR_PFE_SYS_GEN0_STAT_MASK)
/*! @} */

/*! @name PFE_SYS_GEN1 - PFE Generic System Status 1 */
/*! @{ */
#define S32G_GPR_PFE_SYS_GEN1_STAT_MASK          (0xFFFFFFFFU)
#define S32G_GPR_PFE_SYS_GEN1_STAT_SHIFT         (0U)
#define S32G_GPR_PFE_SYS_GEN1_STAT_WIDTH         (32U)
#define S32G_GPR_PFE_SYS_GEN1_STAT(x)            (((uint32_t)(((uint32_t)(x)) << S32G_GPR_PFE_SYS_GEN1_STAT_SHIFT)) & S32G_GPR_PFE_SYS_GEN1_STAT_MASK)
/*! @} */

/*! @name PFE_SYS_GEN2 - PFE Generic System Status 2 */
/*! @{ */
#define S32G_GPR_PFE_SYS_GEN2_STAT_MASK          (0xFFFFFFFFU)
#define S32G_GPR_PFE_SYS_GEN2_STAT_SHIFT         (0U)
#define S32G_GPR_PFE_SYS_GEN2_STAT_WIDTH         (32U)
#define S32G_GPR_PFE_SYS_GEN2_STAT(x)            (((uint32_t)(((uint32_t)(x)) << S32G_GPR_PFE_SYS_GEN2_STAT_SHIFT)) & S32G_GPR_PFE_SYS_GEN2_STAT_MASK)
/*! @} */

/*! @name PFE_SYS_GEN3 - PFE Generic System Status 3 */
/*! @{ */
#define S32G_GPR_PFE_SYS_GEN3_STAT_MASK          (0xFFFFFFFFU)
#define S32G_GPR_PFE_SYS_GEN3_STAT_SHIFT         (0U)
#define S32G_GPR_PFE_SYS_GEN3_STAT_WIDTH         (32U)
#define S32G_GPR_PFE_SYS_GEN3_STAT(x)            (((uint32_t)(((uint32_t)(x)) << S32G_GPR_PFE_SYS_GEN3_STAT_SHIFT)) & S32G_GPR_PFE_SYS_GEN3_STAT_MASK)
/*! @} */

/*! @name PFE_PWR_CTRL - PFE EMACX Power Control */
/*! @{ */
#define S32G_GPR_PFE_PWR_CTRL_PWRCLAMP_MASK      (0x7U)
#define S32G_GPR_PFE_PWR_CTRL_PWRCLAMP_SHIFT     (0U)
#define S32G_GPR_PFE_PWR_CTRL_PWRCLAMP_WIDTH     (3U)
#define S32G_GPR_PFE_PWR_CTRL_PWRCLAMP(x)        (((uint32_t)(((uint32_t)(x)) << S32G_GPR_PFE_PWR_CTRL_PWRCLAMP_SHIFT)) & S32G_GPR_PFE_PWR_CTRL_PWRCLAMP_MASK)
#define S32G_GPR_PFE_PWR_CTRL_PWRDWN_MASK        (0x38U)
#define S32G_GPR_PFE_PWR_CTRL_PWRDWN_SHIFT       (3U)
#define S32G_GPR_PFE_PWR_CTRL_PWRDWN_WIDTH       (3U)
#define S32G_GPR_PFE_PWR_CTRL_PWRDWN(x)          (((uint32_t)(((uint32_t)(x)) << S32G_GPR_PFE_PWR_CTRL_PWRDWN_SHIFT)) & S32G_GPR_PFE_PWR_CTRL_PWRDWN_MASK)
#define S32G_GPR_PFE_PWR_CTRL_PWRISO_MASK        (0x1C0U)
#define S32G_GPR_PFE_PWR_CTRL_PWRISO_SHIFT       (6U)
#define S32G_GPR_PFE_PWR_CTRL_PWRISO_WIDTH       (3U)
#define S32G_GPR_PFE_PWR_CTRL_PWRISO(x)          (((uint32_t)(((uint32_t)(x)) << S32G_GPR_PFE_PWR_CTRL_PWRISO_SHIFT)) & S32G_GPR_PFE_PWR_CTRL_PWRISO_MASK)
#define S32G_GPR_PFE_PWR_CTRL_PWRACK_MASK        (0xE00U)
#define S32G_GPR_PFE_PWR_CTRL_PWRACK_SHIFT       (9U)
#define S32G_GPR_PFE_PWR_CTRL_PWRACK_WIDTH       (3U)
#define S32G_GPR_PFE_PWR_CTRL_PWRACK(x)          (((uint32_t)(((uint32_t)(x)) << S32G_GPR_PFE_PWR_CTRL_PWRACK_SHIFT)) & S32G_GPR_PFE_PWR_CTRL_PWRACK_MASK)
/*! @} */

/*! @name LLCE_STAT - LLCE Subsystem Status */
/*! @{ */
#define S32G_GPR_LLCE_STAT_SLEEPING_MASK         (0xFU)
#define S32G_GPR_LLCE_STAT_SLEEPING_SHIFT        (0U)
#define S32G_GPR_LLCE_STAT_SLEEPING_WIDTH        (4U)
#define S32G_GPR_LLCE_STAT_SLEEPING(x)           (((uint32_t)(((uint32_t)(x)) << S32G_GPR_LLCE_STAT_SLEEPING_SHIFT)) & S32G_GPR_LLCE_STAT_SLEEPING_MASK)
#define S32G_GPR_LLCE_STAT_SYSRESETREQ_MASK      (0xF0U)
#define S32G_GPR_LLCE_STAT_SYSRESETREQ_SHIFT     (4U)
#define S32G_GPR_LLCE_STAT_SYSRESETREQ_WIDTH     (4U)
#define S32G_GPR_LLCE_STAT_SYSRESETREQ(x)        (((uint32_t)(((uint32_t)(x)) << S32G_GPR_LLCE_STAT_SYSRESETREQ_SHIFT)) & S32G_GPR_LLCE_STAT_SYSRESETREQ_MASK)
#define S32G_GPR_LLCE_STAT_LLCE_LSPI_TRIG_RX_MASK (0xF00U)
#define S32G_GPR_LLCE_STAT_LLCE_LSPI_TRIG_RX_SHIFT (8U)
#define S32G_GPR_LLCE_STAT_LLCE_LSPI_TRIG_RX_WIDTH (4U)
#define S32G_GPR_LLCE_STAT_LLCE_LSPI_TRIG_RX(x)  (((uint32_t)(((uint32_t)(x)) << S32G_GPR_LLCE_STAT_LLCE_LSPI_TRIG_RX_SHIFT)) & S32G_GPR_LLCE_STAT_LLCE_LSPI_TRIG_RX_MASK)
#define S32G_GPR_LLCE_STAT_LLCE_LSPI_TRIG_FM_MASK (0xF000U)
#define S32G_GPR_LLCE_STAT_LLCE_LSPI_TRIG_FM_SHIFT (12U)
#define S32G_GPR_LLCE_STAT_LLCE_LSPI_TRIG_FM_WIDTH (4U)
#define S32G_GPR_LLCE_STAT_LLCE_LSPI_TRIG_FM(x)  (((uint32_t)(((uint32_t)(x)) << S32G_GPR_LLCE_STAT_LLCE_LSPI_TRIG_FM_SHIFT)) & S32G_GPR_LLCE_STAT_LLCE_LSPI_TRIG_FM_MASK)
#define S32G_GPR_LLCE_STAT_MISC_MASK             (0xFFFF0000U)
#define S32G_GPR_LLCE_STAT_MISC_SHIFT            (16U)
#define S32G_GPR_LLCE_STAT_MISC_WIDTH            (16U)
#define S32G_GPR_LLCE_STAT_MISC(x)               (((uint32_t)(((uint32_t)(x)) << S32G_GPR_LLCE_STAT_MISC_SHIFT)) & S32G_GPR_LLCE_STAT_MISC_MASK)
/*! @} */

/*! @name LLCE_CTRL - LLCE Power Control */
/*! @{ */
#define S32G_GPR_LLCE_CTRL_EXEVENT_MASK          (0xFU)
#define S32G_GPR_LLCE_CTRL_EXEVENT_SHIFT         (0U)
#define S32G_GPR_LLCE_CTRL_EXEVENT_WIDTH         (4U)
#define S32G_GPR_LLCE_CTRL_EXEVENT(x)            (((uint32_t)(((uint32_t)(x)) << S32G_GPR_LLCE_CTRL_EXEVENT_SHIFT)) & S32G_GPR_LLCE_CTRL_EXEVENT_MASK)
#define S32G_GPR_LLCE_CTRL_LINDIVSEL_MASK        (0x10U)
#define S32G_GPR_LLCE_CTRL_LINDIVSEL_SHIFT       (4U)
#define S32G_GPR_LLCE_CTRL_LINDIVSEL_WIDTH       (1U)
#define S32G_GPR_LLCE_CTRL_LINDIVSEL(x)          (((uint32_t)(((uint32_t)(x)) << S32G_GPR_LLCE_CTRL_LINDIVSEL_SHIFT)) & S32G_GPR_LLCE_CTRL_LINDIVSEL_MASK)
#define S32G_GPR_LLCE_CTRL_LLCE_LSPI_TRIG_IN_MASK (0x1E0U)
#define S32G_GPR_LLCE_CTRL_LLCE_LSPI_TRIG_IN_SHIFT (5U)
#define S32G_GPR_LLCE_CTRL_LLCE_LSPI_TRIG_IN_WIDTH (4U)
#define S32G_GPR_LLCE_CTRL_LLCE_LSPI_TRIG_IN(x)  (((uint32_t)(((uint32_t)(x)) << S32G_GPR_LLCE_CTRL_LLCE_LSPI_TRIG_IN_SHIFT)) & S32G_GPR_LLCE_CTRL_LLCE_LSPI_TRIG_IN_MASK)
#define S32G_GPR_LLCE_CTRL_LLCE_HTM0_TRC_DIS_MASK (0x200U)
#define S32G_GPR_LLCE_CTRL_LLCE_HTM0_TRC_DIS_SHIFT (9U)
#define S32G_GPR_LLCE_CTRL_LLCE_HTM0_TRC_DIS_WIDTH (1U)
#define S32G_GPR_LLCE_CTRL_LLCE_HTM0_TRC_DIS(x)  (((uint32_t)(((uint32_t)(x)) << S32G_GPR_LLCE_CTRL_LLCE_HTM0_TRC_DIS_SHIFT)) & S32G_GPR_LLCE_CTRL_LLCE_HTM0_TRC_DIS_MASK)
#define S32G_GPR_LLCE_CTRL_LLCE_HTM1_TRC_DIS_MASK (0x400U)
#define S32G_GPR_LLCE_CTRL_LLCE_HTM1_TRC_DIS_SHIFT (10U)
#define S32G_GPR_LLCE_CTRL_LLCE_HTM1_TRC_DIS_WIDTH (1U)
#define S32G_GPR_LLCE_CTRL_LLCE_HTM1_TRC_DIS(x)  (((uint32_t)(((uint32_t)(x)) << S32G_GPR_LLCE_CTRL_LLCE_HTM1_TRC_DIS_SHIFT)) & S32G_GPR_LLCE_CTRL_LLCE_HTM1_TRC_DIS_MASK)
#define S32G_GPR_LLCE_CTRL_PFE_2_LLCE_INT_HS_BP_MASK (0x800U)
#define S32G_GPR_LLCE_CTRL_PFE_2_LLCE_INT_HS_BP_SHIFT (11U)
#define S32G_GPR_LLCE_CTRL_PFE_2_LLCE_INT_HS_BP_WIDTH (1U)
#define S32G_GPR_LLCE_CTRL_PFE_2_LLCE_INT_HS_BP(x) (((uint32_t)(((uint32_t)(x)) << S32G_GPR_LLCE_CTRL_PFE_2_LLCE_INT_HS_BP_SHIFT)) & S32G_GPR_LLCE_CTRL_PFE_2_LLCE_INT_HS_BP_MASK)
#define S32G_GPR_LLCE_CTRL_MISC_MASK             (0xFFFFF000U)
#define S32G_GPR_LLCE_CTRL_MISC_SHIFT            (12U)
#define S32G_GPR_LLCE_CTRL_MISC_WIDTH            (20U)
#define S32G_GPR_LLCE_CTRL_MISC(x)               (((uint32_t)(((uint32_t)(x)) << S32G_GPR_LLCE_CTRL_MISC_SHIFT)) & S32G_GPR_LLCE_CTRL_MISC_MASK)
/*! @} */

/*! @name DDR_URGENT_CTRL - DDR Urgent Control */
/*! @{ */
#define S32G_GPR_DDR_URGENT_CTRL_ARURGENTB_MASK  (0x7U)
#define S32G_GPR_DDR_URGENT_CTRL_ARURGENTB_SHIFT (0U)
#define S32G_GPR_DDR_URGENT_CTRL_ARURGENTB_WIDTH (3U)
#define S32G_GPR_DDR_URGENT_CTRL_ARURGENTB(x)    (((uint32_t)(((uint32_t)(x)) << S32G_GPR_DDR_URGENT_CTRL_ARURGENTB_SHIFT)) & S32G_GPR_DDR_URGENT_CTRL_ARURGENTB_MASK)
#define S32G_GPR_DDR_URGENT_CTRL_ARURGENTR_MASK  (0x38U)
#define S32G_GPR_DDR_URGENT_CTRL_ARURGENTR_SHIFT (3U)
#define S32G_GPR_DDR_URGENT_CTRL_ARURGENTR_WIDTH (3U)
#define S32G_GPR_DDR_URGENT_CTRL_ARURGENTR(x)    (((uint32_t)(((uint32_t)(x)) << S32G_GPR_DDR_URGENT_CTRL_ARURGENTR_SHIFT)) & S32G_GPR_DDR_URGENT_CTRL_ARURGENTR_MASK)
#define S32G_GPR_DDR_URGENT_CTRL_AWURGENT_MASK   (0x1C0U)
#define S32G_GPR_DDR_URGENT_CTRL_AWURGENT_SHIFT  (6U)
#define S32G_GPR_DDR_URGENT_CTRL_AWURGENT_WIDTH  (3U)
#define S32G_GPR_DDR_URGENT_CTRL_AWURGENT(x)     (((uint32_t)(((uint32_t)(x)) << S32G_GPR_DDR_URGENT_CTRL_AWURGENT_SHIFT)) & S32G_GPR_DDR_URGENT_CTRL_AWURGENT_MASK)
/*! @} */

/*! @name FLXTIM_CTRL - FlexTimer Global Load Control */
/*! @{ */
#define S32G_GPR_FLXTIM_CTRL_GLOBAL_LDOK_IN0_MASK (0x1U)
#define S32G_GPR_FLXTIM_CTRL_GLOBAL_LDOK_IN0_SHIFT (0U)
#define S32G_GPR_FLXTIM_CTRL_GLOBAL_LDOK_IN0_WIDTH (1U)
#define S32G_GPR_FLXTIM_CTRL_GLOBAL_LDOK_IN0(x)  (((uint32_t)(((uint32_t)(x)) << S32G_GPR_FLXTIM_CTRL_GLOBAL_LDOK_IN0_SHIFT)) & S32G_GPR_FLXTIM_CTRL_GLOBAL_LDOK_IN0_MASK)
#define S32G_GPR_FLXTIM_CTRL_GLOBAL_LDOK_IN1_MASK (0x2U)
#define S32G_GPR_FLXTIM_CTRL_GLOBAL_LDOK_IN1_SHIFT (1U)
#define S32G_GPR_FLXTIM_CTRL_GLOBAL_LDOK_IN1_WIDTH (1U)
#define S32G_GPR_FLXTIM_CTRL_GLOBAL_LDOK_IN1(x)  (((uint32_t)(((uint32_t)(x)) << S32G_GPR_FLXTIM_CTRL_GLOBAL_LDOK_IN1_SHIFT)) & S32G_GPR_FLXTIM_CTRL_GLOBAL_LDOK_IN1_MASK)
/*! @} */

/*! @name FLXTIM_STAT - FlexTimer LDOK Status */
/*! @{ */
#define S32G_GPR_FLXTIM_STAT_GLB_LDOK_OUT0_MASK  (0x1U)
#define S32G_GPR_FLXTIM_STAT_GLB_LDOK_OUT0_SHIFT (0U)
#define S32G_GPR_FLXTIM_STAT_GLB_LDOK_OUT0_WIDTH (1U)
#define S32G_GPR_FLXTIM_STAT_GLB_LDOK_OUT0(x)    (((uint32_t)(((uint32_t)(x)) << S32G_GPR_FLXTIM_STAT_GLB_LDOK_OUT0_SHIFT)) & S32G_GPR_FLXTIM_STAT_GLB_LDOK_OUT0_MASK)
#define S32G_GPR_FLXTIM_STAT_GLB_LDOK_OUT1_MASK  (0x2U)
#define S32G_GPR_FLXTIM_STAT_GLB_LDOK_OUT1_SHIFT (1U)
#define S32G_GPR_FLXTIM_STAT_GLB_LDOK_OUT1_WIDTH (1U)
#define S32G_GPR_FLXTIM_STAT_GLB_LDOK_OUT1(x)    (((uint32_t)(((uint32_t)(x)) << S32G_GPR_FLXTIM_STAT_GLB_LDOK_OUT1_SHIFT)) & S32G_GPR_FLXTIM_STAT_GLB_LDOK_OUT1_MASK)
/*! @} */

/*! @name CMU_STAT - Top CMU_FC Status */
/*! @{ */
#define S32G_GPR_CMU_STAT_FLL_FHH_MASK           (0x3FFFU)
#define S32G_GPR_CMU_STAT_FLL_FHH_SHIFT          (0U)
#define S32G_GPR_CMU_STAT_FLL_FHH_WIDTH          (14U)
#define S32G_GPR_CMU_STAT_FLL_FHH(x)             (((uint32_t)(((uint32_t)(x)) << S32G_GPR_CMU_STAT_FLL_FHH_SHIFT)) & S32G_GPR_CMU_STAT_FLL_FHH_MASK)
/*! @} */

/*! @name NOC_NOPEND_TRANS - Accelerator NoC NoPendingTrans Status */
/*! @{ */
#define S32G_GPR_NOC_NOPEND_TRANS_STAT_MASK      (0xFFFFFFFFU)
#define S32G_GPR_NOC_NOPEND_TRANS_STAT_SHIFT     (0U)
#define S32G_GPR_NOC_NOPEND_TRANS_STAT_WIDTH     (32U)
#define S32G_GPR_NOC_NOPEND_TRANS_STAT(x)        (((uint32_t)(((uint32_t)(x)) << S32G_GPR_NOC_NOPEND_TRANS_STAT_SHIFT)) & S32G_GPR_NOC_NOPEND_TRANS_STAT_MASK)
/*! @} */

/*! @name CLKOUT_PAD_CTRL - CLKOUT PAD Control */
/*! @{ */
#define S32G_GPR_CLKOUT_PAD_CTRL_TERM_EN_MASK    (0x1U)
#define S32G_GPR_CLKOUT_PAD_CTRL_TERM_EN_SHIFT   (0U)
#define S32G_GPR_CLKOUT_PAD_CTRL_TERM_EN_WIDTH   (1U)
#define S32G_GPR_CLKOUT_PAD_CTRL_TERM_EN(x)      (((uint32_t)(((uint32_t)(x)) << S32G_GPR_CLKOUT_PAD_CTRL_TERM_EN_SHIFT)) & S32G_GPR_CLKOUT_PAD_CTRL_TERM_EN_MASK)
#define S32G_GPR_CLKOUT_PAD_CTRL_TM_SEL0_MASK    (0x2U)
#define S32G_GPR_CLKOUT_PAD_CTRL_TM_SEL0_SHIFT   (1U)
#define S32G_GPR_CLKOUT_PAD_CTRL_TM_SEL0_WIDTH   (1U)
#define S32G_GPR_CLKOUT_PAD_CTRL_TM_SEL0(x)      (((uint32_t)(((uint32_t)(x)) << S32G_GPR_CLKOUT_PAD_CTRL_TM_SEL0_SHIFT)) & S32G_GPR_CLKOUT_PAD_CTRL_TM_SEL0_MASK)
#define S32G_GPR_CLKOUT_PAD_CTRL_TM_SEL1_MASK    (0x4U)
#define S32G_GPR_CLKOUT_PAD_CTRL_TM_SEL1_SHIFT   (2U)
#define S32G_GPR_CLKOUT_PAD_CTRL_TM_SEL1_WIDTH   (1U)
#define S32G_GPR_CLKOUT_PAD_CTRL_TM_SEL1(x)      (((uint32_t)(((uint32_t)(x)) << S32G_GPR_CLKOUT_PAD_CTRL_TM_SEL1_SHIFT)) & S32G_GPR_CLKOUT_PAD_CTRL_TM_SEL1_MASK)
#define S32G_GPR_CLKOUT_PAD_CTRL_AURORA_MODE_MASK (0x8U)
#define S32G_GPR_CLKOUT_PAD_CTRL_AURORA_MODE_SHIFT (3U)
#define S32G_GPR_CLKOUT_PAD_CTRL_AURORA_MODE_WIDTH (1U)
#define S32G_GPR_CLKOUT_PAD_CTRL_AURORA_MODE(x)  (((uint32_t)(((uint32_t)(x)) << S32G_GPR_CLKOUT_PAD_CTRL_AURORA_MODE_SHIFT)) & S32G_GPR_CLKOUT_PAD_CTRL_AURORA_MODE_MASK)
#define S32G_GPR_CLKOUT_PAD_CTRL_CREF_EN_MASK    (0x10U)
#define S32G_GPR_CLKOUT_PAD_CTRL_CREF_EN_SHIFT   (4U)
#define S32G_GPR_CLKOUT_PAD_CTRL_CREF_EN_WIDTH   (1U)
#define S32G_GPR_CLKOUT_PAD_CTRL_CREF_EN(x)      (((uint32_t)(((uint32_t)(x)) << S32G_GPR_CLKOUT_PAD_CTRL_CREF_EN_SHIFT)) & S32G_GPR_CLKOUT_PAD_CTRL_CREF_EN_MASK)
#define S32G_GPR_CLKOUT_PAD_CTRL_CLKOUT_OBE_MASK (0x20U)
#define S32G_GPR_CLKOUT_PAD_CTRL_CLKOUT_OBE_SHIFT (5U)
#define S32G_GPR_CLKOUT_PAD_CTRL_CLKOUT_OBE_WIDTH (1U)
#define S32G_GPR_CLKOUT_PAD_CTRL_CLKOUT_OBE(x)   (((uint32_t)(((uint32_t)(x)) << S32G_GPR_CLKOUT_PAD_CTRL_CLKOUT_OBE_SHIFT)) & S32G_GPR_CLKOUT_PAD_CTRL_CLKOUT_OBE_MASK)
#define S32G_GPR_CLKOUT_PAD_CTRL_CLKOUT_TX_PREEMPH0_MASK (0x40U)
#define S32G_GPR_CLKOUT_PAD_CTRL_CLKOUT_TX_PREEMPH0_SHIFT (6U)
#define S32G_GPR_CLKOUT_PAD_CTRL_CLKOUT_TX_PREEMPH0_WIDTH (1U)
#define S32G_GPR_CLKOUT_PAD_CTRL_CLKOUT_TX_PREEMPH0(x) (((uint32_t)(((uint32_t)(x)) << S32G_GPR_CLKOUT_PAD_CTRL_CLKOUT_TX_PREEMPH0_SHIFT)) & S32G_GPR_CLKOUT_PAD_CTRL_CLKOUT_TX_PREEMPH0_MASK)
#define S32G_GPR_CLKOUT_PAD_CTRL_CLKOUT_TX_PREEMPH1_MASK (0x80U)
#define S32G_GPR_CLKOUT_PAD_CTRL_CLKOUT_TX_PREEMPH1_SHIFT (7U)
#define S32G_GPR_CLKOUT_PAD_CTRL_CLKOUT_TX_PREEMPH1_WIDTH (1U)
#define S32G_GPR_CLKOUT_PAD_CTRL_CLKOUT_TX_PREEMPH1(x) (((uint32_t)(((uint32_t)(x)) << S32G_GPR_CLKOUT_PAD_CTRL_CLKOUT_TX_PREEMPH1_SHIFT)) & S32G_GPR_CLKOUT_PAD_CTRL_CLKOUT_TX_PREEMPH1_MASK)
/*! @} */

/*! @name PCIE_TOGGLE - PCIe RD/WD Toggle Control */
/*! @{ */
#define S32G_GPR_PCIE_TOGGLE_PCIE1_WD_TOGG_MASK  (0xFU)
#define S32G_GPR_PCIE_TOGGLE_PCIE1_WD_TOGG_SHIFT (0U)
#define S32G_GPR_PCIE_TOGGLE_PCIE1_WD_TOGG_WIDTH (4U)
#define S32G_GPR_PCIE_TOGGLE_PCIE1_WD_TOGG(x)    (((uint32_t)(((uint32_t)(x)) << S32G_GPR_PCIE_TOGGLE_PCIE1_WD_TOGG_SHIFT)) & S32G_GPR_PCIE_TOGGLE_PCIE1_WD_TOGG_MASK)
#define S32G_GPR_PCIE_TOGGLE_PCIE1_RD_TOGG_MASK  (0xF0U)
#define S32G_GPR_PCIE_TOGGLE_PCIE1_RD_TOGG_SHIFT (4U)
#define S32G_GPR_PCIE_TOGGLE_PCIE1_RD_TOGG_WIDTH (4U)
#define S32G_GPR_PCIE_TOGGLE_PCIE1_RD_TOGG(x)    (((uint32_t)(((uint32_t)(x)) << S32G_GPR_PCIE_TOGGLE_PCIE1_RD_TOGG_SHIFT)) & S32G_GPR_PCIE_TOGGLE_PCIE1_RD_TOGG_MASK)
#define S32G_GPR_PCIE_TOGGLE_PCIE0_WD_TOGG_MASK  (0xF00U)
#define S32G_GPR_PCIE_TOGGLE_PCIE0_WD_TOGG_SHIFT (8U)
#define S32G_GPR_PCIE_TOGGLE_PCIE0_WD_TOGG_WIDTH (4U)
#define S32G_GPR_PCIE_TOGGLE_PCIE0_WD_TOGG(x)    (((uint32_t)(((uint32_t)(x)) << S32G_GPR_PCIE_TOGGLE_PCIE0_WD_TOGG_SHIFT)) & S32G_GPR_PCIE_TOGGLE_PCIE0_WD_TOGG_MASK)
#define S32G_GPR_PCIE_TOGGLE_PCIE0_RD_TOGG_MASK  (0xF000U)
#define S32G_GPR_PCIE_TOGGLE_PCIE0_RD_TOGG_SHIFT (12U)
#define S32G_GPR_PCIE_TOGGLE_PCIE0_RD_TOGG_WIDTH (4U)
#define S32G_GPR_PCIE_TOGGLE_PCIE0_RD_TOGG(x)    (((uint32_t)(((uint32_t)(x)) << S32G_GPR_PCIE_TOGGLE_PCIE0_RD_TOGG_SHIFT)) & S32G_GPR_PCIE_TOGGLE_PCIE0_RD_TOGG_MASK)
/*! @} */

/*! @name PCIE_TOGGLEDONE_STAT - PCIe Toggle Done Status */
/*! @{ */
#define S32G_GPR_PCIE_TOGGLEDONE_STAT_PCIE1_WD_TOGG_DONE_STAT_MASK (0xFU)
#define S32G_GPR_PCIE_TOGGLEDONE_STAT_PCIE1_WD_TOGG_DONE_STAT_SHIFT (0U)
#define S32G_GPR_PCIE_TOGGLEDONE_STAT_PCIE1_WD_TOGG_DONE_STAT_WIDTH (4U)
#define S32G_GPR_PCIE_TOGGLEDONE_STAT_PCIE1_WD_TOGG_DONE_STAT(x) (((uint32_t)(((uint32_t)(x)) << S32G_GPR_PCIE_TOGGLEDONE_STAT_PCIE1_WD_TOGG_DONE_STAT_SHIFT)) & S32G_GPR_PCIE_TOGGLEDONE_STAT_PCIE1_WD_TOGG_DONE_STAT_MASK)
#define S32G_GPR_PCIE_TOGGLEDONE_STAT_PCIE1_RD_TOGG_DONE_STAT_MASK (0xF0U)
#define S32G_GPR_PCIE_TOGGLEDONE_STAT_PCIE1_RD_TOGG_DONE_STAT_SHIFT (4U)
#define S32G_GPR_PCIE_TOGGLEDONE_STAT_PCIE1_RD_TOGG_DONE_STAT_WIDTH (4U)
#define S32G_GPR_PCIE_TOGGLEDONE_STAT_PCIE1_RD_TOGG_DONE_STAT(x) (((uint32_t)(((uint32_t)(x)) << S32G_GPR_PCIE_TOGGLEDONE_STAT_PCIE1_RD_TOGG_DONE_STAT_SHIFT)) & S32G_GPR_PCIE_TOGGLEDONE_STAT_PCIE1_RD_TOGG_DONE_STAT_MASK)
#define S32G_GPR_PCIE_TOGGLEDONE_STAT_PCIE0_WD_TOGG_DONE_STAT_MASK (0xF00U)
#define S32G_GPR_PCIE_TOGGLEDONE_STAT_PCIE0_WD_TOGG_DONE_STAT_SHIFT (8U)
#define S32G_GPR_PCIE_TOGGLEDONE_STAT_PCIE0_WD_TOGG_DONE_STAT_WIDTH (4U)
#define S32G_GPR_PCIE_TOGGLEDONE_STAT_PCIE0_WD_TOGG_DONE_STAT(x) (((uint32_t)(((uint32_t)(x)) << S32G_GPR_PCIE_TOGGLEDONE_STAT_PCIE0_WD_TOGG_DONE_STAT_SHIFT)) & S32G_GPR_PCIE_TOGGLEDONE_STAT_PCIE0_WD_TOGG_DONE_STAT_MASK)
#define S32G_GPR_PCIE_TOGGLEDONE_STAT_PCIE0_RD_TOGG_DONE_STAT_MASK (0xF000U)
#define S32G_GPR_PCIE_TOGGLEDONE_STAT_PCIE0_RD_TOGG_DONE_STAT_SHIFT (12U)
#define S32G_GPR_PCIE_TOGGLEDONE_STAT_PCIE0_RD_TOGG_DONE_STAT_WIDTH (4U)
#define S32G_GPR_PCIE_TOGGLEDONE_STAT_PCIE0_RD_TOGG_DONE_STAT(x) (((uint32_t)(((uint32_t)(x)) << S32G_GPR_PCIE_TOGGLEDONE_STAT_PCIE0_RD_TOGG_DONE_STAT_SHIFT)) & S32G_GPR_PCIE_TOGGLEDONE_STAT_PCIE0_RD_TOGG_DONE_STAT_MASK)
/*! @} */

/*! @name GENCTRL0 - Generic Control 0 */
/*! @{ */
#define S32G_GPR_GENCTRL0_USBPWRFLT_MASK         (0x1U)
#define S32G_GPR_GENCTRL0_USBPWRFLT_SHIFT        (0U)
#define S32G_GPR_GENCTRL0_USBPWRFLT_WIDTH        (1U)
#define S32G_GPR_GENCTRL0_USBPWRFLT(x)           (((uint32_t)(((uint32_t)(x)) << S32G_GPR_GENCTRL0_USBPWRFLT_SHIFT)) & S32G_GPR_GENCTRL0_USBPWRFLT_MASK)
#define S32G_GPR_GENCTRL0_ACCEL_FLXNC_REF_DIV_MASK (0x6U)
#define S32G_GPR_GENCTRL0_ACCEL_FLXNC_REF_DIV_SHIFT (1U)
#define S32G_GPR_GENCTRL0_ACCEL_FLXNC_REF_DIV_WIDTH (2U)
#define S32G_GPR_GENCTRL0_ACCEL_FLXNC_REF_DIV(x) (((uint32_t)(((uint32_t)(x)) << S32G_GPR_GENCTRL0_ACCEL_FLXNC_REF_DIV_SHIFT)) & S32G_GPR_GENCTRL0_ACCEL_FLXNC_REF_DIV_MASK)
#define S32G_GPR_GENCTRL0_ACCEL_FLXNC_RD0_IDLEREQ_MASK (0x8U)
#define S32G_GPR_GENCTRL0_ACCEL_FLXNC_RD0_IDLEREQ_SHIFT (3U)
#define S32G_GPR_GENCTRL0_ACCEL_FLXNC_RD0_IDLEREQ_WIDTH (1U)
#define S32G_GPR_GENCTRL0_ACCEL_FLXNC_RD0_IDLEREQ(x) (((uint32_t)(((uint32_t)(x)) << S32G_GPR_GENCTRL0_ACCEL_FLXNC_RD0_IDLEREQ_SHIFT)) & S32G_GPR_GENCTRL0_ACCEL_FLXNC_RD0_IDLEREQ_MASK)
#define S32G_GPR_GENCTRL0_MISC_MASK              (0xFFFFFFF0U)
#define S32G_GPR_GENCTRL0_MISC_SHIFT             (4U)
#define S32G_GPR_GENCTRL0_MISC_WIDTH             (28U)
#define S32G_GPR_GENCTRL0_MISC(x)                (((uint32_t)(((uint32_t)(x)) << S32G_GPR_GENCTRL0_MISC_SHIFT)) & S32G_GPR_GENCTRL0_MISC_MASK)
/*! @} */

/*! @name GENCTRL1 - Generic Control 1 */
/*! @{ */
#define S32G_GPR_GENCTRL1_CTRL_MASK              (0xFFFFFFFFU)
#define S32G_GPR_GENCTRL1_CTRL_SHIFT             (0U)
#define S32G_GPR_GENCTRL1_CTRL_WIDTH             (32U)
#define S32G_GPR_GENCTRL1_CTRL(x)                (((uint32_t)(((uint32_t)(x)) << S32G_GPR_GENCTRL1_CTRL_SHIFT)) & S32G_GPR_GENCTRL1_CTRL_MASK)
/*! @} */

/*! @name GENCTRL2 - Generic Control 2 */
/*! @{ */
#define S32G_GPR_GENCTRL2_CTRL_MASK              (0xFFFFFFFFU)
#define S32G_GPR_GENCTRL2_CTRL_SHIFT             (0U)
#define S32G_GPR_GENCTRL2_CTRL_WIDTH             (32U)
#define S32G_GPR_GENCTRL2_CTRL(x)                (((uint32_t)(((uint32_t)(x)) << S32G_GPR_GENCTRL2_CTRL_SHIFT)) & S32G_GPR_GENCTRL2_CTRL_MASK)
/*! @} */

/*! @name GENCTRL3 - Generic Control 3 */
/*! @{ */
#define S32G_GPR_GENCTRL3_CTRL_MASK              (0xFFFFFFFFU)
#define S32G_GPR_GENCTRL3_CTRL_SHIFT             (0U)
#define S32G_GPR_GENCTRL3_CTRL_WIDTH             (32U)
#define S32G_GPR_GENCTRL3_CTRL(x)                (((uint32_t)(((uint32_t)(x)) << S32G_GPR_GENCTRL3_CTRL_SHIFT)) & S32G_GPR_GENCTRL3_CTRL_MASK)
/*! @} */

/*! @name GENSTAT0 - Generic Status 0 */
/*! @{ */
#define S32G_GPR_GENSTAT0_STAT_MASK              (0xFFFFFFFFU)
#define S32G_GPR_GENSTAT0_STAT_SHIFT             (0U)
#define S32G_GPR_GENSTAT0_STAT_WIDTH             (32U)
#define S32G_GPR_GENSTAT0_STAT(x)                (((uint32_t)(((uint32_t)(x)) << S32G_GPR_GENSTAT0_STAT_SHIFT)) & S32G_GPR_GENSTAT0_STAT_MASK)
/*! @} */

/*! @name GENSTAT1 - Generic Status 1 */
/*! @{ */
#define S32G_GPR_GENSTAT1_STAT_MASK              (0xFFFFFFFFU)
#define S32G_GPR_GENSTAT1_STAT_SHIFT             (0U)
#define S32G_GPR_GENSTAT1_STAT_WIDTH             (32U)
#define S32G_GPR_GENSTAT1_STAT(x)                (((uint32_t)(((uint32_t)(x)) << S32G_GPR_GENSTAT1_STAT_SHIFT)) & S32G_GPR_GENSTAT1_STAT_MASK)
/*! @} */

/*! @name GENSTAT2 - Generic Status 2 */
/*! @{ */
#define S32G_GPR_GENSTAT2_STAT_MASK              (0xFFFFFFFFU)
#define S32G_GPR_GENSTAT2_STAT_SHIFT             (0U)
#define S32G_GPR_GENSTAT2_STAT_WIDTH             (32U)
#define S32G_GPR_GENSTAT2_STAT(x)                (((uint32_t)(((uint32_t)(x)) << S32G_GPR_GENSTAT2_STAT_SHIFT)) & S32G_GPR_GENSTAT2_STAT_MASK)
/*! @} */

/*! @name GENSTAT3 - Generic Status 3 */
/*! @{ */
#define S32G_GPR_GENSTAT3_STAT_MASK              (0xFFFFFFFFU)
#define S32G_GPR_GENSTAT3_STAT_SHIFT             (0U)
#define S32G_GPR_GENSTAT3_STAT_WIDTH             (32U)
#define S32G_GPR_GENSTAT3_STAT(x)                (((uint32_t)(((uint32_t)(x)) << S32G_GPR_GENSTAT3_STAT_SHIFT)) & S32G_GPR_GENSTAT3_STAT_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group S32G_GPR_Register_Masks */


/*!
 * @}
 */ /* end of group S32G_GPR_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- S32G_STDBY_GPR Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup S32G_STDBY_GPR_Peripheral_Access_Layer S32G_STDBY_GPR Peripheral Access Layer
 * @{
 */

/** S32G_STDBY_GPR - Register Layout Typedef */
typedef struct {
  uint8_t RESERVED_0[4];
  __IO uint32_t WKUP_PUS;                          /**< WKUP Pad Pullup/Pulldown Select, offset: 0x4 */
} S32G_STDBY_GPR_Type, *S32G_STDBY_GPR_MemMapPtr;

/** Number of instances of the S32G_STDBY_GPR module. */
#define S32G_STDBY_GPR_INSTANCE_COUNT            (1u)

/* S32G_STDBY_GPR - Peripheral instance base addresses */
/** Peripheral S32G_STDBY_GPR base address */
#define S32G_STDBY_GPR_BASE                      (0x4007CB00u)
/** Peripheral S32G_STDBY_GPR base pointer */
#define S32G_STDBY_GPR                           ((S32G_STDBY_GPR_Type *)S32G_STDBY_GPR_BASE)
/** Array initializer of S32G_STDBY_GPR peripheral base addresses */
#define S32G_STDBY_GPR_BASE_ADDRS                { S32G_STDBY_GPR_BASE }
/** Array initializer of S32G_STDBY_GPR peripheral base pointers */
#define S32G_STDBY_GPR_BASE_PTRS                 { S32G_STDBY_GPR }

/* ----------------------------------------------------------------------------
   -- S32G_STDBY_GPR Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup S32G_STDBY_GPR_Register_Masks S32G_STDBY_GPR Register Masks
 * @{
 */

/*! @name WKUP_PUS - WKUP Pad Pullup/Pulldown Select */
/*! @{ */
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS4_MASK   (0x1U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS4_SHIFT  (0U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS4_WIDTH  (1U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS4(x)     (((uint32_t)(((uint32_t)(x)) << S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS4_SHIFT)) & S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS4_MASK)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS5_MASK   (0x2U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS5_SHIFT  (1U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS5_WIDTH  (1U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS5(x)     (((uint32_t)(((uint32_t)(x)) << S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS5_SHIFT)) & S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS5_MASK)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS6_MASK   (0x4U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS6_SHIFT  (2U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS6_WIDTH  (1U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS6(x)     (((uint32_t)(((uint32_t)(x)) << S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS6_SHIFT)) & S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS6_MASK)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS7_MASK   (0x8U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS7_SHIFT  (3U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS7_WIDTH  (1U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS7(x)     (((uint32_t)(((uint32_t)(x)) << S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS7_SHIFT)) & S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS7_MASK)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS8_MASK   (0x10U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS8_SHIFT  (4U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS8_WIDTH  (1U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS8(x)     (((uint32_t)(((uint32_t)(x)) << S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS8_SHIFT)) & S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS8_MASK)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS9_MASK   (0x20U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS9_SHIFT  (5U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS9_WIDTH  (1U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS9(x)     (((uint32_t)(((uint32_t)(x)) << S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS9_SHIFT)) & S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS9_MASK)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS10_MASK  (0x40U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS10_SHIFT (6U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS10_WIDTH (1U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS10(x)    (((uint32_t)(((uint32_t)(x)) << S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS10_SHIFT)) & S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS10_MASK)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS11_MASK  (0x80U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS11_SHIFT (7U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS11_WIDTH (1U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS11(x)    (((uint32_t)(((uint32_t)(x)) << S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS11_SHIFT)) & S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS11_MASK)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS12_MASK  (0x100U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS12_SHIFT (8U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS12_WIDTH (1U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS12(x)    (((uint32_t)(((uint32_t)(x)) << S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS12_SHIFT)) & S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS12_MASK)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS13_MASK  (0x200U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS13_SHIFT (9U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS13_WIDTH (1U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS13(x)    (((uint32_t)(((uint32_t)(x)) << S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS13_SHIFT)) & S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS13_MASK)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS14_MASK  (0x400U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS14_SHIFT (10U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS14_WIDTH (1U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS14(x)    (((uint32_t)(((uint32_t)(x)) << S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS14_SHIFT)) & S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS14_MASK)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS15_MASK  (0x800U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS15_SHIFT (11U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS15_WIDTH (1U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS15(x)    (((uint32_t)(((uint32_t)(x)) << S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS15_SHIFT)) & S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS15_MASK)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS16_MASK  (0x1000U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS16_SHIFT (12U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS16_WIDTH (1U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS16(x)    (((uint32_t)(((uint32_t)(x)) << S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS16_SHIFT)) & S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS16_MASK)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS17_MASK  (0x2000U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS17_SHIFT (13U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS17_WIDTH (1U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS17(x)    (((uint32_t)(((uint32_t)(x)) << S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS17_SHIFT)) & S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS17_MASK)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS18_MASK  (0x4000U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS18_SHIFT (14U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS18_WIDTH (1U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS18(x)    (((uint32_t)(((uint32_t)(x)) << S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS18_SHIFT)) & S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS18_MASK)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS19_MASK  (0x8000U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS19_SHIFT (15U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS19_WIDTH (1U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS19(x)    (((uint32_t)(((uint32_t)(x)) << S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS19_SHIFT)) & S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS19_MASK)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS20_MASK  (0x10000U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS20_SHIFT (16U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS20_WIDTH (1U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS20(x)    (((uint32_t)(((uint32_t)(x)) << S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS20_SHIFT)) & S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS20_MASK)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS21_MASK  (0x20000U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS21_SHIFT (17U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS21_WIDTH (1U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS21(x)    (((uint32_t)(((uint32_t)(x)) << S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS21_SHIFT)) & S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS21_MASK)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS22_MASK  (0x40000U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS22_SHIFT (18U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS22_WIDTH (1U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS22(x)    (((uint32_t)(((uint32_t)(x)) << S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS22_SHIFT)) & S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS22_MASK)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS23_MASK  (0x80000U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS23_SHIFT (19U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS23_WIDTH (1U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS23(x)    (((uint32_t)(((uint32_t)(x)) << S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS23_SHIFT)) & S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS23_MASK)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS24_MASK  (0x100000U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS24_SHIFT (20U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS24_WIDTH (1U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS24(x)    (((uint32_t)(((uint32_t)(x)) << S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS24_SHIFT)) & S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS24_MASK)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS25_MASK  (0x200000U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS25_SHIFT (21U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS25_WIDTH (1U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS25(x)    (((uint32_t)(((uint32_t)(x)) << S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS25_SHIFT)) & S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS25_MASK)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS26_MASK  (0x400000U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS26_SHIFT (22U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS26_WIDTH (1U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS26(x)    (((uint32_t)(((uint32_t)(x)) << S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS26_SHIFT)) & S32G_STDBY_GPR_WKUP_PUS_WKUP_PUS26_MASK)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PU_OVERRIDE_MASK (0x80000000U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PU_OVERRIDE_SHIFT (31U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PU_OVERRIDE_WIDTH (1U)
#define S32G_STDBY_GPR_WKUP_PUS_WKUP_PU_OVERRIDE(x) (((uint32_t)(((uint32_t)(x)) << S32G_STDBY_GPR_WKUP_PUS_WKUP_PU_OVERRIDE_SHIFT)) & S32G_STDBY_GPR_WKUP_PUS_WKUP_PU_OVERRIDE_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group S32G_STDBY_GPR_Register_Masks */


/*!
 * @}
 */ /* end of group S32G_STDBY_GPR_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- SBSW Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SBSW_Peripheral_Access_Layer SBSW Peripheral Access Layer
 * @{
 */

/** SBSW - Size of Registers Arrays */
#define SBSW_TMC_COUNT                            32u
#define SBSW_AUT_COUNT                            32u

/** SBSW - Register Layout Typedef */
typedef struct {
  __O  uint32_t TMC_CONFIG_UNLOCK;                 /**< TMC Configuration Unlock, offset: 0x0 */
  __O  uint32_t TMWDP_CONFIG_UNLOCK;               /**< TMWDP Configuration Unlock, offset: 0x4 */
  __I  uint32_t TMC_CONFIG_STATUS;                 /**< TMC Configuration Status, offset: 0x8 */
  __I  uint32_t TMWDP_CONFIG_STATUS;               /**< TMWDP Configuration Status, offset: 0xC */
  __IO uint32_t DEBUG_MODE;                        /**< Debug Mode, offset: 0x10 */
  __I  uint32_t TMC_FAULT_STATUS;                  /**< TMC Fault Status, offset: 0x14 */
  __I  uint32_t TMWDP_FAULT_STATUS;                /**< TMWDP Fault Status, offset: 0x18 */
  uint8_t RESERVED_0[4];
  struct {                                         /* offset: 0x20, array step: 0x20 */
    __IO uint32_t CONFIG;                            /**< TMC Configuration, array offset: 0x20, array step: 0x20 */
    __IO uint32_t DISTANCE;                          /**< TMC Distance, array offset: 0x24, array step: 0x20 */
    __IO uint32_t TIMEOUT;                           /**< TMC Timeout, array offset: 0x28, array step: 0x20 */
    __IO uint32_t CONTROL;                           /**< TMC Control, array offset: 0x2C, array step: 0x20 */
    __IO uint32_t R0;                                /**< TMC R0 Data, array offset: 0x30, array step: 0x20 */
    __IO uint32_t R1;                                /**< TMC R1 Data, array offset: 0x34, array step: 0x20 */
    __IO uint32_t STATUS;                            /**< TMC Status, array offset: 0x38, array step: 0x20 */
    __I  uint32_t TIMER;                             /**< TMC Timer, array offset: 0x3C, array step: 0x20 */
  } TMC[SBSW_TMC_COUNT];
  __IO uint32_t TMWDP_CONFIG_ADDR;                 /**< TMWDP Configuration Address, offset: 0x420 */
  __IO uint32_t TMWDP_CONTROL;                     /**< TMWDP Control, offset: 0x424 */
  __I  uint32_t TMWDP_STATUS;                      /**< TMWDP Status, offset: 0x428 */
  __I  uint32_t TMWDP_AUTOMATA_STATUS;             /**< TMWDP Automata Status, offset: 0x42C */
  __I  uint32_t TMWDP_AUTOMATA_ILLGL_TRANS;        /**< TMWDP Automata Illegal Transition, offset: 0x430 */
  __I  uint32_t TMWDP_AUTOMATA_TIME_VIOLATION;     /**< TMWDP Automata Time Violation, offset: 0x434 */
  uint8_t RESERVED_1[24];
  struct {                                         /* offset: 0x450, array step: 0x8 */
    __I  uint32_t STATUS;                            /**< TMWDP Automaton Status, array offset: 0x450, array step: 0x8 */
    __IO uint32_t PRGS_REQ;                          /**< TMWDP Automaton Progress Request, array offset: 0x454, array step: 0x8 */
  } AUT[SBSW_AUT_COUNT];
  uint8_t RESERVED_2[2732];
  __IO uint32_t TC_ID;                             /**< TMWDP Core Domain ID, offset: 0xFFC */
} SBSW_Type, *SBSW_MemMapPtr;

/** Number of instances of the SBSW module. */
#define SBSW_INSTANCE_COUNT                      (1u)

/* SBSW - Peripheral instance base addresses */
/** Peripheral D_IP_SAFETY_BY_SW_SYN base address */
#define D_IP_SAFETY_BY_SW_SYN_BASE               (0x40310000u)
/** Peripheral D_IP_SAFETY_BY_SW_SYN base pointer */
#define D_IP_SAFETY_BY_SW_SYN                    ((SBSW_Type *)D_IP_SAFETY_BY_SW_SYN_BASE)
/** Array initializer of SBSW peripheral base addresses */
#define SBSW_BASE_ADDRS                          { D_IP_SAFETY_BY_SW_SYN_BASE }
/** Array initializer of SBSW peripheral base pointers */
#define SBSW_BASE_PTRS                           { D_IP_SAFETY_BY_SW_SYN }

/* ----------------------------------------------------------------------------
   -- SBSW Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SBSW_Register_Masks SBSW Register Masks
 * @{
 */

/*! @name TMC_CONFIG_UNLOCK - TMC Configuration Unlock */
/*! @{ */
#define SBSW_TMC_CONFIG_UNLOCK_KEY_MASK          (0xFFFFFFFFU)
#define SBSW_TMC_CONFIG_UNLOCK_KEY_SHIFT         (0U)
#define SBSW_TMC_CONFIG_UNLOCK_KEY_WIDTH         (32U)
#define SBSW_TMC_CONFIG_UNLOCK_KEY(x)            (((uint32_t)(((uint32_t)(x)) << SBSW_TMC_CONFIG_UNLOCK_KEY_SHIFT)) & SBSW_TMC_CONFIG_UNLOCK_KEY_MASK)
/*! @} */

/*! @name TMWDP_CONFIG_UNLOCK - TMWDP Configuration Unlock */
/*! @{ */
#define SBSW_TMWDP_CONFIG_UNLOCK_KEY_MASK        (0xFFFFFFFFU)
#define SBSW_TMWDP_CONFIG_UNLOCK_KEY_SHIFT       (0U)
#define SBSW_TMWDP_CONFIG_UNLOCK_KEY_WIDTH       (32U)
#define SBSW_TMWDP_CONFIG_UNLOCK_KEY(x)          (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_CONFIG_UNLOCK_KEY_SHIFT)) & SBSW_TMWDP_CONFIG_UNLOCK_KEY_MASK)
/*! @} */

/*! @name TMC_CONFIG_STATUS - TMC Configuration Status */
/*! @{ */
#define SBSW_TMC_CONFIG_STATUS_STATUS_MASK       (0x1U)
#define SBSW_TMC_CONFIG_STATUS_STATUS_SHIFT      (0U)
#define SBSW_TMC_CONFIG_STATUS_STATUS_WIDTH      (1U)
#define SBSW_TMC_CONFIG_STATUS_STATUS(x)         (((uint32_t)(((uint32_t)(x)) << SBSW_TMC_CONFIG_STATUS_STATUS_SHIFT)) & SBSW_TMC_CONFIG_STATUS_STATUS_MASK)
/*! @} */

/*! @name TMWDP_CONFIG_STATUS - TMWDP Configuration Status */
/*! @{ */
#define SBSW_TMWDP_CONFIG_STATUS_STATUS_MASK     (0x1U)
#define SBSW_TMWDP_CONFIG_STATUS_STATUS_SHIFT    (0U)
#define SBSW_TMWDP_CONFIG_STATUS_STATUS_WIDTH    (1U)
#define SBSW_TMWDP_CONFIG_STATUS_STATUS(x)       (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_CONFIG_STATUS_STATUS_SHIFT)) & SBSW_TMWDP_CONFIG_STATUS_STATUS_MASK)
/*! @} */

/*! @name DEBUG_MODE - Debug Mode */
/*! @{ */
#define SBSW_DEBUG_MODE_MODE_MASK                (0x80000000U)
#define SBSW_DEBUG_MODE_MODE_SHIFT               (31U)
#define SBSW_DEBUG_MODE_MODE_WIDTH               (1U)
#define SBSW_DEBUG_MODE_MODE(x)                  (((uint32_t)(((uint32_t)(x)) << SBSW_DEBUG_MODE_MODE_SHIFT)) & SBSW_DEBUG_MODE_MODE_MASK)
/*! @} */

/*! @name TMC_FAULT_STATUS - TMC Fault Status */
/*! @{ */
#define SBSW_TMC_FAULT_STATUS_STATUS0_MASK       (0x1U)
#define SBSW_TMC_FAULT_STATUS_STATUS0_SHIFT      (0U)
#define SBSW_TMC_FAULT_STATUS_STATUS0_WIDTH      (1U)
#define SBSW_TMC_FAULT_STATUS_STATUS0(x)         (((uint32_t)(((uint32_t)(x)) << SBSW_TMC_FAULT_STATUS_STATUS0_SHIFT)) & SBSW_TMC_FAULT_STATUS_STATUS0_MASK)
#define SBSW_TMC_FAULT_STATUS_STATUS1_MASK       (0x2U)
#define SBSW_TMC_FAULT_STATUS_STATUS1_SHIFT      (1U)
#define SBSW_TMC_FAULT_STATUS_STATUS1_WIDTH      (1U)
#define SBSW_TMC_FAULT_STATUS_STATUS1(x)         (((uint32_t)(((uint32_t)(x)) << SBSW_TMC_FAULT_STATUS_STATUS1_SHIFT)) & SBSW_TMC_FAULT_STATUS_STATUS1_MASK)
#define SBSW_TMC_FAULT_STATUS_STATUS2_MASK       (0x4U)
#define SBSW_TMC_FAULT_STATUS_STATUS2_SHIFT      (2U)
#define SBSW_TMC_FAULT_STATUS_STATUS2_WIDTH      (1U)
#define SBSW_TMC_FAULT_STATUS_STATUS2(x)         (((uint32_t)(((uint32_t)(x)) << SBSW_TMC_FAULT_STATUS_STATUS2_SHIFT)) & SBSW_TMC_FAULT_STATUS_STATUS2_MASK)
#define SBSW_TMC_FAULT_STATUS_STATUS3_MASK       (0x8U)
#define SBSW_TMC_FAULT_STATUS_STATUS3_SHIFT      (3U)
#define SBSW_TMC_FAULT_STATUS_STATUS3_WIDTH      (1U)
#define SBSW_TMC_FAULT_STATUS_STATUS3(x)         (((uint32_t)(((uint32_t)(x)) << SBSW_TMC_FAULT_STATUS_STATUS3_SHIFT)) & SBSW_TMC_FAULT_STATUS_STATUS3_MASK)
#define SBSW_TMC_FAULT_STATUS_STATUS4_MASK       (0x10U)
#define SBSW_TMC_FAULT_STATUS_STATUS4_SHIFT      (4U)
#define SBSW_TMC_FAULT_STATUS_STATUS4_WIDTH      (1U)
#define SBSW_TMC_FAULT_STATUS_STATUS4(x)         (((uint32_t)(((uint32_t)(x)) << SBSW_TMC_FAULT_STATUS_STATUS4_SHIFT)) & SBSW_TMC_FAULT_STATUS_STATUS4_MASK)
#define SBSW_TMC_FAULT_STATUS_STATUS5_MASK       (0x20U)
#define SBSW_TMC_FAULT_STATUS_STATUS5_SHIFT      (5U)
#define SBSW_TMC_FAULT_STATUS_STATUS5_WIDTH      (1U)
#define SBSW_TMC_FAULT_STATUS_STATUS5(x)         (((uint32_t)(((uint32_t)(x)) << SBSW_TMC_FAULT_STATUS_STATUS5_SHIFT)) & SBSW_TMC_FAULT_STATUS_STATUS5_MASK)
#define SBSW_TMC_FAULT_STATUS_STATUS6_MASK       (0x40U)
#define SBSW_TMC_FAULT_STATUS_STATUS6_SHIFT      (6U)
#define SBSW_TMC_FAULT_STATUS_STATUS6_WIDTH      (1U)
#define SBSW_TMC_FAULT_STATUS_STATUS6(x)         (((uint32_t)(((uint32_t)(x)) << SBSW_TMC_FAULT_STATUS_STATUS6_SHIFT)) & SBSW_TMC_FAULT_STATUS_STATUS6_MASK)
#define SBSW_TMC_FAULT_STATUS_STATUS7_MASK       (0x80U)
#define SBSW_TMC_FAULT_STATUS_STATUS7_SHIFT      (7U)
#define SBSW_TMC_FAULT_STATUS_STATUS7_WIDTH      (1U)
#define SBSW_TMC_FAULT_STATUS_STATUS7(x)         (((uint32_t)(((uint32_t)(x)) << SBSW_TMC_FAULT_STATUS_STATUS7_SHIFT)) & SBSW_TMC_FAULT_STATUS_STATUS7_MASK)
#define SBSW_TMC_FAULT_STATUS_STATUS8_MASK       (0x100U)
#define SBSW_TMC_FAULT_STATUS_STATUS8_SHIFT      (8U)
#define SBSW_TMC_FAULT_STATUS_STATUS8_WIDTH      (1U)
#define SBSW_TMC_FAULT_STATUS_STATUS8(x)         (((uint32_t)(((uint32_t)(x)) << SBSW_TMC_FAULT_STATUS_STATUS8_SHIFT)) & SBSW_TMC_FAULT_STATUS_STATUS8_MASK)
#define SBSW_TMC_FAULT_STATUS_STATUS9_MASK       (0x200U)
#define SBSW_TMC_FAULT_STATUS_STATUS9_SHIFT      (9U)
#define SBSW_TMC_FAULT_STATUS_STATUS9_WIDTH      (1U)
#define SBSW_TMC_FAULT_STATUS_STATUS9(x)         (((uint32_t)(((uint32_t)(x)) << SBSW_TMC_FAULT_STATUS_STATUS9_SHIFT)) & SBSW_TMC_FAULT_STATUS_STATUS9_MASK)
#define SBSW_TMC_FAULT_STATUS_STATUS10_MASK      (0x400U)
#define SBSW_TMC_FAULT_STATUS_STATUS10_SHIFT     (10U)
#define SBSW_TMC_FAULT_STATUS_STATUS10_WIDTH     (1U)
#define SBSW_TMC_FAULT_STATUS_STATUS10(x)        (((uint32_t)(((uint32_t)(x)) << SBSW_TMC_FAULT_STATUS_STATUS10_SHIFT)) & SBSW_TMC_FAULT_STATUS_STATUS10_MASK)
#define SBSW_TMC_FAULT_STATUS_STATUS11_MASK      (0x800U)
#define SBSW_TMC_FAULT_STATUS_STATUS11_SHIFT     (11U)
#define SBSW_TMC_FAULT_STATUS_STATUS11_WIDTH     (1U)
#define SBSW_TMC_FAULT_STATUS_STATUS11(x)        (((uint32_t)(((uint32_t)(x)) << SBSW_TMC_FAULT_STATUS_STATUS11_SHIFT)) & SBSW_TMC_FAULT_STATUS_STATUS11_MASK)
#define SBSW_TMC_FAULT_STATUS_STATUS12_MASK      (0x1000U)
#define SBSW_TMC_FAULT_STATUS_STATUS12_SHIFT     (12U)
#define SBSW_TMC_FAULT_STATUS_STATUS12_WIDTH     (1U)
#define SBSW_TMC_FAULT_STATUS_STATUS12(x)        (((uint32_t)(((uint32_t)(x)) << SBSW_TMC_FAULT_STATUS_STATUS12_SHIFT)) & SBSW_TMC_FAULT_STATUS_STATUS12_MASK)
#define SBSW_TMC_FAULT_STATUS_STATUS13_MASK      (0x2000U)
#define SBSW_TMC_FAULT_STATUS_STATUS13_SHIFT     (13U)
#define SBSW_TMC_FAULT_STATUS_STATUS13_WIDTH     (1U)
#define SBSW_TMC_FAULT_STATUS_STATUS13(x)        (((uint32_t)(((uint32_t)(x)) << SBSW_TMC_FAULT_STATUS_STATUS13_SHIFT)) & SBSW_TMC_FAULT_STATUS_STATUS13_MASK)
#define SBSW_TMC_FAULT_STATUS_STATUS14_MASK      (0x4000U)
#define SBSW_TMC_FAULT_STATUS_STATUS14_SHIFT     (14U)
#define SBSW_TMC_FAULT_STATUS_STATUS14_WIDTH     (1U)
#define SBSW_TMC_FAULT_STATUS_STATUS14(x)        (((uint32_t)(((uint32_t)(x)) << SBSW_TMC_FAULT_STATUS_STATUS14_SHIFT)) & SBSW_TMC_FAULT_STATUS_STATUS14_MASK)
#define SBSW_TMC_FAULT_STATUS_STATUS15_MASK      (0x8000U)
#define SBSW_TMC_FAULT_STATUS_STATUS15_SHIFT     (15U)
#define SBSW_TMC_FAULT_STATUS_STATUS15_WIDTH     (1U)
#define SBSW_TMC_FAULT_STATUS_STATUS15(x)        (((uint32_t)(((uint32_t)(x)) << SBSW_TMC_FAULT_STATUS_STATUS15_SHIFT)) & SBSW_TMC_FAULT_STATUS_STATUS15_MASK)
#define SBSW_TMC_FAULT_STATUS_STATUS16_MASK      (0x10000U)
#define SBSW_TMC_FAULT_STATUS_STATUS16_SHIFT     (16U)
#define SBSW_TMC_FAULT_STATUS_STATUS16_WIDTH     (1U)
#define SBSW_TMC_FAULT_STATUS_STATUS16(x)        (((uint32_t)(((uint32_t)(x)) << SBSW_TMC_FAULT_STATUS_STATUS16_SHIFT)) & SBSW_TMC_FAULT_STATUS_STATUS16_MASK)
#define SBSW_TMC_FAULT_STATUS_STATUS17_MASK      (0x20000U)
#define SBSW_TMC_FAULT_STATUS_STATUS17_SHIFT     (17U)
#define SBSW_TMC_FAULT_STATUS_STATUS17_WIDTH     (1U)
#define SBSW_TMC_FAULT_STATUS_STATUS17(x)        (((uint32_t)(((uint32_t)(x)) << SBSW_TMC_FAULT_STATUS_STATUS17_SHIFT)) & SBSW_TMC_FAULT_STATUS_STATUS17_MASK)
#define SBSW_TMC_FAULT_STATUS_STATUS18_MASK      (0x40000U)
#define SBSW_TMC_FAULT_STATUS_STATUS18_SHIFT     (18U)
#define SBSW_TMC_FAULT_STATUS_STATUS18_WIDTH     (1U)
#define SBSW_TMC_FAULT_STATUS_STATUS18(x)        (((uint32_t)(((uint32_t)(x)) << SBSW_TMC_FAULT_STATUS_STATUS18_SHIFT)) & SBSW_TMC_FAULT_STATUS_STATUS18_MASK)
#define SBSW_TMC_FAULT_STATUS_STATUS19_MASK      (0x80000U)
#define SBSW_TMC_FAULT_STATUS_STATUS19_SHIFT     (19U)
#define SBSW_TMC_FAULT_STATUS_STATUS19_WIDTH     (1U)
#define SBSW_TMC_FAULT_STATUS_STATUS19(x)        (((uint32_t)(((uint32_t)(x)) << SBSW_TMC_FAULT_STATUS_STATUS19_SHIFT)) & SBSW_TMC_FAULT_STATUS_STATUS19_MASK)
#define SBSW_TMC_FAULT_STATUS_STATUS20_MASK      (0x100000U)
#define SBSW_TMC_FAULT_STATUS_STATUS20_SHIFT     (20U)
#define SBSW_TMC_FAULT_STATUS_STATUS20_WIDTH     (1U)
#define SBSW_TMC_FAULT_STATUS_STATUS20(x)        (((uint32_t)(((uint32_t)(x)) << SBSW_TMC_FAULT_STATUS_STATUS20_SHIFT)) & SBSW_TMC_FAULT_STATUS_STATUS20_MASK)
#define SBSW_TMC_FAULT_STATUS_STATUS21_MASK      (0x200000U)
#define SBSW_TMC_FAULT_STATUS_STATUS21_SHIFT     (21U)
#define SBSW_TMC_FAULT_STATUS_STATUS21_WIDTH     (1U)
#define SBSW_TMC_FAULT_STATUS_STATUS21(x)        (((uint32_t)(((uint32_t)(x)) << SBSW_TMC_FAULT_STATUS_STATUS21_SHIFT)) & SBSW_TMC_FAULT_STATUS_STATUS21_MASK)
#define SBSW_TMC_FAULT_STATUS_STATUS22_MASK      (0x400000U)
#define SBSW_TMC_FAULT_STATUS_STATUS22_SHIFT     (22U)
#define SBSW_TMC_FAULT_STATUS_STATUS22_WIDTH     (1U)
#define SBSW_TMC_FAULT_STATUS_STATUS22(x)        (((uint32_t)(((uint32_t)(x)) << SBSW_TMC_FAULT_STATUS_STATUS22_SHIFT)) & SBSW_TMC_FAULT_STATUS_STATUS22_MASK)
#define SBSW_TMC_FAULT_STATUS_STATUS23_MASK      (0x800000U)
#define SBSW_TMC_FAULT_STATUS_STATUS23_SHIFT     (23U)
#define SBSW_TMC_FAULT_STATUS_STATUS23_WIDTH     (1U)
#define SBSW_TMC_FAULT_STATUS_STATUS23(x)        (((uint32_t)(((uint32_t)(x)) << SBSW_TMC_FAULT_STATUS_STATUS23_SHIFT)) & SBSW_TMC_FAULT_STATUS_STATUS23_MASK)
#define SBSW_TMC_FAULT_STATUS_STATUS24_MASK      (0x1000000U)
#define SBSW_TMC_FAULT_STATUS_STATUS24_SHIFT     (24U)
#define SBSW_TMC_FAULT_STATUS_STATUS24_WIDTH     (1U)
#define SBSW_TMC_FAULT_STATUS_STATUS24(x)        (((uint32_t)(((uint32_t)(x)) << SBSW_TMC_FAULT_STATUS_STATUS24_SHIFT)) & SBSW_TMC_FAULT_STATUS_STATUS24_MASK)
#define SBSW_TMC_FAULT_STATUS_STATUS25_MASK      (0x2000000U)
#define SBSW_TMC_FAULT_STATUS_STATUS25_SHIFT     (25U)
#define SBSW_TMC_FAULT_STATUS_STATUS25_WIDTH     (1U)
#define SBSW_TMC_FAULT_STATUS_STATUS25(x)        (((uint32_t)(((uint32_t)(x)) << SBSW_TMC_FAULT_STATUS_STATUS25_SHIFT)) & SBSW_TMC_FAULT_STATUS_STATUS25_MASK)
#define SBSW_TMC_FAULT_STATUS_STATUS26_MASK      (0x4000000U)
#define SBSW_TMC_FAULT_STATUS_STATUS26_SHIFT     (26U)
#define SBSW_TMC_FAULT_STATUS_STATUS26_WIDTH     (1U)
#define SBSW_TMC_FAULT_STATUS_STATUS26(x)        (((uint32_t)(((uint32_t)(x)) << SBSW_TMC_FAULT_STATUS_STATUS26_SHIFT)) & SBSW_TMC_FAULT_STATUS_STATUS26_MASK)
#define SBSW_TMC_FAULT_STATUS_STATUS27_MASK      (0x8000000U)
#define SBSW_TMC_FAULT_STATUS_STATUS27_SHIFT     (27U)
#define SBSW_TMC_FAULT_STATUS_STATUS27_WIDTH     (1U)
#define SBSW_TMC_FAULT_STATUS_STATUS27(x)        (((uint32_t)(((uint32_t)(x)) << SBSW_TMC_FAULT_STATUS_STATUS27_SHIFT)) & SBSW_TMC_FAULT_STATUS_STATUS27_MASK)
#define SBSW_TMC_FAULT_STATUS_STATUS28_MASK      (0x10000000U)
#define SBSW_TMC_FAULT_STATUS_STATUS28_SHIFT     (28U)
#define SBSW_TMC_FAULT_STATUS_STATUS28_WIDTH     (1U)
#define SBSW_TMC_FAULT_STATUS_STATUS28(x)        (((uint32_t)(((uint32_t)(x)) << SBSW_TMC_FAULT_STATUS_STATUS28_SHIFT)) & SBSW_TMC_FAULT_STATUS_STATUS28_MASK)
#define SBSW_TMC_FAULT_STATUS_STATUS29_MASK      (0x20000000U)
#define SBSW_TMC_FAULT_STATUS_STATUS29_SHIFT     (29U)
#define SBSW_TMC_FAULT_STATUS_STATUS29_WIDTH     (1U)
#define SBSW_TMC_FAULT_STATUS_STATUS29(x)        (((uint32_t)(((uint32_t)(x)) << SBSW_TMC_FAULT_STATUS_STATUS29_SHIFT)) & SBSW_TMC_FAULT_STATUS_STATUS29_MASK)
#define SBSW_TMC_FAULT_STATUS_STATUS30_MASK      (0x40000000U)
#define SBSW_TMC_FAULT_STATUS_STATUS30_SHIFT     (30U)
#define SBSW_TMC_FAULT_STATUS_STATUS30_WIDTH     (1U)
#define SBSW_TMC_FAULT_STATUS_STATUS30(x)        (((uint32_t)(((uint32_t)(x)) << SBSW_TMC_FAULT_STATUS_STATUS30_SHIFT)) & SBSW_TMC_FAULT_STATUS_STATUS30_MASK)
#define SBSW_TMC_FAULT_STATUS_STATUS31_MASK      (0x80000000U)
#define SBSW_TMC_FAULT_STATUS_STATUS31_SHIFT     (31U)
#define SBSW_TMC_FAULT_STATUS_STATUS31_WIDTH     (1U)
#define SBSW_TMC_FAULT_STATUS_STATUS31(x)        (((uint32_t)(((uint32_t)(x)) << SBSW_TMC_FAULT_STATUS_STATUS31_SHIFT)) & SBSW_TMC_FAULT_STATUS_STATUS31_MASK)
/*! @} */

/*! @name TMWDP_FAULT_STATUS - TMWDP Fault Status */
/*! @{ */
#define SBSW_TMWDP_FAULT_STATUS_STATUS0_MASK     (0x1U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS0_SHIFT    (0U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS0_WIDTH    (1U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS0(x)       (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_FAULT_STATUS_STATUS0_SHIFT)) & SBSW_TMWDP_FAULT_STATUS_STATUS0_MASK)
#define SBSW_TMWDP_FAULT_STATUS_STATUS1_MASK     (0x2U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS1_SHIFT    (1U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS1_WIDTH    (1U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS1(x)       (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_FAULT_STATUS_STATUS1_SHIFT)) & SBSW_TMWDP_FAULT_STATUS_STATUS1_MASK)
#define SBSW_TMWDP_FAULT_STATUS_STATUS2_MASK     (0x4U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS2_SHIFT    (2U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS2_WIDTH    (1U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS2(x)       (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_FAULT_STATUS_STATUS2_SHIFT)) & SBSW_TMWDP_FAULT_STATUS_STATUS2_MASK)
#define SBSW_TMWDP_FAULT_STATUS_STATUS3_MASK     (0x8U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS3_SHIFT    (3U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS3_WIDTH    (1U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS3(x)       (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_FAULT_STATUS_STATUS3_SHIFT)) & SBSW_TMWDP_FAULT_STATUS_STATUS3_MASK)
#define SBSW_TMWDP_FAULT_STATUS_STATUS4_MASK     (0x10U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS4_SHIFT    (4U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS4_WIDTH    (1U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS4(x)       (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_FAULT_STATUS_STATUS4_SHIFT)) & SBSW_TMWDP_FAULT_STATUS_STATUS4_MASK)
#define SBSW_TMWDP_FAULT_STATUS_STATUS5_MASK     (0x20U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS5_SHIFT    (5U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS5_WIDTH    (1U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS5(x)       (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_FAULT_STATUS_STATUS5_SHIFT)) & SBSW_TMWDP_FAULT_STATUS_STATUS5_MASK)
#define SBSW_TMWDP_FAULT_STATUS_STATUS6_MASK     (0x40U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS6_SHIFT    (6U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS6_WIDTH    (1U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS6(x)       (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_FAULT_STATUS_STATUS6_SHIFT)) & SBSW_TMWDP_FAULT_STATUS_STATUS6_MASK)
#define SBSW_TMWDP_FAULT_STATUS_STATUS7_MASK     (0x80U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS7_SHIFT    (7U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS7_WIDTH    (1U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS7(x)       (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_FAULT_STATUS_STATUS7_SHIFT)) & SBSW_TMWDP_FAULT_STATUS_STATUS7_MASK)
#define SBSW_TMWDP_FAULT_STATUS_STATUS8_MASK     (0x100U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS8_SHIFT    (8U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS8_WIDTH    (1U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS8(x)       (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_FAULT_STATUS_STATUS8_SHIFT)) & SBSW_TMWDP_FAULT_STATUS_STATUS8_MASK)
#define SBSW_TMWDP_FAULT_STATUS_STATUS9_MASK     (0x200U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS9_SHIFT    (9U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS9_WIDTH    (1U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS9(x)       (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_FAULT_STATUS_STATUS9_SHIFT)) & SBSW_TMWDP_FAULT_STATUS_STATUS9_MASK)
#define SBSW_TMWDP_FAULT_STATUS_STATUS10_MASK    (0x400U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS10_SHIFT   (10U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS10_WIDTH   (1U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS10(x)      (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_FAULT_STATUS_STATUS10_SHIFT)) & SBSW_TMWDP_FAULT_STATUS_STATUS10_MASK)
#define SBSW_TMWDP_FAULT_STATUS_STATUS11_MASK    (0x800U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS11_SHIFT   (11U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS11_WIDTH   (1U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS11(x)      (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_FAULT_STATUS_STATUS11_SHIFT)) & SBSW_TMWDP_FAULT_STATUS_STATUS11_MASK)
#define SBSW_TMWDP_FAULT_STATUS_STATUS12_MASK    (0x1000U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS12_SHIFT   (12U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS12_WIDTH   (1U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS12(x)      (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_FAULT_STATUS_STATUS12_SHIFT)) & SBSW_TMWDP_FAULT_STATUS_STATUS12_MASK)
#define SBSW_TMWDP_FAULT_STATUS_STATUS13_MASK    (0x2000U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS13_SHIFT   (13U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS13_WIDTH   (1U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS13(x)      (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_FAULT_STATUS_STATUS13_SHIFT)) & SBSW_TMWDP_FAULT_STATUS_STATUS13_MASK)
#define SBSW_TMWDP_FAULT_STATUS_STATUS14_MASK    (0x4000U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS14_SHIFT   (14U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS14_WIDTH   (1U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS14(x)      (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_FAULT_STATUS_STATUS14_SHIFT)) & SBSW_TMWDP_FAULT_STATUS_STATUS14_MASK)
#define SBSW_TMWDP_FAULT_STATUS_STATUS15_MASK    (0x8000U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS15_SHIFT   (15U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS15_WIDTH   (1U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS15(x)      (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_FAULT_STATUS_STATUS15_SHIFT)) & SBSW_TMWDP_FAULT_STATUS_STATUS15_MASK)
#define SBSW_TMWDP_FAULT_STATUS_STATUS16_MASK    (0x10000U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS16_SHIFT   (16U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS16_WIDTH   (1U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS16(x)      (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_FAULT_STATUS_STATUS16_SHIFT)) & SBSW_TMWDP_FAULT_STATUS_STATUS16_MASK)
#define SBSW_TMWDP_FAULT_STATUS_STATUS17_MASK    (0x20000U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS17_SHIFT   (17U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS17_WIDTH   (1U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS17(x)      (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_FAULT_STATUS_STATUS17_SHIFT)) & SBSW_TMWDP_FAULT_STATUS_STATUS17_MASK)
#define SBSW_TMWDP_FAULT_STATUS_STATUS18_MASK    (0x40000U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS18_SHIFT   (18U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS18_WIDTH   (1U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS18(x)      (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_FAULT_STATUS_STATUS18_SHIFT)) & SBSW_TMWDP_FAULT_STATUS_STATUS18_MASK)
#define SBSW_TMWDP_FAULT_STATUS_STATUS19_MASK    (0x80000U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS19_SHIFT   (19U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS19_WIDTH   (1U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS19(x)      (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_FAULT_STATUS_STATUS19_SHIFT)) & SBSW_TMWDP_FAULT_STATUS_STATUS19_MASK)
#define SBSW_TMWDP_FAULT_STATUS_STATUS20_MASK    (0x100000U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS20_SHIFT   (20U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS20_WIDTH   (1U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS20(x)      (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_FAULT_STATUS_STATUS20_SHIFT)) & SBSW_TMWDP_FAULT_STATUS_STATUS20_MASK)
#define SBSW_TMWDP_FAULT_STATUS_STATUS21_MASK    (0x200000U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS21_SHIFT   (21U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS21_WIDTH   (1U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS21(x)      (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_FAULT_STATUS_STATUS21_SHIFT)) & SBSW_TMWDP_FAULT_STATUS_STATUS21_MASK)
#define SBSW_TMWDP_FAULT_STATUS_STATUS22_MASK    (0x400000U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS22_SHIFT   (22U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS22_WIDTH   (1U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS22(x)      (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_FAULT_STATUS_STATUS22_SHIFT)) & SBSW_TMWDP_FAULT_STATUS_STATUS22_MASK)
#define SBSW_TMWDP_FAULT_STATUS_STATUS23_MASK    (0x800000U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS23_SHIFT   (23U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS23_WIDTH   (1U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS23(x)      (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_FAULT_STATUS_STATUS23_SHIFT)) & SBSW_TMWDP_FAULT_STATUS_STATUS23_MASK)
#define SBSW_TMWDP_FAULT_STATUS_STATUS24_MASK    (0x1000000U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS24_SHIFT   (24U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS24_WIDTH   (1U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS24(x)      (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_FAULT_STATUS_STATUS24_SHIFT)) & SBSW_TMWDP_FAULT_STATUS_STATUS24_MASK)
#define SBSW_TMWDP_FAULT_STATUS_STATUS25_MASK    (0x2000000U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS25_SHIFT   (25U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS25_WIDTH   (1U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS25(x)      (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_FAULT_STATUS_STATUS25_SHIFT)) & SBSW_TMWDP_FAULT_STATUS_STATUS25_MASK)
#define SBSW_TMWDP_FAULT_STATUS_STATUS26_MASK    (0x4000000U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS26_SHIFT   (26U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS26_WIDTH   (1U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS26(x)      (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_FAULT_STATUS_STATUS26_SHIFT)) & SBSW_TMWDP_FAULT_STATUS_STATUS26_MASK)
#define SBSW_TMWDP_FAULT_STATUS_STATUS27_MASK    (0x8000000U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS27_SHIFT   (27U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS27_WIDTH   (1U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS27(x)      (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_FAULT_STATUS_STATUS27_SHIFT)) & SBSW_TMWDP_FAULT_STATUS_STATUS27_MASK)
#define SBSW_TMWDP_FAULT_STATUS_STATUS28_MASK    (0x10000000U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS28_SHIFT   (28U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS28_WIDTH   (1U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS28(x)      (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_FAULT_STATUS_STATUS28_SHIFT)) & SBSW_TMWDP_FAULT_STATUS_STATUS28_MASK)
#define SBSW_TMWDP_FAULT_STATUS_STATUS29_MASK    (0x20000000U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS29_SHIFT   (29U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS29_WIDTH   (1U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS29(x)      (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_FAULT_STATUS_STATUS29_SHIFT)) & SBSW_TMWDP_FAULT_STATUS_STATUS29_MASK)
#define SBSW_TMWDP_FAULT_STATUS_STATUS30_MASK    (0x40000000U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS30_SHIFT   (30U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS30_WIDTH   (1U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS30(x)      (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_FAULT_STATUS_STATUS30_SHIFT)) & SBSW_TMWDP_FAULT_STATUS_STATUS30_MASK)
#define SBSW_TMWDP_FAULT_STATUS_STATUS31_MASK    (0x80000000U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS31_SHIFT   (31U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS31_WIDTH   (1U)
#define SBSW_TMWDP_FAULT_STATUS_STATUS31(x)      (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_FAULT_STATUS_STATUS31_SHIFT)) & SBSW_TMWDP_FAULT_STATUS_STATUS31_MASK)
/*! @} */

/*! @name CONFIG - TMC Configuration */
/*! @{ */
#define SBSW_CONFIG_TIMING_MODE_MASK             (0x1U)
#define SBSW_CONFIG_TIMING_MODE_SHIFT            (0U)
#define SBSW_CONFIG_TIMING_MODE_WIDTH            (1U)
#define SBSW_CONFIG_TIMING_MODE(x)               (((uint32_t)(((uint32_t)(x)) << SBSW_CONFIG_TIMING_MODE_SHIFT)) & SBSW_CONFIG_TIMING_MODE_MASK)
#define SBSW_CONFIG_COMPARE_MODE_MASK            (0x6U)
#define SBSW_CONFIG_COMPARE_MODE_SHIFT           (1U)
#define SBSW_CONFIG_COMPARE_MODE_WIDTH           (2U)
#define SBSW_CONFIG_COMPARE_MODE(x)              (((uint32_t)(((uint32_t)(x)) << SBSW_CONFIG_COMPARE_MODE_SHIFT)) & SBSW_CONFIG_COMPARE_MODE_MASK)
/*! @} */

/*! @name DISTANCE - TMC Distance */
/*! @{ */
#define SBSW_DISTANCE_DISTANCE_MASK              (0xFFFFFFFFU)
#define SBSW_DISTANCE_DISTANCE_SHIFT             (0U)
#define SBSW_DISTANCE_DISTANCE_WIDTH             (32U)
#define SBSW_DISTANCE_DISTANCE(x)                (((uint32_t)(((uint32_t)(x)) << SBSW_DISTANCE_DISTANCE_SHIFT)) & SBSW_DISTANCE_DISTANCE_MASK)
/*! @} */

/*! @name TIMEOUT - TMC Timeout */
/*! @{ */
#define SBSW_TIMEOUT_TIMEOUT_MASK                (0xFFFFFFFFU)
#define SBSW_TIMEOUT_TIMEOUT_SHIFT               (0U)
#define SBSW_TIMEOUT_TIMEOUT_WIDTH               (32U)
#define SBSW_TIMEOUT_TIMEOUT(x)                  (((uint32_t)(((uint32_t)(x)) << SBSW_TIMEOUT_TIMEOUT_SHIFT)) & SBSW_TIMEOUT_TIMEOUT_MASK)
/*! @} */

/*! @name CONTROL - TMC Control */
/*! @{ */
#define SBSW_CONTROL_ENABLE_MASK                 (0x1U)
#define SBSW_CONTROL_ENABLE_SHIFT                (0U)
#define SBSW_CONTROL_ENABLE_WIDTH                (1U)
#define SBSW_CONTROL_ENABLE(x)                   (((uint32_t)(((uint32_t)(x)) << SBSW_CONTROL_ENABLE_SHIFT)) & SBSW_CONTROL_ENABLE_MASK)
/*! @} */

/*! @name R0 - TMC R0 Data */
/*! @{ */
#define SBSW_R0_R0_MASK                          (0xFFFFFFFFU)
#define SBSW_R0_R0_SHIFT                         (0U)
#define SBSW_R0_R0_WIDTH                         (32U)
#define SBSW_R0_R0(x)                            (((uint32_t)(((uint32_t)(x)) << SBSW_R0_R0_SHIFT)) & SBSW_R0_R0_MASK)
/*! @} */

/*! @name R1 - TMC R1 Data */
/*! @{ */
#define SBSW_R1_R1_MASK                          (0xFFFFFFFFU)
#define SBSW_R1_R1_SHIFT                         (0U)
#define SBSW_R1_R1_WIDTH                         (32U)
#define SBSW_R1_R1(x)                            (((uint32_t)(((uint32_t)(x)) << SBSW_R1_R1_SHIFT)) & SBSW_R1_R1_MASK)
/*! @} */

/*! @name STATUS - TMC Status */
/*! @{ */
#define SBSW_STATUS_R0_WRITTEN_MASK              (0x1U)
#define SBSW_STATUS_R0_WRITTEN_SHIFT             (0U)
#define SBSW_STATUS_R0_WRITTEN_WIDTH             (1U)
#define SBSW_STATUS_R0_WRITTEN(x)                (((uint32_t)(((uint32_t)(x)) << SBSW_STATUS_R0_WRITTEN_SHIFT)) & SBSW_STATUS_R0_WRITTEN_MASK)
#define SBSW_STATUS_R1_WRITTEN_MASK              (0x2U)
#define SBSW_STATUS_R1_WRITTEN_SHIFT             (1U)
#define SBSW_STATUS_R1_WRITTEN_WIDTH             (1U)
#define SBSW_STATUS_R1_WRITTEN(x)                (((uint32_t)(((uint32_t)(x)) << SBSW_STATUS_R1_WRITTEN_SHIFT)) & SBSW_STATUS_R1_WRITTEN_MASK)
#define SBSW_STATUS_FAULT_MASK                   (0xCU)
#define SBSW_STATUS_FAULT_SHIFT                  (2U)
#define SBSW_STATUS_FAULT_WIDTH                  (2U)
#define SBSW_STATUS_FAULT(x)                     (((uint32_t)(((uint32_t)(x)) << SBSW_STATUS_FAULT_SHIFT)) & SBSW_STATUS_FAULT_MASK)
#define SBSW_STATUS_OVERWRITTEN_MASK             (0x10U)
#define SBSW_STATUS_OVERWRITTEN_SHIFT            (4U)
#define SBSW_STATUS_OVERWRITTEN_WIDTH            (1U)
#define SBSW_STATUS_OVERWRITTEN(x)               (((uint32_t)(((uint32_t)(x)) << SBSW_STATUS_OVERWRITTEN_SHIFT)) & SBSW_STATUS_OVERWRITTEN_MASK)
/*! @} */

/*! @name TIMER - TMC Timer */
/*! @{ */
#define SBSW_TIMER_TIMER_MASK                    (0xFFFFFFFFU)
#define SBSW_TIMER_TIMER_SHIFT                   (0U)
#define SBSW_TIMER_TIMER_WIDTH                   (32U)
#define SBSW_TIMER_TIMER(x)                      (((uint32_t)(((uint32_t)(x)) << SBSW_TIMER_TIMER_SHIFT)) & SBSW_TIMER_TIMER_MASK)
/*! @} */

/*! @name TMWDP_CONFIG_ADDR - TMWDP Configuration Address */
/*! @{ */
#define SBSW_TMWDP_CONFIG_ADDR_ADDRESS_MASK      (0xFFFFFFFFU)
#define SBSW_TMWDP_CONFIG_ADDR_ADDRESS_SHIFT     (0U)
#define SBSW_TMWDP_CONFIG_ADDR_ADDRESS_WIDTH     (32U)
#define SBSW_TMWDP_CONFIG_ADDR_ADDRESS(x)        (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_CONFIG_ADDR_ADDRESS_SHIFT)) & SBSW_TMWDP_CONFIG_ADDR_ADDRESS_MASK)
/*! @} */

/*! @name TMWDP_CONTROL - TMWDP Control */
/*! @{ */
#define SBSW_TMWDP_CONTROL_ENABLE_MASK           (0x1U)
#define SBSW_TMWDP_CONTROL_ENABLE_SHIFT          (0U)
#define SBSW_TMWDP_CONTROL_ENABLE_WIDTH          (1U)
#define SBSW_TMWDP_CONTROL_ENABLE(x)             (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_CONTROL_ENABLE_SHIFT)) & SBSW_TMWDP_CONTROL_ENABLE_MASK)
/*! @} */

/*! @name TMWDP_STATUS - TMWDP Status */
/*! @{ */
#define SBSW_TMWDP_STATUS_INTERNAL_ERROR_MASK    (0x1U)
#define SBSW_TMWDP_STATUS_INTERNAL_ERROR_SHIFT   (0U)
#define SBSW_TMWDP_STATUS_INTERNAL_ERROR_WIDTH   (1U)
#define SBSW_TMWDP_STATUS_INTERNAL_ERROR(x)      (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_STATUS_INTERNAL_ERROR_SHIFT)) & SBSW_TMWDP_STATUS_INTERNAL_ERROR_MASK)
#define SBSW_TMWDP_STATUS_CONFIG_ERROR_MASK      (0x2U)
#define SBSW_TMWDP_STATUS_CONFIG_ERROR_SHIFT     (1U)
#define SBSW_TMWDP_STATUS_CONFIG_ERROR_WIDTH     (1U)
#define SBSW_TMWDP_STATUS_CONFIG_ERROR(x)        (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_STATUS_CONFIG_ERROR_SHIFT)) & SBSW_TMWDP_STATUS_CONFIG_ERROR_MASK)
#define SBSW_TMWDP_STATUS_RUNNING_MASK           (0x4U)
#define SBSW_TMWDP_STATUS_RUNNING_SHIFT          (2U)
#define SBSW_TMWDP_STATUS_RUNNING_WIDTH          (1U)
#define SBSW_TMWDP_STATUS_RUNNING(x)             (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_STATUS_RUNNING_SHIFT)) & SBSW_TMWDP_STATUS_RUNNING_MASK)
/*! @} */

/*! @name TMWDP_AUTOMATA_STATUS - TMWDP Automata Status */
/*! @{ */
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS0_MASK  (0x1U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS0_SHIFT (0U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS0_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS0(x)    (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_STATUS_STATUS0_SHIFT)) & SBSW_TMWDP_AUTOMATA_STATUS_STATUS0_MASK)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS1_MASK  (0x2U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS1_SHIFT (1U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS1_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS1(x)    (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_STATUS_STATUS1_SHIFT)) & SBSW_TMWDP_AUTOMATA_STATUS_STATUS1_MASK)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS2_MASK  (0x4U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS2_SHIFT (2U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS2_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS2(x)    (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_STATUS_STATUS2_SHIFT)) & SBSW_TMWDP_AUTOMATA_STATUS_STATUS2_MASK)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS3_MASK  (0x8U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS3_SHIFT (3U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS3_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS3(x)    (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_STATUS_STATUS3_SHIFT)) & SBSW_TMWDP_AUTOMATA_STATUS_STATUS3_MASK)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS4_MASK  (0x10U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS4_SHIFT (4U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS4_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS4(x)    (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_STATUS_STATUS4_SHIFT)) & SBSW_TMWDP_AUTOMATA_STATUS_STATUS4_MASK)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS5_MASK  (0x20U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS5_SHIFT (5U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS5_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS5(x)    (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_STATUS_STATUS5_SHIFT)) & SBSW_TMWDP_AUTOMATA_STATUS_STATUS5_MASK)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS6_MASK  (0x40U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS6_SHIFT (6U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS6_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS6(x)    (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_STATUS_STATUS6_SHIFT)) & SBSW_TMWDP_AUTOMATA_STATUS_STATUS6_MASK)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS7_MASK  (0x80U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS7_SHIFT (7U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS7_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS7(x)    (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_STATUS_STATUS7_SHIFT)) & SBSW_TMWDP_AUTOMATA_STATUS_STATUS7_MASK)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS8_MASK  (0x100U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS8_SHIFT (8U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS8_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS8(x)    (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_STATUS_STATUS8_SHIFT)) & SBSW_TMWDP_AUTOMATA_STATUS_STATUS8_MASK)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS9_MASK  (0x200U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS9_SHIFT (9U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS9_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS9(x)    (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_STATUS_STATUS9_SHIFT)) & SBSW_TMWDP_AUTOMATA_STATUS_STATUS9_MASK)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS10_MASK (0x400U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS10_SHIFT (10U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS10_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS10(x)   (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_STATUS_STATUS10_SHIFT)) & SBSW_TMWDP_AUTOMATA_STATUS_STATUS10_MASK)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS11_MASK (0x800U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS11_SHIFT (11U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS11_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS11(x)   (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_STATUS_STATUS11_SHIFT)) & SBSW_TMWDP_AUTOMATA_STATUS_STATUS11_MASK)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS12_MASK (0x1000U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS12_SHIFT (12U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS12_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS12(x)   (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_STATUS_STATUS12_SHIFT)) & SBSW_TMWDP_AUTOMATA_STATUS_STATUS12_MASK)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS13_MASK (0x2000U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS13_SHIFT (13U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS13_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS13(x)   (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_STATUS_STATUS13_SHIFT)) & SBSW_TMWDP_AUTOMATA_STATUS_STATUS13_MASK)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS14_MASK (0x4000U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS14_SHIFT (14U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS14_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS14(x)   (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_STATUS_STATUS14_SHIFT)) & SBSW_TMWDP_AUTOMATA_STATUS_STATUS14_MASK)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS15_MASK (0x8000U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS15_SHIFT (15U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS15_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS15(x)   (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_STATUS_STATUS15_SHIFT)) & SBSW_TMWDP_AUTOMATA_STATUS_STATUS15_MASK)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS16_MASK (0x10000U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS16_SHIFT (16U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS16_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS16(x)   (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_STATUS_STATUS16_SHIFT)) & SBSW_TMWDP_AUTOMATA_STATUS_STATUS16_MASK)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS17_MASK (0x20000U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS17_SHIFT (17U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS17_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS17(x)   (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_STATUS_STATUS17_SHIFT)) & SBSW_TMWDP_AUTOMATA_STATUS_STATUS17_MASK)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS18_MASK (0x40000U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS18_SHIFT (18U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS18_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS18(x)   (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_STATUS_STATUS18_SHIFT)) & SBSW_TMWDP_AUTOMATA_STATUS_STATUS18_MASK)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS19_MASK (0x80000U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS19_SHIFT (19U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS19_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS19(x)   (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_STATUS_STATUS19_SHIFT)) & SBSW_TMWDP_AUTOMATA_STATUS_STATUS19_MASK)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS20_MASK (0x100000U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS20_SHIFT (20U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS20_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS20(x)   (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_STATUS_STATUS20_SHIFT)) & SBSW_TMWDP_AUTOMATA_STATUS_STATUS20_MASK)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS21_MASK (0x200000U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS21_SHIFT (21U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS21_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS21(x)   (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_STATUS_STATUS21_SHIFT)) & SBSW_TMWDP_AUTOMATA_STATUS_STATUS21_MASK)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS22_MASK (0x400000U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS22_SHIFT (22U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS22_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS22(x)   (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_STATUS_STATUS22_SHIFT)) & SBSW_TMWDP_AUTOMATA_STATUS_STATUS22_MASK)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS23_MASK (0x800000U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS23_SHIFT (23U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS23_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS23(x)   (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_STATUS_STATUS23_SHIFT)) & SBSW_TMWDP_AUTOMATA_STATUS_STATUS23_MASK)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS24_MASK (0x1000000U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS24_SHIFT (24U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS24_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS24(x)   (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_STATUS_STATUS24_SHIFT)) & SBSW_TMWDP_AUTOMATA_STATUS_STATUS24_MASK)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS25_MASK (0x2000000U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS25_SHIFT (25U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS25_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS25(x)   (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_STATUS_STATUS25_SHIFT)) & SBSW_TMWDP_AUTOMATA_STATUS_STATUS25_MASK)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS26_MASK (0x4000000U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS26_SHIFT (26U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS26_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS26(x)   (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_STATUS_STATUS26_SHIFT)) & SBSW_TMWDP_AUTOMATA_STATUS_STATUS26_MASK)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS27_MASK (0x8000000U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS27_SHIFT (27U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS27_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS27(x)   (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_STATUS_STATUS27_SHIFT)) & SBSW_TMWDP_AUTOMATA_STATUS_STATUS27_MASK)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS28_MASK (0x10000000U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS28_SHIFT (28U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS28_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS28(x)   (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_STATUS_STATUS28_SHIFT)) & SBSW_TMWDP_AUTOMATA_STATUS_STATUS28_MASK)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS29_MASK (0x20000000U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS29_SHIFT (29U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS29_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS29(x)   (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_STATUS_STATUS29_SHIFT)) & SBSW_TMWDP_AUTOMATA_STATUS_STATUS29_MASK)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS30_MASK (0x40000000U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS30_SHIFT (30U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS30_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS30(x)   (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_STATUS_STATUS30_SHIFT)) & SBSW_TMWDP_AUTOMATA_STATUS_STATUS30_MASK)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS31_MASK (0x80000000U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS31_SHIFT (31U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS31_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_STATUS_STATUS31(x)   (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_STATUS_STATUS31_SHIFT)) & SBSW_TMWDP_AUTOMATA_STATUS_STATUS31_MASK)
/*! @} */

/*! @name TMWDP_AUTOMATA_ILLGL_TRANS - TMWDP Automata Illegal Transition */
/*! @{ */
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS0_MASK (0x1U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS0_SHIFT (0U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS0_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS0(x) (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS0_SHIFT)) & SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS0_MASK)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS1_MASK (0x2U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS1_SHIFT (1U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS1_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS1(x) (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS1_SHIFT)) & SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS1_MASK)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS2_MASK (0x4U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS2_SHIFT (2U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS2_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS2(x) (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS2_SHIFT)) & SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS2_MASK)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS3_MASK (0x8U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS3_SHIFT (3U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS3_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS3(x) (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS3_SHIFT)) & SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS3_MASK)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS4_MASK (0x10U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS4_SHIFT (4U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS4_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS4(x) (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS4_SHIFT)) & SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS4_MASK)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS5_MASK (0x20U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS5_SHIFT (5U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS5_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS5(x) (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS5_SHIFT)) & SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS5_MASK)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS6_MASK (0x40U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS6_SHIFT (6U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS6_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS6(x) (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS6_SHIFT)) & SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS6_MASK)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS7_MASK (0x80U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS7_SHIFT (7U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS7_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS7(x) (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS7_SHIFT)) & SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS7_MASK)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS8_MASK (0x100U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS8_SHIFT (8U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS8_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS8(x) (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS8_SHIFT)) & SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS8_MASK)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS9_MASK (0x200U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS9_SHIFT (9U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS9_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS9(x) (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS9_SHIFT)) & SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS9_MASK)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS10_MASK (0x400U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS10_SHIFT (10U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS10_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS10(x) (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS10_SHIFT)) & SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS10_MASK)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS11_MASK (0x800U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS11_SHIFT (11U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS11_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS11(x) (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS11_SHIFT)) & SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS11_MASK)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS12_MASK (0x1000U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS12_SHIFT (12U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS12_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS12(x) (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS12_SHIFT)) & SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS12_MASK)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS13_MASK (0x2000U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS13_SHIFT (13U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS13_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS13(x) (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS13_SHIFT)) & SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS13_MASK)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS14_MASK (0x4000U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS14_SHIFT (14U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS14_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS14(x) (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS14_SHIFT)) & SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS14_MASK)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS15_MASK (0x8000U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS15_SHIFT (15U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS15_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS15(x) (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS15_SHIFT)) & SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS15_MASK)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS16_MASK (0x10000U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS16_SHIFT (16U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS16_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS16(x) (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS16_SHIFT)) & SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS16_MASK)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS17_MASK (0x20000U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS17_SHIFT (17U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS17_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS17(x) (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS17_SHIFT)) & SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS17_MASK)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS18_MASK (0x40000U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS18_SHIFT (18U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS18_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS18(x) (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS18_SHIFT)) & SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS18_MASK)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS19_MASK (0x80000U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS19_SHIFT (19U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS19_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS19(x) (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS19_SHIFT)) & SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS19_MASK)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS20_MASK (0x100000U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS20_SHIFT (20U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS20_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS20(x) (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS20_SHIFT)) & SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS20_MASK)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS21_MASK (0x200000U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS21_SHIFT (21U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS21_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS21(x) (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS21_SHIFT)) & SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS21_MASK)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS22_MASK (0x400000U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS22_SHIFT (22U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS22_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS22(x) (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS22_SHIFT)) & SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS22_MASK)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS23_MASK (0x800000U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS23_SHIFT (23U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS23_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS23(x) (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS23_SHIFT)) & SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS23_MASK)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS24_MASK (0x1000000U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS24_SHIFT (24U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS24_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS24(x) (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS24_SHIFT)) & SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS24_MASK)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS25_MASK (0x2000000U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS25_SHIFT (25U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS25_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS25(x) (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS25_SHIFT)) & SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS25_MASK)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS26_MASK (0x4000000U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS26_SHIFT (26U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS26_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS26(x) (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS26_SHIFT)) & SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS26_MASK)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS27_MASK (0x8000000U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS27_SHIFT (27U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS27_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS27(x) (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS27_SHIFT)) & SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS27_MASK)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS28_MASK (0x10000000U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS28_SHIFT (28U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS28_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS28(x) (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS28_SHIFT)) & SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS28_MASK)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS29_MASK (0x20000000U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS29_SHIFT (29U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS29_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS29(x) (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS29_SHIFT)) & SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS29_MASK)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS30_MASK (0x40000000U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS30_SHIFT (30U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS30_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS30(x) (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS30_SHIFT)) & SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS30_MASK)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS31_MASK (0x80000000U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS31_SHIFT (31U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS31_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS31(x) (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS31_SHIFT)) & SBSW_TMWDP_AUTOMATA_ILLGL_TRANS_STATUS31_MASK)
/*! @} */

/*! @name TMWDP_AUTOMATA_TIME_VIOLATION - TMWDP Automata Time Violation */
/*! @{ */
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS0_MASK (0x1U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS0_SHIFT (0U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS0_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS0(x) (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS0_SHIFT)) & SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS0_MASK)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS1_MASK (0x2U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS1_SHIFT (1U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS1_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS1(x) (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS1_SHIFT)) & SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS1_MASK)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS2_MASK (0x4U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS2_SHIFT (2U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS2_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS2(x) (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS2_SHIFT)) & SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS2_MASK)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS3_MASK (0x8U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS3_SHIFT (3U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS3_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS3(x) (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS3_SHIFT)) & SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS3_MASK)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS4_MASK (0x10U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS4_SHIFT (4U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS4_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS4(x) (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS4_SHIFT)) & SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS4_MASK)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS5_MASK (0x20U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS5_SHIFT (5U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS5_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS5(x) (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS5_SHIFT)) & SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS5_MASK)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS6_MASK (0x40U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS6_SHIFT (6U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS6_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS6(x) (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS6_SHIFT)) & SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS6_MASK)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS7_MASK (0x80U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS7_SHIFT (7U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS7_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS7(x) (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS7_SHIFT)) & SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS7_MASK)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS8_MASK (0x100U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS8_SHIFT (8U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS8_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS8(x) (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS8_SHIFT)) & SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS8_MASK)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS9_MASK (0x200U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS9_SHIFT (9U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS9_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS9(x) (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS9_SHIFT)) & SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS9_MASK)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS10_MASK (0x400U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS10_SHIFT (10U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS10_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS10(x) (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS10_SHIFT)) & SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS10_MASK)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS11_MASK (0x800U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS11_SHIFT (11U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS11_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS11(x) (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS11_SHIFT)) & SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS11_MASK)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS12_MASK (0x1000U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS12_SHIFT (12U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS12_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS12(x) (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS12_SHIFT)) & SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS12_MASK)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS13_MASK (0x2000U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS13_SHIFT (13U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS13_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS13(x) (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS13_SHIFT)) & SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS13_MASK)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS14_MASK (0x4000U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS14_SHIFT (14U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS14_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS14(x) (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS14_SHIFT)) & SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS14_MASK)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS15_MASK (0x8000U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS15_SHIFT (15U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS15_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS15(x) (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS15_SHIFT)) & SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS15_MASK)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS16_MASK (0x10000U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS16_SHIFT (16U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS16_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS16(x) (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS16_SHIFT)) & SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS16_MASK)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS17_MASK (0x20000U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS17_SHIFT (17U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS17_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS17(x) (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS17_SHIFT)) & SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS17_MASK)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS18_MASK (0x40000U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS18_SHIFT (18U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS18_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS18(x) (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS18_SHIFT)) & SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS18_MASK)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS19_MASK (0x80000U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS19_SHIFT (19U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS19_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS19(x) (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS19_SHIFT)) & SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS19_MASK)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS20_MASK (0x100000U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS20_SHIFT (20U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS20_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS20(x) (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS20_SHIFT)) & SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS20_MASK)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS21_MASK (0x200000U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS21_SHIFT (21U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS21_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS21(x) (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS21_SHIFT)) & SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS21_MASK)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS22_MASK (0x400000U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS22_SHIFT (22U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS22_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS22(x) (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS22_SHIFT)) & SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS22_MASK)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS23_MASK (0x800000U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS23_SHIFT (23U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS23_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS23(x) (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS23_SHIFT)) & SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS23_MASK)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS24_MASK (0x1000000U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS24_SHIFT (24U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS24_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS24(x) (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS24_SHIFT)) & SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS24_MASK)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS25_MASK (0x2000000U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS25_SHIFT (25U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS25_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS25(x) (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS25_SHIFT)) & SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS25_MASK)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS26_MASK (0x4000000U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS26_SHIFT (26U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS26_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS26(x) (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS26_SHIFT)) & SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS26_MASK)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS27_MASK (0x8000000U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS27_SHIFT (27U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS27_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS27(x) (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS27_SHIFT)) & SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS27_MASK)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS28_MASK (0x10000000U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS28_SHIFT (28U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS28_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS28(x) (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS28_SHIFT)) & SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS28_MASK)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS29_MASK (0x20000000U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS29_SHIFT (29U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS29_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS29(x) (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS29_SHIFT)) & SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS29_MASK)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS30_MASK (0x40000000U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS30_SHIFT (30U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS30_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS30(x) (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS30_SHIFT)) & SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS30_MASK)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS31_MASK (0x80000000U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS31_SHIFT (31U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS31_WIDTH (1U)
#define SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS31(x) (((uint32_t)(((uint32_t)(x)) << SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS31_SHIFT)) & SBSW_TMWDP_AUTOMATA_TIME_VIOLATION_STATUS31_MASK)
/*! @} */

/*! @name STATUS - TMWDP Automaton Status */
/*! @{ */
#define SBSW_STATUS_CURRENT_STATE_MASK           (0xFFFFU)
#define SBSW_STATUS_CURRENT_STATE_SHIFT          (0U)
#define SBSW_STATUS_CURRENT_STATE_WIDTH          (16U)
#define SBSW_STATUS_CURRENT_STATE(x)             (((uint32_t)(((uint32_t)(x)) << SBSW_STATUS_CURRENT_STATE_SHIFT)) & SBSW_STATUS_CURRENT_STATE_MASK)
#define SBSW_STATUS_STATUS_MASK                  (0x10000U)
#define SBSW_STATUS_STATUS_SHIFT                 (16U)
#define SBSW_STATUS_STATUS_WIDTH                 (1U)
#define SBSW_STATUS_STATUS(x)                    (((uint32_t)(((uint32_t)(x)) << SBSW_STATUS_STATUS_SHIFT)) & SBSW_STATUS_STATUS_MASK)
#define SBSW_STATUS_ILLEGAL_TRANSITION_MASK      (0x20000U)
#define SBSW_STATUS_ILLEGAL_TRANSITION_SHIFT     (17U)
#define SBSW_STATUS_ILLEGAL_TRANSITION_WIDTH     (1U)
#define SBSW_STATUS_ILLEGAL_TRANSITION(x)        (((uint32_t)(((uint32_t)(x)) << SBSW_STATUS_ILLEGAL_TRANSITION_SHIFT)) & SBSW_STATUS_ILLEGAL_TRANSITION_MASK)
#define SBSW_STATUS_TIME_VIOLATION_MASK          (0x40000U)
#define SBSW_STATUS_TIME_VIOLATION_SHIFT         (18U)
#define SBSW_STATUS_TIME_VIOLATION_WIDTH         (1U)
#define SBSW_STATUS_TIME_VIOLATION(x)            (((uint32_t)(((uint32_t)(x)) << SBSW_STATUS_TIME_VIOLATION_SHIFT)) & SBSW_STATUS_TIME_VIOLATION_MASK)
/*! @} */

/*! @name PRGS_REQ - TMWDP Automaton Progress Request */
/*! @{ */
#define SBSW_PRGS_REQ_PROGRESS_REQ_MASK          (0xFFFFU)
#define SBSW_PRGS_REQ_PROGRESS_REQ_SHIFT         (0U)
#define SBSW_PRGS_REQ_PROGRESS_REQ_WIDTH         (16U)
#define SBSW_PRGS_REQ_PROGRESS_REQ(x)            (((uint32_t)(((uint32_t)(x)) << SBSW_PRGS_REQ_PROGRESS_REQ_SHIFT)) & SBSW_PRGS_REQ_PROGRESS_REQ_MASK)
#define SBSW_PRGS_REQ_WRITTEN_MASK               (0x10000U)
#define SBSW_PRGS_REQ_WRITTEN_SHIFT              (16U)
#define SBSW_PRGS_REQ_WRITTEN_WIDTH              (1U)
#define SBSW_PRGS_REQ_WRITTEN(x)                 (((uint32_t)(((uint32_t)(x)) << SBSW_PRGS_REQ_WRITTEN_SHIFT)) & SBSW_PRGS_REQ_WRITTEN_MASK)
#define SBSW_PRGS_REQ_OVERWRITTEN_MASK           (0x20000U)
#define SBSW_PRGS_REQ_OVERWRITTEN_SHIFT          (17U)
#define SBSW_PRGS_REQ_OVERWRITTEN_WIDTH          (1U)
#define SBSW_PRGS_REQ_OVERWRITTEN(x)             (((uint32_t)(((uint32_t)(x)) << SBSW_PRGS_REQ_OVERWRITTEN_SHIFT)) & SBSW_PRGS_REQ_OVERWRITTEN_MASK)
/*! @} */

/*! @name TC_ID - TMWDP Core Domain ID */
/*! @{ */
#define SBSW_TC_ID_ID_MASK                       (0xFU)
#define SBSW_TC_ID_ID_SHIFT                      (0U)
#define SBSW_TC_ID_ID_WIDTH                      (4U)
#define SBSW_TC_ID_ID(x)                         (((uint32_t)(((uint32_t)(x)) << SBSW_TC_ID_ID_SHIFT)) & SBSW_TC_ID_ID_MASK)
#define SBSW_TC_ID_WRITTEN_MASK                  (0x100U)
#define SBSW_TC_ID_WRITTEN_SHIFT                 (8U)
#define SBSW_TC_ID_WRITTEN_WIDTH                 (1U)
#define SBSW_TC_ID_WRITTEN(x)                    (((uint32_t)(((uint32_t)(x)) << SBSW_TC_ID_WRITTEN_SHIFT)) & SBSW_TC_ID_WRITTEN_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group SBSW_Register_Masks */


/*!
 * @}
 */ /* end of group SBSW_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- SECURITY Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SECURITY_Peripheral_Access_Layer SECURITY Peripheral Access Layer
 * @{
 */

/** SECURITY - Size of Registers Arrays */
#define SECURITY_HSE_GPR_3TO11_COUNT              9u

/** SECURITY - Register Layout Typedef */
typedef struct {
  uint8_t RESERVED_0[8];
  __I  uint32_t EXT_DBGSTAT;                       /**< External Debugger Status, offset: 0x8 */
  uint8_t RESERVED_1[16];
  __IO uint32_t HSE_GPR0;                          /**< HSE GPR 0, offset: 0x1C */
  __IO uint32_t HSE_GPR1;                          /**< HSE GPR n, offset: 0x20 */
  __IO uint32_t HSE_GPR2;                          /**< HSE GPR n, offset: 0x24 */
  __IO uint32_t HSE_GPR[SECURITY_HSE_GPR_3TO11_COUNT]; /**< HSE GPR n, array offset: 0x28, array step: 0x4 */
} SECURITY_Type, *SECURITY_MemMapPtr;

/** Number of instances of the SECURITY module. */
#define SECURITY_INSTANCE_COUNT                  (1u)

/* SECURITY - Peripheral instance base addresses */
/** Peripheral SECURITY_CC base address */
#define SECURITY_CC_BASE                         (0x4007C900u)
/** Peripheral SECURITY_CC base pointer */
#define SECURITY_CC                              ((SECURITY_Type *)SECURITY_CC_BASE)
/** Array initializer of SECURITY peripheral base addresses */
#define SECURITY_BASE_ADDRS                      { SECURITY_CC_BASE }
/** Array initializer of SECURITY peripheral base pointers */
#define SECURITY_BASE_PTRS                       { SECURITY_CC }

/* ----------------------------------------------------------------------------
   -- SECURITY Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SECURITY_Register_Masks SECURITY Register Masks
 * @{
 */

/*! @name EXT_DBGSTAT - External Debugger Status */
/*! @{ */
#define SECURITY_EXT_DBGSTAT_EDB_MASK            (0x1U)
#define SECURITY_EXT_DBGSTAT_EDB_SHIFT           (0U)
#define SECURITY_EXT_DBGSTAT_EDB_WIDTH           (1U)
#define SECURITY_EXT_DBGSTAT_EDB(x)              (((uint32_t)(((uint32_t)(x)) << SECURITY_EXT_DBGSTAT_EDB_SHIFT)) & SECURITY_EXT_DBGSTAT_EDB_MASK)
/*! @} */

/*! @name HSE_GPR0 - HSE GPR 0 */
/*! @{ */
#define SECURITY_HSE_GPR0_DATA0_MASK             (0x3FU)
#define SECURITY_HSE_GPR0_DATA0_SHIFT            (0U)
#define SECURITY_HSE_GPR0_DATA0_WIDTH            (6U)
#define SECURITY_HSE_GPR0_DATA0(x)               (((uint32_t)(((uint32_t)(x)) << SECURITY_HSE_GPR0_DATA0_SHIFT)) & SECURITY_HSE_GPR0_DATA0_MASK)
#define SECURITY_HSE_GPR0_DATA1_MASK             (0xFFFFFF80U)
#define SECURITY_HSE_GPR0_DATA1_SHIFT            (7U)
#define SECURITY_HSE_GPR0_DATA1_WIDTH            (25U)
#define SECURITY_HSE_GPR0_DATA1(x)               (((uint32_t)(((uint32_t)(x)) << SECURITY_HSE_GPR0_DATA1_SHIFT)) & SECURITY_HSE_GPR0_DATA1_MASK)
/*! @} */

/*! @name HSE_GPR1 - HSE GPR n */
/*! @{ */
#define SECURITY_HSE_GPR1_DATA_MASK              (0xFFFFFFFFU)
#define SECURITY_HSE_GPR1_DATA_SHIFT             (0U)
#define SECURITY_HSE_GPR1_DATA_WIDTH             (32U)
#define SECURITY_HSE_GPR1_DATA(x)                (((uint32_t)(((uint32_t)(x)) << SECURITY_HSE_GPR1_DATA_SHIFT)) & SECURITY_HSE_GPR1_DATA_MASK)
/*! @} */

/*! @name HSE_GPR2 - HSE GPR n */
/*! @{ */
#define SECURITY_HSE_GPR2_DATA_MASK              (0xFFFFFFFFU)
#define SECURITY_HSE_GPR2_DATA_SHIFT             (0U)
#define SECURITY_HSE_GPR2_DATA_WIDTH             (32U)
#define SECURITY_HSE_GPR2_DATA(x)                (((uint32_t)(((uint32_t)(x)) << SECURITY_HSE_GPR2_DATA_SHIFT)) & SECURITY_HSE_GPR2_DATA_MASK)
/*! @} */

/*! @name HSE_GPR - HSE GPR n */
/*! @{ */
#define SECURITY_HSE_GPR_DATA_MASK               (0xFFFFFFFFU)
#define SECURITY_HSE_GPR_DATA_SHIFT              (0U)
#define SECURITY_HSE_GPR_DATA_WIDTH              (32U)
#define SECURITY_HSE_GPR_DATA(x)                 (((uint32_t)(((uint32_t)(x)) << SECURITY_HSE_GPR_DATA_SHIFT)) & SECURITY_HSE_GPR_DATA_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group SECURITY_Register_Masks */


/*!
 * @}
 */ /* end of group SECURITY_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- SELFTEST_GPR Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SELFTEST_GPR_Peripheral_Access_Layer SELFTEST_GPR Peripheral Access Layer
 * @{
 */

/** SELFTEST_GPR - Register Layout Typedef */
typedef struct {
  uint8_t RESERVED_0[20];
  __IO uint32_t LBIST_PROG_REG;                    /**< LBIST Program, offset: 0x14 */
} SELFTEST_GPR_Type, *SELFTEST_GPR_MemMapPtr;

/** Number of instances of the SELFTEST_GPR module. */
#define SELFTEST_GPR_INSTANCE_COUNT              (1u)

/* SELFTEST_GPR - Peripheral instance base addresses */
/** Peripheral SELFTEST_GPR base address */
#define SELFTEST_GPR_BASE                        (0x4001C000u)
/** Peripheral SELFTEST_GPR base pointer */
#define SELFTEST_GPR                             ((SELFTEST_GPR_Type *)SELFTEST_GPR_BASE)
/** Array initializer of SELFTEST_GPR peripheral base addresses */
#define SELFTEST_GPR_BASE_ADDRS                  { SELFTEST_GPR_BASE }
/** Array initializer of SELFTEST_GPR peripheral base pointers */
#define SELFTEST_GPR_BASE_PTRS                   { SELFTEST_GPR }

/* ----------------------------------------------------------------------------
   -- SELFTEST_GPR Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SELFTEST_GPR_Register_Masks SELFTEST_GPR Register Masks
 * @{
 */

/*! @name LBIST_PROG_REG - LBIST Program */
/*! @{ */
#define SELFTEST_GPR_LBIST_PROG_REG_LBIST_shift_count_MASK (0xFFU)
#define SELFTEST_GPR_LBIST_PROG_REG_LBIST_shift_count_SHIFT (0U)
#define SELFTEST_GPR_LBIST_PROG_REG_LBIST_shift_count_WIDTH (8U)
#define SELFTEST_GPR_LBIST_PROG_REG_LBIST_shift_count(x) (((uint32_t)(((uint32_t)(x)) << SELFTEST_GPR_LBIST_PROG_REG_LBIST_shift_count_SHIFT)) & SELFTEST_GPR_LBIST_PROG_REG_LBIST_shift_count_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group SELFTEST_GPR_Register_Masks */


/*!
 * @}
 */ /* end of group SELFTEST_GPR_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- SELFTEST_GPR_TOP Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SELFTEST_GPR_TOP_Peripheral_Access_Layer SELFTEST_GPR_TOP Peripheral Access Layer
 * @{
 */

/** SELFTEST_GPR_TOP - Register Layout Typedef */
typedef struct {
  __IO uint32_t RESET_DOMAIN_SELFTEST_ENABLE_REGISTER; /**< Reset Domain Self-test Enable, offset: 0x0 */
  __IO uint32_t RESET_DOMAIN_SELFTEST_ENABLE_STATUS_REGISTER; /**< Reset Domain Self-test Enable Status, offset: 0x4 */
} SELFTEST_GPR_TOP_Type, *SELFTEST_GPR_TOP_MemMapPtr;

/** Number of instances of the SELFTEST_GPR_TOP module. */
#define SELFTEST_GPR_TOP_INSTANCE_COUNT          (1u)

/* SELFTEST_GPR_TOP - Peripheral instance base addresses */
/** Peripheral SELFTEST_GPR_TOP base address */
#define SELFTEST_GPR_TOP_BASE                    (0x4001CFE0u)
/** Peripheral SELFTEST_GPR_TOP base pointer */
#define SELFTEST_GPR_TOP                         ((SELFTEST_GPR_TOP_Type *)SELFTEST_GPR_TOP_BASE)
/** Array initializer of SELFTEST_GPR_TOP peripheral base addresses */
#define SELFTEST_GPR_TOP_BASE_ADDRS              { SELFTEST_GPR_TOP_BASE }
/** Array initializer of SELFTEST_GPR_TOP peripheral base pointers */
#define SELFTEST_GPR_TOP_BASE_PTRS               { SELFTEST_GPR_TOP }

/* ----------------------------------------------------------------------------
   -- SELFTEST_GPR_TOP Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SELFTEST_GPR_TOP_Register_Masks SELFTEST_GPR_TOP Register Masks
 * @{
 */

/*! @name RESET_DOMAIN_SELFTEST_ENABLE_REGISTER - Reset Domain Self-test Enable */
/*! @{ */
#define SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_REGISTER_RESET_DOMAIN_0_SELFTEST_ENABLE_MASK (0x1U)
#define SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_REGISTER_RESET_DOMAIN_0_SELFTEST_ENABLE_SHIFT (0U)
#define SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_REGISTER_RESET_DOMAIN_0_SELFTEST_ENABLE_WIDTH (1U)
#define SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_REGISTER_RESET_DOMAIN_0_SELFTEST_ENABLE(x) (((uint32_t)(((uint32_t)(x)) << SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_REGISTER_RESET_DOMAIN_0_SELFTEST_ENABLE_SHIFT)) & SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_REGISTER_RESET_DOMAIN_0_SELFTEST_ENABLE_MASK)
#define SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_REGISTER_RESET_DOMAIN_1_SELFTEST_ENABLE_MASK (0x2U)
#define SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_REGISTER_RESET_DOMAIN_1_SELFTEST_ENABLE_SHIFT (1U)
#define SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_REGISTER_RESET_DOMAIN_1_SELFTEST_ENABLE_WIDTH (1U)
#define SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_REGISTER_RESET_DOMAIN_1_SELFTEST_ENABLE(x) (((uint32_t)(((uint32_t)(x)) << SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_REGISTER_RESET_DOMAIN_1_SELFTEST_ENABLE_SHIFT)) & SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_REGISTER_RESET_DOMAIN_1_SELFTEST_ENABLE_MASK)
#define SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_REGISTER_RESET_DOMAIN_2_SELFTEST_ENABLE_MASK (0x4U)
#define SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_REGISTER_RESET_DOMAIN_2_SELFTEST_ENABLE_SHIFT (2U)
#define SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_REGISTER_RESET_DOMAIN_2_SELFTEST_ENABLE_WIDTH (1U)
#define SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_REGISTER_RESET_DOMAIN_2_SELFTEST_ENABLE(x) (((uint32_t)(((uint32_t)(x)) << SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_REGISTER_RESET_DOMAIN_2_SELFTEST_ENABLE_SHIFT)) & SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_REGISTER_RESET_DOMAIN_2_SELFTEST_ENABLE_MASK)
#define SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_REGISTER_RESET_DOMAIN_3_SELFTEST_ENABLE_MASK (0x8U)
#define SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_REGISTER_RESET_DOMAIN_3_SELFTEST_ENABLE_SHIFT (3U)
#define SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_REGISTER_RESET_DOMAIN_3_SELFTEST_ENABLE_WIDTH (1U)
#define SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_REGISTER_RESET_DOMAIN_3_SELFTEST_ENABLE(x) (((uint32_t)(((uint32_t)(x)) << SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_REGISTER_RESET_DOMAIN_3_SELFTEST_ENABLE_SHIFT)) & SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_REGISTER_RESET_DOMAIN_3_SELFTEST_ENABLE_MASK)
/*! @} */

/*! @name RESET_DOMAIN_SELFTEST_ENABLE_STATUS_REGISTER - Reset Domain Self-test Enable Status */
/*! @{ */
#define SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_STATUS_REGISTER_RESET_DOMAIN_0_SELFTEST_ENABLE_STATUS_MASK (0x1U)
#define SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_STATUS_REGISTER_RESET_DOMAIN_0_SELFTEST_ENABLE_STATUS_SHIFT (0U)
#define SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_STATUS_REGISTER_RESET_DOMAIN_0_SELFTEST_ENABLE_STATUS_WIDTH (1U)
#define SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_STATUS_REGISTER_RESET_DOMAIN_0_SELFTEST_ENABLE_STATUS(x) (((uint32_t)(((uint32_t)(x)) << SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_STATUS_REGISTER_RESET_DOMAIN_0_SELFTEST_ENABLE_STATUS_SHIFT)) & SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_STATUS_REGISTER_RESET_DOMAIN_0_SELFTEST_ENABLE_STATUS_MASK)
#define SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_STATUS_REGISTER_RESET_DOMAIN_1_SELFTEST_ENABLE_STATUS_MASK (0x2U)
#define SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_STATUS_REGISTER_RESET_DOMAIN_1_SELFTEST_ENABLE_STATUS_SHIFT (1U)
#define SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_STATUS_REGISTER_RESET_DOMAIN_1_SELFTEST_ENABLE_STATUS_WIDTH (1U)
#define SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_STATUS_REGISTER_RESET_DOMAIN_1_SELFTEST_ENABLE_STATUS(x) (((uint32_t)(((uint32_t)(x)) << SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_STATUS_REGISTER_RESET_DOMAIN_1_SELFTEST_ENABLE_STATUS_SHIFT)) & SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_STATUS_REGISTER_RESET_DOMAIN_1_SELFTEST_ENABLE_STATUS_MASK)
#define SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_STATUS_REGISTER_RESET_DOMAIN_2_SELFTEST_ENABLE_STATUS_MASK (0x4U)
#define SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_STATUS_REGISTER_RESET_DOMAIN_2_SELFTEST_ENABLE_STATUS_SHIFT (2U)
#define SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_STATUS_REGISTER_RESET_DOMAIN_2_SELFTEST_ENABLE_STATUS_WIDTH (1U)
#define SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_STATUS_REGISTER_RESET_DOMAIN_2_SELFTEST_ENABLE_STATUS(x) (((uint32_t)(((uint32_t)(x)) << SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_STATUS_REGISTER_RESET_DOMAIN_2_SELFTEST_ENABLE_STATUS_SHIFT)) & SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_STATUS_REGISTER_RESET_DOMAIN_2_SELFTEST_ENABLE_STATUS_MASK)
#define SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_STATUS_REGISTER_RESET_DOMAIN_3_SELFTEST_ENABLE_STATUS_MASK (0x8U)
#define SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_STATUS_REGISTER_RESET_DOMAIN_3_SELFTEST_ENABLE_STATUS_SHIFT (3U)
#define SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_STATUS_REGISTER_RESET_DOMAIN_3_SELFTEST_ENABLE_STATUS_WIDTH (1U)
#define SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_STATUS_REGISTER_RESET_DOMAIN_3_SELFTEST_ENABLE_STATUS(x) (((uint32_t)(((uint32_t)(x)) << SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_STATUS_REGISTER_RESET_DOMAIN_3_SELFTEST_ENABLE_STATUS_SHIFT)) & SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_STATUS_REGISTER_RESET_DOMAIN_3_SELFTEST_ENABLE_STATUS_MASK)
#define SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_STATUS_REGISTER_RESET_DOMAIN_0_SELFTEST_ENABLE_LAST_RUN_STATUS_MASK (0x10000U)
#define SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_STATUS_REGISTER_RESET_DOMAIN_0_SELFTEST_ENABLE_LAST_RUN_STATUS_SHIFT (16U)
#define SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_STATUS_REGISTER_RESET_DOMAIN_0_SELFTEST_ENABLE_LAST_RUN_STATUS_WIDTH (1U)
#define SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_STATUS_REGISTER_RESET_DOMAIN_0_SELFTEST_ENABLE_LAST_RUN_STATUS(x) (((uint32_t)(((uint32_t)(x)) << SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_STATUS_REGISTER_RESET_DOMAIN_0_SELFTEST_ENABLE_LAST_RUN_STATUS_SHIFT)) & SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_STATUS_REGISTER_RESET_DOMAIN_0_SELFTEST_ENABLE_LAST_RUN_STATUS_MASK)
#define SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_STATUS_REGISTER_RESET_DOMAIN_1_SELFTEST_ENABLE_LAST_RUN_STATUS_MASK (0x20000U)
#define SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_STATUS_REGISTER_RESET_DOMAIN_1_SELFTEST_ENABLE_LAST_RUN_STATUS_SHIFT (17U)
#define SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_STATUS_REGISTER_RESET_DOMAIN_1_SELFTEST_ENABLE_LAST_RUN_STATUS_WIDTH (1U)
#define SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_STATUS_REGISTER_RESET_DOMAIN_1_SELFTEST_ENABLE_LAST_RUN_STATUS(x) (((uint32_t)(((uint32_t)(x)) << SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_STATUS_REGISTER_RESET_DOMAIN_1_SELFTEST_ENABLE_LAST_RUN_STATUS_SHIFT)) & SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_STATUS_REGISTER_RESET_DOMAIN_1_SELFTEST_ENABLE_LAST_RUN_STATUS_MASK)
#define SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_STATUS_REGISTER_RESET_DOMAIN_2_SELFTEST_ENABLE_LAST_RUN_STATUS_MASK (0x40000U)
#define SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_STATUS_REGISTER_RESET_DOMAIN_2_SELFTEST_ENABLE_LAST_RUN_STATUS_SHIFT (18U)
#define SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_STATUS_REGISTER_RESET_DOMAIN_2_SELFTEST_ENABLE_LAST_RUN_STATUS_WIDTH (1U)
#define SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_STATUS_REGISTER_RESET_DOMAIN_2_SELFTEST_ENABLE_LAST_RUN_STATUS(x) (((uint32_t)(((uint32_t)(x)) << SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_STATUS_REGISTER_RESET_DOMAIN_2_SELFTEST_ENABLE_LAST_RUN_STATUS_SHIFT)) & SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_STATUS_REGISTER_RESET_DOMAIN_2_SELFTEST_ENABLE_LAST_RUN_STATUS_MASK)
#define SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_STATUS_REGISTER_RESET_DOMAIN_3_SELFTEST_ENABLE_LAST_RUN_STATUS_MASK (0x80000U)
#define SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_STATUS_REGISTER_RESET_DOMAIN_3_SELFTEST_ENABLE_LAST_RUN_STATUS_SHIFT (19U)
#define SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_STATUS_REGISTER_RESET_DOMAIN_3_SELFTEST_ENABLE_LAST_RUN_STATUS_WIDTH (1U)
#define SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_STATUS_REGISTER_RESET_DOMAIN_3_SELFTEST_ENABLE_LAST_RUN_STATUS(x) (((uint32_t)(((uint32_t)(x)) << SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_STATUS_REGISTER_RESET_DOMAIN_3_SELFTEST_ENABLE_LAST_RUN_STATUS_SHIFT)) & SELFTEST_GPR_TOP_RESET_DOMAIN_SELFTEST_ENABLE_STATUS_REGISTER_RESET_DOMAIN_3_SELFTEST_ENABLE_LAST_RUN_STATUS_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group SELFTEST_GPR_TOP_Register_Masks */


/*!
 * @}
 */ /* end of group SELFTEST_GPR_TOP_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- SEMA42 Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SEMA42_Peripheral_Access_Layer SEMA42 Peripheral Access Layer
 * @{
 */

/** SEMA42 - Size of Registers Arrays */
#define SEMA42_GATE_COUNT                         16u

/** SEMA42 - Register Layout Typedef */
typedef struct {
  __IO uint8_t GATE[SEMA42_GATE_COUNT];            /**< Gate Register, array offset: 0x0, array step: 0x1 */
  uint8_t RESERVED_0[50];
  union {                                          /* offset: 0x42 */
    __I  uint16_t R;                                 /**< Reset Gate Read, offset: 0x42 */
    __O  uint16_t W;                                 /**< Reset Gate Write, offset: 0x42 */
  } RSTGT;
} SEMA42_Type, *SEMA42_MemMapPtr;

/** Number of instances of the SEMA42 module. */
#define SEMA42_INSTANCE_COUNT                    (1u)

/* SEMA42 - Peripheral instance base addresses */
/** Peripheral SEMA42 base address */
#define SEMA42_BASE                              (0x40298000u)
/** Peripheral SEMA42 base pointer */
#define SEMA42                                   ((SEMA42_Type *)SEMA42_BASE)
/** Array initializer of SEMA42 peripheral base addresses */
#define SEMA42_BASE_ADDRS                        { SEMA42_BASE }
/** Array initializer of SEMA42 peripheral base pointers */
#define SEMA42_BASE_PTRS                         { SEMA42 }

/* ----------------------------------------------------------------------------
   -- SEMA42 Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SEMA42_Register_Masks SEMA42 Register Masks
 * @{
 */

/*! @name GATE - Gate Register */
/*! @{ */
#define SEMA42_GATE_GTFSM_MASK                   (0xFU)
#define SEMA42_GATE_GTFSM_SHIFT                  (0U)
#define SEMA42_GATE_GTFSM_WIDTH                  (4U)
#define SEMA42_GATE_GTFSM(x)                     (((uint8_t)(((uint8_t)(x)) << SEMA42_GATE_GTFSM_SHIFT)) & SEMA42_GATE_GTFSM_MASK)
/*! @} */

/*! @name R - Reset Gate Read */
/*! @{ */
#define SEMA42_RSTGT_R_RSTGTN_MASK               (0xFFU)
#define SEMA42_RSTGT_R_RSTGTN_SHIFT              (0U)
#define SEMA42_RSTGT_R_RSTGTN_WIDTH              (8U)
#define SEMA42_RSTGT_R_RSTGTN(x)                 (((uint16_t)(((uint16_t)(x)) << SEMA42_RSTGT_R_RSTGTN_SHIFT)) & SEMA42_RSTGT_R_RSTGTN_MASK)
#define SEMA42_RSTGT_R_RSTGMS_MASK               (0xF00U)
#define SEMA42_RSTGT_R_RSTGMS_SHIFT              (8U)
#define SEMA42_RSTGT_R_RSTGMS_WIDTH              (4U)
#define SEMA42_RSTGT_R_RSTGMS(x)                 (((uint16_t)(((uint16_t)(x)) << SEMA42_RSTGT_R_RSTGMS_SHIFT)) & SEMA42_RSTGT_R_RSTGMS_MASK)
#define SEMA42_RSTGT_R_RSTGSM_MASK               (0x3000U)
#define SEMA42_RSTGT_R_RSTGSM_SHIFT              (12U)
#define SEMA42_RSTGT_R_RSTGSM_WIDTH              (2U)
#define SEMA42_RSTGT_R_RSTGSM(x)                 (((uint16_t)(((uint16_t)(x)) << SEMA42_RSTGT_R_RSTGSM_SHIFT)) & SEMA42_RSTGT_R_RSTGSM_MASK)
#define SEMA42_RSTGT_R_ROZ_MASK                  (0xC000U)
#define SEMA42_RSTGT_R_ROZ_SHIFT                 (14U)
#define SEMA42_RSTGT_R_ROZ_WIDTH                 (2U)
#define SEMA42_RSTGT_R_ROZ(x)                    (((uint16_t)(((uint16_t)(x)) << SEMA42_RSTGT_R_ROZ_SHIFT)) & SEMA42_RSTGT_R_ROZ_MASK)
/*! @} */

/*! @name W - Reset Gate Write */
/*! @{ */
#define SEMA42_RSTGT_W_RSTGTN_MASK               (0xFFU)
#define SEMA42_RSTGT_W_RSTGTN_SHIFT              (0U)
#define SEMA42_RSTGT_W_RSTGTN_WIDTH              (8U)
#define SEMA42_RSTGT_W_RSTGTN(x)                 (((uint16_t)(((uint16_t)(x)) << SEMA42_RSTGT_W_RSTGTN_SHIFT)) & SEMA42_RSTGT_W_RSTGTN_MASK)
#define SEMA42_RSTGT_W_RSTGDP_MASK               (0xFF00U)
#define SEMA42_RSTGT_W_RSTGDP_SHIFT              (8U)
#define SEMA42_RSTGT_W_RSTGDP_WIDTH              (8U)
#define SEMA42_RSTGT_W_RSTGDP(x)                 (((uint16_t)(((uint16_t)(x)) << SEMA42_RSTGT_W_RSTGDP_SHIFT)) & SEMA42_RSTGT_W_RSTGDP_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group SEMA42_Register_Masks */


/*!
 * @}
 */ /* end of group SEMA42_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- SERDES_0_GPR Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SERDES_0_GPR_Peripheral_Access_Layer SERDES_0_GPR Peripheral Access Layer
 * @{
 */

/** SERDES_0_GPR - Register Layout Typedef */
typedef struct {
  __IO uint32_t PCIE_CONFIG_0;                     /**< Config_0_Register, offset: 0x0 */
} SERDES_0_GPR_Type, *SERDES_0_GPR_MemMapPtr;

/** Number of instances of the SERDES_0_GPR module. */
#define SERDES_0_GPR_INSTANCE_COUNT              (1u)

/* SERDES_0_GPR - Peripheral instance base addresses */
/** Peripheral SERDES_0_GPR base address */
#define SERDES_0_GPR_BASE                        (0x4007C500u)
/** Peripheral SERDES_0_GPR base pointer */
#define SERDES_0_GPR                             ((SERDES_0_GPR_Type *)SERDES_0_GPR_BASE)
/** Array initializer of SERDES_0_GPR peripheral base addresses */
#define SERDES_0_GPR_BASE_ADDRS                  { SERDES_0_GPR_BASE }
/** Array initializer of SERDES_0_GPR peripheral base pointers */
#define SERDES_0_GPR_BASE_PTRS                   { SERDES_0_GPR }

/* ----------------------------------------------------------------------------
   -- SERDES_0_GPR Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SERDES_0_GPR_Register_Masks SERDES_0_GPR Register Masks
 * @{
 */

/*! @name PCIE_CONFIG_0 - Config_0_Register */
/*! @{ */
#define SERDES_0_GPR_PCIE_CONFIG_0_parity_chk_mstr_araddrp_err_MASK (0x1U)
#define SERDES_0_GPR_PCIE_CONFIG_0_parity_chk_mstr_araddrp_err_SHIFT (0U)
#define SERDES_0_GPR_PCIE_CONFIG_0_parity_chk_mstr_araddrp_err_WIDTH (1U)
#define SERDES_0_GPR_PCIE_CONFIG_0_parity_chk_mstr_araddrp_err(x) (((uint32_t)(((uint32_t)(x)) << SERDES_0_GPR_PCIE_CONFIG_0_parity_chk_mstr_araddrp_err_SHIFT)) & SERDES_0_GPR_PCIE_CONFIG_0_parity_chk_mstr_araddrp_err_MASK)
#define SERDES_0_GPR_PCIE_CONFIG_0_parity_chk_mstr_awaddrp_err_MASK (0x2U)
#define SERDES_0_GPR_PCIE_CONFIG_0_parity_chk_mstr_awaddrp_err_SHIFT (1U)
#define SERDES_0_GPR_PCIE_CONFIG_0_parity_chk_mstr_awaddrp_err_WIDTH (1U)
#define SERDES_0_GPR_PCIE_CONFIG_0_parity_chk_mstr_awaddrp_err(x) (((uint32_t)(((uint32_t)(x)) << SERDES_0_GPR_PCIE_CONFIG_0_parity_chk_mstr_awaddrp_err_SHIFT)) & SERDES_0_GPR_PCIE_CONFIG_0_parity_chk_mstr_awaddrp_err_MASK)
#define SERDES_0_GPR_PCIE_CONFIG_0_parity_chk_mstr_wdatap_err_MASK (0x4U)
#define SERDES_0_GPR_PCIE_CONFIG_0_parity_chk_mstr_wdatap_err_SHIFT (2U)
#define SERDES_0_GPR_PCIE_CONFIG_0_parity_chk_mstr_wdatap_err_WIDTH (1U)
#define SERDES_0_GPR_PCIE_CONFIG_0_parity_chk_mstr_wdatap_err(x) (((uint32_t)(((uint32_t)(x)) << SERDES_0_GPR_PCIE_CONFIG_0_parity_chk_mstr_wdatap_err_SHIFT)) & SERDES_0_GPR_PCIE_CONFIG_0_parity_chk_mstr_wdatap_err_MASK)
#define SERDES_0_GPR_PCIE_CONFIG_0_parity_chk_slv_rdatap_err_MASK (0x8U)
#define SERDES_0_GPR_PCIE_CONFIG_0_parity_chk_slv_rdatap_err_SHIFT (3U)
#define SERDES_0_GPR_PCIE_CONFIG_0_parity_chk_slv_rdatap_err_WIDTH (1U)
#define SERDES_0_GPR_PCIE_CONFIG_0_parity_chk_slv_rdatap_err(x) (((uint32_t)(((uint32_t)(x)) << SERDES_0_GPR_PCIE_CONFIG_0_parity_chk_slv_rdatap_err_SHIFT)) & SERDES_0_GPR_PCIE_CONFIG_0_parity_chk_slv_rdatap_err_MASK)
#define SERDES_0_GPR_PCIE_CONFIG_0_RESERVED_MASK (0xFFFFFFF0U)
#define SERDES_0_GPR_PCIE_CONFIG_0_RESERVED_SHIFT (4U)
#define SERDES_0_GPR_PCIE_CONFIG_0_RESERVED_WIDTH (28U)
#define SERDES_0_GPR_PCIE_CONFIG_0_RESERVED(x)   (((uint32_t)(((uint32_t)(x)) << SERDES_0_GPR_PCIE_CONFIG_0_RESERVED_SHIFT)) & SERDES_0_GPR_PCIE_CONFIG_0_RESERVED_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group SERDES_0_GPR_Register_Masks */


/*!
 * @}
 */ /* end of group SERDES_0_GPR_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- SIUL2 Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SIUL2_Peripheral_Access_Layer SIUL2 Peripheral Access Layer
 * @{
 */

/** SIUL2 - Size of Registers Arrays */
#define SIUL2_IFMCR_COUNT                         32u
#define SIUL2_MSCR_COUNT                          191u
#define SIUL2_IMCR_COUNT                          496u
#define SIUL2_GPDO_COUNT                          192u
#define SIUL2_GPDI_COUNT                          192u
#define SIUL2_PGPDO_COUNT                         12u
#define SIUL2_PGPDI_COUNT                         12u
#define SIUL2_MPGPDO_COUNT                        12u

/** SIUL2 - Register Layout Typedef */
typedef struct {
  uint8_t RESERVED_0[4];
  __I  uint32_t MIDR1;                             /**< SIUL2 MCU ID Register #1, offset: 0x4 */
  __I  uint32_t MIDR2;                             /**< SIUL2 MCU ID Register #2, offset: 0x8 */
  uint8_t RESERVED_1[4];
  __IO uint32_t DISR0;                             /**< SIUL2 DMA/Interrupt Status Flag Register0, offset: 0x10 */
  uint8_t RESERVED_2[4];
  __IO uint32_t DIRER0;                            /**< SIUL2 DMA/Interrupt Request Enable Register0, offset: 0x18 */
  uint8_t RESERVED_3[4];
  __IO uint32_t DIRSR0;                            /**< SIUL2 DMA/Interrupt Request Select Register0, offset: 0x20 */
  uint8_t RESERVED_4[4];
  __IO uint32_t IREER0;                            /**< SIUL2 Interrupt Rising-Edge Event Enable Register 0, offset: 0x28 */
  uint8_t RESERVED_5[4];
  __IO uint32_t IFEER0;                            /**< SIUL2 Interrupt Falling-Edge Event Enable Register 0, offset: 0x30 */
  uint8_t RESERVED_6[4];
  __IO uint32_t IFER0;                             /**< SIUL2 Interrupt Filter Enable Register 0, offset: 0x38 */
  uint8_t RESERVED_7[4];
  __IO uint32_t IFMCR[SIUL2_IFMCR_COUNT];          /**< SIUL2 Interrupt Filter Maximum Counter Register, array offset: 0x40, array step: 0x4 */
  __IO uint32_t IFCPR;                             /**< SIUL2 Interrupt Filter Clock Prescaler Register, offset: 0xC0 */
  uint8_t RESERVED_8[380];
  __IO uint32_t MSCR[SIUL2_MSCR_COUNT];            /**< SIUL2 Multiplexed Signal Configuration Register, array offset: 0x240, array step: 0x4 */
  uint8_t RESERVED_9[1284];
  __IO uint32_t IMCR[SIUL2_IMCR_COUNT];            /**< SIUL2 Input Multiplexed Signal Configuration Register, array offset: 0xA40, array step: 0x4 */
  uint8_t RESERVED_10[256];
  __IO uint8_t GPDO[SIUL2_GPDO_COUNT];             /**< SIUL2 GPIO Pad Data Output Register, array offset: 0x1300, array step: 0x1 */
  uint8_t RESERVED_16[320];
  __I  uint8_t GPDI[SIUL2_GPDI_COUNT];             /**< SIUL2 GPIO Pad Data Input Register, array offset: 0x1500, array step: 0x1 */
  uint8_t RESERVED_22[320];
  __IO uint16_t PGPDO[SIUL2_PGPDO_COUNT];          /**< SIUL2 Parallel GPIO Pad Data Out Register, array offset: 0x1700, array step: 0x2 */
  uint8_t RESERVED_24[40];
  __I  uint16_t PGPDI[SIUL2_PGPDI_COUNT];          /**< SIUL2 Parallel GPIO Pad Data In Register, array offset: 0x1740, array step: 0x2 */
  uint8_t RESERVED_26[40];
  __O  uint32_t MPGPDO[SIUL2_MPGPDO_COUNT];        /**< SIUL2 Masked Parallel GPIO Pad Data Out Register, array offset: 0x1780, array step: 0x4 */
} SIUL2_Type, *SIUL2_MemMapPtr;

/** Number of instances of the SIUL2 module. */
#define SIUL2_INSTANCE_COUNT                     (2u)

/* SIUL2 - Peripheral instance base addresses */
/** Peripheral SIUL2_0 base address */
#define SIUL2_0_BASE                             (0x4009C000u)
/** Peripheral SIUL2_0 base pointer */
#define SIUL2_0                                  ((SIUL2_Type *)SIUL2_0_BASE)
/** Peripheral SIUL2_1 base address */
#define SIUL2_1_BASE                             (0x44010000u)
/** Peripheral SIUL2_1 base pointer */
#define SIUL2_1                                  ((SIUL2_Type *)SIUL2_1_BASE)
/** Array initializer of SIUL2 peripheral base addresses */
#define SIUL2_BASE_ADDRS                         { SIUL2_0_BASE, SIUL2_1_BASE }
/** Array initializer of SIUL2 peripheral base pointers */
#define SIUL2_BASE_PTRS                          { SIUL2_0, SIUL2_1 }

/* ----------------------------------------------------------------------------
   -- SIUL2 Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SIUL2_Register_Masks SIUL2 Register Masks
 * @{
 */

/*! @name MIDR1 - SIUL2 MCU ID Register #1 */
/*! @{ */
#define SIUL2_MIDR1_MINOR_MASK_MASK              (0xFU)
#define SIUL2_MIDR1_MINOR_MASK_SHIFT             (0U)
#define SIUL2_MIDR1_MINOR_MASK_WIDTH             (4U)
#define SIUL2_MIDR1_MINOR_MASK(x)                (((uint32_t)(((uint32_t)(x)) << SIUL2_MIDR1_MINOR_MASK_SHIFT)) & SIUL2_MIDR1_MINOR_MASK_MASK)
#define SIUL2_MIDR1_SYSTEM_RAM_SIZE_MASK         (0x3FU)
#define SIUL2_MIDR1_SYSTEM_RAM_SIZE_SHIFT        (0U)
#define SIUL2_MIDR1_SYSTEM_RAM_SIZE_WIDTH        (6U)
#define SIUL2_MIDR1_SYSTEM_RAM_SIZE(x)           (((uint32_t)(((uint32_t)(x)) << SIUL2_MIDR1_SYSTEM_RAM_SIZE_SHIFT)) & SIUL2_MIDR1_SYSTEM_RAM_SIZE_MASK)
#define SIUL2_MIDR1_MAJOR_MASK_MASK              (0xF0U)
#define SIUL2_MIDR1_MAJOR_MASK_SHIFT             (4U)
#define SIUL2_MIDR1_MAJOR_MASK_WIDTH             (4U)
#define SIUL2_MIDR1_MAJOR_MASK(x)                (((uint32_t)(((uint32_t)(x)) << SIUL2_MIDR1_MAJOR_MASK_SHIFT)) & SIUL2_MIDR1_MAJOR_MASK_MASK)
#define SIUL2_MIDR1_CC_REVISION_MASK             (0xFF00U)
#define SIUL2_MIDR1_CC_REVISION_SHIFT            (8U)
#define SIUL2_MIDR1_CC_REVISION_WIDTH            (8U)
#define SIUL2_MIDR1_CC_REVISION(x)               (((uint32_t)(((uint32_t)(x)) << SIUL2_MIDR1_CC_REVISION_SHIFT)) & SIUL2_MIDR1_CC_REVISION_MASK)
#define SIUL2_MIDR1_PART_NO_LETTER_MASK          (0xFC00U)
#define SIUL2_MIDR1_PART_NO_LETTER_SHIFT         (10U)
#define SIUL2_MIDR1_PART_NO_LETTER_WIDTH         (6U)
#define SIUL2_MIDR1_PART_NO_LETTER(x)            (((uint32_t)(((uint32_t)(x)) << SIUL2_MIDR1_PART_NO_LETTER_SHIFT)) & SIUL2_MIDR1_PART_NO_LETTER_MASK)
#define SIUL2_MIDR1_PART_NO_MASK                 (0x3FF0000U)
#define SIUL2_MIDR1_PART_NO_SHIFT                (16U)
#define SIUL2_MIDR1_PART_NO_WIDTH                (10U)
#define SIUL2_MIDR1_PART_NO(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_MIDR1_PART_NO_SHIFT)) & SIUL2_MIDR1_PART_NO_MASK)
#define SIUL2_MIDR1_PRODUCT_FAMILY_NO_MASK       (0x3FF0000U)
#define SIUL2_MIDR1_PRODUCT_FAMILY_NO_SHIFT      (16U)
#define SIUL2_MIDR1_PRODUCT_FAMILY_NO_WIDTH      (10U)
#define SIUL2_MIDR1_PRODUCT_FAMILY_NO(x)         (((uint32_t)(((uint32_t)(x)) << SIUL2_MIDR1_PRODUCT_FAMILY_NO_SHIFT)) & SIUL2_MIDR1_PRODUCT_FAMILY_NO_MASK)
#define SIUL2_MIDR1_PRODUCT_FAMILY_LETTER_MASK   (0xFC000000U)
#define SIUL2_MIDR1_PRODUCT_FAMILY_LETTER_SHIFT  (26U)
#define SIUL2_MIDR1_PRODUCT_FAMILY_LETTER_WIDTH  (6U)
#define SIUL2_MIDR1_PRODUCT_FAMILY_LETTER(x)     (((uint32_t)(((uint32_t)(x)) << SIUL2_MIDR1_PRODUCT_FAMILY_LETTER_SHIFT)) & SIUL2_MIDR1_PRODUCT_FAMILY_LETTER_MASK)
#define SIUL2_MIDR1_PRODUCT_LINE_LETTER_MASK     (0xFC000000U)
#define SIUL2_MIDR1_PRODUCT_LINE_LETTER_SHIFT    (26U)
#define SIUL2_MIDR1_PRODUCT_LINE_LETTER_WIDTH    (6U)
#define SIUL2_MIDR1_PRODUCT_LINE_LETTER(x)       (((uint32_t)(((uint32_t)(x)) << SIUL2_MIDR1_PRODUCT_LINE_LETTER_SHIFT)) & SIUL2_MIDR1_PRODUCT_LINE_LETTER_MASK)
/*! @} */

/*! @name MIDR2 - SIUL2 MCU ID Register #2 */
/*! @{ */
#define SIUL2_MIDR2_AE0_MASK                     (0x1U)
#define SIUL2_MIDR2_AE0_SHIFT                    (0U)
#define SIUL2_MIDR2_AE0_WIDTH                    (1U)
#define SIUL2_MIDR2_AE0(x)                       (((uint32_t)(((uint32_t)(x)) << SIUL2_MIDR2_AE0_SHIFT)) & SIUL2_MIDR2_AE0_MASK)
#define SIUL2_MIDR2_FLASH_SIZE_CODE_MASK         (0xFFU)
#define SIUL2_MIDR2_FLASH_SIZE_CODE_SHIFT        (0U)
#define SIUL2_MIDR2_FLASH_SIZE_CODE_WIDTH        (8U)
#define SIUL2_MIDR2_FLASH_SIZE_CODE(x)           (((uint32_t)(((uint32_t)(x)) << SIUL2_MIDR2_FLASH_SIZE_CODE_SHIFT)) & SIUL2_MIDR2_FLASH_SIZE_CODE_MASK)
#define SIUL2_MIDR2_AE1_MASK                     (0x2U)
#define SIUL2_MIDR2_AE1_SHIFT                    (1U)
#define SIUL2_MIDR2_AE1_WIDTH                    (1U)
#define SIUL2_MIDR2_AE1(x)                       (((uint32_t)(((uint32_t)(x)) << SIUL2_MIDR2_AE1_SHIFT)) & SIUL2_MIDR2_AE1_MASK)
#define SIUL2_MIDR2_FLASH_SIZE_DATA_MASK         (0xF00U)
#define SIUL2_MIDR2_FLASH_SIZE_DATA_SHIFT        (8U)
#define SIUL2_MIDR2_FLASH_SIZE_DATA_WIDTH        (4U)
#define SIUL2_MIDR2_FLASH_SIZE_DATA(x)           (((uint32_t)(((uint32_t)(x)) << SIUL2_MIDR2_FLASH_SIZE_DATA_SHIFT)) & SIUL2_MIDR2_FLASH_SIZE_DATA_MASK)
#define SIUL2_MIDR2_FLASH_DATA_MASK              (0x3000U)
#define SIUL2_MIDR2_FLASH_DATA_SHIFT             (12U)
#define SIUL2_MIDR2_FLASH_DATA_WIDTH             (2U)
#define SIUL2_MIDR2_FLASH_DATA(x)                (((uint32_t)(((uint32_t)(x)) << SIUL2_MIDR2_FLASH_DATA_SHIFT)) & SIUL2_MIDR2_FLASH_DATA_MASK)
#define SIUL2_MIDR2_LAX_MASK                     (0x1000U)
#define SIUL2_MIDR2_LAX_SHIFT                    (12U)
#define SIUL2_MIDR2_LAX_WIDTH                    (1U)
#define SIUL2_MIDR2_LAX(x)                       (((uint32_t)(((uint32_t)(x)) << SIUL2_MIDR2_LAX_SHIFT)) & SIUL2_MIDR2_LAX_MASK)
#define SIUL2_MIDR2_HPBF_MASK                    (0x2000U)
#define SIUL2_MIDR2_HPBF_SHIFT                   (13U)
#define SIUL2_MIDR2_HPBF_WIDTH                   (1U)
#define SIUL2_MIDR2_HPBF(x)                      (((uint32_t)(((uint32_t)(x)) << SIUL2_MIDR2_HPBF_SHIFT)) & SIUL2_MIDR2_HPBF_MASK)
#define SIUL2_MIDR2_FLASH_CODE_MASK              (0xC000U)
#define SIUL2_MIDR2_FLASH_CODE_SHIFT             (14U)
#define SIUL2_MIDR2_FLASH_CODE_WIDTH             (2U)
#define SIUL2_MIDR2_FLASH_CODE(x)                (((uint32_t)(((uint32_t)(x)) << SIUL2_MIDR2_FLASH_CODE_SHIFT)) & SIUL2_MIDR2_FLASH_CODE_MASK)
#define SIUL2_MIDR2_OTA_MASK                     (0x4000U)
#define SIUL2_MIDR2_OTA_SHIFT                    (14U)
#define SIUL2_MIDR2_OTA_WIDTH                    (1U)
#define SIUL2_MIDR2_OTA(x)                       (((uint32_t)(((uint32_t)(x)) << SIUL2_MIDR2_OTA_SHIFT)) & SIUL2_MIDR2_OTA_MASK)
#define SIUL2_MIDR2_SERDES_MASK                  (0x8000U)
#define SIUL2_MIDR2_SERDES_SHIFT                 (15U)
#define SIUL2_MIDR2_SERDES_WIDTH                 (1U)
#define SIUL2_MIDR2_SERDES(x)                    (((uint32_t)(((uint32_t)(x)) << SIUL2_MIDR2_SERDES_SHIFT)) & SIUL2_MIDR2_SERDES_MASK)
#define SIUL2_MIDR2_COMPUTE_DIE_PART_NUMBER_MASK (0x3FF0000U)
#define SIUL2_MIDR2_COMPUTE_DIE_PART_NUMBER_SHIFT (16U)
#define SIUL2_MIDR2_COMPUTE_DIE_PART_NUMBER_WIDTH (10U)
#define SIUL2_MIDR2_COMPUTE_DIE_PART_NUMBER(x)   (((uint32_t)(((uint32_t)(x)) << SIUL2_MIDR2_COMPUTE_DIE_PART_NUMBER_SHIFT)) & SIUL2_MIDR2_COMPUTE_DIE_PART_NUMBER_MASK)
#define SIUL2_MIDR2_FREQUENCY_MASK               (0xF0000U)
#define SIUL2_MIDR2_FREQUENCY_SHIFT              (16U)
#define SIUL2_MIDR2_FREQUENCY_WIDTH              (4U)
#define SIUL2_MIDR2_FREQUENCY(x)                 (((uint32_t)(((uint32_t)(x)) << SIUL2_MIDR2_FREQUENCY_SHIFT)) & SIUL2_MIDR2_FREQUENCY_MASK)
#define SIUL2_MIDR2_PACKAGE_MASK                 (0x3F00000U)
#define SIUL2_MIDR2_PACKAGE_SHIFT                (20U)
#define SIUL2_MIDR2_PACKAGE_WIDTH                (6U)
#define SIUL2_MIDR2_PACKAGE(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_MIDR2_PACKAGE_SHIFT)) & SIUL2_MIDR2_PACKAGE_MASK)
#define SIUL2_MIDR2_TEMPERATURE_MASK             (0x1C000000U)
#define SIUL2_MIDR2_TEMPERATURE_SHIFT            (26U)
#define SIUL2_MIDR2_TEMPERATURE_WIDTH            (3U)
#define SIUL2_MIDR2_TEMPERATURE(x)               (((uint32_t)(((uint32_t)(x)) << SIUL2_MIDR2_TEMPERATURE_SHIFT)) & SIUL2_MIDR2_TEMPERATURE_MASK)
#define SIUL2_MIDR2_FLASH_CONFIG_MASK            (0x30000000U)
#define SIUL2_MIDR2_FLASH_CONFIG_SHIFT           (28U)
#define SIUL2_MIDR2_FLASH_CONFIG_WIDTH           (2U)
#define SIUL2_MIDR2_FLASH_CONFIG(x)              (((uint32_t)(((uint32_t)(x)) << SIUL2_MIDR2_FLASH_CONFIG_SHIFT)) & SIUL2_MIDR2_FLASH_CONFIG_MASK)
#define SIUL2_MIDR2_TECHNOLOGY_MASK              (0xE0000000U)
#define SIUL2_MIDR2_TECHNOLOGY_SHIFT             (29U)
#define SIUL2_MIDR2_TECHNOLOGY_WIDTH             (3U)
#define SIUL2_MIDR2_TECHNOLOGY(x)                (((uint32_t)(((uint32_t)(x)) << SIUL2_MIDR2_TECHNOLOGY_SHIFT)) & SIUL2_MIDR2_TECHNOLOGY_MASK)
#define SIUL2_MIDR2_FLASH_VENDOR_MASK            (0xC0000000U)
#define SIUL2_MIDR2_FLASH_VENDOR_SHIFT           (30U)
#define SIUL2_MIDR2_FLASH_VENDOR_WIDTH           (2U)
#define SIUL2_MIDR2_FLASH_VENDOR(x)              (((uint32_t)(((uint32_t)(x)) << SIUL2_MIDR2_FLASH_VENDOR_SHIFT)) & SIUL2_MIDR2_FLASH_VENDOR_MASK)
/*! @} */

/*! @name DISR0 - SIUL2 DMA/Interrupt Status Flag Register0 */
/*! @{ */
#define SIUL2_DISR0_EIFR0_MASK                   (0x1U)
#define SIUL2_DISR0_EIFR0_SHIFT                  (0U)
#define SIUL2_DISR0_EIFR0_WIDTH                  (1U)
#define SIUL2_DISR0_EIFR0(x)                     (((uint32_t)(((uint32_t)(x)) << SIUL2_DISR0_EIFR0_SHIFT)) & SIUL2_DISR0_EIFR0_MASK)
#define SIUL2_DISR0_EIFR1_MASK                   (0x2U)
#define SIUL2_DISR0_EIFR1_SHIFT                  (1U)
#define SIUL2_DISR0_EIFR1_WIDTH                  (1U)
#define SIUL2_DISR0_EIFR1(x)                     (((uint32_t)(((uint32_t)(x)) << SIUL2_DISR0_EIFR1_SHIFT)) & SIUL2_DISR0_EIFR1_MASK)
#define SIUL2_DISR0_EIFR2_MASK                   (0x4U)
#define SIUL2_DISR0_EIFR2_SHIFT                  (2U)
#define SIUL2_DISR0_EIFR2_WIDTH                  (1U)
#define SIUL2_DISR0_EIFR2(x)                     (((uint32_t)(((uint32_t)(x)) << SIUL2_DISR0_EIFR2_SHIFT)) & SIUL2_DISR0_EIFR2_MASK)
#define SIUL2_DISR0_EIFR3_MASK                   (0x8U)
#define SIUL2_DISR0_EIFR3_SHIFT                  (3U)
#define SIUL2_DISR0_EIFR3_WIDTH                  (1U)
#define SIUL2_DISR0_EIFR3(x)                     (((uint32_t)(((uint32_t)(x)) << SIUL2_DISR0_EIFR3_SHIFT)) & SIUL2_DISR0_EIFR3_MASK)
#define SIUL2_DISR0_EIFR4_MASK                   (0x10U)
#define SIUL2_DISR0_EIFR4_SHIFT                  (4U)
#define SIUL2_DISR0_EIFR4_WIDTH                  (1U)
#define SIUL2_DISR0_EIFR4(x)                     (((uint32_t)(((uint32_t)(x)) << SIUL2_DISR0_EIFR4_SHIFT)) & SIUL2_DISR0_EIFR4_MASK)
#define SIUL2_DISR0_EIFR5_MASK                   (0x20U)
#define SIUL2_DISR0_EIFR5_SHIFT                  (5U)
#define SIUL2_DISR0_EIFR5_WIDTH                  (1U)
#define SIUL2_DISR0_EIFR5(x)                     (((uint32_t)(((uint32_t)(x)) << SIUL2_DISR0_EIFR5_SHIFT)) & SIUL2_DISR0_EIFR5_MASK)
#define SIUL2_DISR0_EIFR6_MASK                   (0x40U)
#define SIUL2_DISR0_EIFR6_SHIFT                  (6U)
#define SIUL2_DISR0_EIFR6_WIDTH                  (1U)
#define SIUL2_DISR0_EIFR6(x)                     (((uint32_t)(((uint32_t)(x)) << SIUL2_DISR0_EIFR6_SHIFT)) & SIUL2_DISR0_EIFR6_MASK)
#define SIUL2_DISR0_EIFR7_MASK                   (0x80U)
#define SIUL2_DISR0_EIFR7_SHIFT                  (7U)
#define SIUL2_DISR0_EIFR7_WIDTH                  (1U)
#define SIUL2_DISR0_EIFR7(x)                     (((uint32_t)(((uint32_t)(x)) << SIUL2_DISR0_EIFR7_SHIFT)) & SIUL2_DISR0_EIFR7_MASK)
#define SIUL2_DISR0_EIFR8_MASK                   (0x100U)
#define SIUL2_DISR0_EIFR8_SHIFT                  (8U)
#define SIUL2_DISR0_EIFR8_WIDTH                  (1U)
#define SIUL2_DISR0_EIFR8(x)                     (((uint32_t)(((uint32_t)(x)) << SIUL2_DISR0_EIFR8_SHIFT)) & SIUL2_DISR0_EIFR8_MASK)
#define SIUL2_DISR0_EIFR9_MASK                   (0x200U)
#define SIUL2_DISR0_EIFR9_SHIFT                  (9U)
#define SIUL2_DISR0_EIFR9_WIDTH                  (1U)
#define SIUL2_DISR0_EIFR9(x)                     (((uint32_t)(((uint32_t)(x)) << SIUL2_DISR0_EIFR9_SHIFT)) & SIUL2_DISR0_EIFR9_MASK)
#define SIUL2_DISR0_EIFR10_MASK                  (0x400U)
#define SIUL2_DISR0_EIFR10_SHIFT                 (10U)
#define SIUL2_DISR0_EIFR10_WIDTH                 (1U)
#define SIUL2_DISR0_EIFR10(x)                    (((uint32_t)(((uint32_t)(x)) << SIUL2_DISR0_EIFR10_SHIFT)) & SIUL2_DISR0_EIFR10_MASK)
#define SIUL2_DISR0_EIFR11_MASK                  (0x800U)
#define SIUL2_DISR0_EIFR11_SHIFT                 (11U)
#define SIUL2_DISR0_EIFR11_WIDTH                 (1U)
#define SIUL2_DISR0_EIFR11(x)                    (((uint32_t)(((uint32_t)(x)) << SIUL2_DISR0_EIFR11_SHIFT)) & SIUL2_DISR0_EIFR11_MASK)
#define SIUL2_DISR0_EIFR12_MASK                  (0x1000U)
#define SIUL2_DISR0_EIFR12_SHIFT                 (12U)
#define SIUL2_DISR0_EIFR12_WIDTH                 (1U)
#define SIUL2_DISR0_EIFR12(x)                    (((uint32_t)(((uint32_t)(x)) << SIUL2_DISR0_EIFR12_SHIFT)) & SIUL2_DISR0_EIFR12_MASK)
#define SIUL2_DISR0_EIFR13_MASK                  (0x2000U)
#define SIUL2_DISR0_EIFR13_SHIFT                 (13U)
#define SIUL2_DISR0_EIFR13_WIDTH                 (1U)
#define SIUL2_DISR0_EIFR13(x)                    (((uint32_t)(((uint32_t)(x)) << SIUL2_DISR0_EIFR13_SHIFT)) & SIUL2_DISR0_EIFR13_MASK)
#define SIUL2_DISR0_EIFR14_MASK                  (0x4000U)
#define SIUL2_DISR0_EIFR14_SHIFT                 (14U)
#define SIUL2_DISR0_EIFR14_WIDTH                 (1U)
#define SIUL2_DISR0_EIFR14(x)                    (((uint32_t)(((uint32_t)(x)) << SIUL2_DISR0_EIFR14_SHIFT)) & SIUL2_DISR0_EIFR14_MASK)
#define SIUL2_DISR0_EIFR15_MASK                  (0x8000U)
#define SIUL2_DISR0_EIFR15_SHIFT                 (15U)
#define SIUL2_DISR0_EIFR15_WIDTH                 (1U)
#define SIUL2_DISR0_EIFR15(x)                    (((uint32_t)(((uint32_t)(x)) << SIUL2_DISR0_EIFR15_SHIFT)) & SIUL2_DISR0_EIFR15_MASK)
#define SIUL2_DISR0_EIFR16_MASK                  (0x10000U)
#define SIUL2_DISR0_EIFR16_SHIFT                 (16U)
#define SIUL2_DISR0_EIFR16_WIDTH                 (1U)
#define SIUL2_DISR0_EIFR16(x)                    (((uint32_t)(((uint32_t)(x)) << SIUL2_DISR0_EIFR16_SHIFT)) & SIUL2_DISR0_EIFR16_MASK)
#define SIUL2_DISR0_EIFR17_MASK                  (0x20000U)
#define SIUL2_DISR0_EIFR17_SHIFT                 (17U)
#define SIUL2_DISR0_EIFR17_WIDTH                 (1U)
#define SIUL2_DISR0_EIFR17(x)                    (((uint32_t)(((uint32_t)(x)) << SIUL2_DISR0_EIFR17_SHIFT)) & SIUL2_DISR0_EIFR17_MASK)
#define SIUL2_DISR0_EIFR18_MASK                  (0x40000U)
#define SIUL2_DISR0_EIFR18_SHIFT                 (18U)
#define SIUL2_DISR0_EIFR18_WIDTH                 (1U)
#define SIUL2_DISR0_EIFR18(x)                    (((uint32_t)(((uint32_t)(x)) << SIUL2_DISR0_EIFR18_SHIFT)) & SIUL2_DISR0_EIFR18_MASK)
#define SIUL2_DISR0_EIFR19_MASK                  (0x80000U)
#define SIUL2_DISR0_EIFR19_SHIFT                 (19U)
#define SIUL2_DISR0_EIFR19_WIDTH                 (1U)
#define SIUL2_DISR0_EIFR19(x)                    (((uint32_t)(((uint32_t)(x)) << SIUL2_DISR0_EIFR19_SHIFT)) & SIUL2_DISR0_EIFR19_MASK)
#define SIUL2_DISR0_EIFR20_MASK                  (0x100000U)
#define SIUL2_DISR0_EIFR20_SHIFT                 (20U)
#define SIUL2_DISR0_EIFR20_WIDTH                 (1U)
#define SIUL2_DISR0_EIFR20(x)                    (((uint32_t)(((uint32_t)(x)) << SIUL2_DISR0_EIFR20_SHIFT)) & SIUL2_DISR0_EIFR20_MASK)
#define SIUL2_DISR0_EIFR21_MASK                  (0x200000U)
#define SIUL2_DISR0_EIFR21_SHIFT                 (21U)
#define SIUL2_DISR0_EIFR21_WIDTH                 (1U)
#define SIUL2_DISR0_EIFR21(x)                    (((uint32_t)(((uint32_t)(x)) << SIUL2_DISR0_EIFR21_SHIFT)) & SIUL2_DISR0_EIFR21_MASK)
#define SIUL2_DISR0_EIFR22_MASK                  (0x400000U)
#define SIUL2_DISR0_EIFR22_SHIFT                 (22U)
#define SIUL2_DISR0_EIFR22_WIDTH                 (1U)
#define SIUL2_DISR0_EIFR22(x)                    (((uint32_t)(((uint32_t)(x)) << SIUL2_DISR0_EIFR22_SHIFT)) & SIUL2_DISR0_EIFR22_MASK)
#define SIUL2_DISR0_EIFR23_MASK                  (0x800000U)
#define SIUL2_DISR0_EIFR23_SHIFT                 (23U)
#define SIUL2_DISR0_EIFR23_WIDTH                 (1U)
#define SIUL2_DISR0_EIFR23(x)                    (((uint32_t)(((uint32_t)(x)) << SIUL2_DISR0_EIFR23_SHIFT)) & SIUL2_DISR0_EIFR23_MASK)
#define SIUL2_DISR0_EIFR24_MASK                  (0x1000000U)
#define SIUL2_DISR0_EIFR24_SHIFT                 (24U)
#define SIUL2_DISR0_EIFR24_WIDTH                 (1U)
#define SIUL2_DISR0_EIFR24(x)                    (((uint32_t)(((uint32_t)(x)) << SIUL2_DISR0_EIFR24_SHIFT)) & SIUL2_DISR0_EIFR24_MASK)
#define SIUL2_DISR0_EIFR25_MASK                  (0x2000000U)
#define SIUL2_DISR0_EIFR25_SHIFT                 (25U)
#define SIUL2_DISR0_EIFR25_WIDTH                 (1U)
#define SIUL2_DISR0_EIFR25(x)                    (((uint32_t)(((uint32_t)(x)) << SIUL2_DISR0_EIFR25_SHIFT)) & SIUL2_DISR0_EIFR25_MASK)
#define SIUL2_DISR0_EIFR26_MASK                  (0x4000000U)
#define SIUL2_DISR0_EIFR26_SHIFT                 (26U)
#define SIUL2_DISR0_EIFR26_WIDTH                 (1U)
#define SIUL2_DISR0_EIFR26(x)                    (((uint32_t)(((uint32_t)(x)) << SIUL2_DISR0_EIFR26_SHIFT)) & SIUL2_DISR0_EIFR26_MASK)
#define SIUL2_DISR0_EIFR27_MASK                  (0x8000000U)
#define SIUL2_DISR0_EIFR27_SHIFT                 (27U)
#define SIUL2_DISR0_EIFR27_WIDTH                 (1U)
#define SIUL2_DISR0_EIFR27(x)                    (((uint32_t)(((uint32_t)(x)) << SIUL2_DISR0_EIFR27_SHIFT)) & SIUL2_DISR0_EIFR27_MASK)
#define SIUL2_DISR0_EIFR28_MASK                  (0x10000000U)
#define SIUL2_DISR0_EIFR28_SHIFT                 (28U)
#define SIUL2_DISR0_EIFR28_WIDTH                 (1U)
#define SIUL2_DISR0_EIFR28(x)                    (((uint32_t)(((uint32_t)(x)) << SIUL2_DISR0_EIFR28_SHIFT)) & SIUL2_DISR0_EIFR28_MASK)
#define SIUL2_DISR0_EIFR29_MASK                  (0x20000000U)
#define SIUL2_DISR0_EIFR29_SHIFT                 (29U)
#define SIUL2_DISR0_EIFR29_WIDTH                 (1U)
#define SIUL2_DISR0_EIFR29(x)                    (((uint32_t)(((uint32_t)(x)) << SIUL2_DISR0_EIFR29_SHIFT)) & SIUL2_DISR0_EIFR29_MASK)
#define SIUL2_DISR0_EIFR30_MASK                  (0x40000000U)
#define SIUL2_DISR0_EIFR30_SHIFT                 (30U)
#define SIUL2_DISR0_EIFR30_WIDTH                 (1U)
#define SIUL2_DISR0_EIFR30(x)                    (((uint32_t)(((uint32_t)(x)) << SIUL2_DISR0_EIFR30_SHIFT)) & SIUL2_DISR0_EIFR30_MASK)
#define SIUL2_DISR0_EIFR31_MASK                  (0x80000000U)
#define SIUL2_DISR0_EIFR31_SHIFT                 (31U)
#define SIUL2_DISR0_EIFR31_WIDTH                 (1U)
#define SIUL2_DISR0_EIFR31(x)                    (((uint32_t)(((uint32_t)(x)) << SIUL2_DISR0_EIFR31_SHIFT)) & SIUL2_DISR0_EIFR31_MASK)
/*! @} */

/*! @name DIRER0 - SIUL2 DMA/Interrupt Request Enable Register0 */
/*! @{ */
#define SIUL2_DIRER0_EIRE0_MASK                  (0x1U)
#define SIUL2_DIRER0_EIRE0_SHIFT                 (0U)
#define SIUL2_DIRER0_EIRE0_WIDTH                 (1U)
#define SIUL2_DIRER0_EIRE0(x)                    (((uint32_t)(((uint32_t)(x)) << SIUL2_DIRER0_EIRE0_SHIFT)) & SIUL2_DIRER0_EIRE0_MASK)
#define SIUL2_DIRER0_EIRE1_MASK                  (0x2U)
#define SIUL2_DIRER0_EIRE1_SHIFT                 (1U)
#define SIUL2_DIRER0_EIRE1_WIDTH                 (1U)
#define SIUL2_DIRER0_EIRE1(x)                    (((uint32_t)(((uint32_t)(x)) << SIUL2_DIRER0_EIRE1_SHIFT)) & SIUL2_DIRER0_EIRE1_MASK)
#define SIUL2_DIRER0_EIRE2_MASK                  (0x4U)
#define SIUL2_DIRER0_EIRE2_SHIFT                 (2U)
#define SIUL2_DIRER0_EIRE2_WIDTH                 (1U)
#define SIUL2_DIRER0_EIRE2(x)                    (((uint32_t)(((uint32_t)(x)) << SIUL2_DIRER0_EIRE2_SHIFT)) & SIUL2_DIRER0_EIRE2_MASK)
#define SIUL2_DIRER0_EIRE3_MASK                  (0x8U)
#define SIUL2_DIRER0_EIRE3_SHIFT                 (3U)
#define SIUL2_DIRER0_EIRE3_WIDTH                 (1U)
#define SIUL2_DIRER0_EIRE3(x)                    (((uint32_t)(((uint32_t)(x)) << SIUL2_DIRER0_EIRE3_SHIFT)) & SIUL2_DIRER0_EIRE3_MASK)
#define SIUL2_DIRER0_EIRE4_MASK                  (0x10U)
#define SIUL2_DIRER0_EIRE4_SHIFT                 (4U)
#define SIUL2_DIRER0_EIRE4_WIDTH                 (1U)
#define SIUL2_DIRER0_EIRE4(x)                    (((uint32_t)(((uint32_t)(x)) << SIUL2_DIRER0_EIRE4_SHIFT)) & SIUL2_DIRER0_EIRE4_MASK)
#define SIUL2_DIRER0_EIRE5_MASK                  (0x20U)
#define SIUL2_DIRER0_EIRE5_SHIFT                 (5U)
#define SIUL2_DIRER0_EIRE5_WIDTH                 (1U)
#define SIUL2_DIRER0_EIRE5(x)                    (((uint32_t)(((uint32_t)(x)) << SIUL2_DIRER0_EIRE5_SHIFT)) & SIUL2_DIRER0_EIRE5_MASK)
#define SIUL2_DIRER0_EIRE6_MASK                  (0x40U)
#define SIUL2_DIRER0_EIRE6_SHIFT                 (6U)
#define SIUL2_DIRER0_EIRE6_WIDTH                 (1U)
#define SIUL2_DIRER0_EIRE6(x)                    (((uint32_t)(((uint32_t)(x)) << SIUL2_DIRER0_EIRE6_SHIFT)) & SIUL2_DIRER0_EIRE6_MASK)
#define SIUL2_DIRER0_EIRE7_MASK                  (0x80U)
#define SIUL2_DIRER0_EIRE7_SHIFT                 (7U)
#define SIUL2_DIRER0_EIRE7_WIDTH                 (1U)
#define SIUL2_DIRER0_EIRE7(x)                    (((uint32_t)(((uint32_t)(x)) << SIUL2_DIRER0_EIRE7_SHIFT)) & SIUL2_DIRER0_EIRE7_MASK)
#define SIUL2_DIRER0_EIRE8_MASK                  (0x100U)
#define SIUL2_DIRER0_EIRE8_SHIFT                 (8U)
#define SIUL2_DIRER0_EIRE8_WIDTH                 (1U)
#define SIUL2_DIRER0_EIRE8(x)                    (((uint32_t)(((uint32_t)(x)) << SIUL2_DIRER0_EIRE8_SHIFT)) & SIUL2_DIRER0_EIRE8_MASK)
#define SIUL2_DIRER0_EIRE9_MASK                  (0x200U)
#define SIUL2_DIRER0_EIRE9_SHIFT                 (9U)
#define SIUL2_DIRER0_EIRE9_WIDTH                 (1U)
#define SIUL2_DIRER0_EIRE9(x)                    (((uint32_t)(((uint32_t)(x)) << SIUL2_DIRER0_EIRE9_SHIFT)) & SIUL2_DIRER0_EIRE9_MASK)
#define SIUL2_DIRER0_EIRE10_MASK                 (0x400U)
#define SIUL2_DIRER0_EIRE10_SHIFT                (10U)
#define SIUL2_DIRER0_EIRE10_WIDTH                (1U)
#define SIUL2_DIRER0_EIRE10(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_DIRER0_EIRE10_SHIFT)) & SIUL2_DIRER0_EIRE10_MASK)
#define SIUL2_DIRER0_EIRE11_MASK                 (0x800U)
#define SIUL2_DIRER0_EIRE11_SHIFT                (11U)
#define SIUL2_DIRER0_EIRE11_WIDTH                (1U)
#define SIUL2_DIRER0_EIRE11(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_DIRER0_EIRE11_SHIFT)) & SIUL2_DIRER0_EIRE11_MASK)
#define SIUL2_DIRER0_EIRE12_MASK                 (0x1000U)
#define SIUL2_DIRER0_EIRE12_SHIFT                (12U)
#define SIUL2_DIRER0_EIRE12_WIDTH                (1U)
#define SIUL2_DIRER0_EIRE12(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_DIRER0_EIRE12_SHIFT)) & SIUL2_DIRER0_EIRE12_MASK)
#define SIUL2_DIRER0_EIRE13_MASK                 (0x2000U)
#define SIUL2_DIRER0_EIRE13_SHIFT                (13U)
#define SIUL2_DIRER0_EIRE13_WIDTH                (1U)
#define SIUL2_DIRER0_EIRE13(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_DIRER0_EIRE13_SHIFT)) & SIUL2_DIRER0_EIRE13_MASK)
#define SIUL2_DIRER0_EIRE14_MASK                 (0x4000U)
#define SIUL2_DIRER0_EIRE14_SHIFT                (14U)
#define SIUL2_DIRER0_EIRE14_WIDTH                (1U)
#define SIUL2_DIRER0_EIRE14(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_DIRER0_EIRE14_SHIFT)) & SIUL2_DIRER0_EIRE14_MASK)
#define SIUL2_DIRER0_EIRE15_MASK                 (0x8000U)
#define SIUL2_DIRER0_EIRE15_SHIFT                (15U)
#define SIUL2_DIRER0_EIRE15_WIDTH                (1U)
#define SIUL2_DIRER0_EIRE15(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_DIRER0_EIRE15_SHIFT)) & SIUL2_DIRER0_EIRE15_MASK)
#define SIUL2_DIRER0_EIRE16_MASK                 (0x10000U)
#define SIUL2_DIRER0_EIRE16_SHIFT                (16U)
#define SIUL2_DIRER0_EIRE16_WIDTH                (1U)
#define SIUL2_DIRER0_EIRE16(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_DIRER0_EIRE16_SHIFT)) & SIUL2_DIRER0_EIRE16_MASK)
#define SIUL2_DIRER0_EIRE17_MASK                 (0x20000U)
#define SIUL2_DIRER0_EIRE17_SHIFT                (17U)
#define SIUL2_DIRER0_EIRE17_WIDTH                (1U)
#define SIUL2_DIRER0_EIRE17(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_DIRER0_EIRE17_SHIFT)) & SIUL2_DIRER0_EIRE17_MASK)
#define SIUL2_DIRER0_EIRE18_MASK                 (0x40000U)
#define SIUL2_DIRER0_EIRE18_SHIFT                (18U)
#define SIUL2_DIRER0_EIRE18_WIDTH                (1U)
#define SIUL2_DIRER0_EIRE18(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_DIRER0_EIRE18_SHIFT)) & SIUL2_DIRER0_EIRE18_MASK)
#define SIUL2_DIRER0_EIRE19_MASK                 (0x80000U)
#define SIUL2_DIRER0_EIRE19_SHIFT                (19U)
#define SIUL2_DIRER0_EIRE19_WIDTH                (1U)
#define SIUL2_DIRER0_EIRE19(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_DIRER0_EIRE19_SHIFT)) & SIUL2_DIRER0_EIRE19_MASK)
#define SIUL2_DIRER0_EIRE20_MASK                 (0x100000U)
#define SIUL2_DIRER0_EIRE20_SHIFT                (20U)
#define SIUL2_DIRER0_EIRE20_WIDTH                (1U)
#define SIUL2_DIRER0_EIRE20(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_DIRER0_EIRE20_SHIFT)) & SIUL2_DIRER0_EIRE20_MASK)
#define SIUL2_DIRER0_EIRE21_MASK                 (0x200000U)
#define SIUL2_DIRER0_EIRE21_SHIFT                (21U)
#define SIUL2_DIRER0_EIRE21_WIDTH                (1U)
#define SIUL2_DIRER0_EIRE21(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_DIRER0_EIRE21_SHIFT)) & SIUL2_DIRER0_EIRE21_MASK)
#define SIUL2_DIRER0_EIRE22_MASK                 (0x400000U)
#define SIUL2_DIRER0_EIRE22_SHIFT                (22U)
#define SIUL2_DIRER0_EIRE22_WIDTH                (1U)
#define SIUL2_DIRER0_EIRE22(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_DIRER0_EIRE22_SHIFT)) & SIUL2_DIRER0_EIRE22_MASK)
#define SIUL2_DIRER0_EIRE23_MASK                 (0x800000U)
#define SIUL2_DIRER0_EIRE23_SHIFT                (23U)
#define SIUL2_DIRER0_EIRE23_WIDTH                (1U)
#define SIUL2_DIRER0_EIRE23(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_DIRER0_EIRE23_SHIFT)) & SIUL2_DIRER0_EIRE23_MASK)
#define SIUL2_DIRER0_EIRE24_MASK                 (0x1000000U)
#define SIUL2_DIRER0_EIRE24_SHIFT                (24U)
#define SIUL2_DIRER0_EIRE24_WIDTH                (1U)
#define SIUL2_DIRER0_EIRE24(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_DIRER0_EIRE24_SHIFT)) & SIUL2_DIRER0_EIRE24_MASK)
#define SIUL2_DIRER0_EIRE25_MASK                 (0x2000000U)
#define SIUL2_DIRER0_EIRE25_SHIFT                (25U)
#define SIUL2_DIRER0_EIRE25_WIDTH                (1U)
#define SIUL2_DIRER0_EIRE25(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_DIRER0_EIRE25_SHIFT)) & SIUL2_DIRER0_EIRE25_MASK)
#define SIUL2_DIRER0_EIRE26_MASK                 (0x4000000U)
#define SIUL2_DIRER0_EIRE26_SHIFT                (26U)
#define SIUL2_DIRER0_EIRE26_WIDTH                (1U)
#define SIUL2_DIRER0_EIRE26(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_DIRER0_EIRE26_SHIFT)) & SIUL2_DIRER0_EIRE26_MASK)
#define SIUL2_DIRER0_EIRE27_MASK                 (0x8000000U)
#define SIUL2_DIRER0_EIRE27_SHIFT                (27U)
#define SIUL2_DIRER0_EIRE27_WIDTH                (1U)
#define SIUL2_DIRER0_EIRE27(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_DIRER0_EIRE27_SHIFT)) & SIUL2_DIRER0_EIRE27_MASK)
#define SIUL2_DIRER0_EIRE28_MASK                 (0x10000000U)
#define SIUL2_DIRER0_EIRE28_SHIFT                (28U)
#define SIUL2_DIRER0_EIRE28_WIDTH                (1U)
#define SIUL2_DIRER0_EIRE28(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_DIRER0_EIRE28_SHIFT)) & SIUL2_DIRER0_EIRE28_MASK)
#define SIUL2_DIRER0_EIRE29_MASK                 (0x20000000U)
#define SIUL2_DIRER0_EIRE29_SHIFT                (29U)
#define SIUL2_DIRER0_EIRE29_WIDTH                (1U)
#define SIUL2_DIRER0_EIRE29(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_DIRER0_EIRE29_SHIFT)) & SIUL2_DIRER0_EIRE29_MASK)
#define SIUL2_DIRER0_EIRE30_MASK                 (0x40000000U)
#define SIUL2_DIRER0_EIRE30_SHIFT                (30U)
#define SIUL2_DIRER0_EIRE30_WIDTH                (1U)
#define SIUL2_DIRER0_EIRE30(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_DIRER0_EIRE30_SHIFT)) & SIUL2_DIRER0_EIRE30_MASK)
#define SIUL2_DIRER0_EIRE31_MASK                 (0x80000000U)
#define SIUL2_DIRER0_EIRE31_SHIFT                (31U)
#define SIUL2_DIRER0_EIRE31_WIDTH                (1U)
#define SIUL2_DIRER0_EIRE31(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_DIRER0_EIRE31_SHIFT)) & SIUL2_DIRER0_EIRE31_MASK)
/*! @} */

/*! @name DIRSR0 - SIUL2 DMA/Interrupt Request Select Register0 */
/*! @{ */
#define SIUL2_DIRSR0_DIRSR0_MASK                 (0x1U)
#define SIUL2_DIRSR0_DIRSR0_SHIFT                (0U)
#define SIUL2_DIRSR0_DIRSR0_WIDTH                (1U)
#define SIUL2_DIRSR0_DIRSR0(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_DIRSR0_DIRSR0_SHIFT)) & SIUL2_DIRSR0_DIRSR0_MASK)
#define SIUL2_DIRSR0_DIRSR1_MASK                 (0x2U)
#define SIUL2_DIRSR0_DIRSR1_SHIFT                (1U)
#define SIUL2_DIRSR0_DIRSR1_WIDTH                (1U)
#define SIUL2_DIRSR0_DIRSR1(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_DIRSR0_DIRSR1_SHIFT)) & SIUL2_DIRSR0_DIRSR1_MASK)
#define SIUL2_DIRSR0_DIRSR2_MASK                 (0x4U)
#define SIUL2_DIRSR0_DIRSR2_SHIFT                (2U)
#define SIUL2_DIRSR0_DIRSR2_WIDTH                (1U)
#define SIUL2_DIRSR0_DIRSR2(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_DIRSR0_DIRSR2_SHIFT)) & SIUL2_DIRSR0_DIRSR2_MASK)
#define SIUL2_DIRSR0_DIRSR3_MASK                 (0x8U)
#define SIUL2_DIRSR0_DIRSR3_SHIFT                (3U)
#define SIUL2_DIRSR0_DIRSR3_WIDTH                (1U)
#define SIUL2_DIRSR0_DIRSR3(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_DIRSR0_DIRSR3_SHIFT)) & SIUL2_DIRSR0_DIRSR3_MASK)
#define SIUL2_DIRSR0_DIRSR4_MASK                 (0x10U)
#define SIUL2_DIRSR0_DIRSR4_SHIFT                (4U)
#define SIUL2_DIRSR0_DIRSR4_WIDTH                (1U)
#define SIUL2_DIRSR0_DIRSR4(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_DIRSR0_DIRSR4_SHIFT)) & SIUL2_DIRSR0_DIRSR4_MASK)
#define SIUL2_DIRSR0_DIRSR5_MASK                 (0x20U)
#define SIUL2_DIRSR0_DIRSR5_SHIFT                (5U)
#define SIUL2_DIRSR0_DIRSR5_WIDTH                (1U)
#define SIUL2_DIRSR0_DIRSR5(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_DIRSR0_DIRSR5_SHIFT)) & SIUL2_DIRSR0_DIRSR5_MASK)
#define SIUL2_DIRSR0_DIRSR6_MASK                 (0x40U)
#define SIUL2_DIRSR0_DIRSR6_SHIFT                (6U)
#define SIUL2_DIRSR0_DIRSR6_WIDTH                (1U)
#define SIUL2_DIRSR0_DIRSR6(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_DIRSR0_DIRSR6_SHIFT)) & SIUL2_DIRSR0_DIRSR6_MASK)
#define SIUL2_DIRSR0_DIRSR7_MASK                 (0x80U)
#define SIUL2_DIRSR0_DIRSR7_SHIFT                (7U)
#define SIUL2_DIRSR0_DIRSR7_WIDTH                (1U)
#define SIUL2_DIRSR0_DIRSR7(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_DIRSR0_DIRSR7_SHIFT)) & SIUL2_DIRSR0_DIRSR7_MASK)
#define SIUL2_DIRSR0_DIRSR8_MASK                 (0x100U)
#define SIUL2_DIRSR0_DIRSR8_SHIFT                (8U)
#define SIUL2_DIRSR0_DIRSR8_WIDTH                (1U)
#define SIUL2_DIRSR0_DIRSR8(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_DIRSR0_DIRSR8_SHIFT)) & SIUL2_DIRSR0_DIRSR8_MASK)
#define SIUL2_DIRSR0_DIRSR9_MASK                 (0x200U)
#define SIUL2_DIRSR0_DIRSR9_SHIFT                (9U)
#define SIUL2_DIRSR0_DIRSR9_WIDTH                (1U)
#define SIUL2_DIRSR0_DIRSR9(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_DIRSR0_DIRSR9_SHIFT)) & SIUL2_DIRSR0_DIRSR9_MASK)
#define SIUL2_DIRSR0_DIRSR10_MASK                (0x400U)
#define SIUL2_DIRSR0_DIRSR10_SHIFT               (10U)
#define SIUL2_DIRSR0_DIRSR10_WIDTH               (1U)
#define SIUL2_DIRSR0_DIRSR10(x)                  (((uint32_t)(((uint32_t)(x)) << SIUL2_DIRSR0_DIRSR10_SHIFT)) & SIUL2_DIRSR0_DIRSR10_MASK)
#define SIUL2_DIRSR0_DIRSR11_MASK                (0x800U)
#define SIUL2_DIRSR0_DIRSR11_SHIFT               (11U)
#define SIUL2_DIRSR0_DIRSR11_WIDTH               (1U)
#define SIUL2_DIRSR0_DIRSR11(x)                  (((uint32_t)(((uint32_t)(x)) << SIUL2_DIRSR0_DIRSR11_SHIFT)) & SIUL2_DIRSR0_DIRSR11_MASK)
#define SIUL2_DIRSR0_DIRSR12_MASK                (0x1000U)
#define SIUL2_DIRSR0_DIRSR12_SHIFT               (12U)
#define SIUL2_DIRSR0_DIRSR12_WIDTH               (1U)
#define SIUL2_DIRSR0_DIRSR12(x)                  (((uint32_t)(((uint32_t)(x)) << SIUL2_DIRSR0_DIRSR12_SHIFT)) & SIUL2_DIRSR0_DIRSR12_MASK)
#define SIUL2_DIRSR0_DIRSR13_MASK                (0x2000U)
#define SIUL2_DIRSR0_DIRSR13_SHIFT               (13U)
#define SIUL2_DIRSR0_DIRSR13_WIDTH               (1U)
#define SIUL2_DIRSR0_DIRSR13(x)                  (((uint32_t)(((uint32_t)(x)) << SIUL2_DIRSR0_DIRSR13_SHIFT)) & SIUL2_DIRSR0_DIRSR13_MASK)
#define SIUL2_DIRSR0_DIRSR14_MASK                (0x4000U)
#define SIUL2_DIRSR0_DIRSR14_SHIFT               (14U)
#define SIUL2_DIRSR0_DIRSR14_WIDTH               (1U)
#define SIUL2_DIRSR0_DIRSR14(x)                  (((uint32_t)(((uint32_t)(x)) << SIUL2_DIRSR0_DIRSR14_SHIFT)) & SIUL2_DIRSR0_DIRSR14_MASK)
#define SIUL2_DIRSR0_DIRSR15_MASK                (0x8000U)
#define SIUL2_DIRSR0_DIRSR15_SHIFT               (15U)
#define SIUL2_DIRSR0_DIRSR15_WIDTH               (1U)
#define SIUL2_DIRSR0_DIRSR15(x)                  (((uint32_t)(((uint32_t)(x)) << SIUL2_DIRSR0_DIRSR15_SHIFT)) & SIUL2_DIRSR0_DIRSR15_MASK)
#define SIUL2_DIRSR0_DIRSR16_MASK                (0x10000U)
#define SIUL2_DIRSR0_DIRSR16_SHIFT               (16U)
#define SIUL2_DIRSR0_DIRSR16_WIDTH               (1U)
#define SIUL2_DIRSR0_DIRSR16(x)                  (((uint32_t)(((uint32_t)(x)) << SIUL2_DIRSR0_DIRSR16_SHIFT)) & SIUL2_DIRSR0_DIRSR16_MASK)
#define SIUL2_DIRSR0_DIRSR17_MASK                (0x20000U)
#define SIUL2_DIRSR0_DIRSR17_SHIFT               (17U)
#define SIUL2_DIRSR0_DIRSR17_WIDTH               (1U)
#define SIUL2_DIRSR0_DIRSR17(x)                  (((uint32_t)(((uint32_t)(x)) << SIUL2_DIRSR0_DIRSR17_SHIFT)) & SIUL2_DIRSR0_DIRSR17_MASK)
#define SIUL2_DIRSR0_DIRSR18_MASK                (0x40000U)
#define SIUL2_DIRSR0_DIRSR18_SHIFT               (18U)
#define SIUL2_DIRSR0_DIRSR18_WIDTH               (1U)
#define SIUL2_DIRSR0_DIRSR18(x)                  (((uint32_t)(((uint32_t)(x)) << SIUL2_DIRSR0_DIRSR18_SHIFT)) & SIUL2_DIRSR0_DIRSR18_MASK)
#define SIUL2_DIRSR0_DIRSR19_MASK                (0x80000U)
#define SIUL2_DIRSR0_DIRSR19_SHIFT               (19U)
#define SIUL2_DIRSR0_DIRSR19_WIDTH               (1U)
#define SIUL2_DIRSR0_DIRSR19(x)                  (((uint32_t)(((uint32_t)(x)) << SIUL2_DIRSR0_DIRSR19_SHIFT)) & SIUL2_DIRSR0_DIRSR19_MASK)
#define SIUL2_DIRSR0_DIRSR20_MASK                (0x100000U)
#define SIUL2_DIRSR0_DIRSR20_SHIFT               (20U)
#define SIUL2_DIRSR0_DIRSR20_WIDTH               (1U)
#define SIUL2_DIRSR0_DIRSR20(x)                  (((uint32_t)(((uint32_t)(x)) << SIUL2_DIRSR0_DIRSR20_SHIFT)) & SIUL2_DIRSR0_DIRSR20_MASK)
#define SIUL2_DIRSR0_DIRSR21_MASK                (0x200000U)
#define SIUL2_DIRSR0_DIRSR21_SHIFT               (21U)
#define SIUL2_DIRSR0_DIRSR21_WIDTH               (1U)
#define SIUL2_DIRSR0_DIRSR21(x)                  (((uint32_t)(((uint32_t)(x)) << SIUL2_DIRSR0_DIRSR21_SHIFT)) & SIUL2_DIRSR0_DIRSR21_MASK)
#define SIUL2_DIRSR0_DIRSR22_MASK                (0x400000U)
#define SIUL2_DIRSR0_DIRSR22_SHIFT               (22U)
#define SIUL2_DIRSR0_DIRSR22_WIDTH               (1U)
#define SIUL2_DIRSR0_DIRSR22(x)                  (((uint32_t)(((uint32_t)(x)) << SIUL2_DIRSR0_DIRSR22_SHIFT)) & SIUL2_DIRSR0_DIRSR22_MASK)
#define SIUL2_DIRSR0_DIRSR23_MASK                (0x800000U)
#define SIUL2_DIRSR0_DIRSR23_SHIFT               (23U)
#define SIUL2_DIRSR0_DIRSR23_WIDTH               (1U)
#define SIUL2_DIRSR0_DIRSR23(x)                  (((uint32_t)(((uint32_t)(x)) << SIUL2_DIRSR0_DIRSR23_SHIFT)) & SIUL2_DIRSR0_DIRSR23_MASK)
#define SIUL2_DIRSR0_DIRSR24_MASK                (0x1000000U)
#define SIUL2_DIRSR0_DIRSR24_SHIFT               (24U)
#define SIUL2_DIRSR0_DIRSR24_WIDTH               (1U)
#define SIUL2_DIRSR0_DIRSR24(x)                  (((uint32_t)(((uint32_t)(x)) << SIUL2_DIRSR0_DIRSR24_SHIFT)) & SIUL2_DIRSR0_DIRSR24_MASK)
#define SIUL2_DIRSR0_DIRSR25_MASK                (0x2000000U)
#define SIUL2_DIRSR0_DIRSR25_SHIFT               (25U)
#define SIUL2_DIRSR0_DIRSR25_WIDTH               (1U)
#define SIUL2_DIRSR0_DIRSR25(x)                  (((uint32_t)(((uint32_t)(x)) << SIUL2_DIRSR0_DIRSR25_SHIFT)) & SIUL2_DIRSR0_DIRSR25_MASK)
#define SIUL2_DIRSR0_DIRSR26_MASK                (0x4000000U)
#define SIUL2_DIRSR0_DIRSR26_SHIFT               (26U)
#define SIUL2_DIRSR0_DIRSR26_WIDTH               (1U)
#define SIUL2_DIRSR0_DIRSR26(x)                  (((uint32_t)(((uint32_t)(x)) << SIUL2_DIRSR0_DIRSR26_SHIFT)) & SIUL2_DIRSR0_DIRSR26_MASK)
#define SIUL2_DIRSR0_DIRSR27_MASK                (0x8000000U)
#define SIUL2_DIRSR0_DIRSR27_SHIFT               (27U)
#define SIUL2_DIRSR0_DIRSR27_WIDTH               (1U)
#define SIUL2_DIRSR0_DIRSR27(x)                  (((uint32_t)(((uint32_t)(x)) << SIUL2_DIRSR0_DIRSR27_SHIFT)) & SIUL2_DIRSR0_DIRSR27_MASK)
#define SIUL2_DIRSR0_DIRSR28_MASK                (0x10000000U)
#define SIUL2_DIRSR0_DIRSR28_SHIFT               (28U)
#define SIUL2_DIRSR0_DIRSR28_WIDTH               (1U)
#define SIUL2_DIRSR0_DIRSR28(x)                  (((uint32_t)(((uint32_t)(x)) << SIUL2_DIRSR0_DIRSR28_SHIFT)) & SIUL2_DIRSR0_DIRSR28_MASK)
#define SIUL2_DIRSR0_DIRSR29_MASK                (0x20000000U)
#define SIUL2_DIRSR0_DIRSR29_SHIFT               (29U)
#define SIUL2_DIRSR0_DIRSR29_WIDTH               (1U)
#define SIUL2_DIRSR0_DIRSR29(x)                  (((uint32_t)(((uint32_t)(x)) << SIUL2_DIRSR0_DIRSR29_SHIFT)) & SIUL2_DIRSR0_DIRSR29_MASK)
#define SIUL2_DIRSR0_DIRSR30_MASK                (0x40000000U)
#define SIUL2_DIRSR0_DIRSR30_SHIFT               (30U)
#define SIUL2_DIRSR0_DIRSR30_WIDTH               (1U)
#define SIUL2_DIRSR0_DIRSR30(x)                  (((uint32_t)(((uint32_t)(x)) << SIUL2_DIRSR0_DIRSR30_SHIFT)) & SIUL2_DIRSR0_DIRSR30_MASK)
#define SIUL2_DIRSR0_DIRSR31_MASK                (0x80000000U)
#define SIUL2_DIRSR0_DIRSR31_SHIFT               (31U)
#define SIUL2_DIRSR0_DIRSR31_WIDTH               (1U)
#define SIUL2_DIRSR0_DIRSR31(x)                  (((uint32_t)(((uint32_t)(x)) << SIUL2_DIRSR0_DIRSR31_SHIFT)) & SIUL2_DIRSR0_DIRSR31_MASK)
/*! @} */

/*! @name IREER0 - SIUL2 Interrupt Rising-Edge Event Enable Register 0 */
/*! @{ */
#define SIUL2_IREER0_IREE0_MASK                  (0x1U)
#define SIUL2_IREER0_IREE0_SHIFT                 (0U)
#define SIUL2_IREER0_IREE0_WIDTH                 (1U)
#define SIUL2_IREER0_IREE0(x)                    (((uint32_t)(((uint32_t)(x)) << SIUL2_IREER0_IREE0_SHIFT)) & SIUL2_IREER0_IREE0_MASK)
#define SIUL2_IREER0_IREE1_MASK                  (0x2U)
#define SIUL2_IREER0_IREE1_SHIFT                 (1U)
#define SIUL2_IREER0_IREE1_WIDTH                 (1U)
#define SIUL2_IREER0_IREE1(x)                    (((uint32_t)(((uint32_t)(x)) << SIUL2_IREER0_IREE1_SHIFT)) & SIUL2_IREER0_IREE1_MASK)
#define SIUL2_IREER0_IREE2_MASK                  (0x4U)
#define SIUL2_IREER0_IREE2_SHIFT                 (2U)
#define SIUL2_IREER0_IREE2_WIDTH                 (1U)
#define SIUL2_IREER0_IREE2(x)                    (((uint32_t)(((uint32_t)(x)) << SIUL2_IREER0_IREE2_SHIFT)) & SIUL2_IREER0_IREE2_MASK)
#define SIUL2_IREER0_IREE3_MASK                  (0x8U)
#define SIUL2_IREER0_IREE3_SHIFT                 (3U)
#define SIUL2_IREER0_IREE3_WIDTH                 (1U)
#define SIUL2_IREER0_IREE3(x)                    (((uint32_t)(((uint32_t)(x)) << SIUL2_IREER0_IREE3_SHIFT)) & SIUL2_IREER0_IREE3_MASK)
#define SIUL2_IREER0_IREE4_MASK                  (0x10U)
#define SIUL2_IREER0_IREE4_SHIFT                 (4U)
#define SIUL2_IREER0_IREE4_WIDTH                 (1U)
#define SIUL2_IREER0_IREE4(x)                    (((uint32_t)(((uint32_t)(x)) << SIUL2_IREER0_IREE4_SHIFT)) & SIUL2_IREER0_IREE4_MASK)
#define SIUL2_IREER0_IREE5_MASK                  (0x20U)
#define SIUL2_IREER0_IREE5_SHIFT                 (5U)
#define SIUL2_IREER0_IREE5_WIDTH                 (1U)
#define SIUL2_IREER0_IREE5(x)                    (((uint32_t)(((uint32_t)(x)) << SIUL2_IREER0_IREE5_SHIFT)) & SIUL2_IREER0_IREE5_MASK)
#define SIUL2_IREER0_IREE6_MASK                  (0x40U)
#define SIUL2_IREER0_IREE6_SHIFT                 (6U)
#define SIUL2_IREER0_IREE6_WIDTH                 (1U)
#define SIUL2_IREER0_IREE6(x)                    (((uint32_t)(((uint32_t)(x)) << SIUL2_IREER0_IREE6_SHIFT)) & SIUL2_IREER0_IREE6_MASK)
#define SIUL2_IREER0_IREE7_MASK                  (0x80U)
#define SIUL2_IREER0_IREE7_SHIFT                 (7U)
#define SIUL2_IREER0_IREE7_WIDTH                 (1U)
#define SIUL2_IREER0_IREE7(x)                    (((uint32_t)(((uint32_t)(x)) << SIUL2_IREER0_IREE7_SHIFT)) & SIUL2_IREER0_IREE7_MASK)
#define SIUL2_IREER0_IREE8_MASK                  (0x100U)
#define SIUL2_IREER0_IREE8_SHIFT                 (8U)
#define SIUL2_IREER0_IREE8_WIDTH                 (1U)
#define SIUL2_IREER0_IREE8(x)                    (((uint32_t)(((uint32_t)(x)) << SIUL2_IREER0_IREE8_SHIFT)) & SIUL2_IREER0_IREE8_MASK)
#define SIUL2_IREER0_IREE9_MASK                  (0x200U)
#define SIUL2_IREER0_IREE9_SHIFT                 (9U)
#define SIUL2_IREER0_IREE9_WIDTH                 (1U)
#define SIUL2_IREER0_IREE9(x)                    (((uint32_t)(((uint32_t)(x)) << SIUL2_IREER0_IREE9_SHIFT)) & SIUL2_IREER0_IREE9_MASK)
#define SIUL2_IREER0_IREE10_MASK                 (0x400U)
#define SIUL2_IREER0_IREE10_SHIFT                (10U)
#define SIUL2_IREER0_IREE10_WIDTH                (1U)
#define SIUL2_IREER0_IREE10(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_IREER0_IREE10_SHIFT)) & SIUL2_IREER0_IREE10_MASK)
#define SIUL2_IREER0_IREE11_MASK                 (0x800U)
#define SIUL2_IREER0_IREE11_SHIFT                (11U)
#define SIUL2_IREER0_IREE11_WIDTH                (1U)
#define SIUL2_IREER0_IREE11(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_IREER0_IREE11_SHIFT)) & SIUL2_IREER0_IREE11_MASK)
#define SIUL2_IREER0_IREE12_MASK                 (0x1000U)
#define SIUL2_IREER0_IREE12_SHIFT                (12U)
#define SIUL2_IREER0_IREE12_WIDTH                (1U)
#define SIUL2_IREER0_IREE12(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_IREER0_IREE12_SHIFT)) & SIUL2_IREER0_IREE12_MASK)
#define SIUL2_IREER0_IREE13_MASK                 (0x2000U)
#define SIUL2_IREER0_IREE13_SHIFT                (13U)
#define SIUL2_IREER0_IREE13_WIDTH                (1U)
#define SIUL2_IREER0_IREE13(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_IREER0_IREE13_SHIFT)) & SIUL2_IREER0_IREE13_MASK)
#define SIUL2_IREER0_IREE14_MASK                 (0x4000U)
#define SIUL2_IREER0_IREE14_SHIFT                (14U)
#define SIUL2_IREER0_IREE14_WIDTH                (1U)
#define SIUL2_IREER0_IREE14(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_IREER0_IREE14_SHIFT)) & SIUL2_IREER0_IREE14_MASK)
#define SIUL2_IREER0_IREE15_MASK                 (0x8000U)
#define SIUL2_IREER0_IREE15_SHIFT                (15U)
#define SIUL2_IREER0_IREE15_WIDTH                (1U)
#define SIUL2_IREER0_IREE15(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_IREER0_IREE15_SHIFT)) & SIUL2_IREER0_IREE15_MASK)
#define SIUL2_IREER0_IREE16_MASK                 (0x10000U)
#define SIUL2_IREER0_IREE16_SHIFT                (16U)
#define SIUL2_IREER0_IREE16_WIDTH                (1U)
#define SIUL2_IREER0_IREE16(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_IREER0_IREE16_SHIFT)) & SIUL2_IREER0_IREE16_MASK)
#define SIUL2_IREER0_IREE17_MASK                 (0x20000U)
#define SIUL2_IREER0_IREE17_SHIFT                (17U)
#define SIUL2_IREER0_IREE17_WIDTH                (1U)
#define SIUL2_IREER0_IREE17(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_IREER0_IREE17_SHIFT)) & SIUL2_IREER0_IREE17_MASK)
#define SIUL2_IREER0_IREE18_MASK                 (0x40000U)
#define SIUL2_IREER0_IREE18_SHIFT                (18U)
#define SIUL2_IREER0_IREE18_WIDTH                (1U)
#define SIUL2_IREER0_IREE18(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_IREER0_IREE18_SHIFT)) & SIUL2_IREER0_IREE18_MASK)
#define SIUL2_IREER0_IREE19_MASK                 (0x80000U)
#define SIUL2_IREER0_IREE19_SHIFT                (19U)
#define SIUL2_IREER0_IREE19_WIDTH                (1U)
#define SIUL2_IREER0_IREE19(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_IREER0_IREE19_SHIFT)) & SIUL2_IREER0_IREE19_MASK)
#define SIUL2_IREER0_IREE20_MASK                 (0x100000U)
#define SIUL2_IREER0_IREE20_SHIFT                (20U)
#define SIUL2_IREER0_IREE20_WIDTH                (1U)
#define SIUL2_IREER0_IREE20(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_IREER0_IREE20_SHIFT)) & SIUL2_IREER0_IREE20_MASK)
#define SIUL2_IREER0_IREE21_MASK                 (0x200000U)
#define SIUL2_IREER0_IREE21_SHIFT                (21U)
#define SIUL2_IREER0_IREE21_WIDTH                (1U)
#define SIUL2_IREER0_IREE21(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_IREER0_IREE21_SHIFT)) & SIUL2_IREER0_IREE21_MASK)
#define SIUL2_IREER0_IREE22_MASK                 (0x400000U)
#define SIUL2_IREER0_IREE22_SHIFT                (22U)
#define SIUL2_IREER0_IREE22_WIDTH                (1U)
#define SIUL2_IREER0_IREE22(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_IREER0_IREE22_SHIFT)) & SIUL2_IREER0_IREE22_MASK)
#define SIUL2_IREER0_IREE23_MASK                 (0x800000U)
#define SIUL2_IREER0_IREE23_SHIFT                (23U)
#define SIUL2_IREER0_IREE23_WIDTH                (1U)
#define SIUL2_IREER0_IREE23(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_IREER0_IREE23_SHIFT)) & SIUL2_IREER0_IREE23_MASK)
#define SIUL2_IREER0_IREE24_MASK                 (0x1000000U)
#define SIUL2_IREER0_IREE24_SHIFT                (24U)
#define SIUL2_IREER0_IREE24_WIDTH                (1U)
#define SIUL2_IREER0_IREE24(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_IREER0_IREE24_SHIFT)) & SIUL2_IREER0_IREE24_MASK)
#define SIUL2_IREER0_IREE25_MASK                 (0x2000000U)
#define SIUL2_IREER0_IREE25_SHIFT                (25U)
#define SIUL2_IREER0_IREE25_WIDTH                (1U)
#define SIUL2_IREER0_IREE25(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_IREER0_IREE25_SHIFT)) & SIUL2_IREER0_IREE25_MASK)
#define SIUL2_IREER0_IREE26_MASK                 (0x4000000U)
#define SIUL2_IREER0_IREE26_SHIFT                (26U)
#define SIUL2_IREER0_IREE26_WIDTH                (1U)
#define SIUL2_IREER0_IREE26(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_IREER0_IREE26_SHIFT)) & SIUL2_IREER0_IREE26_MASK)
#define SIUL2_IREER0_IREE27_MASK                 (0x8000000U)
#define SIUL2_IREER0_IREE27_SHIFT                (27U)
#define SIUL2_IREER0_IREE27_WIDTH                (1U)
#define SIUL2_IREER0_IREE27(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_IREER0_IREE27_SHIFT)) & SIUL2_IREER0_IREE27_MASK)
#define SIUL2_IREER0_IREE28_MASK                 (0x10000000U)
#define SIUL2_IREER0_IREE28_SHIFT                (28U)
#define SIUL2_IREER0_IREE28_WIDTH                (1U)
#define SIUL2_IREER0_IREE28(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_IREER0_IREE28_SHIFT)) & SIUL2_IREER0_IREE28_MASK)
#define SIUL2_IREER0_IREE29_MASK                 (0x20000000U)
#define SIUL2_IREER0_IREE29_SHIFT                (29U)
#define SIUL2_IREER0_IREE29_WIDTH                (1U)
#define SIUL2_IREER0_IREE29(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_IREER0_IREE29_SHIFT)) & SIUL2_IREER0_IREE29_MASK)
#define SIUL2_IREER0_IREE30_MASK                 (0x40000000U)
#define SIUL2_IREER0_IREE30_SHIFT                (30U)
#define SIUL2_IREER0_IREE30_WIDTH                (1U)
#define SIUL2_IREER0_IREE30(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_IREER0_IREE30_SHIFT)) & SIUL2_IREER0_IREE30_MASK)
#define SIUL2_IREER0_IREE31_MASK                 (0x80000000U)
#define SIUL2_IREER0_IREE31_SHIFT                (31U)
#define SIUL2_IREER0_IREE31_WIDTH                (1U)
#define SIUL2_IREER0_IREE31(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_IREER0_IREE31_SHIFT)) & SIUL2_IREER0_IREE31_MASK)
/*! @} */

/*! @name IFEER0 - SIUL2 Interrupt Falling-Edge Event Enable Register 0 */
/*! @{ */
#define SIUL2_IFEER0_IFEE0_MASK                  (0x1U)
#define SIUL2_IFEER0_IFEE0_SHIFT                 (0U)
#define SIUL2_IFEER0_IFEE0_WIDTH                 (1U)
#define SIUL2_IFEER0_IFEE0(x)                    (((uint32_t)(((uint32_t)(x)) << SIUL2_IFEER0_IFEE0_SHIFT)) & SIUL2_IFEER0_IFEE0_MASK)
#define SIUL2_IFEER0_IFEE1_MASK                  (0x2U)
#define SIUL2_IFEER0_IFEE1_SHIFT                 (1U)
#define SIUL2_IFEER0_IFEE1_WIDTH                 (1U)
#define SIUL2_IFEER0_IFEE1(x)                    (((uint32_t)(((uint32_t)(x)) << SIUL2_IFEER0_IFEE1_SHIFT)) & SIUL2_IFEER0_IFEE1_MASK)
#define SIUL2_IFEER0_IFEE2_MASK                  (0x4U)
#define SIUL2_IFEER0_IFEE2_SHIFT                 (2U)
#define SIUL2_IFEER0_IFEE2_WIDTH                 (1U)
#define SIUL2_IFEER0_IFEE2(x)                    (((uint32_t)(((uint32_t)(x)) << SIUL2_IFEER0_IFEE2_SHIFT)) & SIUL2_IFEER0_IFEE2_MASK)
#define SIUL2_IFEER0_IFEE3_MASK                  (0x8U)
#define SIUL2_IFEER0_IFEE3_SHIFT                 (3U)
#define SIUL2_IFEER0_IFEE3_WIDTH                 (1U)
#define SIUL2_IFEER0_IFEE3(x)                    (((uint32_t)(((uint32_t)(x)) << SIUL2_IFEER0_IFEE3_SHIFT)) & SIUL2_IFEER0_IFEE3_MASK)
#define SIUL2_IFEER0_IFEE4_MASK                  (0x10U)
#define SIUL2_IFEER0_IFEE4_SHIFT                 (4U)
#define SIUL2_IFEER0_IFEE4_WIDTH                 (1U)
#define SIUL2_IFEER0_IFEE4(x)                    (((uint32_t)(((uint32_t)(x)) << SIUL2_IFEER0_IFEE4_SHIFT)) & SIUL2_IFEER0_IFEE4_MASK)
#define SIUL2_IFEER0_IFEE5_MASK                  (0x20U)
#define SIUL2_IFEER0_IFEE5_SHIFT                 (5U)
#define SIUL2_IFEER0_IFEE5_WIDTH                 (1U)
#define SIUL2_IFEER0_IFEE5(x)                    (((uint32_t)(((uint32_t)(x)) << SIUL2_IFEER0_IFEE5_SHIFT)) & SIUL2_IFEER0_IFEE5_MASK)
#define SIUL2_IFEER0_IFEE6_MASK                  (0x40U)
#define SIUL2_IFEER0_IFEE6_SHIFT                 (6U)
#define SIUL2_IFEER0_IFEE6_WIDTH                 (1U)
#define SIUL2_IFEER0_IFEE6(x)                    (((uint32_t)(((uint32_t)(x)) << SIUL2_IFEER0_IFEE6_SHIFT)) & SIUL2_IFEER0_IFEE6_MASK)
#define SIUL2_IFEER0_IFEE7_MASK                  (0x80U)
#define SIUL2_IFEER0_IFEE7_SHIFT                 (7U)
#define SIUL2_IFEER0_IFEE7_WIDTH                 (1U)
#define SIUL2_IFEER0_IFEE7(x)                    (((uint32_t)(((uint32_t)(x)) << SIUL2_IFEER0_IFEE7_SHIFT)) & SIUL2_IFEER0_IFEE7_MASK)
#define SIUL2_IFEER0_IFEE8_MASK                  (0x100U)
#define SIUL2_IFEER0_IFEE8_SHIFT                 (8U)
#define SIUL2_IFEER0_IFEE8_WIDTH                 (1U)
#define SIUL2_IFEER0_IFEE8(x)                    (((uint32_t)(((uint32_t)(x)) << SIUL2_IFEER0_IFEE8_SHIFT)) & SIUL2_IFEER0_IFEE8_MASK)
#define SIUL2_IFEER0_IFEE9_MASK                  (0x200U)
#define SIUL2_IFEER0_IFEE9_SHIFT                 (9U)
#define SIUL2_IFEER0_IFEE9_WIDTH                 (1U)
#define SIUL2_IFEER0_IFEE9(x)                    (((uint32_t)(((uint32_t)(x)) << SIUL2_IFEER0_IFEE9_SHIFT)) & SIUL2_IFEER0_IFEE9_MASK)
#define SIUL2_IFEER0_IFEE10_MASK                 (0x400U)
#define SIUL2_IFEER0_IFEE10_SHIFT                (10U)
#define SIUL2_IFEER0_IFEE10_WIDTH                (1U)
#define SIUL2_IFEER0_IFEE10(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_IFEER0_IFEE10_SHIFT)) & SIUL2_IFEER0_IFEE10_MASK)
#define SIUL2_IFEER0_IFEE11_MASK                 (0x800U)
#define SIUL2_IFEER0_IFEE11_SHIFT                (11U)
#define SIUL2_IFEER0_IFEE11_WIDTH                (1U)
#define SIUL2_IFEER0_IFEE11(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_IFEER0_IFEE11_SHIFT)) & SIUL2_IFEER0_IFEE11_MASK)
#define SIUL2_IFEER0_IFEE12_MASK                 (0x1000U)
#define SIUL2_IFEER0_IFEE12_SHIFT                (12U)
#define SIUL2_IFEER0_IFEE12_WIDTH                (1U)
#define SIUL2_IFEER0_IFEE12(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_IFEER0_IFEE12_SHIFT)) & SIUL2_IFEER0_IFEE12_MASK)
#define SIUL2_IFEER0_IFEE13_MASK                 (0x2000U)
#define SIUL2_IFEER0_IFEE13_SHIFT                (13U)
#define SIUL2_IFEER0_IFEE13_WIDTH                (1U)
#define SIUL2_IFEER0_IFEE13(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_IFEER0_IFEE13_SHIFT)) & SIUL2_IFEER0_IFEE13_MASK)
#define SIUL2_IFEER0_IFEE14_MASK                 (0x4000U)
#define SIUL2_IFEER0_IFEE14_SHIFT                (14U)
#define SIUL2_IFEER0_IFEE14_WIDTH                (1U)
#define SIUL2_IFEER0_IFEE14(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_IFEER0_IFEE14_SHIFT)) & SIUL2_IFEER0_IFEE14_MASK)
#define SIUL2_IFEER0_IFEE15_MASK                 (0x8000U)
#define SIUL2_IFEER0_IFEE15_SHIFT                (15U)
#define SIUL2_IFEER0_IFEE15_WIDTH                (1U)
#define SIUL2_IFEER0_IFEE15(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_IFEER0_IFEE15_SHIFT)) & SIUL2_IFEER0_IFEE15_MASK)
#define SIUL2_IFEER0_IFEE16_MASK                 (0x10000U)
#define SIUL2_IFEER0_IFEE16_SHIFT                (16U)
#define SIUL2_IFEER0_IFEE16_WIDTH                (1U)
#define SIUL2_IFEER0_IFEE16(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_IFEER0_IFEE16_SHIFT)) & SIUL2_IFEER0_IFEE16_MASK)
#define SIUL2_IFEER0_IFEE17_MASK                 (0x20000U)
#define SIUL2_IFEER0_IFEE17_SHIFT                (17U)
#define SIUL2_IFEER0_IFEE17_WIDTH                (1U)
#define SIUL2_IFEER0_IFEE17(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_IFEER0_IFEE17_SHIFT)) & SIUL2_IFEER0_IFEE17_MASK)
#define SIUL2_IFEER0_IFEE18_MASK                 (0x40000U)
#define SIUL2_IFEER0_IFEE18_SHIFT                (18U)
#define SIUL2_IFEER0_IFEE18_WIDTH                (1U)
#define SIUL2_IFEER0_IFEE18(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_IFEER0_IFEE18_SHIFT)) & SIUL2_IFEER0_IFEE18_MASK)
#define SIUL2_IFEER0_IFEE19_MASK                 (0x80000U)
#define SIUL2_IFEER0_IFEE19_SHIFT                (19U)
#define SIUL2_IFEER0_IFEE19_WIDTH                (1U)
#define SIUL2_IFEER0_IFEE19(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_IFEER0_IFEE19_SHIFT)) & SIUL2_IFEER0_IFEE19_MASK)
#define SIUL2_IFEER0_IFEE20_MASK                 (0x100000U)
#define SIUL2_IFEER0_IFEE20_SHIFT                (20U)
#define SIUL2_IFEER0_IFEE20_WIDTH                (1U)
#define SIUL2_IFEER0_IFEE20(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_IFEER0_IFEE20_SHIFT)) & SIUL2_IFEER0_IFEE20_MASK)
#define SIUL2_IFEER0_IFEE21_MASK                 (0x200000U)
#define SIUL2_IFEER0_IFEE21_SHIFT                (21U)
#define SIUL2_IFEER0_IFEE21_WIDTH                (1U)
#define SIUL2_IFEER0_IFEE21(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_IFEER0_IFEE21_SHIFT)) & SIUL2_IFEER0_IFEE21_MASK)
#define SIUL2_IFEER0_IFEE22_MASK                 (0x400000U)
#define SIUL2_IFEER0_IFEE22_SHIFT                (22U)
#define SIUL2_IFEER0_IFEE22_WIDTH                (1U)
#define SIUL2_IFEER0_IFEE22(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_IFEER0_IFEE22_SHIFT)) & SIUL2_IFEER0_IFEE22_MASK)
#define SIUL2_IFEER0_IFEE23_MASK                 (0x800000U)
#define SIUL2_IFEER0_IFEE23_SHIFT                (23U)
#define SIUL2_IFEER0_IFEE23_WIDTH                (1U)
#define SIUL2_IFEER0_IFEE23(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_IFEER0_IFEE23_SHIFT)) & SIUL2_IFEER0_IFEE23_MASK)
#define SIUL2_IFEER0_IFEE24_MASK                 (0x1000000U)
#define SIUL2_IFEER0_IFEE24_SHIFT                (24U)
#define SIUL2_IFEER0_IFEE24_WIDTH                (1U)
#define SIUL2_IFEER0_IFEE24(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_IFEER0_IFEE24_SHIFT)) & SIUL2_IFEER0_IFEE24_MASK)
#define SIUL2_IFEER0_IFEE25_MASK                 (0x2000000U)
#define SIUL2_IFEER0_IFEE25_SHIFT                (25U)
#define SIUL2_IFEER0_IFEE25_WIDTH                (1U)
#define SIUL2_IFEER0_IFEE25(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_IFEER0_IFEE25_SHIFT)) & SIUL2_IFEER0_IFEE25_MASK)
#define SIUL2_IFEER0_IFEE26_MASK                 (0x4000000U)
#define SIUL2_IFEER0_IFEE26_SHIFT                (26U)
#define SIUL2_IFEER0_IFEE26_WIDTH                (1U)
#define SIUL2_IFEER0_IFEE26(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_IFEER0_IFEE26_SHIFT)) & SIUL2_IFEER0_IFEE26_MASK)
#define SIUL2_IFEER0_IFEE27_MASK                 (0x8000000U)
#define SIUL2_IFEER0_IFEE27_SHIFT                (27U)
#define SIUL2_IFEER0_IFEE27_WIDTH                (1U)
#define SIUL2_IFEER0_IFEE27(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_IFEER0_IFEE27_SHIFT)) & SIUL2_IFEER0_IFEE27_MASK)
#define SIUL2_IFEER0_IFEE28_MASK                 (0x10000000U)
#define SIUL2_IFEER0_IFEE28_SHIFT                (28U)
#define SIUL2_IFEER0_IFEE28_WIDTH                (1U)
#define SIUL2_IFEER0_IFEE28(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_IFEER0_IFEE28_SHIFT)) & SIUL2_IFEER0_IFEE28_MASK)
#define SIUL2_IFEER0_IFEE29_MASK                 (0x20000000U)
#define SIUL2_IFEER0_IFEE29_SHIFT                (29U)
#define SIUL2_IFEER0_IFEE29_WIDTH                (1U)
#define SIUL2_IFEER0_IFEE29(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_IFEER0_IFEE29_SHIFT)) & SIUL2_IFEER0_IFEE29_MASK)
#define SIUL2_IFEER0_IFEE30_MASK                 (0x40000000U)
#define SIUL2_IFEER0_IFEE30_SHIFT                (30U)
#define SIUL2_IFEER0_IFEE30_WIDTH                (1U)
#define SIUL2_IFEER0_IFEE30(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_IFEER0_IFEE30_SHIFT)) & SIUL2_IFEER0_IFEE30_MASK)
#define SIUL2_IFEER0_IFEE31_MASK                 (0x80000000U)
#define SIUL2_IFEER0_IFEE31_SHIFT                (31U)
#define SIUL2_IFEER0_IFEE31_WIDTH                (1U)
#define SIUL2_IFEER0_IFEE31(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_IFEER0_IFEE31_SHIFT)) & SIUL2_IFEER0_IFEE31_MASK)
/*! @} */

/*! @name IFER0 - SIUL2 Interrupt Filter Enable Register 0 */
/*! @{ */
#define SIUL2_IFER0_IFE0_MASK                    (0x1U)
#define SIUL2_IFER0_IFE0_SHIFT                   (0U)
#define SIUL2_IFER0_IFE0_WIDTH                   (1U)
#define SIUL2_IFER0_IFE0(x)                      (((uint32_t)(((uint32_t)(x)) << SIUL2_IFER0_IFE0_SHIFT)) & SIUL2_IFER0_IFE0_MASK)
#define SIUL2_IFER0_IFE1_MASK                    (0x2U)
#define SIUL2_IFER0_IFE1_SHIFT                   (1U)
#define SIUL2_IFER0_IFE1_WIDTH                   (1U)
#define SIUL2_IFER0_IFE1(x)                      (((uint32_t)(((uint32_t)(x)) << SIUL2_IFER0_IFE1_SHIFT)) & SIUL2_IFER0_IFE1_MASK)
#define SIUL2_IFER0_IFE2_MASK                    (0x4U)
#define SIUL2_IFER0_IFE2_SHIFT                   (2U)
#define SIUL2_IFER0_IFE2_WIDTH                   (1U)
#define SIUL2_IFER0_IFE2(x)                      (((uint32_t)(((uint32_t)(x)) << SIUL2_IFER0_IFE2_SHIFT)) & SIUL2_IFER0_IFE2_MASK)
#define SIUL2_IFER0_IFE3_MASK                    (0x8U)
#define SIUL2_IFER0_IFE3_SHIFT                   (3U)
#define SIUL2_IFER0_IFE3_WIDTH                   (1U)
#define SIUL2_IFER0_IFE3(x)                      (((uint32_t)(((uint32_t)(x)) << SIUL2_IFER0_IFE3_SHIFT)) & SIUL2_IFER0_IFE3_MASK)
#define SIUL2_IFER0_IFE4_MASK                    (0x10U)
#define SIUL2_IFER0_IFE4_SHIFT                   (4U)
#define SIUL2_IFER0_IFE4_WIDTH                   (1U)
#define SIUL2_IFER0_IFE4(x)                      (((uint32_t)(((uint32_t)(x)) << SIUL2_IFER0_IFE4_SHIFT)) & SIUL2_IFER0_IFE4_MASK)
#define SIUL2_IFER0_IFE5_MASK                    (0x20U)
#define SIUL2_IFER0_IFE5_SHIFT                   (5U)
#define SIUL2_IFER0_IFE5_WIDTH                   (1U)
#define SIUL2_IFER0_IFE5(x)                      (((uint32_t)(((uint32_t)(x)) << SIUL2_IFER0_IFE5_SHIFT)) & SIUL2_IFER0_IFE5_MASK)
#define SIUL2_IFER0_IFE6_MASK                    (0x40U)
#define SIUL2_IFER0_IFE6_SHIFT                   (6U)
#define SIUL2_IFER0_IFE6_WIDTH                   (1U)
#define SIUL2_IFER0_IFE6(x)                      (((uint32_t)(((uint32_t)(x)) << SIUL2_IFER0_IFE6_SHIFT)) & SIUL2_IFER0_IFE6_MASK)
#define SIUL2_IFER0_IFE7_MASK                    (0x80U)
#define SIUL2_IFER0_IFE7_SHIFT                   (7U)
#define SIUL2_IFER0_IFE7_WIDTH                   (1U)
#define SIUL2_IFER0_IFE7(x)                      (((uint32_t)(((uint32_t)(x)) << SIUL2_IFER0_IFE7_SHIFT)) & SIUL2_IFER0_IFE7_MASK)
#define SIUL2_IFER0_IFE8_MASK                    (0x100U)
#define SIUL2_IFER0_IFE8_SHIFT                   (8U)
#define SIUL2_IFER0_IFE8_WIDTH                   (1U)
#define SIUL2_IFER0_IFE8(x)                      (((uint32_t)(((uint32_t)(x)) << SIUL2_IFER0_IFE8_SHIFT)) & SIUL2_IFER0_IFE8_MASK)
#define SIUL2_IFER0_IFE9_MASK                    (0x200U)
#define SIUL2_IFER0_IFE9_SHIFT                   (9U)
#define SIUL2_IFER0_IFE9_WIDTH                   (1U)
#define SIUL2_IFER0_IFE9(x)                      (((uint32_t)(((uint32_t)(x)) << SIUL2_IFER0_IFE9_SHIFT)) & SIUL2_IFER0_IFE9_MASK)
#define SIUL2_IFER0_IFE10_MASK                   (0x400U)
#define SIUL2_IFER0_IFE10_SHIFT                  (10U)
#define SIUL2_IFER0_IFE10_WIDTH                  (1U)
#define SIUL2_IFER0_IFE10(x)                     (((uint32_t)(((uint32_t)(x)) << SIUL2_IFER0_IFE10_SHIFT)) & SIUL2_IFER0_IFE10_MASK)
#define SIUL2_IFER0_IFE11_MASK                   (0x800U)
#define SIUL2_IFER0_IFE11_SHIFT                  (11U)
#define SIUL2_IFER0_IFE11_WIDTH                  (1U)
#define SIUL2_IFER0_IFE11(x)                     (((uint32_t)(((uint32_t)(x)) << SIUL2_IFER0_IFE11_SHIFT)) & SIUL2_IFER0_IFE11_MASK)
#define SIUL2_IFER0_IFE12_MASK                   (0x1000U)
#define SIUL2_IFER0_IFE12_SHIFT                  (12U)
#define SIUL2_IFER0_IFE12_WIDTH                  (1U)
#define SIUL2_IFER0_IFE12(x)                     (((uint32_t)(((uint32_t)(x)) << SIUL2_IFER0_IFE12_SHIFT)) & SIUL2_IFER0_IFE12_MASK)
#define SIUL2_IFER0_IFE13_MASK                   (0x2000U)
#define SIUL2_IFER0_IFE13_SHIFT                  (13U)
#define SIUL2_IFER0_IFE13_WIDTH                  (1U)
#define SIUL2_IFER0_IFE13(x)                     (((uint32_t)(((uint32_t)(x)) << SIUL2_IFER0_IFE13_SHIFT)) & SIUL2_IFER0_IFE13_MASK)
#define SIUL2_IFER0_IFE14_MASK                   (0x4000U)
#define SIUL2_IFER0_IFE14_SHIFT                  (14U)
#define SIUL2_IFER0_IFE14_WIDTH                  (1U)
#define SIUL2_IFER0_IFE14(x)                     (((uint32_t)(((uint32_t)(x)) << SIUL2_IFER0_IFE14_SHIFT)) & SIUL2_IFER0_IFE14_MASK)
#define SIUL2_IFER0_IFE15_MASK                   (0x8000U)
#define SIUL2_IFER0_IFE15_SHIFT                  (15U)
#define SIUL2_IFER0_IFE15_WIDTH                  (1U)
#define SIUL2_IFER0_IFE15(x)                     (((uint32_t)(((uint32_t)(x)) << SIUL2_IFER0_IFE15_SHIFT)) & SIUL2_IFER0_IFE15_MASK)
#define SIUL2_IFER0_IFE16_MASK                   (0x10000U)
#define SIUL2_IFER0_IFE16_SHIFT                  (16U)
#define SIUL2_IFER0_IFE16_WIDTH                  (1U)
#define SIUL2_IFER0_IFE16(x)                     (((uint32_t)(((uint32_t)(x)) << SIUL2_IFER0_IFE16_SHIFT)) & SIUL2_IFER0_IFE16_MASK)
#define SIUL2_IFER0_IFE17_MASK                   (0x20000U)
#define SIUL2_IFER0_IFE17_SHIFT                  (17U)
#define SIUL2_IFER0_IFE17_WIDTH                  (1U)
#define SIUL2_IFER0_IFE17(x)                     (((uint32_t)(((uint32_t)(x)) << SIUL2_IFER0_IFE17_SHIFT)) & SIUL2_IFER0_IFE17_MASK)
#define SIUL2_IFER0_IFE18_MASK                   (0x40000U)
#define SIUL2_IFER0_IFE18_SHIFT                  (18U)
#define SIUL2_IFER0_IFE18_WIDTH                  (1U)
#define SIUL2_IFER0_IFE18(x)                     (((uint32_t)(((uint32_t)(x)) << SIUL2_IFER0_IFE18_SHIFT)) & SIUL2_IFER0_IFE18_MASK)
#define SIUL2_IFER0_IFE19_MASK                   (0x80000U)
#define SIUL2_IFER0_IFE19_SHIFT                  (19U)
#define SIUL2_IFER0_IFE19_WIDTH                  (1U)
#define SIUL2_IFER0_IFE19(x)                     (((uint32_t)(((uint32_t)(x)) << SIUL2_IFER0_IFE19_SHIFT)) & SIUL2_IFER0_IFE19_MASK)
#define SIUL2_IFER0_IFE20_MASK                   (0x100000U)
#define SIUL2_IFER0_IFE20_SHIFT                  (20U)
#define SIUL2_IFER0_IFE20_WIDTH                  (1U)
#define SIUL2_IFER0_IFE20(x)                     (((uint32_t)(((uint32_t)(x)) << SIUL2_IFER0_IFE20_SHIFT)) & SIUL2_IFER0_IFE20_MASK)
#define SIUL2_IFER0_IFE21_MASK                   (0x200000U)
#define SIUL2_IFER0_IFE21_SHIFT                  (21U)
#define SIUL2_IFER0_IFE21_WIDTH                  (1U)
#define SIUL2_IFER0_IFE21(x)                     (((uint32_t)(((uint32_t)(x)) << SIUL2_IFER0_IFE21_SHIFT)) & SIUL2_IFER0_IFE21_MASK)
#define SIUL2_IFER0_IFE22_MASK                   (0x400000U)
#define SIUL2_IFER0_IFE22_SHIFT                  (22U)
#define SIUL2_IFER0_IFE22_WIDTH                  (1U)
#define SIUL2_IFER0_IFE22(x)                     (((uint32_t)(((uint32_t)(x)) << SIUL2_IFER0_IFE22_SHIFT)) & SIUL2_IFER0_IFE22_MASK)
#define SIUL2_IFER0_IFE23_MASK                   (0x800000U)
#define SIUL2_IFER0_IFE23_SHIFT                  (23U)
#define SIUL2_IFER0_IFE23_WIDTH                  (1U)
#define SIUL2_IFER0_IFE23(x)                     (((uint32_t)(((uint32_t)(x)) << SIUL2_IFER0_IFE23_SHIFT)) & SIUL2_IFER0_IFE23_MASK)
#define SIUL2_IFER0_IFE24_MASK                   (0x1000000U)
#define SIUL2_IFER0_IFE24_SHIFT                  (24U)
#define SIUL2_IFER0_IFE24_WIDTH                  (1U)
#define SIUL2_IFER0_IFE24(x)                     (((uint32_t)(((uint32_t)(x)) << SIUL2_IFER0_IFE24_SHIFT)) & SIUL2_IFER0_IFE24_MASK)
#define SIUL2_IFER0_IFE25_MASK                   (0x2000000U)
#define SIUL2_IFER0_IFE25_SHIFT                  (25U)
#define SIUL2_IFER0_IFE25_WIDTH                  (1U)
#define SIUL2_IFER0_IFE25(x)                     (((uint32_t)(((uint32_t)(x)) << SIUL2_IFER0_IFE25_SHIFT)) & SIUL2_IFER0_IFE25_MASK)
#define SIUL2_IFER0_IFE26_MASK                   (0x4000000U)
#define SIUL2_IFER0_IFE26_SHIFT                  (26U)
#define SIUL2_IFER0_IFE26_WIDTH                  (1U)
#define SIUL2_IFER0_IFE26(x)                     (((uint32_t)(((uint32_t)(x)) << SIUL2_IFER0_IFE26_SHIFT)) & SIUL2_IFER0_IFE26_MASK)
#define SIUL2_IFER0_IFE27_MASK                   (0x8000000U)
#define SIUL2_IFER0_IFE27_SHIFT                  (27U)
#define SIUL2_IFER0_IFE27_WIDTH                  (1U)
#define SIUL2_IFER0_IFE27(x)                     (((uint32_t)(((uint32_t)(x)) << SIUL2_IFER0_IFE27_SHIFT)) & SIUL2_IFER0_IFE27_MASK)
#define SIUL2_IFER0_IFE28_MASK                   (0x10000000U)
#define SIUL2_IFER0_IFE28_SHIFT                  (28U)
#define SIUL2_IFER0_IFE28_WIDTH                  (1U)
#define SIUL2_IFER0_IFE28(x)                     (((uint32_t)(((uint32_t)(x)) << SIUL2_IFER0_IFE28_SHIFT)) & SIUL2_IFER0_IFE28_MASK)
#define SIUL2_IFER0_IFE29_MASK                   (0x20000000U)
#define SIUL2_IFER0_IFE29_SHIFT                  (29U)
#define SIUL2_IFER0_IFE29_WIDTH                  (1U)
#define SIUL2_IFER0_IFE29(x)                     (((uint32_t)(((uint32_t)(x)) << SIUL2_IFER0_IFE29_SHIFT)) & SIUL2_IFER0_IFE29_MASK)
#define SIUL2_IFER0_IFE30_MASK                   (0x40000000U)
#define SIUL2_IFER0_IFE30_SHIFT                  (30U)
#define SIUL2_IFER0_IFE30_WIDTH                  (1U)
#define SIUL2_IFER0_IFE30(x)                     (((uint32_t)(((uint32_t)(x)) << SIUL2_IFER0_IFE30_SHIFT)) & SIUL2_IFER0_IFE30_MASK)
#define SIUL2_IFER0_IFE31_MASK                   (0x80000000U)
#define SIUL2_IFER0_IFE31_SHIFT                  (31U)
#define SIUL2_IFER0_IFE31_WIDTH                  (1U)
#define SIUL2_IFER0_IFE31(x)                     (((uint32_t)(((uint32_t)(x)) << SIUL2_IFER0_IFE31_SHIFT)) & SIUL2_IFER0_IFE31_MASK)
/*! @} */

/*! @name IFMCR - SIUL2 Interrupt Filter Maximum Counter Register */
/*! @{ */
#define SIUL2_IFMCR_MAXCNT_MASK                  (0xFU)
#define SIUL2_IFMCR_MAXCNT_SHIFT                 (0U)
#define SIUL2_IFMCR_MAXCNT_WIDTH                 (4U)
#define SIUL2_IFMCR_MAXCNT(x)                    (((uint32_t)(((uint32_t)(x)) << SIUL2_IFMCR_MAXCNT_SHIFT)) & SIUL2_IFMCR_MAXCNT_MASK)
/*! @} */

/*! @name IFCPR - SIUL2 Interrupt Filter Clock Prescaler Register */
/*! @{ */
#define SIUL2_IFCPR_IFCP_MASK                    (0xFU)
#define SIUL2_IFCPR_IFCP_SHIFT                   (0U)
#define SIUL2_IFCPR_IFCP_WIDTH                   (4U)
#define SIUL2_IFCPR_IFCP(x)                      (((uint32_t)(((uint32_t)(x)) << SIUL2_IFCPR_IFCP_SHIFT)) & SIUL2_IFCPR_IFCP_MASK)
/*! @} */

/*! @name MSCR - SIUL2 Multiplexed Signal Configuration Register */
/*! @{ */
#define SIUL2_MSCR_SSS_MASK                      (0x7U)
#define SIUL2_MSCR_SSS_SHIFT                     (0U)
#define SIUL2_MSCR_SSS_WIDTH                     (3U)
#define SIUL2_MSCR_SSS(x)                        (((uint32_t)(((uint32_t)(x)) << SIUL2_MSCR_SSS_SHIFT)) & SIUL2_MSCR_SSS_MASK)
#define SIUL2_MSCR_SMC_MASK                      (0x20U)
#define SIUL2_MSCR_SMC_SHIFT                     (5U)
#define SIUL2_MSCR_SMC_WIDTH                     (1U)
#define SIUL2_MSCR_SMC(x)                        (((uint32_t)(((uint32_t)(x)) << SIUL2_MSCR_SMC_SHIFT)) & SIUL2_MSCR_SMC_MASK)
#define SIUL2_MSCR_RCVR_MASK                     (0x400U)
#define SIUL2_MSCR_RCVR_SHIFT                    (10U)
#define SIUL2_MSCR_RCVR_WIDTH                    (1U)
#define SIUL2_MSCR_RCVR(x)                       (((uint32_t)(((uint32_t)(x)) << SIUL2_MSCR_RCVR_SHIFT)) & SIUL2_MSCR_RCVR_MASK)
#define SIUL2_MSCR_PUS_MASK                      (0x1000U)
#define SIUL2_MSCR_PUS_SHIFT                     (12U)
#define SIUL2_MSCR_PUS_WIDTH                     (1U)
#define SIUL2_MSCR_PUS(x)                        (((uint32_t)(((uint32_t)(x)) << SIUL2_MSCR_PUS_SHIFT)) & SIUL2_MSCR_PUS_MASK)
#define SIUL2_MSCR_PUE_MASK                      (0x2000U)
#define SIUL2_MSCR_PUE_SHIFT                     (13U)
#define SIUL2_MSCR_PUE_WIDTH                     (1U)
#define SIUL2_MSCR_PUE(x)                        (((uint32_t)(((uint32_t)(x)) << SIUL2_MSCR_PUE_SHIFT)) & SIUL2_MSCR_PUE_MASK)
#define SIUL2_MSCR_SRE_MASK                      (0x1C000U)
#define SIUL2_MSCR_SRE_SHIFT                     (14U)
#define SIUL2_MSCR_SRE_WIDTH                     (3U)
#define SIUL2_MSCR_SRE(x)                        (((uint32_t)(((uint32_t)(x)) << SIUL2_MSCR_SRE_SHIFT)) & SIUL2_MSCR_SRE_MASK)
#define SIUL2_MSCR_INV_MASK                      (0x20000U)
#define SIUL2_MSCR_INV_SHIFT                     (17U)
#define SIUL2_MSCR_INV_WIDTH                     (1U)
#define SIUL2_MSCR_INV(x)                        (((uint32_t)(((uint32_t)(x)) << SIUL2_MSCR_INV_SHIFT)) & SIUL2_MSCR_INV_MASK)
#define SIUL2_MSCR_IBE_MASK                      (0x80000U)
#define SIUL2_MSCR_IBE_SHIFT                     (19U)
#define SIUL2_MSCR_IBE_WIDTH                     (1U)
#define SIUL2_MSCR_IBE(x)                        (((uint32_t)(((uint32_t)(x)) << SIUL2_MSCR_IBE_SHIFT)) & SIUL2_MSCR_IBE_MASK)
#define SIUL2_MSCR_ODE_MASK                      (0x100000U)
#define SIUL2_MSCR_ODE_SHIFT                     (20U)
#define SIUL2_MSCR_ODE_WIDTH                     (1U)
#define SIUL2_MSCR_ODE(x)                        (((uint32_t)(((uint32_t)(x)) << SIUL2_MSCR_ODE_SHIFT)) & SIUL2_MSCR_ODE_MASK)
#define SIUL2_MSCR_OBE_MASK                      (0x200000U)
#define SIUL2_MSCR_OBE_SHIFT                     (21U)
#define SIUL2_MSCR_OBE_WIDTH                     (1U)
#define SIUL2_MSCR_OBE(x)                        (((uint32_t)(((uint32_t)(x)) << SIUL2_MSCR_OBE_SHIFT)) & SIUL2_MSCR_OBE_MASK)
/*! @} */

/*! @name IMCR - SIUL2 Input Multiplexed Signal Configuration Register */
/*! @{ */
#define SIUL2_IMCR_SSS_MASK                      (0x7U)
#define SIUL2_IMCR_SSS_SHIFT                     (0U)
#define SIUL2_IMCR_SSS_WIDTH                     (3U)
#define SIUL2_IMCR_SSS(x)                        (((uint32_t)(((uint32_t)(x)) << SIUL2_IMCR_SSS_SHIFT)) & SIUL2_IMCR_SSS_MASK)
/*! @} */

/*! @name GPDO - SIUL2 GPIO Pad Data Output Register */
/*! @{ */
#define SIUL2_GPDO_PDO_A_MASK                    (0x1U)
#define SIUL2_GPDO_PDO_A_SHIFT                   (0U)
#define SIUL2_GPDO_PDO_A_WIDTH                   (1U)
#define SIUL2_GPDO_PDO_A(x)                      (((uint8_t)(((uint8_t)(x)) << SIUL2_GPDO_PDO_A_SHIFT)) & SIUL2_GPDO_PDO_A_MASK)
/*! @} */

/*! @name GPDI - SIUL2 GPIO Pad Data Input Register */
/*! @{ */
#define SIUL2_GPDI_PDI_A_MASK                    (0x1U)
#define SIUL2_GPDI_PDI_A_SHIFT                   (0U)
#define SIUL2_GPDI_PDI_A_WIDTH                   (1U)
#define SIUL2_GPDI_PDI_A(x)                      (((uint8_t)(((uint8_t)(x)) << SIUL2_GPDI_PDI_A_SHIFT)) & SIUL2_GPDI_PDI_A_MASK)
/*! @} */

/*! @name PGPDO - SIUL2 Parallel GPIO Pad Data Out Register */
/*! @{ */
#define SIUL2_PGPDO_PPDO0_MASK                   (0x1U)
#define SIUL2_PGPDO_PPDO0_SHIFT                  (0U)
#define SIUL2_PGPDO_PPDO0_WIDTH                  (1U)
#define SIUL2_PGPDO_PPDO0(x)                     (((uint16_t)(((uint16_t)(x)) << SIUL2_PGPDO_PPDO0_SHIFT)) & SIUL2_PGPDO_PPDO0_MASK)
#define SIUL2_PGPDO_PPDO1_MASK                   (0x2U)
#define SIUL2_PGPDO_PPDO1_SHIFT                  (1U)
#define SIUL2_PGPDO_PPDO1_WIDTH                  (1U)
#define SIUL2_PGPDO_PPDO1(x)                     (((uint16_t)(((uint16_t)(x)) << SIUL2_PGPDO_PPDO1_SHIFT)) & SIUL2_PGPDO_PPDO1_MASK)
#define SIUL2_PGPDO_PPDO2_MASK                   (0x4U)
#define SIUL2_PGPDO_PPDO2_SHIFT                  (2U)
#define SIUL2_PGPDO_PPDO2_WIDTH                  (1U)
#define SIUL2_PGPDO_PPDO2(x)                     (((uint16_t)(((uint16_t)(x)) << SIUL2_PGPDO_PPDO2_SHIFT)) & SIUL2_PGPDO_PPDO2_MASK)
#define SIUL2_PGPDO_PPDO3_MASK                   (0x8U)
#define SIUL2_PGPDO_PPDO3_SHIFT                  (3U)
#define SIUL2_PGPDO_PPDO3_WIDTH                  (1U)
#define SIUL2_PGPDO_PPDO3(x)                     (((uint16_t)(((uint16_t)(x)) << SIUL2_PGPDO_PPDO3_SHIFT)) & SIUL2_PGPDO_PPDO3_MASK)
#define SIUL2_PGPDO_PPDO4_MASK                   (0x10U)
#define SIUL2_PGPDO_PPDO4_SHIFT                  (4U)
#define SIUL2_PGPDO_PPDO4_WIDTH                  (1U)
#define SIUL2_PGPDO_PPDO4(x)                     (((uint16_t)(((uint16_t)(x)) << SIUL2_PGPDO_PPDO4_SHIFT)) & SIUL2_PGPDO_PPDO4_MASK)
#define SIUL2_PGPDO_PPDO5_MASK                   (0x20U)
#define SIUL2_PGPDO_PPDO5_SHIFT                  (5U)
#define SIUL2_PGPDO_PPDO5_WIDTH                  (1U)
#define SIUL2_PGPDO_PPDO5(x)                     (((uint16_t)(((uint16_t)(x)) << SIUL2_PGPDO_PPDO5_SHIFT)) & SIUL2_PGPDO_PPDO5_MASK)
#define SIUL2_PGPDO_PPDO6_MASK                   (0x40U)
#define SIUL2_PGPDO_PPDO6_SHIFT                  (6U)
#define SIUL2_PGPDO_PPDO6_WIDTH                  (1U)
#define SIUL2_PGPDO_PPDO6(x)                     (((uint16_t)(((uint16_t)(x)) << SIUL2_PGPDO_PPDO6_SHIFT)) & SIUL2_PGPDO_PPDO6_MASK)
#define SIUL2_PGPDO_PPDO7_MASK                   (0x80U)
#define SIUL2_PGPDO_PPDO7_SHIFT                  (7U)
#define SIUL2_PGPDO_PPDO7_WIDTH                  (1U)
#define SIUL2_PGPDO_PPDO7(x)                     (((uint16_t)(((uint16_t)(x)) << SIUL2_PGPDO_PPDO7_SHIFT)) & SIUL2_PGPDO_PPDO7_MASK)
#define SIUL2_PGPDO_PPDO8_MASK                   (0x100U)
#define SIUL2_PGPDO_PPDO8_SHIFT                  (8U)
#define SIUL2_PGPDO_PPDO8_WIDTH                  (1U)
#define SIUL2_PGPDO_PPDO8(x)                     (((uint16_t)(((uint16_t)(x)) << SIUL2_PGPDO_PPDO8_SHIFT)) & SIUL2_PGPDO_PPDO8_MASK)
#define SIUL2_PGPDO_PPDO9_MASK                   (0x200U)
#define SIUL2_PGPDO_PPDO9_SHIFT                  (9U)
#define SIUL2_PGPDO_PPDO9_WIDTH                  (1U)
#define SIUL2_PGPDO_PPDO9(x)                     (((uint16_t)(((uint16_t)(x)) << SIUL2_PGPDO_PPDO9_SHIFT)) & SIUL2_PGPDO_PPDO9_MASK)
#define SIUL2_PGPDO_PPDO10_MASK                  (0x400U)
#define SIUL2_PGPDO_PPDO10_SHIFT                 (10U)
#define SIUL2_PGPDO_PPDO10_WIDTH                 (1U)
#define SIUL2_PGPDO_PPDO10(x)                    (((uint16_t)(((uint16_t)(x)) << SIUL2_PGPDO_PPDO10_SHIFT)) & SIUL2_PGPDO_PPDO10_MASK)
#define SIUL2_PGPDO_PPDO11_MASK                  (0x800U)
#define SIUL2_PGPDO_PPDO11_SHIFT                 (11U)
#define SIUL2_PGPDO_PPDO11_WIDTH                 (1U)
#define SIUL2_PGPDO_PPDO11(x)                    (((uint16_t)(((uint16_t)(x)) << SIUL2_PGPDO_PPDO11_SHIFT)) & SIUL2_PGPDO_PPDO11_MASK)
#define SIUL2_PGPDO_PPDO12_MASK                  (0x1000U)
#define SIUL2_PGPDO_PPDO12_SHIFT                 (12U)
#define SIUL2_PGPDO_PPDO12_WIDTH                 (1U)
#define SIUL2_PGPDO_PPDO12(x)                    (((uint16_t)(((uint16_t)(x)) << SIUL2_PGPDO_PPDO12_SHIFT)) & SIUL2_PGPDO_PPDO12_MASK)
#define SIUL2_PGPDO_PPDO13_MASK                  (0x2000U)
#define SIUL2_PGPDO_PPDO13_SHIFT                 (13U)
#define SIUL2_PGPDO_PPDO13_WIDTH                 (1U)
#define SIUL2_PGPDO_PPDO13(x)                    (((uint16_t)(((uint16_t)(x)) << SIUL2_PGPDO_PPDO13_SHIFT)) & SIUL2_PGPDO_PPDO13_MASK)
#define SIUL2_PGPDO_PPDO14_MASK                  (0x4000U)
#define SIUL2_PGPDO_PPDO14_SHIFT                 (14U)
#define SIUL2_PGPDO_PPDO14_WIDTH                 (1U)
#define SIUL2_PGPDO_PPDO14(x)                    (((uint16_t)(((uint16_t)(x)) << SIUL2_PGPDO_PPDO14_SHIFT)) & SIUL2_PGPDO_PPDO14_MASK)
#define SIUL2_PGPDO_PPDO15_MASK                  (0x8000U)
#define SIUL2_PGPDO_PPDO15_SHIFT                 (15U)
#define SIUL2_PGPDO_PPDO15_WIDTH                 (1U)
#define SIUL2_PGPDO_PPDO15(x)                    (((uint16_t)(((uint16_t)(x)) << SIUL2_PGPDO_PPDO15_SHIFT)) & SIUL2_PGPDO_PPDO15_MASK)
/*! @} */

/*! @name PGPDI - SIUL2 Parallel GPIO Pad Data In Register */
/*! @{ */
#define SIUL2_PGPDI_PPDI0_MASK                   (0x1U)
#define SIUL2_PGPDI_PPDI0_SHIFT                  (0U)
#define SIUL2_PGPDI_PPDI0_WIDTH                  (1U)
#define SIUL2_PGPDI_PPDI0(x)                     (((uint16_t)(((uint16_t)(x)) << SIUL2_PGPDI_PPDI0_SHIFT)) & SIUL2_PGPDI_PPDI0_MASK)
#define SIUL2_PGPDI_PPDI1_MASK                   (0x2U)
#define SIUL2_PGPDI_PPDI1_SHIFT                  (1U)
#define SIUL2_PGPDI_PPDI1_WIDTH                  (1U)
#define SIUL2_PGPDI_PPDI1(x)                     (((uint16_t)(((uint16_t)(x)) << SIUL2_PGPDI_PPDI1_SHIFT)) & SIUL2_PGPDI_PPDI1_MASK)
#define SIUL2_PGPDI_PPDI2_MASK                   (0x4U)
#define SIUL2_PGPDI_PPDI2_SHIFT                  (2U)
#define SIUL2_PGPDI_PPDI2_WIDTH                  (1U)
#define SIUL2_PGPDI_PPDI2(x)                     (((uint16_t)(((uint16_t)(x)) << SIUL2_PGPDI_PPDI2_SHIFT)) & SIUL2_PGPDI_PPDI2_MASK)
#define SIUL2_PGPDI_PPDI3_MASK                   (0x8U)
#define SIUL2_PGPDI_PPDI3_SHIFT                  (3U)
#define SIUL2_PGPDI_PPDI3_WIDTH                  (1U)
#define SIUL2_PGPDI_PPDI3(x)                     (((uint16_t)(((uint16_t)(x)) << SIUL2_PGPDI_PPDI3_SHIFT)) & SIUL2_PGPDI_PPDI3_MASK)
#define SIUL2_PGPDI_PPDI4_MASK                   (0x10U)
#define SIUL2_PGPDI_PPDI4_SHIFT                  (4U)
#define SIUL2_PGPDI_PPDI4_WIDTH                  (1U)
#define SIUL2_PGPDI_PPDI4(x)                     (((uint16_t)(((uint16_t)(x)) << SIUL2_PGPDI_PPDI4_SHIFT)) & SIUL2_PGPDI_PPDI4_MASK)
#define SIUL2_PGPDI_PPDI5_MASK                   (0x20U)
#define SIUL2_PGPDI_PPDI5_SHIFT                  (5U)
#define SIUL2_PGPDI_PPDI5_WIDTH                  (1U)
#define SIUL2_PGPDI_PPDI5(x)                     (((uint16_t)(((uint16_t)(x)) << SIUL2_PGPDI_PPDI5_SHIFT)) & SIUL2_PGPDI_PPDI5_MASK)
#define SIUL2_PGPDI_PPDI6_MASK                   (0x40U)
#define SIUL2_PGPDI_PPDI6_SHIFT                  (6U)
#define SIUL2_PGPDI_PPDI6_WIDTH                  (1U)
#define SIUL2_PGPDI_PPDI6(x)                     (((uint16_t)(((uint16_t)(x)) << SIUL2_PGPDI_PPDI6_SHIFT)) & SIUL2_PGPDI_PPDI6_MASK)
#define SIUL2_PGPDI_PPDI7_MASK                   (0x80U)
#define SIUL2_PGPDI_PPDI7_SHIFT                  (7U)
#define SIUL2_PGPDI_PPDI7_WIDTH                  (1U)
#define SIUL2_PGPDI_PPDI7(x)                     (((uint16_t)(((uint16_t)(x)) << SIUL2_PGPDI_PPDI7_SHIFT)) & SIUL2_PGPDI_PPDI7_MASK)
#define SIUL2_PGPDI_PPDI8_MASK                   (0x100U)
#define SIUL2_PGPDI_PPDI8_SHIFT                  (8U)
#define SIUL2_PGPDI_PPDI8_WIDTH                  (1U)
#define SIUL2_PGPDI_PPDI8(x)                     (((uint16_t)(((uint16_t)(x)) << SIUL2_PGPDI_PPDI8_SHIFT)) & SIUL2_PGPDI_PPDI8_MASK)
#define SIUL2_PGPDI_PPDI9_MASK                   (0x200U)
#define SIUL2_PGPDI_PPDI9_SHIFT                  (9U)
#define SIUL2_PGPDI_PPDI9_WIDTH                  (1U)
#define SIUL2_PGPDI_PPDI9(x)                     (((uint16_t)(((uint16_t)(x)) << SIUL2_PGPDI_PPDI9_SHIFT)) & SIUL2_PGPDI_PPDI9_MASK)
#define SIUL2_PGPDI_PPDI10_MASK                  (0x400U)
#define SIUL2_PGPDI_PPDI10_SHIFT                 (10U)
#define SIUL2_PGPDI_PPDI10_WIDTH                 (1U)
#define SIUL2_PGPDI_PPDI10(x)                    (((uint16_t)(((uint16_t)(x)) << SIUL2_PGPDI_PPDI10_SHIFT)) & SIUL2_PGPDI_PPDI10_MASK)
#define SIUL2_PGPDI_PPDI11_MASK                  (0x800U)
#define SIUL2_PGPDI_PPDI11_SHIFT                 (11U)
#define SIUL2_PGPDI_PPDI11_WIDTH                 (1U)
#define SIUL2_PGPDI_PPDI11(x)                    (((uint16_t)(((uint16_t)(x)) << SIUL2_PGPDI_PPDI11_SHIFT)) & SIUL2_PGPDI_PPDI11_MASK)
#define SIUL2_PGPDI_PPDI12_MASK                  (0x1000U)
#define SIUL2_PGPDI_PPDI12_SHIFT                 (12U)
#define SIUL2_PGPDI_PPDI12_WIDTH                 (1U)
#define SIUL2_PGPDI_PPDI12(x)                    (((uint16_t)(((uint16_t)(x)) << SIUL2_PGPDI_PPDI12_SHIFT)) & SIUL2_PGPDI_PPDI12_MASK)
#define SIUL2_PGPDI_PPDI13_MASK                  (0x2000U)
#define SIUL2_PGPDI_PPDI13_SHIFT                 (13U)
#define SIUL2_PGPDI_PPDI13_WIDTH                 (1U)
#define SIUL2_PGPDI_PPDI13(x)                    (((uint16_t)(((uint16_t)(x)) << SIUL2_PGPDI_PPDI13_SHIFT)) & SIUL2_PGPDI_PPDI13_MASK)
#define SIUL2_PGPDI_PPDI14_MASK                  (0x4000U)
#define SIUL2_PGPDI_PPDI14_SHIFT                 (14U)
#define SIUL2_PGPDI_PPDI14_WIDTH                 (1U)
#define SIUL2_PGPDI_PPDI14(x)                    (((uint16_t)(((uint16_t)(x)) << SIUL2_PGPDI_PPDI14_SHIFT)) & SIUL2_PGPDI_PPDI14_MASK)
#define SIUL2_PGPDI_PPDI15_MASK                  (0x8000U)
#define SIUL2_PGPDI_PPDI15_SHIFT                 (15U)
#define SIUL2_PGPDI_PPDI15_WIDTH                 (1U)
#define SIUL2_PGPDI_PPDI15(x)                    (((uint16_t)(((uint16_t)(x)) << SIUL2_PGPDI_PPDI15_SHIFT)) & SIUL2_PGPDI_PPDI15_MASK)
/*! @} */

/*! @name MPGPDO - SIUL2 Masked Parallel GPIO Pad Data Out Register */
/*! @{ */
#define SIUL2_MPGPDO_MPPDO0_MASK                 (0x1U)
#define SIUL2_MPGPDO_MPPDO0_SHIFT                (0U)
#define SIUL2_MPGPDO_MPPDO0_WIDTH                (1U)
#define SIUL2_MPGPDO_MPPDO0(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_MPGPDO_MPPDO0_SHIFT)) & SIUL2_MPGPDO_MPPDO0_MASK)
#define SIUL2_MPGPDO_MPPDO1_MASK                 (0x2U)
#define SIUL2_MPGPDO_MPPDO1_SHIFT                (1U)
#define SIUL2_MPGPDO_MPPDO1_WIDTH                (1U)
#define SIUL2_MPGPDO_MPPDO1(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_MPGPDO_MPPDO1_SHIFT)) & SIUL2_MPGPDO_MPPDO1_MASK)
#define SIUL2_MPGPDO_MPPDO2_MASK                 (0x4U)
#define SIUL2_MPGPDO_MPPDO2_SHIFT                (2U)
#define SIUL2_MPGPDO_MPPDO2_WIDTH                (1U)
#define SIUL2_MPGPDO_MPPDO2(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_MPGPDO_MPPDO2_SHIFT)) & SIUL2_MPGPDO_MPPDO2_MASK)
#define SIUL2_MPGPDO_MPPDO3_MASK                 (0x8U)
#define SIUL2_MPGPDO_MPPDO3_SHIFT                (3U)
#define SIUL2_MPGPDO_MPPDO3_WIDTH                (1U)
#define SIUL2_MPGPDO_MPPDO3(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_MPGPDO_MPPDO3_SHIFT)) & SIUL2_MPGPDO_MPPDO3_MASK)
#define SIUL2_MPGPDO_MPPDO4_MASK                 (0x10U)
#define SIUL2_MPGPDO_MPPDO4_SHIFT                (4U)
#define SIUL2_MPGPDO_MPPDO4_WIDTH                (1U)
#define SIUL2_MPGPDO_MPPDO4(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_MPGPDO_MPPDO4_SHIFT)) & SIUL2_MPGPDO_MPPDO4_MASK)
#define SIUL2_MPGPDO_MPPDO5_MASK                 (0x20U)
#define SIUL2_MPGPDO_MPPDO5_SHIFT                (5U)
#define SIUL2_MPGPDO_MPPDO5_WIDTH                (1U)
#define SIUL2_MPGPDO_MPPDO5(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_MPGPDO_MPPDO5_SHIFT)) & SIUL2_MPGPDO_MPPDO5_MASK)
#define SIUL2_MPGPDO_MPPDO6_MASK                 (0x40U)
#define SIUL2_MPGPDO_MPPDO6_SHIFT                (6U)
#define SIUL2_MPGPDO_MPPDO6_WIDTH                (1U)
#define SIUL2_MPGPDO_MPPDO6(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_MPGPDO_MPPDO6_SHIFT)) & SIUL2_MPGPDO_MPPDO6_MASK)
#define SIUL2_MPGPDO_MPPDO7_MASK                 (0x80U)
#define SIUL2_MPGPDO_MPPDO7_SHIFT                (7U)
#define SIUL2_MPGPDO_MPPDO7_WIDTH                (1U)
#define SIUL2_MPGPDO_MPPDO7(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_MPGPDO_MPPDO7_SHIFT)) & SIUL2_MPGPDO_MPPDO7_MASK)
#define SIUL2_MPGPDO_MPPDO8_MASK                 (0x100U)
#define SIUL2_MPGPDO_MPPDO8_SHIFT                (8U)
#define SIUL2_MPGPDO_MPPDO8_WIDTH                (1U)
#define SIUL2_MPGPDO_MPPDO8(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_MPGPDO_MPPDO8_SHIFT)) & SIUL2_MPGPDO_MPPDO8_MASK)
#define SIUL2_MPGPDO_MPPDO9_MASK                 (0x200U)
#define SIUL2_MPGPDO_MPPDO9_SHIFT                (9U)
#define SIUL2_MPGPDO_MPPDO9_WIDTH                (1U)
#define SIUL2_MPGPDO_MPPDO9(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_MPGPDO_MPPDO9_SHIFT)) & SIUL2_MPGPDO_MPPDO9_MASK)
#define SIUL2_MPGPDO_MPPDO10_MASK                (0x400U)
#define SIUL2_MPGPDO_MPPDO10_SHIFT               (10U)
#define SIUL2_MPGPDO_MPPDO10_WIDTH               (1U)
#define SIUL2_MPGPDO_MPPDO10(x)                  (((uint32_t)(((uint32_t)(x)) << SIUL2_MPGPDO_MPPDO10_SHIFT)) & SIUL2_MPGPDO_MPPDO10_MASK)
#define SIUL2_MPGPDO_MPPDO11_MASK                (0x800U)
#define SIUL2_MPGPDO_MPPDO11_SHIFT               (11U)
#define SIUL2_MPGPDO_MPPDO11_WIDTH               (1U)
#define SIUL2_MPGPDO_MPPDO11(x)                  (((uint32_t)(((uint32_t)(x)) << SIUL2_MPGPDO_MPPDO11_SHIFT)) & SIUL2_MPGPDO_MPPDO11_MASK)
#define SIUL2_MPGPDO_MPPDO12_MASK                (0x1000U)
#define SIUL2_MPGPDO_MPPDO12_SHIFT               (12U)
#define SIUL2_MPGPDO_MPPDO12_WIDTH               (1U)
#define SIUL2_MPGPDO_MPPDO12(x)                  (((uint32_t)(((uint32_t)(x)) << SIUL2_MPGPDO_MPPDO12_SHIFT)) & SIUL2_MPGPDO_MPPDO12_MASK)
#define SIUL2_MPGPDO_MPPDO13_MASK                (0x2000U)
#define SIUL2_MPGPDO_MPPDO13_SHIFT               (13U)
#define SIUL2_MPGPDO_MPPDO13_WIDTH               (1U)
#define SIUL2_MPGPDO_MPPDO13(x)                  (((uint32_t)(((uint32_t)(x)) << SIUL2_MPGPDO_MPPDO13_SHIFT)) & SIUL2_MPGPDO_MPPDO13_MASK)
#define SIUL2_MPGPDO_MPPDO14_MASK                (0x4000U)
#define SIUL2_MPGPDO_MPPDO14_SHIFT               (14U)
#define SIUL2_MPGPDO_MPPDO14_WIDTH               (1U)
#define SIUL2_MPGPDO_MPPDO14(x)                  (((uint32_t)(((uint32_t)(x)) << SIUL2_MPGPDO_MPPDO14_SHIFT)) & SIUL2_MPGPDO_MPPDO14_MASK)
#define SIUL2_MPGPDO_MPPDO15_MASK                (0x8000U)
#define SIUL2_MPGPDO_MPPDO15_SHIFT               (15U)
#define SIUL2_MPGPDO_MPPDO15_WIDTH               (1U)
#define SIUL2_MPGPDO_MPPDO15(x)                  (((uint32_t)(((uint32_t)(x)) << SIUL2_MPGPDO_MPPDO15_SHIFT)) & SIUL2_MPGPDO_MPPDO15_MASK)
#define SIUL2_MPGPDO_MASK0_MASK                  (0x10000U)
#define SIUL2_MPGPDO_MASK0_SHIFT                 (16U)
#define SIUL2_MPGPDO_MASK0_WIDTH                 (1U)
#define SIUL2_MPGPDO_MASK0(x)                    (((uint32_t)(((uint32_t)(x)) << SIUL2_MPGPDO_MASK0_SHIFT)) & SIUL2_MPGPDO_MASK0_MASK)
#define SIUL2_MPGPDO_MASK1_MASK                  (0x20000U)
#define SIUL2_MPGPDO_MASK1_SHIFT                 (17U)
#define SIUL2_MPGPDO_MASK1_WIDTH                 (1U)
#define SIUL2_MPGPDO_MASK1(x)                    (((uint32_t)(((uint32_t)(x)) << SIUL2_MPGPDO_MASK1_SHIFT)) & SIUL2_MPGPDO_MASK1_MASK)
#define SIUL2_MPGPDO_MASK2_MASK                  (0x40000U)
#define SIUL2_MPGPDO_MASK2_SHIFT                 (18U)
#define SIUL2_MPGPDO_MASK2_WIDTH                 (1U)
#define SIUL2_MPGPDO_MASK2(x)                    (((uint32_t)(((uint32_t)(x)) << SIUL2_MPGPDO_MASK2_SHIFT)) & SIUL2_MPGPDO_MASK2_MASK)
#define SIUL2_MPGPDO_MASK3_MASK                  (0x80000U)
#define SIUL2_MPGPDO_MASK3_SHIFT                 (19U)
#define SIUL2_MPGPDO_MASK3_WIDTH                 (1U)
#define SIUL2_MPGPDO_MASK3(x)                    (((uint32_t)(((uint32_t)(x)) << SIUL2_MPGPDO_MASK3_SHIFT)) & SIUL2_MPGPDO_MASK3_MASK)
#define SIUL2_MPGPDO_MASK4_MASK                  (0x100000U)
#define SIUL2_MPGPDO_MASK4_SHIFT                 (20U)
#define SIUL2_MPGPDO_MASK4_WIDTH                 (1U)
#define SIUL2_MPGPDO_MASK4(x)                    (((uint32_t)(((uint32_t)(x)) << SIUL2_MPGPDO_MASK4_SHIFT)) & SIUL2_MPGPDO_MASK4_MASK)
#define SIUL2_MPGPDO_MASK5_MASK                  (0x200000U)
#define SIUL2_MPGPDO_MASK5_SHIFT                 (21U)
#define SIUL2_MPGPDO_MASK5_WIDTH                 (1U)
#define SIUL2_MPGPDO_MASK5(x)                    (((uint32_t)(((uint32_t)(x)) << SIUL2_MPGPDO_MASK5_SHIFT)) & SIUL2_MPGPDO_MASK5_MASK)
#define SIUL2_MPGPDO_MASK6_MASK                  (0x400000U)
#define SIUL2_MPGPDO_MASK6_SHIFT                 (22U)
#define SIUL2_MPGPDO_MASK6_WIDTH                 (1U)
#define SIUL2_MPGPDO_MASK6(x)                    (((uint32_t)(((uint32_t)(x)) << SIUL2_MPGPDO_MASK6_SHIFT)) & SIUL2_MPGPDO_MASK6_MASK)
#define SIUL2_MPGPDO_MASK7_MASK                  (0x800000U)
#define SIUL2_MPGPDO_MASK7_SHIFT                 (23U)
#define SIUL2_MPGPDO_MASK7_WIDTH                 (1U)
#define SIUL2_MPGPDO_MASK7(x)                    (((uint32_t)(((uint32_t)(x)) << SIUL2_MPGPDO_MASK7_SHIFT)) & SIUL2_MPGPDO_MASK7_MASK)
#define SIUL2_MPGPDO_MASK8_MASK                  (0x1000000U)
#define SIUL2_MPGPDO_MASK8_SHIFT                 (24U)
#define SIUL2_MPGPDO_MASK8_WIDTH                 (1U)
#define SIUL2_MPGPDO_MASK8(x)                    (((uint32_t)(((uint32_t)(x)) << SIUL2_MPGPDO_MASK8_SHIFT)) & SIUL2_MPGPDO_MASK8_MASK)
#define SIUL2_MPGPDO_MASK9_MASK                  (0x2000000U)
#define SIUL2_MPGPDO_MASK9_SHIFT                 (25U)
#define SIUL2_MPGPDO_MASK9_WIDTH                 (1U)
#define SIUL2_MPGPDO_MASK9(x)                    (((uint32_t)(((uint32_t)(x)) << SIUL2_MPGPDO_MASK9_SHIFT)) & SIUL2_MPGPDO_MASK9_MASK)
#define SIUL2_MPGPDO_MASK10_MASK                 (0x4000000U)
#define SIUL2_MPGPDO_MASK10_SHIFT                (26U)
#define SIUL2_MPGPDO_MASK10_WIDTH                (1U)
#define SIUL2_MPGPDO_MASK10(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_MPGPDO_MASK10_SHIFT)) & SIUL2_MPGPDO_MASK10_MASK)
#define SIUL2_MPGPDO_MASK11_MASK                 (0x8000000U)
#define SIUL2_MPGPDO_MASK11_SHIFT                (27U)
#define SIUL2_MPGPDO_MASK11_WIDTH                (1U)
#define SIUL2_MPGPDO_MASK11(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_MPGPDO_MASK11_SHIFT)) & SIUL2_MPGPDO_MASK11_MASK)
#define SIUL2_MPGPDO_MASK12_MASK                 (0x10000000U)
#define SIUL2_MPGPDO_MASK12_SHIFT                (28U)
#define SIUL2_MPGPDO_MASK12_WIDTH                (1U)
#define SIUL2_MPGPDO_MASK12(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_MPGPDO_MASK12_SHIFT)) & SIUL2_MPGPDO_MASK12_MASK)
#define SIUL2_MPGPDO_MASK13_MASK                 (0x20000000U)
#define SIUL2_MPGPDO_MASK13_SHIFT                (29U)
#define SIUL2_MPGPDO_MASK13_WIDTH                (1U)
#define SIUL2_MPGPDO_MASK13(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_MPGPDO_MASK13_SHIFT)) & SIUL2_MPGPDO_MASK13_MASK)
#define SIUL2_MPGPDO_MASK14_MASK                 (0x40000000U)
#define SIUL2_MPGPDO_MASK14_SHIFT                (30U)
#define SIUL2_MPGPDO_MASK14_WIDTH                (1U)
#define SIUL2_MPGPDO_MASK14(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_MPGPDO_MASK14_SHIFT)) & SIUL2_MPGPDO_MASK14_MASK)
#define SIUL2_MPGPDO_MASK15_MASK                 (0x80000000U)
#define SIUL2_MPGPDO_MASK15_SHIFT                (31U)
#define SIUL2_MPGPDO_MASK15_WIDTH                (1U)
#define SIUL2_MPGPDO_MASK15(x)                   (((uint32_t)(((uint32_t)(x)) << SIUL2_MPGPDO_MASK15_SHIFT)) & SIUL2_MPGPDO_MASK15_MASK)
/*! @} */

/*!
 * @}
 */ /* end of group SIUL2_Register_Masks */


/*!
 * @}
 */ /* end of group SIUL2_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- SPI Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SPI_Peripheral_Access_Layer SPI Peripheral Access Layer
 * @{
 */

/** SPI - Size of Registers Arrays */
#define SPI_CTAR_COUNT                            6u
#define SPI_CTAR_SLAVE_COUNT                      1u
#define SPI_TXFR_COUNT                            5u
#define SPI_RXFR_COUNT                            5u
#define SPI_CTARE_COUNT                           6u

/** SPI - Register Layout Typedef */
typedef struct {
  __IO uint32_t MCR;                                 /**< Module Configuration Register, offset: 0x0 */
  uint8_t RESERVED_0[4];
  __IO uint32_t TCR;                                 /**< Transfer Count Register, offset: 0x8 */
  union {                                            /* offset: 0xC */
    __IO uint32_t CTAR[SPI_CTAR_COUNT];              /**< Clock and Transfer Attributes Register (In Master Mode), array offset: 0xC, array step: 0x4 */
    __IO uint32_t CTAR_SLAVE[SPI_CTAR_SLAVE_COUNT];  /**< Clock and Transfer Attributes Register (In Slave Mode), array offset: 0xC, array step: 0x4 */
  } MODE;
  uint8_t RESERVED_1[8];
  __IO uint32_t SR;                                  /**< Status Register, offset: 0x2C */
  __IO uint32_t RSER;                                /**< DMA/Interrupt Request Select and Enable Register, offset: 0x30 */
  union {                                            /* offset: 0x34 */
    struct {                                         /* offset: 0x34 */
      __IO uint16_t TX;                              /**< DSPI_1_PUSHR_FIFO_TX register...DSPI_2_PUSHR_FIFO_TX register., offset: 0x34 */
      __IO uint16_t CMD;                             /**< DSPI_1_PUSHR_FIFO_CMD register...DSPI_2_PUSHR_FIFO_CMD register., offset: 0x36 */
    } FIFO;
    __IO uint32_t PUSHR;                             /**< PUSH TX FIFO Register In Master Mode, offset: 0x34 */
    __IO uint32_t SLAVE;                             /**< PUSH TX FIFO Register In Slave Mode, offset: 0x34 */
  } PUSHR;
  __I  uint32_t POPR;                              /**< POP RX FIFO Register, offset: 0x38 */
  __I  uint32_t TXFR[SPI_TXFR_COUNT];              /**< Transmit FIFO Registers, array offset: 0x3C, array step: 0x4 */
  uint8_t RESERVED_2[44];
  __I  uint32_t RXFR[SPI_RXFR_COUNT];              /**< Receive FIFO Registers, array offset: 0x7C, array step: 0x4 */
  uint8_t RESERVED_3[140];
  __IO uint32_t CTARE[SPI_CTARE_COUNT];            /**< Clock and Transfer Attributes Register Extended, array offset: 0x11C, array step: 0x4 */
  uint8_t RESERVED_4[8];
  __I  uint32_t SREX;                              /**< Status Register Extended, offset: 0x13C */
} SPI_Type, *SPI_MemMapPtr;

/** Number of instances of the SPI module. */
#define SPI_INSTANCE_COUNT                       (6u)

/* SPI - Peripheral instance base addresses */
/** Peripheral SPI_0 base address */
#define SPI_0_BASE                               (0x401D4000u)
/** Peripheral SPI_0 base pointer */
#define SPI_0                                    ((SPI_Type *)SPI_0_BASE)
/** Peripheral SPI_1 base address */
#define SPI_1_BASE                               (0x401D8000u)
/** Peripheral SPI_1 base pointer */
#define SPI_1                                    ((SPI_Type *)SPI_1_BASE)
/** Peripheral SPI_2 base address */
#define SPI_2_BASE                               (0x401DC000u)
/** Peripheral SPI_2 base pointer */
#define SPI_2                                    ((SPI_Type *)SPI_2_BASE)
/** Peripheral SPI_3 base address */
#define SPI_3_BASE                               (0x402C8000u)
/** Peripheral SPI_3 base pointer */
#define SPI_3                                    ((SPI_Type *)SPI_3_BASE)
/** Peripheral SPI_4 base address */
#define SPI_4_BASE                               (0x402CC000u)
/** Peripheral SPI_4 base pointer */
#define SPI_4                                    ((SPI_Type *)SPI_4_BASE)
/** Peripheral SPI_5 base address */
#define SPI_5_BASE                               (0x402D0000u)
/** Peripheral SPI_5 base pointer */
#define SPI_5                                    ((SPI_Type *)SPI_5_BASE)
/** Array initializer of SPI peripheral base addresses */
#define SPI_BASE_ADDRS                           { SPI_0_BASE, SPI_1_BASE, SPI_2_BASE, SPI_3_BASE, SPI_4_BASE, SPI_5_BASE }
/** Array initializer of SPI peripheral base pointers */
#define SPI_BASE_PTRS                            { SPI_0, SPI_1, SPI_2, SPI_3, SPI_4, SPI_5 }

/* ----------------------------------------------------------------------------
   -- SPI Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SPI_Register_Masks SPI Register Masks
 * @{
 */

/*! @name MCR - Module Configuration Register */
/*! @{ */
#define SPI_MCR_HALT_MASK                        (0x1U)
#define SPI_MCR_HALT_SHIFT                       (0U)
#define SPI_MCR_HALT_WIDTH                       (1U)
#define SPI_MCR_HALT(x)                          (((uint32_t)(((uint32_t)(x)) << SPI_MCR_HALT_SHIFT)) & SPI_MCR_HALT_MASK)
#define SPI_MCR_PES_MASK                         (0x2U)
#define SPI_MCR_PES_SHIFT                        (1U)
#define SPI_MCR_PES_WIDTH                        (1U)
#define SPI_MCR_PES(x)                           (((uint32_t)(((uint32_t)(x)) << SPI_MCR_PES_SHIFT)) & SPI_MCR_PES_MASK)
#define SPI_MCR_FCPCS_MASK                       (0x4U)
#define SPI_MCR_FCPCS_SHIFT                      (2U)
#define SPI_MCR_FCPCS_WIDTH                      (1U)
#define SPI_MCR_FCPCS(x)                         (((uint32_t)(((uint32_t)(x)) << SPI_MCR_FCPCS_SHIFT)) & SPI_MCR_FCPCS_MASK)
#define SPI_MCR_XSPI_MASK                        (0x8U)
#define SPI_MCR_XSPI_SHIFT                       (3U)
#define SPI_MCR_XSPI_WIDTH                       (1U)
#define SPI_MCR_XSPI(x)                          (((uint32_t)(((uint32_t)(x)) << SPI_MCR_XSPI_SHIFT)) & SPI_MCR_XSPI_MASK)
#define SPI_MCR_SMPL_PT_MASK                     (0x300U)
#define SPI_MCR_SMPL_PT_SHIFT                    (8U)
#define SPI_MCR_SMPL_PT_WIDTH                    (2U)
#define SPI_MCR_SMPL_PT(x)                       (((uint32_t)(((uint32_t)(x)) << SPI_MCR_SMPL_PT_SHIFT)) & SPI_MCR_SMPL_PT_MASK)
#define SPI_MCR_CLR_RXF_MASK                     (0x400U)
#define SPI_MCR_CLR_RXF_SHIFT                    (10U)
#define SPI_MCR_CLR_RXF_WIDTH                    (1U)
#define SPI_MCR_CLR_RXF(x)                       (((uint32_t)(((uint32_t)(x)) << SPI_MCR_CLR_RXF_SHIFT)) & SPI_MCR_CLR_RXF_MASK)
#define SPI_MCR_CLR_TXF_MASK                     (0x800U)
#define SPI_MCR_CLR_TXF_SHIFT                    (11U)
#define SPI_MCR_CLR_TXF_WIDTH                    (1U)
#define SPI_MCR_CLR_TXF(x)                       (((uint32_t)(((uint32_t)(x)) << SPI_MCR_CLR_TXF_SHIFT)) & SPI_MCR_CLR_TXF_MASK)
#define SPI_MCR_DIS_RXF_MASK                     (0x1000U)
#define SPI_MCR_DIS_RXF_SHIFT                    (12U)
#define SPI_MCR_DIS_RXF_WIDTH                    (1U)
#define SPI_MCR_DIS_RXF(x)                       (((uint32_t)(((uint32_t)(x)) << SPI_MCR_DIS_RXF_SHIFT)) & SPI_MCR_DIS_RXF_MASK)
#define SPI_MCR_DIS_TXF_MASK                     (0x2000U)
#define SPI_MCR_DIS_TXF_SHIFT                    (13U)
#define SPI_MCR_DIS_TXF_WIDTH                    (1U)
#define SPI_MCR_DIS_TXF(x)                       (((uint32_t)(((uint32_t)(x)) << SPI_MCR_DIS_TXF_SHIFT)) & SPI_MCR_DIS_TXF_MASK)
#define SPI_MCR_MDIS_MASK                        (0x4000U)
#define SPI_MCR_MDIS_SHIFT                       (14U)
#define SPI_MCR_MDIS_WIDTH                       (1U)
#define SPI_MCR_MDIS(x)                          (((uint32_t)(((uint32_t)(x)) << SPI_MCR_MDIS_SHIFT)) & SPI_MCR_MDIS_MASK)
#define SPI_MCR_PCSIS_MASK                       (0x1F0000U)
#define SPI_MCR_PCSIS_SHIFT                      (16U)
#define SPI_MCR_PCSIS_WIDTH                      (5U)
#define SPI_MCR_PCSIS(x)                         (((uint32_t)(((uint32_t)(x)) << SPI_MCR_PCSIS_SHIFT)) & SPI_MCR_PCSIS_MASK)
#define SPI_MCR_ROOE_MASK                        (0x1000000U)
#define SPI_MCR_ROOE_SHIFT                       (24U)
#define SPI_MCR_ROOE_WIDTH                       (1U)
#define SPI_MCR_ROOE(x)                          (((uint32_t)(((uint32_t)(x)) << SPI_MCR_ROOE_SHIFT)) & SPI_MCR_ROOE_MASK)
#define SPI_MCR_PCSSE_MASK                       (0x2000000U)
#define SPI_MCR_PCSSE_SHIFT                      (25U)
#define SPI_MCR_PCSSE_WIDTH                      (1U)
#define SPI_MCR_PCSSE(x)                         (((uint32_t)(((uint32_t)(x)) << SPI_MCR_PCSSE_SHIFT)) & SPI_MCR_PCSSE_MASK)
#define SPI_MCR_MTFE_MASK                        (0x4000000U)
#define SPI_MCR_MTFE_SHIFT                       (26U)
#define SPI_MCR_MTFE_WIDTH                       (1U)
#define SPI_MCR_MTFE(x)                          (((uint32_t)(((uint32_t)(x)) << SPI_MCR_MTFE_SHIFT)) & SPI_MCR_MTFE_MASK)
#define SPI_MCR_FRZ_MASK                         (0x8000000U)
#define SPI_MCR_FRZ_SHIFT                        (27U)
#define SPI_MCR_FRZ_WIDTH                        (1U)
#define SPI_MCR_FRZ(x)                           (((uint32_t)(((uint32_t)(x)) << SPI_MCR_FRZ_SHIFT)) & SPI_MCR_FRZ_MASK)
#define SPI_MCR_DCONF_MASK                       (0x30000000U)
#define SPI_MCR_DCONF_SHIFT                      (28U)
#define SPI_MCR_DCONF_WIDTH                      (2U)
#define SPI_MCR_DCONF(x)                         (((uint32_t)(((uint32_t)(x)) << SPI_MCR_DCONF_SHIFT)) & SPI_MCR_DCONF_MASK)
#define SPI_MCR_CONT_SCKE_MASK                   (0x40000000U)
#define SPI_MCR_CONT_SCKE_SHIFT                  (30U)
#define SPI_MCR_CONT_SCKE_WIDTH                  (1U)
#define SPI_MCR_CONT_SCKE(x)                     (((uint32_t)(((uint32_t)(x)) << SPI_MCR_CONT_SCKE_SHIFT)) & SPI_MCR_CONT_SCKE_MASK)
#define SPI_MCR_MSTR_MASK                        (0x80000000U)
#define SPI_MCR_MSTR_SHIFT                       (31U)
#define SPI_MCR_MSTR_WIDTH                       (1U)
#define SPI_MCR_MSTR(x)                          (((uint32_t)(((uint32_t)(x)) << SPI_MCR_MSTR_SHIFT)) & SPI_MCR_MSTR_MASK)
/*! @} */

/*! @name TCR - Transfer Count Register */
/*! @{ */
#define SPI_TCR_SPI_TCNT_MASK                    (0xFFFF0000U)
#define SPI_TCR_SPI_TCNT_SHIFT                   (16U)
#define SPI_TCR_SPI_TCNT_WIDTH                   (16U)
#define SPI_TCR_SPI_TCNT(x)                      (((uint32_t)(((uint32_t)(x)) << SPI_TCR_SPI_TCNT_SHIFT)) & SPI_TCR_SPI_TCNT_MASK)
/*! @} */

/*! @name CTAR - Clock and Transfer Attributes Register (In Master Mode) */
/*! @{ */
#define SPI_CTAR_BR_MASK                         (0xFU)
#define SPI_CTAR_BR_SHIFT                        (0U)
#define SPI_CTAR_BR_WIDTH                        (4U)
#define SPI_CTAR_BR(x)                           (((uint32_t)(((uint32_t)(x)) << SPI_CTAR_BR_SHIFT)) & SPI_CTAR_BR_MASK)
#define SPI_CTAR_DT_MASK                         (0xF0U)
#define SPI_CTAR_DT_SHIFT                        (4U)
#define SPI_CTAR_DT_WIDTH                        (4U)
#define SPI_CTAR_DT(x)                           (((uint32_t)(((uint32_t)(x)) << SPI_CTAR_DT_SHIFT)) & SPI_CTAR_DT_MASK)
#define SPI_CTAR_ASC_MASK                        (0xF00U)
#define SPI_CTAR_ASC_SHIFT                       (8U)
#define SPI_CTAR_ASC_WIDTH                       (4U)
#define SPI_CTAR_ASC(x)                          (((uint32_t)(((uint32_t)(x)) << SPI_CTAR_ASC_SHIFT)) & SPI_CTAR_ASC_MASK)
#define SPI_CTAR_CSSCK_MASK                      (0xF000U)
#define SPI_CTAR_CSSCK_SHIFT                     (12U)
#define SPI_CTAR_CSSCK_WIDTH                     (4U)
#define SPI_CTAR_CSSCK(x)                        (((uint32_t)(((uint32_t)(x)) << SPI_CTAR_CSSCK_SHIFT)) & SPI_CTAR_CSSCK_MASK)
#define SPI_CTAR_PBR_MASK                        (0x30000U)
#define SPI_CTAR_PBR_SHIFT                       (16U)
#define SPI_CTAR_PBR_WIDTH                       (2U)
#define SPI_CTAR_PBR(x)                          (((uint32_t)(((uint32_t)(x)) << SPI_CTAR_PBR_SHIFT)) & SPI_CTAR_PBR_MASK)
#define SPI_CTAR_PDT_MASK                        (0xC0000U)
#define SPI_CTAR_PDT_SHIFT                       (18U)
#define SPI_CTAR_PDT_WIDTH                       (2U)
#define SPI_CTAR_PDT(x)                          (((uint32_t)(((uint32_t)(x)) << SPI_CTAR_PDT_SHIFT)) & SPI_CTAR_PDT_MASK)
#define SPI_CTAR_PASC_MASK                       (0x300000U)
#define SPI_CTAR_PASC_SHIFT                      (20U)
#define SPI_CTAR_PASC_WIDTH                      (2U)
#define SPI_CTAR_PASC(x)                         (((uint32_t)(((uint32_t)(x)) << SPI_CTAR_PASC_SHIFT)) & SPI_CTAR_PASC_MASK)
#define SPI_CTAR_PCSSCK_MASK                     (0xC00000U)
#define SPI_CTAR_PCSSCK_SHIFT                    (22U)
#define SPI_CTAR_PCSSCK_WIDTH                    (2U)
#define SPI_CTAR_PCSSCK(x)                       (((uint32_t)(((uint32_t)(x)) << SPI_CTAR_PCSSCK_SHIFT)) & SPI_CTAR_PCSSCK_MASK)
#define SPI_CTAR_LSBFE_MASK                      (0x1000000U)
#define SPI_CTAR_LSBFE_SHIFT                     (24U)
#define SPI_CTAR_LSBFE_WIDTH                     (1U)
#define SPI_CTAR_LSBFE(x)                        (((uint32_t)(((uint32_t)(x)) << SPI_CTAR_LSBFE_SHIFT)) & SPI_CTAR_LSBFE_MASK)
#define SPI_CTAR_CPHA_MASK                       (0x2000000U)
#define SPI_CTAR_CPHA_SHIFT                      (25U)
#define SPI_CTAR_CPHA_WIDTH                      (1U)
#define SPI_CTAR_CPHA(x)                         (((uint32_t)(((uint32_t)(x)) << SPI_CTAR_CPHA_SHIFT)) & SPI_CTAR_CPHA_MASK)
#define SPI_CTAR_CPOL_MASK                       (0x4000000U)
#define SPI_CTAR_CPOL_SHIFT                      (26U)
#define SPI_CTAR_CPOL_WIDTH                      (1U)
#define SPI_CTAR_CPOL(x)                         (((uint32_t)(((uint32_t)(x)) << SPI_CTAR_CPOL_SHIFT)) & SPI_CTAR_CPOL_MASK)
#define SPI_CTAR_FMSZ_MASK                       (0x78000000U)
#define SPI_CTAR_FMSZ_SHIFT                      (27U)
#define SPI_CTAR_FMSZ_WIDTH                      (4U)
#define SPI_CTAR_FMSZ(x)                         (((uint32_t)(((uint32_t)(x)) << SPI_CTAR_FMSZ_SHIFT)) & SPI_CTAR_FMSZ_MASK)
#define SPI_CTAR_DBR_MASK                        (0x80000000U)
#define SPI_CTAR_DBR_SHIFT                       (31U)
#define SPI_CTAR_DBR_WIDTH                       (1U)
#define SPI_CTAR_DBR(x)                          (((uint32_t)(((uint32_t)(x)) << SPI_CTAR_DBR_SHIFT)) & SPI_CTAR_DBR_MASK)
/*! @} */

/*! @name CTAR_SLAVE - Clock and Transfer Attributes Register (In Slave Mode) */
/*! @{ */
#define SPI_CTAR_SLAVE_PP_MASK                   (0x800000U)
#define SPI_CTAR_SLAVE_PP_SHIFT                  (23U)
#define SPI_CTAR_SLAVE_PP_WIDTH                  (1U)
#define SPI_CTAR_SLAVE_PP(x)                     (((uint32_t)(((uint32_t)(x)) << SPI_CTAR_SLAVE_PP_SHIFT)) & SPI_CTAR_SLAVE_PP_MASK)
#define SPI_CTAR_SLAVE_PE_MASK                   (0x1000000U)
#define SPI_CTAR_SLAVE_PE_SHIFT                  (24U)
#define SPI_CTAR_SLAVE_PE_WIDTH                  (1U)
#define SPI_CTAR_SLAVE_PE(x)                     (((uint32_t)(((uint32_t)(x)) << SPI_CTAR_SLAVE_PE_SHIFT)) & SPI_CTAR_SLAVE_PE_MASK)
#define SPI_CTAR_SLAVE_CPHA_MASK                 (0x2000000U)
#define SPI_CTAR_SLAVE_CPHA_SHIFT                (25U)
#define SPI_CTAR_SLAVE_CPHA_WIDTH                (1U)
#define SPI_CTAR_SLAVE_CPHA(x)                   (((uint32_t)(((uint32_t)(x)) << SPI_CTAR_SLAVE_CPHA_SHIFT)) & SPI_CTAR_SLAVE_CPHA_MASK)
#define SPI_CTAR_SLAVE_CPOL_MASK                 (0x4000000U)
#define SPI_CTAR_SLAVE_CPOL_SHIFT                (26U)
#define SPI_CTAR_SLAVE_CPOL_WIDTH                (1U)
#define SPI_CTAR_SLAVE_CPOL(x)                   (((uint32_t)(((uint32_t)(x)) << SPI_CTAR_SLAVE_CPOL_SHIFT)) & SPI_CTAR_SLAVE_CPOL_MASK)
#define SPI_CTAR_SLAVE_FMSZ_MASK                 (0xF8000000U)
#define SPI_CTAR_SLAVE_FMSZ_SHIFT                (27U)
#define SPI_CTAR_SLAVE_FMSZ_WIDTH                (5U)
#define SPI_CTAR_SLAVE_FMSZ(x)                   (((uint32_t)(((uint32_t)(x)) << SPI_CTAR_SLAVE_FMSZ_SHIFT)) & SPI_CTAR_SLAVE_FMSZ_MASK)
/*! @} */

/*! @name SR - Status Register */
/*! @{ */
#define SPI_SR_POPNXTPTR_MASK                    (0xFU)
#define SPI_SR_POPNXTPTR_SHIFT                   (0U)
#define SPI_SR_POPNXTPTR_WIDTH                   (4U)
#define SPI_SR_POPNXTPTR(x)                      (((uint32_t)(((uint32_t)(x)) << SPI_SR_POPNXTPTR_SHIFT)) & SPI_SR_POPNXTPTR_MASK)
#define SPI_SR_RXCTR_MASK                        (0xF0U)
#define SPI_SR_RXCTR_SHIFT                       (4U)
#define SPI_SR_RXCTR_WIDTH                       (4U)
#define SPI_SR_RXCTR(x)                          (((uint32_t)(((uint32_t)(x)) << SPI_SR_RXCTR_SHIFT)) & SPI_SR_RXCTR_MASK)
#define SPI_SR_TXNXTPTR_MASK                     (0xF00U)
#define SPI_SR_TXNXTPTR_SHIFT                    (8U)
#define SPI_SR_TXNXTPTR_WIDTH                    (4U)
#define SPI_SR_TXNXTPTR(x)                       (((uint32_t)(((uint32_t)(x)) << SPI_SR_TXNXTPTR_SHIFT)) & SPI_SR_TXNXTPTR_MASK)
#define SPI_SR_TXCTR_MASK                        (0xF000U)
#define SPI_SR_TXCTR_SHIFT                       (12U)
#define SPI_SR_TXCTR_WIDTH                       (4U)
#define SPI_SR_TXCTR(x)                          (((uint32_t)(((uint32_t)(x)) << SPI_SR_TXCTR_SHIFT)) & SPI_SR_TXCTR_MASK)
#define SPI_SR_RFDF_MASK                         (0x20000U)
#define SPI_SR_RFDF_SHIFT                        (17U)
#define SPI_SR_RFDF_WIDTH                        (1U)
#define SPI_SR_RFDF(x)                           (((uint32_t)(((uint32_t)(x)) << SPI_SR_RFDF_SHIFT)) & SPI_SR_RFDF_MASK)
#define SPI_SR_TFIWF_MASK                        (0x40000U)
#define SPI_SR_TFIWF_SHIFT                       (18U)
#define SPI_SR_TFIWF_WIDTH                       (1U)
#define SPI_SR_TFIWF(x)                          (((uint32_t)(((uint32_t)(x)) << SPI_SR_TFIWF_SHIFT)) & SPI_SR_TFIWF_MASK)
#define SPI_SR_RFOF_MASK                         (0x80000U)
#define SPI_SR_RFOF_SHIFT                        (19U)
#define SPI_SR_RFOF_WIDTH                        (1U)
#define SPI_SR_RFOF(x)                           (((uint32_t)(((uint32_t)(x)) << SPI_SR_RFOF_SHIFT)) & SPI_SR_RFOF_MASK)
#define SPI_SR_SPEF_MASK                         (0x200000U)
#define SPI_SR_SPEF_SHIFT                        (21U)
#define SPI_SR_SPEF_WIDTH                        (1U)
#define SPI_SR_SPEF(x)                           (((uint32_t)(((uint32_t)(x)) << SPI_SR_SPEF_SHIFT)) & SPI_SR_SPEF_MASK)
#define SPI_SR_CMDTCF_MASK                       (0x800000U)
#define SPI_SR_CMDTCF_SHIFT                      (23U)
#define SPI_SR_CMDTCF_WIDTH                      (1U)
#define SPI_SR_CMDTCF(x)                         (((uint32_t)(((uint32_t)(x)) << SPI_SR_CMDTCF_SHIFT)) & SPI_SR_CMDTCF_MASK)
#define SPI_SR_BSYF_MASK                         (0x1000000U)
#define SPI_SR_BSYF_SHIFT                        (24U)
#define SPI_SR_BSYF_WIDTH                        (1U)
#define SPI_SR_BSYF(x)                           (((uint32_t)(((uint32_t)(x)) << SPI_SR_BSYF_SHIFT)) & SPI_SR_BSYF_MASK)
#define SPI_SR_TFFF_MASK                         (0x2000000U)
#define SPI_SR_TFFF_SHIFT                        (25U)
#define SPI_SR_TFFF_WIDTH                        (1U)
#define SPI_SR_TFFF(x)                           (((uint32_t)(((uint32_t)(x)) << SPI_SR_TFFF_SHIFT)) & SPI_SR_TFFF_MASK)
#define SPI_SR_TFUF_MASK                         (0x8000000U)
#define SPI_SR_TFUF_SHIFT                        (27U)
#define SPI_SR_TFUF_WIDTH                        (1U)
#define SPI_SR_TFUF(x)                           (((uint32_t)(((uint32_t)(x)) << SPI_SR_TFUF_SHIFT)) & SPI_SR_TFUF_MASK)
#define SPI_SR_EOQF_MASK                         (0x10000000U)
#define SPI_SR_EOQF_SHIFT                        (28U)
#define SPI_SR_EOQF_WIDTH                        (1U)
#define SPI_SR_EOQF(x)                           (((uint32_t)(((uint32_t)(x)) << SPI_SR_EOQF_SHIFT)) & SPI_SR_EOQF_MASK)
#define SPI_SR_TXRXS_MASK                        (0x40000000U)
#define SPI_SR_TXRXS_SHIFT                       (30U)
#define SPI_SR_TXRXS_WIDTH                       (1U)
#define SPI_SR_TXRXS(x)                          (((uint32_t)(((uint32_t)(x)) << SPI_SR_TXRXS_SHIFT)) & SPI_SR_TXRXS_MASK)
#define SPI_SR_TCF_MASK                          (0x80000000U)
#define SPI_SR_TCF_SHIFT                         (31U)
#define SPI_SR_TCF_WIDTH                         (1U)
#define SPI_SR_TCF(x)                            (((uint32_t)(((uint32_t)(x)) << SPI_SR_TCF_SHIFT)) & SPI_SR_TCF_MASK)
/*! @} */

/*! @name RSER - DMA/Interrupt Request Select and Enable Register */
/*! @{ */
#define SPI_RSER_CMDFFF_DIRS_MASK                (0x8000U)
#define SPI_RSER_CMDFFF_DIRS_SHIFT               (15U)
#define SPI_RSER_CMDFFF_DIRS_WIDTH               (1U)
#define SPI_RSER_CMDFFF_DIRS(x)                  (((uint32_t)(((uint32_t)(x)) << SPI_RSER_CMDFFF_DIRS_SHIFT)) & SPI_RSER_CMDFFF_DIRS_MASK)
#define SPI_RSER_RFDF_DIRS_MASK                  (0x10000U)
#define SPI_RSER_RFDF_DIRS_SHIFT                 (16U)
#define SPI_RSER_RFDF_DIRS_WIDTH                 (1U)
#define SPI_RSER_RFDF_DIRS(x)                    (((uint32_t)(((uint32_t)(x)) << SPI_RSER_RFDF_DIRS_SHIFT)) & SPI_RSER_RFDF_DIRS_MASK)
#define SPI_RSER_RFDF_RE_MASK                    (0x20000U)
#define SPI_RSER_RFDF_RE_SHIFT                   (17U)
#define SPI_RSER_RFDF_RE_WIDTH                   (1U)
#define SPI_RSER_RFDF_RE(x)                      (((uint32_t)(((uint32_t)(x)) << SPI_RSER_RFDF_RE_SHIFT)) & SPI_RSER_RFDF_RE_MASK)
#define SPI_RSER_TFIWF_RE_MASK                   (0x40000U)
#define SPI_RSER_TFIWF_RE_SHIFT                  (18U)
#define SPI_RSER_TFIWF_RE_WIDTH                  (1U)
#define SPI_RSER_TFIWF_RE(x)                     (((uint32_t)(((uint32_t)(x)) << SPI_RSER_TFIWF_RE_SHIFT)) & SPI_RSER_TFIWF_RE_MASK)
#define SPI_RSER_RFOF_RE_MASK                    (0x80000U)
#define SPI_RSER_RFOF_RE_SHIFT                   (19U)
#define SPI_RSER_RFOF_RE_WIDTH                   (1U)
#define SPI_RSER_RFOF_RE(x)                      (((uint32_t)(((uint32_t)(x)) << SPI_RSER_RFOF_RE_SHIFT)) & SPI_RSER_RFOF_RE_MASK)
#define SPI_RSER_SPEF_RE_MASK                    (0x200000U)
#define SPI_RSER_SPEF_RE_SHIFT                   (21U)
#define SPI_RSER_SPEF_RE_WIDTH                   (1U)
#define SPI_RSER_SPEF_RE(x)                      (((uint32_t)(((uint32_t)(x)) << SPI_RSER_SPEF_RE_SHIFT)) & SPI_RSER_SPEF_RE_MASK)
#define SPI_RSER_CMDTCF_RE_MASK                  (0x800000U)
#define SPI_RSER_CMDTCF_RE_SHIFT                 (23U)
#define SPI_RSER_CMDTCF_RE_WIDTH                 (1U)
#define SPI_RSER_CMDTCF_RE(x)                    (((uint32_t)(((uint32_t)(x)) << SPI_RSER_CMDTCF_RE_SHIFT)) & SPI_RSER_CMDTCF_RE_MASK)
#define SPI_RSER_TFFF_DIRS_MASK                  (0x1000000U)
#define SPI_RSER_TFFF_DIRS_SHIFT                 (24U)
#define SPI_RSER_TFFF_DIRS_WIDTH                 (1U)
#define SPI_RSER_TFFF_DIRS(x)                    (((uint32_t)(((uint32_t)(x)) << SPI_RSER_TFFF_DIRS_SHIFT)) & SPI_RSER_TFFF_DIRS_MASK)
#define SPI_RSER_TFFF_RE_MASK                    (0x2000000U)
#define SPI_RSER_TFFF_RE_SHIFT                   (25U)
#define SPI_RSER_TFFF_RE_WIDTH                   (1U)
#define SPI_RSER_TFFF_RE(x)                      (((uint32_t)(((uint32_t)(x)) << SPI_RSER_TFFF_RE_SHIFT)) & SPI_RSER_TFFF_RE_MASK)
#define SPI_RSER_TFUF_RE_MASK                    (0x8000000U)
#define SPI_RSER_TFUF_RE_SHIFT                   (27U)
#define SPI_RSER_TFUF_RE_WIDTH                   (1U)
#define SPI_RSER_TFUF_RE(x)                      (((uint32_t)(((uint32_t)(x)) << SPI_RSER_TFUF_RE_SHIFT)) & SPI_RSER_TFUF_RE_MASK)
#define SPI_RSER_EOQF_RE_MASK                    (0x10000000U)
#define SPI_RSER_EOQF_RE_SHIFT                   (28U)
#define SPI_RSER_EOQF_RE_WIDTH                   (1U)
#define SPI_RSER_EOQF_RE(x)                      (((uint32_t)(((uint32_t)(x)) << SPI_RSER_EOQF_RE_SHIFT)) & SPI_RSER_EOQF_RE_MASK)
#define SPI_RSER_CMDFFF_RE_MASK                  (0x40000000U)
#define SPI_RSER_CMDFFF_RE_SHIFT                 (30U)
#define SPI_RSER_CMDFFF_RE_WIDTH                 (1U)
#define SPI_RSER_CMDFFF_RE(x)                    (((uint32_t)(((uint32_t)(x)) << SPI_RSER_CMDFFF_RE_SHIFT)) & SPI_RSER_CMDFFF_RE_MASK)
#define SPI_RSER_TCF_RE_MASK                     (0x80000000U)
#define SPI_RSER_TCF_RE_SHIFT                    (31U)
#define SPI_RSER_TCF_RE_WIDTH                    (1U)
#define SPI_RSER_TCF_RE(x)                       (((uint32_t)(((uint32_t)(x)) << SPI_RSER_TCF_RE_SHIFT)) & SPI_RSER_TCF_RE_MASK)
/*! @} */

/*! @name PUSHR - PUSH TX FIFO Register In Master Mode */
/*! @{ */
#define SPI_PUSHR_TXDATA_MASK                    (0xFFFFU)
#define SPI_PUSHR_TXDATA_SHIFT                   (0U)
#define SPI_PUSHR_TXDATA_WIDTH                   (16U)
#define SPI_PUSHR_TXDATA(x)                      (((uint32_t)(((uint32_t)(x)) << SPI_PUSHR_TXDATA_SHIFT)) & SPI_PUSHR_TXDATA_MASK)
#define SPI_PUSHR_PCS_MASK                       (0x1F0000U)
#define SPI_PUSHR_PCS_SHIFT                      (16U)
#define SPI_PUSHR_PCS_WIDTH                      (5U)
#define SPI_PUSHR_PCS(x)                         (((uint32_t)(((uint32_t)(x)) << SPI_PUSHR_PCS_SHIFT)) & SPI_PUSHR_PCS_MASK)
#define SPI_PUSHR_PP_MCSC_MASK                   (0x1000000U)
#define SPI_PUSHR_PP_MCSC_SHIFT                  (24U)
#define SPI_PUSHR_PP_MCSC_WIDTH                  (1U)
#define SPI_PUSHR_PP_MCSC(x)                     (((uint32_t)(((uint32_t)(x)) << SPI_PUSHR_PP_MCSC_SHIFT)) & SPI_PUSHR_PP_MCSC_MASK)
#define SPI_PUSHR_PE_MASC_MASK                   (0x2000000U)
#define SPI_PUSHR_PE_MASC_SHIFT                  (25U)
#define SPI_PUSHR_PE_MASC_WIDTH                  (1U)
#define SPI_PUSHR_PE_MASC(x)                     (((uint32_t)(((uint32_t)(x)) << SPI_PUSHR_PE_MASC_SHIFT)) & SPI_PUSHR_PE_MASC_MASK)
#define SPI_PUSHR_CTCNT_MASK                     (0x4000000U)
#define SPI_PUSHR_CTCNT_SHIFT                    (26U)
#define SPI_PUSHR_CTCNT_WIDTH                    (1U)
#define SPI_PUSHR_CTCNT(x)                       (((uint32_t)(((uint32_t)(x)) << SPI_PUSHR_CTCNT_SHIFT)) & SPI_PUSHR_CTCNT_MASK)
#define SPI_PUSHR_EOQ_MASK                       (0x8000000U)
#define SPI_PUSHR_EOQ_SHIFT                      (27U)
#define SPI_PUSHR_EOQ_WIDTH                      (1U)
#define SPI_PUSHR_EOQ(x)                         (((uint32_t)(((uint32_t)(x)) << SPI_PUSHR_EOQ_SHIFT)) & SPI_PUSHR_EOQ_MASK)
#define SPI_PUSHR_CTAS_MASK                      (0x70000000U)
#define SPI_PUSHR_CTAS_SHIFT                     (28U)
#define SPI_PUSHR_CTAS_WIDTH                     (3U)
#define SPI_PUSHR_CTAS(x)                        (((uint32_t)(((uint32_t)(x)) << SPI_PUSHR_CTAS_SHIFT)) & SPI_PUSHR_CTAS_MASK)
#define SPI_PUSHR_CONT_MASK                      (0x80000000U)
#define SPI_PUSHR_CONT_SHIFT                     (31U)
#define SPI_PUSHR_CONT_WIDTH                     (1U)
#define SPI_PUSHR_CONT(x)                        (((uint32_t)(((uint32_t)(x)) << SPI_PUSHR_CONT_SHIFT)) & SPI_PUSHR_CONT_MASK)
/*! @} */

/*! @name PUSHR_SLAVE - PUSH TX FIFO Register In Slave Mode */
/*! @{ */
#define SPI_PUSHR_SLAVE_TXDATA_MASK              (0xFFFFU)
#define SPI_PUSHR_SLAVE_TXDATA_SHIFT             (0U)
#define SPI_PUSHR_SLAVE_TXDATA_WIDTH             (16U)
#define SPI_PUSHR_SLAVE_TXDATA(x)                (((uint32_t)(((uint32_t)(x)) << SPI_PUSHR_SLAVE_TXDATA_SHIFT)) & SPI_PUSHR_SLAVE_TXDATA_MASK)
/*! @} */

/*! @name POPR - POP RX FIFO Register */
/*! @{ */
#define SPI_POPR_RXDATA_MASK                     (0xFFFFFFFFU)
#define SPI_POPR_RXDATA_SHIFT                    (0U)
#define SPI_POPR_RXDATA_WIDTH                    (32U)
#define SPI_POPR_RXDATA(x)                       (((uint32_t)(((uint32_t)(x)) << SPI_POPR_RXDATA_SHIFT)) & SPI_POPR_RXDATA_MASK)
/*! @} */

/*! @name TXFR - Transmit FIFO Registers */
/*! @{ */
#define SPI_TXFR_TXDATA_MASK                     (0xFFFFU)
#define SPI_TXFR_TXDATA_SHIFT                    (0U)
#define SPI_TXFR_TXDATA_WIDTH                    (16U)
#define SPI_TXFR_TXDATA(x)                       (((uint32_t)(((uint32_t)(x)) << SPI_TXFR_TXDATA_SHIFT)) & SPI_TXFR_TXDATA_MASK)
#define SPI_TXFR_TXCMD_TXDATA_MASK               (0xFFFF0000U)
#define SPI_TXFR_TXCMD_TXDATA_SHIFT              (16U)
#define SPI_TXFR_TXCMD_TXDATA_WIDTH              (16U)
#define SPI_TXFR_TXCMD_TXDATA(x)                 (((uint32_t)(((uint32_t)(x)) << SPI_TXFR_TXCMD_TXDATA_SHIFT)) & SPI_TXFR_TXCMD_TXDATA_MASK)
/*! @} */

/*! @name RXFR - Receive FIFO Registers */
/*! @{ */
#define SPI_RXFR_RXDATA_MASK                     (0xFFFFFFFFU)
#define SPI_RXFR_RXDATA_SHIFT                    (0U)
#define SPI_RXFR_RXDATA_WIDTH                    (32U)
#define SPI_RXFR_RXDATA(x)                       (((uint32_t)(((uint32_t)(x)) << SPI_RXFR_RXDATA_SHIFT)) & SPI_RXFR_RXDATA_MASK)
/*! @} */

/*! @name CTARE - Clock and Transfer Attributes Register Extended */
/*! @{ */
#define SPI_CTARE_DTCP_MASK                      (0x7FFU)
#define SPI_CTARE_DTCP_SHIFT                     (0U)
#define SPI_CTARE_DTCP_WIDTH                     (11U)
#define SPI_CTARE_DTCP(x)                        (((uint32_t)(((uint32_t)(x)) << SPI_CTARE_DTCP_SHIFT)) & SPI_CTARE_DTCP_MASK)
#define SPI_CTARE_FMSZE_MASK                     (0x10000U)
#define SPI_CTARE_FMSZE_SHIFT                    (16U)
#define SPI_CTARE_FMSZE_WIDTH                    (1U)
#define SPI_CTARE_FMSZE(x)                       (((uint32_t)(((uint32_t)(x)) << SPI_CTARE_FMSZE_SHIFT)) & SPI_CTARE_FMSZE_MASK)
/*! @} */

/*! @name SREX - Status Register Extended */
/*! @{ */
#define SPI_SREX_CMDNXTPTR_MASK                  (0xFU)
#define SPI_SREX_CMDNXTPTR_SHIFT                 (0U)
#define SPI_SREX_CMDNXTPTR_WIDTH                 (4U)
#define SPI_SREX_CMDNXTPTR(x)                    (((uint32_t)(((uint32_t)(x)) << SPI_SREX_CMDNXTPTR_SHIFT)) & SPI_SREX_CMDNXTPTR_MASK)
#define SPI_SREX_CMDCTR_MASK                     (0x1F0U)
#define SPI_SREX_CMDCTR_SHIFT                    (4U)
#define SPI_SREX_CMDCTR_WIDTH                    (5U)
#define SPI_SREX_CMDCTR(x)                       (((uint32_t)(((uint32_t)(x)) << SPI_SREX_CMDCTR_SHIFT)) & SPI_SREX_CMDCTR_MASK)
#define SPI_SREX_RXCTR4_MASK                     (0x800U)
#define SPI_SREX_RXCTR4_SHIFT                    (11U)
#define SPI_SREX_RXCTR4_WIDTH                    (1U)
#define SPI_SREX_RXCTR4(x)                       (((uint32_t)(((uint32_t)(x)) << SPI_SREX_RXCTR4_SHIFT)) & SPI_SREX_RXCTR4_MASK)
#define SPI_SREX_TXCTR4_MASK                     (0x4000U)
#define SPI_SREX_TXCTR4_SHIFT                    (14U)
#define SPI_SREX_TXCTR4_WIDTH                    (1U)
#define SPI_SREX_TXCTR4(x)                       (((uint32_t)(((uint32_t)(x)) << SPI_SREX_TXCTR4_SHIFT)) & SPI_SREX_TXCTR4_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group SPI_Register_Masks */


/*!
 * @}
 */ /* end of group SPI_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- SRAMC Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SRAMC_Peripheral_Access_Layer SRAMC Peripheral Access Layer
 * @{
 */

/** SRAMC - Register Layout Typedef */
typedef struct {
  __IO uint32_t PRAMCR;                            /**< Platform RAM Control Register, offset: 0x0 */
  __IO uint32_t PRAMIAS;                           /**< Platform RAM Initialization Address Register Start, offset: 0x4 */
  __IO uint32_t PRAMIAE;                           /**< Platform RAM Initialization Address Register End, offset: 0x8 */
  __IO uint32_t PRAMSR;                            /**< Platform RAM Status Register, offset: 0xC */
  __I  uint32_t PRAMECCA;                          /**< Platform RAM ECC Address, offset: 0x10 */
} SRAMC_Type, *SRAMC_MemMapPtr;

/** Number of instances of the SRAMC module. */
#define SRAMC_INSTANCE_COUNT                     (3u)

/* SRAMC - Peripheral instance base addresses */
/** Peripheral SRAMC base address */
#define SRAMC_BASE                               (0x4019C000u)
/** Peripheral SRAMC base pointer */
#define SRAMC                                    ((SRAMC_Type *)SRAMC_BASE)
/** Peripheral SRAMC_1 base address */
#define SRAMC_1_BASE                             (0x401A0000u)
/** Peripheral SRAMC_1 base pointer */
#define SRAMC_1                                  ((SRAMC_Type *)SRAMC_1_BASE)
/** Peripheral SRAM_STDBY_CFG base address */
#define SRAM_STDBY_CFG_BASE                      (0x44028000u)
/** Peripheral SRAM_STDBY_CFG base pointer */
#define SRAM_STDBY_CFG                           ((SRAMC_Type *)SRAM_STDBY_CFG_BASE)
/** Array initializer of SRAMC peripheral base addresses */
#define SRAMC_BASE_ADDRS                         { SRAMC_BASE, SRAMC_1_BASE, SRAM_STDBY_CFG_BASE }
/** Array initializer of SRAMC peripheral base pointers */
#define SRAMC_BASE_PTRS                          { SRAMC, SRAMC_1, SRAM_STDBY_CFG }

/* ----------------------------------------------------------------------------
   -- SRAMC Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SRAMC_Register_Masks SRAMC Register Masks
 * @{
 */

/*! @name PRAMCR - Platform RAM Control Register */
/*! @{ */
#define SRAMC_PRAMCR_INITREQ_MASK                (0x1U)
#define SRAMC_PRAMCR_INITREQ_SHIFT               (0U)
#define SRAMC_PRAMCR_INITREQ_WIDTH               (1U)
#define SRAMC_PRAMCR_INITREQ(x)                  (((uint32_t)(((uint32_t)(x)) << SRAMC_PRAMCR_INITREQ_SHIFT)) & SRAMC_PRAMCR_INITREQ_MASK)
#define SRAMC_PRAMCR_IWS_MASK                    (0x6U)
#define SRAMC_PRAMCR_IWS_SHIFT                   (1U)
#define SRAMC_PRAMCR_IWS_WIDTH                   (2U)
#define SRAMC_PRAMCR_IWS(x)                      (((uint32_t)(((uint32_t)(x)) << SRAMC_PRAMCR_IWS_SHIFT)) & SRAMC_PRAMCR_IWS_MASK)
/*! @} */

/*! @name PRAMIAS - Platform RAM Initialization Address Register Start */
/*! @{ */
#define SRAMC_PRAMIAS_IAS_MASK                   (0x1FFFFU)
#define SRAMC_PRAMIAS_IAS_SHIFT                  (0U)
#define SRAMC_PRAMIAS_IAS_WIDTH                  (17U)
#define SRAMC_PRAMIAS_IAS(x)                     (((uint32_t)(((uint32_t)(x)) << SRAMC_PRAMIAS_IAS_SHIFT)) & SRAMC_PRAMIAS_IAS_MASK)
/*! @} */

/*! @name PRAMIAE - Platform RAM Initialization Address Register End */
/*! @{ */
#define SRAMC_PRAMIAE_IAE_MASK                   (0x1FFFFU)
#define SRAMC_PRAMIAE_IAE_SHIFT                  (0U)
#define SRAMC_PRAMIAE_IAE_WIDTH                  (17U)
#define SRAMC_PRAMIAE_IAE(x)                     (((uint32_t)(((uint32_t)(x)) << SRAMC_PRAMIAE_IAE_SHIFT)) & SRAMC_PRAMIAE_IAE_MASK)
/*! @} */

/*! @name PRAMSR - Platform RAM Status Register */
/*! @{ */
#define SRAMC_PRAMSR_IDONE_MASK                  (0x1U)
#define SRAMC_PRAMSR_IDONE_SHIFT                 (0U)
#define SRAMC_PRAMSR_IDONE_WIDTH                 (1U)
#define SRAMC_PRAMSR_IDONE(x)                    (((uint32_t)(((uint32_t)(x)) << SRAMC_PRAMSR_IDONE_SHIFT)) & SRAMC_PRAMSR_IDONE_MASK)
#define SRAMC_PRAMSR_IERR_MASK                   (0x2U)
#define SRAMC_PRAMSR_IERR_SHIFT                  (1U)
#define SRAMC_PRAMSR_IERR_WIDTH                  (1U)
#define SRAMC_PRAMSR_IERR(x)                     (((uint32_t)(((uint32_t)(x)) << SRAMC_PRAMSR_IERR_SHIFT)) & SRAMC_PRAMSR_IERR_MASK)
#define SRAMC_PRAMSR_IPEND_MASK                  (0x4U)
#define SRAMC_PRAMSR_IPEND_SHIFT                 (2U)
#define SRAMC_PRAMSR_IPEND_WIDTH                 (1U)
#define SRAMC_PRAMSR_IPEND(x)                    (((uint32_t)(((uint32_t)(x)) << SRAMC_PRAMSR_IPEND_SHIFT)) & SRAMC_PRAMSR_IPEND_MASK)
#define SRAMC_PRAMSR_AEXT_MASK                   (0x10U)
#define SRAMC_PRAMSR_AEXT_SHIFT                  (4U)
#define SRAMC_PRAMSR_AEXT_WIDTH                  (1U)
#define SRAMC_PRAMSR_AEXT(x)                     (((uint32_t)(((uint32_t)(x)) << SRAMC_PRAMSR_AEXT_SHIFT)) & SRAMC_PRAMSR_AEXT_MASK)
#define SRAMC_PRAMSR_AERR_MASK                   (0x20U)
#define SRAMC_PRAMSR_AERR_SHIFT                  (5U)
#define SRAMC_PRAMSR_AERR_WIDTH                  (1U)
#define SRAMC_PRAMSR_AERR(x)                     (((uint32_t)(((uint32_t)(x)) << SRAMC_PRAMSR_AERR_SHIFT)) & SRAMC_PRAMSR_AERR_MASK)
#define SRAMC_PRAMSR_MLTERR_MASK                 (0x40U)
#define SRAMC_PRAMSR_MLTERR_SHIFT                (6U)
#define SRAMC_PRAMSR_MLTERR_WIDTH                (1U)
#define SRAMC_PRAMSR_MLTERR(x)                   (((uint32_t)(((uint32_t)(x)) << SRAMC_PRAMSR_MLTERR_SHIFT)) & SRAMC_PRAMSR_MLTERR_MASK)
#define SRAMC_PRAMSR_SGLERR_MASK                 (0x80U)
#define SRAMC_PRAMSR_SGLERR_SHIFT                (7U)
#define SRAMC_PRAMSR_SGLERR_WIDTH                (1U)
#define SRAMC_PRAMSR_SGLERR(x)                   (((uint32_t)(((uint32_t)(x)) << SRAMC_PRAMSR_SGLERR_SHIFT)) & SRAMC_PRAMSR_SGLERR_MASK)
#define SRAMC_PRAMSR_SYND_MASK                   (0xFF00U)
#define SRAMC_PRAMSR_SYND_SHIFT                  (8U)
#define SRAMC_PRAMSR_SYND_WIDTH                  (8U)
#define SRAMC_PRAMSR_SYND(x)                     (((uint32_t)(((uint32_t)(x)) << SRAMC_PRAMSR_SYND_SHIFT)) & SRAMC_PRAMSR_SYND_MASK)
/*! @} */

/*! @name PRAMECCA - Platform RAM ECC Address */
/*! @{ */
#define SRAMC_PRAMECCA_EADR_MASK                 (0x1FFFFU)
#define SRAMC_PRAMECCA_EADR_SHIFT                (0U)
#define SRAMC_PRAMECCA_EADR_WIDTH                (17U)
#define SRAMC_PRAMECCA_EADR(x)                   (((uint32_t)(((uint32_t)(x)) << SRAMC_PRAMECCA_EADR_SHIFT)) & SRAMC_PRAMECCA_EADR_MASK)
#define SRAMC_PRAMECCA_EBNK_MASK                 (0x100000U)
#define SRAMC_PRAMECCA_EBNK_SHIFT                (20U)
#define SRAMC_PRAMECCA_EBNK_WIDTH                (1U)
#define SRAMC_PRAMECCA_EBNK(x)                   (((uint32_t)(((uint32_t)(x)) << SRAMC_PRAMECCA_EBNK_SHIFT)) & SRAMC_PRAMECCA_EBNK_MASK)
#define SRAMC_PRAMECCA_CTRLID_MASK               (0x1E00000U)
#define SRAMC_PRAMECCA_CTRLID_SHIFT              (21U)
#define SRAMC_PRAMECCA_CTRLID_WIDTH              (4U)
#define SRAMC_PRAMECCA_CTRLID(x)                 (((uint32_t)(((uint32_t)(x)) << SRAMC_PRAMECCA_CTRLID_SHIFT)) & SRAMC_PRAMECCA_CTRLID_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group SRAMC_Register_Masks */


/*!
 * @}
 */ /* end of group SRAMC_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- SRC Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SRC_Peripheral_Access_Layer SRC Peripheral Access Layer
 * @{
 */

/** SRC - Register Layout Typedef */
typedef struct {
  __IO uint32_t SW_NCF;                            /**< Software Triggered Faults Register, offset: 0x0 */
  __IO uint32_t GMAC_0_CTRL_STS;                   /**< GMAC Control Register, offset: 0x4 */
  uint8_t RESERVED_0[4];
  __I  uint32_t HSE_CM7_STATUS_REG;                /**< HSE CM7 status register, offset: 0xC */
  uint8_t RESERVED_1[24];
  __IO uint32_t CMU_STATUS_REG1;                   /**< CMUs status register 1, offset: 0x28 */
  __IO uint32_t CMU_STATUS_REG2;                   /**< CMUs status register 2, offset: 0x2C */
  __IO uint32_t FCCU_EOUT_OVERRIDE_CLEAR_REG;      /**< FCCU EOUT override clear register, offset: 0x30 */
  uint8_t RESERVED_2[32];
  __IO uint32_t GPR21;                             /**< GPR21 Register, offset: 0x54 */
  uint8_t RESERVED_3[116];
  __IO uint32_t DEBUG_CONTROL;                     /**< Debug Control Register, offset: 0xCC */
  uint8_t RESERVED_4[32];
  __IO uint32_t TIMESTAMP_CONTROL_REGISTER;        /**< Time Stamp Control Register, offset: 0xF0 */
  __IO uint32_t FLEXRAY_OS_TICK_INPUT_SELECT_REG;  /**< FlexRay OS Tick input select register, offset: 0xF4 */
} SRC_Type, *SRC_MemMapPtr;

/** Number of instances of the SRC module. */
#define SRC_INSTANCE_COUNT                       (1u)

/* SRC - Peripheral instance base addresses */
/** Peripheral SRC base address */
#define SRC_BASE                                 (0x4007C000u)
/** Peripheral SRC base pointer */
#define SRC                                      ((SRC_Type *)SRC_BASE)
/** Array initializer of SRC peripheral base addresses */
#define SRC_BASE_ADDRS                           { SRC_BASE }
/** Array initializer of SRC peripheral base pointers */
#define SRC_BASE_PTRS                            { SRC }

/* ----------------------------------------------------------------------------
   -- SRC Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SRC_Register_Masks SRC Register Masks
 * @{
 */

/*! @name SW_NCF - Software Triggered Faults Register */
/*! @{ */
#define SRC_SW_NCF_SW_NCF1_MASK                  (0x1U)
#define SRC_SW_NCF_SW_NCF1_SHIFT                 (0U)
#define SRC_SW_NCF_SW_NCF1_WIDTH                 (1U)
#define SRC_SW_NCF_SW_NCF1(x)                    (((uint32_t)(((uint32_t)(x)) << SRC_SW_NCF_SW_NCF1_SHIFT)) & SRC_SW_NCF_SW_NCF1_MASK)
#define SRC_SW_NCF_SW_NCF2_MASK                  (0x2U)
#define SRC_SW_NCF_SW_NCF2_SHIFT                 (1U)
#define SRC_SW_NCF_SW_NCF2_WIDTH                 (1U)
#define SRC_SW_NCF_SW_NCF2(x)                    (((uint32_t)(((uint32_t)(x)) << SRC_SW_NCF_SW_NCF2_SHIFT)) & SRC_SW_NCF_SW_NCF2_MASK)
#define SRC_SW_NCF_SW_NCF3_MASK                  (0x4U)
#define SRC_SW_NCF_SW_NCF3_SHIFT                 (2U)
#define SRC_SW_NCF_SW_NCF3_WIDTH                 (1U)
#define SRC_SW_NCF_SW_NCF3(x)                    (((uint32_t)(((uint32_t)(x)) << SRC_SW_NCF_SW_NCF3_SHIFT)) & SRC_SW_NCF_SW_NCF3_MASK)
#define SRC_SW_NCF_SW_NCF4_MASK                  (0x8U)
#define SRC_SW_NCF_SW_NCF4_SHIFT                 (3U)
#define SRC_SW_NCF_SW_NCF4_WIDTH                 (1U)
#define SRC_SW_NCF_SW_NCF4(x)                    (((uint32_t)(((uint32_t)(x)) << SRC_SW_NCF_SW_NCF4_SHIFT)) & SRC_SW_NCF_SW_NCF4_MASK)
#define SRC_SW_NCF_SW_NCF5_MASK                  (0x10U)
#define SRC_SW_NCF_SW_NCF5_SHIFT                 (4U)
#define SRC_SW_NCF_SW_NCF5_WIDTH                 (1U)
#define SRC_SW_NCF_SW_NCF5(x)                    (((uint32_t)(((uint32_t)(x)) << SRC_SW_NCF_SW_NCF5_SHIFT)) & SRC_SW_NCF_SW_NCF5_MASK)
#define SRC_SW_NCF_Reserved_MASK                 (0xFFFFFFE0U)
#define SRC_SW_NCF_Reserved_SHIFT                (5U)
#define SRC_SW_NCF_Reserved_WIDTH                (27U)
#define SRC_SW_NCF_Reserved(x)                   (((uint32_t)(((uint32_t)(x)) << SRC_SW_NCF_Reserved_SHIFT)) & SRC_SW_NCF_Reserved_MASK)
/*! @} */

/*! @name GMAC_0_CTRL_STS - GMAC Control Register */
/*! @{ */
#define SRC_GMAC_0_CTRL_STS_PHY_MODE_MASK        (0x1U)
#define SRC_GMAC_0_CTRL_STS_PHY_MODE_SHIFT       (0U)
#define SRC_GMAC_0_CTRL_STS_PHY_MODE_WIDTH       (1U)
#define SRC_GMAC_0_CTRL_STS_PHY_MODE(x)          (((uint32_t)(((uint32_t)(x)) << SRC_GMAC_0_CTRL_STS_PHY_MODE_SHIFT)) & SRC_GMAC_0_CTRL_STS_PHY_MODE_MASK)
#define SRC_GMAC_0_CTRL_STS_PHY_INTF_SEL_MASK    (0xEU)
#define SRC_GMAC_0_CTRL_STS_PHY_INTF_SEL_SHIFT   (1U)
#define SRC_GMAC_0_CTRL_STS_PHY_INTF_SEL_WIDTH   (3U)
#define SRC_GMAC_0_CTRL_STS_PHY_INTF_SEL(x)      (((uint32_t)(((uint32_t)(x)) << SRC_GMAC_0_CTRL_STS_PHY_INTF_SEL_SHIFT)) & SRC_GMAC_0_CTRL_STS_PHY_INTF_SEL_MASK)
#define SRC_GMAC_0_CTRL_STS_FTM0_SEL_MASK        (0x400U)
#define SRC_GMAC_0_CTRL_STS_FTM0_SEL_SHIFT       (10U)
#define SRC_GMAC_0_CTRL_STS_FTM0_SEL_WIDTH       (1U)
#define SRC_GMAC_0_CTRL_STS_FTM0_SEL(x)          (((uint32_t)(((uint32_t)(x)) << SRC_GMAC_0_CTRL_STS_FTM0_SEL_SHIFT)) & SRC_GMAC_0_CTRL_STS_FTM0_SEL_MASK)
#define SRC_GMAC_0_CTRL_STS_FTM1_SEL_MASK        (0x800U)
#define SRC_GMAC_0_CTRL_STS_FTM1_SEL_SHIFT       (11U)
#define SRC_GMAC_0_CTRL_STS_FTM1_SEL_WIDTH       (1U)
#define SRC_GMAC_0_CTRL_STS_FTM1_SEL(x)          (((uint32_t)(((uint32_t)(x)) << SRC_GMAC_0_CTRL_STS_FTM1_SEL_SHIFT)) & SRC_GMAC_0_CTRL_STS_FTM1_SEL_MASK)
/*! @} */

/*! @name HSE_CM7_STATUS_REG - HSE CM7 status register */
/*! @{ */
#define SRC_HSE_CM7_STATUS_REG_HSE_CM7_SLEEP_STAT_MASK (0x1U)
#define SRC_HSE_CM7_STATUS_REG_HSE_CM7_SLEEP_STAT_SHIFT (0U)
#define SRC_HSE_CM7_STATUS_REG_HSE_CM7_SLEEP_STAT_WIDTH (1U)
#define SRC_HSE_CM7_STATUS_REG_HSE_CM7_SLEEP_STAT(x) (((uint32_t)(((uint32_t)(x)) << SRC_HSE_CM7_STATUS_REG_HSE_CM7_SLEEP_STAT_SHIFT)) & SRC_HSE_CM7_STATUS_REG_HSE_CM7_SLEEP_STAT_MASK)
#define SRC_HSE_CM7_STATUS_REG_Reserved_MASK     (0xFFFFFFFEU)
#define SRC_HSE_CM7_STATUS_REG_Reserved_SHIFT    (1U)
#define SRC_HSE_CM7_STATUS_REG_Reserved_WIDTH    (31U)
#define SRC_HSE_CM7_STATUS_REG_Reserved(x)       (((uint32_t)(((uint32_t)(x)) << SRC_HSE_CM7_STATUS_REG_Reserved_SHIFT)) & SRC_HSE_CM7_STATUS_REG_Reserved_MASK)
/*! @} */

/*! @name CMU_STATUS_REG1 - CMUs status register 1 */
/*! @{ */
#define SRC_CMU_STATUS_REG1_FLL_FHH_STAT_MASK    (0xFFFFFFFFU)
#define SRC_CMU_STATUS_REG1_FLL_FHH_STAT_SHIFT   (0U)
#define SRC_CMU_STATUS_REG1_FLL_FHH_STAT_WIDTH   (32U)
#define SRC_CMU_STATUS_REG1_FLL_FHH_STAT(x)      (((uint32_t)(((uint32_t)(x)) << SRC_CMU_STATUS_REG1_FLL_FHH_STAT_SHIFT)) & SRC_CMU_STATUS_REG1_FLL_FHH_STAT_MASK)
/*! @} */

/*! @name CMU_STATUS_REG2 - CMUs status register 2 */
/*! @{ */
#define SRC_CMU_STATUS_REG2_FLL_FHH_STAT_MASK    (0x3FU)
#define SRC_CMU_STATUS_REG2_FLL_FHH_STAT_SHIFT   (0U)
#define SRC_CMU_STATUS_REG2_FLL_FHH_STAT_WIDTH   (6U)
#define SRC_CMU_STATUS_REG2_FLL_FHH_STAT(x)      (((uint32_t)(((uint32_t)(x)) << SRC_CMU_STATUS_REG2_FLL_FHH_STAT_SHIFT)) & SRC_CMU_STATUS_REG2_FLL_FHH_STAT_MASK)
#define SRC_CMU_STATUS_REG2_Reserved_MASK        (0xFFFFFFC0U)
#define SRC_CMU_STATUS_REG2_Reserved_SHIFT       (6U)
#define SRC_CMU_STATUS_REG2_Reserved_WIDTH       (26U)
#define SRC_CMU_STATUS_REG2_Reserved(x)          (((uint32_t)(((uint32_t)(x)) << SRC_CMU_STATUS_REG2_Reserved_SHIFT)) & SRC_CMU_STATUS_REG2_Reserved_MASK)
/*! @} */

/*! @name FCCU_EOUT_OVERRIDE_CLEAR_REG - FCCU EOUT override clear register */
/*! @{ */
#define SRC_FCCU_EOUT_OVERRIDE_CLEAR_REG_EOUT_OVERRIDE_CLEAR_MASK (0x1U)
#define SRC_FCCU_EOUT_OVERRIDE_CLEAR_REG_EOUT_OVERRIDE_CLEAR_SHIFT (0U)
#define SRC_FCCU_EOUT_OVERRIDE_CLEAR_REG_EOUT_OVERRIDE_CLEAR_WIDTH (1U)
#define SRC_FCCU_EOUT_OVERRIDE_CLEAR_REG_EOUT_OVERRIDE_CLEAR(x) (((uint32_t)(((uint32_t)(x)) << SRC_FCCU_EOUT_OVERRIDE_CLEAR_REG_EOUT_OVERRIDE_CLEAR_SHIFT)) & SRC_FCCU_EOUT_OVERRIDE_CLEAR_REG_EOUT_OVERRIDE_CLEAR_MASK)
#define SRC_FCCU_EOUT_OVERRIDE_CLEAR_REG_EOUT_OVERRIDE_DISABLE_DURING_SELFTEST_MASK (0x2U)
#define SRC_FCCU_EOUT_OVERRIDE_CLEAR_REG_EOUT_OVERRIDE_DISABLE_DURING_SELFTEST_SHIFT (1U)
#define SRC_FCCU_EOUT_OVERRIDE_CLEAR_REG_EOUT_OVERRIDE_DISABLE_DURING_SELFTEST_WIDTH (1U)
#define SRC_FCCU_EOUT_OVERRIDE_CLEAR_REG_EOUT_OVERRIDE_DISABLE_DURING_SELFTEST(x) (((uint32_t)(((uint32_t)(x)) << SRC_FCCU_EOUT_OVERRIDE_CLEAR_REG_EOUT_OVERRIDE_DISABLE_DURING_SELFTEST_SHIFT)) & SRC_FCCU_EOUT_OVERRIDE_CLEAR_REG_EOUT_OVERRIDE_DISABLE_DURING_SELFTEST_MASK)
#define SRC_FCCU_EOUT_OVERRIDE_CLEAR_REG_Reserved_MASK (0xFFFFFFFCU)
#define SRC_FCCU_EOUT_OVERRIDE_CLEAR_REG_Reserved_SHIFT (2U)
#define SRC_FCCU_EOUT_OVERRIDE_CLEAR_REG_Reserved_WIDTH (30U)
#define SRC_FCCU_EOUT_OVERRIDE_CLEAR_REG_Reserved(x) (((uint32_t)(((uint32_t)(x)) << SRC_FCCU_EOUT_OVERRIDE_CLEAR_REG_Reserved_SHIFT)) & SRC_FCCU_EOUT_OVERRIDE_CLEAR_REG_Reserved_MASK)
/*! @} */

/*! @name GPR21 - GPR21 Register */
/*! @{ */
#define SRC_GPR21_PCIE_PARITY_MODE_data_MASK     (0xFFFFFU)
#define SRC_GPR21_PCIE_PARITY_MODE_data_SHIFT    (0U)
#define SRC_GPR21_PCIE_PARITY_MODE_data_WIDTH    (20U)
#define SRC_GPR21_PCIE_PARITY_MODE_data(x)       (((uint32_t)(((uint32_t)(x)) << SRC_GPR21_PCIE_PARITY_MODE_data_SHIFT)) & SRC_GPR21_PCIE_PARITY_MODE_data_MASK)
#define SRC_GPR21_Reserved_MASK                  (0xFFF00000U)
#define SRC_GPR21_Reserved_SHIFT                 (20U)
#define SRC_GPR21_Reserved_WIDTH                 (12U)
#define SRC_GPR21_Reserved(x)                    (((uint32_t)(((uint32_t)(x)) << SRC_GPR21_Reserved_SHIFT)) & SRC_GPR21_Reserved_MASK)
/*! @} */

/*! @name DEBUG_CONTROL - Debug Control Register */
/*! @{ */
#define SRC_DEBUG_CONTROL_DEBUG_CLK_DISABLE_MASK (0x1U)
#define SRC_DEBUG_CONTROL_DEBUG_CLK_DISABLE_SHIFT (0U)
#define SRC_DEBUG_CONTROL_DEBUG_CLK_DISABLE_WIDTH (1U)
#define SRC_DEBUG_CONTROL_DEBUG_CLK_DISABLE(x)   (((uint32_t)(((uint32_t)(x)) << SRC_DEBUG_CONTROL_DEBUG_CLK_DISABLE_SHIFT)) & SRC_DEBUG_CONTROL_DEBUG_CLK_DISABLE_MASK)
#define SRC_DEBUG_CONTROL_CA53_0_DBGL1RSTDISABLE_MASK (0x2U)
#define SRC_DEBUG_CONTROL_CA53_0_DBGL1RSTDISABLE_SHIFT (1U)
#define SRC_DEBUG_CONTROL_CA53_0_DBGL1RSTDISABLE_WIDTH (1U)
#define SRC_DEBUG_CONTROL_CA53_0_DBGL1RSTDISABLE(x) (((uint32_t)(((uint32_t)(x)) << SRC_DEBUG_CONTROL_CA53_0_DBGL1RSTDISABLE_SHIFT)) & SRC_DEBUG_CONTROL_CA53_0_DBGL1RSTDISABLE_MASK)
#define SRC_DEBUG_CONTROL_CA53_1_DBGL1RSTDISABLE_MASK (0x4U)
#define SRC_DEBUG_CONTROL_CA53_1_DBGL1RSTDISABLE_SHIFT (2U)
#define SRC_DEBUG_CONTROL_CA53_1_DBGL1RSTDISABLE_WIDTH (1U)
#define SRC_DEBUG_CONTROL_CA53_1_DBGL1RSTDISABLE(x) (((uint32_t)(((uint32_t)(x)) << SRC_DEBUG_CONTROL_CA53_1_DBGL1RSTDISABLE_SHIFT)) & SRC_DEBUG_CONTROL_CA53_1_DBGL1RSTDISABLE_MASK)
#define SRC_DEBUG_CONTROL_DBG_SETUP_DONE_MASK    (0x8U)
#define SRC_DEBUG_CONTROL_DBG_SETUP_DONE_SHIFT   (3U)
#define SRC_DEBUG_CONTROL_DBG_SETUP_DONE_WIDTH   (1U)
#define SRC_DEBUG_CONTROL_DBG_SETUP_DONE(x)      (((uint32_t)(((uint32_t)(x)) << SRC_DEBUG_CONTROL_DBG_SETUP_DONE_SHIFT)) & SRC_DEBUG_CONTROL_DBG_SETUP_DONE_MASK)
#define SRC_DEBUG_CONTROL_JTAG_ACTIVE_MASK       (0x10U)
#define SRC_DEBUG_CONTROL_JTAG_ACTIVE_SHIFT      (4U)
#define SRC_DEBUG_CONTROL_JTAG_ACTIVE_WIDTH      (1U)
#define SRC_DEBUG_CONTROL_JTAG_ACTIVE(x)         (((uint32_t)(((uint32_t)(x)) << SRC_DEBUG_CONTROL_JTAG_ACTIVE_SHIFT)) & SRC_DEBUG_CONTROL_JTAG_ACTIVE_MASK)
#define SRC_DEBUG_CONTROL_CA53_0_L2RSTDISABLE_MASK (0x20U)
#define SRC_DEBUG_CONTROL_CA53_0_L2RSTDISABLE_SHIFT (5U)
#define SRC_DEBUG_CONTROL_CA53_0_L2RSTDISABLE_WIDTH (1U)
#define SRC_DEBUG_CONTROL_CA53_0_L2RSTDISABLE(x) (((uint32_t)(((uint32_t)(x)) << SRC_DEBUG_CONTROL_CA53_0_L2RSTDISABLE_SHIFT)) & SRC_DEBUG_CONTROL_CA53_0_L2RSTDISABLE_MASK)
#define SRC_DEBUG_CONTROL_CA53_1_L2RSTDISABLE_MASK (0x40U)
#define SRC_DEBUG_CONTROL_CA53_1_L2RSTDISABLE_SHIFT (6U)
#define SRC_DEBUG_CONTROL_CA53_1_L2RSTDISABLE_WIDTH (1U)
#define SRC_DEBUG_CONTROL_CA53_1_L2RSTDISABLE(x) (((uint32_t)(((uint32_t)(x)) << SRC_DEBUG_CONTROL_CA53_1_L2RSTDISABLE_SHIFT)) & SRC_DEBUG_CONTROL_CA53_1_L2RSTDISABLE_MASK)
#define SRC_DEBUG_CONTROL_DBG_RST_MSK_0a_MASK    (0x80U)
#define SRC_DEBUG_CONTROL_DBG_RST_MSK_0a_SHIFT   (7U)
#define SRC_DEBUG_CONTROL_DBG_RST_MSK_0a_WIDTH   (1U)
#define SRC_DEBUG_CONTROL_DBG_RST_MSK_0a(x)      (((uint32_t)(((uint32_t)(x)) << SRC_DEBUG_CONTROL_DBG_RST_MSK_0a_SHIFT)) & SRC_DEBUG_CONTROL_DBG_RST_MSK_0a_MASK)
#define SRC_DEBUG_CONTROL_DBG_RST_MSK_1a_MASK    (0x100U)
#define SRC_DEBUG_CONTROL_DBG_RST_MSK_1a_SHIFT   (8U)
#define SRC_DEBUG_CONTROL_DBG_RST_MSK_1a_WIDTH   (1U)
#define SRC_DEBUG_CONTROL_DBG_RST_MSK_1a(x)      (((uint32_t)(((uint32_t)(x)) << SRC_DEBUG_CONTROL_DBG_RST_MSK_1a_SHIFT)) & SRC_DEBUG_CONTROL_DBG_RST_MSK_1a_MASK)
#define SRC_DEBUG_CONTROL_READY_FOR_DEBUG_MASK   (0x200U)
#define SRC_DEBUG_CONTROL_READY_FOR_DEBUG_SHIFT  (9U)
#define SRC_DEBUG_CONTROL_READY_FOR_DEBUG_WIDTH  (1U)
#define SRC_DEBUG_CONTROL_READY_FOR_DEBUG(x)     (((uint32_t)(((uint32_t)(x)) << SRC_DEBUG_CONTROL_READY_FOR_DEBUG_SHIFT)) & SRC_DEBUG_CONTROL_READY_FOR_DEBUG_MASK)
#define SRC_DEBUG_CONTROL_Reserved_MASK          (0xFFFFFC00U)
#define SRC_DEBUG_CONTROL_Reserved_SHIFT         (10U)
#define SRC_DEBUG_CONTROL_Reserved_WIDTH         (22U)
#define SRC_DEBUG_CONTROL_Reserved(x)            (((uint32_t)(((uint32_t)(x)) << SRC_DEBUG_CONTROL_Reserved_SHIFT)) & SRC_DEBUG_CONTROL_Reserved_MASK)
/*! @} */

/*! @name TIMESTAMP_CONTROL_REGISTER - Time Stamp Control Register */
/*! @{ */
#define SRC_TIMESTAMP_CONTROL_REGISTER_CAN_TS_CNT_SEL_MASK (0x3U)
#define SRC_TIMESTAMP_CONTROL_REGISTER_CAN_TS_CNT_SEL_SHIFT (0U)
#define SRC_TIMESTAMP_CONTROL_REGISTER_CAN_TS_CNT_SEL_WIDTH (2U)
#define SRC_TIMESTAMP_CONTROL_REGISTER_CAN_TS_CNT_SEL(x) (((uint32_t)(((uint32_t)(x)) << SRC_TIMESTAMP_CONTROL_REGISTER_CAN_TS_CNT_SEL_SHIFT)) & SRC_TIMESTAMP_CONTROL_REGISTER_CAN_TS_CNT_SEL_MASK)
#define SRC_TIMESTAMP_CONTROL_REGISTER_TS_ENABLE_MASK (0x4U)
#define SRC_TIMESTAMP_CONTROL_REGISTER_TS_ENABLE_SHIFT (2U)
#define SRC_TIMESTAMP_CONTROL_REGISTER_TS_ENABLE_WIDTH (1U)
#define SRC_TIMESTAMP_CONTROL_REGISTER_TS_ENABLE(x) (((uint32_t)(((uint32_t)(x)) << SRC_TIMESTAMP_CONTROL_REGISTER_TS_ENABLE_SHIFT)) & SRC_TIMESTAMP_CONTROL_REGISTER_TS_ENABLE_MASK)
/*! @} */

/*! @name FLEXRAY_OS_TICK_INPUT_SELECT_REG - FlexRay OS Tick input select register */
/*! @{ */
#define SRC_FLEXRAY_OS_TICK_INPUT_SELECT_REG_FLEXRAY_0_STOPWATCH_MUX_SELECT_MASK (0x3U)
#define SRC_FLEXRAY_OS_TICK_INPUT_SELECT_REG_FLEXRAY_0_STOPWATCH_MUX_SELECT_SHIFT (0U)
#define SRC_FLEXRAY_OS_TICK_INPUT_SELECT_REG_FLEXRAY_0_STOPWATCH_MUX_SELECT_WIDTH (2U)
#define SRC_FLEXRAY_OS_TICK_INPUT_SELECT_REG_FLEXRAY_0_STOPWATCH_MUX_SELECT(x) (((uint32_t)(((uint32_t)(x)) << SRC_FLEXRAY_OS_TICK_INPUT_SELECT_REG_FLEXRAY_0_STOPWATCH_MUX_SELECT_SHIFT)) & SRC_FLEXRAY_OS_TICK_INPUT_SELECT_REG_FLEXRAY_0_STOPWATCH_MUX_SELECT_MASK)
#define SRC_FLEXRAY_OS_TICK_INPUT_SELECT_REG_FLEXRAY_1_STOPWATCH_MUX_SELECT_MASK (0xCU)
#define SRC_FLEXRAY_OS_TICK_INPUT_SELECT_REG_FLEXRAY_1_STOPWATCH_MUX_SELECT_SHIFT (2U)
#define SRC_FLEXRAY_OS_TICK_INPUT_SELECT_REG_FLEXRAY_1_STOPWATCH_MUX_SELECT_WIDTH (2U)
#define SRC_FLEXRAY_OS_TICK_INPUT_SELECT_REG_FLEXRAY_1_STOPWATCH_MUX_SELECT(x) (((uint32_t)(((uint32_t)(x)) << SRC_FLEXRAY_OS_TICK_INPUT_SELECT_REG_FLEXRAY_1_STOPWATCH_MUX_SELECT_SHIFT)) & SRC_FLEXRAY_OS_TICK_INPUT_SELECT_REG_FLEXRAY_1_STOPWATCH_MUX_SELECT_MASK)
#define SRC_FLEXRAY_OS_TICK_INPUT_SELECT_REG_Reserved_MASK (0xFFFFFFF0U)
#define SRC_FLEXRAY_OS_TICK_INPUT_SELECT_REG_Reserved_SHIFT (4U)
#define SRC_FLEXRAY_OS_TICK_INPUT_SELECT_REG_Reserved_WIDTH (28U)
#define SRC_FLEXRAY_OS_TICK_INPUT_SELECT_REG_Reserved(x) (((uint32_t)(((uint32_t)(x)) << SRC_FLEXRAY_OS_TICK_INPUT_SELECT_REG_Reserved_SHIFT)) & SRC_FLEXRAY_OS_TICK_INPUT_SELECT_REG_Reserved_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group SRC_Register_Masks */


/*!
 * @}
 */ /* end of group SRC_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- STCU2 Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup STCU2_Peripheral_Access_Layer STCU2 Peripheral Access Layer
 * @{
 */

/** STCU2 - Size of Registers Arrays */
#define STCU2_LBSSW_COUNT                         1u
#define STCU2_LBESW_COUNT                         1u
#define STCU2_LBUFM_COUNT                         1u
#define STCU2_MBSSW_COUNT                         3u
#define STCU2_MBESW_COUNT                         3u
#define STCU2_MBUFM_COUNT                         3u
#define STCU2_LB_COUNT                            60u
#define STCU2_MB_CTRL_COUNT                       110u

/** STCU2 - Register Layout Typedef */
typedef struct {
  uint8_t RESERVED_0[4];
  __IO uint32_t RUNSW;                             /**< STCU2 Run Software, offset: 0x4 */
  __O  uint32_t SKC;                               /**< STCU2 SK Code, offset: 0x8 */
  __IO uint32_t CFG;                               /**< STCU2 Configuration, offset: 0xC */
  uint8_t RESERVED_1[4];
  __IO uint32_t WDG;                               /**< STCU2 Watchdog Granularity, offset: 0x14 */
  __IO uint32_t INT_FLG;                           /**< STCU2 Interrupt Flag, offset: 0x18 */
  uint8_t RESERVED_2[8];
  __IO uint32_t ERR_STAT;                          /**< STCU2 Error, offset: 0x24 */
  __IO uint32_t ERR_FM;                            /**< STCU2 Error FM, offset: 0x28 */
  uint8_t RESERVED_3[32];
  __I  uint32_t LBSSW[STCU2_LBSSW_COUNT];          /**< STCU2 Online LBIST Status, array offset: 0x4C, array step: 0x4 */
  __I  uint32_t LBSSW1;                            /**< STCU2 Online LBIST Status, offset: 0x50 */
  uint8_t RESERVED_4[8];
  __I  uint32_t LBESW[STCU2_LBESW_COUNT];          /**< STCU2 Online LBIST End Flag, array offset: 0x5C, array step: 0x4 */
  __I  uint32_t LBESW1;                            /**< STCU2 Online LBIST End Flag, offset: 0x60 */
  uint8_t RESERVED_5[12];
  __IO uint32_t LBRMSW1;                           /**< STCU2 Online LBIST Reset Management, offset: 0x70 */
  uint8_t RESERVED_6[8];
  __IO uint32_t LBUFM[STCU2_LBUFM_COUNT];          /**< STCU2 Online LBIST Unrecoverable FM, array offset: 0x7C, array step: 0x4 */
  __IO uint32_t LBUFM1;                            /**< STCU2 Online LBIST Unrecoverable FM, offset: 0x80 */
  uint8_t RESERVED_7[136];
  __I  uint32_t MBSSW[STCU2_MBSSW_COUNT];          /**< STCU2 Online MBIST Status, array offset: 0x10C, array step: 0x4 */
  __I  uint32_t MBSSW3;                            /**< STCU2 Online MBIST Status, offset: 0x118 */
  uint8_t RESERVED_8[48];
  __I  uint32_t MBESW[STCU2_MBESW_COUNT];          /**< STCU2 Online MBIST End Flag, array offset: 0x14C, array step: 0x4 */
  __I  uint32_t MBESW3;                            /**< STCU2 Online MBIST End Flag, offset: 0x158 */
  uint8_t RESERVED_9[48];
  __IO uint32_t MBUFM[STCU2_MBUFM_COUNT];          /**< STCU2 MBIST Unrecoverable FM, array offset: 0x18C, array step: 0x4 */
  __IO uint32_t MBUFM3;                            /**< STCU2 MBIST Unrecoverable FM, offset: 0x198 */
  uint8_t RESERVED_10[100];
  struct {                                         /* offset: 0x200, array step: 0x40 */
    __IO uint32_t CTRL;                              /**< STCU2 LBIST Control, array offset: 0x200, array step: 0x40 */
    __IO uint32_t PCS;                               /**< STCU2 LBIST PC Stop, array offset: 0x204, array step: 0x40 */
    uint8_t RESERVED_0[24];
    __IO uint32_t MISRELSW;                          /**< STCU2 Online LBIST MISR Expected Low, array offset: 0x220, array step: 0x40 */
    __IO uint32_t MISREHSW;                          /**< STCU2 Online LBIST MISR Expected High, array offset: 0x224, array step: 0x40 */
    __I  uint32_t MISRRLSW;                          /**< STCU2 Online LBIST MISR Read Low, array offset: 0x228, array step: 0x40 */
    __I  uint32_t MISRRHSW;                          /**< STCU2 Online LBIST MISR Read High, array offset: 0x22C, array step: 0x40 */
    uint8_t RESERVED_1[16];
  } LB[STCU2_LB_COUNT];
  uint8_t RESERVED_11[4352];
  __IO uint32_t ALGOSEL;                           /**< STCU2 Algorithm Select, offset: 0x2200 */
  uint8_t RESERVED_12[8];
  __IO uint32_t STGGR;                             /**< STCU2 MBIST Stagger, offset: 0x220C */
  __IO uint32_t BSTART;                            /**< STCU2 BIST Start, offset: 0x2210 */
  __IO uint32_t MB_CTRL[STCU2_MB_CTRL_COUNT];      /**< STCU2 MBIST Control, array offset: 0x2214, array step: 0x4 */
} STCU2_Type, *STCU2_MemMapPtr;

/** Number of instances of the STCU2 module. */
#define STCU2_INSTANCE_COUNT                     (1u)

/* STCU2 - Peripheral instance base addresses */
/** Peripheral STCU2 base address */
#define STCU2_BASE                               (0x40028000u)
/** Peripheral STCU2 base pointer */
#define STCU2                                    ((STCU2_Type *)STCU2_BASE)
/** Array initializer of STCU2 peripheral base addresses */
#define STCU2_BASE_ADDRS                         { STCU2_BASE }
/** Array initializer of STCU2 peripheral base pointers */
#define STCU2_BASE_PTRS                          { STCU2 }

/* ----------------------------------------------------------------------------
   -- STCU2 Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup STCU2_Register_Masks STCU2 Register Masks
 * @{
 */

/*! @name RUNSW - STCU2 Run Software */
/*! @{ */
#define STCU2_RUNSW_RUNSW_MASK                   (0x1U)
#define STCU2_RUNSW_RUNSW_SHIFT                  (0U)
#define STCU2_RUNSW_RUNSW_WIDTH                  (1U)
#define STCU2_RUNSW_RUNSW(x)                     (((uint32_t)(((uint32_t)(x)) << STCU2_RUNSW_RUNSW_SHIFT)) & STCU2_RUNSW_RUNSW_MASK)
#define STCU2_RUNSW_RUNSW_ABORT_MASK             (0x2U)
#define STCU2_RUNSW_RUNSW_ABORT_SHIFT            (1U)
#define STCU2_RUNSW_RUNSW_ABORT_WIDTH            (1U)
#define STCU2_RUNSW_RUNSW_ABORT(x)               (((uint32_t)(((uint32_t)(x)) << STCU2_RUNSW_RUNSW_ABORT_SHIFT)) & STCU2_RUNSW_RUNSW_ABORT_MASK)
#define STCU2_RUNSW_LBIE_MASK                    (0x400U)
#define STCU2_RUNSW_LBIE_SHIFT                   (10U)
#define STCU2_RUNSW_LBIE_WIDTH                   (1U)
#define STCU2_RUNSW_LBIE(x)                      (((uint32_t)(((uint32_t)(x)) << STCU2_RUNSW_LBIE_SHIFT)) & STCU2_RUNSW_LBIE_MASK)
#define STCU2_RUNSW_MBIE_MASK                    (0x800U)
#define STCU2_RUNSW_MBIE_SHIFT                   (11U)
#define STCU2_RUNSW_MBIE_WIDTH                   (1U)
#define STCU2_RUNSW_MBIE(x)                      (((uint32_t)(((uint32_t)(x)) << STCU2_RUNSW_MBIE_SHIFT)) & STCU2_RUNSW_MBIE_MASK)
/*! @} */

/*! @name SKC - STCU2 SK Code */
/*! @{ */
#define STCU2_SKC_SKC_MASK                       (0xFFFFFFFFU)
#define STCU2_SKC_SKC_SHIFT                      (0U)
#define STCU2_SKC_SKC_WIDTH                      (32U)
#define STCU2_SKC_SKC(x)                         (((uint32_t)(((uint32_t)(x)) << STCU2_SKC_SKC_SHIFT)) & STCU2_SKC_SKC_MASK)
/*! @} */

/*! @name CFG - STCU2 Configuration */
/*! @{ */
#define STCU2_CFG_CLK_CFG_MASK                   (0x7U)
#define STCU2_CFG_CLK_CFG_SHIFT                  (0U)
#define STCU2_CFG_CLK_CFG_WIDTH                  (3U)
#define STCU2_CFG_CLK_CFG(x)                     (((uint32_t)(((uint32_t)(x)) << STCU2_CFG_CLK_CFG_SHIFT)) & STCU2_CFG_CLK_CFG_MASK)
#define STCU2_CFG_WRP_MASK                       (0x100U)
#define STCU2_CFG_WRP_SHIFT                      (8U)
#define STCU2_CFG_WRP_WIDTH                      (1U)
#define STCU2_CFG_WRP(x)                         (((uint32_t)(((uint32_t)(x)) << STCU2_CFG_WRP_SHIFT)) & STCU2_CFG_WRP_MASK)
#define STCU2_CFG_LB_DELAY_MASK                  (0x1FE000U)
#define STCU2_CFG_LB_DELAY_SHIFT                 (13U)
#define STCU2_CFG_LB_DELAY_WIDTH                 (8U)
#define STCU2_CFG_LB_DELAY(x)                    (((uint32_t)(((uint32_t)(x)) << STCU2_CFG_LB_DELAY_SHIFT)) & STCU2_CFG_LB_DELAY_MASK)
#define STCU2_CFG_PTR_MASK                       (0x7FE00000U)
#define STCU2_CFG_PTR_SHIFT                      (21U)
#define STCU2_CFG_PTR_WIDTH                      (10U)
#define STCU2_CFG_PTR(x)                         (((uint32_t)(((uint32_t)(x)) << STCU2_CFG_PTR_SHIFT)) & STCU2_CFG_PTR_MASK)
/*! @} */

/*! @name WDG - STCU2 Watchdog Granularity */
/*! @{ */
#define STCU2_WDG_WDGEOC_MASK                    (0xFFFFFFFFU)
#define STCU2_WDG_WDGEOC_SHIFT                   (0U)
#define STCU2_WDG_WDGEOC_WIDTH                   (32U)
#define STCU2_WDG_WDGEOC(x)                      (((uint32_t)(((uint32_t)(x)) << STCU2_WDG_WDGEOC_SHIFT)) & STCU2_WDG_WDGEOC_MASK)
/*! @} */

/*! @name INT_FLG - STCU2 Interrupt Flag */
/*! @{ */
#define STCU2_INT_FLG_LBIFLG_MASK                (0x1U)
#define STCU2_INT_FLG_LBIFLG_SHIFT               (0U)
#define STCU2_INT_FLG_LBIFLG_WIDTH               (1U)
#define STCU2_INT_FLG_LBIFLG(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_INT_FLG_LBIFLG_SHIFT)) & STCU2_INT_FLG_LBIFLG_MASK)
#define STCU2_INT_FLG_MBIFLG_MASK                (0x2U)
#define STCU2_INT_FLG_MBIFLG_SHIFT               (1U)
#define STCU2_INT_FLG_MBIFLG_WIDTH               (1U)
#define STCU2_INT_FLG_MBIFLG(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_INT_FLG_MBIFLG_SHIFT)) & STCU2_INT_FLG_MBIFLG_MASK)
/*! @} */

/*! @name ERR_STAT - STCU2 Error */
/*! @{ */
#define STCU2_ERR_STAT_RFSF_MASK                 (0x100U)
#define STCU2_ERR_STAT_RFSF_SHIFT                (8U)
#define STCU2_ERR_STAT_RFSF_WIDTH                (1U)
#define STCU2_ERR_STAT_RFSF(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_ERR_STAT_RFSF_SHIFT)) & STCU2_ERR_STAT_RFSF_MASK)
#define STCU2_ERR_STAT_UFSF_MASK                 (0x200U)
#define STCU2_ERR_STAT_UFSF_SHIFT                (9U)
#define STCU2_ERR_STAT_UFSF_WIDTH                (1U)
#define STCU2_ERR_STAT_UFSF(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_ERR_STAT_UFSF_SHIFT)) & STCU2_ERR_STAT_UFSF_MASK)
#define STCU2_ERR_STAT_INVPSW_MASK               (0x10000U)
#define STCU2_ERR_STAT_INVPSW_SHIFT              (16U)
#define STCU2_ERR_STAT_INVPSW_WIDTH              (1U)
#define STCU2_ERR_STAT_INVPSW(x)                 (((uint32_t)(((uint32_t)(x)) << STCU2_ERR_STAT_INVPSW_SHIFT)) & STCU2_ERR_STAT_INVPSW_MASK)
#define STCU2_ERR_STAT_ENGESW_MASK               (0x20000U)
#define STCU2_ERR_STAT_ENGESW_SHIFT              (17U)
#define STCU2_ERR_STAT_ENGESW_WIDTH              (1U)
#define STCU2_ERR_STAT_ENGESW(x)                 (((uint32_t)(((uint32_t)(x)) << STCU2_ERR_STAT_ENGESW_SHIFT)) & STCU2_ERR_STAT_ENGESW_MASK)
#define STCU2_ERR_STAT_WDTOSW_MASK               (0x80000U)
#define STCU2_ERR_STAT_WDTOSW_SHIFT              (19U)
#define STCU2_ERR_STAT_WDTOSW_WIDTH              (1U)
#define STCU2_ERR_STAT_WDTOSW(x)                 (((uint32_t)(((uint32_t)(x)) << STCU2_ERR_STAT_WDTOSW_SHIFT)) & STCU2_ERR_STAT_WDTOSW_MASK)
#define STCU2_ERR_STAT_ABORTSW_MASK              (0x1000000U)
#define STCU2_ERR_STAT_ABORTSW_SHIFT             (24U)
#define STCU2_ERR_STAT_ABORTSW_WIDTH             (1U)
#define STCU2_ERR_STAT_ABORTSW(x)                (((uint32_t)(((uint32_t)(x)) << STCU2_ERR_STAT_ABORTSW_SHIFT)) & STCU2_ERR_STAT_ABORTSW_MASK)
/*! @} */

/*! @name ERR_FM - STCU2 Error FM */
/*! @{ */
#define STCU2_ERR_FM_INVPUFM_MASK                (0x1U)
#define STCU2_ERR_FM_INVPUFM_SHIFT               (0U)
#define STCU2_ERR_FM_INVPUFM_WIDTH               (1U)
#define STCU2_ERR_FM_INVPUFM(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_ERR_FM_INVPUFM_SHIFT)) & STCU2_ERR_FM_INVPUFM_MASK)
#define STCU2_ERR_FM_ENGEUFM_MASK                (0x2U)
#define STCU2_ERR_FM_ENGEUFM_SHIFT               (1U)
#define STCU2_ERR_FM_ENGEUFM_WIDTH               (1U)
#define STCU2_ERR_FM_ENGEUFM(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_ERR_FM_ENGEUFM_SHIFT)) & STCU2_ERR_FM_ENGEUFM_MASK)
#define STCU2_ERR_FM_WDTOUFM_MASK                (0x8U)
#define STCU2_ERR_FM_WDTOUFM_SHIFT               (3U)
#define STCU2_ERR_FM_WDTOUFM_WIDTH               (1U)
#define STCU2_ERR_FM_WDTOUFM(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_ERR_FM_WDTOUFM_SHIFT)) & STCU2_ERR_FM_WDTOUFM_MASK)
/*! @} */

/*! @name LBSSW - STCU2 Online LBIST Status */
/*! @{ */
#define STCU2_LBSSW_LBSSW0_MASK                  (0x1U)
#define STCU2_LBSSW_LBSSW0_SHIFT                 (0U)
#define STCU2_LBSSW_LBSSW0_WIDTH                 (1U)
#define STCU2_LBSSW_LBSSW0(x)                    (((uint32_t)(((uint32_t)(x)) << STCU2_LBSSW_LBSSW0_SHIFT)) & STCU2_LBSSW_LBSSW0_MASK)
#define STCU2_LBSSW_LBSSW1_MASK                  (0x2U)
#define STCU2_LBSSW_LBSSW1_SHIFT                 (1U)
#define STCU2_LBSSW_LBSSW1_WIDTH                 (1U)
#define STCU2_LBSSW_LBSSW1(x)                    (((uint32_t)(((uint32_t)(x)) << STCU2_LBSSW_LBSSW1_SHIFT)) & STCU2_LBSSW_LBSSW1_MASK)
#define STCU2_LBSSW_LBSSW2_MASK                  (0x4U)
#define STCU2_LBSSW_LBSSW2_SHIFT                 (2U)
#define STCU2_LBSSW_LBSSW2_WIDTH                 (1U)
#define STCU2_LBSSW_LBSSW2(x)                    (((uint32_t)(((uint32_t)(x)) << STCU2_LBSSW_LBSSW2_SHIFT)) & STCU2_LBSSW_LBSSW2_MASK)
#define STCU2_LBSSW_LBSSW3_MASK                  (0x8U)
#define STCU2_LBSSW_LBSSW3_SHIFT                 (3U)
#define STCU2_LBSSW_LBSSW3_WIDTH                 (1U)
#define STCU2_LBSSW_LBSSW3(x)                    (((uint32_t)(((uint32_t)(x)) << STCU2_LBSSW_LBSSW3_SHIFT)) & STCU2_LBSSW_LBSSW3_MASK)
#define STCU2_LBSSW_LBSSW4_MASK                  (0x10U)
#define STCU2_LBSSW_LBSSW4_SHIFT                 (4U)
#define STCU2_LBSSW_LBSSW4_WIDTH                 (1U)
#define STCU2_LBSSW_LBSSW4(x)                    (((uint32_t)(((uint32_t)(x)) << STCU2_LBSSW_LBSSW4_SHIFT)) & STCU2_LBSSW_LBSSW4_MASK)
#define STCU2_LBSSW_LBSSW5_MASK                  (0x20U)
#define STCU2_LBSSW_LBSSW5_SHIFT                 (5U)
#define STCU2_LBSSW_LBSSW5_WIDTH                 (1U)
#define STCU2_LBSSW_LBSSW5(x)                    (((uint32_t)(((uint32_t)(x)) << STCU2_LBSSW_LBSSW5_SHIFT)) & STCU2_LBSSW_LBSSW5_MASK)
#define STCU2_LBSSW_LBSSW6_MASK                  (0x40U)
#define STCU2_LBSSW_LBSSW6_SHIFT                 (6U)
#define STCU2_LBSSW_LBSSW6_WIDTH                 (1U)
#define STCU2_LBSSW_LBSSW6(x)                    (((uint32_t)(((uint32_t)(x)) << STCU2_LBSSW_LBSSW6_SHIFT)) & STCU2_LBSSW_LBSSW6_MASK)
#define STCU2_LBSSW_LBSSW7_MASK                  (0x80U)
#define STCU2_LBSSW_LBSSW7_SHIFT                 (7U)
#define STCU2_LBSSW_LBSSW7_WIDTH                 (1U)
#define STCU2_LBSSW_LBSSW7(x)                    (((uint32_t)(((uint32_t)(x)) << STCU2_LBSSW_LBSSW7_SHIFT)) & STCU2_LBSSW_LBSSW7_MASK)
#define STCU2_LBSSW_LBSSW8_MASK                  (0x100U)
#define STCU2_LBSSW_LBSSW8_SHIFT                 (8U)
#define STCU2_LBSSW_LBSSW8_WIDTH                 (1U)
#define STCU2_LBSSW_LBSSW8(x)                    (((uint32_t)(((uint32_t)(x)) << STCU2_LBSSW_LBSSW8_SHIFT)) & STCU2_LBSSW_LBSSW8_MASK)
#define STCU2_LBSSW_LBSSW9_MASK                  (0x200U)
#define STCU2_LBSSW_LBSSW9_SHIFT                 (9U)
#define STCU2_LBSSW_LBSSW9_WIDTH                 (1U)
#define STCU2_LBSSW_LBSSW9(x)                    (((uint32_t)(((uint32_t)(x)) << STCU2_LBSSW_LBSSW9_SHIFT)) & STCU2_LBSSW_LBSSW9_MASK)
#define STCU2_LBSSW_LBSSW10_MASK                 (0x400U)
#define STCU2_LBSSW_LBSSW10_SHIFT                (10U)
#define STCU2_LBSSW_LBSSW10_WIDTH                (1U)
#define STCU2_LBSSW_LBSSW10(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_LBSSW_LBSSW10_SHIFT)) & STCU2_LBSSW_LBSSW10_MASK)
#define STCU2_LBSSW_LBSSW11_MASK                 (0x800U)
#define STCU2_LBSSW_LBSSW11_SHIFT                (11U)
#define STCU2_LBSSW_LBSSW11_WIDTH                (1U)
#define STCU2_LBSSW_LBSSW11(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_LBSSW_LBSSW11_SHIFT)) & STCU2_LBSSW_LBSSW11_MASK)
#define STCU2_LBSSW_LBSSW12_MASK                 (0x1000U)
#define STCU2_LBSSW_LBSSW12_SHIFT                (12U)
#define STCU2_LBSSW_LBSSW12_WIDTH                (1U)
#define STCU2_LBSSW_LBSSW12(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_LBSSW_LBSSW12_SHIFT)) & STCU2_LBSSW_LBSSW12_MASK)
#define STCU2_LBSSW_LBSSW13_MASK                 (0x2000U)
#define STCU2_LBSSW_LBSSW13_SHIFT                (13U)
#define STCU2_LBSSW_LBSSW13_WIDTH                (1U)
#define STCU2_LBSSW_LBSSW13(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_LBSSW_LBSSW13_SHIFT)) & STCU2_LBSSW_LBSSW13_MASK)
#define STCU2_LBSSW_LBSSW14_MASK                 (0x4000U)
#define STCU2_LBSSW_LBSSW14_SHIFT                (14U)
#define STCU2_LBSSW_LBSSW14_WIDTH                (1U)
#define STCU2_LBSSW_LBSSW14(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_LBSSW_LBSSW14_SHIFT)) & STCU2_LBSSW_LBSSW14_MASK)
#define STCU2_LBSSW_LBSSW15_MASK                 (0x8000U)
#define STCU2_LBSSW_LBSSW15_SHIFT                (15U)
#define STCU2_LBSSW_LBSSW15_WIDTH                (1U)
#define STCU2_LBSSW_LBSSW15(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_LBSSW_LBSSW15_SHIFT)) & STCU2_LBSSW_LBSSW15_MASK)
#define STCU2_LBSSW_LBSSW16_MASK                 (0x10000U)
#define STCU2_LBSSW_LBSSW16_SHIFT                (16U)
#define STCU2_LBSSW_LBSSW16_WIDTH                (1U)
#define STCU2_LBSSW_LBSSW16(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_LBSSW_LBSSW16_SHIFT)) & STCU2_LBSSW_LBSSW16_MASK)
#define STCU2_LBSSW_LBSSW17_MASK                 (0x20000U)
#define STCU2_LBSSW_LBSSW17_SHIFT                (17U)
#define STCU2_LBSSW_LBSSW17_WIDTH                (1U)
#define STCU2_LBSSW_LBSSW17(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_LBSSW_LBSSW17_SHIFT)) & STCU2_LBSSW_LBSSW17_MASK)
#define STCU2_LBSSW_LBSSW18_MASK                 (0x40000U)
#define STCU2_LBSSW_LBSSW18_SHIFT                (18U)
#define STCU2_LBSSW_LBSSW18_WIDTH                (1U)
#define STCU2_LBSSW_LBSSW18(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_LBSSW_LBSSW18_SHIFT)) & STCU2_LBSSW_LBSSW18_MASK)
#define STCU2_LBSSW_LBSSW19_MASK                 (0x80000U)
#define STCU2_LBSSW_LBSSW19_SHIFT                (19U)
#define STCU2_LBSSW_LBSSW19_WIDTH                (1U)
#define STCU2_LBSSW_LBSSW19(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_LBSSW_LBSSW19_SHIFT)) & STCU2_LBSSW_LBSSW19_MASK)
#define STCU2_LBSSW_LBSSW20_MASK                 (0x100000U)
#define STCU2_LBSSW_LBSSW20_SHIFT                (20U)
#define STCU2_LBSSW_LBSSW20_WIDTH                (1U)
#define STCU2_LBSSW_LBSSW20(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_LBSSW_LBSSW20_SHIFT)) & STCU2_LBSSW_LBSSW20_MASK)
#define STCU2_LBSSW_LBSSW21_MASK                 (0x200000U)
#define STCU2_LBSSW_LBSSW21_SHIFT                (21U)
#define STCU2_LBSSW_LBSSW21_WIDTH                (1U)
#define STCU2_LBSSW_LBSSW21(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_LBSSW_LBSSW21_SHIFT)) & STCU2_LBSSW_LBSSW21_MASK)
#define STCU2_LBSSW_LBSSW22_MASK                 (0x400000U)
#define STCU2_LBSSW_LBSSW22_SHIFT                (22U)
#define STCU2_LBSSW_LBSSW22_WIDTH                (1U)
#define STCU2_LBSSW_LBSSW22(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_LBSSW_LBSSW22_SHIFT)) & STCU2_LBSSW_LBSSW22_MASK)
#define STCU2_LBSSW_LBSSW23_MASK                 (0x800000U)
#define STCU2_LBSSW_LBSSW23_SHIFT                (23U)
#define STCU2_LBSSW_LBSSW23_WIDTH                (1U)
#define STCU2_LBSSW_LBSSW23(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_LBSSW_LBSSW23_SHIFT)) & STCU2_LBSSW_LBSSW23_MASK)
#define STCU2_LBSSW_LBSSW24_MASK                 (0x1000000U)
#define STCU2_LBSSW_LBSSW24_SHIFT                (24U)
#define STCU2_LBSSW_LBSSW24_WIDTH                (1U)
#define STCU2_LBSSW_LBSSW24(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_LBSSW_LBSSW24_SHIFT)) & STCU2_LBSSW_LBSSW24_MASK)
#define STCU2_LBSSW_LBSSW25_MASK                 (0x2000000U)
#define STCU2_LBSSW_LBSSW25_SHIFT                (25U)
#define STCU2_LBSSW_LBSSW25_WIDTH                (1U)
#define STCU2_LBSSW_LBSSW25(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_LBSSW_LBSSW25_SHIFT)) & STCU2_LBSSW_LBSSW25_MASK)
#define STCU2_LBSSW_LBSSW26_MASK                 (0x4000000U)
#define STCU2_LBSSW_LBSSW26_SHIFT                (26U)
#define STCU2_LBSSW_LBSSW26_WIDTH                (1U)
#define STCU2_LBSSW_LBSSW26(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_LBSSW_LBSSW26_SHIFT)) & STCU2_LBSSW_LBSSW26_MASK)
#define STCU2_LBSSW_LBSSW27_MASK                 (0x8000000U)
#define STCU2_LBSSW_LBSSW27_SHIFT                (27U)
#define STCU2_LBSSW_LBSSW27_WIDTH                (1U)
#define STCU2_LBSSW_LBSSW27(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_LBSSW_LBSSW27_SHIFT)) & STCU2_LBSSW_LBSSW27_MASK)
#define STCU2_LBSSW_LBSSW28_MASK                 (0x10000000U)
#define STCU2_LBSSW_LBSSW28_SHIFT                (28U)
#define STCU2_LBSSW_LBSSW28_WIDTH                (1U)
#define STCU2_LBSSW_LBSSW28(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_LBSSW_LBSSW28_SHIFT)) & STCU2_LBSSW_LBSSW28_MASK)
#define STCU2_LBSSW_LBSSW29_MASK                 (0x20000000U)
#define STCU2_LBSSW_LBSSW29_SHIFT                (29U)
#define STCU2_LBSSW_LBSSW29_WIDTH                (1U)
#define STCU2_LBSSW_LBSSW29(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_LBSSW_LBSSW29_SHIFT)) & STCU2_LBSSW_LBSSW29_MASK)
#define STCU2_LBSSW_LBSSW30_MASK                 (0x40000000U)
#define STCU2_LBSSW_LBSSW30_SHIFT                (30U)
#define STCU2_LBSSW_LBSSW30_WIDTH                (1U)
#define STCU2_LBSSW_LBSSW30(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_LBSSW_LBSSW30_SHIFT)) & STCU2_LBSSW_LBSSW30_MASK)
#define STCU2_LBSSW_LBSSW31_MASK                 (0x80000000U)
#define STCU2_LBSSW_LBSSW31_SHIFT                (31U)
#define STCU2_LBSSW_LBSSW31_WIDTH                (1U)
#define STCU2_LBSSW_LBSSW31(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_LBSSW_LBSSW31_SHIFT)) & STCU2_LBSSW_LBSSW31_MASK)
/*! @} */

/*! @name LBSSW1 - STCU2 Online LBIST Status */
/*! @{ */
#define STCU2_LBSSW1_LBSSW32_MASK                (0x1U)
#define STCU2_LBSSW1_LBSSW32_SHIFT               (0U)
#define STCU2_LBSSW1_LBSSW32_WIDTH               (1U)
#define STCU2_LBSSW1_LBSSW32(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBSSW1_LBSSW32_SHIFT)) & STCU2_LBSSW1_LBSSW32_MASK)
#define STCU2_LBSSW1_LBSSW33_MASK                (0x2U)
#define STCU2_LBSSW1_LBSSW33_SHIFT               (1U)
#define STCU2_LBSSW1_LBSSW33_WIDTH               (1U)
#define STCU2_LBSSW1_LBSSW33(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBSSW1_LBSSW33_SHIFT)) & STCU2_LBSSW1_LBSSW33_MASK)
#define STCU2_LBSSW1_LBSSW34_MASK                (0x4U)
#define STCU2_LBSSW1_LBSSW34_SHIFT               (2U)
#define STCU2_LBSSW1_LBSSW34_WIDTH               (1U)
#define STCU2_LBSSW1_LBSSW34(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBSSW1_LBSSW34_SHIFT)) & STCU2_LBSSW1_LBSSW34_MASK)
#define STCU2_LBSSW1_LBSSW35_MASK                (0x8U)
#define STCU2_LBSSW1_LBSSW35_SHIFT               (3U)
#define STCU2_LBSSW1_LBSSW35_WIDTH               (1U)
#define STCU2_LBSSW1_LBSSW35(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBSSW1_LBSSW35_SHIFT)) & STCU2_LBSSW1_LBSSW35_MASK)
#define STCU2_LBSSW1_LBSSW36_MASK                (0x10U)
#define STCU2_LBSSW1_LBSSW36_SHIFT               (4U)
#define STCU2_LBSSW1_LBSSW36_WIDTH               (1U)
#define STCU2_LBSSW1_LBSSW36(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBSSW1_LBSSW36_SHIFT)) & STCU2_LBSSW1_LBSSW36_MASK)
#define STCU2_LBSSW1_LBSSW37_MASK                (0x20U)
#define STCU2_LBSSW1_LBSSW37_SHIFT               (5U)
#define STCU2_LBSSW1_LBSSW37_WIDTH               (1U)
#define STCU2_LBSSW1_LBSSW37(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBSSW1_LBSSW37_SHIFT)) & STCU2_LBSSW1_LBSSW37_MASK)
#define STCU2_LBSSW1_LBSSW38_MASK                (0x40U)
#define STCU2_LBSSW1_LBSSW38_SHIFT               (6U)
#define STCU2_LBSSW1_LBSSW38_WIDTH               (1U)
#define STCU2_LBSSW1_LBSSW38(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBSSW1_LBSSW38_SHIFT)) & STCU2_LBSSW1_LBSSW38_MASK)
#define STCU2_LBSSW1_LBSSW39_MASK                (0x80U)
#define STCU2_LBSSW1_LBSSW39_SHIFT               (7U)
#define STCU2_LBSSW1_LBSSW39_WIDTH               (1U)
#define STCU2_LBSSW1_LBSSW39(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBSSW1_LBSSW39_SHIFT)) & STCU2_LBSSW1_LBSSW39_MASK)
#define STCU2_LBSSW1_LBSSW40_MASK                (0x100U)
#define STCU2_LBSSW1_LBSSW40_SHIFT               (8U)
#define STCU2_LBSSW1_LBSSW40_WIDTH               (1U)
#define STCU2_LBSSW1_LBSSW40(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBSSW1_LBSSW40_SHIFT)) & STCU2_LBSSW1_LBSSW40_MASK)
#define STCU2_LBSSW1_LBSSW41_MASK                (0x200U)
#define STCU2_LBSSW1_LBSSW41_SHIFT               (9U)
#define STCU2_LBSSW1_LBSSW41_WIDTH               (1U)
#define STCU2_LBSSW1_LBSSW41(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBSSW1_LBSSW41_SHIFT)) & STCU2_LBSSW1_LBSSW41_MASK)
#define STCU2_LBSSW1_LBSSW42_MASK                (0x400U)
#define STCU2_LBSSW1_LBSSW42_SHIFT               (10U)
#define STCU2_LBSSW1_LBSSW42_WIDTH               (1U)
#define STCU2_LBSSW1_LBSSW42(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBSSW1_LBSSW42_SHIFT)) & STCU2_LBSSW1_LBSSW42_MASK)
#define STCU2_LBSSW1_LBSSW43_MASK                (0x800U)
#define STCU2_LBSSW1_LBSSW43_SHIFT               (11U)
#define STCU2_LBSSW1_LBSSW43_WIDTH               (1U)
#define STCU2_LBSSW1_LBSSW43(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBSSW1_LBSSW43_SHIFT)) & STCU2_LBSSW1_LBSSW43_MASK)
#define STCU2_LBSSW1_LBSSW44_MASK                (0x1000U)
#define STCU2_LBSSW1_LBSSW44_SHIFT               (12U)
#define STCU2_LBSSW1_LBSSW44_WIDTH               (1U)
#define STCU2_LBSSW1_LBSSW44(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBSSW1_LBSSW44_SHIFT)) & STCU2_LBSSW1_LBSSW44_MASK)
#define STCU2_LBSSW1_LBSSW45_MASK                (0x2000U)
#define STCU2_LBSSW1_LBSSW45_SHIFT               (13U)
#define STCU2_LBSSW1_LBSSW45_WIDTH               (1U)
#define STCU2_LBSSW1_LBSSW45(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBSSW1_LBSSW45_SHIFT)) & STCU2_LBSSW1_LBSSW45_MASK)
#define STCU2_LBSSW1_LBSSW46_MASK                (0x4000U)
#define STCU2_LBSSW1_LBSSW46_SHIFT               (14U)
#define STCU2_LBSSW1_LBSSW46_WIDTH               (1U)
#define STCU2_LBSSW1_LBSSW46(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBSSW1_LBSSW46_SHIFT)) & STCU2_LBSSW1_LBSSW46_MASK)
#define STCU2_LBSSW1_LBSSW47_MASK                (0x8000U)
#define STCU2_LBSSW1_LBSSW47_SHIFT               (15U)
#define STCU2_LBSSW1_LBSSW47_WIDTH               (1U)
#define STCU2_LBSSW1_LBSSW47(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBSSW1_LBSSW47_SHIFT)) & STCU2_LBSSW1_LBSSW47_MASK)
#define STCU2_LBSSW1_LBSSW48_MASK                (0x10000U)
#define STCU2_LBSSW1_LBSSW48_SHIFT               (16U)
#define STCU2_LBSSW1_LBSSW48_WIDTH               (1U)
#define STCU2_LBSSW1_LBSSW48(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBSSW1_LBSSW48_SHIFT)) & STCU2_LBSSW1_LBSSW48_MASK)
#define STCU2_LBSSW1_LBSSW49_MASK                (0x20000U)
#define STCU2_LBSSW1_LBSSW49_SHIFT               (17U)
#define STCU2_LBSSW1_LBSSW49_WIDTH               (1U)
#define STCU2_LBSSW1_LBSSW49(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBSSW1_LBSSW49_SHIFT)) & STCU2_LBSSW1_LBSSW49_MASK)
#define STCU2_LBSSW1_LBSSW50_MASK                (0x40000U)
#define STCU2_LBSSW1_LBSSW50_SHIFT               (18U)
#define STCU2_LBSSW1_LBSSW50_WIDTH               (1U)
#define STCU2_LBSSW1_LBSSW50(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBSSW1_LBSSW50_SHIFT)) & STCU2_LBSSW1_LBSSW50_MASK)
#define STCU2_LBSSW1_LBSSW51_MASK                (0x80000U)
#define STCU2_LBSSW1_LBSSW51_SHIFT               (19U)
#define STCU2_LBSSW1_LBSSW51_WIDTH               (1U)
#define STCU2_LBSSW1_LBSSW51(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBSSW1_LBSSW51_SHIFT)) & STCU2_LBSSW1_LBSSW51_MASK)
#define STCU2_LBSSW1_LBSSW52_MASK                (0x100000U)
#define STCU2_LBSSW1_LBSSW52_SHIFT               (20U)
#define STCU2_LBSSW1_LBSSW52_WIDTH               (1U)
#define STCU2_LBSSW1_LBSSW52(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBSSW1_LBSSW52_SHIFT)) & STCU2_LBSSW1_LBSSW52_MASK)
#define STCU2_LBSSW1_LBSSW53_MASK                (0x200000U)
#define STCU2_LBSSW1_LBSSW53_SHIFT               (21U)
#define STCU2_LBSSW1_LBSSW53_WIDTH               (1U)
#define STCU2_LBSSW1_LBSSW53(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBSSW1_LBSSW53_SHIFT)) & STCU2_LBSSW1_LBSSW53_MASK)
#define STCU2_LBSSW1_LBSSW54_MASK                (0x400000U)
#define STCU2_LBSSW1_LBSSW54_SHIFT               (22U)
#define STCU2_LBSSW1_LBSSW54_WIDTH               (1U)
#define STCU2_LBSSW1_LBSSW54(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBSSW1_LBSSW54_SHIFT)) & STCU2_LBSSW1_LBSSW54_MASK)
#define STCU2_LBSSW1_LBSSW55_MASK                (0x800000U)
#define STCU2_LBSSW1_LBSSW55_SHIFT               (23U)
#define STCU2_LBSSW1_LBSSW55_WIDTH               (1U)
#define STCU2_LBSSW1_LBSSW55(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBSSW1_LBSSW55_SHIFT)) & STCU2_LBSSW1_LBSSW55_MASK)
#define STCU2_LBSSW1_LBSSW56_MASK                (0x1000000U)
#define STCU2_LBSSW1_LBSSW56_SHIFT               (24U)
#define STCU2_LBSSW1_LBSSW56_WIDTH               (1U)
#define STCU2_LBSSW1_LBSSW56(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBSSW1_LBSSW56_SHIFT)) & STCU2_LBSSW1_LBSSW56_MASK)
#define STCU2_LBSSW1_LBSSW57_MASK                (0x2000000U)
#define STCU2_LBSSW1_LBSSW57_SHIFT               (25U)
#define STCU2_LBSSW1_LBSSW57_WIDTH               (1U)
#define STCU2_LBSSW1_LBSSW57(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBSSW1_LBSSW57_SHIFT)) & STCU2_LBSSW1_LBSSW57_MASK)
#define STCU2_LBSSW1_LBSSW58_MASK                (0x4000000U)
#define STCU2_LBSSW1_LBSSW58_SHIFT               (26U)
#define STCU2_LBSSW1_LBSSW58_WIDTH               (1U)
#define STCU2_LBSSW1_LBSSW58(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBSSW1_LBSSW58_SHIFT)) & STCU2_LBSSW1_LBSSW58_MASK)
#define STCU2_LBSSW1_LBSSW59_MASK                (0x8000000U)
#define STCU2_LBSSW1_LBSSW59_SHIFT               (27U)
#define STCU2_LBSSW1_LBSSW59_WIDTH               (1U)
#define STCU2_LBSSW1_LBSSW59(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBSSW1_LBSSW59_SHIFT)) & STCU2_LBSSW1_LBSSW59_MASK)
/*! @} */

/*! @name LBESW - STCU2 Online LBIST End Flag */
/*! @{ */
#define STCU2_LBESW_LBESW0_MASK                  (0x1U)
#define STCU2_LBESW_LBESW0_SHIFT                 (0U)
#define STCU2_LBESW_LBESW0_WIDTH                 (1U)
#define STCU2_LBESW_LBESW0(x)                    (((uint32_t)(((uint32_t)(x)) << STCU2_LBESW_LBESW0_SHIFT)) & STCU2_LBESW_LBESW0_MASK)
#define STCU2_LBESW_LBESW1_MASK                  (0x2U)
#define STCU2_LBESW_LBESW1_SHIFT                 (1U)
#define STCU2_LBESW_LBESW1_WIDTH                 (1U)
#define STCU2_LBESW_LBESW1(x)                    (((uint32_t)(((uint32_t)(x)) << STCU2_LBESW_LBESW1_SHIFT)) & STCU2_LBESW_LBESW1_MASK)
#define STCU2_LBESW_LBESW2_MASK                  (0x4U)
#define STCU2_LBESW_LBESW2_SHIFT                 (2U)
#define STCU2_LBESW_LBESW2_WIDTH                 (1U)
#define STCU2_LBESW_LBESW2(x)                    (((uint32_t)(((uint32_t)(x)) << STCU2_LBESW_LBESW2_SHIFT)) & STCU2_LBESW_LBESW2_MASK)
#define STCU2_LBESW_LBESW3_MASK                  (0x8U)
#define STCU2_LBESW_LBESW3_SHIFT                 (3U)
#define STCU2_LBESW_LBESW3_WIDTH                 (1U)
#define STCU2_LBESW_LBESW3(x)                    (((uint32_t)(((uint32_t)(x)) << STCU2_LBESW_LBESW3_SHIFT)) & STCU2_LBESW_LBESW3_MASK)
#define STCU2_LBESW_LBESW4_MASK                  (0x10U)
#define STCU2_LBESW_LBESW4_SHIFT                 (4U)
#define STCU2_LBESW_LBESW4_WIDTH                 (1U)
#define STCU2_LBESW_LBESW4(x)                    (((uint32_t)(((uint32_t)(x)) << STCU2_LBESW_LBESW4_SHIFT)) & STCU2_LBESW_LBESW4_MASK)
#define STCU2_LBESW_LBESW5_MASK                  (0x20U)
#define STCU2_LBESW_LBESW5_SHIFT                 (5U)
#define STCU2_LBESW_LBESW5_WIDTH                 (1U)
#define STCU2_LBESW_LBESW5(x)                    (((uint32_t)(((uint32_t)(x)) << STCU2_LBESW_LBESW5_SHIFT)) & STCU2_LBESW_LBESW5_MASK)
#define STCU2_LBESW_LBESW6_MASK                  (0x40U)
#define STCU2_LBESW_LBESW6_SHIFT                 (6U)
#define STCU2_LBESW_LBESW6_WIDTH                 (1U)
#define STCU2_LBESW_LBESW6(x)                    (((uint32_t)(((uint32_t)(x)) << STCU2_LBESW_LBESW6_SHIFT)) & STCU2_LBESW_LBESW6_MASK)
#define STCU2_LBESW_LBESW7_MASK                  (0x80U)
#define STCU2_LBESW_LBESW7_SHIFT                 (7U)
#define STCU2_LBESW_LBESW7_WIDTH                 (1U)
#define STCU2_LBESW_LBESW7(x)                    (((uint32_t)(((uint32_t)(x)) << STCU2_LBESW_LBESW7_SHIFT)) & STCU2_LBESW_LBESW7_MASK)
#define STCU2_LBESW_LBESW8_MASK                  (0x100U)
#define STCU2_LBESW_LBESW8_SHIFT                 (8U)
#define STCU2_LBESW_LBESW8_WIDTH                 (1U)
#define STCU2_LBESW_LBESW8(x)                    (((uint32_t)(((uint32_t)(x)) << STCU2_LBESW_LBESW8_SHIFT)) & STCU2_LBESW_LBESW8_MASK)
#define STCU2_LBESW_LBESW9_MASK                  (0x200U)
#define STCU2_LBESW_LBESW9_SHIFT                 (9U)
#define STCU2_LBESW_LBESW9_WIDTH                 (1U)
#define STCU2_LBESW_LBESW9(x)                    (((uint32_t)(((uint32_t)(x)) << STCU2_LBESW_LBESW9_SHIFT)) & STCU2_LBESW_LBESW9_MASK)
#define STCU2_LBESW_LBESW10_MASK                 (0x400U)
#define STCU2_LBESW_LBESW10_SHIFT                (10U)
#define STCU2_LBESW_LBESW10_WIDTH                (1U)
#define STCU2_LBESW_LBESW10(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_LBESW_LBESW10_SHIFT)) & STCU2_LBESW_LBESW10_MASK)
#define STCU2_LBESW_LBESW11_MASK                 (0x800U)
#define STCU2_LBESW_LBESW11_SHIFT                (11U)
#define STCU2_LBESW_LBESW11_WIDTH                (1U)
#define STCU2_LBESW_LBESW11(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_LBESW_LBESW11_SHIFT)) & STCU2_LBESW_LBESW11_MASK)
#define STCU2_LBESW_LBESW12_MASK                 (0x1000U)
#define STCU2_LBESW_LBESW12_SHIFT                (12U)
#define STCU2_LBESW_LBESW12_WIDTH                (1U)
#define STCU2_LBESW_LBESW12(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_LBESW_LBESW12_SHIFT)) & STCU2_LBESW_LBESW12_MASK)
#define STCU2_LBESW_LBESW13_MASK                 (0x2000U)
#define STCU2_LBESW_LBESW13_SHIFT                (13U)
#define STCU2_LBESW_LBESW13_WIDTH                (1U)
#define STCU2_LBESW_LBESW13(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_LBESW_LBESW13_SHIFT)) & STCU2_LBESW_LBESW13_MASK)
#define STCU2_LBESW_LBESW14_MASK                 (0x4000U)
#define STCU2_LBESW_LBESW14_SHIFT                (14U)
#define STCU2_LBESW_LBESW14_WIDTH                (1U)
#define STCU2_LBESW_LBESW14(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_LBESW_LBESW14_SHIFT)) & STCU2_LBESW_LBESW14_MASK)
#define STCU2_LBESW_LBESW15_MASK                 (0x8000U)
#define STCU2_LBESW_LBESW15_SHIFT                (15U)
#define STCU2_LBESW_LBESW15_WIDTH                (1U)
#define STCU2_LBESW_LBESW15(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_LBESW_LBESW15_SHIFT)) & STCU2_LBESW_LBESW15_MASK)
#define STCU2_LBESW_LBESW16_MASK                 (0x10000U)
#define STCU2_LBESW_LBESW16_SHIFT                (16U)
#define STCU2_LBESW_LBESW16_WIDTH                (1U)
#define STCU2_LBESW_LBESW16(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_LBESW_LBESW16_SHIFT)) & STCU2_LBESW_LBESW16_MASK)
#define STCU2_LBESW_LBESW17_MASK                 (0x20000U)
#define STCU2_LBESW_LBESW17_SHIFT                (17U)
#define STCU2_LBESW_LBESW17_WIDTH                (1U)
#define STCU2_LBESW_LBESW17(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_LBESW_LBESW17_SHIFT)) & STCU2_LBESW_LBESW17_MASK)
#define STCU2_LBESW_LBESW18_MASK                 (0x40000U)
#define STCU2_LBESW_LBESW18_SHIFT                (18U)
#define STCU2_LBESW_LBESW18_WIDTH                (1U)
#define STCU2_LBESW_LBESW18(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_LBESW_LBESW18_SHIFT)) & STCU2_LBESW_LBESW18_MASK)
#define STCU2_LBESW_LBESW19_MASK                 (0x80000U)
#define STCU2_LBESW_LBESW19_SHIFT                (19U)
#define STCU2_LBESW_LBESW19_WIDTH                (1U)
#define STCU2_LBESW_LBESW19(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_LBESW_LBESW19_SHIFT)) & STCU2_LBESW_LBESW19_MASK)
#define STCU2_LBESW_LBESW20_MASK                 (0x100000U)
#define STCU2_LBESW_LBESW20_SHIFT                (20U)
#define STCU2_LBESW_LBESW20_WIDTH                (1U)
#define STCU2_LBESW_LBESW20(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_LBESW_LBESW20_SHIFT)) & STCU2_LBESW_LBESW20_MASK)
#define STCU2_LBESW_LBESW21_MASK                 (0x200000U)
#define STCU2_LBESW_LBESW21_SHIFT                (21U)
#define STCU2_LBESW_LBESW21_WIDTH                (1U)
#define STCU2_LBESW_LBESW21(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_LBESW_LBESW21_SHIFT)) & STCU2_LBESW_LBESW21_MASK)
#define STCU2_LBESW_LBESW22_MASK                 (0x400000U)
#define STCU2_LBESW_LBESW22_SHIFT                (22U)
#define STCU2_LBESW_LBESW22_WIDTH                (1U)
#define STCU2_LBESW_LBESW22(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_LBESW_LBESW22_SHIFT)) & STCU2_LBESW_LBESW22_MASK)
#define STCU2_LBESW_LBESW23_MASK                 (0x800000U)
#define STCU2_LBESW_LBESW23_SHIFT                (23U)
#define STCU2_LBESW_LBESW23_WIDTH                (1U)
#define STCU2_LBESW_LBESW23(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_LBESW_LBESW23_SHIFT)) & STCU2_LBESW_LBESW23_MASK)
#define STCU2_LBESW_LBESW24_MASK                 (0x1000000U)
#define STCU2_LBESW_LBESW24_SHIFT                (24U)
#define STCU2_LBESW_LBESW24_WIDTH                (1U)
#define STCU2_LBESW_LBESW24(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_LBESW_LBESW24_SHIFT)) & STCU2_LBESW_LBESW24_MASK)
#define STCU2_LBESW_LBESW25_MASK                 (0x2000000U)
#define STCU2_LBESW_LBESW25_SHIFT                (25U)
#define STCU2_LBESW_LBESW25_WIDTH                (1U)
#define STCU2_LBESW_LBESW25(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_LBESW_LBESW25_SHIFT)) & STCU2_LBESW_LBESW25_MASK)
#define STCU2_LBESW_LBESW26_MASK                 (0x4000000U)
#define STCU2_LBESW_LBESW26_SHIFT                (26U)
#define STCU2_LBESW_LBESW26_WIDTH                (1U)
#define STCU2_LBESW_LBESW26(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_LBESW_LBESW26_SHIFT)) & STCU2_LBESW_LBESW26_MASK)
#define STCU2_LBESW_LBESW27_MASK                 (0x8000000U)
#define STCU2_LBESW_LBESW27_SHIFT                (27U)
#define STCU2_LBESW_LBESW27_WIDTH                (1U)
#define STCU2_LBESW_LBESW27(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_LBESW_LBESW27_SHIFT)) & STCU2_LBESW_LBESW27_MASK)
#define STCU2_LBESW_LBESW28_MASK                 (0x10000000U)
#define STCU2_LBESW_LBESW28_SHIFT                (28U)
#define STCU2_LBESW_LBESW28_WIDTH                (1U)
#define STCU2_LBESW_LBESW28(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_LBESW_LBESW28_SHIFT)) & STCU2_LBESW_LBESW28_MASK)
#define STCU2_LBESW_LBESW29_MASK                 (0x20000000U)
#define STCU2_LBESW_LBESW29_SHIFT                (29U)
#define STCU2_LBESW_LBESW29_WIDTH                (1U)
#define STCU2_LBESW_LBESW29(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_LBESW_LBESW29_SHIFT)) & STCU2_LBESW_LBESW29_MASK)
#define STCU2_LBESW_LBESW30_MASK                 (0x40000000U)
#define STCU2_LBESW_LBESW30_SHIFT                (30U)
#define STCU2_LBESW_LBESW30_WIDTH                (1U)
#define STCU2_LBESW_LBESW30(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_LBESW_LBESW30_SHIFT)) & STCU2_LBESW_LBESW30_MASK)
#define STCU2_LBESW_LBESW31_MASK                 (0x80000000U)
#define STCU2_LBESW_LBESW31_SHIFT                (31U)
#define STCU2_LBESW_LBESW31_WIDTH                (1U)
#define STCU2_LBESW_LBESW31(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_LBESW_LBESW31_SHIFT)) & STCU2_LBESW_LBESW31_MASK)
/*! @} */

/*! @name LBESW1 - STCU2 Online LBIST End Flag */
/*! @{ */
#define STCU2_LBESW1_LBESW32_MASK                (0x1U)
#define STCU2_LBESW1_LBESW32_SHIFT               (0U)
#define STCU2_LBESW1_LBESW32_WIDTH               (1U)
#define STCU2_LBESW1_LBESW32(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBESW1_LBESW32_SHIFT)) & STCU2_LBESW1_LBESW32_MASK)
#define STCU2_LBESW1_LBESW33_MASK                (0x2U)
#define STCU2_LBESW1_LBESW33_SHIFT               (1U)
#define STCU2_LBESW1_LBESW33_WIDTH               (1U)
#define STCU2_LBESW1_LBESW33(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBESW1_LBESW33_SHIFT)) & STCU2_LBESW1_LBESW33_MASK)
#define STCU2_LBESW1_LBESW34_MASK                (0x4U)
#define STCU2_LBESW1_LBESW34_SHIFT               (2U)
#define STCU2_LBESW1_LBESW34_WIDTH               (1U)
#define STCU2_LBESW1_LBESW34(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBESW1_LBESW34_SHIFT)) & STCU2_LBESW1_LBESW34_MASK)
#define STCU2_LBESW1_LBESW35_MASK                (0x8U)
#define STCU2_LBESW1_LBESW35_SHIFT               (3U)
#define STCU2_LBESW1_LBESW35_WIDTH               (1U)
#define STCU2_LBESW1_LBESW35(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBESW1_LBESW35_SHIFT)) & STCU2_LBESW1_LBESW35_MASK)
#define STCU2_LBESW1_LBESW36_MASK                (0x10U)
#define STCU2_LBESW1_LBESW36_SHIFT               (4U)
#define STCU2_LBESW1_LBESW36_WIDTH               (1U)
#define STCU2_LBESW1_LBESW36(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBESW1_LBESW36_SHIFT)) & STCU2_LBESW1_LBESW36_MASK)
#define STCU2_LBESW1_LBESW37_MASK                (0x20U)
#define STCU2_LBESW1_LBESW37_SHIFT               (5U)
#define STCU2_LBESW1_LBESW37_WIDTH               (1U)
#define STCU2_LBESW1_LBESW37(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBESW1_LBESW37_SHIFT)) & STCU2_LBESW1_LBESW37_MASK)
#define STCU2_LBESW1_LBESW38_MASK                (0x40U)
#define STCU2_LBESW1_LBESW38_SHIFT               (6U)
#define STCU2_LBESW1_LBESW38_WIDTH               (1U)
#define STCU2_LBESW1_LBESW38(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBESW1_LBESW38_SHIFT)) & STCU2_LBESW1_LBESW38_MASK)
#define STCU2_LBESW1_LBESW39_MASK                (0x80U)
#define STCU2_LBESW1_LBESW39_SHIFT               (7U)
#define STCU2_LBESW1_LBESW39_WIDTH               (1U)
#define STCU2_LBESW1_LBESW39(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBESW1_LBESW39_SHIFT)) & STCU2_LBESW1_LBESW39_MASK)
#define STCU2_LBESW1_LBESW40_MASK                (0x100U)
#define STCU2_LBESW1_LBESW40_SHIFT               (8U)
#define STCU2_LBESW1_LBESW40_WIDTH               (1U)
#define STCU2_LBESW1_LBESW40(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBESW1_LBESW40_SHIFT)) & STCU2_LBESW1_LBESW40_MASK)
#define STCU2_LBESW1_LBESW41_MASK                (0x200U)
#define STCU2_LBESW1_LBESW41_SHIFT               (9U)
#define STCU2_LBESW1_LBESW41_WIDTH               (1U)
#define STCU2_LBESW1_LBESW41(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBESW1_LBESW41_SHIFT)) & STCU2_LBESW1_LBESW41_MASK)
#define STCU2_LBESW1_LBESW42_MASK                (0x400U)
#define STCU2_LBESW1_LBESW42_SHIFT               (10U)
#define STCU2_LBESW1_LBESW42_WIDTH               (1U)
#define STCU2_LBESW1_LBESW42(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBESW1_LBESW42_SHIFT)) & STCU2_LBESW1_LBESW42_MASK)
#define STCU2_LBESW1_LBESW43_MASK                (0x800U)
#define STCU2_LBESW1_LBESW43_SHIFT               (11U)
#define STCU2_LBESW1_LBESW43_WIDTH               (1U)
#define STCU2_LBESW1_LBESW43(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBESW1_LBESW43_SHIFT)) & STCU2_LBESW1_LBESW43_MASK)
#define STCU2_LBESW1_LBESW44_MASK                (0x1000U)
#define STCU2_LBESW1_LBESW44_SHIFT               (12U)
#define STCU2_LBESW1_LBESW44_WIDTH               (1U)
#define STCU2_LBESW1_LBESW44(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBESW1_LBESW44_SHIFT)) & STCU2_LBESW1_LBESW44_MASK)
#define STCU2_LBESW1_LBESW45_MASK                (0x2000U)
#define STCU2_LBESW1_LBESW45_SHIFT               (13U)
#define STCU2_LBESW1_LBESW45_WIDTH               (1U)
#define STCU2_LBESW1_LBESW45(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBESW1_LBESW45_SHIFT)) & STCU2_LBESW1_LBESW45_MASK)
#define STCU2_LBESW1_LBESW46_MASK                (0x4000U)
#define STCU2_LBESW1_LBESW46_SHIFT               (14U)
#define STCU2_LBESW1_LBESW46_WIDTH               (1U)
#define STCU2_LBESW1_LBESW46(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBESW1_LBESW46_SHIFT)) & STCU2_LBESW1_LBESW46_MASK)
#define STCU2_LBESW1_LBESW47_MASK                (0x8000U)
#define STCU2_LBESW1_LBESW47_SHIFT               (15U)
#define STCU2_LBESW1_LBESW47_WIDTH               (1U)
#define STCU2_LBESW1_LBESW47(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBESW1_LBESW47_SHIFT)) & STCU2_LBESW1_LBESW47_MASK)
#define STCU2_LBESW1_LBESW48_MASK                (0x10000U)
#define STCU2_LBESW1_LBESW48_SHIFT               (16U)
#define STCU2_LBESW1_LBESW48_WIDTH               (1U)
#define STCU2_LBESW1_LBESW48(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBESW1_LBESW48_SHIFT)) & STCU2_LBESW1_LBESW48_MASK)
#define STCU2_LBESW1_LBESW49_MASK                (0x20000U)
#define STCU2_LBESW1_LBESW49_SHIFT               (17U)
#define STCU2_LBESW1_LBESW49_WIDTH               (1U)
#define STCU2_LBESW1_LBESW49(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBESW1_LBESW49_SHIFT)) & STCU2_LBESW1_LBESW49_MASK)
#define STCU2_LBESW1_LBESW50_MASK                (0x40000U)
#define STCU2_LBESW1_LBESW50_SHIFT               (18U)
#define STCU2_LBESW1_LBESW50_WIDTH               (1U)
#define STCU2_LBESW1_LBESW50(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBESW1_LBESW50_SHIFT)) & STCU2_LBESW1_LBESW50_MASK)
#define STCU2_LBESW1_LBESW51_MASK                (0x80000U)
#define STCU2_LBESW1_LBESW51_SHIFT               (19U)
#define STCU2_LBESW1_LBESW51_WIDTH               (1U)
#define STCU2_LBESW1_LBESW51(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBESW1_LBESW51_SHIFT)) & STCU2_LBESW1_LBESW51_MASK)
#define STCU2_LBESW1_LBESW52_MASK                (0x100000U)
#define STCU2_LBESW1_LBESW52_SHIFT               (20U)
#define STCU2_LBESW1_LBESW52_WIDTH               (1U)
#define STCU2_LBESW1_LBESW52(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBESW1_LBESW52_SHIFT)) & STCU2_LBESW1_LBESW52_MASK)
#define STCU2_LBESW1_LBESW53_MASK                (0x200000U)
#define STCU2_LBESW1_LBESW53_SHIFT               (21U)
#define STCU2_LBESW1_LBESW53_WIDTH               (1U)
#define STCU2_LBESW1_LBESW53(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBESW1_LBESW53_SHIFT)) & STCU2_LBESW1_LBESW53_MASK)
#define STCU2_LBESW1_LBESW54_MASK                (0x400000U)
#define STCU2_LBESW1_LBESW54_SHIFT               (22U)
#define STCU2_LBESW1_LBESW54_WIDTH               (1U)
#define STCU2_LBESW1_LBESW54(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBESW1_LBESW54_SHIFT)) & STCU2_LBESW1_LBESW54_MASK)
#define STCU2_LBESW1_LBESW55_MASK                (0x800000U)
#define STCU2_LBESW1_LBESW55_SHIFT               (23U)
#define STCU2_LBESW1_LBESW55_WIDTH               (1U)
#define STCU2_LBESW1_LBESW55(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBESW1_LBESW55_SHIFT)) & STCU2_LBESW1_LBESW55_MASK)
#define STCU2_LBESW1_LBESW56_MASK                (0x1000000U)
#define STCU2_LBESW1_LBESW56_SHIFT               (24U)
#define STCU2_LBESW1_LBESW56_WIDTH               (1U)
#define STCU2_LBESW1_LBESW56(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBESW1_LBESW56_SHIFT)) & STCU2_LBESW1_LBESW56_MASK)
#define STCU2_LBESW1_LBESW57_MASK                (0x2000000U)
#define STCU2_LBESW1_LBESW57_SHIFT               (25U)
#define STCU2_LBESW1_LBESW57_WIDTH               (1U)
#define STCU2_LBESW1_LBESW57(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBESW1_LBESW57_SHIFT)) & STCU2_LBESW1_LBESW57_MASK)
#define STCU2_LBESW1_LBESW58_MASK                (0x4000000U)
#define STCU2_LBESW1_LBESW58_SHIFT               (26U)
#define STCU2_LBESW1_LBESW58_WIDTH               (1U)
#define STCU2_LBESW1_LBESW58(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBESW1_LBESW58_SHIFT)) & STCU2_LBESW1_LBESW58_MASK)
#define STCU2_LBESW1_LBESW59_MASK                (0x8000000U)
#define STCU2_LBESW1_LBESW59_SHIFT               (27U)
#define STCU2_LBESW1_LBESW59_WIDTH               (1U)
#define STCU2_LBESW1_LBESW59(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBESW1_LBESW59_SHIFT)) & STCU2_LBESW1_LBESW59_MASK)
/*! @} */

/*! @name LBRMSW1 - STCU2 Online LBIST Reset Management */
/*! @{ */
#define STCU2_LBRMSW1_LBRMSW32_MASK              (0x1U)
#define STCU2_LBRMSW1_LBRMSW32_SHIFT             (0U)
#define STCU2_LBRMSW1_LBRMSW32_WIDTH             (1U)
#define STCU2_LBRMSW1_LBRMSW32(x)                (((uint32_t)(((uint32_t)(x)) << STCU2_LBRMSW1_LBRMSW32_SHIFT)) & STCU2_LBRMSW1_LBRMSW32_MASK)
#define STCU2_LBRMSW1_LBRMSW33_MASK              (0x2U)
#define STCU2_LBRMSW1_LBRMSW33_SHIFT             (1U)
#define STCU2_LBRMSW1_LBRMSW33_WIDTH             (1U)
#define STCU2_LBRMSW1_LBRMSW33(x)                (((uint32_t)(((uint32_t)(x)) << STCU2_LBRMSW1_LBRMSW33_SHIFT)) & STCU2_LBRMSW1_LBRMSW33_MASK)
#define STCU2_LBRMSW1_LBRMSW34_MASK              (0x4U)
#define STCU2_LBRMSW1_LBRMSW34_SHIFT             (2U)
#define STCU2_LBRMSW1_LBRMSW34_WIDTH             (1U)
#define STCU2_LBRMSW1_LBRMSW34(x)                (((uint32_t)(((uint32_t)(x)) << STCU2_LBRMSW1_LBRMSW34_SHIFT)) & STCU2_LBRMSW1_LBRMSW34_MASK)
#define STCU2_LBRMSW1_LBRMSW35_MASK              (0x8U)
#define STCU2_LBRMSW1_LBRMSW35_SHIFT             (3U)
#define STCU2_LBRMSW1_LBRMSW35_WIDTH             (1U)
#define STCU2_LBRMSW1_LBRMSW35(x)                (((uint32_t)(((uint32_t)(x)) << STCU2_LBRMSW1_LBRMSW35_SHIFT)) & STCU2_LBRMSW1_LBRMSW35_MASK)
#define STCU2_LBRMSW1_LBRMSW36_MASK              (0x10U)
#define STCU2_LBRMSW1_LBRMSW36_SHIFT             (4U)
#define STCU2_LBRMSW1_LBRMSW36_WIDTH             (1U)
#define STCU2_LBRMSW1_LBRMSW36(x)                (((uint32_t)(((uint32_t)(x)) << STCU2_LBRMSW1_LBRMSW36_SHIFT)) & STCU2_LBRMSW1_LBRMSW36_MASK)
#define STCU2_LBRMSW1_LBRMSW37_MASK              (0x20U)
#define STCU2_LBRMSW1_LBRMSW37_SHIFT             (5U)
#define STCU2_LBRMSW1_LBRMSW37_WIDTH             (1U)
#define STCU2_LBRMSW1_LBRMSW37(x)                (((uint32_t)(((uint32_t)(x)) << STCU2_LBRMSW1_LBRMSW37_SHIFT)) & STCU2_LBRMSW1_LBRMSW37_MASK)
#define STCU2_LBRMSW1_LBRMSW38_MASK              (0x40U)
#define STCU2_LBRMSW1_LBRMSW38_SHIFT             (6U)
#define STCU2_LBRMSW1_LBRMSW38_WIDTH             (1U)
#define STCU2_LBRMSW1_LBRMSW38(x)                (((uint32_t)(((uint32_t)(x)) << STCU2_LBRMSW1_LBRMSW38_SHIFT)) & STCU2_LBRMSW1_LBRMSW38_MASK)
#define STCU2_LBRMSW1_LBRMSW39_MASK              (0x80U)
#define STCU2_LBRMSW1_LBRMSW39_SHIFT             (7U)
#define STCU2_LBRMSW1_LBRMSW39_WIDTH             (1U)
#define STCU2_LBRMSW1_LBRMSW39(x)                (((uint32_t)(((uint32_t)(x)) << STCU2_LBRMSW1_LBRMSW39_SHIFT)) & STCU2_LBRMSW1_LBRMSW39_MASK)
#define STCU2_LBRMSW1_LBRMSW40_MASK              (0x100U)
#define STCU2_LBRMSW1_LBRMSW40_SHIFT             (8U)
#define STCU2_LBRMSW1_LBRMSW40_WIDTH             (1U)
#define STCU2_LBRMSW1_LBRMSW40(x)                (((uint32_t)(((uint32_t)(x)) << STCU2_LBRMSW1_LBRMSW40_SHIFT)) & STCU2_LBRMSW1_LBRMSW40_MASK)
#define STCU2_LBRMSW1_LBRMSW41_MASK              (0x200U)
#define STCU2_LBRMSW1_LBRMSW41_SHIFT             (9U)
#define STCU2_LBRMSW1_LBRMSW41_WIDTH             (1U)
#define STCU2_LBRMSW1_LBRMSW41(x)                (((uint32_t)(((uint32_t)(x)) << STCU2_LBRMSW1_LBRMSW41_SHIFT)) & STCU2_LBRMSW1_LBRMSW41_MASK)
#define STCU2_LBRMSW1_LBRMSW42_MASK              (0x400U)
#define STCU2_LBRMSW1_LBRMSW42_SHIFT             (10U)
#define STCU2_LBRMSW1_LBRMSW42_WIDTH             (1U)
#define STCU2_LBRMSW1_LBRMSW42(x)                (((uint32_t)(((uint32_t)(x)) << STCU2_LBRMSW1_LBRMSW42_SHIFT)) & STCU2_LBRMSW1_LBRMSW42_MASK)
#define STCU2_LBRMSW1_LBRMSW43_MASK              (0x800U)
#define STCU2_LBRMSW1_LBRMSW43_SHIFT             (11U)
#define STCU2_LBRMSW1_LBRMSW43_WIDTH             (1U)
#define STCU2_LBRMSW1_LBRMSW43(x)                (((uint32_t)(((uint32_t)(x)) << STCU2_LBRMSW1_LBRMSW43_SHIFT)) & STCU2_LBRMSW1_LBRMSW43_MASK)
#define STCU2_LBRMSW1_LBRMSW44_MASK              (0x1000U)
#define STCU2_LBRMSW1_LBRMSW44_SHIFT             (12U)
#define STCU2_LBRMSW1_LBRMSW44_WIDTH             (1U)
#define STCU2_LBRMSW1_LBRMSW44(x)                (((uint32_t)(((uint32_t)(x)) << STCU2_LBRMSW1_LBRMSW44_SHIFT)) & STCU2_LBRMSW1_LBRMSW44_MASK)
#define STCU2_LBRMSW1_LBRMSW45_MASK              (0x2000U)
#define STCU2_LBRMSW1_LBRMSW45_SHIFT             (13U)
#define STCU2_LBRMSW1_LBRMSW45_WIDTH             (1U)
#define STCU2_LBRMSW1_LBRMSW45(x)                (((uint32_t)(((uint32_t)(x)) << STCU2_LBRMSW1_LBRMSW45_SHIFT)) & STCU2_LBRMSW1_LBRMSW45_MASK)
#define STCU2_LBRMSW1_LBRMSW46_MASK              (0x4000U)
#define STCU2_LBRMSW1_LBRMSW46_SHIFT             (14U)
#define STCU2_LBRMSW1_LBRMSW46_WIDTH             (1U)
#define STCU2_LBRMSW1_LBRMSW46(x)                (((uint32_t)(((uint32_t)(x)) << STCU2_LBRMSW1_LBRMSW46_SHIFT)) & STCU2_LBRMSW1_LBRMSW46_MASK)
#define STCU2_LBRMSW1_LBRMSW47_MASK              (0x8000U)
#define STCU2_LBRMSW1_LBRMSW47_SHIFT             (15U)
#define STCU2_LBRMSW1_LBRMSW47_WIDTH             (1U)
#define STCU2_LBRMSW1_LBRMSW47(x)                (((uint32_t)(((uint32_t)(x)) << STCU2_LBRMSW1_LBRMSW47_SHIFT)) & STCU2_LBRMSW1_LBRMSW47_MASK)
#define STCU2_LBRMSW1_LBRMSW48_MASK              (0x10000U)
#define STCU2_LBRMSW1_LBRMSW48_SHIFT             (16U)
#define STCU2_LBRMSW1_LBRMSW48_WIDTH             (1U)
#define STCU2_LBRMSW1_LBRMSW48(x)                (((uint32_t)(((uint32_t)(x)) << STCU2_LBRMSW1_LBRMSW48_SHIFT)) & STCU2_LBRMSW1_LBRMSW48_MASK)
#define STCU2_LBRMSW1_LBRMSW49_MASK              (0x20000U)
#define STCU2_LBRMSW1_LBRMSW49_SHIFT             (17U)
#define STCU2_LBRMSW1_LBRMSW49_WIDTH             (1U)
#define STCU2_LBRMSW1_LBRMSW49(x)                (((uint32_t)(((uint32_t)(x)) << STCU2_LBRMSW1_LBRMSW49_SHIFT)) & STCU2_LBRMSW1_LBRMSW49_MASK)
#define STCU2_LBRMSW1_LBRMSW50_MASK              (0x40000U)
#define STCU2_LBRMSW1_LBRMSW50_SHIFT             (18U)
#define STCU2_LBRMSW1_LBRMSW50_WIDTH             (1U)
#define STCU2_LBRMSW1_LBRMSW50(x)                (((uint32_t)(((uint32_t)(x)) << STCU2_LBRMSW1_LBRMSW50_SHIFT)) & STCU2_LBRMSW1_LBRMSW50_MASK)
#define STCU2_LBRMSW1_LBRMSW51_MASK              (0x80000U)
#define STCU2_LBRMSW1_LBRMSW51_SHIFT             (19U)
#define STCU2_LBRMSW1_LBRMSW51_WIDTH             (1U)
#define STCU2_LBRMSW1_LBRMSW51(x)                (((uint32_t)(((uint32_t)(x)) << STCU2_LBRMSW1_LBRMSW51_SHIFT)) & STCU2_LBRMSW1_LBRMSW51_MASK)
#define STCU2_LBRMSW1_LBRMSW52_MASK              (0x100000U)
#define STCU2_LBRMSW1_LBRMSW52_SHIFT             (20U)
#define STCU2_LBRMSW1_LBRMSW52_WIDTH             (1U)
#define STCU2_LBRMSW1_LBRMSW52(x)                (((uint32_t)(((uint32_t)(x)) << STCU2_LBRMSW1_LBRMSW52_SHIFT)) & STCU2_LBRMSW1_LBRMSW52_MASK)
#define STCU2_LBRMSW1_LBRMSW53_MASK              (0x200000U)
#define STCU2_LBRMSW1_LBRMSW53_SHIFT             (21U)
#define STCU2_LBRMSW1_LBRMSW53_WIDTH             (1U)
#define STCU2_LBRMSW1_LBRMSW53(x)                (((uint32_t)(((uint32_t)(x)) << STCU2_LBRMSW1_LBRMSW53_SHIFT)) & STCU2_LBRMSW1_LBRMSW53_MASK)
#define STCU2_LBRMSW1_LBRMSW54_MASK              (0x400000U)
#define STCU2_LBRMSW1_LBRMSW54_SHIFT             (22U)
#define STCU2_LBRMSW1_LBRMSW54_WIDTH             (1U)
#define STCU2_LBRMSW1_LBRMSW54(x)                (((uint32_t)(((uint32_t)(x)) << STCU2_LBRMSW1_LBRMSW54_SHIFT)) & STCU2_LBRMSW1_LBRMSW54_MASK)
#define STCU2_LBRMSW1_LBRMSW55_MASK              (0x800000U)
#define STCU2_LBRMSW1_LBRMSW55_SHIFT             (23U)
#define STCU2_LBRMSW1_LBRMSW55_WIDTH             (1U)
#define STCU2_LBRMSW1_LBRMSW55(x)                (((uint32_t)(((uint32_t)(x)) << STCU2_LBRMSW1_LBRMSW55_SHIFT)) & STCU2_LBRMSW1_LBRMSW55_MASK)
#define STCU2_LBRMSW1_LBRMSW56_MASK              (0x1000000U)
#define STCU2_LBRMSW1_LBRMSW56_SHIFT             (24U)
#define STCU2_LBRMSW1_LBRMSW56_WIDTH             (1U)
#define STCU2_LBRMSW1_LBRMSW56(x)                (((uint32_t)(((uint32_t)(x)) << STCU2_LBRMSW1_LBRMSW56_SHIFT)) & STCU2_LBRMSW1_LBRMSW56_MASK)
#define STCU2_LBRMSW1_LBRMSW57_MASK              (0x2000000U)
#define STCU2_LBRMSW1_LBRMSW57_SHIFT             (25U)
#define STCU2_LBRMSW1_LBRMSW57_WIDTH             (1U)
#define STCU2_LBRMSW1_LBRMSW57(x)                (((uint32_t)(((uint32_t)(x)) << STCU2_LBRMSW1_LBRMSW57_SHIFT)) & STCU2_LBRMSW1_LBRMSW57_MASK)
#define STCU2_LBRMSW1_LBRMSW58_MASK              (0x4000000U)
#define STCU2_LBRMSW1_LBRMSW58_SHIFT             (26U)
#define STCU2_LBRMSW1_LBRMSW58_WIDTH             (1U)
#define STCU2_LBRMSW1_LBRMSW58(x)                (((uint32_t)(((uint32_t)(x)) << STCU2_LBRMSW1_LBRMSW58_SHIFT)) & STCU2_LBRMSW1_LBRMSW58_MASK)
#define STCU2_LBRMSW1_LBRMSW59_MASK              (0x8000000U)
#define STCU2_LBRMSW1_LBRMSW59_SHIFT             (27U)
#define STCU2_LBRMSW1_LBRMSW59_WIDTH             (1U)
#define STCU2_LBRMSW1_LBRMSW59(x)                (((uint32_t)(((uint32_t)(x)) << STCU2_LBRMSW1_LBRMSW59_SHIFT)) & STCU2_LBRMSW1_LBRMSW59_MASK)
/*! @} */

/*! @name LBUFM - STCU2 Online LBIST Unrecoverable FM */
/*! @{ */
#define STCU2_LBUFM_LBUFM0_MASK                  (0x1U)
#define STCU2_LBUFM_LBUFM0_SHIFT                 (0U)
#define STCU2_LBUFM_LBUFM0_WIDTH                 (1U)
#define STCU2_LBUFM_LBUFM0(x)                    (((uint32_t)(((uint32_t)(x)) << STCU2_LBUFM_LBUFM0_SHIFT)) & STCU2_LBUFM_LBUFM0_MASK)
#define STCU2_LBUFM_LBUFM1_MASK                  (0x2U)
#define STCU2_LBUFM_LBUFM1_SHIFT                 (1U)
#define STCU2_LBUFM_LBUFM1_WIDTH                 (1U)
#define STCU2_LBUFM_LBUFM1(x)                    (((uint32_t)(((uint32_t)(x)) << STCU2_LBUFM_LBUFM1_SHIFT)) & STCU2_LBUFM_LBUFM1_MASK)
#define STCU2_LBUFM_LBUFM2_MASK                  (0x4U)
#define STCU2_LBUFM_LBUFM2_SHIFT                 (2U)
#define STCU2_LBUFM_LBUFM2_WIDTH                 (1U)
#define STCU2_LBUFM_LBUFM2(x)                    (((uint32_t)(((uint32_t)(x)) << STCU2_LBUFM_LBUFM2_SHIFT)) & STCU2_LBUFM_LBUFM2_MASK)
#define STCU2_LBUFM_LBUFM3_MASK                  (0x8U)
#define STCU2_LBUFM_LBUFM3_SHIFT                 (3U)
#define STCU2_LBUFM_LBUFM3_WIDTH                 (1U)
#define STCU2_LBUFM_LBUFM3(x)                    (((uint32_t)(((uint32_t)(x)) << STCU2_LBUFM_LBUFM3_SHIFT)) & STCU2_LBUFM_LBUFM3_MASK)
#define STCU2_LBUFM_LBUFM4_MASK                  (0x10U)
#define STCU2_LBUFM_LBUFM4_SHIFT                 (4U)
#define STCU2_LBUFM_LBUFM4_WIDTH                 (1U)
#define STCU2_LBUFM_LBUFM4(x)                    (((uint32_t)(((uint32_t)(x)) << STCU2_LBUFM_LBUFM4_SHIFT)) & STCU2_LBUFM_LBUFM4_MASK)
#define STCU2_LBUFM_LBUFM5_MASK                  (0x20U)
#define STCU2_LBUFM_LBUFM5_SHIFT                 (5U)
#define STCU2_LBUFM_LBUFM5_WIDTH                 (1U)
#define STCU2_LBUFM_LBUFM5(x)                    (((uint32_t)(((uint32_t)(x)) << STCU2_LBUFM_LBUFM5_SHIFT)) & STCU2_LBUFM_LBUFM5_MASK)
#define STCU2_LBUFM_LBUFM6_MASK                  (0x40U)
#define STCU2_LBUFM_LBUFM6_SHIFT                 (6U)
#define STCU2_LBUFM_LBUFM6_WIDTH                 (1U)
#define STCU2_LBUFM_LBUFM6(x)                    (((uint32_t)(((uint32_t)(x)) << STCU2_LBUFM_LBUFM6_SHIFT)) & STCU2_LBUFM_LBUFM6_MASK)
#define STCU2_LBUFM_LBUFM7_MASK                  (0x80U)
#define STCU2_LBUFM_LBUFM7_SHIFT                 (7U)
#define STCU2_LBUFM_LBUFM7_WIDTH                 (1U)
#define STCU2_LBUFM_LBUFM7(x)                    (((uint32_t)(((uint32_t)(x)) << STCU2_LBUFM_LBUFM7_SHIFT)) & STCU2_LBUFM_LBUFM7_MASK)
#define STCU2_LBUFM_LBUFM8_MASK                  (0x100U)
#define STCU2_LBUFM_LBUFM8_SHIFT                 (8U)
#define STCU2_LBUFM_LBUFM8_WIDTH                 (1U)
#define STCU2_LBUFM_LBUFM8(x)                    (((uint32_t)(((uint32_t)(x)) << STCU2_LBUFM_LBUFM8_SHIFT)) & STCU2_LBUFM_LBUFM8_MASK)
#define STCU2_LBUFM_LBUFM9_MASK                  (0x200U)
#define STCU2_LBUFM_LBUFM9_SHIFT                 (9U)
#define STCU2_LBUFM_LBUFM9_WIDTH                 (1U)
#define STCU2_LBUFM_LBUFM9(x)                    (((uint32_t)(((uint32_t)(x)) << STCU2_LBUFM_LBUFM9_SHIFT)) & STCU2_LBUFM_LBUFM9_MASK)
#define STCU2_LBUFM_LBUFM10_MASK                 (0x400U)
#define STCU2_LBUFM_LBUFM10_SHIFT                (10U)
#define STCU2_LBUFM_LBUFM10_WIDTH                (1U)
#define STCU2_LBUFM_LBUFM10(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_LBUFM_LBUFM10_SHIFT)) & STCU2_LBUFM_LBUFM10_MASK)
#define STCU2_LBUFM_LBUFM11_MASK                 (0x800U)
#define STCU2_LBUFM_LBUFM11_SHIFT                (11U)
#define STCU2_LBUFM_LBUFM11_WIDTH                (1U)
#define STCU2_LBUFM_LBUFM11(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_LBUFM_LBUFM11_SHIFT)) & STCU2_LBUFM_LBUFM11_MASK)
#define STCU2_LBUFM_LBUFM12_MASK                 (0x1000U)
#define STCU2_LBUFM_LBUFM12_SHIFT                (12U)
#define STCU2_LBUFM_LBUFM12_WIDTH                (1U)
#define STCU2_LBUFM_LBUFM12(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_LBUFM_LBUFM12_SHIFT)) & STCU2_LBUFM_LBUFM12_MASK)
#define STCU2_LBUFM_LBUFM13_MASK                 (0x2000U)
#define STCU2_LBUFM_LBUFM13_SHIFT                (13U)
#define STCU2_LBUFM_LBUFM13_WIDTH                (1U)
#define STCU2_LBUFM_LBUFM13(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_LBUFM_LBUFM13_SHIFT)) & STCU2_LBUFM_LBUFM13_MASK)
#define STCU2_LBUFM_LBUFM14_MASK                 (0x4000U)
#define STCU2_LBUFM_LBUFM14_SHIFT                (14U)
#define STCU2_LBUFM_LBUFM14_WIDTH                (1U)
#define STCU2_LBUFM_LBUFM14(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_LBUFM_LBUFM14_SHIFT)) & STCU2_LBUFM_LBUFM14_MASK)
#define STCU2_LBUFM_LBUFM15_MASK                 (0x8000U)
#define STCU2_LBUFM_LBUFM15_SHIFT                (15U)
#define STCU2_LBUFM_LBUFM15_WIDTH                (1U)
#define STCU2_LBUFM_LBUFM15(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_LBUFM_LBUFM15_SHIFT)) & STCU2_LBUFM_LBUFM15_MASK)
#define STCU2_LBUFM_LBUFM16_MASK                 (0x10000U)
#define STCU2_LBUFM_LBUFM16_SHIFT                (16U)
#define STCU2_LBUFM_LBUFM16_WIDTH                (1U)
#define STCU2_LBUFM_LBUFM16(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_LBUFM_LBUFM16_SHIFT)) & STCU2_LBUFM_LBUFM16_MASK)
#define STCU2_LBUFM_LBUFM17_MASK                 (0x20000U)
#define STCU2_LBUFM_LBUFM17_SHIFT                (17U)
#define STCU2_LBUFM_LBUFM17_WIDTH                (1U)
#define STCU2_LBUFM_LBUFM17(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_LBUFM_LBUFM17_SHIFT)) & STCU2_LBUFM_LBUFM17_MASK)
#define STCU2_LBUFM_LBUFM18_MASK                 (0x40000U)
#define STCU2_LBUFM_LBUFM18_SHIFT                (18U)
#define STCU2_LBUFM_LBUFM18_WIDTH                (1U)
#define STCU2_LBUFM_LBUFM18(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_LBUFM_LBUFM18_SHIFT)) & STCU2_LBUFM_LBUFM18_MASK)
#define STCU2_LBUFM_LBUFM19_MASK                 (0x80000U)
#define STCU2_LBUFM_LBUFM19_SHIFT                (19U)
#define STCU2_LBUFM_LBUFM19_WIDTH                (1U)
#define STCU2_LBUFM_LBUFM19(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_LBUFM_LBUFM19_SHIFT)) & STCU2_LBUFM_LBUFM19_MASK)
#define STCU2_LBUFM_LBUFM20_MASK                 (0x100000U)
#define STCU2_LBUFM_LBUFM20_SHIFT                (20U)
#define STCU2_LBUFM_LBUFM20_WIDTH                (1U)
#define STCU2_LBUFM_LBUFM20(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_LBUFM_LBUFM20_SHIFT)) & STCU2_LBUFM_LBUFM20_MASK)
#define STCU2_LBUFM_LBUFM21_MASK                 (0x200000U)
#define STCU2_LBUFM_LBUFM21_SHIFT                (21U)
#define STCU2_LBUFM_LBUFM21_WIDTH                (1U)
#define STCU2_LBUFM_LBUFM21(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_LBUFM_LBUFM21_SHIFT)) & STCU2_LBUFM_LBUFM21_MASK)
#define STCU2_LBUFM_LBUFM22_MASK                 (0x400000U)
#define STCU2_LBUFM_LBUFM22_SHIFT                (22U)
#define STCU2_LBUFM_LBUFM22_WIDTH                (1U)
#define STCU2_LBUFM_LBUFM22(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_LBUFM_LBUFM22_SHIFT)) & STCU2_LBUFM_LBUFM22_MASK)
#define STCU2_LBUFM_LBUFM23_MASK                 (0x800000U)
#define STCU2_LBUFM_LBUFM23_SHIFT                (23U)
#define STCU2_LBUFM_LBUFM23_WIDTH                (1U)
#define STCU2_LBUFM_LBUFM23(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_LBUFM_LBUFM23_SHIFT)) & STCU2_LBUFM_LBUFM23_MASK)
#define STCU2_LBUFM_LBUFM24_MASK                 (0x1000000U)
#define STCU2_LBUFM_LBUFM24_SHIFT                (24U)
#define STCU2_LBUFM_LBUFM24_WIDTH                (1U)
#define STCU2_LBUFM_LBUFM24(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_LBUFM_LBUFM24_SHIFT)) & STCU2_LBUFM_LBUFM24_MASK)
#define STCU2_LBUFM_LBUFM25_MASK                 (0x2000000U)
#define STCU2_LBUFM_LBUFM25_SHIFT                (25U)
#define STCU2_LBUFM_LBUFM25_WIDTH                (1U)
#define STCU2_LBUFM_LBUFM25(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_LBUFM_LBUFM25_SHIFT)) & STCU2_LBUFM_LBUFM25_MASK)
#define STCU2_LBUFM_LBUFM26_MASK                 (0x4000000U)
#define STCU2_LBUFM_LBUFM26_SHIFT                (26U)
#define STCU2_LBUFM_LBUFM26_WIDTH                (1U)
#define STCU2_LBUFM_LBUFM26(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_LBUFM_LBUFM26_SHIFT)) & STCU2_LBUFM_LBUFM26_MASK)
#define STCU2_LBUFM_LBUFM27_MASK                 (0x8000000U)
#define STCU2_LBUFM_LBUFM27_SHIFT                (27U)
#define STCU2_LBUFM_LBUFM27_WIDTH                (1U)
#define STCU2_LBUFM_LBUFM27(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_LBUFM_LBUFM27_SHIFT)) & STCU2_LBUFM_LBUFM27_MASK)
#define STCU2_LBUFM_LBUFM28_MASK                 (0x10000000U)
#define STCU2_LBUFM_LBUFM28_SHIFT                (28U)
#define STCU2_LBUFM_LBUFM28_WIDTH                (1U)
#define STCU2_LBUFM_LBUFM28(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_LBUFM_LBUFM28_SHIFT)) & STCU2_LBUFM_LBUFM28_MASK)
#define STCU2_LBUFM_LBUFM29_MASK                 (0x20000000U)
#define STCU2_LBUFM_LBUFM29_SHIFT                (29U)
#define STCU2_LBUFM_LBUFM29_WIDTH                (1U)
#define STCU2_LBUFM_LBUFM29(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_LBUFM_LBUFM29_SHIFT)) & STCU2_LBUFM_LBUFM29_MASK)
#define STCU2_LBUFM_LBUFM30_MASK                 (0x40000000U)
#define STCU2_LBUFM_LBUFM30_SHIFT                (30U)
#define STCU2_LBUFM_LBUFM30_WIDTH                (1U)
#define STCU2_LBUFM_LBUFM30(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_LBUFM_LBUFM30_SHIFT)) & STCU2_LBUFM_LBUFM30_MASK)
#define STCU2_LBUFM_LBUFM31_MASK                 (0x80000000U)
#define STCU2_LBUFM_LBUFM31_SHIFT                (31U)
#define STCU2_LBUFM_LBUFM31_WIDTH                (1U)
#define STCU2_LBUFM_LBUFM31(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_LBUFM_LBUFM31_SHIFT)) & STCU2_LBUFM_LBUFM31_MASK)
/*! @} */

/*! @name LBUFM1 - STCU2 Online LBIST Unrecoverable FM */
/*! @{ */
#define STCU2_LBUFM1_LBUFM32_MASK                (0x1U)
#define STCU2_LBUFM1_LBUFM32_SHIFT               (0U)
#define STCU2_LBUFM1_LBUFM32_WIDTH               (1U)
#define STCU2_LBUFM1_LBUFM32(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBUFM1_LBUFM32_SHIFT)) & STCU2_LBUFM1_LBUFM32_MASK)
#define STCU2_LBUFM1_LBUFM33_MASK                (0x2U)
#define STCU2_LBUFM1_LBUFM33_SHIFT               (1U)
#define STCU2_LBUFM1_LBUFM33_WIDTH               (1U)
#define STCU2_LBUFM1_LBUFM33(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBUFM1_LBUFM33_SHIFT)) & STCU2_LBUFM1_LBUFM33_MASK)
#define STCU2_LBUFM1_LBUFM34_MASK                (0x4U)
#define STCU2_LBUFM1_LBUFM34_SHIFT               (2U)
#define STCU2_LBUFM1_LBUFM34_WIDTH               (1U)
#define STCU2_LBUFM1_LBUFM34(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBUFM1_LBUFM34_SHIFT)) & STCU2_LBUFM1_LBUFM34_MASK)
#define STCU2_LBUFM1_LBUFM35_MASK                (0x8U)
#define STCU2_LBUFM1_LBUFM35_SHIFT               (3U)
#define STCU2_LBUFM1_LBUFM35_WIDTH               (1U)
#define STCU2_LBUFM1_LBUFM35(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBUFM1_LBUFM35_SHIFT)) & STCU2_LBUFM1_LBUFM35_MASK)
#define STCU2_LBUFM1_LBUFM36_MASK                (0x10U)
#define STCU2_LBUFM1_LBUFM36_SHIFT               (4U)
#define STCU2_LBUFM1_LBUFM36_WIDTH               (1U)
#define STCU2_LBUFM1_LBUFM36(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBUFM1_LBUFM36_SHIFT)) & STCU2_LBUFM1_LBUFM36_MASK)
#define STCU2_LBUFM1_LBUFM37_MASK                (0x20U)
#define STCU2_LBUFM1_LBUFM37_SHIFT               (5U)
#define STCU2_LBUFM1_LBUFM37_WIDTH               (1U)
#define STCU2_LBUFM1_LBUFM37(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBUFM1_LBUFM37_SHIFT)) & STCU2_LBUFM1_LBUFM37_MASK)
#define STCU2_LBUFM1_LBUFM38_MASK                (0x40U)
#define STCU2_LBUFM1_LBUFM38_SHIFT               (6U)
#define STCU2_LBUFM1_LBUFM38_WIDTH               (1U)
#define STCU2_LBUFM1_LBUFM38(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBUFM1_LBUFM38_SHIFT)) & STCU2_LBUFM1_LBUFM38_MASK)
#define STCU2_LBUFM1_LBUFM39_MASK                (0x80U)
#define STCU2_LBUFM1_LBUFM39_SHIFT               (7U)
#define STCU2_LBUFM1_LBUFM39_WIDTH               (1U)
#define STCU2_LBUFM1_LBUFM39(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBUFM1_LBUFM39_SHIFT)) & STCU2_LBUFM1_LBUFM39_MASK)
#define STCU2_LBUFM1_LBUFM40_MASK                (0x100U)
#define STCU2_LBUFM1_LBUFM40_SHIFT               (8U)
#define STCU2_LBUFM1_LBUFM40_WIDTH               (1U)
#define STCU2_LBUFM1_LBUFM40(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBUFM1_LBUFM40_SHIFT)) & STCU2_LBUFM1_LBUFM40_MASK)
#define STCU2_LBUFM1_LBUFM41_MASK                (0x200U)
#define STCU2_LBUFM1_LBUFM41_SHIFT               (9U)
#define STCU2_LBUFM1_LBUFM41_WIDTH               (1U)
#define STCU2_LBUFM1_LBUFM41(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBUFM1_LBUFM41_SHIFT)) & STCU2_LBUFM1_LBUFM41_MASK)
#define STCU2_LBUFM1_LBUFM42_MASK                (0x400U)
#define STCU2_LBUFM1_LBUFM42_SHIFT               (10U)
#define STCU2_LBUFM1_LBUFM42_WIDTH               (1U)
#define STCU2_LBUFM1_LBUFM42(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBUFM1_LBUFM42_SHIFT)) & STCU2_LBUFM1_LBUFM42_MASK)
#define STCU2_LBUFM1_LBUFM43_MASK                (0x800U)
#define STCU2_LBUFM1_LBUFM43_SHIFT               (11U)
#define STCU2_LBUFM1_LBUFM43_WIDTH               (1U)
#define STCU2_LBUFM1_LBUFM43(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBUFM1_LBUFM43_SHIFT)) & STCU2_LBUFM1_LBUFM43_MASK)
#define STCU2_LBUFM1_LBUFM44_MASK                (0x1000U)
#define STCU2_LBUFM1_LBUFM44_SHIFT               (12U)
#define STCU2_LBUFM1_LBUFM44_WIDTH               (1U)
#define STCU2_LBUFM1_LBUFM44(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBUFM1_LBUFM44_SHIFT)) & STCU2_LBUFM1_LBUFM44_MASK)
#define STCU2_LBUFM1_LBUFM45_MASK                (0x2000U)
#define STCU2_LBUFM1_LBUFM45_SHIFT               (13U)
#define STCU2_LBUFM1_LBUFM45_WIDTH               (1U)
#define STCU2_LBUFM1_LBUFM45(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBUFM1_LBUFM45_SHIFT)) & STCU2_LBUFM1_LBUFM45_MASK)
#define STCU2_LBUFM1_LBUFM46_MASK                (0x4000U)
#define STCU2_LBUFM1_LBUFM46_SHIFT               (14U)
#define STCU2_LBUFM1_LBUFM46_WIDTH               (1U)
#define STCU2_LBUFM1_LBUFM46(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBUFM1_LBUFM46_SHIFT)) & STCU2_LBUFM1_LBUFM46_MASK)
#define STCU2_LBUFM1_LBUFM47_MASK                (0x8000U)
#define STCU2_LBUFM1_LBUFM47_SHIFT               (15U)
#define STCU2_LBUFM1_LBUFM47_WIDTH               (1U)
#define STCU2_LBUFM1_LBUFM47(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBUFM1_LBUFM47_SHIFT)) & STCU2_LBUFM1_LBUFM47_MASK)
#define STCU2_LBUFM1_LBUFM48_MASK                (0x10000U)
#define STCU2_LBUFM1_LBUFM48_SHIFT               (16U)
#define STCU2_LBUFM1_LBUFM48_WIDTH               (1U)
#define STCU2_LBUFM1_LBUFM48(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBUFM1_LBUFM48_SHIFT)) & STCU2_LBUFM1_LBUFM48_MASK)
#define STCU2_LBUFM1_LBUFM49_MASK                (0x20000U)
#define STCU2_LBUFM1_LBUFM49_SHIFT               (17U)
#define STCU2_LBUFM1_LBUFM49_WIDTH               (1U)
#define STCU2_LBUFM1_LBUFM49(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBUFM1_LBUFM49_SHIFT)) & STCU2_LBUFM1_LBUFM49_MASK)
#define STCU2_LBUFM1_LBUFM50_MASK                (0x40000U)
#define STCU2_LBUFM1_LBUFM50_SHIFT               (18U)
#define STCU2_LBUFM1_LBUFM50_WIDTH               (1U)
#define STCU2_LBUFM1_LBUFM50(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBUFM1_LBUFM50_SHIFT)) & STCU2_LBUFM1_LBUFM50_MASK)
#define STCU2_LBUFM1_LBUFM51_MASK                (0x80000U)
#define STCU2_LBUFM1_LBUFM51_SHIFT               (19U)
#define STCU2_LBUFM1_LBUFM51_WIDTH               (1U)
#define STCU2_LBUFM1_LBUFM51(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBUFM1_LBUFM51_SHIFT)) & STCU2_LBUFM1_LBUFM51_MASK)
#define STCU2_LBUFM1_LBUFM52_MASK                (0x100000U)
#define STCU2_LBUFM1_LBUFM52_SHIFT               (20U)
#define STCU2_LBUFM1_LBUFM52_WIDTH               (1U)
#define STCU2_LBUFM1_LBUFM52(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBUFM1_LBUFM52_SHIFT)) & STCU2_LBUFM1_LBUFM52_MASK)
#define STCU2_LBUFM1_LBUFM53_MASK                (0x200000U)
#define STCU2_LBUFM1_LBUFM53_SHIFT               (21U)
#define STCU2_LBUFM1_LBUFM53_WIDTH               (1U)
#define STCU2_LBUFM1_LBUFM53(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBUFM1_LBUFM53_SHIFT)) & STCU2_LBUFM1_LBUFM53_MASK)
#define STCU2_LBUFM1_LBUFM54_MASK                (0x400000U)
#define STCU2_LBUFM1_LBUFM54_SHIFT               (22U)
#define STCU2_LBUFM1_LBUFM54_WIDTH               (1U)
#define STCU2_LBUFM1_LBUFM54(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBUFM1_LBUFM54_SHIFT)) & STCU2_LBUFM1_LBUFM54_MASK)
#define STCU2_LBUFM1_LBUFM55_MASK                (0x800000U)
#define STCU2_LBUFM1_LBUFM55_SHIFT               (23U)
#define STCU2_LBUFM1_LBUFM55_WIDTH               (1U)
#define STCU2_LBUFM1_LBUFM55(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBUFM1_LBUFM55_SHIFT)) & STCU2_LBUFM1_LBUFM55_MASK)
#define STCU2_LBUFM1_LBUFM56_MASK                (0x1000000U)
#define STCU2_LBUFM1_LBUFM56_SHIFT               (24U)
#define STCU2_LBUFM1_LBUFM56_WIDTH               (1U)
#define STCU2_LBUFM1_LBUFM56(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBUFM1_LBUFM56_SHIFT)) & STCU2_LBUFM1_LBUFM56_MASK)
#define STCU2_LBUFM1_LBUFM57_MASK                (0x2000000U)
#define STCU2_LBUFM1_LBUFM57_SHIFT               (25U)
#define STCU2_LBUFM1_LBUFM57_WIDTH               (1U)
#define STCU2_LBUFM1_LBUFM57(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBUFM1_LBUFM57_SHIFT)) & STCU2_LBUFM1_LBUFM57_MASK)
#define STCU2_LBUFM1_LBUFM58_MASK                (0x4000000U)
#define STCU2_LBUFM1_LBUFM58_SHIFT               (26U)
#define STCU2_LBUFM1_LBUFM58_WIDTH               (1U)
#define STCU2_LBUFM1_LBUFM58(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBUFM1_LBUFM58_SHIFT)) & STCU2_LBUFM1_LBUFM58_MASK)
#define STCU2_LBUFM1_LBUFM59_MASK                (0x8000000U)
#define STCU2_LBUFM1_LBUFM59_SHIFT               (27U)
#define STCU2_LBUFM1_LBUFM59_WIDTH               (1U)
#define STCU2_LBUFM1_LBUFM59(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_LBUFM1_LBUFM59_SHIFT)) & STCU2_LBUFM1_LBUFM59_MASK)
/*! @} */

/*! @name MBSSW - STCU2 Online MBIST Status */
/*! @{ */
#define STCU2_MBSSW_MBSSW0_MASK                  (0x1U)
#define STCU2_MBSSW_MBSSW0_SHIFT                 (0U)
#define STCU2_MBSSW_MBSSW0_WIDTH                 (1U)
#define STCU2_MBSSW_MBSSW0(x)                    (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW0_SHIFT)) & STCU2_MBSSW_MBSSW0_MASK)
#define STCU2_MBSSW_MBSSW1_MASK                  (0x2U)
#define STCU2_MBSSW_MBSSW1_SHIFT                 (1U)
#define STCU2_MBSSW_MBSSW1_WIDTH                 (1U)
#define STCU2_MBSSW_MBSSW1(x)                    (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW1_SHIFT)) & STCU2_MBSSW_MBSSW1_MASK)
#define STCU2_MBSSW_MBSSW2_MASK                  (0x4U)
#define STCU2_MBSSW_MBSSW2_SHIFT                 (2U)
#define STCU2_MBSSW_MBSSW2_WIDTH                 (1U)
#define STCU2_MBSSW_MBSSW2(x)                    (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW2_SHIFT)) & STCU2_MBSSW_MBSSW2_MASK)
#define STCU2_MBSSW_MBSSW3_MASK                  (0x8U)
#define STCU2_MBSSW_MBSSW3_SHIFT                 (3U)
#define STCU2_MBSSW_MBSSW3_WIDTH                 (1U)
#define STCU2_MBSSW_MBSSW3(x)                    (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW3_SHIFT)) & STCU2_MBSSW_MBSSW3_MASK)
#define STCU2_MBSSW_MBSSW4_MASK                  (0x10U)
#define STCU2_MBSSW_MBSSW4_SHIFT                 (4U)
#define STCU2_MBSSW_MBSSW4_WIDTH                 (1U)
#define STCU2_MBSSW_MBSSW4(x)                    (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW4_SHIFT)) & STCU2_MBSSW_MBSSW4_MASK)
#define STCU2_MBSSW_MBSSW5_MASK                  (0x20U)
#define STCU2_MBSSW_MBSSW5_SHIFT                 (5U)
#define STCU2_MBSSW_MBSSW5_WIDTH                 (1U)
#define STCU2_MBSSW_MBSSW5(x)                    (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW5_SHIFT)) & STCU2_MBSSW_MBSSW5_MASK)
#define STCU2_MBSSW_MBSSW6_MASK                  (0x40U)
#define STCU2_MBSSW_MBSSW6_SHIFT                 (6U)
#define STCU2_MBSSW_MBSSW6_WIDTH                 (1U)
#define STCU2_MBSSW_MBSSW6(x)                    (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW6_SHIFT)) & STCU2_MBSSW_MBSSW6_MASK)
#define STCU2_MBSSW_MBSSW7_MASK                  (0x80U)
#define STCU2_MBSSW_MBSSW7_SHIFT                 (7U)
#define STCU2_MBSSW_MBSSW7_WIDTH                 (1U)
#define STCU2_MBSSW_MBSSW7(x)                    (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW7_SHIFT)) & STCU2_MBSSW_MBSSW7_MASK)
#define STCU2_MBSSW_MBSSW8_MASK                  (0x100U)
#define STCU2_MBSSW_MBSSW8_SHIFT                 (8U)
#define STCU2_MBSSW_MBSSW8_WIDTH                 (1U)
#define STCU2_MBSSW_MBSSW8(x)                    (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW8_SHIFT)) & STCU2_MBSSW_MBSSW8_MASK)
#define STCU2_MBSSW_MBSSW9_MASK                  (0x200U)
#define STCU2_MBSSW_MBSSW9_SHIFT                 (9U)
#define STCU2_MBSSW_MBSSW9_WIDTH                 (1U)
#define STCU2_MBSSW_MBSSW9(x)                    (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW9_SHIFT)) & STCU2_MBSSW_MBSSW9_MASK)
#define STCU2_MBSSW_MBSSW10_MASK                 (0x400U)
#define STCU2_MBSSW_MBSSW10_SHIFT                (10U)
#define STCU2_MBSSW_MBSSW10_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW10(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW10_SHIFT)) & STCU2_MBSSW_MBSSW10_MASK)
#define STCU2_MBSSW_MBSSW11_MASK                 (0x800U)
#define STCU2_MBSSW_MBSSW11_SHIFT                (11U)
#define STCU2_MBSSW_MBSSW11_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW11(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW11_SHIFT)) & STCU2_MBSSW_MBSSW11_MASK)
#define STCU2_MBSSW_MBSSW12_MASK                 (0x1000U)
#define STCU2_MBSSW_MBSSW12_SHIFT                (12U)
#define STCU2_MBSSW_MBSSW12_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW12(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW12_SHIFT)) & STCU2_MBSSW_MBSSW12_MASK)
#define STCU2_MBSSW_MBSSW13_MASK                 (0x2000U)
#define STCU2_MBSSW_MBSSW13_SHIFT                (13U)
#define STCU2_MBSSW_MBSSW13_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW13(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW13_SHIFT)) & STCU2_MBSSW_MBSSW13_MASK)
#define STCU2_MBSSW_MBSSW14_MASK                 (0x4000U)
#define STCU2_MBSSW_MBSSW14_SHIFT                (14U)
#define STCU2_MBSSW_MBSSW14_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW14(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW14_SHIFT)) & STCU2_MBSSW_MBSSW14_MASK)
#define STCU2_MBSSW_MBSSW15_MASK                 (0x8000U)
#define STCU2_MBSSW_MBSSW15_SHIFT                (15U)
#define STCU2_MBSSW_MBSSW15_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW15(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW15_SHIFT)) & STCU2_MBSSW_MBSSW15_MASK)
#define STCU2_MBSSW_MBSSW16_MASK                 (0x10000U)
#define STCU2_MBSSW_MBSSW16_SHIFT                (16U)
#define STCU2_MBSSW_MBSSW16_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW16(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW16_SHIFT)) & STCU2_MBSSW_MBSSW16_MASK)
#define STCU2_MBSSW_MBSSW17_MASK                 (0x20000U)
#define STCU2_MBSSW_MBSSW17_SHIFT                (17U)
#define STCU2_MBSSW_MBSSW17_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW17(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW17_SHIFT)) & STCU2_MBSSW_MBSSW17_MASK)
#define STCU2_MBSSW_MBSSW18_MASK                 (0x40000U)
#define STCU2_MBSSW_MBSSW18_SHIFT                (18U)
#define STCU2_MBSSW_MBSSW18_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW18(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW18_SHIFT)) & STCU2_MBSSW_MBSSW18_MASK)
#define STCU2_MBSSW_MBSSW19_MASK                 (0x80000U)
#define STCU2_MBSSW_MBSSW19_SHIFT                (19U)
#define STCU2_MBSSW_MBSSW19_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW19(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW19_SHIFT)) & STCU2_MBSSW_MBSSW19_MASK)
#define STCU2_MBSSW_MBSSW20_MASK                 (0x100000U)
#define STCU2_MBSSW_MBSSW20_SHIFT                (20U)
#define STCU2_MBSSW_MBSSW20_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW20(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW20_SHIFT)) & STCU2_MBSSW_MBSSW20_MASK)
#define STCU2_MBSSW_MBSSW21_MASK                 (0x200000U)
#define STCU2_MBSSW_MBSSW21_SHIFT                (21U)
#define STCU2_MBSSW_MBSSW21_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW21(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW21_SHIFT)) & STCU2_MBSSW_MBSSW21_MASK)
#define STCU2_MBSSW_MBSSW22_MASK                 (0x400000U)
#define STCU2_MBSSW_MBSSW22_SHIFT                (22U)
#define STCU2_MBSSW_MBSSW22_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW22(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW22_SHIFT)) & STCU2_MBSSW_MBSSW22_MASK)
#define STCU2_MBSSW_MBSSW23_MASK                 (0x800000U)
#define STCU2_MBSSW_MBSSW23_SHIFT                (23U)
#define STCU2_MBSSW_MBSSW23_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW23(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW23_SHIFT)) & STCU2_MBSSW_MBSSW23_MASK)
#define STCU2_MBSSW_MBSSW24_MASK                 (0x1000000U)
#define STCU2_MBSSW_MBSSW24_SHIFT                (24U)
#define STCU2_MBSSW_MBSSW24_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW24(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW24_SHIFT)) & STCU2_MBSSW_MBSSW24_MASK)
#define STCU2_MBSSW_MBSSW25_MASK                 (0x2000000U)
#define STCU2_MBSSW_MBSSW25_SHIFT                (25U)
#define STCU2_MBSSW_MBSSW25_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW25(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW25_SHIFT)) & STCU2_MBSSW_MBSSW25_MASK)
#define STCU2_MBSSW_MBSSW26_MASK                 (0x4000000U)
#define STCU2_MBSSW_MBSSW26_SHIFT                (26U)
#define STCU2_MBSSW_MBSSW26_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW26(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW26_SHIFT)) & STCU2_MBSSW_MBSSW26_MASK)
#define STCU2_MBSSW_MBSSW27_MASK                 (0x8000000U)
#define STCU2_MBSSW_MBSSW27_SHIFT                (27U)
#define STCU2_MBSSW_MBSSW27_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW27(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW27_SHIFT)) & STCU2_MBSSW_MBSSW27_MASK)
#define STCU2_MBSSW_MBSSW28_MASK                 (0x10000000U)
#define STCU2_MBSSW_MBSSW28_SHIFT                (28U)
#define STCU2_MBSSW_MBSSW28_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW28(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW28_SHIFT)) & STCU2_MBSSW_MBSSW28_MASK)
#define STCU2_MBSSW_MBSSW29_MASK                 (0x20000000U)
#define STCU2_MBSSW_MBSSW29_SHIFT                (29U)
#define STCU2_MBSSW_MBSSW29_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW29(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW29_SHIFT)) & STCU2_MBSSW_MBSSW29_MASK)
#define STCU2_MBSSW_MBSSW30_MASK                 (0x40000000U)
#define STCU2_MBSSW_MBSSW30_SHIFT                (30U)
#define STCU2_MBSSW_MBSSW30_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW30(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW30_SHIFT)) & STCU2_MBSSW_MBSSW30_MASK)
#define STCU2_MBSSW_MBSSW31_MASK                 (0x80000000U)
#define STCU2_MBSSW_MBSSW31_SHIFT                (31U)
#define STCU2_MBSSW_MBSSW31_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW31(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW31_SHIFT)) & STCU2_MBSSW_MBSSW31_MASK)
#define STCU2_MBSSW_MBSSW32_MASK                 (0x1U)
#define STCU2_MBSSW_MBSSW32_SHIFT                (0U)
#define STCU2_MBSSW_MBSSW32_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW32(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW32_SHIFT)) & STCU2_MBSSW_MBSSW32_MASK)
#define STCU2_MBSSW_MBSSW33_MASK                 (0x2U)
#define STCU2_MBSSW_MBSSW33_SHIFT                (1U)
#define STCU2_MBSSW_MBSSW33_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW33(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW33_SHIFT)) & STCU2_MBSSW_MBSSW33_MASK)
#define STCU2_MBSSW_MBSSW34_MASK                 (0x4U)
#define STCU2_MBSSW_MBSSW34_SHIFT                (2U)
#define STCU2_MBSSW_MBSSW34_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW34(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW34_SHIFT)) & STCU2_MBSSW_MBSSW34_MASK)
#define STCU2_MBSSW_MBSSW35_MASK                 (0x8U)
#define STCU2_MBSSW_MBSSW35_SHIFT                (3U)
#define STCU2_MBSSW_MBSSW35_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW35(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW35_SHIFT)) & STCU2_MBSSW_MBSSW35_MASK)
#define STCU2_MBSSW_MBSSW36_MASK                 (0x10U)
#define STCU2_MBSSW_MBSSW36_SHIFT                (4U)
#define STCU2_MBSSW_MBSSW36_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW36(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW36_SHIFT)) & STCU2_MBSSW_MBSSW36_MASK)
#define STCU2_MBSSW_MBSSW37_MASK                 (0x20U)
#define STCU2_MBSSW_MBSSW37_SHIFT                (5U)
#define STCU2_MBSSW_MBSSW37_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW37(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW37_SHIFT)) & STCU2_MBSSW_MBSSW37_MASK)
#define STCU2_MBSSW_MBSSW38_MASK                 (0x40U)
#define STCU2_MBSSW_MBSSW38_SHIFT                (6U)
#define STCU2_MBSSW_MBSSW38_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW38(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW38_SHIFT)) & STCU2_MBSSW_MBSSW38_MASK)
#define STCU2_MBSSW_MBSSW39_MASK                 (0x80U)
#define STCU2_MBSSW_MBSSW39_SHIFT                (7U)
#define STCU2_MBSSW_MBSSW39_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW39(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW39_SHIFT)) & STCU2_MBSSW_MBSSW39_MASK)
#define STCU2_MBSSW_MBSSW40_MASK                 (0x100U)
#define STCU2_MBSSW_MBSSW40_SHIFT                (8U)
#define STCU2_MBSSW_MBSSW40_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW40(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW40_SHIFT)) & STCU2_MBSSW_MBSSW40_MASK)
#define STCU2_MBSSW_MBSSW41_MASK                 (0x200U)
#define STCU2_MBSSW_MBSSW41_SHIFT                (9U)
#define STCU2_MBSSW_MBSSW41_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW41(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW41_SHIFT)) & STCU2_MBSSW_MBSSW41_MASK)
#define STCU2_MBSSW_MBSSW42_MASK                 (0x400U)
#define STCU2_MBSSW_MBSSW42_SHIFT                (10U)
#define STCU2_MBSSW_MBSSW42_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW42(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW42_SHIFT)) & STCU2_MBSSW_MBSSW42_MASK)
#define STCU2_MBSSW_MBSSW43_MASK                 (0x800U)
#define STCU2_MBSSW_MBSSW43_SHIFT                (11U)
#define STCU2_MBSSW_MBSSW43_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW43(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW43_SHIFT)) & STCU2_MBSSW_MBSSW43_MASK)
#define STCU2_MBSSW_MBSSW44_MASK                 (0x1000U)
#define STCU2_MBSSW_MBSSW44_SHIFT                (12U)
#define STCU2_MBSSW_MBSSW44_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW44(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW44_SHIFT)) & STCU2_MBSSW_MBSSW44_MASK)
#define STCU2_MBSSW_MBSSW45_MASK                 (0x2000U)
#define STCU2_MBSSW_MBSSW45_SHIFT                (13U)
#define STCU2_MBSSW_MBSSW45_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW45(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW45_SHIFT)) & STCU2_MBSSW_MBSSW45_MASK)
#define STCU2_MBSSW_MBSSW46_MASK                 (0x4000U)
#define STCU2_MBSSW_MBSSW46_SHIFT                (14U)
#define STCU2_MBSSW_MBSSW46_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW46(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW46_SHIFT)) & STCU2_MBSSW_MBSSW46_MASK)
#define STCU2_MBSSW_MBSSW47_MASK                 (0x8000U)
#define STCU2_MBSSW_MBSSW47_SHIFT                (15U)
#define STCU2_MBSSW_MBSSW47_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW47(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW47_SHIFT)) & STCU2_MBSSW_MBSSW47_MASK)
#define STCU2_MBSSW_MBSSW48_MASK                 (0x10000U)
#define STCU2_MBSSW_MBSSW48_SHIFT                (16U)
#define STCU2_MBSSW_MBSSW48_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW48(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW48_SHIFT)) & STCU2_MBSSW_MBSSW48_MASK)
#define STCU2_MBSSW_MBSSW49_MASK                 (0x20000U)
#define STCU2_MBSSW_MBSSW49_SHIFT                (17U)
#define STCU2_MBSSW_MBSSW49_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW49(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW49_SHIFT)) & STCU2_MBSSW_MBSSW49_MASK)
#define STCU2_MBSSW_MBSSW50_MASK                 (0x40000U)
#define STCU2_MBSSW_MBSSW50_SHIFT                (18U)
#define STCU2_MBSSW_MBSSW50_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW50(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW50_SHIFT)) & STCU2_MBSSW_MBSSW50_MASK)
#define STCU2_MBSSW_MBSSW51_MASK                 (0x80000U)
#define STCU2_MBSSW_MBSSW51_SHIFT                (19U)
#define STCU2_MBSSW_MBSSW51_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW51(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW51_SHIFT)) & STCU2_MBSSW_MBSSW51_MASK)
#define STCU2_MBSSW_MBSSW52_MASK                 (0x100000U)
#define STCU2_MBSSW_MBSSW52_SHIFT                (20U)
#define STCU2_MBSSW_MBSSW52_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW52(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW52_SHIFT)) & STCU2_MBSSW_MBSSW52_MASK)
#define STCU2_MBSSW_MBSSW53_MASK                 (0x200000U)
#define STCU2_MBSSW_MBSSW53_SHIFT                (21U)
#define STCU2_MBSSW_MBSSW53_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW53(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW53_SHIFT)) & STCU2_MBSSW_MBSSW53_MASK)
#define STCU2_MBSSW_MBSSW54_MASK                 (0x400000U)
#define STCU2_MBSSW_MBSSW54_SHIFT                (22U)
#define STCU2_MBSSW_MBSSW54_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW54(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW54_SHIFT)) & STCU2_MBSSW_MBSSW54_MASK)
#define STCU2_MBSSW_MBSSW55_MASK                 (0x800000U)
#define STCU2_MBSSW_MBSSW55_SHIFT                (23U)
#define STCU2_MBSSW_MBSSW55_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW55(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW55_SHIFT)) & STCU2_MBSSW_MBSSW55_MASK)
#define STCU2_MBSSW_MBSSW56_MASK                 (0x1000000U)
#define STCU2_MBSSW_MBSSW56_SHIFT                (24U)
#define STCU2_MBSSW_MBSSW56_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW56(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW56_SHIFT)) & STCU2_MBSSW_MBSSW56_MASK)
#define STCU2_MBSSW_MBSSW57_MASK                 (0x2000000U)
#define STCU2_MBSSW_MBSSW57_SHIFT                (25U)
#define STCU2_MBSSW_MBSSW57_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW57(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW57_SHIFT)) & STCU2_MBSSW_MBSSW57_MASK)
#define STCU2_MBSSW_MBSSW58_MASK                 (0x4000000U)
#define STCU2_MBSSW_MBSSW58_SHIFT                (26U)
#define STCU2_MBSSW_MBSSW58_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW58(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW58_SHIFT)) & STCU2_MBSSW_MBSSW58_MASK)
#define STCU2_MBSSW_MBSSW59_MASK                 (0x8000000U)
#define STCU2_MBSSW_MBSSW59_SHIFT                (27U)
#define STCU2_MBSSW_MBSSW59_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW59(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW59_SHIFT)) & STCU2_MBSSW_MBSSW59_MASK)
#define STCU2_MBSSW_MBSSW60_MASK                 (0x10000000U)
#define STCU2_MBSSW_MBSSW60_SHIFT                (28U)
#define STCU2_MBSSW_MBSSW60_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW60(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW60_SHIFT)) & STCU2_MBSSW_MBSSW60_MASK)
#define STCU2_MBSSW_MBSSW61_MASK                 (0x20000000U)
#define STCU2_MBSSW_MBSSW61_SHIFT                (29U)
#define STCU2_MBSSW_MBSSW61_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW61(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW61_SHIFT)) & STCU2_MBSSW_MBSSW61_MASK)
#define STCU2_MBSSW_MBSSW62_MASK                 (0x40000000U)
#define STCU2_MBSSW_MBSSW62_SHIFT                (30U)
#define STCU2_MBSSW_MBSSW62_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW62(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW62_SHIFT)) & STCU2_MBSSW_MBSSW62_MASK)
#define STCU2_MBSSW_MBSSW63_MASK                 (0x80000000U)
#define STCU2_MBSSW_MBSSW63_SHIFT                (31U)
#define STCU2_MBSSW_MBSSW63_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW63(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW63_SHIFT)) & STCU2_MBSSW_MBSSW63_MASK)
#define STCU2_MBSSW_MBSSW64_MASK                 (0x1U)
#define STCU2_MBSSW_MBSSW64_SHIFT                (0U)
#define STCU2_MBSSW_MBSSW64_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW64(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW64_SHIFT)) & STCU2_MBSSW_MBSSW64_MASK)
#define STCU2_MBSSW_MBSSW65_MASK                 (0x2U)
#define STCU2_MBSSW_MBSSW65_SHIFT                (1U)
#define STCU2_MBSSW_MBSSW65_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW65(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW65_SHIFT)) & STCU2_MBSSW_MBSSW65_MASK)
#define STCU2_MBSSW_MBSSW66_MASK                 (0x4U)
#define STCU2_MBSSW_MBSSW66_SHIFT                (2U)
#define STCU2_MBSSW_MBSSW66_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW66(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW66_SHIFT)) & STCU2_MBSSW_MBSSW66_MASK)
#define STCU2_MBSSW_MBSSW67_MASK                 (0x8U)
#define STCU2_MBSSW_MBSSW67_SHIFT                (3U)
#define STCU2_MBSSW_MBSSW67_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW67(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW67_SHIFT)) & STCU2_MBSSW_MBSSW67_MASK)
#define STCU2_MBSSW_MBSSW68_MASK                 (0x10U)
#define STCU2_MBSSW_MBSSW68_SHIFT                (4U)
#define STCU2_MBSSW_MBSSW68_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW68(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW68_SHIFT)) & STCU2_MBSSW_MBSSW68_MASK)
#define STCU2_MBSSW_MBSSW69_MASK                 (0x20U)
#define STCU2_MBSSW_MBSSW69_SHIFT                (5U)
#define STCU2_MBSSW_MBSSW69_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW69(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW69_SHIFT)) & STCU2_MBSSW_MBSSW69_MASK)
#define STCU2_MBSSW_MBSSW70_MASK                 (0x40U)
#define STCU2_MBSSW_MBSSW70_SHIFT                (6U)
#define STCU2_MBSSW_MBSSW70_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW70(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW70_SHIFT)) & STCU2_MBSSW_MBSSW70_MASK)
#define STCU2_MBSSW_MBSSW71_MASK                 (0x80U)
#define STCU2_MBSSW_MBSSW71_SHIFT                (7U)
#define STCU2_MBSSW_MBSSW71_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW71(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW71_SHIFT)) & STCU2_MBSSW_MBSSW71_MASK)
#define STCU2_MBSSW_MBSSW72_MASK                 (0x100U)
#define STCU2_MBSSW_MBSSW72_SHIFT                (8U)
#define STCU2_MBSSW_MBSSW72_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW72(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW72_SHIFT)) & STCU2_MBSSW_MBSSW72_MASK)
#define STCU2_MBSSW_MBSSW73_MASK                 (0x200U)
#define STCU2_MBSSW_MBSSW73_SHIFT                (9U)
#define STCU2_MBSSW_MBSSW73_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW73(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW73_SHIFT)) & STCU2_MBSSW_MBSSW73_MASK)
#define STCU2_MBSSW_MBSSW74_MASK                 (0x400U)
#define STCU2_MBSSW_MBSSW74_SHIFT                (10U)
#define STCU2_MBSSW_MBSSW74_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW74(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW74_SHIFT)) & STCU2_MBSSW_MBSSW74_MASK)
#define STCU2_MBSSW_MBSSW75_MASK                 (0x800U)
#define STCU2_MBSSW_MBSSW75_SHIFT                (11U)
#define STCU2_MBSSW_MBSSW75_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW75(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW75_SHIFT)) & STCU2_MBSSW_MBSSW75_MASK)
#define STCU2_MBSSW_MBSSW76_MASK                 (0x1000U)
#define STCU2_MBSSW_MBSSW76_SHIFT                (12U)
#define STCU2_MBSSW_MBSSW76_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW76(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW76_SHIFT)) & STCU2_MBSSW_MBSSW76_MASK)
#define STCU2_MBSSW_MBSSW77_MASK                 (0x2000U)
#define STCU2_MBSSW_MBSSW77_SHIFT                (13U)
#define STCU2_MBSSW_MBSSW77_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW77(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW77_SHIFT)) & STCU2_MBSSW_MBSSW77_MASK)
#define STCU2_MBSSW_MBSSW78_MASK                 (0x4000U)
#define STCU2_MBSSW_MBSSW78_SHIFT                (14U)
#define STCU2_MBSSW_MBSSW78_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW78(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW78_SHIFT)) & STCU2_MBSSW_MBSSW78_MASK)
#define STCU2_MBSSW_MBSSW79_MASK                 (0x8000U)
#define STCU2_MBSSW_MBSSW79_SHIFT                (15U)
#define STCU2_MBSSW_MBSSW79_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW79(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW79_SHIFT)) & STCU2_MBSSW_MBSSW79_MASK)
#define STCU2_MBSSW_MBSSW80_MASK                 (0x10000U)
#define STCU2_MBSSW_MBSSW80_SHIFT                (16U)
#define STCU2_MBSSW_MBSSW80_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW80(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW80_SHIFT)) & STCU2_MBSSW_MBSSW80_MASK)
#define STCU2_MBSSW_MBSSW81_MASK                 (0x20000U)
#define STCU2_MBSSW_MBSSW81_SHIFT                (17U)
#define STCU2_MBSSW_MBSSW81_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW81(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW81_SHIFT)) & STCU2_MBSSW_MBSSW81_MASK)
#define STCU2_MBSSW_MBSSW82_MASK                 (0x40000U)
#define STCU2_MBSSW_MBSSW82_SHIFT                (18U)
#define STCU2_MBSSW_MBSSW82_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW82(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW82_SHIFT)) & STCU2_MBSSW_MBSSW82_MASK)
#define STCU2_MBSSW_MBSSW83_MASK                 (0x80000U)
#define STCU2_MBSSW_MBSSW83_SHIFT                (19U)
#define STCU2_MBSSW_MBSSW83_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW83(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW83_SHIFT)) & STCU2_MBSSW_MBSSW83_MASK)
#define STCU2_MBSSW_MBSSW84_MASK                 (0x100000U)
#define STCU2_MBSSW_MBSSW84_SHIFT                (20U)
#define STCU2_MBSSW_MBSSW84_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW84(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW84_SHIFT)) & STCU2_MBSSW_MBSSW84_MASK)
#define STCU2_MBSSW_MBSSW85_MASK                 (0x200000U)
#define STCU2_MBSSW_MBSSW85_SHIFT                (21U)
#define STCU2_MBSSW_MBSSW85_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW85(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW85_SHIFT)) & STCU2_MBSSW_MBSSW85_MASK)
#define STCU2_MBSSW_MBSSW86_MASK                 (0x400000U)
#define STCU2_MBSSW_MBSSW86_SHIFT                (22U)
#define STCU2_MBSSW_MBSSW86_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW86(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW86_SHIFT)) & STCU2_MBSSW_MBSSW86_MASK)
#define STCU2_MBSSW_MBSSW87_MASK                 (0x800000U)
#define STCU2_MBSSW_MBSSW87_SHIFT                (23U)
#define STCU2_MBSSW_MBSSW87_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW87(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW87_SHIFT)) & STCU2_MBSSW_MBSSW87_MASK)
#define STCU2_MBSSW_MBSSW88_MASK                 (0x1000000U)
#define STCU2_MBSSW_MBSSW88_SHIFT                (24U)
#define STCU2_MBSSW_MBSSW88_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW88(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW88_SHIFT)) & STCU2_MBSSW_MBSSW88_MASK)
#define STCU2_MBSSW_MBSSW89_MASK                 (0x2000000U)
#define STCU2_MBSSW_MBSSW89_SHIFT                (25U)
#define STCU2_MBSSW_MBSSW89_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW89(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW89_SHIFT)) & STCU2_MBSSW_MBSSW89_MASK)
#define STCU2_MBSSW_MBSSW90_MASK                 (0x4000000U)
#define STCU2_MBSSW_MBSSW90_SHIFT                (26U)
#define STCU2_MBSSW_MBSSW90_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW90(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW90_SHIFT)) & STCU2_MBSSW_MBSSW90_MASK)
#define STCU2_MBSSW_MBSSW91_MASK                 (0x8000000U)
#define STCU2_MBSSW_MBSSW91_SHIFT                (27U)
#define STCU2_MBSSW_MBSSW91_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW91(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW91_SHIFT)) & STCU2_MBSSW_MBSSW91_MASK)
#define STCU2_MBSSW_MBSSW92_MASK                 (0x10000000U)
#define STCU2_MBSSW_MBSSW92_SHIFT                (28U)
#define STCU2_MBSSW_MBSSW92_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW92(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW92_SHIFT)) & STCU2_MBSSW_MBSSW92_MASK)
#define STCU2_MBSSW_MBSSW93_MASK                 (0x20000000U)
#define STCU2_MBSSW_MBSSW93_SHIFT                (29U)
#define STCU2_MBSSW_MBSSW93_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW93(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW93_SHIFT)) & STCU2_MBSSW_MBSSW93_MASK)
#define STCU2_MBSSW_MBSSW94_MASK                 (0x40000000U)
#define STCU2_MBSSW_MBSSW94_SHIFT                (30U)
#define STCU2_MBSSW_MBSSW94_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW94(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW94_SHIFT)) & STCU2_MBSSW_MBSSW94_MASK)
#define STCU2_MBSSW_MBSSW95_MASK                 (0x80000000U)
#define STCU2_MBSSW_MBSSW95_SHIFT                (31U)
#define STCU2_MBSSW_MBSSW95_WIDTH                (1U)
#define STCU2_MBSSW_MBSSW95(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW_MBSSW95_SHIFT)) & STCU2_MBSSW_MBSSW95_MASK)
/*! @} */

/*! @name MBSSW3 - STCU2 Online MBIST Status */
/*! @{ */
#define STCU2_MBSSW3_MBSSW96_MASK                (0x1U)
#define STCU2_MBSSW3_MBSSW96_SHIFT               (0U)
#define STCU2_MBSSW3_MBSSW96_WIDTH               (1U)
#define STCU2_MBSSW3_MBSSW96(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW3_MBSSW96_SHIFT)) & STCU2_MBSSW3_MBSSW96_MASK)
#define STCU2_MBSSW3_MBSSW97_MASK                (0x2U)
#define STCU2_MBSSW3_MBSSW97_SHIFT               (1U)
#define STCU2_MBSSW3_MBSSW97_WIDTH               (1U)
#define STCU2_MBSSW3_MBSSW97(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW3_MBSSW97_SHIFT)) & STCU2_MBSSW3_MBSSW97_MASK)
#define STCU2_MBSSW3_MBSSW98_MASK                (0x4U)
#define STCU2_MBSSW3_MBSSW98_SHIFT               (2U)
#define STCU2_MBSSW3_MBSSW98_WIDTH               (1U)
#define STCU2_MBSSW3_MBSSW98(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW3_MBSSW98_SHIFT)) & STCU2_MBSSW3_MBSSW98_MASK)
#define STCU2_MBSSW3_MBSSW99_MASK                (0x8U)
#define STCU2_MBSSW3_MBSSW99_SHIFT               (3U)
#define STCU2_MBSSW3_MBSSW99_WIDTH               (1U)
#define STCU2_MBSSW3_MBSSW99(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW3_MBSSW99_SHIFT)) & STCU2_MBSSW3_MBSSW99_MASK)
#define STCU2_MBSSW3_MBSSW100_MASK               (0x10U)
#define STCU2_MBSSW3_MBSSW100_SHIFT              (4U)
#define STCU2_MBSSW3_MBSSW100_WIDTH              (1U)
#define STCU2_MBSSW3_MBSSW100(x)                 (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW3_MBSSW100_SHIFT)) & STCU2_MBSSW3_MBSSW100_MASK)
#define STCU2_MBSSW3_MBSSW101_MASK               (0x20U)
#define STCU2_MBSSW3_MBSSW101_SHIFT              (5U)
#define STCU2_MBSSW3_MBSSW101_WIDTH              (1U)
#define STCU2_MBSSW3_MBSSW101(x)                 (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW3_MBSSW101_SHIFT)) & STCU2_MBSSW3_MBSSW101_MASK)
#define STCU2_MBSSW3_MBSSW102_MASK               (0x40U)
#define STCU2_MBSSW3_MBSSW102_SHIFT              (6U)
#define STCU2_MBSSW3_MBSSW102_WIDTH              (1U)
#define STCU2_MBSSW3_MBSSW102(x)                 (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW3_MBSSW102_SHIFT)) & STCU2_MBSSW3_MBSSW102_MASK)
#define STCU2_MBSSW3_MBSSW103_MASK               (0x80U)
#define STCU2_MBSSW3_MBSSW103_SHIFT              (7U)
#define STCU2_MBSSW3_MBSSW103_WIDTH              (1U)
#define STCU2_MBSSW3_MBSSW103(x)                 (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW3_MBSSW103_SHIFT)) & STCU2_MBSSW3_MBSSW103_MASK)
#define STCU2_MBSSW3_MBSSW104_MASK               (0x100U)
#define STCU2_MBSSW3_MBSSW104_SHIFT              (8U)
#define STCU2_MBSSW3_MBSSW104_WIDTH              (1U)
#define STCU2_MBSSW3_MBSSW104(x)                 (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW3_MBSSW104_SHIFT)) & STCU2_MBSSW3_MBSSW104_MASK)
#define STCU2_MBSSW3_MBSSW105_MASK               (0x200U)
#define STCU2_MBSSW3_MBSSW105_SHIFT              (9U)
#define STCU2_MBSSW3_MBSSW105_WIDTH              (1U)
#define STCU2_MBSSW3_MBSSW105(x)                 (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW3_MBSSW105_SHIFT)) & STCU2_MBSSW3_MBSSW105_MASK)
#define STCU2_MBSSW3_MBSSW106_MASK               (0x400U)
#define STCU2_MBSSW3_MBSSW106_SHIFT              (10U)
#define STCU2_MBSSW3_MBSSW106_WIDTH              (1U)
#define STCU2_MBSSW3_MBSSW106(x)                 (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW3_MBSSW106_SHIFT)) & STCU2_MBSSW3_MBSSW106_MASK)
#define STCU2_MBSSW3_MBSSW107_MASK               (0x800U)
#define STCU2_MBSSW3_MBSSW107_SHIFT              (11U)
#define STCU2_MBSSW3_MBSSW107_WIDTH              (1U)
#define STCU2_MBSSW3_MBSSW107(x)                 (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW3_MBSSW107_SHIFT)) & STCU2_MBSSW3_MBSSW107_MASK)
#define STCU2_MBSSW3_MBSSW108_MASK               (0x1000U)
#define STCU2_MBSSW3_MBSSW108_SHIFT              (12U)
#define STCU2_MBSSW3_MBSSW108_WIDTH              (1U)
#define STCU2_MBSSW3_MBSSW108(x)                 (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW3_MBSSW108_SHIFT)) & STCU2_MBSSW3_MBSSW108_MASK)
#define STCU2_MBSSW3_MBSSW109_MASK               (0x2000U)
#define STCU2_MBSSW3_MBSSW109_SHIFT              (13U)
#define STCU2_MBSSW3_MBSSW109_WIDTH              (1U)
#define STCU2_MBSSW3_MBSSW109(x)                 (((uint32_t)(((uint32_t)(x)) << STCU2_MBSSW3_MBSSW109_SHIFT)) & STCU2_MBSSW3_MBSSW109_MASK)
/*! @} */

/*! @name MBESW - STCU2 Online MBIST End Flag */
/*! @{ */
#define STCU2_MBESW_MBESW0_MASK                  (0x1U)
#define STCU2_MBESW_MBESW0_SHIFT                 (0U)
#define STCU2_MBESW_MBESW0_WIDTH                 (1U)
#define STCU2_MBESW_MBESW0(x)                    (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW0_SHIFT)) & STCU2_MBESW_MBESW0_MASK)
#define STCU2_MBESW_MBESW1_MASK                  (0x2U)
#define STCU2_MBESW_MBESW1_SHIFT                 (1U)
#define STCU2_MBESW_MBESW1_WIDTH                 (1U)
#define STCU2_MBESW_MBESW1(x)                    (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW1_SHIFT)) & STCU2_MBESW_MBESW1_MASK)
#define STCU2_MBESW_MBESW2_MASK                  (0x4U)
#define STCU2_MBESW_MBESW2_SHIFT                 (2U)
#define STCU2_MBESW_MBESW2_WIDTH                 (1U)
#define STCU2_MBESW_MBESW2(x)                    (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW2_SHIFT)) & STCU2_MBESW_MBESW2_MASK)
#define STCU2_MBESW_MBESW3_MASK                  (0x8U)
#define STCU2_MBESW_MBESW3_SHIFT                 (3U)
#define STCU2_MBESW_MBESW3_WIDTH                 (1U)
#define STCU2_MBESW_MBESW3(x)                    (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW3_SHIFT)) & STCU2_MBESW_MBESW3_MASK)
#define STCU2_MBESW_MBESW4_MASK                  (0x10U)
#define STCU2_MBESW_MBESW4_SHIFT                 (4U)
#define STCU2_MBESW_MBESW4_WIDTH                 (1U)
#define STCU2_MBESW_MBESW4(x)                    (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW4_SHIFT)) & STCU2_MBESW_MBESW4_MASK)
#define STCU2_MBESW_MBESW5_MASK                  (0x20U)
#define STCU2_MBESW_MBESW5_SHIFT                 (5U)
#define STCU2_MBESW_MBESW5_WIDTH                 (1U)
#define STCU2_MBESW_MBESW5(x)                    (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW5_SHIFT)) & STCU2_MBESW_MBESW5_MASK)
#define STCU2_MBESW_MBESW6_MASK                  (0x40U)
#define STCU2_MBESW_MBESW6_SHIFT                 (6U)
#define STCU2_MBESW_MBESW6_WIDTH                 (1U)
#define STCU2_MBESW_MBESW6(x)                    (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW6_SHIFT)) & STCU2_MBESW_MBESW6_MASK)
#define STCU2_MBESW_MBESW7_MASK                  (0x80U)
#define STCU2_MBESW_MBESW7_SHIFT                 (7U)
#define STCU2_MBESW_MBESW7_WIDTH                 (1U)
#define STCU2_MBESW_MBESW7(x)                    (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW7_SHIFT)) & STCU2_MBESW_MBESW7_MASK)
#define STCU2_MBESW_MBESW8_MASK                  (0x100U)
#define STCU2_MBESW_MBESW8_SHIFT                 (8U)
#define STCU2_MBESW_MBESW8_WIDTH                 (1U)
#define STCU2_MBESW_MBESW8(x)                    (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW8_SHIFT)) & STCU2_MBESW_MBESW8_MASK)
#define STCU2_MBESW_MBESW9_MASK                  (0x200U)
#define STCU2_MBESW_MBESW9_SHIFT                 (9U)
#define STCU2_MBESW_MBESW9_WIDTH                 (1U)
#define STCU2_MBESW_MBESW9(x)                    (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW9_SHIFT)) & STCU2_MBESW_MBESW9_MASK)
#define STCU2_MBESW_MBESW10_MASK                 (0x400U)
#define STCU2_MBESW_MBESW10_SHIFT                (10U)
#define STCU2_MBESW_MBESW10_WIDTH                (1U)
#define STCU2_MBESW_MBESW10(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW10_SHIFT)) & STCU2_MBESW_MBESW10_MASK)
#define STCU2_MBESW_MBESW11_MASK                 (0x800U)
#define STCU2_MBESW_MBESW11_SHIFT                (11U)
#define STCU2_MBESW_MBESW11_WIDTH                (1U)
#define STCU2_MBESW_MBESW11(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW11_SHIFT)) & STCU2_MBESW_MBESW11_MASK)
#define STCU2_MBESW_MBESW12_MASK                 (0x1000U)
#define STCU2_MBESW_MBESW12_SHIFT                (12U)
#define STCU2_MBESW_MBESW12_WIDTH                (1U)
#define STCU2_MBESW_MBESW12(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW12_SHIFT)) & STCU2_MBESW_MBESW12_MASK)
#define STCU2_MBESW_MBESW13_MASK                 (0x2000U)
#define STCU2_MBESW_MBESW13_SHIFT                (13U)
#define STCU2_MBESW_MBESW13_WIDTH                (1U)
#define STCU2_MBESW_MBESW13(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW13_SHIFT)) & STCU2_MBESW_MBESW13_MASK)
#define STCU2_MBESW_MBESW14_MASK                 (0x4000U)
#define STCU2_MBESW_MBESW14_SHIFT                (14U)
#define STCU2_MBESW_MBESW14_WIDTH                (1U)
#define STCU2_MBESW_MBESW14(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW14_SHIFT)) & STCU2_MBESW_MBESW14_MASK)
#define STCU2_MBESW_MBESW15_MASK                 (0x8000U)
#define STCU2_MBESW_MBESW15_SHIFT                (15U)
#define STCU2_MBESW_MBESW15_WIDTH                (1U)
#define STCU2_MBESW_MBESW15(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW15_SHIFT)) & STCU2_MBESW_MBESW15_MASK)
#define STCU2_MBESW_MBESW16_MASK                 (0x10000U)
#define STCU2_MBESW_MBESW16_SHIFT                (16U)
#define STCU2_MBESW_MBESW16_WIDTH                (1U)
#define STCU2_MBESW_MBESW16(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW16_SHIFT)) & STCU2_MBESW_MBESW16_MASK)
#define STCU2_MBESW_MBESW17_MASK                 (0x20000U)
#define STCU2_MBESW_MBESW17_SHIFT                (17U)
#define STCU2_MBESW_MBESW17_WIDTH                (1U)
#define STCU2_MBESW_MBESW17(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW17_SHIFT)) & STCU2_MBESW_MBESW17_MASK)
#define STCU2_MBESW_MBESW18_MASK                 (0x40000U)
#define STCU2_MBESW_MBESW18_SHIFT                (18U)
#define STCU2_MBESW_MBESW18_WIDTH                (1U)
#define STCU2_MBESW_MBESW18(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW18_SHIFT)) & STCU2_MBESW_MBESW18_MASK)
#define STCU2_MBESW_MBESW19_MASK                 (0x80000U)
#define STCU2_MBESW_MBESW19_SHIFT                (19U)
#define STCU2_MBESW_MBESW19_WIDTH                (1U)
#define STCU2_MBESW_MBESW19(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW19_SHIFT)) & STCU2_MBESW_MBESW19_MASK)
#define STCU2_MBESW_MBESW20_MASK                 (0x100000U)
#define STCU2_MBESW_MBESW20_SHIFT                (20U)
#define STCU2_MBESW_MBESW20_WIDTH                (1U)
#define STCU2_MBESW_MBESW20(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW20_SHIFT)) & STCU2_MBESW_MBESW20_MASK)
#define STCU2_MBESW_MBESW21_MASK                 (0x200000U)
#define STCU2_MBESW_MBESW21_SHIFT                (21U)
#define STCU2_MBESW_MBESW21_WIDTH                (1U)
#define STCU2_MBESW_MBESW21(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW21_SHIFT)) & STCU2_MBESW_MBESW21_MASK)
#define STCU2_MBESW_MBESW22_MASK                 (0x400000U)
#define STCU2_MBESW_MBESW22_SHIFT                (22U)
#define STCU2_MBESW_MBESW22_WIDTH                (1U)
#define STCU2_MBESW_MBESW22(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW22_SHIFT)) & STCU2_MBESW_MBESW22_MASK)
#define STCU2_MBESW_MBESW23_MASK                 (0x800000U)
#define STCU2_MBESW_MBESW23_SHIFT                (23U)
#define STCU2_MBESW_MBESW23_WIDTH                (1U)
#define STCU2_MBESW_MBESW23(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW23_SHIFT)) & STCU2_MBESW_MBESW23_MASK)
#define STCU2_MBESW_MBESW24_MASK                 (0x1000000U)
#define STCU2_MBESW_MBESW24_SHIFT                (24U)
#define STCU2_MBESW_MBESW24_WIDTH                (1U)
#define STCU2_MBESW_MBESW24(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW24_SHIFT)) & STCU2_MBESW_MBESW24_MASK)
#define STCU2_MBESW_MBESW25_MASK                 (0x2000000U)
#define STCU2_MBESW_MBESW25_SHIFT                (25U)
#define STCU2_MBESW_MBESW25_WIDTH                (1U)
#define STCU2_MBESW_MBESW25(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW25_SHIFT)) & STCU2_MBESW_MBESW25_MASK)
#define STCU2_MBESW_MBESW26_MASK                 (0x4000000U)
#define STCU2_MBESW_MBESW26_SHIFT                (26U)
#define STCU2_MBESW_MBESW26_WIDTH                (1U)
#define STCU2_MBESW_MBESW26(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW26_SHIFT)) & STCU2_MBESW_MBESW26_MASK)
#define STCU2_MBESW_MBESW27_MASK                 (0x8000000U)
#define STCU2_MBESW_MBESW27_SHIFT                (27U)
#define STCU2_MBESW_MBESW27_WIDTH                (1U)
#define STCU2_MBESW_MBESW27(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW27_SHIFT)) & STCU2_MBESW_MBESW27_MASK)
#define STCU2_MBESW_MBESW28_MASK                 (0x10000000U)
#define STCU2_MBESW_MBESW28_SHIFT                (28U)
#define STCU2_MBESW_MBESW28_WIDTH                (1U)
#define STCU2_MBESW_MBESW28(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW28_SHIFT)) & STCU2_MBESW_MBESW28_MASK)
#define STCU2_MBESW_MBESW29_MASK                 (0x20000000U)
#define STCU2_MBESW_MBESW29_SHIFT                (29U)
#define STCU2_MBESW_MBESW29_WIDTH                (1U)
#define STCU2_MBESW_MBESW29(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW29_SHIFT)) & STCU2_MBESW_MBESW29_MASK)
#define STCU2_MBESW_MBESW30_MASK                 (0x40000000U)
#define STCU2_MBESW_MBESW30_SHIFT                (30U)
#define STCU2_MBESW_MBESW30_WIDTH                (1U)
#define STCU2_MBESW_MBESW30(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW30_SHIFT)) & STCU2_MBESW_MBESW30_MASK)
#define STCU2_MBESW_MBESW31_MASK                 (0x80000000U)
#define STCU2_MBESW_MBESW31_SHIFT                (31U)
#define STCU2_MBESW_MBESW31_WIDTH                (1U)
#define STCU2_MBESW_MBESW31(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW31_SHIFT)) & STCU2_MBESW_MBESW31_MASK)
#define STCU2_MBESW_MBESW32_MASK                 (0x1U)
#define STCU2_MBESW_MBESW32_SHIFT                (0U)
#define STCU2_MBESW_MBESW32_WIDTH                (1U)
#define STCU2_MBESW_MBESW32(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW32_SHIFT)) & STCU2_MBESW_MBESW32_MASK)
#define STCU2_MBESW_MBESW33_MASK                 (0x2U)
#define STCU2_MBESW_MBESW33_SHIFT                (1U)
#define STCU2_MBESW_MBESW33_WIDTH                (1U)
#define STCU2_MBESW_MBESW33(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW33_SHIFT)) & STCU2_MBESW_MBESW33_MASK)
#define STCU2_MBESW_MBESW34_MASK                 (0x4U)
#define STCU2_MBESW_MBESW34_SHIFT                (2U)
#define STCU2_MBESW_MBESW34_WIDTH                (1U)
#define STCU2_MBESW_MBESW34(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW34_SHIFT)) & STCU2_MBESW_MBESW34_MASK)
#define STCU2_MBESW_MBESW35_MASK                 (0x8U)
#define STCU2_MBESW_MBESW35_SHIFT                (3U)
#define STCU2_MBESW_MBESW35_WIDTH                (1U)
#define STCU2_MBESW_MBESW35(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW35_SHIFT)) & STCU2_MBESW_MBESW35_MASK)
#define STCU2_MBESW_MBESW36_MASK                 (0x10U)
#define STCU2_MBESW_MBESW36_SHIFT                (4U)
#define STCU2_MBESW_MBESW36_WIDTH                (1U)
#define STCU2_MBESW_MBESW36(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW36_SHIFT)) & STCU2_MBESW_MBESW36_MASK)
#define STCU2_MBESW_MBESW37_MASK                 (0x20U)
#define STCU2_MBESW_MBESW37_SHIFT                (5U)
#define STCU2_MBESW_MBESW37_WIDTH                (1U)
#define STCU2_MBESW_MBESW37(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW37_SHIFT)) & STCU2_MBESW_MBESW37_MASK)
#define STCU2_MBESW_MBESW38_MASK                 (0x40U)
#define STCU2_MBESW_MBESW38_SHIFT                (6U)
#define STCU2_MBESW_MBESW38_WIDTH                (1U)
#define STCU2_MBESW_MBESW38(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW38_SHIFT)) & STCU2_MBESW_MBESW38_MASK)
#define STCU2_MBESW_MBESW39_MASK                 (0x80U)
#define STCU2_MBESW_MBESW39_SHIFT                (7U)
#define STCU2_MBESW_MBESW39_WIDTH                (1U)
#define STCU2_MBESW_MBESW39(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW39_SHIFT)) & STCU2_MBESW_MBESW39_MASK)
#define STCU2_MBESW_MBESW40_MASK                 (0x100U)
#define STCU2_MBESW_MBESW40_SHIFT                (8U)
#define STCU2_MBESW_MBESW40_WIDTH                (1U)
#define STCU2_MBESW_MBESW40(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW40_SHIFT)) & STCU2_MBESW_MBESW40_MASK)
#define STCU2_MBESW_MBESW41_MASK                 (0x200U)
#define STCU2_MBESW_MBESW41_SHIFT                (9U)
#define STCU2_MBESW_MBESW41_WIDTH                (1U)
#define STCU2_MBESW_MBESW41(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW41_SHIFT)) & STCU2_MBESW_MBESW41_MASK)
#define STCU2_MBESW_MBESW42_MASK                 (0x400U)
#define STCU2_MBESW_MBESW42_SHIFT                (10U)
#define STCU2_MBESW_MBESW42_WIDTH                (1U)
#define STCU2_MBESW_MBESW42(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW42_SHIFT)) & STCU2_MBESW_MBESW42_MASK)
#define STCU2_MBESW_MBESW43_MASK                 (0x800U)
#define STCU2_MBESW_MBESW43_SHIFT                (11U)
#define STCU2_MBESW_MBESW43_WIDTH                (1U)
#define STCU2_MBESW_MBESW43(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW43_SHIFT)) & STCU2_MBESW_MBESW43_MASK)
#define STCU2_MBESW_MBESW44_MASK                 (0x1000U)
#define STCU2_MBESW_MBESW44_SHIFT                (12U)
#define STCU2_MBESW_MBESW44_WIDTH                (1U)
#define STCU2_MBESW_MBESW44(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW44_SHIFT)) & STCU2_MBESW_MBESW44_MASK)
#define STCU2_MBESW_MBESW45_MASK                 (0x2000U)
#define STCU2_MBESW_MBESW45_SHIFT                (13U)
#define STCU2_MBESW_MBESW45_WIDTH                (1U)
#define STCU2_MBESW_MBESW45(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW45_SHIFT)) & STCU2_MBESW_MBESW45_MASK)
#define STCU2_MBESW_MBESW46_MASK                 (0x4000U)
#define STCU2_MBESW_MBESW46_SHIFT                (14U)
#define STCU2_MBESW_MBESW46_WIDTH                (1U)
#define STCU2_MBESW_MBESW46(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW46_SHIFT)) & STCU2_MBESW_MBESW46_MASK)
#define STCU2_MBESW_MBESW47_MASK                 (0x8000U)
#define STCU2_MBESW_MBESW47_SHIFT                (15U)
#define STCU2_MBESW_MBESW47_WIDTH                (1U)
#define STCU2_MBESW_MBESW47(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW47_SHIFT)) & STCU2_MBESW_MBESW47_MASK)
#define STCU2_MBESW_MBESW48_MASK                 (0x10000U)
#define STCU2_MBESW_MBESW48_SHIFT                (16U)
#define STCU2_MBESW_MBESW48_WIDTH                (1U)
#define STCU2_MBESW_MBESW48(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW48_SHIFT)) & STCU2_MBESW_MBESW48_MASK)
#define STCU2_MBESW_MBESW49_MASK                 (0x20000U)
#define STCU2_MBESW_MBESW49_SHIFT                (17U)
#define STCU2_MBESW_MBESW49_WIDTH                (1U)
#define STCU2_MBESW_MBESW49(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW49_SHIFT)) & STCU2_MBESW_MBESW49_MASK)
#define STCU2_MBESW_MBESW50_MASK                 (0x40000U)
#define STCU2_MBESW_MBESW50_SHIFT                (18U)
#define STCU2_MBESW_MBESW50_WIDTH                (1U)
#define STCU2_MBESW_MBESW50(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW50_SHIFT)) & STCU2_MBESW_MBESW50_MASK)
#define STCU2_MBESW_MBESW51_MASK                 (0x80000U)
#define STCU2_MBESW_MBESW51_SHIFT                (19U)
#define STCU2_MBESW_MBESW51_WIDTH                (1U)
#define STCU2_MBESW_MBESW51(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW51_SHIFT)) & STCU2_MBESW_MBESW51_MASK)
#define STCU2_MBESW_MBESW52_MASK                 (0x100000U)
#define STCU2_MBESW_MBESW52_SHIFT                (20U)
#define STCU2_MBESW_MBESW52_WIDTH                (1U)
#define STCU2_MBESW_MBESW52(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW52_SHIFT)) & STCU2_MBESW_MBESW52_MASK)
#define STCU2_MBESW_MBESW53_MASK                 (0x200000U)
#define STCU2_MBESW_MBESW53_SHIFT                (21U)
#define STCU2_MBESW_MBESW53_WIDTH                (1U)
#define STCU2_MBESW_MBESW53(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW53_SHIFT)) & STCU2_MBESW_MBESW53_MASK)
#define STCU2_MBESW_MBESW54_MASK                 (0x400000U)
#define STCU2_MBESW_MBESW54_SHIFT                (22U)
#define STCU2_MBESW_MBESW54_WIDTH                (1U)
#define STCU2_MBESW_MBESW54(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW54_SHIFT)) & STCU2_MBESW_MBESW54_MASK)
#define STCU2_MBESW_MBESW55_MASK                 (0x800000U)
#define STCU2_MBESW_MBESW55_SHIFT                (23U)
#define STCU2_MBESW_MBESW55_WIDTH                (1U)
#define STCU2_MBESW_MBESW55(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW55_SHIFT)) & STCU2_MBESW_MBESW55_MASK)
#define STCU2_MBESW_MBESW56_MASK                 (0x1000000U)
#define STCU2_MBESW_MBESW56_SHIFT                (24U)
#define STCU2_MBESW_MBESW56_WIDTH                (1U)
#define STCU2_MBESW_MBESW56(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW56_SHIFT)) & STCU2_MBESW_MBESW56_MASK)
#define STCU2_MBESW_MBESW57_MASK                 (0x2000000U)
#define STCU2_MBESW_MBESW57_SHIFT                (25U)
#define STCU2_MBESW_MBESW57_WIDTH                (1U)
#define STCU2_MBESW_MBESW57(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW57_SHIFT)) & STCU2_MBESW_MBESW57_MASK)
#define STCU2_MBESW_MBESW58_MASK                 (0x4000000U)
#define STCU2_MBESW_MBESW58_SHIFT                (26U)
#define STCU2_MBESW_MBESW58_WIDTH                (1U)
#define STCU2_MBESW_MBESW58(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW58_SHIFT)) & STCU2_MBESW_MBESW58_MASK)
#define STCU2_MBESW_MBESW59_MASK                 (0x8000000U)
#define STCU2_MBESW_MBESW59_SHIFT                (27U)
#define STCU2_MBESW_MBESW59_WIDTH                (1U)
#define STCU2_MBESW_MBESW59(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW59_SHIFT)) & STCU2_MBESW_MBESW59_MASK)
#define STCU2_MBESW_MBESW60_MASK                 (0x10000000U)
#define STCU2_MBESW_MBESW60_SHIFT                (28U)
#define STCU2_MBESW_MBESW60_WIDTH                (1U)
#define STCU2_MBESW_MBESW60(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW60_SHIFT)) & STCU2_MBESW_MBESW60_MASK)
#define STCU2_MBESW_MBESW61_MASK                 (0x20000000U)
#define STCU2_MBESW_MBESW61_SHIFT                (29U)
#define STCU2_MBESW_MBESW61_WIDTH                (1U)
#define STCU2_MBESW_MBESW61(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW61_SHIFT)) & STCU2_MBESW_MBESW61_MASK)
#define STCU2_MBESW_MBESW62_MASK                 (0x40000000U)
#define STCU2_MBESW_MBESW62_SHIFT                (30U)
#define STCU2_MBESW_MBESW62_WIDTH                (1U)
#define STCU2_MBESW_MBESW62(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW62_SHIFT)) & STCU2_MBESW_MBESW62_MASK)
#define STCU2_MBESW_MBESW63_MASK                 (0x80000000U)
#define STCU2_MBESW_MBESW63_SHIFT                (31U)
#define STCU2_MBESW_MBESW63_WIDTH                (1U)
#define STCU2_MBESW_MBESW63(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW63_SHIFT)) & STCU2_MBESW_MBESW63_MASK)
#define STCU2_MBESW_MBESW64_MASK                 (0x1U)
#define STCU2_MBESW_MBESW64_SHIFT                (0U)
#define STCU2_MBESW_MBESW64_WIDTH                (1U)
#define STCU2_MBESW_MBESW64(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW64_SHIFT)) & STCU2_MBESW_MBESW64_MASK)
#define STCU2_MBESW_MBESW65_MASK                 (0x2U)
#define STCU2_MBESW_MBESW65_SHIFT                (1U)
#define STCU2_MBESW_MBESW65_WIDTH                (1U)
#define STCU2_MBESW_MBESW65(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW65_SHIFT)) & STCU2_MBESW_MBESW65_MASK)
#define STCU2_MBESW_MBESW66_MASK                 (0x4U)
#define STCU2_MBESW_MBESW66_SHIFT                (2U)
#define STCU2_MBESW_MBESW66_WIDTH                (1U)
#define STCU2_MBESW_MBESW66(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW66_SHIFT)) & STCU2_MBESW_MBESW66_MASK)
#define STCU2_MBESW_MBESW67_MASK                 (0x8U)
#define STCU2_MBESW_MBESW67_SHIFT                (3U)
#define STCU2_MBESW_MBESW67_WIDTH                (1U)
#define STCU2_MBESW_MBESW67(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW67_SHIFT)) & STCU2_MBESW_MBESW67_MASK)
#define STCU2_MBESW_MBESW68_MASK                 (0x10U)
#define STCU2_MBESW_MBESW68_SHIFT                (4U)
#define STCU2_MBESW_MBESW68_WIDTH                (1U)
#define STCU2_MBESW_MBESW68(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW68_SHIFT)) & STCU2_MBESW_MBESW68_MASK)
#define STCU2_MBESW_MBESW69_MASK                 (0x20U)
#define STCU2_MBESW_MBESW69_SHIFT                (5U)
#define STCU2_MBESW_MBESW69_WIDTH                (1U)
#define STCU2_MBESW_MBESW69(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW69_SHIFT)) & STCU2_MBESW_MBESW69_MASK)
#define STCU2_MBESW_MBESW70_MASK                 (0x40U)
#define STCU2_MBESW_MBESW70_SHIFT                (6U)
#define STCU2_MBESW_MBESW70_WIDTH                (1U)
#define STCU2_MBESW_MBESW70(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW70_SHIFT)) & STCU2_MBESW_MBESW70_MASK)
#define STCU2_MBESW_MBESW71_MASK                 (0x80U)
#define STCU2_MBESW_MBESW71_SHIFT                (7U)
#define STCU2_MBESW_MBESW71_WIDTH                (1U)
#define STCU2_MBESW_MBESW71(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW71_SHIFT)) & STCU2_MBESW_MBESW71_MASK)
#define STCU2_MBESW_MBESW72_MASK                 (0x100U)
#define STCU2_MBESW_MBESW72_SHIFT                (8U)
#define STCU2_MBESW_MBESW72_WIDTH                (1U)
#define STCU2_MBESW_MBESW72(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW72_SHIFT)) & STCU2_MBESW_MBESW72_MASK)
#define STCU2_MBESW_MBESW73_MASK                 (0x200U)
#define STCU2_MBESW_MBESW73_SHIFT                (9U)
#define STCU2_MBESW_MBESW73_WIDTH                (1U)
#define STCU2_MBESW_MBESW73(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW73_SHIFT)) & STCU2_MBESW_MBESW73_MASK)
#define STCU2_MBESW_MBESW74_MASK                 (0x400U)
#define STCU2_MBESW_MBESW74_SHIFT                (10U)
#define STCU2_MBESW_MBESW74_WIDTH                (1U)
#define STCU2_MBESW_MBESW74(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW74_SHIFT)) & STCU2_MBESW_MBESW74_MASK)
#define STCU2_MBESW_MBESW75_MASK                 (0x800U)
#define STCU2_MBESW_MBESW75_SHIFT                (11U)
#define STCU2_MBESW_MBESW75_WIDTH                (1U)
#define STCU2_MBESW_MBESW75(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW75_SHIFT)) & STCU2_MBESW_MBESW75_MASK)
#define STCU2_MBESW_MBESW76_MASK                 (0x1000U)
#define STCU2_MBESW_MBESW76_SHIFT                (12U)
#define STCU2_MBESW_MBESW76_WIDTH                (1U)
#define STCU2_MBESW_MBESW76(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW76_SHIFT)) & STCU2_MBESW_MBESW76_MASK)
#define STCU2_MBESW_MBESW77_MASK                 (0x2000U)
#define STCU2_MBESW_MBESW77_SHIFT                (13U)
#define STCU2_MBESW_MBESW77_WIDTH                (1U)
#define STCU2_MBESW_MBESW77(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW77_SHIFT)) & STCU2_MBESW_MBESW77_MASK)
#define STCU2_MBESW_MBESW78_MASK                 (0x4000U)
#define STCU2_MBESW_MBESW78_SHIFT                (14U)
#define STCU2_MBESW_MBESW78_WIDTH                (1U)
#define STCU2_MBESW_MBESW78(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW78_SHIFT)) & STCU2_MBESW_MBESW78_MASK)
#define STCU2_MBESW_MBESW79_MASK                 (0x8000U)
#define STCU2_MBESW_MBESW79_SHIFT                (15U)
#define STCU2_MBESW_MBESW79_WIDTH                (1U)
#define STCU2_MBESW_MBESW79(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW79_SHIFT)) & STCU2_MBESW_MBESW79_MASK)
#define STCU2_MBESW_MBESW80_MASK                 (0x10000U)
#define STCU2_MBESW_MBESW80_SHIFT                (16U)
#define STCU2_MBESW_MBESW80_WIDTH                (1U)
#define STCU2_MBESW_MBESW80(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW80_SHIFT)) & STCU2_MBESW_MBESW80_MASK)
#define STCU2_MBESW_MBESW81_MASK                 (0x20000U)
#define STCU2_MBESW_MBESW81_SHIFT                (17U)
#define STCU2_MBESW_MBESW81_WIDTH                (1U)
#define STCU2_MBESW_MBESW81(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW81_SHIFT)) & STCU2_MBESW_MBESW81_MASK)
#define STCU2_MBESW_MBESW82_MASK                 (0x40000U)
#define STCU2_MBESW_MBESW82_SHIFT                (18U)
#define STCU2_MBESW_MBESW82_WIDTH                (1U)
#define STCU2_MBESW_MBESW82(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW82_SHIFT)) & STCU2_MBESW_MBESW82_MASK)
#define STCU2_MBESW_MBESW83_MASK                 (0x80000U)
#define STCU2_MBESW_MBESW83_SHIFT                (19U)
#define STCU2_MBESW_MBESW83_WIDTH                (1U)
#define STCU2_MBESW_MBESW83(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW83_SHIFT)) & STCU2_MBESW_MBESW83_MASK)
#define STCU2_MBESW_MBESW84_MASK                 (0x100000U)
#define STCU2_MBESW_MBESW84_SHIFT                (20U)
#define STCU2_MBESW_MBESW84_WIDTH                (1U)
#define STCU2_MBESW_MBESW84(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW84_SHIFT)) & STCU2_MBESW_MBESW84_MASK)
#define STCU2_MBESW_MBESW85_MASK                 (0x200000U)
#define STCU2_MBESW_MBESW85_SHIFT                (21U)
#define STCU2_MBESW_MBESW85_WIDTH                (1U)
#define STCU2_MBESW_MBESW85(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW85_SHIFT)) & STCU2_MBESW_MBESW85_MASK)
#define STCU2_MBESW_MBESW86_MASK                 (0x400000U)
#define STCU2_MBESW_MBESW86_SHIFT                (22U)
#define STCU2_MBESW_MBESW86_WIDTH                (1U)
#define STCU2_MBESW_MBESW86(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW86_SHIFT)) & STCU2_MBESW_MBESW86_MASK)
#define STCU2_MBESW_MBESW87_MASK                 (0x800000U)
#define STCU2_MBESW_MBESW87_SHIFT                (23U)
#define STCU2_MBESW_MBESW87_WIDTH                (1U)
#define STCU2_MBESW_MBESW87(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW87_SHIFT)) & STCU2_MBESW_MBESW87_MASK)
#define STCU2_MBESW_MBESW88_MASK                 (0x1000000U)
#define STCU2_MBESW_MBESW88_SHIFT                (24U)
#define STCU2_MBESW_MBESW88_WIDTH                (1U)
#define STCU2_MBESW_MBESW88(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW88_SHIFT)) & STCU2_MBESW_MBESW88_MASK)
#define STCU2_MBESW_MBESW89_MASK                 (0x2000000U)
#define STCU2_MBESW_MBESW89_SHIFT                (25U)
#define STCU2_MBESW_MBESW89_WIDTH                (1U)
#define STCU2_MBESW_MBESW89(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW89_SHIFT)) & STCU2_MBESW_MBESW89_MASK)
#define STCU2_MBESW_MBESW90_MASK                 (0x4000000U)
#define STCU2_MBESW_MBESW90_SHIFT                (26U)
#define STCU2_MBESW_MBESW90_WIDTH                (1U)
#define STCU2_MBESW_MBESW90(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW90_SHIFT)) & STCU2_MBESW_MBESW90_MASK)
#define STCU2_MBESW_MBESW91_MASK                 (0x8000000U)
#define STCU2_MBESW_MBESW91_SHIFT                (27U)
#define STCU2_MBESW_MBESW91_WIDTH                (1U)
#define STCU2_MBESW_MBESW91(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW91_SHIFT)) & STCU2_MBESW_MBESW91_MASK)
#define STCU2_MBESW_MBESW92_MASK                 (0x10000000U)
#define STCU2_MBESW_MBESW92_SHIFT                (28U)
#define STCU2_MBESW_MBESW92_WIDTH                (1U)
#define STCU2_MBESW_MBESW92(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW92_SHIFT)) & STCU2_MBESW_MBESW92_MASK)
#define STCU2_MBESW_MBESW93_MASK                 (0x20000000U)
#define STCU2_MBESW_MBESW93_SHIFT                (29U)
#define STCU2_MBESW_MBESW93_WIDTH                (1U)
#define STCU2_MBESW_MBESW93(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW93_SHIFT)) & STCU2_MBESW_MBESW93_MASK)
#define STCU2_MBESW_MBESW94_MASK                 (0x40000000U)
#define STCU2_MBESW_MBESW94_SHIFT                (30U)
#define STCU2_MBESW_MBESW94_WIDTH                (1U)
#define STCU2_MBESW_MBESW94(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW94_SHIFT)) & STCU2_MBESW_MBESW94_MASK)
#define STCU2_MBESW_MBESW95_MASK                 (0x80000000U)
#define STCU2_MBESW_MBESW95_SHIFT                (31U)
#define STCU2_MBESW_MBESW95_WIDTH                (1U)
#define STCU2_MBESW_MBESW95(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW_MBESW95_SHIFT)) & STCU2_MBESW_MBESW95_MASK)
/*! @} */

/*! @name MBESW3 - STCU2 Online MBIST End Flag */
/*! @{ */
#define STCU2_MBESW3_MBESW96_MASK                (0x1U)
#define STCU2_MBESW3_MBESW96_SHIFT               (0U)
#define STCU2_MBESW3_MBESW96_WIDTH               (1U)
#define STCU2_MBESW3_MBESW96(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW3_MBESW96_SHIFT)) & STCU2_MBESW3_MBESW96_MASK)
#define STCU2_MBESW3_MBESW97_MASK                (0x2U)
#define STCU2_MBESW3_MBESW97_SHIFT               (1U)
#define STCU2_MBESW3_MBESW97_WIDTH               (1U)
#define STCU2_MBESW3_MBESW97(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW3_MBESW97_SHIFT)) & STCU2_MBESW3_MBESW97_MASK)
#define STCU2_MBESW3_MBESW98_MASK                (0x4U)
#define STCU2_MBESW3_MBESW98_SHIFT               (2U)
#define STCU2_MBESW3_MBESW98_WIDTH               (1U)
#define STCU2_MBESW3_MBESW98(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW3_MBESW98_SHIFT)) & STCU2_MBESW3_MBESW98_MASK)
#define STCU2_MBESW3_MBESW99_MASK                (0x8U)
#define STCU2_MBESW3_MBESW99_SHIFT               (3U)
#define STCU2_MBESW3_MBESW99_WIDTH               (1U)
#define STCU2_MBESW3_MBESW99(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW3_MBESW99_SHIFT)) & STCU2_MBESW3_MBESW99_MASK)
#define STCU2_MBESW3_MBESW100_MASK               (0x10U)
#define STCU2_MBESW3_MBESW100_SHIFT              (4U)
#define STCU2_MBESW3_MBESW100_WIDTH              (1U)
#define STCU2_MBESW3_MBESW100(x)                 (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW3_MBESW100_SHIFT)) & STCU2_MBESW3_MBESW100_MASK)
#define STCU2_MBESW3_MBESW101_MASK               (0x20U)
#define STCU2_MBESW3_MBESW101_SHIFT              (5U)
#define STCU2_MBESW3_MBESW101_WIDTH              (1U)
#define STCU2_MBESW3_MBESW101(x)                 (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW3_MBESW101_SHIFT)) & STCU2_MBESW3_MBESW101_MASK)
#define STCU2_MBESW3_MBESW102_MASK               (0x40U)
#define STCU2_MBESW3_MBESW102_SHIFT              (6U)
#define STCU2_MBESW3_MBESW102_WIDTH              (1U)
#define STCU2_MBESW3_MBESW102(x)                 (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW3_MBESW102_SHIFT)) & STCU2_MBESW3_MBESW102_MASK)
#define STCU2_MBESW3_MBESW103_MASK               (0x80U)
#define STCU2_MBESW3_MBESW103_SHIFT              (7U)
#define STCU2_MBESW3_MBESW103_WIDTH              (1U)
#define STCU2_MBESW3_MBESW103(x)                 (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW3_MBESW103_SHIFT)) & STCU2_MBESW3_MBESW103_MASK)
#define STCU2_MBESW3_MBESW104_MASK               (0x100U)
#define STCU2_MBESW3_MBESW104_SHIFT              (8U)
#define STCU2_MBESW3_MBESW104_WIDTH              (1U)
#define STCU2_MBESW3_MBESW104(x)                 (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW3_MBESW104_SHIFT)) & STCU2_MBESW3_MBESW104_MASK)
#define STCU2_MBESW3_MBESW105_MASK               (0x200U)
#define STCU2_MBESW3_MBESW105_SHIFT              (9U)
#define STCU2_MBESW3_MBESW105_WIDTH              (1U)
#define STCU2_MBESW3_MBESW105(x)                 (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW3_MBESW105_SHIFT)) & STCU2_MBESW3_MBESW105_MASK)
#define STCU2_MBESW3_MBESW106_MASK               (0x400U)
#define STCU2_MBESW3_MBESW106_SHIFT              (10U)
#define STCU2_MBESW3_MBESW106_WIDTH              (1U)
#define STCU2_MBESW3_MBESW106(x)                 (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW3_MBESW106_SHIFT)) & STCU2_MBESW3_MBESW106_MASK)
#define STCU2_MBESW3_MBESW107_MASK               (0x800U)
#define STCU2_MBESW3_MBESW107_SHIFT              (11U)
#define STCU2_MBESW3_MBESW107_WIDTH              (1U)
#define STCU2_MBESW3_MBESW107(x)                 (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW3_MBESW107_SHIFT)) & STCU2_MBESW3_MBESW107_MASK)
#define STCU2_MBESW3_MBESW108_MASK               (0x1000U)
#define STCU2_MBESW3_MBESW108_SHIFT              (12U)
#define STCU2_MBESW3_MBESW108_WIDTH              (1U)
#define STCU2_MBESW3_MBESW108(x)                 (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW3_MBESW108_SHIFT)) & STCU2_MBESW3_MBESW108_MASK)
#define STCU2_MBESW3_MBESW109_MASK               (0x2000U)
#define STCU2_MBESW3_MBESW109_SHIFT              (13U)
#define STCU2_MBESW3_MBESW109_WIDTH              (1U)
#define STCU2_MBESW3_MBESW109(x)                 (((uint32_t)(((uint32_t)(x)) << STCU2_MBESW3_MBESW109_SHIFT)) & STCU2_MBESW3_MBESW109_MASK)
/*! @} */

/*! @name MBUFM - STCU2 MBIST Unrecoverable FM */
/*! @{ */
#define STCU2_MBUFM_MBUFM0_MASK                  (0x1U)
#define STCU2_MBUFM_MBUFM0_SHIFT                 (0U)
#define STCU2_MBUFM_MBUFM0_WIDTH                 (1U)
#define STCU2_MBUFM_MBUFM0(x)                    (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM0_SHIFT)) & STCU2_MBUFM_MBUFM0_MASK)
#define STCU2_MBUFM_MBUFM1_MASK                  (0x2U)
#define STCU2_MBUFM_MBUFM1_SHIFT                 (1U)
#define STCU2_MBUFM_MBUFM1_WIDTH                 (1U)
#define STCU2_MBUFM_MBUFM1(x)                    (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM1_SHIFT)) & STCU2_MBUFM_MBUFM1_MASK)
#define STCU2_MBUFM_MBUFM2_MASK                  (0x4U)
#define STCU2_MBUFM_MBUFM2_SHIFT                 (2U)
#define STCU2_MBUFM_MBUFM2_WIDTH                 (1U)
#define STCU2_MBUFM_MBUFM2(x)                    (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM2_SHIFT)) & STCU2_MBUFM_MBUFM2_MASK)
#define STCU2_MBUFM_MBUFM3_MASK                  (0x8U)
#define STCU2_MBUFM_MBUFM3_SHIFT                 (3U)
#define STCU2_MBUFM_MBUFM3_WIDTH                 (1U)
#define STCU2_MBUFM_MBUFM3(x)                    (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM3_SHIFT)) & STCU2_MBUFM_MBUFM3_MASK)
#define STCU2_MBUFM_MBUFM4_MASK                  (0x10U)
#define STCU2_MBUFM_MBUFM4_SHIFT                 (4U)
#define STCU2_MBUFM_MBUFM4_WIDTH                 (1U)
#define STCU2_MBUFM_MBUFM4(x)                    (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM4_SHIFT)) & STCU2_MBUFM_MBUFM4_MASK)
#define STCU2_MBUFM_MBUFM5_MASK                  (0x20U)
#define STCU2_MBUFM_MBUFM5_SHIFT                 (5U)
#define STCU2_MBUFM_MBUFM5_WIDTH                 (1U)
#define STCU2_MBUFM_MBUFM5(x)                    (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM5_SHIFT)) & STCU2_MBUFM_MBUFM5_MASK)
#define STCU2_MBUFM_MBUFM6_MASK                  (0x40U)
#define STCU2_MBUFM_MBUFM6_SHIFT                 (6U)
#define STCU2_MBUFM_MBUFM6_WIDTH                 (1U)
#define STCU2_MBUFM_MBUFM6(x)                    (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM6_SHIFT)) & STCU2_MBUFM_MBUFM6_MASK)
#define STCU2_MBUFM_MBUFM7_MASK                  (0x80U)
#define STCU2_MBUFM_MBUFM7_SHIFT                 (7U)
#define STCU2_MBUFM_MBUFM7_WIDTH                 (1U)
#define STCU2_MBUFM_MBUFM7(x)                    (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM7_SHIFT)) & STCU2_MBUFM_MBUFM7_MASK)
#define STCU2_MBUFM_MBUFM8_MASK                  (0x100U)
#define STCU2_MBUFM_MBUFM8_SHIFT                 (8U)
#define STCU2_MBUFM_MBUFM8_WIDTH                 (1U)
#define STCU2_MBUFM_MBUFM8(x)                    (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM8_SHIFT)) & STCU2_MBUFM_MBUFM8_MASK)
#define STCU2_MBUFM_MBUFM9_MASK                  (0x200U)
#define STCU2_MBUFM_MBUFM9_SHIFT                 (9U)
#define STCU2_MBUFM_MBUFM9_WIDTH                 (1U)
#define STCU2_MBUFM_MBUFM9(x)                    (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM9_SHIFT)) & STCU2_MBUFM_MBUFM9_MASK)
#define STCU2_MBUFM_MBUFM10_MASK                 (0x400U)
#define STCU2_MBUFM_MBUFM10_SHIFT                (10U)
#define STCU2_MBUFM_MBUFM10_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM10(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM10_SHIFT)) & STCU2_MBUFM_MBUFM10_MASK)
#define STCU2_MBUFM_MBUFM11_MASK                 (0x800U)
#define STCU2_MBUFM_MBUFM11_SHIFT                (11U)
#define STCU2_MBUFM_MBUFM11_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM11(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM11_SHIFT)) & STCU2_MBUFM_MBUFM11_MASK)
#define STCU2_MBUFM_MBUFM12_MASK                 (0x1000U)
#define STCU2_MBUFM_MBUFM12_SHIFT                (12U)
#define STCU2_MBUFM_MBUFM12_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM12(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM12_SHIFT)) & STCU2_MBUFM_MBUFM12_MASK)
#define STCU2_MBUFM_MBUFM13_MASK                 (0x2000U)
#define STCU2_MBUFM_MBUFM13_SHIFT                (13U)
#define STCU2_MBUFM_MBUFM13_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM13(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM13_SHIFT)) & STCU2_MBUFM_MBUFM13_MASK)
#define STCU2_MBUFM_MBUFM14_MASK                 (0x4000U)
#define STCU2_MBUFM_MBUFM14_SHIFT                (14U)
#define STCU2_MBUFM_MBUFM14_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM14(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM14_SHIFT)) & STCU2_MBUFM_MBUFM14_MASK)
#define STCU2_MBUFM_MBUFM15_MASK                 (0x8000U)
#define STCU2_MBUFM_MBUFM15_SHIFT                (15U)
#define STCU2_MBUFM_MBUFM15_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM15(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM15_SHIFT)) & STCU2_MBUFM_MBUFM15_MASK)
#define STCU2_MBUFM_MBUFM16_MASK                 (0x10000U)
#define STCU2_MBUFM_MBUFM16_SHIFT                (16U)
#define STCU2_MBUFM_MBUFM16_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM16(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM16_SHIFT)) & STCU2_MBUFM_MBUFM16_MASK)
#define STCU2_MBUFM_MBUFM17_MASK                 (0x20000U)
#define STCU2_MBUFM_MBUFM17_SHIFT                (17U)
#define STCU2_MBUFM_MBUFM17_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM17(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM17_SHIFT)) & STCU2_MBUFM_MBUFM17_MASK)
#define STCU2_MBUFM_MBUFM18_MASK                 (0x40000U)
#define STCU2_MBUFM_MBUFM18_SHIFT                (18U)
#define STCU2_MBUFM_MBUFM18_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM18(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM18_SHIFT)) & STCU2_MBUFM_MBUFM18_MASK)
#define STCU2_MBUFM_MBUFM19_MASK                 (0x80000U)
#define STCU2_MBUFM_MBUFM19_SHIFT                (19U)
#define STCU2_MBUFM_MBUFM19_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM19(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM19_SHIFT)) & STCU2_MBUFM_MBUFM19_MASK)
#define STCU2_MBUFM_MBUFM20_MASK                 (0x100000U)
#define STCU2_MBUFM_MBUFM20_SHIFT                (20U)
#define STCU2_MBUFM_MBUFM20_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM20(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM20_SHIFT)) & STCU2_MBUFM_MBUFM20_MASK)
#define STCU2_MBUFM_MBUFM21_MASK                 (0x200000U)
#define STCU2_MBUFM_MBUFM21_SHIFT                (21U)
#define STCU2_MBUFM_MBUFM21_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM21(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM21_SHIFT)) & STCU2_MBUFM_MBUFM21_MASK)
#define STCU2_MBUFM_MBUFM22_MASK                 (0x400000U)
#define STCU2_MBUFM_MBUFM22_SHIFT                (22U)
#define STCU2_MBUFM_MBUFM22_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM22(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM22_SHIFT)) & STCU2_MBUFM_MBUFM22_MASK)
#define STCU2_MBUFM_MBUFM23_MASK                 (0x800000U)
#define STCU2_MBUFM_MBUFM23_SHIFT                (23U)
#define STCU2_MBUFM_MBUFM23_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM23(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM23_SHIFT)) & STCU2_MBUFM_MBUFM23_MASK)
#define STCU2_MBUFM_MBUFM24_MASK                 (0x1000000U)
#define STCU2_MBUFM_MBUFM24_SHIFT                (24U)
#define STCU2_MBUFM_MBUFM24_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM24(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM24_SHIFT)) & STCU2_MBUFM_MBUFM24_MASK)
#define STCU2_MBUFM_MBUFM25_MASK                 (0x2000000U)
#define STCU2_MBUFM_MBUFM25_SHIFT                (25U)
#define STCU2_MBUFM_MBUFM25_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM25(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM25_SHIFT)) & STCU2_MBUFM_MBUFM25_MASK)
#define STCU2_MBUFM_MBUFM26_MASK                 (0x4000000U)
#define STCU2_MBUFM_MBUFM26_SHIFT                (26U)
#define STCU2_MBUFM_MBUFM26_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM26(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM26_SHIFT)) & STCU2_MBUFM_MBUFM26_MASK)
#define STCU2_MBUFM_MBUFM27_MASK                 (0x8000000U)
#define STCU2_MBUFM_MBUFM27_SHIFT                (27U)
#define STCU2_MBUFM_MBUFM27_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM27(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM27_SHIFT)) & STCU2_MBUFM_MBUFM27_MASK)
#define STCU2_MBUFM_MBUFM28_MASK                 (0x10000000U)
#define STCU2_MBUFM_MBUFM28_SHIFT                (28U)
#define STCU2_MBUFM_MBUFM28_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM28(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM28_SHIFT)) & STCU2_MBUFM_MBUFM28_MASK)
#define STCU2_MBUFM_MBUFM29_MASK                 (0x20000000U)
#define STCU2_MBUFM_MBUFM29_SHIFT                (29U)
#define STCU2_MBUFM_MBUFM29_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM29(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM29_SHIFT)) & STCU2_MBUFM_MBUFM29_MASK)
#define STCU2_MBUFM_MBUFM30_MASK                 (0x40000000U)
#define STCU2_MBUFM_MBUFM30_SHIFT                (30U)
#define STCU2_MBUFM_MBUFM30_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM30(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM30_SHIFT)) & STCU2_MBUFM_MBUFM30_MASK)
#define STCU2_MBUFM_MBUFM31_MASK                 (0x80000000U)
#define STCU2_MBUFM_MBUFM31_SHIFT                (31U)
#define STCU2_MBUFM_MBUFM31_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM31(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM31_SHIFT)) & STCU2_MBUFM_MBUFM31_MASK)
#define STCU2_MBUFM_MBUFM32_MASK                 (0x1U)
#define STCU2_MBUFM_MBUFM32_SHIFT                (0U)
#define STCU2_MBUFM_MBUFM32_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM32(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM32_SHIFT)) & STCU2_MBUFM_MBUFM32_MASK)
#define STCU2_MBUFM_MBUFM33_MASK                 (0x2U)
#define STCU2_MBUFM_MBUFM33_SHIFT                (1U)
#define STCU2_MBUFM_MBUFM33_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM33(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM33_SHIFT)) & STCU2_MBUFM_MBUFM33_MASK)
#define STCU2_MBUFM_MBUFM34_MASK                 (0x4U)
#define STCU2_MBUFM_MBUFM34_SHIFT                (2U)
#define STCU2_MBUFM_MBUFM34_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM34(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM34_SHIFT)) & STCU2_MBUFM_MBUFM34_MASK)
#define STCU2_MBUFM_MBUFM35_MASK                 (0x8U)
#define STCU2_MBUFM_MBUFM35_SHIFT                (3U)
#define STCU2_MBUFM_MBUFM35_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM35(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM35_SHIFT)) & STCU2_MBUFM_MBUFM35_MASK)
#define STCU2_MBUFM_MBUFM36_MASK                 (0x10U)
#define STCU2_MBUFM_MBUFM36_SHIFT                (4U)
#define STCU2_MBUFM_MBUFM36_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM36(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM36_SHIFT)) & STCU2_MBUFM_MBUFM36_MASK)
#define STCU2_MBUFM_MBUFM37_MASK                 (0x20U)
#define STCU2_MBUFM_MBUFM37_SHIFT                (5U)
#define STCU2_MBUFM_MBUFM37_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM37(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM37_SHIFT)) & STCU2_MBUFM_MBUFM37_MASK)
#define STCU2_MBUFM_MBUFM38_MASK                 (0x40U)
#define STCU2_MBUFM_MBUFM38_SHIFT                (6U)
#define STCU2_MBUFM_MBUFM38_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM38(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM38_SHIFT)) & STCU2_MBUFM_MBUFM38_MASK)
#define STCU2_MBUFM_MBUFM39_MASK                 (0x80U)
#define STCU2_MBUFM_MBUFM39_SHIFT                (7U)
#define STCU2_MBUFM_MBUFM39_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM39(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM39_SHIFT)) & STCU2_MBUFM_MBUFM39_MASK)
#define STCU2_MBUFM_MBUFM40_MASK                 (0x100U)
#define STCU2_MBUFM_MBUFM40_SHIFT                (8U)
#define STCU2_MBUFM_MBUFM40_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM40(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM40_SHIFT)) & STCU2_MBUFM_MBUFM40_MASK)
#define STCU2_MBUFM_MBUFM41_MASK                 (0x200U)
#define STCU2_MBUFM_MBUFM41_SHIFT                (9U)
#define STCU2_MBUFM_MBUFM41_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM41(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM41_SHIFT)) & STCU2_MBUFM_MBUFM41_MASK)
#define STCU2_MBUFM_MBUFM42_MASK                 (0x400U)
#define STCU2_MBUFM_MBUFM42_SHIFT                (10U)
#define STCU2_MBUFM_MBUFM42_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM42(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM42_SHIFT)) & STCU2_MBUFM_MBUFM42_MASK)
#define STCU2_MBUFM_MBUFM43_MASK                 (0x800U)
#define STCU2_MBUFM_MBUFM43_SHIFT                (11U)
#define STCU2_MBUFM_MBUFM43_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM43(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM43_SHIFT)) & STCU2_MBUFM_MBUFM43_MASK)
#define STCU2_MBUFM_MBUFM44_MASK                 (0x1000U)
#define STCU2_MBUFM_MBUFM44_SHIFT                (12U)
#define STCU2_MBUFM_MBUFM44_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM44(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM44_SHIFT)) & STCU2_MBUFM_MBUFM44_MASK)
#define STCU2_MBUFM_MBUFM45_MASK                 (0x2000U)
#define STCU2_MBUFM_MBUFM45_SHIFT                (13U)
#define STCU2_MBUFM_MBUFM45_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM45(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM45_SHIFT)) & STCU2_MBUFM_MBUFM45_MASK)
#define STCU2_MBUFM_MBUFM46_MASK                 (0x4000U)
#define STCU2_MBUFM_MBUFM46_SHIFT                (14U)
#define STCU2_MBUFM_MBUFM46_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM46(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM46_SHIFT)) & STCU2_MBUFM_MBUFM46_MASK)
#define STCU2_MBUFM_MBUFM47_MASK                 (0x8000U)
#define STCU2_MBUFM_MBUFM47_SHIFT                (15U)
#define STCU2_MBUFM_MBUFM47_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM47(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM47_SHIFT)) & STCU2_MBUFM_MBUFM47_MASK)
#define STCU2_MBUFM_MBUFM48_MASK                 (0x10000U)
#define STCU2_MBUFM_MBUFM48_SHIFT                (16U)
#define STCU2_MBUFM_MBUFM48_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM48(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM48_SHIFT)) & STCU2_MBUFM_MBUFM48_MASK)
#define STCU2_MBUFM_MBUFM49_MASK                 (0x20000U)
#define STCU2_MBUFM_MBUFM49_SHIFT                (17U)
#define STCU2_MBUFM_MBUFM49_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM49(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM49_SHIFT)) & STCU2_MBUFM_MBUFM49_MASK)
#define STCU2_MBUFM_MBUFM50_MASK                 (0x40000U)
#define STCU2_MBUFM_MBUFM50_SHIFT                (18U)
#define STCU2_MBUFM_MBUFM50_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM50(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM50_SHIFT)) & STCU2_MBUFM_MBUFM50_MASK)
#define STCU2_MBUFM_MBUFM51_MASK                 (0x80000U)
#define STCU2_MBUFM_MBUFM51_SHIFT                (19U)
#define STCU2_MBUFM_MBUFM51_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM51(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM51_SHIFT)) & STCU2_MBUFM_MBUFM51_MASK)
#define STCU2_MBUFM_MBUFM52_MASK                 (0x100000U)
#define STCU2_MBUFM_MBUFM52_SHIFT                (20U)
#define STCU2_MBUFM_MBUFM52_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM52(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM52_SHIFT)) & STCU2_MBUFM_MBUFM52_MASK)
#define STCU2_MBUFM_MBUFM53_MASK                 (0x200000U)
#define STCU2_MBUFM_MBUFM53_SHIFT                (21U)
#define STCU2_MBUFM_MBUFM53_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM53(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM53_SHIFT)) & STCU2_MBUFM_MBUFM53_MASK)
#define STCU2_MBUFM_MBUFM54_MASK                 (0x400000U)
#define STCU2_MBUFM_MBUFM54_SHIFT                (22U)
#define STCU2_MBUFM_MBUFM54_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM54(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM54_SHIFT)) & STCU2_MBUFM_MBUFM54_MASK)
#define STCU2_MBUFM_MBUFM55_MASK                 (0x800000U)
#define STCU2_MBUFM_MBUFM55_SHIFT                (23U)
#define STCU2_MBUFM_MBUFM55_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM55(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM55_SHIFT)) & STCU2_MBUFM_MBUFM55_MASK)
#define STCU2_MBUFM_MBUFM56_MASK                 (0x1000000U)
#define STCU2_MBUFM_MBUFM56_SHIFT                (24U)
#define STCU2_MBUFM_MBUFM56_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM56(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM56_SHIFT)) & STCU2_MBUFM_MBUFM56_MASK)
#define STCU2_MBUFM_MBUFM57_MASK                 (0x2000000U)
#define STCU2_MBUFM_MBUFM57_SHIFT                (25U)
#define STCU2_MBUFM_MBUFM57_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM57(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM57_SHIFT)) & STCU2_MBUFM_MBUFM57_MASK)
#define STCU2_MBUFM_MBUFM58_MASK                 (0x4000000U)
#define STCU2_MBUFM_MBUFM58_SHIFT                (26U)
#define STCU2_MBUFM_MBUFM58_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM58(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM58_SHIFT)) & STCU2_MBUFM_MBUFM58_MASK)
#define STCU2_MBUFM_MBUFM59_MASK                 (0x8000000U)
#define STCU2_MBUFM_MBUFM59_SHIFT                (27U)
#define STCU2_MBUFM_MBUFM59_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM59(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM59_SHIFT)) & STCU2_MBUFM_MBUFM59_MASK)
#define STCU2_MBUFM_MBUFM60_MASK                 (0x10000000U)
#define STCU2_MBUFM_MBUFM60_SHIFT                (28U)
#define STCU2_MBUFM_MBUFM60_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM60(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM60_SHIFT)) & STCU2_MBUFM_MBUFM60_MASK)
#define STCU2_MBUFM_MBUFM61_MASK                 (0x20000000U)
#define STCU2_MBUFM_MBUFM61_SHIFT                (29U)
#define STCU2_MBUFM_MBUFM61_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM61(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM61_SHIFT)) & STCU2_MBUFM_MBUFM61_MASK)
#define STCU2_MBUFM_MBUFM62_MASK                 (0x40000000U)
#define STCU2_MBUFM_MBUFM62_SHIFT                (30U)
#define STCU2_MBUFM_MBUFM62_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM62(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM62_SHIFT)) & STCU2_MBUFM_MBUFM62_MASK)
#define STCU2_MBUFM_MBUFM63_MASK                 (0x80000000U)
#define STCU2_MBUFM_MBUFM63_SHIFT                (31U)
#define STCU2_MBUFM_MBUFM63_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM63(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM63_SHIFT)) & STCU2_MBUFM_MBUFM63_MASK)
#define STCU2_MBUFM_MBUFM64_MASK                 (0x1U)
#define STCU2_MBUFM_MBUFM64_SHIFT                (0U)
#define STCU2_MBUFM_MBUFM64_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM64(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM64_SHIFT)) & STCU2_MBUFM_MBUFM64_MASK)
#define STCU2_MBUFM_MBUFM65_MASK                 (0x2U)
#define STCU2_MBUFM_MBUFM65_SHIFT                (1U)
#define STCU2_MBUFM_MBUFM65_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM65(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM65_SHIFT)) & STCU2_MBUFM_MBUFM65_MASK)
#define STCU2_MBUFM_MBUFM66_MASK                 (0x4U)
#define STCU2_MBUFM_MBUFM66_SHIFT                (2U)
#define STCU2_MBUFM_MBUFM66_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM66(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM66_SHIFT)) & STCU2_MBUFM_MBUFM66_MASK)
#define STCU2_MBUFM_MBUFM67_MASK                 (0x8U)
#define STCU2_MBUFM_MBUFM67_SHIFT                (3U)
#define STCU2_MBUFM_MBUFM67_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM67(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM67_SHIFT)) & STCU2_MBUFM_MBUFM67_MASK)
#define STCU2_MBUFM_MBUFM68_MASK                 (0x10U)
#define STCU2_MBUFM_MBUFM68_SHIFT                (4U)
#define STCU2_MBUFM_MBUFM68_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM68(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM68_SHIFT)) & STCU2_MBUFM_MBUFM68_MASK)
#define STCU2_MBUFM_MBUFM69_MASK                 (0x20U)
#define STCU2_MBUFM_MBUFM69_SHIFT                (5U)
#define STCU2_MBUFM_MBUFM69_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM69(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM69_SHIFT)) & STCU2_MBUFM_MBUFM69_MASK)
#define STCU2_MBUFM_MBUFM70_MASK                 (0x40U)
#define STCU2_MBUFM_MBUFM70_SHIFT                (6U)
#define STCU2_MBUFM_MBUFM70_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM70(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM70_SHIFT)) & STCU2_MBUFM_MBUFM70_MASK)
#define STCU2_MBUFM_MBUFM71_MASK                 (0x80U)
#define STCU2_MBUFM_MBUFM71_SHIFT                (7U)
#define STCU2_MBUFM_MBUFM71_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM71(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM71_SHIFT)) & STCU2_MBUFM_MBUFM71_MASK)
#define STCU2_MBUFM_MBUFM72_MASK                 (0x100U)
#define STCU2_MBUFM_MBUFM72_SHIFT                (8U)
#define STCU2_MBUFM_MBUFM72_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM72(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM72_SHIFT)) & STCU2_MBUFM_MBUFM72_MASK)
#define STCU2_MBUFM_MBUFM73_MASK                 (0x200U)
#define STCU2_MBUFM_MBUFM73_SHIFT                (9U)
#define STCU2_MBUFM_MBUFM73_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM73(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM73_SHIFT)) & STCU2_MBUFM_MBUFM73_MASK)
#define STCU2_MBUFM_MBUFM74_MASK                 (0x400U)
#define STCU2_MBUFM_MBUFM74_SHIFT                (10U)
#define STCU2_MBUFM_MBUFM74_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM74(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM74_SHIFT)) & STCU2_MBUFM_MBUFM74_MASK)
#define STCU2_MBUFM_MBUFM75_MASK                 (0x800U)
#define STCU2_MBUFM_MBUFM75_SHIFT                (11U)
#define STCU2_MBUFM_MBUFM75_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM75(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM75_SHIFT)) & STCU2_MBUFM_MBUFM75_MASK)
#define STCU2_MBUFM_MBUFM76_MASK                 (0x1000U)
#define STCU2_MBUFM_MBUFM76_SHIFT                (12U)
#define STCU2_MBUFM_MBUFM76_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM76(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM76_SHIFT)) & STCU2_MBUFM_MBUFM76_MASK)
#define STCU2_MBUFM_MBUFM77_MASK                 (0x2000U)
#define STCU2_MBUFM_MBUFM77_SHIFT                (13U)
#define STCU2_MBUFM_MBUFM77_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM77(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM77_SHIFT)) & STCU2_MBUFM_MBUFM77_MASK)
#define STCU2_MBUFM_MBUFM78_MASK                 (0x4000U)
#define STCU2_MBUFM_MBUFM78_SHIFT                (14U)
#define STCU2_MBUFM_MBUFM78_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM78(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM78_SHIFT)) & STCU2_MBUFM_MBUFM78_MASK)
#define STCU2_MBUFM_MBUFM79_MASK                 (0x8000U)
#define STCU2_MBUFM_MBUFM79_SHIFT                (15U)
#define STCU2_MBUFM_MBUFM79_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM79(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM79_SHIFT)) & STCU2_MBUFM_MBUFM79_MASK)
#define STCU2_MBUFM_MBUFM80_MASK                 (0x10000U)
#define STCU2_MBUFM_MBUFM80_SHIFT                (16U)
#define STCU2_MBUFM_MBUFM80_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM80(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM80_SHIFT)) & STCU2_MBUFM_MBUFM80_MASK)
#define STCU2_MBUFM_MBUFM81_MASK                 (0x20000U)
#define STCU2_MBUFM_MBUFM81_SHIFT                (17U)
#define STCU2_MBUFM_MBUFM81_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM81(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM81_SHIFT)) & STCU2_MBUFM_MBUFM81_MASK)
#define STCU2_MBUFM_MBUFM82_MASK                 (0x40000U)
#define STCU2_MBUFM_MBUFM82_SHIFT                (18U)
#define STCU2_MBUFM_MBUFM82_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM82(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM82_SHIFT)) & STCU2_MBUFM_MBUFM82_MASK)
#define STCU2_MBUFM_MBUFM83_MASK                 (0x80000U)
#define STCU2_MBUFM_MBUFM83_SHIFT                (19U)
#define STCU2_MBUFM_MBUFM83_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM83(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM83_SHIFT)) & STCU2_MBUFM_MBUFM83_MASK)
#define STCU2_MBUFM_MBUFM84_MASK                 (0x100000U)
#define STCU2_MBUFM_MBUFM84_SHIFT                (20U)
#define STCU2_MBUFM_MBUFM84_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM84(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM84_SHIFT)) & STCU2_MBUFM_MBUFM84_MASK)
#define STCU2_MBUFM_MBUFM85_MASK                 (0x200000U)
#define STCU2_MBUFM_MBUFM85_SHIFT                (21U)
#define STCU2_MBUFM_MBUFM85_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM85(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM85_SHIFT)) & STCU2_MBUFM_MBUFM85_MASK)
#define STCU2_MBUFM_MBUFM86_MASK                 (0x400000U)
#define STCU2_MBUFM_MBUFM86_SHIFT                (22U)
#define STCU2_MBUFM_MBUFM86_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM86(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM86_SHIFT)) & STCU2_MBUFM_MBUFM86_MASK)
#define STCU2_MBUFM_MBUFM87_MASK                 (0x800000U)
#define STCU2_MBUFM_MBUFM87_SHIFT                (23U)
#define STCU2_MBUFM_MBUFM87_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM87(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM87_SHIFT)) & STCU2_MBUFM_MBUFM87_MASK)
#define STCU2_MBUFM_MBUFM88_MASK                 (0x1000000U)
#define STCU2_MBUFM_MBUFM88_SHIFT                (24U)
#define STCU2_MBUFM_MBUFM88_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM88(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM88_SHIFT)) & STCU2_MBUFM_MBUFM88_MASK)
#define STCU2_MBUFM_MBUFM89_MASK                 (0x2000000U)
#define STCU2_MBUFM_MBUFM89_SHIFT                (25U)
#define STCU2_MBUFM_MBUFM89_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM89(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM89_SHIFT)) & STCU2_MBUFM_MBUFM89_MASK)
#define STCU2_MBUFM_MBUFM90_MASK                 (0x4000000U)
#define STCU2_MBUFM_MBUFM90_SHIFT                (26U)
#define STCU2_MBUFM_MBUFM90_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM90(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM90_SHIFT)) & STCU2_MBUFM_MBUFM90_MASK)
#define STCU2_MBUFM_MBUFM91_MASK                 (0x8000000U)
#define STCU2_MBUFM_MBUFM91_SHIFT                (27U)
#define STCU2_MBUFM_MBUFM91_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM91(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM91_SHIFT)) & STCU2_MBUFM_MBUFM91_MASK)
#define STCU2_MBUFM_MBUFM92_MASK                 (0x10000000U)
#define STCU2_MBUFM_MBUFM92_SHIFT                (28U)
#define STCU2_MBUFM_MBUFM92_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM92(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM92_SHIFT)) & STCU2_MBUFM_MBUFM92_MASK)
#define STCU2_MBUFM_MBUFM93_MASK                 (0x20000000U)
#define STCU2_MBUFM_MBUFM93_SHIFT                (29U)
#define STCU2_MBUFM_MBUFM93_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM93(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM93_SHIFT)) & STCU2_MBUFM_MBUFM93_MASK)
#define STCU2_MBUFM_MBUFM94_MASK                 (0x40000000U)
#define STCU2_MBUFM_MBUFM94_SHIFT                (30U)
#define STCU2_MBUFM_MBUFM94_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM94(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM94_SHIFT)) & STCU2_MBUFM_MBUFM94_MASK)
#define STCU2_MBUFM_MBUFM95_MASK                 (0x80000000U)
#define STCU2_MBUFM_MBUFM95_SHIFT                (31U)
#define STCU2_MBUFM_MBUFM95_WIDTH                (1U)
#define STCU2_MBUFM_MBUFM95(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM_MBUFM95_SHIFT)) & STCU2_MBUFM_MBUFM95_MASK)
/*! @} */

/*! @name MBUFM3 - STCU2 MBIST Unrecoverable FM */
/*! @{ */
#define STCU2_MBUFM3_MBUFM96_MASK                (0x1U)
#define STCU2_MBUFM3_MBUFM96_SHIFT               (0U)
#define STCU2_MBUFM3_MBUFM96_WIDTH               (1U)
#define STCU2_MBUFM3_MBUFM96(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM3_MBUFM96_SHIFT)) & STCU2_MBUFM3_MBUFM96_MASK)
#define STCU2_MBUFM3_MBUFM97_MASK                (0x2U)
#define STCU2_MBUFM3_MBUFM97_SHIFT               (1U)
#define STCU2_MBUFM3_MBUFM97_WIDTH               (1U)
#define STCU2_MBUFM3_MBUFM97(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM3_MBUFM97_SHIFT)) & STCU2_MBUFM3_MBUFM97_MASK)
#define STCU2_MBUFM3_MBUFM98_MASK                (0x4U)
#define STCU2_MBUFM3_MBUFM98_SHIFT               (2U)
#define STCU2_MBUFM3_MBUFM98_WIDTH               (1U)
#define STCU2_MBUFM3_MBUFM98(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM3_MBUFM98_SHIFT)) & STCU2_MBUFM3_MBUFM98_MASK)
#define STCU2_MBUFM3_MBUFM99_MASK                (0x8U)
#define STCU2_MBUFM3_MBUFM99_SHIFT               (3U)
#define STCU2_MBUFM3_MBUFM99_WIDTH               (1U)
#define STCU2_MBUFM3_MBUFM99(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM3_MBUFM99_SHIFT)) & STCU2_MBUFM3_MBUFM99_MASK)
#define STCU2_MBUFM3_MBUFM100_MASK               (0x10U)
#define STCU2_MBUFM3_MBUFM100_SHIFT              (4U)
#define STCU2_MBUFM3_MBUFM100_WIDTH              (1U)
#define STCU2_MBUFM3_MBUFM100(x)                 (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM3_MBUFM100_SHIFT)) & STCU2_MBUFM3_MBUFM100_MASK)
#define STCU2_MBUFM3_MBUFM101_MASK               (0x20U)
#define STCU2_MBUFM3_MBUFM101_SHIFT              (5U)
#define STCU2_MBUFM3_MBUFM101_WIDTH              (1U)
#define STCU2_MBUFM3_MBUFM101(x)                 (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM3_MBUFM101_SHIFT)) & STCU2_MBUFM3_MBUFM101_MASK)
#define STCU2_MBUFM3_MBUFM102_MASK               (0x40U)
#define STCU2_MBUFM3_MBUFM102_SHIFT              (6U)
#define STCU2_MBUFM3_MBUFM102_WIDTH              (1U)
#define STCU2_MBUFM3_MBUFM102(x)                 (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM3_MBUFM102_SHIFT)) & STCU2_MBUFM3_MBUFM102_MASK)
#define STCU2_MBUFM3_MBUFM103_MASK               (0x80U)
#define STCU2_MBUFM3_MBUFM103_SHIFT              (7U)
#define STCU2_MBUFM3_MBUFM103_WIDTH              (1U)
#define STCU2_MBUFM3_MBUFM103(x)                 (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM3_MBUFM103_SHIFT)) & STCU2_MBUFM3_MBUFM103_MASK)
#define STCU2_MBUFM3_MBUFM104_MASK               (0x100U)
#define STCU2_MBUFM3_MBUFM104_SHIFT              (8U)
#define STCU2_MBUFM3_MBUFM104_WIDTH              (1U)
#define STCU2_MBUFM3_MBUFM104(x)                 (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM3_MBUFM104_SHIFT)) & STCU2_MBUFM3_MBUFM104_MASK)
#define STCU2_MBUFM3_MBUFM105_MASK               (0x200U)
#define STCU2_MBUFM3_MBUFM105_SHIFT              (9U)
#define STCU2_MBUFM3_MBUFM105_WIDTH              (1U)
#define STCU2_MBUFM3_MBUFM105(x)                 (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM3_MBUFM105_SHIFT)) & STCU2_MBUFM3_MBUFM105_MASK)
#define STCU2_MBUFM3_MBUFM106_MASK               (0x400U)
#define STCU2_MBUFM3_MBUFM106_SHIFT              (10U)
#define STCU2_MBUFM3_MBUFM106_WIDTH              (1U)
#define STCU2_MBUFM3_MBUFM106(x)                 (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM3_MBUFM106_SHIFT)) & STCU2_MBUFM3_MBUFM106_MASK)
#define STCU2_MBUFM3_MBUFM107_MASK               (0x800U)
#define STCU2_MBUFM3_MBUFM107_SHIFT              (11U)
#define STCU2_MBUFM3_MBUFM107_WIDTH              (1U)
#define STCU2_MBUFM3_MBUFM107(x)                 (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM3_MBUFM107_SHIFT)) & STCU2_MBUFM3_MBUFM107_MASK)
#define STCU2_MBUFM3_MBUFM108_MASK               (0x1000U)
#define STCU2_MBUFM3_MBUFM108_SHIFT              (12U)
#define STCU2_MBUFM3_MBUFM108_WIDTH              (1U)
#define STCU2_MBUFM3_MBUFM108(x)                 (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM3_MBUFM108_SHIFT)) & STCU2_MBUFM3_MBUFM108_MASK)
#define STCU2_MBUFM3_MBUFM109_MASK               (0x2000U)
#define STCU2_MBUFM3_MBUFM109_SHIFT              (13U)
#define STCU2_MBUFM3_MBUFM109_WIDTH              (1U)
#define STCU2_MBUFM3_MBUFM109(x)                 (((uint32_t)(((uint32_t)(x)) << STCU2_MBUFM3_MBUFM109_SHIFT)) & STCU2_MBUFM3_MBUFM109_MASK)
/*! @} */

/*! @name CTRL - STCU2 LBIST Control */
/*! @{ */
#define STCU2_CTRL_CWS_MASK                      (0x3FU)
#define STCU2_CTRL_CWS_SHIFT                     (0U)
#define STCU2_CTRL_CWS_WIDTH                     (6U)
#define STCU2_CTRL_CWS(x)                        (((uint32_t)(((uint32_t)(x)) << STCU2_CTRL_CWS_SHIFT)) & STCU2_CTRL_CWS_MASK)
#define STCU2_CTRL_SCEN_ON_MASK                  (0xF00U)
#define STCU2_CTRL_SCEN_ON_SHIFT                 (8U)
#define STCU2_CTRL_SCEN_ON_WIDTH                 (4U)
#define STCU2_CTRL_SCEN_ON(x)                    (((uint32_t)(((uint32_t)(x)) << STCU2_CTRL_SCEN_ON_SHIFT)) & STCU2_CTRL_SCEN_ON_MASK)
#define STCU2_CTRL_SCEN_OFF_MASK                 (0xF000U)
#define STCU2_CTRL_SCEN_OFF_SHIFT                (12U)
#define STCU2_CTRL_SCEN_OFF_WIDTH                (4U)
#define STCU2_CTRL_SCEN_OFF(x)                   (((uint32_t)(((uint32_t)(x)) << STCU2_CTRL_SCEN_OFF_SHIFT)) & STCU2_CTRL_SCEN_OFF_MASK)
#define STCU2_CTRL_SHS_MASK                      (0x70000U)
#define STCU2_CTRL_SHS_SHIFT                     (16U)
#define STCU2_CTRL_SHS_WIDTH                     (3U)
#define STCU2_CTRL_SHS(x)                        (((uint32_t)(((uint32_t)(x)) << STCU2_CTRL_SHS_SHIFT)) & STCU2_CTRL_SHS_MASK)
#define STCU2_CTRL_PTR_MASK                      (0x7FE00000U)
#define STCU2_CTRL_PTR_SHIFT                     (21U)
#define STCU2_CTRL_PTR_WIDTH                     (10U)
#define STCU2_CTRL_PTR(x)                        (((uint32_t)(((uint32_t)(x)) << STCU2_CTRL_PTR_SHIFT)) & STCU2_CTRL_PTR_MASK)
#define STCU2_CTRL_CSM_MASK                      (0x80000000U)
#define STCU2_CTRL_CSM_SHIFT                     (31U)
#define STCU2_CTRL_CSM_WIDTH                     (1U)
#define STCU2_CTRL_CSM(x)                        (((uint32_t)(((uint32_t)(x)) << STCU2_CTRL_CSM_SHIFT)) & STCU2_CTRL_CSM_MASK)
/*! @} */

/*! @name PCS - STCU2 LBIST PC Stop */
/*! @{ */
#define STCU2_PCS_PCS_MASK                       (0x3FFFFFFU)
#define STCU2_PCS_PCS_SHIFT                      (0U)
#define STCU2_PCS_PCS_WIDTH                      (26U)
#define STCU2_PCS_PCS(x)                         (((uint32_t)(((uint32_t)(x)) << STCU2_PCS_PCS_SHIFT)) & STCU2_PCS_PCS_MASK)
/*! @} */

/*! @name MISRELSW - STCU2 Online LBIST MISR Expected Low */
/*! @{ */
#define STCU2_MISRELSW_MISRESWx_MASK             (0xFFFFFFFFU)
#define STCU2_MISRELSW_MISRESWx_SHIFT            (0U)
#define STCU2_MISRELSW_MISRESWx_WIDTH            (32U)
#define STCU2_MISRELSW_MISRESWx(x)               (((uint32_t)(((uint32_t)(x)) << STCU2_MISRELSW_MISRESWx_SHIFT)) & STCU2_MISRELSW_MISRESWx_MASK)
/*! @} */

/*! @name MISREHSW - STCU2 Online LBIST MISR Expected High */
/*! @{ */
#define STCU2_MISREHSW_MISRESWx_MASK             (0xFFFFFFFFU)
#define STCU2_MISREHSW_MISRESWx_SHIFT            (0U)
#define STCU2_MISREHSW_MISRESWx_WIDTH            (32U)
#define STCU2_MISREHSW_MISRESWx(x)               (((uint32_t)(((uint32_t)(x)) << STCU2_MISREHSW_MISRESWx_SHIFT)) & STCU2_MISREHSW_MISRESWx_MASK)
/*! @} */

/*! @name MISRRLSW - STCU2 Online LBIST MISR Read Low */
/*! @{ */
#define STCU2_MISRRLSW_MISRRSWx_MASK             (0xFFFFFFFFU)
#define STCU2_MISRRLSW_MISRRSWx_SHIFT            (0U)
#define STCU2_MISRRLSW_MISRRSWx_WIDTH            (32U)
#define STCU2_MISRRLSW_MISRRSWx(x)               (((uint32_t)(((uint32_t)(x)) << STCU2_MISRRLSW_MISRRSWx_SHIFT)) & STCU2_MISRRLSW_MISRRSWx_MASK)
/*! @} */

/*! @name MISRRHSW - STCU2 Online LBIST MISR Read High */
/*! @{ */
#define STCU2_MISRRHSW_MISRRSWx_MASK             (0xFFFFFFFFU)
#define STCU2_MISRRHSW_MISRRSWx_SHIFT            (0U)
#define STCU2_MISRRHSW_MISRRSWx_WIDTH            (32U)
#define STCU2_MISRRHSW_MISRRSWx(x)               (((uint32_t)(((uint32_t)(x)) << STCU2_MISRRHSW_MISRRSWx_SHIFT)) & STCU2_MISRRHSW_MISRRSWx_MASK)
/*! @} */

/*! @name ALGOSEL - STCU2 Algorithm Select */
/*! @{ */
#define STCU2_ALGOSEL_ALGOSEL0_MASK              (0x1U)
#define STCU2_ALGOSEL_ALGOSEL0_SHIFT             (0U)
#define STCU2_ALGOSEL_ALGOSEL0_WIDTH             (1U)
#define STCU2_ALGOSEL_ALGOSEL0(x)                (((uint32_t)(((uint32_t)(x)) << STCU2_ALGOSEL_ALGOSEL0_SHIFT)) & STCU2_ALGOSEL_ALGOSEL0_MASK)
#define STCU2_ALGOSEL_ALGOSEL1_MASK              (0x2U)
#define STCU2_ALGOSEL_ALGOSEL1_SHIFT             (1U)
#define STCU2_ALGOSEL_ALGOSEL1_WIDTH             (1U)
#define STCU2_ALGOSEL_ALGOSEL1(x)                (((uint32_t)(((uint32_t)(x)) << STCU2_ALGOSEL_ALGOSEL1_SHIFT)) & STCU2_ALGOSEL_ALGOSEL1_MASK)
#define STCU2_ALGOSEL_ALGOSEL2_MASK              (0x4U)
#define STCU2_ALGOSEL_ALGOSEL2_SHIFT             (2U)
#define STCU2_ALGOSEL_ALGOSEL2_WIDTH             (1U)
#define STCU2_ALGOSEL_ALGOSEL2(x)                (((uint32_t)(((uint32_t)(x)) << STCU2_ALGOSEL_ALGOSEL2_SHIFT)) & STCU2_ALGOSEL_ALGOSEL2_MASK)
#define STCU2_ALGOSEL_ALGOSEL3_MASK              (0x8U)
#define STCU2_ALGOSEL_ALGOSEL3_SHIFT             (3U)
#define STCU2_ALGOSEL_ALGOSEL3_WIDTH             (1U)
#define STCU2_ALGOSEL_ALGOSEL3(x)                (((uint32_t)(((uint32_t)(x)) << STCU2_ALGOSEL_ALGOSEL3_SHIFT)) & STCU2_ALGOSEL_ALGOSEL3_MASK)
#define STCU2_ALGOSEL_ALGOSEL4_MASK              (0x10U)
#define STCU2_ALGOSEL_ALGOSEL4_SHIFT             (4U)
#define STCU2_ALGOSEL_ALGOSEL4_WIDTH             (1U)
#define STCU2_ALGOSEL_ALGOSEL4(x)                (((uint32_t)(((uint32_t)(x)) << STCU2_ALGOSEL_ALGOSEL4_SHIFT)) & STCU2_ALGOSEL_ALGOSEL4_MASK)
#define STCU2_ALGOSEL_ALGOSEL5_MASK              (0x20U)
#define STCU2_ALGOSEL_ALGOSEL5_SHIFT             (5U)
#define STCU2_ALGOSEL_ALGOSEL5_WIDTH             (1U)
#define STCU2_ALGOSEL_ALGOSEL5(x)                (((uint32_t)(((uint32_t)(x)) << STCU2_ALGOSEL_ALGOSEL5_SHIFT)) & STCU2_ALGOSEL_ALGOSEL5_MASK)
#define STCU2_ALGOSEL_ALGOSEL6_MASK              (0x40U)
#define STCU2_ALGOSEL_ALGOSEL6_SHIFT             (6U)
#define STCU2_ALGOSEL_ALGOSEL6_WIDTH             (1U)
#define STCU2_ALGOSEL_ALGOSEL6(x)                (((uint32_t)(((uint32_t)(x)) << STCU2_ALGOSEL_ALGOSEL6_SHIFT)) & STCU2_ALGOSEL_ALGOSEL6_MASK)
#define STCU2_ALGOSEL_ALGOSEL7_MASK              (0x80U)
#define STCU2_ALGOSEL_ALGOSEL7_SHIFT             (7U)
#define STCU2_ALGOSEL_ALGOSEL7_WIDTH             (1U)
#define STCU2_ALGOSEL_ALGOSEL7(x)                (((uint32_t)(((uint32_t)(x)) << STCU2_ALGOSEL_ALGOSEL7_SHIFT)) & STCU2_ALGOSEL_ALGOSEL7_MASK)
#define STCU2_ALGOSEL_ALGOSEL8_MASK              (0x100U)
#define STCU2_ALGOSEL_ALGOSEL8_SHIFT             (8U)
#define STCU2_ALGOSEL_ALGOSEL8_WIDTH             (1U)
#define STCU2_ALGOSEL_ALGOSEL8(x)                (((uint32_t)(((uint32_t)(x)) << STCU2_ALGOSEL_ALGOSEL8_SHIFT)) & STCU2_ALGOSEL_ALGOSEL8_MASK)
#define STCU2_ALGOSEL_ALGOSEL9_MASK              (0x200U)
#define STCU2_ALGOSEL_ALGOSEL9_SHIFT             (9U)
#define STCU2_ALGOSEL_ALGOSEL9_WIDTH             (1U)
#define STCU2_ALGOSEL_ALGOSEL9(x)                (((uint32_t)(((uint32_t)(x)) << STCU2_ALGOSEL_ALGOSEL9_SHIFT)) & STCU2_ALGOSEL_ALGOSEL9_MASK)
#define STCU2_ALGOSEL_ALGOSEL10_MASK             (0x400U)
#define STCU2_ALGOSEL_ALGOSEL10_SHIFT            (10U)
#define STCU2_ALGOSEL_ALGOSEL10_WIDTH            (1U)
#define STCU2_ALGOSEL_ALGOSEL10(x)               (((uint32_t)(((uint32_t)(x)) << STCU2_ALGOSEL_ALGOSEL10_SHIFT)) & STCU2_ALGOSEL_ALGOSEL10_MASK)
#define STCU2_ALGOSEL_ALGOSEL11_MASK             (0x800U)
#define STCU2_ALGOSEL_ALGOSEL11_SHIFT            (11U)
#define STCU2_ALGOSEL_ALGOSEL11_WIDTH            (1U)
#define STCU2_ALGOSEL_ALGOSEL11(x)               (((uint32_t)(((uint32_t)(x)) << STCU2_ALGOSEL_ALGOSEL11_SHIFT)) & STCU2_ALGOSEL_ALGOSEL11_MASK)
#define STCU2_ALGOSEL_ALGOSEL12_MASK             (0x1000U)
#define STCU2_ALGOSEL_ALGOSEL12_SHIFT            (12U)
#define STCU2_ALGOSEL_ALGOSEL12_WIDTH            (1U)
#define STCU2_ALGOSEL_ALGOSEL12(x)               (((uint32_t)(((uint32_t)(x)) << STCU2_ALGOSEL_ALGOSEL12_SHIFT)) & STCU2_ALGOSEL_ALGOSEL12_MASK)
#define STCU2_ALGOSEL_ALGOSEL13_MASK             (0x2000U)
#define STCU2_ALGOSEL_ALGOSEL13_SHIFT            (13U)
#define STCU2_ALGOSEL_ALGOSEL13_WIDTH            (1U)
#define STCU2_ALGOSEL_ALGOSEL13(x)               (((uint32_t)(((uint32_t)(x)) << STCU2_ALGOSEL_ALGOSEL13_SHIFT)) & STCU2_ALGOSEL_ALGOSEL13_MASK)
#define STCU2_ALGOSEL_ALGOSEL14_MASK             (0x4000U)
#define STCU2_ALGOSEL_ALGOSEL14_SHIFT            (14U)
#define STCU2_ALGOSEL_ALGOSEL14_WIDTH            (1U)
#define STCU2_ALGOSEL_ALGOSEL14(x)               (((uint32_t)(((uint32_t)(x)) << STCU2_ALGOSEL_ALGOSEL14_SHIFT)) & STCU2_ALGOSEL_ALGOSEL14_MASK)
#define STCU2_ALGOSEL_ALGOSEL15_MASK             (0x8000U)
#define STCU2_ALGOSEL_ALGOSEL15_SHIFT            (15U)
#define STCU2_ALGOSEL_ALGOSEL15_WIDTH            (1U)
#define STCU2_ALGOSEL_ALGOSEL15(x)               (((uint32_t)(((uint32_t)(x)) << STCU2_ALGOSEL_ALGOSEL15_SHIFT)) & STCU2_ALGOSEL_ALGOSEL15_MASK)
#define STCU2_ALGOSEL_ALGOSEL16_MASK             (0x10000U)
#define STCU2_ALGOSEL_ALGOSEL16_SHIFT            (16U)
#define STCU2_ALGOSEL_ALGOSEL16_WIDTH            (1U)
#define STCU2_ALGOSEL_ALGOSEL16(x)               (((uint32_t)(((uint32_t)(x)) << STCU2_ALGOSEL_ALGOSEL16_SHIFT)) & STCU2_ALGOSEL_ALGOSEL16_MASK)
#define STCU2_ALGOSEL_ALGOSEL17_MASK             (0x20000U)
#define STCU2_ALGOSEL_ALGOSEL17_SHIFT            (17U)
#define STCU2_ALGOSEL_ALGOSEL17_WIDTH            (1U)
#define STCU2_ALGOSEL_ALGOSEL17(x)               (((uint32_t)(((uint32_t)(x)) << STCU2_ALGOSEL_ALGOSEL17_SHIFT)) & STCU2_ALGOSEL_ALGOSEL17_MASK)
#define STCU2_ALGOSEL_ALGOSEL18_MASK             (0x40000U)
#define STCU2_ALGOSEL_ALGOSEL18_SHIFT            (18U)
#define STCU2_ALGOSEL_ALGOSEL18_WIDTH            (1U)
#define STCU2_ALGOSEL_ALGOSEL18(x)               (((uint32_t)(((uint32_t)(x)) << STCU2_ALGOSEL_ALGOSEL18_SHIFT)) & STCU2_ALGOSEL_ALGOSEL18_MASK)
#define STCU2_ALGOSEL_ALGOSEL19_MASK             (0x80000U)
#define STCU2_ALGOSEL_ALGOSEL19_SHIFT            (19U)
#define STCU2_ALGOSEL_ALGOSEL19_WIDTH            (1U)
#define STCU2_ALGOSEL_ALGOSEL19(x)               (((uint32_t)(((uint32_t)(x)) << STCU2_ALGOSEL_ALGOSEL19_SHIFT)) & STCU2_ALGOSEL_ALGOSEL19_MASK)
#define STCU2_ALGOSEL_ALGOSEL20_MASK             (0x100000U)
#define STCU2_ALGOSEL_ALGOSEL20_SHIFT            (20U)
#define STCU2_ALGOSEL_ALGOSEL20_WIDTH            (1U)
#define STCU2_ALGOSEL_ALGOSEL20(x)               (((uint32_t)(((uint32_t)(x)) << STCU2_ALGOSEL_ALGOSEL20_SHIFT)) & STCU2_ALGOSEL_ALGOSEL20_MASK)
#define STCU2_ALGOSEL_ALGOSEL21_MASK             (0x200000U)
#define STCU2_ALGOSEL_ALGOSEL21_SHIFT            (21U)
#define STCU2_ALGOSEL_ALGOSEL21_WIDTH            (1U)
#define STCU2_ALGOSEL_ALGOSEL21(x)               (((uint32_t)(((uint32_t)(x)) << STCU2_ALGOSEL_ALGOSEL21_SHIFT)) & STCU2_ALGOSEL_ALGOSEL21_MASK)
#define STCU2_ALGOSEL_ALGOSEL22_MASK             (0x400000U)
#define STCU2_ALGOSEL_ALGOSEL22_SHIFT            (22U)
#define STCU2_ALGOSEL_ALGOSEL22_WIDTH            (1U)
#define STCU2_ALGOSEL_ALGOSEL22(x)               (((uint32_t)(((uint32_t)(x)) << STCU2_ALGOSEL_ALGOSEL22_SHIFT)) & STCU2_ALGOSEL_ALGOSEL22_MASK)
#define STCU2_ALGOSEL_ALGOSEL23_MASK             (0x800000U)
#define STCU2_ALGOSEL_ALGOSEL23_SHIFT            (23U)
#define STCU2_ALGOSEL_ALGOSEL23_WIDTH            (1U)
#define STCU2_ALGOSEL_ALGOSEL23(x)               (((uint32_t)(((uint32_t)(x)) << STCU2_ALGOSEL_ALGOSEL23_SHIFT)) & STCU2_ALGOSEL_ALGOSEL23_MASK)
#define STCU2_ALGOSEL_ALGOSEL24_MASK             (0x1000000U)
#define STCU2_ALGOSEL_ALGOSEL24_SHIFT            (24U)
#define STCU2_ALGOSEL_ALGOSEL24_WIDTH            (1U)
#define STCU2_ALGOSEL_ALGOSEL24(x)               (((uint32_t)(((uint32_t)(x)) << STCU2_ALGOSEL_ALGOSEL24_SHIFT)) & STCU2_ALGOSEL_ALGOSEL24_MASK)
#define STCU2_ALGOSEL_ALGOSEL25_MASK             (0x2000000U)
#define STCU2_ALGOSEL_ALGOSEL25_SHIFT            (25U)
#define STCU2_ALGOSEL_ALGOSEL25_WIDTH            (1U)
#define STCU2_ALGOSEL_ALGOSEL25(x)               (((uint32_t)(((uint32_t)(x)) << STCU2_ALGOSEL_ALGOSEL25_SHIFT)) & STCU2_ALGOSEL_ALGOSEL25_MASK)
#define STCU2_ALGOSEL_ALGOSEL26_MASK             (0x4000000U)
#define STCU2_ALGOSEL_ALGOSEL26_SHIFT            (26U)
#define STCU2_ALGOSEL_ALGOSEL26_WIDTH            (1U)
#define STCU2_ALGOSEL_ALGOSEL26(x)               (((uint32_t)(((uint32_t)(x)) << STCU2_ALGOSEL_ALGOSEL26_SHIFT)) & STCU2_ALGOSEL_ALGOSEL26_MASK)
#define STCU2_ALGOSEL_ALGOSEL27_MASK             (0x8000000U)
#define STCU2_ALGOSEL_ALGOSEL27_SHIFT            (27U)
#define STCU2_ALGOSEL_ALGOSEL27_WIDTH            (1U)
#define STCU2_ALGOSEL_ALGOSEL27(x)               (((uint32_t)(((uint32_t)(x)) << STCU2_ALGOSEL_ALGOSEL27_SHIFT)) & STCU2_ALGOSEL_ALGOSEL27_MASK)
#define STCU2_ALGOSEL_ALGOSEL28_MASK             (0x10000000U)
#define STCU2_ALGOSEL_ALGOSEL28_SHIFT            (28U)
#define STCU2_ALGOSEL_ALGOSEL28_WIDTH            (1U)
#define STCU2_ALGOSEL_ALGOSEL28(x)               (((uint32_t)(((uint32_t)(x)) << STCU2_ALGOSEL_ALGOSEL28_SHIFT)) & STCU2_ALGOSEL_ALGOSEL28_MASK)
#define STCU2_ALGOSEL_ALGOSEL29_MASK             (0x20000000U)
#define STCU2_ALGOSEL_ALGOSEL29_SHIFT            (29U)
#define STCU2_ALGOSEL_ALGOSEL29_WIDTH            (1U)
#define STCU2_ALGOSEL_ALGOSEL29(x)               (((uint32_t)(((uint32_t)(x)) << STCU2_ALGOSEL_ALGOSEL29_SHIFT)) & STCU2_ALGOSEL_ALGOSEL29_MASK)
#define STCU2_ALGOSEL_ALGOSEL30_MASK             (0x40000000U)
#define STCU2_ALGOSEL_ALGOSEL30_SHIFT            (30U)
#define STCU2_ALGOSEL_ALGOSEL30_WIDTH            (1U)
#define STCU2_ALGOSEL_ALGOSEL30(x)               (((uint32_t)(((uint32_t)(x)) << STCU2_ALGOSEL_ALGOSEL30_SHIFT)) & STCU2_ALGOSEL_ALGOSEL30_MASK)
#define STCU2_ALGOSEL_ALGOSEL31_MASK             (0x80000000U)
#define STCU2_ALGOSEL_ALGOSEL31_SHIFT            (31U)
#define STCU2_ALGOSEL_ALGOSEL31_WIDTH            (1U)
#define STCU2_ALGOSEL_ALGOSEL31(x)               (((uint32_t)(((uint32_t)(x)) << STCU2_ALGOSEL_ALGOSEL31_SHIFT)) & STCU2_ALGOSEL_ALGOSEL31_MASK)
/*! @} */

/*! @name STGGR - STCU2 MBIST Stagger */
/*! @{ */
#define STCU2_STGGR_STAG_MASK                    (0xFFFFFFFFU)
#define STCU2_STGGR_STAG_SHIFT                   (0U)
#define STCU2_STGGR_STAG_WIDTH                   (32U)
#define STCU2_STGGR_STAG(x)                      (((uint32_t)(((uint32_t)(x)) << STCU2_STGGR_STAG_SHIFT)) & STCU2_STGGR_STAG_MASK)
/*! @} */

/*! @name BSTART - STCU2 BIST Start */
/*! @{ */
#define STCU2_BSTART_BSTART0_MASK                (0x1U)
#define STCU2_BSTART_BSTART0_SHIFT               (0U)
#define STCU2_BSTART_BSTART0_WIDTH               (1U)
#define STCU2_BSTART_BSTART0(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_BSTART_BSTART0_SHIFT)) & STCU2_BSTART_BSTART0_MASK)
#define STCU2_BSTART_BSTART1_MASK                (0x2U)
#define STCU2_BSTART_BSTART1_SHIFT               (1U)
#define STCU2_BSTART_BSTART1_WIDTH               (1U)
#define STCU2_BSTART_BSTART1(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_BSTART_BSTART1_SHIFT)) & STCU2_BSTART_BSTART1_MASK)
#define STCU2_BSTART_BSTART2_MASK                (0x4U)
#define STCU2_BSTART_BSTART2_SHIFT               (2U)
#define STCU2_BSTART_BSTART2_WIDTH               (1U)
#define STCU2_BSTART_BSTART2(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_BSTART_BSTART2_SHIFT)) & STCU2_BSTART_BSTART2_MASK)
#define STCU2_BSTART_BSTART3_MASK                (0x8U)
#define STCU2_BSTART_BSTART3_SHIFT               (3U)
#define STCU2_BSTART_BSTART3_WIDTH               (1U)
#define STCU2_BSTART_BSTART3(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_BSTART_BSTART3_SHIFT)) & STCU2_BSTART_BSTART3_MASK)
#define STCU2_BSTART_BSTART4_MASK                (0x10U)
#define STCU2_BSTART_BSTART4_SHIFT               (4U)
#define STCU2_BSTART_BSTART4_WIDTH               (1U)
#define STCU2_BSTART_BSTART4(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_BSTART_BSTART4_SHIFT)) & STCU2_BSTART_BSTART4_MASK)
#define STCU2_BSTART_BSTART5_MASK                (0x20U)
#define STCU2_BSTART_BSTART5_SHIFT               (5U)
#define STCU2_BSTART_BSTART5_WIDTH               (1U)
#define STCU2_BSTART_BSTART5(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_BSTART_BSTART5_SHIFT)) & STCU2_BSTART_BSTART5_MASK)
#define STCU2_BSTART_BSTART6_MASK                (0x40U)
#define STCU2_BSTART_BSTART6_SHIFT               (6U)
#define STCU2_BSTART_BSTART6_WIDTH               (1U)
#define STCU2_BSTART_BSTART6(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_BSTART_BSTART6_SHIFT)) & STCU2_BSTART_BSTART6_MASK)
#define STCU2_BSTART_BSTART7_MASK                (0x80U)
#define STCU2_BSTART_BSTART7_SHIFT               (7U)
#define STCU2_BSTART_BSTART7_WIDTH               (1U)
#define STCU2_BSTART_BSTART7(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_BSTART_BSTART7_SHIFT)) & STCU2_BSTART_BSTART7_MASK)
#define STCU2_BSTART_BSTART8_MASK                (0x100U)
#define STCU2_BSTART_BSTART8_SHIFT               (8U)
#define STCU2_BSTART_BSTART8_WIDTH               (1U)
#define STCU2_BSTART_BSTART8(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_BSTART_BSTART8_SHIFT)) & STCU2_BSTART_BSTART8_MASK)
#define STCU2_BSTART_BSTART9_MASK                (0x200U)
#define STCU2_BSTART_BSTART9_SHIFT               (9U)
#define STCU2_BSTART_BSTART9_WIDTH               (1U)
#define STCU2_BSTART_BSTART9(x)                  (((uint32_t)(((uint32_t)(x)) << STCU2_BSTART_BSTART9_SHIFT)) & STCU2_BSTART_BSTART9_MASK)
#define STCU2_BSTART_BSTART10_MASK               (0x400U)
#define STCU2_BSTART_BSTART10_SHIFT              (10U)
#define STCU2_BSTART_BSTART10_WIDTH              (1U)
#define STCU2_BSTART_BSTART10(x)                 (((uint32_t)(((uint32_t)(x)) << STCU2_BSTART_BSTART10_SHIFT)) & STCU2_BSTART_BSTART10_MASK)
#define STCU2_BSTART_BSTART11_MASK               (0x800U)
#define STCU2_BSTART_BSTART11_SHIFT              (11U)
#define STCU2_BSTART_BSTART11_WIDTH              (1U)
#define STCU2_BSTART_BSTART11(x)                 (((uint32_t)(((uint32_t)(x)) << STCU2_BSTART_BSTART11_SHIFT)) & STCU2_BSTART_BSTART11_MASK)
#define STCU2_BSTART_BSTART12_MASK               (0x1000U)
#define STCU2_BSTART_BSTART12_SHIFT              (12U)
#define STCU2_BSTART_BSTART12_WIDTH              (1U)
#define STCU2_BSTART_BSTART12(x)                 (((uint32_t)(((uint32_t)(x)) << STCU2_BSTART_BSTART12_SHIFT)) & STCU2_BSTART_BSTART12_MASK)
#define STCU2_BSTART_BSTART13_MASK               (0x2000U)
#define STCU2_BSTART_BSTART13_SHIFT              (13U)
#define STCU2_BSTART_BSTART13_WIDTH              (1U)
#define STCU2_BSTART_BSTART13(x)                 (((uint32_t)(((uint32_t)(x)) << STCU2_BSTART_BSTART13_SHIFT)) & STCU2_BSTART_BSTART13_MASK)
#define STCU2_BSTART_BSTART14_MASK               (0x4000U)
#define STCU2_BSTART_BSTART14_SHIFT              (14U)
#define STCU2_BSTART_BSTART14_WIDTH              (1U)
#define STCU2_BSTART_BSTART14(x)                 (((uint32_t)(((uint32_t)(x)) << STCU2_BSTART_BSTART14_SHIFT)) & STCU2_BSTART_BSTART14_MASK)
#define STCU2_BSTART_BSTART15_MASK               (0x8000U)
#define STCU2_BSTART_BSTART15_SHIFT              (15U)
#define STCU2_BSTART_BSTART15_WIDTH              (1U)
#define STCU2_BSTART_BSTART15(x)                 (((uint32_t)(((uint32_t)(x)) << STCU2_BSTART_BSTART15_SHIFT)) & STCU2_BSTART_BSTART15_MASK)
#define STCU2_BSTART_BSTART16_MASK               (0x10000U)
#define STCU2_BSTART_BSTART16_SHIFT              (16U)
#define STCU2_BSTART_BSTART16_WIDTH              (1U)
#define STCU2_BSTART_BSTART16(x)                 (((uint32_t)(((uint32_t)(x)) << STCU2_BSTART_BSTART16_SHIFT)) & STCU2_BSTART_BSTART16_MASK)
#define STCU2_BSTART_BSTART17_MASK               (0x20000U)
#define STCU2_BSTART_BSTART17_SHIFT              (17U)
#define STCU2_BSTART_BSTART17_WIDTH              (1U)
#define STCU2_BSTART_BSTART17(x)                 (((uint32_t)(((uint32_t)(x)) << STCU2_BSTART_BSTART17_SHIFT)) & STCU2_BSTART_BSTART17_MASK)
#define STCU2_BSTART_BSTART18_MASK               (0x40000U)
#define STCU2_BSTART_BSTART18_SHIFT              (18U)
#define STCU2_BSTART_BSTART18_WIDTH              (1U)
#define STCU2_BSTART_BSTART18(x)                 (((uint32_t)(((uint32_t)(x)) << STCU2_BSTART_BSTART18_SHIFT)) & STCU2_BSTART_BSTART18_MASK)
#define STCU2_BSTART_BSTART19_MASK               (0x80000U)
#define STCU2_BSTART_BSTART19_SHIFT              (19U)
#define STCU2_BSTART_BSTART19_WIDTH              (1U)
#define STCU2_BSTART_BSTART19(x)                 (((uint32_t)(((uint32_t)(x)) << STCU2_BSTART_BSTART19_SHIFT)) & STCU2_BSTART_BSTART19_MASK)
#define STCU2_BSTART_BSTART20_MASK               (0x100000U)
#define STCU2_BSTART_BSTART20_SHIFT              (20U)
#define STCU2_BSTART_BSTART20_WIDTH              (1U)
#define STCU2_BSTART_BSTART20(x)                 (((uint32_t)(((uint32_t)(x)) << STCU2_BSTART_BSTART20_SHIFT)) & STCU2_BSTART_BSTART20_MASK)
#define STCU2_BSTART_BSTART21_MASK               (0x200000U)
#define STCU2_BSTART_BSTART21_SHIFT              (21U)
#define STCU2_BSTART_BSTART21_WIDTH              (1U)
#define STCU2_BSTART_BSTART21(x)                 (((uint32_t)(((uint32_t)(x)) << STCU2_BSTART_BSTART21_SHIFT)) & STCU2_BSTART_BSTART21_MASK)
#define STCU2_BSTART_BSTART22_MASK               (0x400000U)
#define STCU2_BSTART_BSTART22_SHIFT              (22U)
#define STCU2_BSTART_BSTART22_WIDTH              (1U)
#define STCU2_BSTART_BSTART22(x)                 (((uint32_t)(((uint32_t)(x)) << STCU2_BSTART_BSTART22_SHIFT)) & STCU2_BSTART_BSTART22_MASK)
#define STCU2_BSTART_BSTART23_MASK               (0x800000U)
#define STCU2_BSTART_BSTART23_SHIFT              (23U)
#define STCU2_BSTART_BSTART23_WIDTH              (1U)
#define STCU2_BSTART_BSTART23(x)                 (((uint32_t)(((uint32_t)(x)) << STCU2_BSTART_BSTART23_SHIFT)) & STCU2_BSTART_BSTART23_MASK)
#define STCU2_BSTART_BSTART24_MASK               (0x1000000U)
#define STCU2_BSTART_BSTART24_SHIFT              (24U)
#define STCU2_BSTART_BSTART24_WIDTH              (1U)
#define STCU2_BSTART_BSTART24(x)                 (((uint32_t)(((uint32_t)(x)) << STCU2_BSTART_BSTART24_SHIFT)) & STCU2_BSTART_BSTART24_MASK)
#define STCU2_BSTART_BSTART25_MASK               (0x2000000U)
#define STCU2_BSTART_BSTART25_SHIFT              (25U)
#define STCU2_BSTART_BSTART25_WIDTH              (1U)
#define STCU2_BSTART_BSTART25(x)                 (((uint32_t)(((uint32_t)(x)) << STCU2_BSTART_BSTART25_SHIFT)) & STCU2_BSTART_BSTART25_MASK)
#define STCU2_BSTART_BSTART26_MASK               (0x4000000U)
#define STCU2_BSTART_BSTART26_SHIFT              (26U)
#define STCU2_BSTART_BSTART26_WIDTH              (1U)
#define STCU2_BSTART_BSTART26(x)                 (((uint32_t)(((uint32_t)(x)) << STCU2_BSTART_BSTART26_SHIFT)) & STCU2_BSTART_BSTART26_MASK)
#define STCU2_BSTART_BSTART27_MASK               (0x8000000U)
#define STCU2_BSTART_BSTART27_SHIFT              (27U)
#define STCU2_BSTART_BSTART27_WIDTH              (1U)
#define STCU2_BSTART_BSTART27(x)                 (((uint32_t)(((uint32_t)(x)) << STCU2_BSTART_BSTART27_SHIFT)) & STCU2_BSTART_BSTART27_MASK)
#define STCU2_BSTART_BSTART28_MASK               (0x10000000U)
#define STCU2_BSTART_BSTART28_SHIFT              (28U)
#define STCU2_BSTART_BSTART28_WIDTH              (1U)
#define STCU2_BSTART_BSTART28(x)                 (((uint32_t)(((uint32_t)(x)) << STCU2_BSTART_BSTART28_SHIFT)) & STCU2_BSTART_BSTART28_MASK)
#define STCU2_BSTART_BSTART29_MASK               (0x20000000U)
#define STCU2_BSTART_BSTART29_SHIFT              (29U)
#define STCU2_BSTART_BSTART29_WIDTH              (1U)
#define STCU2_BSTART_BSTART29(x)                 (((uint32_t)(((uint32_t)(x)) << STCU2_BSTART_BSTART29_SHIFT)) & STCU2_BSTART_BSTART29_MASK)
#define STCU2_BSTART_BSTART30_MASK               (0x40000000U)
#define STCU2_BSTART_BSTART30_SHIFT              (30U)
#define STCU2_BSTART_BSTART30_WIDTH              (1U)
#define STCU2_BSTART_BSTART30(x)                 (((uint32_t)(((uint32_t)(x)) << STCU2_BSTART_BSTART30_SHIFT)) & STCU2_BSTART_BSTART30_MASK)
#define STCU2_BSTART_BSTART31_MASK               (0x80000000U)
#define STCU2_BSTART_BSTART31_SHIFT              (31U)
#define STCU2_BSTART_BSTART31_WIDTH              (1U)
#define STCU2_BSTART_BSTART31(x)                 (((uint32_t)(((uint32_t)(x)) << STCU2_BSTART_BSTART31_SHIFT)) & STCU2_BSTART_BSTART31_MASK)
/*! @} */

/*! @name MB_CTRL - STCU2 MBIST Control */
/*! @{ */
#define STCU2_MB_CTRL_BSEL_MASK                  (0x100000U)
#define STCU2_MB_CTRL_BSEL_SHIFT                 (20U)
#define STCU2_MB_CTRL_BSEL_WIDTH                 (1U)
#define STCU2_MB_CTRL_BSEL(x)                    (((uint32_t)(((uint32_t)(x)) << STCU2_MB_CTRL_BSEL_SHIFT)) & STCU2_MB_CTRL_BSEL_MASK)
#define STCU2_MB_CTRL_PTR_MASK                   (0x7FE00000U)
#define STCU2_MB_CTRL_PTR_SHIFT                  (21U)
#define STCU2_MB_CTRL_PTR_WIDTH                  (10U)
#define STCU2_MB_CTRL_PTR(x)                     (((uint32_t)(((uint32_t)(x)) << STCU2_MB_CTRL_PTR_SHIFT)) & STCU2_MB_CTRL_PTR_MASK)
#define STCU2_MB_CTRL_CSM_MASK                   (0x80000000U)
#define STCU2_MB_CTRL_CSM_SHIFT                  (31U)
#define STCU2_MB_CTRL_CSM_WIDTH                  (1U)
#define STCU2_MB_CTRL_CSM(x)                     (((uint32_t)(((uint32_t)(x)) << STCU2_MB_CTRL_CSM_SHIFT)) & STCU2_MB_CTRL_CSM_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group STCU2_Register_Masks */


/*!
 * @}
 */ /* end of group STCU2_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- STM Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup STM_Peripheral_Access_Layer STM Peripheral Access Layer
 * @{
 */

/** STM - Size of Registers Arrays */
#define STM_CHANNEL_COUNT                         4u

/** STM - Register Layout Typedef */
typedef struct {
  __IO uint32_t CR;                                /**< Control, offset: 0x0 */
  __IO uint32_t CNT;                               /**< Count, offset: 0x4 */
  uint8_t RESERVED_0[8];
  struct {                                         /* offset: 0x10, array step: 0x10 */
    __IO uint32_t CCR;                               /**< Channel Control, array offset: 0x10, array step: 0x10 */
    __IO uint32_t CIR;                               /**< Channel Interrupt, array offset: 0x14, array step: 0x10 */
    __IO uint32_t CMP;                               /**< Channel Compare, array offset: 0x18, array step: 0x10 */
    uint8_t RESERVED_1[4];
  } CHANNEL[STM_CHANNEL_COUNT];
} STM_Type, *STM_MemMapPtr;

/** Number of instances of the STM module. */
#define STM_INSTANCE_COUNT                       (9u)

/* STM - Peripheral instance base addresses */
/** Peripheral STM_0 base address */
#define STM_0_BASE                               (0x4011C000u)
/** Peripheral STM_0 base pointer */
#define STM_0                                    ((STM_Type *)STM_0_BASE)
/** Peripheral STM_1 base address */
#define STM_1_BASE                               (0x40120000u)
/** Peripheral STM_1 base pointer */
#define STM_1                                    ((STM_Type *)STM_1_BASE)
/** Peripheral STM_2 base address */
#define STM_2_BASE                               (0x40124000u)
/** Peripheral STM_2 base pointer */
#define STM_2                                    ((STM_Type *)STM_2_BASE)
/** Peripheral STM_3 base address */
#define STM_3_BASE                               (0x40128000u)
/** Peripheral STM_3 base pointer */
#define STM_3                                    ((STM_Type *)STM_3_BASE)
/** Peripheral STM_4 base address */
#define STM_4_BASE                               (0x4021C000u)
/** Peripheral STM_4 base pointer */
#define STM_4                                    ((STM_Type *)STM_4_BASE)
/** Peripheral STM_5 base address */
#define STM_5_BASE                               (0x40220000u)
/** Peripheral STM_5 base pointer */
#define STM_5                                    ((STM_Type *)STM_5_BASE)
/** Peripheral STM_6 base address */
#define STM_6_BASE                               (0x40224000u)
/** Peripheral STM_6 base pointer */
#define STM_6                                    ((STM_Type *)STM_6_BASE)
/** Peripheral STM_7 base address */
#define STM_7_BASE                               (0x40228000u)
/** Peripheral STM_7 base pointer */
#define STM_7                                    ((STM_Type *)STM_7_BASE)
/** Peripheral STM_TS base address */
#define STM_TS_BASE                              (0x4400C000u)
/** Peripheral STM_TS base pointer */
#define STM_TS                                   ((STM_Type *)STM_TS_BASE)
/** Array initializer of STM peripheral base addresses */
#define STM_BASE_ADDRS                           { STM_0_BASE, STM_1_BASE, STM_2_BASE, STM_3_BASE, STM_4_BASE, STM_5_BASE, STM_6_BASE, STM_7_BASE, STM_TS_BASE }
/** Array initializer of STM peripheral base pointers */
#define STM_BASE_PTRS                            { STM_0, STM_1, STM_2, STM_3, STM_4, STM_5, STM_6, STM_7, STM_TS }
/** Interrupt vectors for the STM peripheral type */
#define STM_IRQS                                 {{ STM0_IRQn, STM0_IRQn, STM0_IRQn, STM0_IRQn }, \
                                                  { STM1_IRQn, STM1_IRQn, STM1_IRQn, STM1_IRQn }, \
                                                  { STM2_IRQn, STM2_IRQn, STM2_IRQn, STM2_IRQn }, \
                                                  { STM3_IRQn, STM3_IRQn, STM3_IRQn, STM3_IRQn }, \
                                                  { STM4_IRQn, STM4_IRQn, STM4_IRQn, STM4_IRQn }, \
                                                  { STM5_IRQn, STM5_IRQn, STM5_IRQn, STM5_IRQn }, \
                                                  { STM6_IRQn, STM6_IRQn, STM6_IRQn, STM6_IRQn }, \
                                                  { STM7_IRQn, STM7_IRQn, STM7_IRQn, STM7_IRQn }, \
                                                  { STM_TS_CH_REQ_IRQn, STM_TS_CH_REQ_IRQn, STM_TS_CH_REQ_IRQn, STM_TS_CH_REQ_IRQn }}

/* ----------------------------------------------------------------------------
   -- STM Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup STM_Register_Masks STM Register Masks
 * @{
 */

/*! @name CR - STM Control Register */
/*! @{ */
#define STM_CR_TEN_MASK                          (0x1U)
#define STM_CR_TEN_SHIFT                         (0U)
#define STM_CR_TEN_WIDTH                         (1U)
#define STM_CR_TEN(x)                            (((uint32_t)(((uint32_t)(x)) << STM_CR_TEN_SHIFT)) & STM_CR_TEN_MASK)
#define STM_CR_FRZ_MASK                          (0x2U)
#define STM_CR_FRZ_SHIFT                         (1U)
#define STM_CR_FRZ_WIDTH                         (1U)
#define STM_CR_FRZ(x)                            (((uint32_t)(((uint32_t)(x)) << STM_CR_FRZ_SHIFT)) & STM_CR_FRZ_MASK)
#define STM_CR_CPS_MASK                          (0xFF00U)
#define STM_CR_CPS_SHIFT                         (8U)
#define STM_CR_CPS_WIDTH                         (8U)
#define STM_CR_CPS(x)                            (((uint32_t)(((uint32_t)(x)) << STM_CR_CPS_SHIFT)) & STM_CR_CPS_MASK)
/*! @} */

/*! @name CNT - STM Count Register */
/*! @{ */
#define STM_CNT_CNT_MASK                         (0xFFFFFFFFU)
#define STM_CNT_CNT_SHIFT                        (0U)
#define STM_CNT_CNT_WIDTH                        (32U)
#define STM_CNT_CNT(x)                           (((uint32_t)(((uint32_t)(x)) << STM_CNT_CNT_SHIFT)) & STM_CNT_CNT_MASK)
/*! @} */

/*! @name CCR - STM Channel Control Register */
/*! @{ */
#define STM_CCR_CEN_MASK                         (0x1U)
#define STM_CCR_CEN_SHIFT                        (0U)
#define STM_CCR_CEN_WIDTH                        (1U)
#define STM_CCR_CEN(x)                           (((uint32_t)(((uint32_t)(x)) << STM_CCR_CEN_SHIFT)) & STM_CCR_CEN_MASK)
/*! @} */

/*! @name CIR - STM Channel Interrupt Register */
/*! @{ */
#define STM_CIR_CIF_MASK                         (0x1U)
#define STM_CIR_CIF_SHIFT                        (0U)
#define STM_CIR_CIF_WIDTH                        (1U)
#define STM_CIR_CIF(x)                           (((uint32_t)(((uint32_t)(x)) << STM_CIR_CIF_SHIFT)) & STM_CIR_CIF_MASK)
/*! @} */

/*! @name CMP - STM Channel Compare Register */
/*! @{ */
#define STM_CMP_CMP_MASK                         (0xFFFFFFFFU)
#define STM_CMP_CMP_SHIFT                        (0U)
#define STM_CMP_CMP_WIDTH                        (32U)
#define STM_CMP_CMP(x)                           (((uint32_t)(((uint32_t)(x)) << STM_CMP_CMP_SHIFT)) & STM_CMP_CMP_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group STM_Register_Masks */


/*!
 * @}
 */ /* end of group STM_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- SWT Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SWT_Peripheral_Access_Layer SWT Peripheral Access Layer
 * @{
 */

/** SWT - Register Layout Typedef */
typedef struct {
  __IO uint32_t CR;                                /**< Control, offset: 0x0 */
  __IO uint32_t IR;                                /**< Interrupt, offset: 0x4 */
  __IO uint32_t TO;                                /**< Timeout, offset: 0x8 */
  __IO uint32_t WN;                                /**< Window, offset: 0xC */
  __O  uint32_t SR;                                /**< Service, offset: 0x10 */
  __I  uint32_t CO;                                /**< Counter Output, offset: 0x14 */
  __IO uint32_t SK;                                /**< Service Key, offset: 0x18 */
  __IO uint32_t RRR;                               /**< Reset Request, offset: 0x1C */
} SWT_Type, *SWT_MemMapPtr;

/** Number of instances of the SWT module. */
#define SWT_INSTANCE_COUNT                       (7u)

/* SWT - Peripheral instance base addresses */
/** Peripheral SWT_0 base address */
#define SWT_0_BASE                               (0x40100000u)
/** Peripheral SWT_0 base pointer */
#define SWT_0                                    ((SWT_Type *)SWT_0_BASE)
/** Peripheral SWT_1 base address */
#define SWT_1_BASE                               (0x40104000u)
/** Peripheral SWT_1 base pointer */
#define SWT_1                                    ((SWT_Type *)SWT_1_BASE)
/** Peripheral SWT_2 base address */
#define SWT_2_BASE                               (0x40108000u)
/** Peripheral SWT_2 base pointer */
#define SWT_2                                    ((SWT_Type *)SWT_2_BASE)
/** Peripheral SWT_3 base address */
#define SWT_3_BASE                               (0x4010C000u)
/** Peripheral SWT_3 base pointer */
#define SWT_3                                    ((SWT_Type *)SWT_3_BASE)
/** Peripheral SWT_4 base address */
#define SWT_4_BASE                               (0x40200000u)
/** Peripheral SWT_4 base pointer */
#define SWT_4                                    ((SWT_Type *)SWT_4_BASE)
/** Peripheral SWT_5 base address */
#define SWT_5_BASE                               (0x40204000u)
/** Peripheral SWT_5 base pointer */
#define SWT_5                                    ((SWT_Type *)SWT_5_BASE)
/** Peripheral SWT_6 base address */
#define SWT_6_BASE                               (0x40208000u)
/** Peripheral SWT_6 base pointer */
#define SWT_6                                    ((SWT_Type *)SWT_6_BASE)
/** Array initializer of SWT peripheral base addresses */
#define SWT_BASE_ADDRS                           { SWT_0_BASE, SWT_1_BASE, SWT_2_BASE, SWT_3_BASE, SWT_4_BASE, SWT_5_BASE, SWT_6_BASE }
/** Array initializer of SWT peripheral base pointers */
#define SWT_BASE_PTRS                            { SWT_0, SWT_1, SWT_2, SWT_3, SWT_4, SWT_5, SWT_6 }
/** Array of SWT IRQ ids */
#define SWT_IRQS                                 { SWT0_IRQn, SWT1_IRQn, SWT2_IRQn, SWT3_IRQn, SWT4_IRQn, SWT5_IRQn, SWT6_IRQn }

/* ----------------------------------------------------------------------------
   -- SWT Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SWT_Register_Masks SWT Register Masks
 * @{
 */

/*! @name CR - Control */
/*! @{ */
#define SWT_CR_WEN_MASK                          (0x1U)
#define SWT_CR_WEN_SHIFT                         (0U)
#define SWT_CR_WEN_WIDTH                         (1U)
#define SWT_CR_WEN(x)                            (((uint32_t)(((uint32_t)(x)) << SWT_CR_WEN_SHIFT)) & SWT_CR_WEN_MASK)
#define SWT_CR_FRZ_MASK                          (0x2U)
#define SWT_CR_FRZ_SHIFT                         (1U)
#define SWT_CR_FRZ_WIDTH                         (1U)
#define SWT_CR_FRZ(x)                            (((uint32_t)(((uint32_t)(x)) << SWT_CR_FRZ_SHIFT)) & SWT_CR_FRZ_MASK)
#define SWT_CR_STP_MASK                          (0x4U)
#define SWT_CR_STP_SHIFT                         (2U)
#define SWT_CR_STP_WIDTH                         (1U)
#define SWT_CR_STP(x)                            (((uint32_t)(((uint32_t)(x)) << SWT_CR_STP_SHIFT)) & SWT_CR_STP_MASK)
#define SWT_CR_SLK_MASK                          (0x10U)
#define SWT_CR_SLK_SHIFT                         (4U)
#define SWT_CR_SLK_WIDTH                         (1U)
#define SWT_CR_SLK(x)                            (((uint32_t)(((uint32_t)(x)) << SWT_CR_SLK_SHIFT)) & SWT_CR_SLK_MASK)
#define SWT_CR_HLK_MASK                          (0x20U)
#define SWT_CR_HLK_SHIFT                         (5U)
#define SWT_CR_HLK_WIDTH                         (1U)
#define SWT_CR_HLK(x)                            (((uint32_t)(((uint32_t)(x)) << SWT_CR_HLK_SHIFT)) & SWT_CR_HLK_MASK)
#define SWT_CR_ITR_MASK                          (0x40U)
#define SWT_CR_ITR_SHIFT                         (6U)
#define SWT_CR_ITR_WIDTH                         (1U)
#define SWT_CR_ITR(x)                            (((uint32_t)(((uint32_t)(x)) << SWT_CR_ITR_SHIFT)) & SWT_CR_ITR_MASK)
#define SWT_CR_WND_MASK                          (0x80U)
#define SWT_CR_WND_SHIFT                         (7U)
#define SWT_CR_WND_WIDTH                         (1U)
#define SWT_CR_WND(x)                            (((uint32_t)(((uint32_t)(x)) << SWT_CR_WND_SHIFT)) & SWT_CR_WND_MASK)
#define SWT_CR_RIA_MASK                          (0x100U)
#define SWT_CR_RIA_SHIFT                         (8U)
#define SWT_CR_RIA_WIDTH                         (1U)
#define SWT_CR_RIA(x)                            (((uint32_t)(((uint32_t)(x)) << SWT_CR_RIA_SHIFT)) & SWT_CR_RIA_MASK)
#define SWT_CR_SMD_MASK                          (0x600U)
#define SWT_CR_SMD_SHIFT                         (9U)
#define SWT_CR_SMD_WIDTH                         (2U)
#define SWT_CR_SMD(x)                            (((uint32_t)(((uint32_t)(x)) << SWT_CR_SMD_SHIFT)) & SWT_CR_SMD_MASK)
#define SWT_CR_MAP7_MASK                         (0x1000000U)
#define SWT_CR_MAP7_SHIFT                        (24U)
#define SWT_CR_MAP7_WIDTH                        (1U)
#define SWT_CR_MAP7(x)                           (((uint32_t)(((uint32_t)(x)) << SWT_CR_MAP7_SHIFT)) & SWT_CR_MAP7_MASK)
#define SWT_CR_MAP6_MASK                         (0x2000000U)
#define SWT_CR_MAP6_SHIFT                        (25U)
#define SWT_CR_MAP6_WIDTH                        (1U)
#define SWT_CR_MAP6(x)                           (((uint32_t)(((uint32_t)(x)) << SWT_CR_MAP6_SHIFT)) & SWT_CR_MAP6_MASK)
#define SWT_CR_MAP5_MASK                         (0x4000000U)
#define SWT_CR_MAP5_SHIFT                        (26U)
#define SWT_CR_MAP5_WIDTH                        (1U)
#define SWT_CR_MAP5(x)                           (((uint32_t)(((uint32_t)(x)) << SWT_CR_MAP5_SHIFT)) & SWT_CR_MAP5_MASK)
#define SWT_CR_MAP4_MASK                         (0x8000000U)
#define SWT_CR_MAP4_SHIFT                        (27U)
#define SWT_CR_MAP4_WIDTH                        (1U)
#define SWT_CR_MAP4(x)                           (((uint32_t)(((uint32_t)(x)) << SWT_CR_MAP4_SHIFT)) & SWT_CR_MAP4_MASK)
#define SWT_CR_MAP3_MASK                         (0x10000000U)
#define SWT_CR_MAP3_SHIFT                        (28U)
#define SWT_CR_MAP3_WIDTH                        (1U)
#define SWT_CR_MAP3(x)                           (((uint32_t)(((uint32_t)(x)) << SWT_CR_MAP3_SHIFT)) & SWT_CR_MAP3_MASK)
#define SWT_CR_MAP2_MASK                         (0x20000000U)
#define SWT_CR_MAP2_SHIFT                        (29U)
#define SWT_CR_MAP2_WIDTH                        (1U)
#define SWT_CR_MAP2(x)                           (((uint32_t)(((uint32_t)(x)) << SWT_CR_MAP2_SHIFT)) & SWT_CR_MAP2_MASK)
#define SWT_CR_MAP1_MASK                         (0x40000000U)
#define SWT_CR_MAP1_SHIFT                        (30U)
#define SWT_CR_MAP1_WIDTH                        (1U)
#define SWT_CR_MAP1(x)                           (((uint32_t)(((uint32_t)(x)) << SWT_CR_MAP1_SHIFT)) & SWT_CR_MAP1_MASK)
#define SWT_CR_MAP0_MASK                         (0x80000000U)
#define SWT_CR_MAP0_SHIFT                        (31U)
#define SWT_CR_MAP0_WIDTH                        (1U)
#define SWT_CR_MAP0(x)                           (((uint32_t)(((uint32_t)(x)) << SWT_CR_MAP0_SHIFT)) & SWT_CR_MAP0_MASK)
/*! @} */

/*! @name IR - Interrupt */
/*! @{ */
#define SWT_IR_TIF_MASK                          (0x1U)
#define SWT_IR_TIF_SHIFT                         (0U)
#define SWT_IR_TIF_WIDTH                         (1U)
#define SWT_IR_TIF(x)                            (((uint32_t)(((uint32_t)(x)) << SWT_IR_TIF_SHIFT)) & SWT_IR_TIF_MASK)
/*! @} */

/*! @name TO - Timeout */
/*! @{ */
#define SWT_TO_WTO_MASK                          (0xFFFFFFFFU)
#define SWT_TO_WTO_SHIFT                         (0U)
#define SWT_TO_WTO_WIDTH                         (32U)
#define SWT_TO_WTO(x)                            (((uint32_t)(((uint32_t)(x)) << SWT_TO_WTO_SHIFT)) & SWT_TO_WTO_MASK)
/*! @} */

/*! @name WN - Window */
/*! @{ */
#define SWT_WN_WST_MASK                          (0xFFFFFFFFU)
#define SWT_WN_WST_SHIFT                         (0U)
#define SWT_WN_WST_WIDTH                         (32U)
#define SWT_WN_WST(x)                            (((uint32_t)(((uint32_t)(x)) << SWT_WN_WST_SHIFT)) & SWT_WN_WST_MASK)
/*! @} */

/*! @name SR - Service */
/*! @{ */
#define SWT_SR_WSC_MASK                          (0xFFFFU)
#define SWT_SR_WSC_SHIFT                         (0U)
#define SWT_SR_WSC_WIDTH                         (16U)
#define SWT_SR_WSC(x)                            (((uint32_t)(((uint32_t)(x)) << SWT_SR_WSC_SHIFT)) & SWT_SR_WSC_MASK)
/*! @} */

/*! @name CO - Counter Output */
/*! @{ */
#define SWT_CO_CNT_MASK                          (0xFFFFFFFFU)
#define SWT_CO_CNT_SHIFT                         (0U)
#define SWT_CO_CNT_WIDTH                         (32U)
#define SWT_CO_CNT(x)                            (((uint32_t)(((uint32_t)(x)) << SWT_CO_CNT_SHIFT)) & SWT_CO_CNT_MASK)
/*! @} */

/*! @name SK - Service Key */
/*! @{ */
#define SWT_SK_SK_MASK                           (0xFFFFU)
#define SWT_SK_SK_SHIFT                          (0U)
#define SWT_SK_SK_WIDTH                          (16U)
#define SWT_SK_SK(x)                             (((uint32_t)(((uint32_t)(x)) << SWT_SK_SK_SHIFT)) & SWT_SK_SK_MASK)
/*! @} */

/*! @name RRR - Reset Request */
/*! @{ */
#define SWT_RRR_RRF_MASK                         (0x1U)
#define SWT_RRR_RRF_SHIFT                        (0U)
#define SWT_RRR_RRF_WIDTH                        (1U)
#define SWT_RRR_RRF(x)                           (((uint32_t)(((uint32_t)(x)) << SWT_RRR_RRF_SHIFT)) & SWT_RRR_RRF_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group SWT_Register_Masks */


/*!
 * @}
 */ /* end of group SWT_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- SerDes_1_GPR Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SerDes_1_GPR_Peripheral_Access_Layer SerDes_1_GPR Peripheral Access Layer
 * @{
 */

/** SerDes_1_GPR - Register Layout Typedef */
typedef struct {
  __IO uint32_t PCIE_CONFIG_0;                     /**< Config_0_Register, offset: 0x0 */
} SerDes_1_GPR_Type, *SerDes_1_GPR_MemMapPtr;

/** Number of instances of the SerDes_1_GPR module. */
#define SerDes_1_GPR_INSTANCE_COUNT              (1u)

/* SerDes_1_GPR - Peripheral instance base addresses */
/** Peripheral SERDES_1_GPR base address */
#define SERDES_1_GPR_BASE                        (0x4007CC00u)
/** Peripheral SERDES_1_GPR base pointer */
#define SERDES_1_GPR                             ((SerDes_1_GPR_Type *)SERDES_1_GPR_BASE)
/** Array initializer of SerDes_1_GPR peripheral base addresses */
#define SerDes_1_GPR_BASE_ADDRS                  { SERDES_1_GPR_BASE }
/** Array initializer of SerDes_1_GPR peripheral base pointers */
#define SerDes_1_GPR_BASE_PTRS                   { SERDES_1_GPR }

/* ----------------------------------------------------------------------------
   -- SerDes_1_GPR Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SerDes_1_GPR_Register_Masks SerDes_1_GPR Register Masks
 * @{
 */

/*! @name PCIE_CONFIG_0 - Config_0_Register */
/*! @{ */
#define SerDes_1_GPR_PCIE_CONFIG_0_parity_chk_mstr_araddrp_err_MASK (0x1U)
#define SerDes_1_GPR_PCIE_CONFIG_0_parity_chk_mstr_araddrp_err_SHIFT (0U)
#define SerDes_1_GPR_PCIE_CONFIG_0_parity_chk_mstr_araddrp_err_WIDTH (1U)
#define SerDes_1_GPR_PCIE_CONFIG_0_parity_chk_mstr_araddrp_err(x) (((uint32_t)(((uint32_t)(x)) << SerDes_1_GPR_PCIE_CONFIG_0_parity_chk_mstr_araddrp_err_SHIFT)) & SerDes_1_GPR_PCIE_CONFIG_0_parity_chk_mstr_araddrp_err_MASK)
#define SerDes_1_GPR_PCIE_CONFIG_0_parity_chk_mstr_awaddrp_err_MASK (0x2U)
#define SerDes_1_GPR_PCIE_CONFIG_0_parity_chk_mstr_awaddrp_err_SHIFT (1U)
#define SerDes_1_GPR_PCIE_CONFIG_0_parity_chk_mstr_awaddrp_err_WIDTH (1U)
#define SerDes_1_GPR_PCIE_CONFIG_0_parity_chk_mstr_awaddrp_err(x) (((uint32_t)(((uint32_t)(x)) << SerDes_1_GPR_PCIE_CONFIG_0_parity_chk_mstr_awaddrp_err_SHIFT)) & SerDes_1_GPR_PCIE_CONFIG_0_parity_chk_mstr_awaddrp_err_MASK)
#define SerDes_1_GPR_PCIE_CONFIG_0_parity_chk_mstr_wdatap_err_MASK (0x4U)
#define SerDes_1_GPR_PCIE_CONFIG_0_parity_chk_mstr_wdatap_err_SHIFT (2U)
#define SerDes_1_GPR_PCIE_CONFIG_0_parity_chk_mstr_wdatap_err_WIDTH (1U)
#define SerDes_1_GPR_PCIE_CONFIG_0_parity_chk_mstr_wdatap_err(x) (((uint32_t)(((uint32_t)(x)) << SerDes_1_GPR_PCIE_CONFIG_0_parity_chk_mstr_wdatap_err_SHIFT)) & SerDes_1_GPR_PCIE_CONFIG_0_parity_chk_mstr_wdatap_err_MASK)
#define SerDes_1_GPR_PCIE_CONFIG_0_parity_chk_slv_rdatap_err_MASK (0x8U)
#define SerDes_1_GPR_PCIE_CONFIG_0_parity_chk_slv_rdatap_err_SHIFT (3U)
#define SerDes_1_GPR_PCIE_CONFIG_0_parity_chk_slv_rdatap_err_WIDTH (1U)
#define SerDes_1_GPR_PCIE_CONFIG_0_parity_chk_slv_rdatap_err(x) (((uint32_t)(((uint32_t)(x)) << SerDes_1_GPR_PCIE_CONFIG_0_parity_chk_slv_rdatap_err_SHIFT)) & SerDes_1_GPR_PCIE_CONFIG_0_parity_chk_slv_rdatap_err_MASK)
#define SerDes_1_GPR_PCIE_CONFIG_0_RESERVED_MASK (0xFFFFFFF0U)
#define SerDes_1_GPR_PCIE_CONFIG_0_RESERVED_SHIFT (4U)
#define SerDes_1_GPR_PCIE_CONFIG_0_RESERVED_WIDTH (28U)
#define SerDes_1_GPR_PCIE_CONFIG_0_RESERVED(x)   (((uint32_t)(((uint32_t)(x)) << SerDes_1_GPR_PCIE_CONFIG_0_RESERVED_SHIFT)) & SerDes_1_GPR_PCIE_CONFIG_0_RESERVED_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group SerDes_1_GPR_Register_Masks */


/*!
 * @}
 */ /* end of group SerDes_1_GPR_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- TMU Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup TMU_Peripheral_Access_Layer TMU Peripheral Access Layer
 * @{
 */

/** TMU - Size of Registers Arrays */
#define TMU_TRITRATSR_COUNT                       3u
#define TMU_NUM_SITE_RC_COUNT                     16u

/** TMU - Register Layout Typedef */
typedef struct {
  __IO uint32_t TMR;                               /**< Mode, offset: 0x0 */
  __IO uint32_t TSR;                               /**< Status, offset: 0x4 */
  __IO uint32_t TMSR;                              /**< Monitor Site, offset: 0x8 */
  __IO uint32_t TMTMIR;                            /**< Monitor Temperature Measurement Interval, offset: 0xC */
  uint8_t RESERVED_0[16];
  __IO uint32_t TIER;                              /**< Interrupt Enable, offset: 0x20 */
  __IO uint32_t TIDR;                              /**< Interrupt Detect, offset: 0x24 */
  uint8_t RESERVED_1[8];
  __IO uint32_t TIISCR;                            /**< Interrupt Immediate Site Capture, offset: 0x30 */
  __IO uint32_t TIASCR;                            /**< Interrupt Average Site Capture, offset: 0x34 */
  __IO uint32_t TICSCR;                            /**< Interrupt Critical Site Capture, offset: 0x38 */
  uint8_t RESERVED_2[4];
  __IO uint32_t TMHTCR;                            /**< Monitor High Temperature Capture, offset: 0x40 */
  __IO uint32_t TMLTCR;                            /**< Monitor Low Temperature Capture, offset: 0x44 */
  __IO uint32_t TMRTRCR;                           /**< Monitor Rising Temperature Rate Capture, offset: 0x48 */
  __IO uint32_t TMFTRCR;                           /**< Monitor Falling Temperature Rate Capture, offset: 0x4C */
  __IO uint32_t TMHTITR;                           /**< Monitor High Temperature Immediate Threshold, offset: 0x50 */
  __IO uint32_t TMHTATR;                           /**< Monitor High Temperature Average Threshold, offset: 0x54 */
  __IO uint32_t TMHTACTR;                          /**< Monitor High Temperature Average Critical Threshold, offset: 0x58 */
  uint8_t RESERVED_3[4];
  __IO uint32_t TMLTITR;                           /**< Monitor Low Temperature Immediate Threshold, offset: 0x60 */
  __IO uint32_t TMLTATR;                           /**< Monitor Low Temperature Average Threshold, offset: 0x64 */
  __IO uint32_t TMLTACTR;                          /**< Monitor Low Temperature Average Critical Threshold, offset: 0x68 */
  uint8_t RESERVED_4[4];
  __IO uint32_t TMRTRCTR;                          /**< Monitor Rising Temperature Rate Critical Threshold, offset: 0x70 */
  __IO uint32_t TMFTRCTR;                          /**< Monitor Falling Temperature Rate Critical Threshold, offset: 0x74 */
  uint8_t RESERVED_5[8];
  __IO uint32_t TTCFGR;                            /**< Temperature Configuration, offset: 0x80 */
  __IO uint32_t TSCFGR;                            /**< Sensor Configuration, offset: 0x84 */
  uint8_t RESERVED_6[120];
  struct {                                         /* offset: 0x100, array step: 0x10 */
    __I  uint32_t TRITSR;                            /**< Report Immediate Temperature at Site, array offset: 0x100, array step: 0x10 */
    __I  uint32_t TRATSR;                            /**< Report Average Temperature at Site, array offset: 0x104, array step: 0x10 */
    uint8_t RESERVED_0[8];
  } TRITRATSR[TMU_TRITRATSR_COUNT];
  uint8_t RESERVED_7[3536];
  __IO uint32_t TCMCFG;                            /**< Central Module Configuration, offset: 0xF00 */
  uint8_t RESERVED_8[12];
  __IO uint32_t TTRCR[TMU_NUM_SITE_RC_COUNT];      /**< Temperature Range Control 0..Temperature Range Control 15, array offset: 0xF10, array step: 0x4 */
} TMU_Type, *TMU_MemMapPtr;

/** Number of instances of the TMU module. */
#define TMU_INSTANCE_COUNT                       (1u)

/* TMU - Peripheral instance base addresses */
/** Peripheral TMU base address */
#define TMU_BASE                                 (0x400A8000u)
/** Peripheral TMU base pointer */
#define TMU                                      ((TMU_Type *)TMU_BASE)
/** Array initializer of TMU peripheral base addresses */
#define TMU_BASE_ADDRS                           { TMU_BASE }
/** Array initializer of TMU peripheral base pointers */
#define TMU_BASE_PTRS                            { TMU }

/* ----------------------------------------------------------------------------
   -- TMU Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup TMU_Register_Masks TMU Register Masks
 * @{
 */

/*! @name TMR - Mode */
/*! @{ */
#define TMU_TMR_ALPF_MASK                        (0x3000000U)
#define TMU_TMR_ALPF_SHIFT                       (24U)
#define TMU_TMR_ALPF_WIDTH                       (2U)
#define TMU_TMR_ALPF(x)                          (((uint32_t)(((uint32_t)(x)) << TMU_TMR_ALPF_SHIFT)) & TMU_TMR_ALPF_MASK)
#define TMU_TMR_CMD_MASK                         (0x20000000U)
#define TMU_TMR_CMD_SHIFT                        (29U)
#define TMU_TMR_CMD_WIDTH                        (1U)
#define TMU_TMR_CMD(x)                           (((uint32_t)(((uint32_t)(x)) << TMU_TMR_CMD_SHIFT)) & TMU_TMR_CMD_MASK)
#define TMU_TMR_MODE_MASK                        (0xC0000000U)
#define TMU_TMR_MODE_SHIFT                       (30U)
#define TMU_TMR_MODE_WIDTH                       (2U)
#define TMU_TMR_MODE(x)                          (((uint32_t)(((uint32_t)(x)) << TMU_TMR_MODE_SHIFT)) & TMU_TMR_MODE_MASK)
/*! @} */

/*! @name TSR - Status */
/*! @{ */
#define TMU_TSR_ORH_MASK                         (0x10000000U)
#define TMU_TSR_ORH_SHIFT                        (28U)
#define TMU_TSR_ORH_WIDTH                        (1U)
#define TMU_TSR_ORH(x)                           (((uint32_t)(((uint32_t)(x)) << TMU_TSR_ORH_SHIFT)) & TMU_TSR_ORH_MASK)
#define TMU_TSR_ORL_MASK                         (0x20000000U)
#define TMU_TSR_ORL_SHIFT                        (29U)
#define TMU_TSR_ORL_WIDTH                        (1U)
#define TMU_TSR_ORL(x)                           (((uint32_t)(((uint32_t)(x)) << TMU_TSR_ORL_SHIFT)) & TMU_TSR_ORL_MASK)
#define TMU_TSR_MIE_MASK                         (0x40000000U)
#define TMU_TSR_MIE_SHIFT                        (30U)
#define TMU_TSR_MIE_WIDTH                        (1U)
#define TMU_TSR_MIE(x)                           (((uint32_t)(((uint32_t)(x)) << TMU_TSR_MIE_SHIFT)) & TMU_TSR_MIE_MASK)
/*! @} */

/*! @name TMSR - Monitor Site */
/*! @{ */
#define TMU_TMSR_SITE_MASK                       (0x7U)
#define TMU_TMSR_SITE_SHIFT                      (0U)
#define TMU_TMSR_SITE_WIDTH                      (3U)
#define TMU_TMSR_SITE(x)                         (((uint32_t)(((uint32_t)(x)) << TMU_TMSR_SITE_SHIFT)) & TMU_TMSR_SITE_MASK)
/*! @} */

/*! @name TMTMIR - Monitor Temperature Measurement Interval */
/*! @{ */
#define TMU_TMTMIR_TMI_MASK                      (0xFU)
#define TMU_TMTMIR_TMI_SHIFT                     (0U)
#define TMU_TMTMIR_TMI_WIDTH                     (4U)
#define TMU_TMTMIR_TMI(x)                        (((uint32_t)(((uint32_t)(x)) << TMU_TMTMIR_TMI_SHIFT)) & TMU_TMTMIR_TMI_MASK)
/*! @} */

/*! @name TIER - Interrupt Enable */
/*! @{ */
#define TMU_TIER_FTRCTIE_MASK                    (0x1000000U)
#define TMU_TIER_FTRCTIE_SHIFT                   (24U)
#define TMU_TIER_FTRCTIE_WIDTH                   (1U)
#define TMU_TIER_FTRCTIE(x)                      (((uint32_t)(((uint32_t)(x)) << TMU_TIER_FTRCTIE_SHIFT)) & TMU_TIER_FTRCTIE_MASK)
#define TMU_TIER_RTRCTIE_MASK                    (0x2000000U)
#define TMU_TIER_RTRCTIE_SHIFT                   (25U)
#define TMU_TIER_RTRCTIE_WIDTH                   (1U)
#define TMU_TIER_RTRCTIE(x)                      (((uint32_t)(((uint32_t)(x)) << TMU_TIER_RTRCTIE_SHIFT)) & TMU_TIER_RTRCTIE_MASK)
#define TMU_TIER_ALTCTIE_MASK                    (0x4000000U)
#define TMU_TIER_ALTCTIE_SHIFT                   (26U)
#define TMU_TIER_ALTCTIE_WIDTH                   (1U)
#define TMU_TIER_ALTCTIE(x)                      (((uint32_t)(((uint32_t)(x)) << TMU_TIER_ALTCTIE_SHIFT)) & TMU_TIER_ALTCTIE_MASK)
#define TMU_TIER_ALTTIE_MASK                     (0x8000000U)
#define TMU_TIER_ALTTIE_SHIFT                    (27U)
#define TMU_TIER_ALTTIE_WIDTH                    (1U)
#define TMU_TIER_ALTTIE(x)                       (((uint32_t)(((uint32_t)(x)) << TMU_TIER_ALTTIE_SHIFT)) & TMU_TIER_ALTTIE_MASK)
#define TMU_TIER_ILTTIE_MASK                     (0x10000000U)
#define TMU_TIER_ILTTIE_SHIFT                    (28U)
#define TMU_TIER_ILTTIE_WIDTH                    (1U)
#define TMU_TIER_ILTTIE(x)                       (((uint32_t)(((uint32_t)(x)) << TMU_TIER_ILTTIE_SHIFT)) & TMU_TIER_ILTTIE_MASK)
#define TMU_TIER_AHTCTIE_MASK                    (0x20000000U)
#define TMU_TIER_AHTCTIE_SHIFT                   (29U)
#define TMU_TIER_AHTCTIE_WIDTH                   (1U)
#define TMU_TIER_AHTCTIE(x)                      (((uint32_t)(((uint32_t)(x)) << TMU_TIER_AHTCTIE_SHIFT)) & TMU_TIER_AHTCTIE_MASK)
#define TMU_TIER_AHTTIE_MASK                     (0x40000000U)
#define TMU_TIER_AHTTIE_SHIFT                    (30U)
#define TMU_TIER_AHTTIE_WIDTH                    (1U)
#define TMU_TIER_AHTTIE(x)                       (((uint32_t)(((uint32_t)(x)) << TMU_TIER_AHTTIE_SHIFT)) & TMU_TIER_AHTTIE_MASK)
#define TMU_TIER_IHTTIE_MASK                     (0x80000000U)
#define TMU_TIER_IHTTIE_SHIFT                    (31U)
#define TMU_TIER_IHTTIE_WIDTH                    (1U)
#define TMU_TIER_IHTTIE(x)                       (((uint32_t)(((uint32_t)(x)) << TMU_TIER_IHTTIE_SHIFT)) & TMU_TIER_IHTTIE_MASK)
/*! @} */

/*! @name TIDR - Interrupt Detect */
/*! @{ */
#define TMU_TIDR_FTRCT_MASK                      (0x1000000U)
#define TMU_TIDR_FTRCT_SHIFT                     (24U)
#define TMU_TIDR_FTRCT_WIDTH                     (1U)
#define TMU_TIDR_FTRCT(x)                        (((uint32_t)(((uint32_t)(x)) << TMU_TIDR_FTRCT_SHIFT)) & TMU_TIDR_FTRCT_MASK)
#define TMU_TIDR_RTRCT_MASK                      (0x2000000U)
#define TMU_TIDR_RTRCT_SHIFT                     (25U)
#define TMU_TIDR_RTRCT_WIDTH                     (1U)
#define TMU_TIDR_RTRCT(x)                        (((uint32_t)(((uint32_t)(x)) << TMU_TIDR_RTRCT_SHIFT)) & TMU_TIDR_RTRCT_MASK)
#define TMU_TIDR_ALTCT_MASK                      (0x4000000U)
#define TMU_TIDR_ALTCT_SHIFT                     (26U)
#define TMU_TIDR_ALTCT_WIDTH                     (1U)
#define TMU_TIDR_ALTCT(x)                        (((uint32_t)(((uint32_t)(x)) << TMU_TIDR_ALTCT_SHIFT)) & TMU_TIDR_ALTCT_MASK)
#define TMU_TIDR_ALTT_MASK                       (0x8000000U)
#define TMU_TIDR_ALTT_SHIFT                      (27U)
#define TMU_TIDR_ALTT_WIDTH                      (1U)
#define TMU_TIDR_ALTT(x)                         (((uint32_t)(((uint32_t)(x)) << TMU_TIDR_ALTT_SHIFT)) & TMU_TIDR_ALTT_MASK)
#define TMU_TIDR_ILTT_MASK                       (0x10000000U)
#define TMU_TIDR_ILTT_SHIFT                      (28U)
#define TMU_TIDR_ILTT_WIDTH                      (1U)
#define TMU_TIDR_ILTT(x)                         (((uint32_t)(((uint32_t)(x)) << TMU_TIDR_ILTT_SHIFT)) & TMU_TIDR_ILTT_MASK)
#define TMU_TIDR_AHTCT_MASK                      (0x20000000U)
#define TMU_TIDR_AHTCT_SHIFT                     (29U)
#define TMU_TIDR_AHTCT_WIDTH                     (1U)
#define TMU_TIDR_AHTCT(x)                        (((uint32_t)(((uint32_t)(x)) << TMU_TIDR_AHTCT_SHIFT)) & TMU_TIDR_AHTCT_MASK)
#define TMU_TIDR_AHTT_MASK                       (0x40000000U)
#define TMU_TIDR_AHTT_SHIFT                      (30U)
#define TMU_TIDR_AHTT_WIDTH                      (1U)
#define TMU_TIDR_AHTT(x)                         (((uint32_t)(((uint32_t)(x)) << TMU_TIDR_AHTT_SHIFT)) & TMU_TIDR_AHTT_MASK)
#define TMU_TIDR_IHTT_MASK                       (0x80000000U)
#define TMU_TIDR_IHTT_SHIFT                      (31U)
#define TMU_TIDR_IHTT_WIDTH                      (1U)
#define TMU_TIDR_IHTT(x)                         (((uint32_t)(((uint32_t)(x)) << TMU_TIDR_IHTT_SHIFT)) & TMU_TIDR_IHTT_MASK)
/*! @} */

/*! @name TIISCR - Interrupt Immediate Site Capture */
/*! @{ */
#define TMU_TIISCR_SITE_MASK                     (0x7U)
#define TMU_TIISCR_SITE_SHIFT                    (0U)
#define TMU_TIISCR_SITE_WIDTH                    (3U)
#define TMU_TIISCR_SITE(x)                       (((uint32_t)(((uint32_t)(x)) << TMU_TIISCR_SITE_SHIFT)) & TMU_TIISCR_SITE_MASK)
/*! @} */

/*! @name TIASCR - Interrupt Average Site Capture */
/*! @{ */
#define TMU_TIASCR_SITE_MASK                     (0x7U)
#define TMU_TIASCR_SITE_SHIFT                    (0U)
#define TMU_TIASCR_SITE_WIDTH                    (3U)
#define TMU_TIASCR_SITE(x)                       (((uint32_t)(((uint32_t)(x)) << TMU_TIASCR_SITE_SHIFT)) & TMU_TIASCR_SITE_MASK)
/*! @} */

/*! @name TICSCR - Interrupt Critical Site Capture */
/*! @{ */
#define TMU_TICSCR_SITE_MASK                     (0x7U)
#define TMU_TICSCR_SITE_SHIFT                    (0U)
#define TMU_TICSCR_SITE_WIDTH                    (3U)
#define TMU_TICSCR_SITE(x)                       (((uint32_t)(((uint32_t)(x)) << TMU_TICSCR_SITE_SHIFT)) & TMU_TICSCR_SITE_MASK)
/*! @} */

/*! @name TMHTCR - Monitor High Temperature Capture */
/*! @{ */
#define TMU_TMHTCR_TEMP_MASK                     (0x1FFU)
#define TMU_TMHTCR_TEMP_SHIFT                    (0U)
#define TMU_TMHTCR_TEMP_WIDTH                    (9U)
#define TMU_TMHTCR_TEMP(x)                       (((uint32_t)(((uint32_t)(x)) << TMU_TMHTCR_TEMP_SHIFT)) & TMU_TMHTCR_TEMP_MASK)
#define TMU_TMHTCR_TP5_MASK                      (0x200U)
#define TMU_TMHTCR_TP5_SHIFT                     (9U)
#define TMU_TMHTCR_TP5_WIDTH                     (1U)
#define TMU_TMHTCR_TP5(x)                        (((uint32_t)(((uint32_t)(x)) << TMU_TMHTCR_TP5_SHIFT)) & TMU_TMHTCR_TP5_MASK)
#define TMU_TMHTCR_V_MASK                        (0x80000000U)
#define TMU_TMHTCR_V_SHIFT                       (31U)
#define TMU_TMHTCR_V_WIDTH                       (1U)
#define TMU_TMHTCR_V(x)                          (((uint32_t)(((uint32_t)(x)) << TMU_TMHTCR_V_SHIFT)) & TMU_TMHTCR_V_MASK)
/*! @} */

/*! @name TMLTCR - Monitor Low Temperature Capture */
/*! @{ */
#define TMU_TMLTCR_TEMP_MASK                     (0x1FFU)
#define TMU_TMLTCR_TEMP_SHIFT                    (0U)
#define TMU_TMLTCR_TEMP_WIDTH                    (9U)
#define TMU_TMLTCR_TEMP(x)                       (((uint32_t)(((uint32_t)(x)) << TMU_TMLTCR_TEMP_SHIFT)) & TMU_TMLTCR_TEMP_MASK)
#define TMU_TMLTCR_TP5_MASK                      (0x200U)
#define TMU_TMLTCR_TP5_SHIFT                     (9U)
#define TMU_TMLTCR_TP5_WIDTH                     (1U)
#define TMU_TMLTCR_TP5(x)                        (((uint32_t)(((uint32_t)(x)) << TMU_TMLTCR_TP5_SHIFT)) & TMU_TMLTCR_TP5_MASK)
#define TMU_TMLTCR_V_MASK                        (0x80000000U)
#define TMU_TMLTCR_V_SHIFT                       (31U)
#define TMU_TMLTCR_V_WIDTH                       (1U)
#define TMU_TMLTCR_V(x)                          (((uint32_t)(((uint32_t)(x)) << TMU_TMLTCR_V_SHIFT)) & TMU_TMLTCR_V_MASK)
/*! @} */

/*! @name TMRTRCR - Monitor Rising Temperature Rate Capture */
/*! @{ */
#define TMU_TMRTRCR_TEMP_MASK                    (0xFFU)
#define TMU_TMRTRCR_TEMP_SHIFT                   (0U)
#define TMU_TMRTRCR_TEMP_WIDTH                   (8U)
#define TMU_TMRTRCR_TEMP(x)                      (((uint32_t)(((uint32_t)(x)) << TMU_TMRTRCR_TEMP_SHIFT)) & TMU_TMRTRCR_TEMP_MASK)
#define TMU_TMRTRCR_V_MASK                       (0x80000000U)
#define TMU_TMRTRCR_V_SHIFT                      (31U)
#define TMU_TMRTRCR_V_WIDTH                      (1U)
#define TMU_TMRTRCR_V(x)                         (((uint32_t)(((uint32_t)(x)) << TMU_TMRTRCR_V_SHIFT)) & TMU_TMRTRCR_V_MASK)
/*! @} */

/*! @name TMFTRCR - Monitor Falling Temperature Rate Capture */
/*! @{ */
#define TMU_TMFTRCR_TEMP_MASK                    (0xFFU)
#define TMU_TMFTRCR_TEMP_SHIFT                   (0U)
#define TMU_TMFTRCR_TEMP_WIDTH                   (8U)
#define TMU_TMFTRCR_TEMP(x)                      (((uint32_t)(((uint32_t)(x)) << TMU_TMFTRCR_TEMP_SHIFT)) & TMU_TMFTRCR_TEMP_MASK)
#define TMU_TMFTRCR_V_MASK                       (0x80000000U)
#define TMU_TMFTRCR_V_SHIFT                      (31U)
#define TMU_TMFTRCR_V_WIDTH                      (1U)
#define TMU_TMFTRCR_V(x)                         (((uint32_t)(((uint32_t)(x)) << TMU_TMFTRCR_V_SHIFT)) & TMU_TMFTRCR_V_MASK)
/*! @} */

/*! @name TMHTITR - Monitor High Temperature Immediate Threshold */
/*! @{ */
#define TMU_TMHTITR_TEMP_MASK                    (0x1FFU)
#define TMU_TMHTITR_TEMP_SHIFT                   (0U)
#define TMU_TMHTITR_TEMP_WIDTH                   (9U)
#define TMU_TMHTITR_TEMP(x)                      (((uint32_t)(((uint32_t)(x)) << TMU_TMHTITR_TEMP_SHIFT)) & TMU_TMHTITR_TEMP_MASK)
#define TMU_TMHTITR_EN_MASK                      (0x80000000U)
#define TMU_TMHTITR_EN_SHIFT                     (31U)
#define TMU_TMHTITR_EN_WIDTH                     (1U)
#define TMU_TMHTITR_EN(x)                        (((uint32_t)(((uint32_t)(x)) << TMU_TMHTITR_EN_SHIFT)) & TMU_TMHTITR_EN_MASK)
/*! @} */

/*! @name TMHTATR - Monitor High Temperature Average Threshold */
/*! @{ */
#define TMU_TMHTATR_TEMP_MASK                    (0x1FFU)
#define TMU_TMHTATR_TEMP_SHIFT                   (0U)
#define TMU_TMHTATR_TEMP_WIDTH                   (9U)
#define TMU_TMHTATR_TEMP(x)                      (((uint32_t)(((uint32_t)(x)) << TMU_TMHTATR_TEMP_SHIFT)) & TMU_TMHTATR_TEMP_MASK)
#define TMU_TMHTATR_EN_MASK                      (0x80000000U)
#define TMU_TMHTATR_EN_SHIFT                     (31U)
#define TMU_TMHTATR_EN_WIDTH                     (1U)
#define TMU_TMHTATR_EN(x)                        (((uint32_t)(((uint32_t)(x)) << TMU_TMHTATR_EN_SHIFT)) & TMU_TMHTATR_EN_MASK)
/*! @} */

/*! @name TMHTACTR - Monitor High Temperature Average Critical Threshold */
/*! @{ */
#define TMU_TMHTACTR_TEMP_MASK                   (0x1FFU)
#define TMU_TMHTACTR_TEMP_SHIFT                  (0U)
#define TMU_TMHTACTR_TEMP_WIDTH                  (9U)
#define TMU_TMHTACTR_TEMP(x)                     (((uint32_t)(((uint32_t)(x)) << TMU_TMHTACTR_TEMP_SHIFT)) & TMU_TMHTACTR_TEMP_MASK)
#define TMU_TMHTACTR_EN_MASK                     (0x80000000U)
#define TMU_TMHTACTR_EN_SHIFT                    (31U)
#define TMU_TMHTACTR_EN_WIDTH                    (1U)
#define TMU_TMHTACTR_EN(x)                       (((uint32_t)(((uint32_t)(x)) << TMU_TMHTACTR_EN_SHIFT)) & TMU_TMHTACTR_EN_MASK)
/*! @} */

/*! @name TMLTITR - Monitor Low Temperature Immediate Threshold */
/*! @{ */
#define TMU_TMLTITR_TEMP_MASK                    (0x1FFU)
#define TMU_TMLTITR_TEMP_SHIFT                   (0U)
#define TMU_TMLTITR_TEMP_WIDTH                   (9U)
#define TMU_TMLTITR_TEMP(x)                      (((uint32_t)(((uint32_t)(x)) << TMU_TMLTITR_TEMP_SHIFT)) & TMU_TMLTITR_TEMP_MASK)
#define TMU_TMLTITR_EN_MASK                      (0x80000000U)
#define TMU_TMLTITR_EN_SHIFT                     (31U)
#define TMU_TMLTITR_EN_WIDTH                     (1U)
#define TMU_TMLTITR_EN(x)                        (((uint32_t)(((uint32_t)(x)) << TMU_TMLTITR_EN_SHIFT)) & TMU_TMLTITR_EN_MASK)
/*! @} */

/*! @name TMLTATR - Monitor Low Temperature Average Threshold */
/*! @{ */
#define TMU_TMLTATR_TEMP_MASK                    (0x1FFU)
#define TMU_TMLTATR_TEMP_SHIFT                   (0U)
#define TMU_TMLTATR_TEMP_WIDTH                   (9U)
#define TMU_TMLTATR_TEMP(x)                      (((uint32_t)(((uint32_t)(x)) << TMU_TMLTATR_TEMP_SHIFT)) & TMU_TMLTATR_TEMP_MASK)
#define TMU_TMLTATR_EN_MASK                      (0x80000000U)
#define TMU_TMLTATR_EN_SHIFT                     (31U)
#define TMU_TMLTATR_EN_WIDTH                     (1U)
#define TMU_TMLTATR_EN(x)                        (((uint32_t)(((uint32_t)(x)) << TMU_TMLTATR_EN_SHIFT)) & TMU_TMLTATR_EN_MASK)
/*! @} */

/*! @name TMLTACTR - Monitor Low Temperature Average Critical Threshold */
/*! @{ */
#define TMU_TMLTACTR_TEMP_MASK                   (0x1FFU)
#define TMU_TMLTACTR_TEMP_SHIFT                  (0U)
#define TMU_TMLTACTR_TEMP_WIDTH                  (9U)
#define TMU_TMLTACTR_TEMP(x)                     (((uint32_t)(((uint32_t)(x)) << TMU_TMLTACTR_TEMP_SHIFT)) & TMU_TMLTACTR_TEMP_MASK)
#define TMU_TMLTACTR_EN_MASK                     (0x80000000U)
#define TMU_TMLTACTR_EN_SHIFT                    (31U)
#define TMU_TMLTACTR_EN_WIDTH                    (1U)
#define TMU_TMLTACTR_EN(x)                       (((uint32_t)(((uint32_t)(x)) << TMU_TMLTACTR_EN_SHIFT)) & TMU_TMLTACTR_EN_MASK)
/*! @} */

/*! @name TMRTRCTR - Monitor Rising Temperature Rate Critical Threshold */
/*! @{ */
#define TMU_TMRTRCTR_TEMP_MASK                   (0xFFU)
#define TMU_TMRTRCTR_TEMP_SHIFT                  (0U)
#define TMU_TMRTRCTR_TEMP_WIDTH                  (8U)
#define TMU_TMRTRCTR_TEMP(x)                     (((uint32_t)(((uint32_t)(x)) << TMU_TMRTRCTR_TEMP_SHIFT)) & TMU_TMRTRCTR_TEMP_MASK)
#define TMU_TMRTRCTR_EN_MASK                     (0x80000000U)
#define TMU_TMRTRCTR_EN_SHIFT                    (31U)
#define TMU_TMRTRCTR_EN_WIDTH                    (1U)
#define TMU_TMRTRCTR_EN(x)                       (((uint32_t)(((uint32_t)(x)) << TMU_TMRTRCTR_EN_SHIFT)) & TMU_TMRTRCTR_EN_MASK)
/*! @} */

/*! @name TMFTRCTR - Monitor Falling Temperature Rate Critical Threshold */
/*! @{ */
#define TMU_TMFTRCTR_TEMP_MASK                   (0xFFU)
#define TMU_TMFTRCTR_TEMP_SHIFT                  (0U)
#define TMU_TMFTRCTR_TEMP_WIDTH                  (8U)
#define TMU_TMFTRCTR_TEMP(x)                     (((uint32_t)(((uint32_t)(x)) << TMU_TMFTRCTR_TEMP_SHIFT)) & TMU_TMFTRCTR_TEMP_MASK)
#define TMU_TMFTRCTR_EN_MASK                     (0x80000000U)
#define TMU_TMFTRCTR_EN_SHIFT                    (31U)
#define TMU_TMFTRCTR_EN_WIDTH                    (1U)
#define TMU_TMFTRCTR_EN(x)                       (((uint32_t)(((uint32_t)(x)) << TMU_TMFTRCTR_EN_SHIFT)) & TMU_TMFTRCTR_EN_MASK)
/*! @} */

/*! @name TTCFGR - Temperature Configuration */
/*! @{ */
#define TMU_TTCFGR_CAL_PT_MASK                   (0xFU)
#define TMU_TTCFGR_CAL_PT_SHIFT                  (0U)
#define TMU_TTCFGR_CAL_PT_WIDTH                  (4U)
#define TMU_TTCFGR_CAL_PT(x)                     (((uint32_t)(((uint32_t)(x)) << TMU_TTCFGR_CAL_PT_SHIFT)) & TMU_TTCFGR_CAL_PT_MASK)
/*! @} */

/*! @name TSCFGR - Sensor Configuration */
/*! @{ */
#define TMU_TSCFGR_SENSOR_MASK                   (0x1FFU)
#define TMU_TSCFGR_SENSOR_SHIFT                  (0U)
#define TMU_TSCFGR_SENSOR_WIDTH                  (9U)
#define TMU_TSCFGR_SENSOR(x)                     (((uint32_t)(((uint32_t)(x)) << TMU_TSCFGR_SENSOR_SHIFT)) & TMU_TSCFGR_SENSOR_MASK)
/*! @} */

/*! @name TRITSR - Report Immediate Temperature at Site */
/*! @{ */
#define TMU_TRITSR_TEMP_MASK                     (0x1FFU)
#define TMU_TRITSR_TEMP_SHIFT                    (0U)
#define TMU_TRITSR_TEMP_WIDTH                    (9U)
#define TMU_TRITSR_TEMP(x)                       (((uint32_t)(((uint32_t)(x)) << TMU_TRITSR_TEMP_SHIFT)) & TMU_TRITSR_TEMP_MASK)
#define TMU_TRITSR_TP5_MASK                      (0x200U)
#define TMU_TRITSR_TP5_SHIFT                     (9U)
#define TMU_TRITSR_TP5_WIDTH                     (1U)
#define TMU_TRITSR_TP5(x)                        (((uint32_t)(((uint32_t)(x)) << TMU_TRITSR_TP5_SHIFT)) & TMU_TRITSR_TP5_MASK)
#define TMU_TRITSR_V_MASK                        (0x80000000U)
#define TMU_TRITSR_V_SHIFT                       (31U)
#define TMU_TRITSR_V_WIDTH                       (1U)
#define TMU_TRITSR_V(x)                          (((uint32_t)(((uint32_t)(x)) << TMU_TRITSR_V_SHIFT)) & TMU_TRITSR_V_MASK)
/*! @} */

/*! @name TRATSR - Report Average Temperature at Site */
/*! @{ */
#define TMU_TRATSR_TEMP_MASK                     (0x1FFU)
#define TMU_TRATSR_TEMP_SHIFT                    (0U)
#define TMU_TRATSR_TEMP_WIDTH                    (9U)
#define TMU_TRATSR_TEMP(x)                       (((uint32_t)(((uint32_t)(x)) << TMU_TRATSR_TEMP_SHIFT)) & TMU_TRATSR_TEMP_MASK)
#define TMU_TRATSR_V_MASK                        (0x80000000U)
#define TMU_TRATSR_V_SHIFT                       (31U)
#define TMU_TRATSR_V_WIDTH                       (1U)
#define TMU_TRATSR_V(x)                          (((uint32_t)(((uint32_t)(x)) << TMU_TRATSR_V_SHIFT)) & TMU_TRATSR_V_MASK)
/*! @} */

/*! @name TCMCFG - Central Module Configuration */
/*! @{ */
#define TMU_TCMCFG_DAC_OFFSET_MASK               (0x7FU)
#define TMU_TCMCFG_DAC_OFFSET_SHIFT              (0U)
#define TMU_TCMCFG_DAC_OFFSET_WIDTH              (7U)
#define TMU_TCMCFG_DAC_OFFSET(x)                 (((uint32_t)(((uint32_t)(x)) << TMU_TCMCFG_DAC_OFFSET_SHIFT)) & TMU_TCMCFG_DAC_OFFSET_MASK)
#define TMU_TCMCFG_CMET_MASK                     (0x300U)
#define TMU_TCMCFG_CMET_SHIFT                    (8U)
#define TMU_TCMCFG_CMET_WIDTH                    (2U)
#define TMU_TCMCFG_CMET(x)                       (((uint32_t)(((uint32_t)(x)) << TMU_TCMCFG_CMET_SHIFT)) & TMU_TCMCFG_CMET_MASK)
#define TMU_TCMCFG_DFD_MASK                      (0xC00U)
#define TMU_TCMCFG_DFD_SHIFT                     (10U)
#define TMU_TCMCFG_DFD_WIDTH                     (2U)
#define TMU_TCMCFG_DFD(x)                        (((uint32_t)(((uint32_t)(x)) << TMU_TCMCFG_DFD_SHIFT)) & TMU_TCMCFG_DFD_MASK)
#define TMU_TCMCFG_CLK_DIV_MASK                  (0xF000U)
#define TMU_TCMCFG_CLK_DIV_SHIFT                 (12U)
#define TMU_TCMCFG_CLK_DIV_WIDTH                 (4U)
#define TMU_TCMCFG_CLK_DIV(x)                    (((uint32_t)(((uint32_t)(x)) << TMU_TCMCFG_CLK_DIV_SHIFT)) & TMU_TCMCFG_CLK_DIV_MASK)
#define TMU_TCMCFG_SAR_RDY_MASK                  (0x10000U)
#define TMU_TCMCFG_SAR_RDY_SHIFT                 (16U)
#define TMU_TCMCFG_SAR_RDY_WIDTH                 (1U)
#define TMU_TCMCFG_SAR_RDY(x)                    (((uint32_t)(((uint32_t)(x)) << TMU_TCMCFG_SAR_RDY_SHIFT)) & TMU_TCMCFG_SAR_RDY_MASK)
#define TMU_TCMCFG_RCTC_MASK                     (0x7000000U)
#define TMU_TCMCFG_RCTC_SHIFT                    (24U)
#define TMU_TCMCFG_RCTC_WIDTH                    (3U)
#define TMU_TCMCFG_RCTC(x)                       (((uint32_t)(((uint32_t)(x)) << TMU_TCMCFG_RCTC_SHIFT)) & TMU_TCMCFG_RCTC_MASK)
#define TMU_TCMCFG_DEMA_MASK                     (0x10000000U)
#define TMU_TCMCFG_DEMA_SHIFT                    (28U)
#define TMU_TCMCFG_DEMA_WIDTH                    (1U)
#define TMU_TCMCFG_DEMA(x)                       (((uint32_t)(((uint32_t)(x)) << TMU_TCMCFG_DEMA_SHIFT)) & TMU_TCMCFG_DEMA_MASK)
#define TMU_TCMCFG_OCS_MASK                      (0x20000000U)
#define TMU_TCMCFG_OCS_SHIFT                     (29U)
#define TMU_TCMCFG_OCS_WIDTH                     (1U)
#define TMU_TCMCFG_OCS(x)                        (((uint32_t)(((uint32_t)(x)) << TMU_TCMCFG_OCS_SHIFT)) & TMU_TCMCFG_OCS_MASK)
#define TMU_TCMCFG_OCM_MASK                      (0x40000000U)
#define TMU_TCMCFG_OCM_SHIFT                     (30U)
#define TMU_TCMCFG_OCM_WIDTH                     (1U)
#define TMU_TCMCFG_OCM(x)                        (((uint32_t)(((uint32_t)(x)) << TMU_TCMCFG_OCM_SHIFT)) & TMU_TCMCFG_OCM_MASK)
#define TMU_TCMCFG_DPM_MASK                      (0x80000000U)
#define TMU_TCMCFG_DPM_SHIFT                     (31U)
#define TMU_TCMCFG_DPM_WIDTH                     (1U)
#define TMU_TCMCFG_DPM(x)                        (((uint32_t)(((uint32_t)(x)) << TMU_TCMCFG_DPM_SHIFT)) & TMU_TCMCFG_DPM_MASK)
/*! @} */

/*! @name TTRCR - Temperature Range Control 0..Temperature Range Control 15 */
/*! @{ */
#define TMU_TTRCR_TEMP_MASK                      (0x1FFU)
#define TMU_TTRCR_TEMP_SHIFT                     (0U)
#define TMU_TTRCR_TEMP_WIDTH                     (9U)
#define TMU_TTRCR_TEMP(x)                        (((uint32_t)(((uint32_t)(x)) << TMU_TTRCR_TEMP_SHIFT)) & TMU_TTRCR_TEMP_MASK)
#define TMU_TTRCR_V_MASK                         (0x80000000U)
#define TMU_TTRCR_V_SHIFT                        (31U)
#define TMU_TTRCR_V_WIDTH                        (1U)
#define TMU_TTRCR_V(x)                           (((uint32_t)(((uint32_t)(x)) << TMU_TTRCR_V_SHIFT)) & TMU_TTRCR_V_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group TMU_Register_Masks */


/*!
 * @}
 */ /* end of group TMU_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- UMCTL2_MP Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup UMCTL2_MP_Peripheral_Access_Layer UMCTL2_MP Peripheral Access Layer
 * @{
 */

/** UMCTL2_MP - Register Layout Typedef */
typedef struct {
  uint8_t RESERVED_0[4];
  __I  uint32_t PSTAT;                             /**< Port Status, offset: 0x4 */
  __IO uint32_t PCCFG;                             /**< Port Common Configuration, offset: 0x8 */
  __IO uint32_t PCFGR_0;                           /**< Port n Configuration Read, offset: 0xC */
  __IO uint32_t PCFGW_0;                           /**< Port n Configuration Write, offset: 0x10 */
  uint8_t RESERVED_1[132];
  __IO uint32_t PCTRL_0;                           /**< Port n Control, offset: 0x98 */
  __IO uint32_t PCFGQOS0_0;                        /**< Port n Read QoS Configuration Register 0, offset: 0x9C */
  __IO uint32_t PCFGQOS1_0;                        /**< Port n Read QoS Configuration Register 1, offset: 0xA0 */
  __IO uint32_t PCFGWQOS0_0;                       /**< Port n Write QoS Configuration Register 0, offset: 0xA4 */
  __IO uint32_t PCFGWQOS1_0;                       /**< Port n Write QoS Configuration Register 1, offset: 0xA8 */
  uint8_t RESERVED_2[16];
  __IO uint32_t PCFGR_1;                           /**< Port n Configuration Read, offset: 0xBC */
  __IO uint32_t PCFGW_1;                           /**< Port n Configuration Write, offset: 0xC0 */
  uint8_t RESERVED_3[132];
  __IO uint32_t PCTRL_1;                           /**< Port n Control, offset: 0x148 */
  __IO uint32_t PCFGQOS0_1;                        /**< Port n Read QoS Configuration Register 0, offset: 0x14C */
  __IO uint32_t PCFGQOS1_1;                        /**< Port n Read QoS Configuration Register 1, offset: 0x150 */
  __IO uint32_t PCFGWQOS0_1;                       /**< Port n Write QoS Configuration Register 0, offset: 0x154 */
  __IO uint32_t PCFGWQOS1_1;                       /**< Port n Write QoS Configuration Register 1, offset: 0x158 */
  uint8_t RESERVED_4[16];
  __IO uint32_t PCFGR_2;                           /**< Port n Configuration Read, offset: 0x16C */
  __IO uint32_t PCFGW_2;                           /**< Port n Configuration Write, offset: 0x170 */
  uint8_t RESERVED_5[132];
  __IO uint32_t PCTRL_2;                           /**< Port n Control, offset: 0x1F8 */
  __IO uint32_t PCFGQOS0_2;                        /**< Port n Read QoS Configuration Register 0, offset: 0x1FC */
  __IO uint32_t PCFGQOS1_2;                        /**< Port n Read QoS Configuration Register 1, offset: 0x200 */
  __IO uint32_t PCFGWQOS0_2;                       /**< Port n Write QoS Configuration Register 0, offset: 0x204 */
  __IO uint32_t PCFGWQOS1_2;                       /**< Port n Write QoS Configuration Register 1, offset: 0x208 */
  uint8_t RESERVED_6[2336];
  __IO uint32_t SBRCTL;                            /**< Scrubber Control, offset: 0xB2C */
  __I  uint32_t SBRSTAT;                           /**< Scrubber Status, offset: 0xB30 */
  __IO uint32_t SBRWDATA0;                         /**< Scrubber Write Data Pattern0, offset: 0xB34 */
} UMCTL2_MP_Type, *UMCTL2_MP_MemMapPtr;

/** Number of instances of the UMCTL2_MP module. */
#define UMCTL2_MP_INSTANCE_COUNT                 (1u)

/* UMCTL2_MP - Peripheral instance base addresses */
/** Peripheral UMCTL2_MP base address */
#define UMCTL2_MP_BASE                           (0x403C03F8u)
/** Peripheral UMCTL2_MP base pointer */
#define UMCTL2_MP                                ((UMCTL2_MP_Type *)UMCTL2_MP_BASE)
/** Array initializer of UMCTL2_MP peripheral base addresses */
#define UMCTL2_MP_BASE_ADDRS                     { UMCTL2_MP_BASE }
/** Array initializer of UMCTL2_MP peripheral base pointers */
#define UMCTL2_MP_BASE_PTRS                      { UMCTL2_MP }

/* ----------------------------------------------------------------------------
   -- UMCTL2_MP Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup UMCTL2_MP_Register_Masks UMCTL2_MP Register Masks
 * @{
 */

/*! @name PSTAT - Port Status */
/*! @{ */
#define UMCTL2_MP_PSTAT_rd_port_busy_0_MASK      (0x1U)
#define UMCTL2_MP_PSTAT_rd_port_busy_0_SHIFT     (0U)
#define UMCTL2_MP_PSTAT_rd_port_busy_0_WIDTH     (1U)
#define UMCTL2_MP_PSTAT_rd_port_busy_0(x)        (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PSTAT_rd_port_busy_0_SHIFT)) & UMCTL2_MP_PSTAT_rd_port_busy_0_MASK)
#define UMCTL2_MP_PSTAT_rd_port_busy_1_MASK      (0x2U)
#define UMCTL2_MP_PSTAT_rd_port_busy_1_SHIFT     (1U)
#define UMCTL2_MP_PSTAT_rd_port_busy_1_WIDTH     (1U)
#define UMCTL2_MP_PSTAT_rd_port_busy_1(x)        (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PSTAT_rd_port_busy_1_SHIFT)) & UMCTL2_MP_PSTAT_rd_port_busy_1_MASK)
#define UMCTL2_MP_PSTAT_rd_port_busy_2_MASK      (0x4U)
#define UMCTL2_MP_PSTAT_rd_port_busy_2_SHIFT     (2U)
#define UMCTL2_MP_PSTAT_rd_port_busy_2_WIDTH     (1U)
#define UMCTL2_MP_PSTAT_rd_port_busy_2(x)        (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PSTAT_rd_port_busy_2_SHIFT)) & UMCTL2_MP_PSTAT_rd_port_busy_2_MASK)
#define UMCTL2_MP_PSTAT_wr_port_busy_0_MASK      (0x10000U)
#define UMCTL2_MP_PSTAT_wr_port_busy_0_SHIFT     (16U)
#define UMCTL2_MP_PSTAT_wr_port_busy_0_WIDTH     (1U)
#define UMCTL2_MP_PSTAT_wr_port_busy_0(x)        (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PSTAT_wr_port_busy_0_SHIFT)) & UMCTL2_MP_PSTAT_wr_port_busy_0_MASK)
#define UMCTL2_MP_PSTAT_wr_port_busy_1_MASK      (0x20000U)
#define UMCTL2_MP_PSTAT_wr_port_busy_1_SHIFT     (17U)
#define UMCTL2_MP_PSTAT_wr_port_busy_1_WIDTH     (1U)
#define UMCTL2_MP_PSTAT_wr_port_busy_1(x)        (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PSTAT_wr_port_busy_1_SHIFT)) & UMCTL2_MP_PSTAT_wr_port_busy_1_MASK)
#define UMCTL2_MP_PSTAT_wr_port_busy_2_MASK      (0x40000U)
#define UMCTL2_MP_PSTAT_wr_port_busy_2_SHIFT     (18U)
#define UMCTL2_MP_PSTAT_wr_port_busy_2_WIDTH     (1U)
#define UMCTL2_MP_PSTAT_wr_port_busy_2(x)        (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PSTAT_wr_port_busy_2_SHIFT)) & UMCTL2_MP_PSTAT_wr_port_busy_2_MASK)
/*! @} */

/*! @name PCCFG - Port Common Configuration */
/*! @{ */
#define UMCTL2_MP_PCCFG_go2critical_en_MASK      (0x1U)
#define UMCTL2_MP_PCCFG_go2critical_en_SHIFT     (0U)
#define UMCTL2_MP_PCCFG_go2critical_en_WIDTH     (1U)
#define UMCTL2_MP_PCCFG_go2critical_en(x)        (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCCFG_go2critical_en_SHIFT)) & UMCTL2_MP_PCCFG_go2critical_en_MASK)
#define UMCTL2_MP_PCCFG_pagematch_limit_MASK     (0x10U)
#define UMCTL2_MP_PCCFG_pagematch_limit_SHIFT    (4U)
#define UMCTL2_MP_PCCFG_pagematch_limit_WIDTH    (1U)
#define UMCTL2_MP_PCCFG_pagematch_limit(x)       (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCCFG_pagematch_limit_SHIFT)) & UMCTL2_MP_PCCFG_pagematch_limit_MASK)
#define UMCTL2_MP_PCCFG_bl_exp_mode_MASK         (0x100U)
#define UMCTL2_MP_PCCFG_bl_exp_mode_SHIFT        (8U)
#define UMCTL2_MP_PCCFG_bl_exp_mode_WIDTH        (1U)
#define UMCTL2_MP_PCCFG_bl_exp_mode(x)           (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCCFG_bl_exp_mode_SHIFT)) & UMCTL2_MP_PCCFG_bl_exp_mode_MASK)
/*! @} */

/*! @name PCFGR_0 - Port n Configuration Read */
/*! @{ */
#define UMCTL2_MP_PCFGR_0_rd_port_priority_MASK  (0x3FFU)
#define UMCTL2_MP_PCFGR_0_rd_port_priority_SHIFT (0U)
#define UMCTL2_MP_PCFGR_0_rd_port_priority_WIDTH (10U)
#define UMCTL2_MP_PCFGR_0_rd_port_priority(x)    (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCFGR_0_rd_port_priority_SHIFT)) & UMCTL2_MP_PCFGR_0_rd_port_priority_MASK)
#define UMCTL2_MP_PCFGR_0_rd_port_aging_en_MASK  (0x1000U)
#define UMCTL2_MP_PCFGR_0_rd_port_aging_en_SHIFT (12U)
#define UMCTL2_MP_PCFGR_0_rd_port_aging_en_WIDTH (1U)
#define UMCTL2_MP_PCFGR_0_rd_port_aging_en(x)    (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCFGR_0_rd_port_aging_en_SHIFT)) & UMCTL2_MP_PCFGR_0_rd_port_aging_en_MASK)
#define UMCTL2_MP_PCFGR_0_rd_port_urgent_en_MASK (0x2000U)
#define UMCTL2_MP_PCFGR_0_rd_port_urgent_en_SHIFT (13U)
#define UMCTL2_MP_PCFGR_0_rd_port_urgent_en_WIDTH (1U)
#define UMCTL2_MP_PCFGR_0_rd_port_urgent_en(x)   (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCFGR_0_rd_port_urgent_en_SHIFT)) & UMCTL2_MP_PCFGR_0_rd_port_urgent_en_MASK)
#define UMCTL2_MP_PCFGR_0_rd_port_pagematch_en_MASK (0x4000U)
#define UMCTL2_MP_PCFGR_0_rd_port_pagematch_en_SHIFT (14U)
#define UMCTL2_MP_PCFGR_0_rd_port_pagematch_en_WIDTH (1U)
#define UMCTL2_MP_PCFGR_0_rd_port_pagematch_en(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCFGR_0_rd_port_pagematch_en_SHIFT)) & UMCTL2_MP_PCFGR_0_rd_port_pagematch_en_MASK)
#define UMCTL2_MP_PCFGR_0_rdwr_ordered_en_MASK   (0x10000U)
#define UMCTL2_MP_PCFGR_0_rdwr_ordered_en_SHIFT  (16U)
#define UMCTL2_MP_PCFGR_0_rdwr_ordered_en_WIDTH  (1U)
#define UMCTL2_MP_PCFGR_0_rdwr_ordered_en(x)     (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCFGR_0_rdwr_ordered_en_SHIFT)) & UMCTL2_MP_PCFGR_0_rdwr_ordered_en_MASK)
/*! @} */

/*! @name PCFGW_0 - Port n Configuration Write */
/*! @{ */
#define UMCTL2_MP_PCFGW_0_wr_port_priority_MASK  (0x3FFU)
#define UMCTL2_MP_PCFGW_0_wr_port_priority_SHIFT (0U)
#define UMCTL2_MP_PCFGW_0_wr_port_priority_WIDTH (10U)
#define UMCTL2_MP_PCFGW_0_wr_port_priority(x)    (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCFGW_0_wr_port_priority_SHIFT)) & UMCTL2_MP_PCFGW_0_wr_port_priority_MASK)
#define UMCTL2_MP_PCFGW_0_wr_port_aging_en_MASK  (0x1000U)
#define UMCTL2_MP_PCFGW_0_wr_port_aging_en_SHIFT (12U)
#define UMCTL2_MP_PCFGW_0_wr_port_aging_en_WIDTH (1U)
#define UMCTL2_MP_PCFGW_0_wr_port_aging_en(x)    (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCFGW_0_wr_port_aging_en_SHIFT)) & UMCTL2_MP_PCFGW_0_wr_port_aging_en_MASK)
#define UMCTL2_MP_PCFGW_0_wr_port_urgent_en_MASK (0x2000U)
#define UMCTL2_MP_PCFGW_0_wr_port_urgent_en_SHIFT (13U)
#define UMCTL2_MP_PCFGW_0_wr_port_urgent_en_WIDTH (1U)
#define UMCTL2_MP_PCFGW_0_wr_port_urgent_en(x)   (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCFGW_0_wr_port_urgent_en_SHIFT)) & UMCTL2_MP_PCFGW_0_wr_port_urgent_en_MASK)
#define UMCTL2_MP_PCFGW_0_wr_port_pagematch_en_MASK (0x4000U)
#define UMCTL2_MP_PCFGW_0_wr_port_pagematch_en_SHIFT (14U)
#define UMCTL2_MP_PCFGW_0_wr_port_pagematch_en_WIDTH (1U)
#define UMCTL2_MP_PCFGW_0_wr_port_pagematch_en(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCFGW_0_wr_port_pagematch_en_SHIFT)) & UMCTL2_MP_PCFGW_0_wr_port_pagematch_en_MASK)
/*! @} */

/*! @name PCTRL_0 - Port n Control */
/*! @{ */
#define UMCTL2_MP_PCTRL_0_port_en_MASK           (0x1U)
#define UMCTL2_MP_PCTRL_0_port_en_SHIFT          (0U)
#define UMCTL2_MP_PCTRL_0_port_en_WIDTH          (1U)
#define UMCTL2_MP_PCTRL_0_port_en(x)             (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCTRL_0_port_en_SHIFT)) & UMCTL2_MP_PCTRL_0_port_en_MASK)
/*! @} */

/*! @name PCFGQOS0_0 - Port n Read QoS Configuration Register 0 */
/*! @{ */
#define UMCTL2_MP_PCFGQOS0_0_rqos_map_level1_MASK (0xFU)
#define UMCTL2_MP_PCFGQOS0_0_rqos_map_level1_SHIFT (0U)
#define UMCTL2_MP_PCFGQOS0_0_rqos_map_level1_WIDTH (4U)
#define UMCTL2_MP_PCFGQOS0_0_rqos_map_level1(x)  (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCFGQOS0_0_rqos_map_level1_SHIFT)) & UMCTL2_MP_PCFGQOS0_0_rqos_map_level1_MASK)
#define UMCTL2_MP_PCFGQOS0_0_rqos_map_level2_MASK (0xF00U)
#define UMCTL2_MP_PCFGQOS0_0_rqos_map_level2_SHIFT (8U)
#define UMCTL2_MP_PCFGQOS0_0_rqos_map_level2_WIDTH (4U)
#define UMCTL2_MP_PCFGQOS0_0_rqos_map_level2(x)  (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCFGQOS0_0_rqos_map_level2_SHIFT)) & UMCTL2_MP_PCFGQOS0_0_rqos_map_level2_MASK)
#define UMCTL2_MP_PCFGQOS0_0_rqos_map_region0_MASK (0x30000U)
#define UMCTL2_MP_PCFGQOS0_0_rqos_map_region0_SHIFT (16U)
#define UMCTL2_MP_PCFGQOS0_0_rqos_map_region0_WIDTH (2U)
#define UMCTL2_MP_PCFGQOS0_0_rqos_map_region0(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCFGQOS0_0_rqos_map_region0_SHIFT)) & UMCTL2_MP_PCFGQOS0_0_rqos_map_region0_MASK)
#define UMCTL2_MP_PCFGQOS0_0_rqos_map_region1_MASK (0x300000U)
#define UMCTL2_MP_PCFGQOS0_0_rqos_map_region1_SHIFT (20U)
#define UMCTL2_MP_PCFGQOS0_0_rqos_map_region1_WIDTH (2U)
#define UMCTL2_MP_PCFGQOS0_0_rqos_map_region1(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCFGQOS0_0_rqos_map_region1_SHIFT)) & UMCTL2_MP_PCFGQOS0_0_rqos_map_region1_MASK)
#define UMCTL2_MP_PCFGQOS0_0_rqos_map_region2_MASK (0x3000000U)
#define UMCTL2_MP_PCFGQOS0_0_rqos_map_region2_SHIFT (24U)
#define UMCTL2_MP_PCFGQOS0_0_rqos_map_region2_WIDTH (2U)
#define UMCTL2_MP_PCFGQOS0_0_rqos_map_region2(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCFGQOS0_0_rqos_map_region2_SHIFT)) & UMCTL2_MP_PCFGQOS0_0_rqos_map_region2_MASK)
/*! @} */

/*! @name PCFGQOS1_0 - Port n Read QoS Configuration Register 1 */
/*! @{ */
#define UMCTL2_MP_PCFGQOS1_0_rqos_map_timeoutb_MASK (0x7FFU)
#define UMCTL2_MP_PCFGQOS1_0_rqos_map_timeoutb_SHIFT (0U)
#define UMCTL2_MP_PCFGQOS1_0_rqos_map_timeoutb_WIDTH (11U)
#define UMCTL2_MP_PCFGQOS1_0_rqos_map_timeoutb(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCFGQOS1_0_rqos_map_timeoutb_SHIFT)) & UMCTL2_MP_PCFGQOS1_0_rqos_map_timeoutb_MASK)
#define UMCTL2_MP_PCFGQOS1_0_rqos_map_timeoutr_MASK (0x7FF0000U)
#define UMCTL2_MP_PCFGQOS1_0_rqos_map_timeoutr_SHIFT (16U)
#define UMCTL2_MP_PCFGQOS1_0_rqos_map_timeoutr_WIDTH (11U)
#define UMCTL2_MP_PCFGQOS1_0_rqos_map_timeoutr(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCFGQOS1_0_rqos_map_timeoutr_SHIFT)) & UMCTL2_MP_PCFGQOS1_0_rqos_map_timeoutr_MASK)
/*! @} */

/*! @name PCFGWQOS0_0 - Port n Write QoS Configuration Register 0 */
/*! @{ */
#define UMCTL2_MP_PCFGWQOS0_0_wqos_map_level1_MASK (0xFU)
#define UMCTL2_MP_PCFGWQOS0_0_wqos_map_level1_SHIFT (0U)
#define UMCTL2_MP_PCFGWQOS0_0_wqos_map_level1_WIDTH (4U)
#define UMCTL2_MP_PCFGWQOS0_0_wqos_map_level1(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCFGWQOS0_0_wqos_map_level1_SHIFT)) & UMCTL2_MP_PCFGWQOS0_0_wqos_map_level1_MASK)
#define UMCTL2_MP_PCFGWQOS0_0_wqos_map_level2_MASK (0xF00U)
#define UMCTL2_MP_PCFGWQOS0_0_wqos_map_level2_SHIFT (8U)
#define UMCTL2_MP_PCFGWQOS0_0_wqos_map_level2_WIDTH (4U)
#define UMCTL2_MP_PCFGWQOS0_0_wqos_map_level2(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCFGWQOS0_0_wqos_map_level2_SHIFT)) & UMCTL2_MP_PCFGWQOS0_0_wqos_map_level2_MASK)
#define UMCTL2_MP_PCFGWQOS0_0_wqos_map_region0_MASK (0x30000U)
#define UMCTL2_MP_PCFGWQOS0_0_wqos_map_region0_SHIFT (16U)
#define UMCTL2_MP_PCFGWQOS0_0_wqos_map_region0_WIDTH (2U)
#define UMCTL2_MP_PCFGWQOS0_0_wqos_map_region0(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCFGWQOS0_0_wqos_map_region0_SHIFT)) & UMCTL2_MP_PCFGWQOS0_0_wqos_map_region0_MASK)
#define UMCTL2_MP_PCFGWQOS0_0_wqos_map_region1_MASK (0x300000U)
#define UMCTL2_MP_PCFGWQOS0_0_wqos_map_region1_SHIFT (20U)
#define UMCTL2_MP_PCFGWQOS0_0_wqos_map_region1_WIDTH (2U)
#define UMCTL2_MP_PCFGWQOS0_0_wqos_map_region1(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCFGWQOS0_0_wqos_map_region1_SHIFT)) & UMCTL2_MP_PCFGWQOS0_0_wqos_map_region1_MASK)
#define UMCTL2_MP_PCFGWQOS0_0_wqos_map_region2_MASK (0x3000000U)
#define UMCTL2_MP_PCFGWQOS0_0_wqos_map_region2_SHIFT (24U)
#define UMCTL2_MP_PCFGWQOS0_0_wqos_map_region2_WIDTH (2U)
#define UMCTL2_MP_PCFGWQOS0_0_wqos_map_region2(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCFGWQOS0_0_wqos_map_region2_SHIFT)) & UMCTL2_MP_PCFGWQOS0_0_wqos_map_region2_MASK)
/*! @} */

/*! @name PCFGWQOS1_0 - Port n Write QoS Configuration Register 1 */
/*! @{ */
#define UMCTL2_MP_PCFGWQOS1_0_wqos_map_timeout1_MASK (0x7FFU)
#define UMCTL2_MP_PCFGWQOS1_0_wqos_map_timeout1_SHIFT (0U)
#define UMCTL2_MP_PCFGWQOS1_0_wqos_map_timeout1_WIDTH (11U)
#define UMCTL2_MP_PCFGWQOS1_0_wqos_map_timeout1(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCFGWQOS1_0_wqos_map_timeout1_SHIFT)) & UMCTL2_MP_PCFGWQOS1_0_wqos_map_timeout1_MASK)
#define UMCTL2_MP_PCFGWQOS1_0_wqos_map_timeout2_MASK (0x7FF0000U)
#define UMCTL2_MP_PCFGWQOS1_0_wqos_map_timeout2_SHIFT (16U)
#define UMCTL2_MP_PCFGWQOS1_0_wqos_map_timeout2_WIDTH (11U)
#define UMCTL2_MP_PCFGWQOS1_0_wqos_map_timeout2(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCFGWQOS1_0_wqos_map_timeout2_SHIFT)) & UMCTL2_MP_PCFGWQOS1_0_wqos_map_timeout2_MASK)
/*! @} */

/*! @name PCFGR_1 - Port n Configuration Read */
/*! @{ */
#define UMCTL2_MP_PCFGR_1_rd_port_priority_MASK  (0x3FFU)
#define UMCTL2_MP_PCFGR_1_rd_port_priority_SHIFT (0U)
#define UMCTL2_MP_PCFGR_1_rd_port_priority_WIDTH (10U)
#define UMCTL2_MP_PCFGR_1_rd_port_priority(x)    (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCFGR_1_rd_port_priority_SHIFT)) & UMCTL2_MP_PCFGR_1_rd_port_priority_MASK)
#define UMCTL2_MP_PCFGR_1_rd_port_aging_en_MASK  (0x1000U)
#define UMCTL2_MP_PCFGR_1_rd_port_aging_en_SHIFT (12U)
#define UMCTL2_MP_PCFGR_1_rd_port_aging_en_WIDTH (1U)
#define UMCTL2_MP_PCFGR_1_rd_port_aging_en(x)    (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCFGR_1_rd_port_aging_en_SHIFT)) & UMCTL2_MP_PCFGR_1_rd_port_aging_en_MASK)
#define UMCTL2_MP_PCFGR_1_rd_port_urgent_en_MASK (0x2000U)
#define UMCTL2_MP_PCFGR_1_rd_port_urgent_en_SHIFT (13U)
#define UMCTL2_MP_PCFGR_1_rd_port_urgent_en_WIDTH (1U)
#define UMCTL2_MP_PCFGR_1_rd_port_urgent_en(x)   (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCFGR_1_rd_port_urgent_en_SHIFT)) & UMCTL2_MP_PCFGR_1_rd_port_urgent_en_MASK)
#define UMCTL2_MP_PCFGR_1_rd_port_pagematch_en_MASK (0x4000U)
#define UMCTL2_MP_PCFGR_1_rd_port_pagematch_en_SHIFT (14U)
#define UMCTL2_MP_PCFGR_1_rd_port_pagematch_en_WIDTH (1U)
#define UMCTL2_MP_PCFGR_1_rd_port_pagematch_en(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCFGR_1_rd_port_pagematch_en_SHIFT)) & UMCTL2_MP_PCFGR_1_rd_port_pagematch_en_MASK)
#define UMCTL2_MP_PCFGR_1_rdwr_ordered_en_MASK   (0x10000U)
#define UMCTL2_MP_PCFGR_1_rdwr_ordered_en_SHIFT  (16U)
#define UMCTL2_MP_PCFGR_1_rdwr_ordered_en_WIDTH  (1U)
#define UMCTL2_MP_PCFGR_1_rdwr_ordered_en(x)     (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCFGR_1_rdwr_ordered_en_SHIFT)) & UMCTL2_MP_PCFGR_1_rdwr_ordered_en_MASK)
/*! @} */

/*! @name PCFGW_1 - Port n Configuration Write */
/*! @{ */
#define UMCTL2_MP_PCFGW_1_wr_port_priority_MASK  (0x3FFU)
#define UMCTL2_MP_PCFGW_1_wr_port_priority_SHIFT (0U)
#define UMCTL2_MP_PCFGW_1_wr_port_priority_WIDTH (10U)
#define UMCTL2_MP_PCFGW_1_wr_port_priority(x)    (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCFGW_1_wr_port_priority_SHIFT)) & UMCTL2_MP_PCFGW_1_wr_port_priority_MASK)
#define UMCTL2_MP_PCFGW_1_wr_port_aging_en_MASK  (0x1000U)
#define UMCTL2_MP_PCFGW_1_wr_port_aging_en_SHIFT (12U)
#define UMCTL2_MP_PCFGW_1_wr_port_aging_en_WIDTH (1U)
#define UMCTL2_MP_PCFGW_1_wr_port_aging_en(x)    (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCFGW_1_wr_port_aging_en_SHIFT)) & UMCTL2_MP_PCFGW_1_wr_port_aging_en_MASK)
#define UMCTL2_MP_PCFGW_1_wr_port_urgent_en_MASK (0x2000U)
#define UMCTL2_MP_PCFGW_1_wr_port_urgent_en_SHIFT (13U)
#define UMCTL2_MP_PCFGW_1_wr_port_urgent_en_WIDTH (1U)
#define UMCTL2_MP_PCFGW_1_wr_port_urgent_en(x)   (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCFGW_1_wr_port_urgent_en_SHIFT)) & UMCTL2_MP_PCFGW_1_wr_port_urgent_en_MASK)
#define UMCTL2_MP_PCFGW_1_wr_port_pagematch_en_MASK (0x4000U)
#define UMCTL2_MP_PCFGW_1_wr_port_pagematch_en_SHIFT (14U)
#define UMCTL2_MP_PCFGW_1_wr_port_pagematch_en_WIDTH (1U)
#define UMCTL2_MP_PCFGW_1_wr_port_pagematch_en(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCFGW_1_wr_port_pagematch_en_SHIFT)) & UMCTL2_MP_PCFGW_1_wr_port_pagematch_en_MASK)
/*! @} */

/*! @name PCTRL_1 - Port n Control */
/*! @{ */
#define UMCTL2_MP_PCTRL_1_port_en_MASK           (0x1U)
#define UMCTL2_MP_PCTRL_1_port_en_SHIFT          (0U)
#define UMCTL2_MP_PCTRL_1_port_en_WIDTH          (1U)
#define UMCTL2_MP_PCTRL_1_port_en(x)             (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCTRL_1_port_en_SHIFT)) & UMCTL2_MP_PCTRL_1_port_en_MASK)
/*! @} */

/*! @name PCFGQOS0_1 - Port n Read QoS Configuration Register 0 */
/*! @{ */
#define UMCTL2_MP_PCFGQOS0_1_rqos_map_level1_MASK (0xFU)
#define UMCTL2_MP_PCFGQOS0_1_rqos_map_level1_SHIFT (0U)
#define UMCTL2_MP_PCFGQOS0_1_rqos_map_level1_WIDTH (4U)
#define UMCTL2_MP_PCFGQOS0_1_rqos_map_level1(x)  (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCFGQOS0_1_rqos_map_level1_SHIFT)) & UMCTL2_MP_PCFGQOS0_1_rqos_map_level1_MASK)
#define UMCTL2_MP_PCFGQOS0_1_rqos_map_level2_MASK (0xF00U)
#define UMCTL2_MP_PCFGQOS0_1_rqos_map_level2_SHIFT (8U)
#define UMCTL2_MP_PCFGQOS0_1_rqos_map_level2_WIDTH (4U)
#define UMCTL2_MP_PCFGQOS0_1_rqos_map_level2(x)  (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCFGQOS0_1_rqos_map_level2_SHIFT)) & UMCTL2_MP_PCFGQOS0_1_rqos_map_level2_MASK)
#define UMCTL2_MP_PCFGQOS0_1_rqos_map_region0_MASK (0x30000U)
#define UMCTL2_MP_PCFGQOS0_1_rqos_map_region0_SHIFT (16U)
#define UMCTL2_MP_PCFGQOS0_1_rqos_map_region0_WIDTH (2U)
#define UMCTL2_MP_PCFGQOS0_1_rqos_map_region0(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCFGQOS0_1_rqos_map_region0_SHIFT)) & UMCTL2_MP_PCFGQOS0_1_rqos_map_region0_MASK)
#define UMCTL2_MP_PCFGQOS0_1_rqos_map_region1_MASK (0x300000U)
#define UMCTL2_MP_PCFGQOS0_1_rqos_map_region1_SHIFT (20U)
#define UMCTL2_MP_PCFGQOS0_1_rqos_map_region1_WIDTH (2U)
#define UMCTL2_MP_PCFGQOS0_1_rqos_map_region1(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCFGQOS0_1_rqos_map_region1_SHIFT)) & UMCTL2_MP_PCFGQOS0_1_rqos_map_region1_MASK)
#define UMCTL2_MP_PCFGQOS0_1_rqos_map_region2_MASK (0x3000000U)
#define UMCTL2_MP_PCFGQOS0_1_rqos_map_region2_SHIFT (24U)
#define UMCTL2_MP_PCFGQOS0_1_rqos_map_region2_WIDTH (2U)
#define UMCTL2_MP_PCFGQOS0_1_rqos_map_region2(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCFGQOS0_1_rqos_map_region2_SHIFT)) & UMCTL2_MP_PCFGQOS0_1_rqos_map_region2_MASK)
/*! @} */

/*! @name PCFGQOS1_1 - Port n Read QoS Configuration Register 1 */
/*! @{ */
#define UMCTL2_MP_PCFGQOS1_1_rqos_map_timeoutb_MASK (0x7FFU)
#define UMCTL2_MP_PCFGQOS1_1_rqos_map_timeoutb_SHIFT (0U)
#define UMCTL2_MP_PCFGQOS1_1_rqos_map_timeoutb_WIDTH (11U)
#define UMCTL2_MP_PCFGQOS1_1_rqos_map_timeoutb(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCFGQOS1_1_rqos_map_timeoutb_SHIFT)) & UMCTL2_MP_PCFGQOS1_1_rqos_map_timeoutb_MASK)
#define UMCTL2_MP_PCFGQOS1_1_rqos_map_timeoutr_MASK (0x7FF0000U)
#define UMCTL2_MP_PCFGQOS1_1_rqos_map_timeoutr_SHIFT (16U)
#define UMCTL2_MP_PCFGQOS1_1_rqos_map_timeoutr_WIDTH (11U)
#define UMCTL2_MP_PCFGQOS1_1_rqos_map_timeoutr(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCFGQOS1_1_rqos_map_timeoutr_SHIFT)) & UMCTL2_MP_PCFGQOS1_1_rqos_map_timeoutr_MASK)
/*! @} */

/*! @name PCFGWQOS0_1 - Port n Write QoS Configuration Register 0 */
/*! @{ */
#define UMCTL2_MP_PCFGWQOS0_1_wqos_map_level1_MASK (0xFU)
#define UMCTL2_MP_PCFGWQOS0_1_wqos_map_level1_SHIFT (0U)
#define UMCTL2_MP_PCFGWQOS0_1_wqos_map_level1_WIDTH (4U)
#define UMCTL2_MP_PCFGWQOS0_1_wqos_map_level1(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCFGWQOS0_1_wqos_map_level1_SHIFT)) & UMCTL2_MP_PCFGWQOS0_1_wqos_map_level1_MASK)
#define UMCTL2_MP_PCFGWQOS0_1_wqos_map_level2_MASK (0xF00U)
#define UMCTL2_MP_PCFGWQOS0_1_wqos_map_level2_SHIFT (8U)
#define UMCTL2_MP_PCFGWQOS0_1_wqos_map_level2_WIDTH (4U)
#define UMCTL2_MP_PCFGWQOS0_1_wqos_map_level2(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCFGWQOS0_1_wqos_map_level2_SHIFT)) & UMCTL2_MP_PCFGWQOS0_1_wqos_map_level2_MASK)
#define UMCTL2_MP_PCFGWQOS0_1_wqos_map_region0_MASK (0x30000U)
#define UMCTL2_MP_PCFGWQOS0_1_wqos_map_region0_SHIFT (16U)
#define UMCTL2_MP_PCFGWQOS0_1_wqos_map_region0_WIDTH (2U)
#define UMCTL2_MP_PCFGWQOS0_1_wqos_map_region0(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCFGWQOS0_1_wqos_map_region0_SHIFT)) & UMCTL2_MP_PCFGWQOS0_1_wqos_map_region0_MASK)
#define UMCTL2_MP_PCFGWQOS0_1_wqos_map_region1_MASK (0x300000U)
#define UMCTL2_MP_PCFGWQOS0_1_wqos_map_region1_SHIFT (20U)
#define UMCTL2_MP_PCFGWQOS0_1_wqos_map_region1_WIDTH (2U)
#define UMCTL2_MP_PCFGWQOS0_1_wqos_map_region1(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCFGWQOS0_1_wqos_map_region1_SHIFT)) & UMCTL2_MP_PCFGWQOS0_1_wqos_map_region1_MASK)
#define UMCTL2_MP_PCFGWQOS0_1_wqos_map_region2_MASK (0x3000000U)
#define UMCTL2_MP_PCFGWQOS0_1_wqos_map_region2_SHIFT (24U)
#define UMCTL2_MP_PCFGWQOS0_1_wqos_map_region2_WIDTH (2U)
#define UMCTL2_MP_PCFGWQOS0_1_wqos_map_region2(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCFGWQOS0_1_wqos_map_region2_SHIFT)) & UMCTL2_MP_PCFGWQOS0_1_wqos_map_region2_MASK)
/*! @} */

/*! @name PCFGWQOS1_1 - Port n Write QoS Configuration Register 1 */
/*! @{ */
#define UMCTL2_MP_PCFGWQOS1_1_wqos_map_timeout1_MASK (0x7FFU)
#define UMCTL2_MP_PCFGWQOS1_1_wqos_map_timeout1_SHIFT (0U)
#define UMCTL2_MP_PCFGWQOS1_1_wqos_map_timeout1_WIDTH (11U)
#define UMCTL2_MP_PCFGWQOS1_1_wqos_map_timeout1(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCFGWQOS1_1_wqos_map_timeout1_SHIFT)) & UMCTL2_MP_PCFGWQOS1_1_wqos_map_timeout1_MASK)
#define UMCTL2_MP_PCFGWQOS1_1_wqos_map_timeout2_MASK (0x7FF0000U)
#define UMCTL2_MP_PCFGWQOS1_1_wqos_map_timeout2_SHIFT (16U)
#define UMCTL2_MP_PCFGWQOS1_1_wqos_map_timeout2_WIDTH (11U)
#define UMCTL2_MP_PCFGWQOS1_1_wqos_map_timeout2(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCFGWQOS1_1_wqos_map_timeout2_SHIFT)) & UMCTL2_MP_PCFGWQOS1_1_wqos_map_timeout2_MASK)
/*! @} */

/*! @name PCFGR_2 - Port n Configuration Read */
/*! @{ */
#define UMCTL2_MP_PCFGR_2_rd_port_priority_MASK  (0x3FFU)
#define UMCTL2_MP_PCFGR_2_rd_port_priority_SHIFT (0U)
#define UMCTL2_MP_PCFGR_2_rd_port_priority_WIDTH (10U)
#define UMCTL2_MP_PCFGR_2_rd_port_priority(x)    (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCFGR_2_rd_port_priority_SHIFT)) & UMCTL2_MP_PCFGR_2_rd_port_priority_MASK)
#define UMCTL2_MP_PCFGR_2_rd_port_aging_en_MASK  (0x1000U)
#define UMCTL2_MP_PCFGR_2_rd_port_aging_en_SHIFT (12U)
#define UMCTL2_MP_PCFGR_2_rd_port_aging_en_WIDTH (1U)
#define UMCTL2_MP_PCFGR_2_rd_port_aging_en(x)    (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCFGR_2_rd_port_aging_en_SHIFT)) & UMCTL2_MP_PCFGR_2_rd_port_aging_en_MASK)
#define UMCTL2_MP_PCFGR_2_rd_port_urgent_en_MASK (0x2000U)
#define UMCTL2_MP_PCFGR_2_rd_port_urgent_en_SHIFT (13U)
#define UMCTL2_MP_PCFGR_2_rd_port_urgent_en_WIDTH (1U)
#define UMCTL2_MP_PCFGR_2_rd_port_urgent_en(x)   (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCFGR_2_rd_port_urgent_en_SHIFT)) & UMCTL2_MP_PCFGR_2_rd_port_urgent_en_MASK)
#define UMCTL2_MP_PCFGR_2_rd_port_pagematch_en_MASK (0x4000U)
#define UMCTL2_MP_PCFGR_2_rd_port_pagematch_en_SHIFT (14U)
#define UMCTL2_MP_PCFGR_2_rd_port_pagematch_en_WIDTH (1U)
#define UMCTL2_MP_PCFGR_2_rd_port_pagematch_en(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCFGR_2_rd_port_pagematch_en_SHIFT)) & UMCTL2_MP_PCFGR_2_rd_port_pagematch_en_MASK)
#define UMCTL2_MP_PCFGR_2_rdwr_ordered_en_MASK   (0x10000U)
#define UMCTL2_MP_PCFGR_2_rdwr_ordered_en_SHIFT  (16U)
#define UMCTL2_MP_PCFGR_2_rdwr_ordered_en_WIDTH  (1U)
#define UMCTL2_MP_PCFGR_2_rdwr_ordered_en(x)     (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCFGR_2_rdwr_ordered_en_SHIFT)) & UMCTL2_MP_PCFGR_2_rdwr_ordered_en_MASK)
/*! @} */

/*! @name PCFGW_2 - Port n Configuration Write */
/*! @{ */
#define UMCTL2_MP_PCFGW_2_wr_port_priority_MASK  (0x3FFU)
#define UMCTL2_MP_PCFGW_2_wr_port_priority_SHIFT (0U)
#define UMCTL2_MP_PCFGW_2_wr_port_priority_WIDTH (10U)
#define UMCTL2_MP_PCFGW_2_wr_port_priority(x)    (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCFGW_2_wr_port_priority_SHIFT)) & UMCTL2_MP_PCFGW_2_wr_port_priority_MASK)
#define UMCTL2_MP_PCFGW_2_wr_port_aging_en_MASK  (0x1000U)
#define UMCTL2_MP_PCFGW_2_wr_port_aging_en_SHIFT (12U)
#define UMCTL2_MP_PCFGW_2_wr_port_aging_en_WIDTH (1U)
#define UMCTL2_MP_PCFGW_2_wr_port_aging_en(x)    (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCFGW_2_wr_port_aging_en_SHIFT)) & UMCTL2_MP_PCFGW_2_wr_port_aging_en_MASK)
#define UMCTL2_MP_PCFGW_2_wr_port_urgent_en_MASK (0x2000U)
#define UMCTL2_MP_PCFGW_2_wr_port_urgent_en_SHIFT (13U)
#define UMCTL2_MP_PCFGW_2_wr_port_urgent_en_WIDTH (1U)
#define UMCTL2_MP_PCFGW_2_wr_port_urgent_en(x)   (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCFGW_2_wr_port_urgent_en_SHIFT)) & UMCTL2_MP_PCFGW_2_wr_port_urgent_en_MASK)
#define UMCTL2_MP_PCFGW_2_wr_port_pagematch_en_MASK (0x4000U)
#define UMCTL2_MP_PCFGW_2_wr_port_pagematch_en_SHIFT (14U)
#define UMCTL2_MP_PCFGW_2_wr_port_pagematch_en_WIDTH (1U)
#define UMCTL2_MP_PCFGW_2_wr_port_pagematch_en(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCFGW_2_wr_port_pagematch_en_SHIFT)) & UMCTL2_MP_PCFGW_2_wr_port_pagematch_en_MASK)
/*! @} */

/*! @name PCTRL_2 - Port n Control */
/*! @{ */
#define UMCTL2_MP_PCTRL_2_port_en_MASK           (0x1U)
#define UMCTL2_MP_PCTRL_2_port_en_SHIFT          (0U)
#define UMCTL2_MP_PCTRL_2_port_en_WIDTH          (1U)
#define UMCTL2_MP_PCTRL_2_port_en(x)             (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCTRL_2_port_en_SHIFT)) & UMCTL2_MP_PCTRL_2_port_en_MASK)
/*! @} */

/*! @name PCFGQOS0_2 - Port n Read QoS Configuration Register 0 */
/*! @{ */
#define UMCTL2_MP_PCFGQOS0_2_rqos_map_level1_MASK (0xFU)
#define UMCTL2_MP_PCFGQOS0_2_rqos_map_level1_SHIFT (0U)
#define UMCTL2_MP_PCFGQOS0_2_rqos_map_level1_WIDTH (4U)
#define UMCTL2_MP_PCFGQOS0_2_rqos_map_level1(x)  (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCFGQOS0_2_rqos_map_level1_SHIFT)) & UMCTL2_MP_PCFGQOS0_2_rqos_map_level1_MASK)
#define UMCTL2_MP_PCFGQOS0_2_rqos_map_level2_MASK (0xF00U)
#define UMCTL2_MP_PCFGQOS0_2_rqos_map_level2_SHIFT (8U)
#define UMCTL2_MP_PCFGQOS0_2_rqos_map_level2_WIDTH (4U)
#define UMCTL2_MP_PCFGQOS0_2_rqos_map_level2(x)  (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCFGQOS0_2_rqos_map_level2_SHIFT)) & UMCTL2_MP_PCFGQOS0_2_rqos_map_level2_MASK)
#define UMCTL2_MP_PCFGQOS0_2_rqos_map_region0_MASK (0x30000U)
#define UMCTL2_MP_PCFGQOS0_2_rqos_map_region0_SHIFT (16U)
#define UMCTL2_MP_PCFGQOS0_2_rqos_map_region0_WIDTH (2U)
#define UMCTL2_MP_PCFGQOS0_2_rqos_map_region0(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCFGQOS0_2_rqos_map_region0_SHIFT)) & UMCTL2_MP_PCFGQOS0_2_rqos_map_region0_MASK)
#define UMCTL2_MP_PCFGQOS0_2_rqos_map_region1_MASK (0x300000U)
#define UMCTL2_MP_PCFGQOS0_2_rqos_map_region1_SHIFT (20U)
#define UMCTL2_MP_PCFGQOS0_2_rqos_map_region1_WIDTH (2U)
#define UMCTL2_MP_PCFGQOS0_2_rqos_map_region1(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCFGQOS0_2_rqos_map_region1_SHIFT)) & UMCTL2_MP_PCFGQOS0_2_rqos_map_region1_MASK)
#define UMCTL2_MP_PCFGQOS0_2_rqos_map_region2_MASK (0x3000000U)
#define UMCTL2_MP_PCFGQOS0_2_rqos_map_region2_SHIFT (24U)
#define UMCTL2_MP_PCFGQOS0_2_rqos_map_region2_WIDTH (2U)
#define UMCTL2_MP_PCFGQOS0_2_rqos_map_region2(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCFGQOS0_2_rqos_map_region2_SHIFT)) & UMCTL2_MP_PCFGQOS0_2_rqos_map_region2_MASK)
/*! @} */

/*! @name PCFGQOS1_2 - Port n Read QoS Configuration Register 1 */
/*! @{ */
#define UMCTL2_MP_PCFGQOS1_2_rqos_map_timeoutb_MASK (0x7FFU)
#define UMCTL2_MP_PCFGQOS1_2_rqos_map_timeoutb_SHIFT (0U)
#define UMCTL2_MP_PCFGQOS1_2_rqos_map_timeoutb_WIDTH (11U)
#define UMCTL2_MP_PCFGQOS1_2_rqos_map_timeoutb(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCFGQOS1_2_rqos_map_timeoutb_SHIFT)) & UMCTL2_MP_PCFGQOS1_2_rqos_map_timeoutb_MASK)
#define UMCTL2_MP_PCFGQOS1_2_rqos_map_timeoutr_MASK (0x7FF0000U)
#define UMCTL2_MP_PCFGQOS1_2_rqos_map_timeoutr_SHIFT (16U)
#define UMCTL2_MP_PCFGQOS1_2_rqos_map_timeoutr_WIDTH (11U)
#define UMCTL2_MP_PCFGQOS1_2_rqos_map_timeoutr(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCFGQOS1_2_rqos_map_timeoutr_SHIFT)) & UMCTL2_MP_PCFGQOS1_2_rqos_map_timeoutr_MASK)
/*! @} */

/*! @name PCFGWQOS0_2 - Port n Write QoS Configuration Register 0 */
/*! @{ */
#define UMCTL2_MP_PCFGWQOS0_2_wqos_map_level1_MASK (0xFU)
#define UMCTL2_MP_PCFGWQOS0_2_wqos_map_level1_SHIFT (0U)
#define UMCTL2_MP_PCFGWQOS0_2_wqos_map_level1_WIDTH (4U)
#define UMCTL2_MP_PCFGWQOS0_2_wqos_map_level1(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCFGWQOS0_2_wqos_map_level1_SHIFT)) & UMCTL2_MP_PCFGWQOS0_2_wqos_map_level1_MASK)
#define UMCTL2_MP_PCFGWQOS0_2_wqos_map_level2_MASK (0xF00U)
#define UMCTL2_MP_PCFGWQOS0_2_wqos_map_level2_SHIFT (8U)
#define UMCTL2_MP_PCFGWQOS0_2_wqos_map_level2_WIDTH (4U)
#define UMCTL2_MP_PCFGWQOS0_2_wqos_map_level2(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCFGWQOS0_2_wqos_map_level2_SHIFT)) & UMCTL2_MP_PCFGWQOS0_2_wqos_map_level2_MASK)
#define UMCTL2_MP_PCFGWQOS0_2_wqos_map_region0_MASK (0x30000U)
#define UMCTL2_MP_PCFGWQOS0_2_wqos_map_region0_SHIFT (16U)
#define UMCTL2_MP_PCFGWQOS0_2_wqos_map_region0_WIDTH (2U)
#define UMCTL2_MP_PCFGWQOS0_2_wqos_map_region0(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCFGWQOS0_2_wqos_map_region0_SHIFT)) & UMCTL2_MP_PCFGWQOS0_2_wqos_map_region0_MASK)
#define UMCTL2_MP_PCFGWQOS0_2_wqos_map_region1_MASK (0x300000U)
#define UMCTL2_MP_PCFGWQOS0_2_wqos_map_region1_SHIFT (20U)
#define UMCTL2_MP_PCFGWQOS0_2_wqos_map_region1_WIDTH (2U)
#define UMCTL2_MP_PCFGWQOS0_2_wqos_map_region1(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCFGWQOS0_2_wqos_map_region1_SHIFT)) & UMCTL2_MP_PCFGWQOS0_2_wqos_map_region1_MASK)
#define UMCTL2_MP_PCFGWQOS0_2_wqos_map_region2_MASK (0x3000000U)
#define UMCTL2_MP_PCFGWQOS0_2_wqos_map_region2_SHIFT (24U)
#define UMCTL2_MP_PCFGWQOS0_2_wqos_map_region2_WIDTH (2U)
#define UMCTL2_MP_PCFGWQOS0_2_wqos_map_region2(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCFGWQOS0_2_wqos_map_region2_SHIFT)) & UMCTL2_MP_PCFGWQOS0_2_wqos_map_region2_MASK)
/*! @} */

/*! @name PCFGWQOS1_2 - Port n Write QoS Configuration Register 1 */
/*! @{ */
#define UMCTL2_MP_PCFGWQOS1_2_wqos_map_timeout1_MASK (0x7FFU)
#define UMCTL2_MP_PCFGWQOS1_2_wqos_map_timeout1_SHIFT (0U)
#define UMCTL2_MP_PCFGWQOS1_2_wqos_map_timeout1_WIDTH (11U)
#define UMCTL2_MP_PCFGWQOS1_2_wqos_map_timeout1(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCFGWQOS1_2_wqos_map_timeout1_SHIFT)) & UMCTL2_MP_PCFGWQOS1_2_wqos_map_timeout1_MASK)
#define UMCTL2_MP_PCFGWQOS1_2_wqos_map_timeout2_MASK (0x7FF0000U)
#define UMCTL2_MP_PCFGWQOS1_2_wqos_map_timeout2_SHIFT (16U)
#define UMCTL2_MP_PCFGWQOS1_2_wqos_map_timeout2_WIDTH (11U)
#define UMCTL2_MP_PCFGWQOS1_2_wqos_map_timeout2(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_PCFGWQOS1_2_wqos_map_timeout2_SHIFT)) & UMCTL2_MP_PCFGWQOS1_2_wqos_map_timeout2_MASK)
/*! @} */

/*! @name SBRCTL - Scrubber Control */
/*! @{ */
#define UMCTL2_MP_SBRCTL_scrub_en_MASK           (0x1U)
#define UMCTL2_MP_SBRCTL_scrub_en_SHIFT          (0U)
#define UMCTL2_MP_SBRCTL_scrub_en_WIDTH          (1U)
#define UMCTL2_MP_SBRCTL_scrub_en(x)             (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_SBRCTL_scrub_en_SHIFT)) & UMCTL2_MP_SBRCTL_scrub_en_MASK)
#define UMCTL2_MP_SBRCTL_scrub_during_lowpower_MASK (0x2U)
#define UMCTL2_MP_SBRCTL_scrub_during_lowpower_SHIFT (1U)
#define UMCTL2_MP_SBRCTL_scrub_during_lowpower_WIDTH (1U)
#define UMCTL2_MP_SBRCTL_scrub_during_lowpower(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_SBRCTL_scrub_during_lowpower_SHIFT)) & UMCTL2_MP_SBRCTL_scrub_during_lowpower_MASK)
#define UMCTL2_MP_SBRCTL_scrub_mode_MASK         (0x4U)
#define UMCTL2_MP_SBRCTL_scrub_mode_SHIFT        (2U)
#define UMCTL2_MP_SBRCTL_scrub_mode_WIDTH        (1U)
#define UMCTL2_MP_SBRCTL_scrub_mode(x)           (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_SBRCTL_scrub_mode_SHIFT)) & UMCTL2_MP_SBRCTL_scrub_mode_MASK)
#define UMCTL2_MP_SBRCTL_scrub_burst_MASK        (0x70U)
#define UMCTL2_MP_SBRCTL_scrub_burst_SHIFT       (4U)
#define UMCTL2_MP_SBRCTL_scrub_burst_WIDTH       (3U)
#define UMCTL2_MP_SBRCTL_scrub_burst(x)          (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_SBRCTL_scrub_burst_SHIFT)) & UMCTL2_MP_SBRCTL_scrub_burst_MASK)
#define UMCTL2_MP_SBRCTL_scrub_interval_MASK     (0x1FFF00U)
#define UMCTL2_MP_SBRCTL_scrub_interval_SHIFT    (8U)
#define UMCTL2_MP_SBRCTL_scrub_interval_WIDTH    (13U)
#define UMCTL2_MP_SBRCTL_scrub_interval(x)       (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_SBRCTL_scrub_interval_SHIFT)) & UMCTL2_MP_SBRCTL_scrub_interval_MASK)
/*! @} */

/*! @name SBRSTAT - Scrubber Status */
/*! @{ */
#define UMCTL2_MP_SBRSTAT_scrub_busy_MASK        (0x1U)
#define UMCTL2_MP_SBRSTAT_scrub_busy_SHIFT       (0U)
#define UMCTL2_MP_SBRSTAT_scrub_busy_WIDTH       (1U)
#define UMCTL2_MP_SBRSTAT_scrub_busy(x)          (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_SBRSTAT_scrub_busy_SHIFT)) & UMCTL2_MP_SBRSTAT_scrub_busy_MASK)
#define UMCTL2_MP_SBRSTAT_scrub_done_MASK        (0x2U)
#define UMCTL2_MP_SBRSTAT_scrub_done_SHIFT       (1U)
#define UMCTL2_MP_SBRSTAT_scrub_done_WIDTH       (1U)
#define UMCTL2_MP_SBRSTAT_scrub_done(x)          (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_SBRSTAT_scrub_done_SHIFT)) & UMCTL2_MP_SBRSTAT_scrub_done_MASK)
/*! @} */

/*! @name SBRWDATA0 - Scrubber Write Data Pattern0 */
/*! @{ */
#define UMCTL2_MP_SBRWDATA0_scrub_pattern0_MASK  (0xFFFFFFFFU)
#define UMCTL2_MP_SBRWDATA0_scrub_pattern0_SHIFT (0U)
#define UMCTL2_MP_SBRWDATA0_scrub_pattern0_WIDTH (32U)
#define UMCTL2_MP_SBRWDATA0_scrub_pattern0(x)    (((uint32_t)(((uint32_t)(x)) << UMCTL2_MP_SBRWDATA0_scrub_pattern0_SHIFT)) & UMCTL2_MP_SBRWDATA0_scrub_pattern0_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group UMCTL2_MP_Register_Masks */


/*!
 * @}
 */ /* end of group UMCTL2_MP_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- UMCTL2_REGS Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup UMCTL2_REGS_Peripheral_Access_Layer UMCTL2_REGS Peripheral Access Layer
 * @{
 */

/** UMCTL2_REGS - Register Layout Typedef */
typedef struct {
  __IO uint32_t MSTR;                              /**< Master, offset: 0x0 */
  __I  uint32_t STAT;                              /**< Operating mode status, offset: 0x4 */
  uint8_t RESERVED_0[8];
  __IO uint32_t MRCTRL0;                           /**< Mode Register read/write control 0, offset: 0x10 */
  __IO uint32_t MRCTRL1;                           /**< Mode Register Read/Write Control 1, offset: 0x14 */
  __I  uint32_t MRSTAT;                            /**< Mode Register Read/Write Status, offset: 0x18 */
  __IO uint32_t MRCTRL2;                           /**< Mode Register Read/Write Control 2, offset: 0x1C */
  __IO uint32_t DERATEEN;                          /**< Temperature derate enable, offset: 0x20 */
  __IO uint32_t DERATEINT;                         /**< Temperature derate interval, offset: 0x24 */
  uint8_t RESERVED_1[4];
  __IO uint32_t DERATECTL;                         /**< Temperature derate control, offset: 0x2C */
  __IO uint32_t PWRCTL;                            /**< Low power control, offset: 0x30 */
  __IO uint32_t PWRTMG;                            /**< Low Power Timing, offset: 0x34 */
  __IO uint32_t HWLPCTL;                           /**< Hardware low power control, offset: 0x38 */
  uint8_t RESERVED_2[20];
  __IO uint32_t RFSHCTL0;                          /**< Refresh Control 0, offset: 0x50 */
  __IO uint32_t RFSHCTL1;                          /**< Refresh control 1, offset: 0x54 */
  uint8_t RESERVED_3[8];
  __IO uint32_t RFSHCTL3;                          /**< Refresh Control 3, offset: 0x60 */
  __IO uint32_t RFSHTMG;                           /**< Refresh Timing, offset: 0x64 */
  __IO uint32_t RFSHTMG1;                          /**< Refresh timing 1, offset: 0x68 */
  uint8_t RESERVED_4[4];
  __IO uint32_t ECCCFG0;                           /**< ECC Configuration 0, offset: 0x70 */
  __IO uint32_t ECCCFG1;                           /**< ECC Configuration 1, offset: 0x74 */
  __I  uint32_t ECCSTAT;                           /**< SECDED ECC Status, offset: 0x78 */
  __IO uint32_t ECCCTL;                            /**< ECC Control, offset: 0x7C */
  __I  uint32_t ECCERRCNT;                         /**< ECC Error Counter, offset: 0x80 */
  __I  uint32_t ECCCADDR0;                         /**< ECC Corrected Error Address 0, offset: 0x84 */
  __I  uint32_t ECCCADDR1;                         /**< ECC Corrected Error Address 1, offset: 0x88 */
  __I  uint32_t ECCCSYN0;                          /**< ECC Corrected Syndrome 0, offset: 0x8C */
  __I  uint32_t ECCCSYN1;                          /**< ECC Corrected Syndrome 1, offset: 0x90 */
  __I  uint32_t ECCCSYN2;                          /**< ECC Corrected Syndrome 2, offset: 0x94 */
  __I  uint32_t ECCBITMASK0;                       /**< ECC Corrected Data Bit Mask 0, offset: 0x98 */
  __I  uint32_t ECCBITMASK1;                       /**< ECC Corrected Data Bit Mask 1, offset: 0x9C */
  __I  uint32_t ECCBITMASK2;                       /**< ECC Corrected Data Bit Mask 2, offset: 0xA0 */
  __I  uint32_t ECCUADDR0;                         /**< ECC Uncorrected Error Address 0, offset: 0xA4 */
  __I  uint32_t ECCUADDR1;                         /**< ECC Uncorrected Error Address 1, offset: 0xA8 */
  __I  uint32_t ECCUSYN0;                          /**< ECC Uncorrected Syndrome 0, offset: 0xAC */
  __I  uint32_t ECCUSYN1;                          /**< ECC Uncorrected Syndrome 1, offset: 0xB0 */
  __I  uint32_t ECCUSYN2;                          /**< ECC Uncorrected Syndrome 2, offset: 0xB4 */
  __IO uint32_t ECCPOISONADDR0;                    /**< ECC Data Poisoning Address 0, offset: 0xB8 */
  __IO uint32_t ECCPOISONADDR1;                    /**< ECC Data Poisoning Address 1, offset: 0xBC */
  __IO uint32_t CRCPARCTL0;                        /**< CRC Parity Control 0, offset: 0xC0 */
  __IO uint32_t CRCPARCTL1;                        /**< CRC Parity Control 1, offset: 0xC4 */
  uint8_t RESERVED_5[4];
  __I  uint32_t CRCPARSTAT;                        /**< CRC Parity Status, offset: 0xCC */
  __IO uint32_t INIT0;                             /**< DRAM Initialization 0, offset: 0xD0 */
  __IO uint32_t INIT1;                             /**< DRAM Initialization 1, offset: 0xD4 */
  __IO uint32_t INIT2;                             /**< DRAM Initialization 2, offset: 0xD8 */
  __IO uint32_t INIT3;                             /**< DRAM Initialization 3, offset: 0xDC */
  __IO uint32_t INIT4;                             /**< DRAM Initialization 4, offset: 0xE0 */
  __IO uint32_t INIT5;                             /**< DRAM Initialization 5, offset: 0xE4 */
  __IO uint32_t INIT6;                             /**< DRAM Initialization 6, offset: 0xE8 */
  __IO uint32_t INIT7;                             /**< DRAM Initialization 7, offset: 0xEC */
  __IO uint32_t DIMMCTL;                           /**< DIMM Control, offset: 0xF0 */
  __IO uint32_t RANKCTL;                           /**< Rank Control, offset: 0xF4 */
  uint8_t RESERVED_6[8];
  __IO uint32_t DRAMTMG0;                          /**< DRAM Timing 0, offset: 0x100 */
  __IO uint32_t DRAMTMG1;                          /**< DRAM Timing 1, offset: 0x104 */
  __IO uint32_t DRAMTMG2;                          /**< DRAM Timing 2, offset: 0x108 */
  __IO uint32_t DRAMTMG3;                          /**< DRAM Timing 3, offset: 0x10C */
  __IO uint32_t DRAMTMG4;                          /**< DRAM Timing 4, offset: 0x110 */
  __IO uint32_t DRAMTMG5;                          /**< DRAM Timing 5, offset: 0x114 */
  __IO uint32_t DRAMTMG6;                          /**< DRAM Timing 6, offset: 0x118 */
  __IO uint32_t DRAMTMG7;                          /**< DRAM Timing 7, offset: 0x11C */
  __IO uint32_t DRAMTMG8;                          /**< DRAM Timing 8, offset: 0x120 */
  __IO uint32_t DRAMTMG9;                          /**< DRAM Timing 9, offset: 0x124 */
  __IO uint32_t DRAMTMG10;                         /**< DRAM Timing 10, offset: 0x128 */
  __IO uint32_t DRAMTMG11;                         /**< DRAM Timing 11, offset: 0x12C */
  __IO uint32_t DRAMTMG12;                         /**< DRAM Timing 12, offset: 0x130 */
  __IO uint32_t DRAMTMG13;                         /**< DRAM Timing 13, offset: 0x134 */
  __IO uint32_t DRAMTMG14;                         /**< DRAM Timing 14, offset: 0x138 */
  __IO uint32_t DRAMTMG15;                         /**< DRAM Timing 15, offset: 0x13C */
  uint8_t RESERVED_7[64];
  __IO uint32_t ZQCTL0;                            /**< ZQ Control 0, offset: 0x180 */
  __IO uint32_t ZQCTL1;                            /**< ZQ Control 1, offset: 0x184 */
  __IO uint32_t ZQCTL2;                            /**< ZQ Control 2, offset: 0x188 */
  __I  uint32_t ZQSTAT;                            /**< ZQ Status, offset: 0x18C */
  __IO uint32_t DFITMG0;                           /**< DFI Timing 0, offset: 0x190 */
  __IO uint32_t DFITMG1;                           /**< DFI Timing 1, offset: 0x194 */
  __IO uint32_t DFILPCFG0;                         /**< DFI Low Power Configuration 0, offset: 0x198 */
  __IO uint32_t DFILPCFG1;                         /**< DFI Low Power Configuration 1, offset: 0x19C */
  __IO uint32_t DFIUPD0;                           /**< DFI Update 0, offset: 0x1A0 */
  __IO uint32_t DFIUPD1;                           /**< DFI Update 1, offset: 0x1A4 */
  __IO uint32_t DFIUPD2;                           /**< DFI Update 2, offset: 0x1A8 */
  uint8_t RESERVED_8[4];
  __IO uint32_t DFIMISC;                           /**< DFI Miscellaneous Control, offset: 0x1B0 */
  __IO uint32_t DFITMG2;                           /**< DFI Timing 2, offset: 0x1B4 */
  __IO uint32_t DFITMG3;                           /**< DFI Timing 3, offset: 0x1B8 */
  __I  uint32_t DFISTAT;                           /**< DFI Status, offset: 0x1BC */
  __IO uint32_t DBICTL;                            /**< DM/DBI Control, offset: 0x1C0 */
  __IO uint32_t DFIPHYMSTR;                        /**< DFI PHY Master, offset: 0x1C4 */
  uint8_t RESERVED_9[56];
  __IO uint32_t ADDRMAP0;                          /**< Address Map 0, offset: 0x200 */
  __IO uint32_t ADDRMAP1;                          /**< Address Map 1, offset: 0x204 */
  __IO uint32_t ADDRMAP2;                          /**< Address Map 2, offset: 0x208 */
  __IO uint32_t ADDRMAP3;                          /**< Address Map 3, offset: 0x20C */
  __IO uint32_t ADDRMAP4;                          /**< Address Map 4, offset: 0x210 */
  __IO uint32_t ADDRMAP5;                          /**< Address Map 5, offset: 0x214 */
  __IO uint32_t ADDRMAP6;                          /**< Address Map 6, offset: 0x218 */
  __IO uint32_t ADDRMAP7;                          /**< Address Map 7, offset: 0x21C */
  __IO uint32_t ADDRMAP8;                          /**< Address Map 8, offset: 0x220 */
  __IO uint32_t ADDRMAP9;                          /**< Address Map 9, offset: 0x224 */
  __IO uint32_t ADDRMAP10;                         /**< Address Map 10, offset: 0x228 */
  __IO uint32_t ADDRMAP11;                         /**< Address Map 11, offset: 0x22C */
  uint8_t RESERVED_10[16];
  __IO uint32_t ODTCFG;                            /**< ODT Configuration, offset: 0x240 */
  __IO uint32_t ODTMAP;                            /**< ODT/Rank Map, offset: 0x244 */
  uint8_t RESERVED_11[8];
  __IO uint32_t SCHED;                             /**< Scheduler Control, offset: 0x250 */
  __IO uint32_t SCHED1;                            /**< Scheduler Control 1, offset: 0x254 */
  uint8_t RESERVED_12[4];
  __IO uint32_t PERFHPR1;                          /**< High Priority Read CAM 1, offset: 0x25C */
  uint8_t RESERVED_13[4];
  __IO uint32_t PERFLPR1;                          /**< Low Priority Read CAM 1, offset: 0x264 */
  uint8_t RESERVED_14[4];
  __IO uint32_t PERFWR1;                           /**< Write CAM 1, offset: 0x26C */
  uint8_t RESERVED_15[144];
  __IO uint32_t DBG0;                              /**< Debug 0, offset: 0x300 */
  __IO uint32_t DBG1;                              /**< Debug 1, offset: 0x304 */
  __I  uint32_t DBGCAM;                            /**< CAM Debug, offset: 0x308 */
  __IO uint32_t DBGCMD;                            /**< Command Debug, offset: 0x30C */
  __I  uint32_t DBGSTAT;                           /**< Status Debug, offset: 0x310 */
  uint8_t RESERVED_16[4];
  __I  uint32_t DBGCAM1;                           /**< CAM Debug 1, offset: 0x318 */
  uint8_t RESERVED_17[4];
  __IO uint32_t SWCTL;                             /**< Software Register Programming Control Enable, offset: 0x320 */
  __I  uint32_t SWSTAT;                            /**< Software Register Programming Control Status, offset: 0x324 */
  uint8_t RESERVED_18[8];
  __IO uint32_t OCPARCFG0;                         /**< On-Chip Parity Configuration 0, offset: 0x330 */
  __IO uint32_t OCPARCFG1;                         /**< On-Chip Parity Configuration 1, offset: 0x334 */
  __I  uint32_t OCPARSTAT0;                        /**< On-Chip Parity Status 0, offset: 0x338 */
  __I  uint32_t OCPARSTAT1;                        /**< On-Chip Parity Status 1, offset: 0x33C */
  __I  uint32_t OCPARSTAT2;                        /**< On-Chip Parity Status 2, offset: 0x340 */
  uint8_t RESERVED_19[40];
  __IO uint32_t POISONCFG;                         /**< AXI Poison Configuration, offset: 0x36C */
  __I  uint32_t POISONSTAT;                        /**< AXI Poison Status, offset: 0x370 */
  __IO uint32_t ADVECCINDEX;                       /**< Advanced ECC Index, offset: 0x374 */
  uint8_t RESERVED_20[4];
  __IO uint32_t ECCPOISONPAT0;                     /**< ECC Poison Pattern 0, offset: 0x37C */
  uint8_t RESERVED_21[4];
  __IO uint32_t ECCPOISONPAT2;                     /**< ECC Poison Pattern 2, offset: 0x384 */
  __I  uint32_t ECCAPSTAT;                         /**< Address protection within ECC Status, offset: 0x388 */
  uint8_t RESERVED_22[52];
  __IO uint32_t REGPARCFG;                         /**< Register Parity Configuration, offset: 0x3C0 */
  __I  uint32_t REGPARSTAT;                        /**< Register Parity Status, offset: 0x3C4 */
  uint8_t RESERVED_23[24];
  __IO uint32_t OCCAPCFG;                          /**< On-Chip command/Address Protection Configuration, offset: 0x3E0 */
  __I  uint32_t OCCAPSTAT;                         /**< On-Chip command/Address Protection Status, offset: 0x3E4 */
  __IO uint32_t OCCAPCFG1;                         /**< On-Chip command/Address Protection Configuration 1, offset: 0x3E8 */
  __I  uint32_t OCCAPSTAT1;                        /**< On-Chip command/Address Protection Status 1, offset: 0x3EC */
  __I  uint32_t DERATESTAT;                        /**< Temperature Derate Status, offset: 0x3F0 */
} UMCTL2_REGS_Type, *UMCTL2_REGS_MemMapPtr;

/** Number of instances of the UMCTL2_REGS module. */
#define UMCTL2_REGS_INSTANCE_COUNT               (1u)

/* UMCTL2_REGS - Peripheral instance base addresses */
/** Peripheral UMCTL2_REGS base address */
#define UMCTL2_REGS_BASE                         (0x403C0000u)
/** Peripheral UMCTL2_REGS base pointer */
#define UMCTL2_REGS                              ((UMCTL2_REGS_Type *)UMCTL2_REGS_BASE)
/** Array initializer of UMCTL2_REGS peripheral base addresses */
#define UMCTL2_REGS_BASE_ADDRS                   { UMCTL2_REGS_BASE }
/** Array initializer of UMCTL2_REGS peripheral base pointers */
#define UMCTL2_REGS_BASE_PTRS                    { UMCTL2_REGS }

/* ----------------------------------------------------------------------------
   -- UMCTL2_REGS Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup UMCTL2_REGS_Register_Masks UMCTL2_REGS Register Masks
 * @{
 */

/*! @name MSTR - Master */
/*! @{ */
#define UMCTL2_REGS_MSTR_ddr3_MASK               (0x1U)
#define UMCTL2_REGS_MSTR_ddr3_SHIFT              (0U)
#define UMCTL2_REGS_MSTR_ddr3_WIDTH              (1U)
#define UMCTL2_REGS_MSTR_ddr3(x)                 (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_MSTR_ddr3_SHIFT)) & UMCTL2_REGS_MSTR_ddr3_MASK)
#define UMCTL2_REGS_MSTR_lpddr2_MASK             (0x4U)
#define UMCTL2_REGS_MSTR_lpddr2_SHIFT            (2U)
#define UMCTL2_REGS_MSTR_lpddr2_WIDTH            (1U)
#define UMCTL2_REGS_MSTR_lpddr2(x)               (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_MSTR_lpddr2_SHIFT)) & UMCTL2_REGS_MSTR_lpddr2_MASK)
#define UMCTL2_REGS_MSTR_lpddr3_MASK             (0x8U)
#define UMCTL2_REGS_MSTR_lpddr3_SHIFT            (3U)
#define UMCTL2_REGS_MSTR_lpddr3_WIDTH            (1U)
#define UMCTL2_REGS_MSTR_lpddr3(x)               (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_MSTR_lpddr3_SHIFT)) & UMCTL2_REGS_MSTR_lpddr3_MASK)
#define UMCTL2_REGS_MSTR_ddr4_MASK               (0x10U)
#define UMCTL2_REGS_MSTR_ddr4_SHIFT              (4U)
#define UMCTL2_REGS_MSTR_ddr4_WIDTH              (1U)
#define UMCTL2_REGS_MSTR_ddr4(x)                 (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_MSTR_ddr4_SHIFT)) & UMCTL2_REGS_MSTR_ddr4_MASK)
#define UMCTL2_REGS_MSTR_lpddr4_MASK             (0x20U)
#define UMCTL2_REGS_MSTR_lpddr4_SHIFT            (5U)
#define UMCTL2_REGS_MSTR_lpddr4_WIDTH            (1U)
#define UMCTL2_REGS_MSTR_lpddr4(x)               (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_MSTR_lpddr4_SHIFT)) & UMCTL2_REGS_MSTR_lpddr4_MASK)
#define UMCTL2_REGS_MSTR_burstchop_MASK          (0x200U)
#define UMCTL2_REGS_MSTR_burstchop_SHIFT         (9U)
#define UMCTL2_REGS_MSTR_burstchop_WIDTH         (1U)
#define UMCTL2_REGS_MSTR_burstchop(x)            (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_MSTR_burstchop_SHIFT)) & UMCTL2_REGS_MSTR_burstchop_MASK)
#define UMCTL2_REGS_MSTR_en_2t_timing_mode_MASK  (0x400U)
#define UMCTL2_REGS_MSTR_en_2t_timing_mode_SHIFT (10U)
#define UMCTL2_REGS_MSTR_en_2t_timing_mode_WIDTH (1U)
#define UMCTL2_REGS_MSTR_en_2t_timing_mode(x)    (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_MSTR_en_2t_timing_mode_SHIFT)) & UMCTL2_REGS_MSTR_en_2t_timing_mode_MASK)
#define UMCTL2_REGS_MSTR_geardown_mode_MASK      (0x800U)
#define UMCTL2_REGS_MSTR_geardown_mode_SHIFT     (11U)
#define UMCTL2_REGS_MSTR_geardown_mode_WIDTH     (1U)
#define UMCTL2_REGS_MSTR_geardown_mode(x)        (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_MSTR_geardown_mode_SHIFT)) & UMCTL2_REGS_MSTR_geardown_mode_MASK)
#define UMCTL2_REGS_MSTR_data_bus_width_MASK     (0x3000U)
#define UMCTL2_REGS_MSTR_data_bus_width_SHIFT    (12U)
#define UMCTL2_REGS_MSTR_data_bus_width_WIDTH    (2U)
#define UMCTL2_REGS_MSTR_data_bus_width(x)       (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_MSTR_data_bus_width_SHIFT)) & UMCTL2_REGS_MSTR_data_bus_width_MASK)
#define UMCTL2_REGS_MSTR_dll_off_mode_MASK       (0x8000U)
#define UMCTL2_REGS_MSTR_dll_off_mode_SHIFT      (15U)
#define UMCTL2_REGS_MSTR_dll_off_mode_WIDTH      (1U)
#define UMCTL2_REGS_MSTR_dll_off_mode(x)         (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_MSTR_dll_off_mode_SHIFT)) & UMCTL2_REGS_MSTR_dll_off_mode_MASK)
#define UMCTL2_REGS_MSTR_burst_rdwr_MASK         (0xF0000U)
#define UMCTL2_REGS_MSTR_burst_rdwr_SHIFT        (16U)
#define UMCTL2_REGS_MSTR_burst_rdwr_WIDTH        (4U)
#define UMCTL2_REGS_MSTR_burst_rdwr(x)           (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_MSTR_burst_rdwr_SHIFT)) & UMCTL2_REGS_MSTR_burst_rdwr_MASK)
#define UMCTL2_REGS_MSTR_active_ranks_MASK       (0xF000000U)
#define UMCTL2_REGS_MSTR_active_ranks_SHIFT      (24U)
#define UMCTL2_REGS_MSTR_active_ranks_WIDTH      (4U)
#define UMCTL2_REGS_MSTR_active_ranks(x)         (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_MSTR_active_ranks_SHIFT)) & UMCTL2_REGS_MSTR_active_ranks_MASK)
#define UMCTL2_REGS_MSTR_device_config_MASK      (0xC0000000U)
#define UMCTL2_REGS_MSTR_device_config_SHIFT     (30U)
#define UMCTL2_REGS_MSTR_device_config_WIDTH     (2U)
#define UMCTL2_REGS_MSTR_device_config(x)        (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_MSTR_device_config_SHIFT)) & UMCTL2_REGS_MSTR_device_config_MASK)
/*! @} */

/*! @name STAT - Operating mode status */
/*! @{ */
#define UMCTL2_REGS_STAT_operating_mode_MASK     (0x7U)
#define UMCTL2_REGS_STAT_operating_mode_SHIFT    (0U)
#define UMCTL2_REGS_STAT_operating_mode_WIDTH    (3U)
#define UMCTL2_REGS_STAT_operating_mode(x)       (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_STAT_operating_mode_SHIFT)) & UMCTL2_REGS_STAT_operating_mode_MASK)
#define UMCTL2_REGS_STAT_selfref_type_MASK       (0x30U)
#define UMCTL2_REGS_STAT_selfref_type_SHIFT      (4U)
#define UMCTL2_REGS_STAT_selfref_type_WIDTH      (2U)
#define UMCTL2_REGS_STAT_selfref_type(x)         (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_STAT_selfref_type_SHIFT)) & UMCTL2_REGS_STAT_selfref_type_MASK)
#define UMCTL2_REGS_STAT_selfref_state_MASK      (0x300U)
#define UMCTL2_REGS_STAT_selfref_state_SHIFT     (8U)
#define UMCTL2_REGS_STAT_selfref_state_WIDTH     (2U)
#define UMCTL2_REGS_STAT_selfref_state(x)        (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_STAT_selfref_state_SHIFT)) & UMCTL2_REGS_STAT_selfref_state_MASK)
#define UMCTL2_REGS_STAT_selfref_cam_not_empty_MASK (0x1000U)
#define UMCTL2_REGS_STAT_selfref_cam_not_empty_SHIFT (12U)
#define UMCTL2_REGS_STAT_selfref_cam_not_empty_WIDTH (1U)
#define UMCTL2_REGS_STAT_selfref_cam_not_empty(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_STAT_selfref_cam_not_empty_SHIFT)) & UMCTL2_REGS_STAT_selfref_cam_not_empty_MASK)
/*! @} */

/*! @name MRCTRL0 - Mode Register read/write control 0 */
/*! @{ */
#define UMCTL2_REGS_MRCTRL0_mr_type_MASK         (0x1U)
#define UMCTL2_REGS_MRCTRL0_mr_type_SHIFT        (0U)
#define UMCTL2_REGS_MRCTRL0_mr_type_WIDTH        (1U)
#define UMCTL2_REGS_MRCTRL0_mr_type(x)           (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_MRCTRL0_mr_type_SHIFT)) & UMCTL2_REGS_MRCTRL0_mr_type_MASK)
#define UMCTL2_REGS_MRCTRL0_mpr_en_MASK          (0x2U)
#define UMCTL2_REGS_MRCTRL0_mpr_en_SHIFT         (1U)
#define UMCTL2_REGS_MRCTRL0_mpr_en_WIDTH         (1U)
#define UMCTL2_REGS_MRCTRL0_mpr_en(x)            (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_MRCTRL0_mpr_en_SHIFT)) & UMCTL2_REGS_MRCTRL0_mpr_en_MASK)
#define UMCTL2_REGS_MRCTRL0_pda_en_MASK          (0x4U)
#define UMCTL2_REGS_MRCTRL0_pda_en_SHIFT         (2U)
#define UMCTL2_REGS_MRCTRL0_pda_en_WIDTH         (1U)
#define UMCTL2_REGS_MRCTRL0_pda_en(x)            (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_MRCTRL0_pda_en_SHIFT)) & UMCTL2_REGS_MRCTRL0_pda_en_MASK)
#define UMCTL2_REGS_MRCTRL0_sw_init_int_MASK     (0x8U)
#define UMCTL2_REGS_MRCTRL0_sw_init_int_SHIFT    (3U)
#define UMCTL2_REGS_MRCTRL0_sw_init_int_WIDTH    (1U)
#define UMCTL2_REGS_MRCTRL0_sw_init_int(x)       (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_MRCTRL0_sw_init_int_SHIFT)) & UMCTL2_REGS_MRCTRL0_sw_init_int_MASK)
#define UMCTL2_REGS_MRCTRL0_mr_rank_MASK         (0x30U)
#define UMCTL2_REGS_MRCTRL0_mr_rank_SHIFT        (4U)
#define UMCTL2_REGS_MRCTRL0_mr_rank_WIDTH        (2U)
#define UMCTL2_REGS_MRCTRL0_mr_rank(x)           (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_MRCTRL0_mr_rank_SHIFT)) & UMCTL2_REGS_MRCTRL0_mr_rank_MASK)
#define UMCTL2_REGS_MRCTRL0_mr_addr_MASK         (0xF000U)
#define UMCTL2_REGS_MRCTRL0_mr_addr_SHIFT        (12U)
#define UMCTL2_REGS_MRCTRL0_mr_addr_WIDTH        (4U)
#define UMCTL2_REGS_MRCTRL0_mr_addr(x)           (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_MRCTRL0_mr_addr_SHIFT)) & UMCTL2_REGS_MRCTRL0_mr_addr_MASK)
#define UMCTL2_REGS_MRCTRL0_pba_mode_MASK        (0x40000000U)
#define UMCTL2_REGS_MRCTRL0_pba_mode_SHIFT       (30U)
#define UMCTL2_REGS_MRCTRL0_pba_mode_WIDTH       (1U)
#define UMCTL2_REGS_MRCTRL0_pba_mode(x)          (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_MRCTRL0_pba_mode_SHIFT)) & UMCTL2_REGS_MRCTRL0_pba_mode_MASK)
#define UMCTL2_REGS_MRCTRL0_mr_wr_MASK           (0x80000000U)
#define UMCTL2_REGS_MRCTRL0_mr_wr_SHIFT          (31U)
#define UMCTL2_REGS_MRCTRL0_mr_wr_WIDTH          (1U)
#define UMCTL2_REGS_MRCTRL0_mr_wr(x)             (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_MRCTRL0_mr_wr_SHIFT)) & UMCTL2_REGS_MRCTRL0_mr_wr_MASK)
/*! @} */

/*! @name MRCTRL1 - Mode Register Read/Write Control 1 */
/*! @{ */
#define UMCTL2_REGS_MRCTRL1_mr_data_MASK         (0x3FFFFU)
#define UMCTL2_REGS_MRCTRL1_mr_data_SHIFT        (0U)
#define UMCTL2_REGS_MRCTRL1_mr_data_WIDTH        (18U)
#define UMCTL2_REGS_MRCTRL1_mr_data(x)           (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_MRCTRL1_mr_data_SHIFT)) & UMCTL2_REGS_MRCTRL1_mr_data_MASK)
/*! @} */

/*! @name MRSTAT - Mode Register Read/Write Status */
/*! @{ */
#define UMCTL2_REGS_MRSTAT_mr_wr_busy_MASK       (0x1U)
#define UMCTL2_REGS_MRSTAT_mr_wr_busy_SHIFT      (0U)
#define UMCTL2_REGS_MRSTAT_mr_wr_busy_WIDTH      (1U)
#define UMCTL2_REGS_MRSTAT_mr_wr_busy(x)         (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_MRSTAT_mr_wr_busy_SHIFT)) & UMCTL2_REGS_MRSTAT_mr_wr_busy_MASK)
#define UMCTL2_REGS_MRSTAT_pda_done_MASK         (0x100U)
#define UMCTL2_REGS_MRSTAT_pda_done_SHIFT        (8U)
#define UMCTL2_REGS_MRSTAT_pda_done_WIDTH        (1U)
#define UMCTL2_REGS_MRSTAT_pda_done(x)           (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_MRSTAT_pda_done_SHIFT)) & UMCTL2_REGS_MRSTAT_pda_done_MASK)
/*! @} */

/*! @name MRCTRL2 - Mode Register Read/Write Control 2 */
/*! @{ */
#define UMCTL2_REGS_MRCTRL2_mr_device_sel_MASK   (0xFFFFFFFFU)
#define UMCTL2_REGS_MRCTRL2_mr_device_sel_SHIFT  (0U)
#define UMCTL2_REGS_MRCTRL2_mr_device_sel_WIDTH  (32U)
#define UMCTL2_REGS_MRCTRL2_mr_device_sel(x)     (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_MRCTRL2_mr_device_sel_SHIFT)) & UMCTL2_REGS_MRCTRL2_mr_device_sel_MASK)
/*! @} */

/*! @name DERATEEN - Temperature derate enable */
/*! @{ */
#define UMCTL2_REGS_DERATEEN_derate_enable_MASK  (0x1U)
#define UMCTL2_REGS_DERATEEN_derate_enable_SHIFT (0U)
#define UMCTL2_REGS_DERATEEN_derate_enable_WIDTH (1U)
#define UMCTL2_REGS_DERATEEN_derate_enable(x)    (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DERATEEN_derate_enable_SHIFT)) & UMCTL2_REGS_DERATEEN_derate_enable_MASK)
#define UMCTL2_REGS_DERATEEN_derate_value_MASK   (0x6U)
#define UMCTL2_REGS_DERATEEN_derate_value_SHIFT  (1U)
#define UMCTL2_REGS_DERATEEN_derate_value_WIDTH  (2U)
#define UMCTL2_REGS_DERATEEN_derate_value(x)     (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DERATEEN_derate_value_SHIFT)) & UMCTL2_REGS_DERATEEN_derate_value_MASK)
#define UMCTL2_REGS_DERATEEN_derate_byte_MASK    (0xF0U)
#define UMCTL2_REGS_DERATEEN_derate_byte_SHIFT   (4U)
#define UMCTL2_REGS_DERATEEN_derate_byte_WIDTH   (4U)
#define UMCTL2_REGS_DERATEEN_derate_byte(x)      (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DERATEEN_derate_byte_SHIFT)) & UMCTL2_REGS_DERATEEN_derate_byte_MASK)
#define UMCTL2_REGS_DERATEEN_rc_derate_value_MASK (0x700U)
#define UMCTL2_REGS_DERATEEN_rc_derate_value_SHIFT (8U)
#define UMCTL2_REGS_DERATEEN_rc_derate_value_WIDTH (3U)
#define UMCTL2_REGS_DERATEEN_rc_derate_value(x)  (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DERATEEN_rc_derate_value_SHIFT)) & UMCTL2_REGS_DERATEEN_rc_derate_value_MASK)
/*! @} */

/*! @name DERATEINT - Temperature derate interval */
/*! @{ */
#define UMCTL2_REGS_DERATEINT_mr4_read_interval_MASK (0xFFFFFFFFU)
#define UMCTL2_REGS_DERATEINT_mr4_read_interval_SHIFT (0U)
#define UMCTL2_REGS_DERATEINT_mr4_read_interval_WIDTH (32U)
#define UMCTL2_REGS_DERATEINT_mr4_read_interval(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DERATEINT_mr4_read_interval_SHIFT)) & UMCTL2_REGS_DERATEINT_mr4_read_interval_MASK)
/*! @} */

/*! @name DERATECTL - Temperature derate control */
/*! @{ */
#define UMCTL2_REGS_DERATECTL_derate_temp_limit_intr_en_MASK (0x1U)
#define UMCTL2_REGS_DERATECTL_derate_temp_limit_intr_en_SHIFT (0U)
#define UMCTL2_REGS_DERATECTL_derate_temp_limit_intr_en_WIDTH (1U)
#define UMCTL2_REGS_DERATECTL_derate_temp_limit_intr_en(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DERATECTL_derate_temp_limit_intr_en_SHIFT)) & UMCTL2_REGS_DERATECTL_derate_temp_limit_intr_en_MASK)
#define UMCTL2_REGS_DERATECTL_derate_temp_limit_intr_clr_MASK (0x2U)
#define UMCTL2_REGS_DERATECTL_derate_temp_limit_intr_clr_SHIFT (1U)
#define UMCTL2_REGS_DERATECTL_derate_temp_limit_intr_clr_WIDTH (1U)
#define UMCTL2_REGS_DERATECTL_derate_temp_limit_intr_clr(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DERATECTL_derate_temp_limit_intr_clr_SHIFT)) & UMCTL2_REGS_DERATECTL_derate_temp_limit_intr_clr_MASK)
#define UMCTL2_REGS_DERATECTL_derate_temp_limit_intr_force_MASK (0x4U)
#define UMCTL2_REGS_DERATECTL_derate_temp_limit_intr_force_SHIFT (2U)
#define UMCTL2_REGS_DERATECTL_derate_temp_limit_intr_force_WIDTH (1U)
#define UMCTL2_REGS_DERATECTL_derate_temp_limit_intr_force(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DERATECTL_derate_temp_limit_intr_force_SHIFT)) & UMCTL2_REGS_DERATECTL_derate_temp_limit_intr_force_MASK)
/*! @} */

/*! @name PWRCTL - Low power control */
/*! @{ */
#define UMCTL2_REGS_PWRCTL_selfref_en_MASK       (0x1U)
#define UMCTL2_REGS_PWRCTL_selfref_en_SHIFT      (0U)
#define UMCTL2_REGS_PWRCTL_selfref_en_WIDTH      (1U)
#define UMCTL2_REGS_PWRCTL_selfref_en(x)         (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_PWRCTL_selfref_en_SHIFT)) & UMCTL2_REGS_PWRCTL_selfref_en_MASK)
#define UMCTL2_REGS_PWRCTL_powerdown_en_MASK     (0x2U)
#define UMCTL2_REGS_PWRCTL_powerdown_en_SHIFT    (1U)
#define UMCTL2_REGS_PWRCTL_powerdown_en_WIDTH    (1U)
#define UMCTL2_REGS_PWRCTL_powerdown_en(x)       (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_PWRCTL_powerdown_en_SHIFT)) & UMCTL2_REGS_PWRCTL_powerdown_en_MASK)
#define UMCTL2_REGS_PWRCTL_deeppowerdown_en_MASK (0x4U)
#define UMCTL2_REGS_PWRCTL_deeppowerdown_en_SHIFT (2U)
#define UMCTL2_REGS_PWRCTL_deeppowerdown_en_WIDTH (1U)
#define UMCTL2_REGS_PWRCTL_deeppowerdown_en(x)   (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_PWRCTL_deeppowerdown_en_SHIFT)) & UMCTL2_REGS_PWRCTL_deeppowerdown_en_MASK)
#define UMCTL2_REGS_PWRCTL_en_dfi_dram_clk_disable_MASK (0x8U)
#define UMCTL2_REGS_PWRCTL_en_dfi_dram_clk_disable_SHIFT (3U)
#define UMCTL2_REGS_PWRCTL_en_dfi_dram_clk_disable_WIDTH (1U)
#define UMCTL2_REGS_PWRCTL_en_dfi_dram_clk_disable(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_PWRCTL_en_dfi_dram_clk_disable_SHIFT)) & UMCTL2_REGS_PWRCTL_en_dfi_dram_clk_disable_MASK)
#define UMCTL2_REGS_PWRCTL_mpsm_en_MASK          (0x10U)
#define UMCTL2_REGS_PWRCTL_mpsm_en_SHIFT         (4U)
#define UMCTL2_REGS_PWRCTL_mpsm_en_WIDTH         (1U)
#define UMCTL2_REGS_PWRCTL_mpsm_en(x)            (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_PWRCTL_mpsm_en_SHIFT)) & UMCTL2_REGS_PWRCTL_mpsm_en_MASK)
#define UMCTL2_REGS_PWRCTL_selfref_sw_MASK       (0x20U)
#define UMCTL2_REGS_PWRCTL_selfref_sw_SHIFT      (5U)
#define UMCTL2_REGS_PWRCTL_selfref_sw_WIDTH      (1U)
#define UMCTL2_REGS_PWRCTL_selfref_sw(x)         (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_PWRCTL_selfref_sw_SHIFT)) & UMCTL2_REGS_PWRCTL_selfref_sw_MASK)
#define UMCTL2_REGS_PWRCTL_stay_in_selfref_MASK  (0x40U)
#define UMCTL2_REGS_PWRCTL_stay_in_selfref_SHIFT (6U)
#define UMCTL2_REGS_PWRCTL_stay_in_selfref_WIDTH (1U)
#define UMCTL2_REGS_PWRCTL_stay_in_selfref(x)    (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_PWRCTL_stay_in_selfref_SHIFT)) & UMCTL2_REGS_PWRCTL_stay_in_selfref_MASK)
#define UMCTL2_REGS_PWRCTL_dis_cam_drain_selfref_MASK (0x80U)
#define UMCTL2_REGS_PWRCTL_dis_cam_drain_selfref_SHIFT (7U)
#define UMCTL2_REGS_PWRCTL_dis_cam_drain_selfref_WIDTH (1U)
#define UMCTL2_REGS_PWRCTL_dis_cam_drain_selfref(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_PWRCTL_dis_cam_drain_selfref_SHIFT)) & UMCTL2_REGS_PWRCTL_dis_cam_drain_selfref_MASK)
#define UMCTL2_REGS_PWRCTL_lpddr4_sr_allowed_MASK (0x100U)
#define UMCTL2_REGS_PWRCTL_lpddr4_sr_allowed_SHIFT (8U)
#define UMCTL2_REGS_PWRCTL_lpddr4_sr_allowed_WIDTH (1U)
#define UMCTL2_REGS_PWRCTL_lpddr4_sr_allowed(x)  (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_PWRCTL_lpddr4_sr_allowed_SHIFT)) & UMCTL2_REGS_PWRCTL_lpddr4_sr_allowed_MASK)
/*! @} */

/*! @name PWRTMG - Low Power Timing */
/*! @{ */
#define UMCTL2_REGS_PWRTMG_powerdown_to_x32_MASK (0x1FU)
#define UMCTL2_REGS_PWRTMG_powerdown_to_x32_SHIFT (0U)
#define UMCTL2_REGS_PWRTMG_powerdown_to_x32_WIDTH (5U)
#define UMCTL2_REGS_PWRTMG_powerdown_to_x32(x)   (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_PWRTMG_powerdown_to_x32_SHIFT)) & UMCTL2_REGS_PWRTMG_powerdown_to_x32_MASK)
#define UMCTL2_REGS_PWRTMG_t_dpd_x4096_MASK      (0xFF00U)
#define UMCTL2_REGS_PWRTMG_t_dpd_x4096_SHIFT     (8U)
#define UMCTL2_REGS_PWRTMG_t_dpd_x4096_WIDTH     (8U)
#define UMCTL2_REGS_PWRTMG_t_dpd_x4096(x)        (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_PWRTMG_t_dpd_x4096_SHIFT)) & UMCTL2_REGS_PWRTMG_t_dpd_x4096_MASK)
#define UMCTL2_REGS_PWRTMG_selfref_to_x32_MASK   (0xFF0000U)
#define UMCTL2_REGS_PWRTMG_selfref_to_x32_SHIFT  (16U)
#define UMCTL2_REGS_PWRTMG_selfref_to_x32_WIDTH  (8U)
#define UMCTL2_REGS_PWRTMG_selfref_to_x32(x)     (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_PWRTMG_selfref_to_x32_SHIFT)) & UMCTL2_REGS_PWRTMG_selfref_to_x32_MASK)
/*! @} */

/*! @name HWLPCTL - Hardware low power control */
/*! @{ */
#define UMCTL2_REGS_HWLPCTL_hw_lp_en_MASK        (0x1U)
#define UMCTL2_REGS_HWLPCTL_hw_lp_en_SHIFT       (0U)
#define UMCTL2_REGS_HWLPCTL_hw_lp_en_WIDTH       (1U)
#define UMCTL2_REGS_HWLPCTL_hw_lp_en(x)          (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_HWLPCTL_hw_lp_en_SHIFT)) & UMCTL2_REGS_HWLPCTL_hw_lp_en_MASK)
#define UMCTL2_REGS_HWLPCTL_hw_lp_exit_idle_en_MASK (0x2U)
#define UMCTL2_REGS_HWLPCTL_hw_lp_exit_idle_en_SHIFT (1U)
#define UMCTL2_REGS_HWLPCTL_hw_lp_exit_idle_en_WIDTH (1U)
#define UMCTL2_REGS_HWLPCTL_hw_lp_exit_idle_en(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_HWLPCTL_hw_lp_exit_idle_en_SHIFT)) & UMCTL2_REGS_HWLPCTL_hw_lp_exit_idle_en_MASK)
#define UMCTL2_REGS_HWLPCTL_hw_lp_idle_x32_MASK  (0xFFF0000U)
#define UMCTL2_REGS_HWLPCTL_hw_lp_idle_x32_SHIFT (16U)
#define UMCTL2_REGS_HWLPCTL_hw_lp_idle_x32_WIDTH (12U)
#define UMCTL2_REGS_HWLPCTL_hw_lp_idle_x32(x)    (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_HWLPCTL_hw_lp_idle_x32_SHIFT)) & UMCTL2_REGS_HWLPCTL_hw_lp_idle_x32_MASK)
/*! @} */

/*! @name RFSHCTL0 - Refresh Control 0 */
/*! @{ */
#define UMCTL2_REGS_RFSHCTL0_per_bank_refresh_MASK (0x4U)
#define UMCTL2_REGS_RFSHCTL0_per_bank_refresh_SHIFT (2U)
#define UMCTL2_REGS_RFSHCTL0_per_bank_refresh_WIDTH (1U)
#define UMCTL2_REGS_RFSHCTL0_per_bank_refresh(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_RFSHCTL0_per_bank_refresh_SHIFT)) & UMCTL2_REGS_RFSHCTL0_per_bank_refresh_MASK)
#define UMCTL2_REGS_RFSHCTL0_refresh_burst_MASK  (0x3F0U)
#define UMCTL2_REGS_RFSHCTL0_refresh_burst_SHIFT (4U)
#define UMCTL2_REGS_RFSHCTL0_refresh_burst_WIDTH (6U)
#define UMCTL2_REGS_RFSHCTL0_refresh_burst(x)    (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_RFSHCTL0_refresh_burst_SHIFT)) & UMCTL2_REGS_RFSHCTL0_refresh_burst_MASK)
#define UMCTL2_REGS_RFSHCTL0_refresh_to_x1_x32_MASK (0x1F000U)
#define UMCTL2_REGS_RFSHCTL0_refresh_to_x1_x32_SHIFT (12U)
#define UMCTL2_REGS_RFSHCTL0_refresh_to_x1_x32_WIDTH (5U)
#define UMCTL2_REGS_RFSHCTL0_refresh_to_x1_x32(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_RFSHCTL0_refresh_to_x1_x32_SHIFT)) & UMCTL2_REGS_RFSHCTL0_refresh_to_x1_x32_MASK)
#define UMCTL2_REGS_RFSHCTL0_refresh_margin_MASK (0xF00000U)
#define UMCTL2_REGS_RFSHCTL0_refresh_margin_SHIFT (20U)
#define UMCTL2_REGS_RFSHCTL0_refresh_margin_WIDTH (4U)
#define UMCTL2_REGS_RFSHCTL0_refresh_margin(x)   (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_RFSHCTL0_refresh_margin_SHIFT)) & UMCTL2_REGS_RFSHCTL0_refresh_margin_MASK)
/*! @} */

/*! @name RFSHCTL1 - Refresh control 1 */
/*! @{ */
#define UMCTL2_REGS_RFSHCTL1_refresh_timer0_start_value_x32_MASK (0xFFFU)
#define UMCTL2_REGS_RFSHCTL1_refresh_timer0_start_value_x32_SHIFT (0U)
#define UMCTL2_REGS_RFSHCTL1_refresh_timer0_start_value_x32_WIDTH (12U)
#define UMCTL2_REGS_RFSHCTL1_refresh_timer0_start_value_x32(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_RFSHCTL1_refresh_timer0_start_value_x32_SHIFT)) & UMCTL2_REGS_RFSHCTL1_refresh_timer0_start_value_x32_MASK)
#define UMCTL2_REGS_RFSHCTL1_refresh_timer1_start_value_x32_MASK (0xFFF0000U)
#define UMCTL2_REGS_RFSHCTL1_refresh_timer1_start_value_x32_SHIFT (16U)
#define UMCTL2_REGS_RFSHCTL1_refresh_timer1_start_value_x32_WIDTH (12U)
#define UMCTL2_REGS_RFSHCTL1_refresh_timer1_start_value_x32(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_RFSHCTL1_refresh_timer1_start_value_x32_SHIFT)) & UMCTL2_REGS_RFSHCTL1_refresh_timer1_start_value_x32_MASK)
/*! @} */

/*! @name RFSHCTL3 - Refresh Control 3 */
/*! @{ */
#define UMCTL2_REGS_RFSHCTL3_dis_auto_refresh_MASK (0x1U)
#define UMCTL2_REGS_RFSHCTL3_dis_auto_refresh_SHIFT (0U)
#define UMCTL2_REGS_RFSHCTL3_dis_auto_refresh_WIDTH (1U)
#define UMCTL2_REGS_RFSHCTL3_dis_auto_refresh(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_RFSHCTL3_dis_auto_refresh_SHIFT)) & UMCTL2_REGS_RFSHCTL3_dis_auto_refresh_MASK)
#define UMCTL2_REGS_RFSHCTL3_refresh_update_level_MASK (0x2U)
#define UMCTL2_REGS_RFSHCTL3_refresh_update_level_SHIFT (1U)
#define UMCTL2_REGS_RFSHCTL3_refresh_update_level_WIDTH (1U)
#define UMCTL2_REGS_RFSHCTL3_refresh_update_level(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_RFSHCTL3_refresh_update_level_SHIFT)) & UMCTL2_REGS_RFSHCTL3_refresh_update_level_MASK)
#define UMCTL2_REGS_RFSHCTL3_refresh_mode_MASK   (0x70U)
#define UMCTL2_REGS_RFSHCTL3_refresh_mode_SHIFT  (4U)
#define UMCTL2_REGS_RFSHCTL3_refresh_mode_WIDTH  (3U)
#define UMCTL2_REGS_RFSHCTL3_refresh_mode(x)     (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_RFSHCTL3_refresh_mode_SHIFT)) & UMCTL2_REGS_RFSHCTL3_refresh_mode_MASK)
/*! @} */

/*! @name RFSHTMG - Refresh Timing */
/*! @{ */
#define UMCTL2_REGS_RFSHTMG_t_rfc_min_MASK       (0x3FFU)
#define UMCTL2_REGS_RFSHTMG_t_rfc_min_SHIFT      (0U)
#define UMCTL2_REGS_RFSHTMG_t_rfc_min_WIDTH      (10U)
#define UMCTL2_REGS_RFSHTMG_t_rfc_min(x)         (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_RFSHTMG_t_rfc_min_SHIFT)) & UMCTL2_REGS_RFSHTMG_t_rfc_min_MASK)
#define UMCTL2_REGS_RFSHTMG_lpddr3_trefbw_en_MASK (0x8000U)
#define UMCTL2_REGS_RFSHTMG_lpddr3_trefbw_en_SHIFT (15U)
#define UMCTL2_REGS_RFSHTMG_lpddr3_trefbw_en_WIDTH (1U)
#define UMCTL2_REGS_RFSHTMG_lpddr3_trefbw_en(x)  (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_RFSHTMG_lpddr3_trefbw_en_SHIFT)) & UMCTL2_REGS_RFSHTMG_lpddr3_trefbw_en_MASK)
#define UMCTL2_REGS_RFSHTMG_t_rfc_nom_x1_x32_MASK (0xFFF0000U)
#define UMCTL2_REGS_RFSHTMG_t_rfc_nom_x1_x32_SHIFT (16U)
#define UMCTL2_REGS_RFSHTMG_t_rfc_nom_x1_x32_WIDTH (12U)
#define UMCTL2_REGS_RFSHTMG_t_rfc_nom_x1_x32(x)  (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_RFSHTMG_t_rfc_nom_x1_x32_SHIFT)) & UMCTL2_REGS_RFSHTMG_t_rfc_nom_x1_x32_MASK)
#define UMCTL2_REGS_RFSHTMG_t_rfc_nom_x1_sel_MASK (0x80000000U)
#define UMCTL2_REGS_RFSHTMG_t_rfc_nom_x1_sel_SHIFT (31U)
#define UMCTL2_REGS_RFSHTMG_t_rfc_nom_x1_sel_WIDTH (1U)
#define UMCTL2_REGS_RFSHTMG_t_rfc_nom_x1_sel(x)  (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_RFSHTMG_t_rfc_nom_x1_sel_SHIFT)) & UMCTL2_REGS_RFSHTMG_t_rfc_nom_x1_sel_MASK)
/*! @} */

/*! @name RFSHTMG1 - Refresh timing 1 */
/*! @{ */
#define UMCTL2_REGS_RFSHTMG1_t_pbr2pbr_MASK      (0xFF0000U)
#define UMCTL2_REGS_RFSHTMG1_t_pbr2pbr_SHIFT     (16U)
#define UMCTL2_REGS_RFSHTMG1_t_pbr2pbr_WIDTH     (8U)
#define UMCTL2_REGS_RFSHTMG1_t_pbr2pbr(x)        (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_RFSHTMG1_t_pbr2pbr_SHIFT)) & UMCTL2_REGS_RFSHTMG1_t_pbr2pbr_MASK)
/*! @} */

/*! @name ECCCFG0 - ECC Configuration 0 */
/*! @{ */
#define UMCTL2_REGS_ECCCFG0_ecc_mode_MASK        (0x7U)
#define UMCTL2_REGS_ECCCFG0_ecc_mode_SHIFT       (0U)
#define UMCTL2_REGS_ECCCFG0_ecc_mode_WIDTH       (3U)
#define UMCTL2_REGS_ECCCFG0_ecc_mode(x)          (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ECCCFG0_ecc_mode_SHIFT)) & UMCTL2_REGS_ECCCFG0_ecc_mode_MASK)
#define UMCTL2_REGS_ECCCFG0_dis_scrub_MASK       (0x10U)
#define UMCTL2_REGS_ECCCFG0_dis_scrub_SHIFT      (4U)
#define UMCTL2_REGS_ECCCFG0_dis_scrub_WIDTH      (1U)
#define UMCTL2_REGS_ECCCFG0_dis_scrub(x)         (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ECCCFG0_dis_scrub_SHIFT)) & UMCTL2_REGS_ECCCFG0_dis_scrub_MASK)
#define UMCTL2_REGS_ECCCFG0_ecc_ap_en_MASK       (0x40U)
#define UMCTL2_REGS_ECCCFG0_ecc_ap_en_SHIFT      (6U)
#define UMCTL2_REGS_ECCCFG0_ecc_ap_en_WIDTH      (1U)
#define UMCTL2_REGS_ECCCFG0_ecc_ap_en(x)         (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ECCCFG0_ecc_ap_en_SHIFT)) & UMCTL2_REGS_ECCCFG0_ecc_ap_en_MASK)
#define UMCTL2_REGS_ECCCFG0_ecc_region_map_MASK  (0x7F00U)
#define UMCTL2_REGS_ECCCFG0_ecc_region_map_SHIFT (8U)
#define UMCTL2_REGS_ECCCFG0_ecc_region_map_WIDTH (7U)
#define UMCTL2_REGS_ECCCFG0_ecc_region_map(x)    (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ECCCFG0_ecc_region_map_SHIFT)) & UMCTL2_REGS_ECCCFG0_ecc_region_map_MASK)
#define UMCTL2_REGS_ECCCFG0_blk_channel_idle_time_x32_MASK (0x3F0000U)
#define UMCTL2_REGS_ECCCFG0_blk_channel_idle_time_x32_SHIFT (16U)
#define UMCTL2_REGS_ECCCFG0_blk_channel_idle_time_x32_WIDTH (6U)
#define UMCTL2_REGS_ECCCFG0_blk_channel_idle_time_x32(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ECCCFG0_blk_channel_idle_time_x32_SHIFT)) & UMCTL2_REGS_ECCCFG0_blk_channel_idle_time_x32_MASK)
#define UMCTL2_REGS_ECCCFG0_ecc_ap_err_threshold_MASK (0x7000000U)
#define UMCTL2_REGS_ECCCFG0_ecc_ap_err_threshold_SHIFT (24U)
#define UMCTL2_REGS_ECCCFG0_ecc_ap_err_threshold_WIDTH (3U)
#define UMCTL2_REGS_ECCCFG0_ecc_ap_err_threshold(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ECCCFG0_ecc_ap_err_threshold_SHIFT)) & UMCTL2_REGS_ECCCFG0_ecc_ap_err_threshold_MASK)
#define UMCTL2_REGS_ECCCFG0_ecc_region_map_granu_MASK (0xC0000000U)
#define UMCTL2_REGS_ECCCFG0_ecc_region_map_granu_SHIFT (30U)
#define UMCTL2_REGS_ECCCFG0_ecc_region_map_granu_WIDTH (2U)
#define UMCTL2_REGS_ECCCFG0_ecc_region_map_granu(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ECCCFG0_ecc_region_map_granu_SHIFT)) & UMCTL2_REGS_ECCCFG0_ecc_region_map_granu_MASK)
/*! @} */

/*! @name ECCCFG1 - ECC Configuration 1 */
/*! @{ */
#define UMCTL2_REGS_ECCCFG1_data_poison_en_MASK  (0x1U)
#define UMCTL2_REGS_ECCCFG1_data_poison_en_SHIFT (0U)
#define UMCTL2_REGS_ECCCFG1_data_poison_en_WIDTH (1U)
#define UMCTL2_REGS_ECCCFG1_data_poison_en(x)    (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ECCCFG1_data_poison_en_SHIFT)) & UMCTL2_REGS_ECCCFG1_data_poison_en_MASK)
#define UMCTL2_REGS_ECCCFG1_data_poison_bit_MASK (0x2U)
#define UMCTL2_REGS_ECCCFG1_data_poison_bit_SHIFT (1U)
#define UMCTL2_REGS_ECCCFG1_data_poison_bit_WIDTH (1U)
#define UMCTL2_REGS_ECCCFG1_data_poison_bit(x)   (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ECCCFG1_data_poison_bit_SHIFT)) & UMCTL2_REGS_ECCCFG1_data_poison_bit_MASK)
#define UMCTL2_REGS_ECCCFG1_ecc_region_parity_lock_MASK (0x10U)
#define UMCTL2_REGS_ECCCFG1_ecc_region_parity_lock_SHIFT (4U)
#define UMCTL2_REGS_ECCCFG1_ecc_region_parity_lock_WIDTH (1U)
#define UMCTL2_REGS_ECCCFG1_ecc_region_parity_lock(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ECCCFG1_ecc_region_parity_lock_SHIFT)) & UMCTL2_REGS_ECCCFG1_ecc_region_parity_lock_MASK)
#define UMCTL2_REGS_ECCCFG1_ecc_region_waste_lock_MASK (0x20U)
#define UMCTL2_REGS_ECCCFG1_ecc_region_waste_lock_SHIFT (5U)
#define UMCTL2_REGS_ECCCFG1_ecc_region_waste_lock_WIDTH (1U)
#define UMCTL2_REGS_ECCCFG1_ecc_region_waste_lock(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ECCCFG1_ecc_region_waste_lock_SHIFT)) & UMCTL2_REGS_ECCCFG1_ecc_region_waste_lock_MASK)
#define UMCTL2_REGS_ECCCFG1_blk_channel_active_term_MASK (0x80U)
#define UMCTL2_REGS_ECCCFG1_blk_channel_active_term_SHIFT (7U)
#define UMCTL2_REGS_ECCCFG1_blk_channel_active_term_WIDTH (1U)
#define UMCTL2_REGS_ECCCFG1_blk_channel_active_term(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ECCCFG1_blk_channel_active_term_SHIFT)) & UMCTL2_REGS_ECCCFG1_blk_channel_active_term_MASK)
#define UMCTL2_REGS_ECCCFG1_active_blk_channel_MASK (0xF00U)
#define UMCTL2_REGS_ECCCFG1_active_blk_channel_SHIFT (8U)
#define UMCTL2_REGS_ECCCFG1_active_blk_channel_WIDTH (4U)
#define UMCTL2_REGS_ECCCFG1_active_blk_channel(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ECCCFG1_active_blk_channel_SHIFT)) & UMCTL2_REGS_ECCCFG1_active_blk_channel_MASK)
/*! @} */

/*! @name ECCSTAT - SECDED ECC Status */
/*! @{ */
#define UMCTL2_REGS_ECCSTAT_ecc_corrected_bit_num_MASK (0x7FU)
#define UMCTL2_REGS_ECCSTAT_ecc_corrected_bit_num_SHIFT (0U)
#define UMCTL2_REGS_ECCSTAT_ecc_corrected_bit_num_WIDTH (7U)
#define UMCTL2_REGS_ECCSTAT_ecc_corrected_bit_num(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ECCSTAT_ecc_corrected_bit_num_SHIFT)) & UMCTL2_REGS_ECCSTAT_ecc_corrected_bit_num_MASK)
#define UMCTL2_REGS_ECCSTAT_ecc_corrected_err_MASK (0x100U)
#define UMCTL2_REGS_ECCSTAT_ecc_corrected_err_SHIFT (8U)
#define UMCTL2_REGS_ECCSTAT_ecc_corrected_err_WIDTH (1U)
#define UMCTL2_REGS_ECCSTAT_ecc_corrected_err(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ECCSTAT_ecc_corrected_err_SHIFT)) & UMCTL2_REGS_ECCSTAT_ecc_corrected_err_MASK)
#define UMCTL2_REGS_ECCSTAT_ecc_uncorrected_err_MASK (0x10000U)
#define UMCTL2_REGS_ECCSTAT_ecc_uncorrected_err_SHIFT (16U)
#define UMCTL2_REGS_ECCSTAT_ecc_uncorrected_err_WIDTH (1U)
#define UMCTL2_REGS_ECCSTAT_ecc_uncorrected_err(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ECCSTAT_ecc_uncorrected_err_SHIFT)) & UMCTL2_REGS_ECCSTAT_ecc_uncorrected_err_MASK)
/*! @} */

/*! @name ECCCTL - ECC Control */
/*! @{ */
#define UMCTL2_REGS_ECCCTL_ecc_corrected_err_clr_MASK (0x1U)
#define UMCTL2_REGS_ECCCTL_ecc_corrected_err_clr_SHIFT (0U)
#define UMCTL2_REGS_ECCCTL_ecc_corrected_err_clr_WIDTH (1U)
#define UMCTL2_REGS_ECCCTL_ecc_corrected_err_clr(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ECCCTL_ecc_corrected_err_clr_SHIFT)) & UMCTL2_REGS_ECCCTL_ecc_corrected_err_clr_MASK)
#define UMCTL2_REGS_ECCCTL_ecc_uncorrected_err_clr_MASK (0x2U)
#define UMCTL2_REGS_ECCCTL_ecc_uncorrected_err_clr_SHIFT (1U)
#define UMCTL2_REGS_ECCCTL_ecc_uncorrected_err_clr_WIDTH (1U)
#define UMCTL2_REGS_ECCCTL_ecc_uncorrected_err_clr(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ECCCTL_ecc_uncorrected_err_clr_SHIFT)) & UMCTL2_REGS_ECCCTL_ecc_uncorrected_err_clr_MASK)
#define UMCTL2_REGS_ECCCTL_ecc_corr_err_cnt_clr_MASK (0x4U)
#define UMCTL2_REGS_ECCCTL_ecc_corr_err_cnt_clr_SHIFT (2U)
#define UMCTL2_REGS_ECCCTL_ecc_corr_err_cnt_clr_WIDTH (1U)
#define UMCTL2_REGS_ECCCTL_ecc_corr_err_cnt_clr(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ECCCTL_ecc_corr_err_cnt_clr_SHIFT)) & UMCTL2_REGS_ECCCTL_ecc_corr_err_cnt_clr_MASK)
#define UMCTL2_REGS_ECCCTL_ecc_uncorr_err_cnt_clr_MASK (0x8U)
#define UMCTL2_REGS_ECCCTL_ecc_uncorr_err_cnt_clr_SHIFT (3U)
#define UMCTL2_REGS_ECCCTL_ecc_uncorr_err_cnt_clr_WIDTH (1U)
#define UMCTL2_REGS_ECCCTL_ecc_uncorr_err_cnt_clr(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ECCCTL_ecc_uncorr_err_cnt_clr_SHIFT)) & UMCTL2_REGS_ECCCTL_ecc_uncorr_err_cnt_clr_MASK)
#define UMCTL2_REGS_ECCCTL_ecc_ap_err_intr_clr_MASK (0x10U)
#define UMCTL2_REGS_ECCCTL_ecc_ap_err_intr_clr_SHIFT (4U)
#define UMCTL2_REGS_ECCCTL_ecc_ap_err_intr_clr_WIDTH (1U)
#define UMCTL2_REGS_ECCCTL_ecc_ap_err_intr_clr(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ECCCTL_ecc_ap_err_intr_clr_SHIFT)) & UMCTL2_REGS_ECCCTL_ecc_ap_err_intr_clr_MASK)
#define UMCTL2_REGS_ECCCTL_ecc_corrected_err_intr_en_MASK (0x100U)
#define UMCTL2_REGS_ECCCTL_ecc_corrected_err_intr_en_SHIFT (8U)
#define UMCTL2_REGS_ECCCTL_ecc_corrected_err_intr_en_WIDTH (1U)
#define UMCTL2_REGS_ECCCTL_ecc_corrected_err_intr_en(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ECCCTL_ecc_corrected_err_intr_en_SHIFT)) & UMCTL2_REGS_ECCCTL_ecc_corrected_err_intr_en_MASK)
#define UMCTL2_REGS_ECCCTL_ecc_uncorrected_err_intr_en_MASK (0x200U)
#define UMCTL2_REGS_ECCCTL_ecc_uncorrected_err_intr_en_SHIFT (9U)
#define UMCTL2_REGS_ECCCTL_ecc_uncorrected_err_intr_en_WIDTH (1U)
#define UMCTL2_REGS_ECCCTL_ecc_uncorrected_err_intr_en(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ECCCTL_ecc_uncorrected_err_intr_en_SHIFT)) & UMCTL2_REGS_ECCCTL_ecc_uncorrected_err_intr_en_MASK)
#define UMCTL2_REGS_ECCCTL_ecc_ap_err_intr_en_MASK (0x400U)
#define UMCTL2_REGS_ECCCTL_ecc_ap_err_intr_en_SHIFT (10U)
#define UMCTL2_REGS_ECCCTL_ecc_ap_err_intr_en_WIDTH (1U)
#define UMCTL2_REGS_ECCCTL_ecc_ap_err_intr_en(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ECCCTL_ecc_ap_err_intr_en_SHIFT)) & UMCTL2_REGS_ECCCTL_ecc_ap_err_intr_en_MASK)
#define UMCTL2_REGS_ECCCTL_ecc_corrected_err_intr_force_MASK (0x10000U)
#define UMCTL2_REGS_ECCCTL_ecc_corrected_err_intr_force_SHIFT (16U)
#define UMCTL2_REGS_ECCCTL_ecc_corrected_err_intr_force_WIDTH (1U)
#define UMCTL2_REGS_ECCCTL_ecc_corrected_err_intr_force(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ECCCTL_ecc_corrected_err_intr_force_SHIFT)) & UMCTL2_REGS_ECCCTL_ecc_corrected_err_intr_force_MASK)
#define UMCTL2_REGS_ECCCTL_ecc_uncorrected_err_intr_force_MASK (0x20000U)
#define UMCTL2_REGS_ECCCTL_ecc_uncorrected_err_intr_force_SHIFT (17U)
#define UMCTL2_REGS_ECCCTL_ecc_uncorrected_err_intr_force_WIDTH (1U)
#define UMCTL2_REGS_ECCCTL_ecc_uncorrected_err_intr_force(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ECCCTL_ecc_uncorrected_err_intr_force_SHIFT)) & UMCTL2_REGS_ECCCTL_ecc_uncorrected_err_intr_force_MASK)
#define UMCTL2_REGS_ECCCTL_ecc_ap_err_intr_force_MASK (0x40000U)
#define UMCTL2_REGS_ECCCTL_ecc_ap_err_intr_force_SHIFT (18U)
#define UMCTL2_REGS_ECCCTL_ecc_ap_err_intr_force_WIDTH (1U)
#define UMCTL2_REGS_ECCCTL_ecc_ap_err_intr_force(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ECCCTL_ecc_ap_err_intr_force_SHIFT)) & UMCTL2_REGS_ECCCTL_ecc_ap_err_intr_force_MASK)
/*! @} */

/*! @name ECCERRCNT - ECC Error Counter */
/*! @{ */
#define UMCTL2_REGS_ECCERRCNT_ecc_corr_err_cnt_MASK (0xFFFFU)
#define UMCTL2_REGS_ECCERRCNT_ecc_corr_err_cnt_SHIFT (0U)
#define UMCTL2_REGS_ECCERRCNT_ecc_corr_err_cnt_WIDTH (16U)
#define UMCTL2_REGS_ECCERRCNT_ecc_corr_err_cnt(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ECCERRCNT_ecc_corr_err_cnt_SHIFT)) & UMCTL2_REGS_ECCERRCNT_ecc_corr_err_cnt_MASK)
#define UMCTL2_REGS_ECCERRCNT_ecc_uncorr_err_cnt_MASK (0xFFFF0000U)
#define UMCTL2_REGS_ECCERRCNT_ecc_uncorr_err_cnt_SHIFT (16U)
#define UMCTL2_REGS_ECCERRCNT_ecc_uncorr_err_cnt_WIDTH (16U)
#define UMCTL2_REGS_ECCERRCNT_ecc_uncorr_err_cnt(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ECCERRCNT_ecc_uncorr_err_cnt_SHIFT)) & UMCTL2_REGS_ECCERRCNT_ecc_uncorr_err_cnt_MASK)
/*! @} */

/*! @name ECCCADDR0 - ECC Corrected Error Address 0 */
/*! @{ */
#define UMCTL2_REGS_ECCCADDR0_ecc_corr_row_MASK  (0x3FFFFU)
#define UMCTL2_REGS_ECCCADDR0_ecc_corr_row_SHIFT (0U)
#define UMCTL2_REGS_ECCCADDR0_ecc_corr_row_WIDTH (18U)
#define UMCTL2_REGS_ECCCADDR0_ecc_corr_row(x)    (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ECCCADDR0_ecc_corr_row_SHIFT)) & UMCTL2_REGS_ECCCADDR0_ecc_corr_row_MASK)
#define UMCTL2_REGS_ECCCADDR0_ecc_corr_rank_MASK (0x1000000U)
#define UMCTL2_REGS_ECCCADDR0_ecc_corr_rank_SHIFT (24U)
#define UMCTL2_REGS_ECCCADDR0_ecc_corr_rank_WIDTH (1U)
#define UMCTL2_REGS_ECCCADDR0_ecc_corr_rank(x)   (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ECCCADDR0_ecc_corr_rank_SHIFT)) & UMCTL2_REGS_ECCCADDR0_ecc_corr_rank_MASK)
/*! @} */

/*! @name ECCCADDR1 - ECC Corrected Error Address 1 */
/*! @{ */
#define UMCTL2_REGS_ECCCADDR1_ecc_corr_col_MASK  (0xFFFU)
#define UMCTL2_REGS_ECCCADDR1_ecc_corr_col_SHIFT (0U)
#define UMCTL2_REGS_ECCCADDR1_ecc_corr_col_WIDTH (12U)
#define UMCTL2_REGS_ECCCADDR1_ecc_corr_col(x)    (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ECCCADDR1_ecc_corr_col_SHIFT)) & UMCTL2_REGS_ECCCADDR1_ecc_corr_col_MASK)
#define UMCTL2_REGS_ECCCADDR1_ecc_corr_bank_MASK (0x70000U)
#define UMCTL2_REGS_ECCCADDR1_ecc_corr_bank_SHIFT (16U)
#define UMCTL2_REGS_ECCCADDR1_ecc_corr_bank_WIDTH (3U)
#define UMCTL2_REGS_ECCCADDR1_ecc_corr_bank(x)   (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ECCCADDR1_ecc_corr_bank_SHIFT)) & UMCTL2_REGS_ECCCADDR1_ecc_corr_bank_MASK)
#define UMCTL2_REGS_ECCCADDR1_ecc_corr_bg_MASK   (0x3000000U)
#define UMCTL2_REGS_ECCCADDR1_ecc_corr_bg_SHIFT  (24U)
#define UMCTL2_REGS_ECCCADDR1_ecc_corr_bg_WIDTH  (2U)
#define UMCTL2_REGS_ECCCADDR1_ecc_corr_bg(x)     (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ECCCADDR1_ecc_corr_bg_SHIFT)) & UMCTL2_REGS_ECCCADDR1_ecc_corr_bg_MASK)
/*! @} */

/*! @name ECCCSYN0 - ECC Corrected Syndrome 0 */
/*! @{ */
#define UMCTL2_REGS_ECCCSYN0_ecc_corr_syndromes_31_0_MASK (0xFFFFFFFFU)
#define UMCTL2_REGS_ECCCSYN0_ecc_corr_syndromes_31_0_SHIFT (0U)
#define UMCTL2_REGS_ECCCSYN0_ecc_corr_syndromes_31_0_WIDTH (32U)
#define UMCTL2_REGS_ECCCSYN0_ecc_corr_syndromes_31_0(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ECCCSYN0_ecc_corr_syndromes_31_0_SHIFT)) & UMCTL2_REGS_ECCCSYN0_ecc_corr_syndromes_31_0_MASK)
/*! @} */

/*! @name ECCCSYN1 - ECC Corrected Syndrome 1 */
/*! @{ */
#define UMCTL2_REGS_ECCCSYN1_ecc_corr_syndromes_63_32_MASK (0xFFFFFFFFU)
#define UMCTL2_REGS_ECCCSYN1_ecc_corr_syndromes_63_32_SHIFT (0U)
#define UMCTL2_REGS_ECCCSYN1_ecc_corr_syndromes_63_32_WIDTH (32U)
#define UMCTL2_REGS_ECCCSYN1_ecc_corr_syndromes_63_32(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ECCCSYN1_ecc_corr_syndromes_63_32_SHIFT)) & UMCTL2_REGS_ECCCSYN1_ecc_corr_syndromes_63_32_MASK)
/*! @} */

/*! @name ECCCSYN2 - ECC Corrected Syndrome 2 */
/*! @{ */
#define UMCTL2_REGS_ECCCSYN2_ecc_corr_syndromes_71_64_MASK (0xFFU)
#define UMCTL2_REGS_ECCCSYN2_ecc_corr_syndromes_71_64_SHIFT (0U)
#define UMCTL2_REGS_ECCCSYN2_ecc_corr_syndromes_71_64_WIDTH (8U)
#define UMCTL2_REGS_ECCCSYN2_ecc_corr_syndromes_71_64(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ECCCSYN2_ecc_corr_syndromes_71_64_SHIFT)) & UMCTL2_REGS_ECCCSYN2_ecc_corr_syndromes_71_64_MASK)
/*! @} */

/*! @name ECCBITMASK0 - ECC Corrected Data Bit Mask 0 */
/*! @{ */
#define UMCTL2_REGS_ECCBITMASK0_ecc_corr_bit_mask_31_0_MASK (0xFFFFFFFFU)
#define UMCTL2_REGS_ECCBITMASK0_ecc_corr_bit_mask_31_0_SHIFT (0U)
#define UMCTL2_REGS_ECCBITMASK0_ecc_corr_bit_mask_31_0_WIDTH (32U)
#define UMCTL2_REGS_ECCBITMASK0_ecc_corr_bit_mask_31_0(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ECCBITMASK0_ecc_corr_bit_mask_31_0_SHIFT)) & UMCTL2_REGS_ECCBITMASK0_ecc_corr_bit_mask_31_0_MASK)
/*! @} */

/*! @name ECCBITMASK1 - ECC Corrected Data Bit Mask 1 */
/*! @{ */
#define UMCTL2_REGS_ECCBITMASK1_ecc_corr_bit_mask_63_32_MASK (0xFFFFFFFFU)
#define UMCTL2_REGS_ECCBITMASK1_ecc_corr_bit_mask_63_32_SHIFT (0U)
#define UMCTL2_REGS_ECCBITMASK1_ecc_corr_bit_mask_63_32_WIDTH (32U)
#define UMCTL2_REGS_ECCBITMASK1_ecc_corr_bit_mask_63_32(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ECCBITMASK1_ecc_corr_bit_mask_63_32_SHIFT)) & UMCTL2_REGS_ECCBITMASK1_ecc_corr_bit_mask_63_32_MASK)
/*! @} */

/*! @name ECCBITMASK2 - ECC Corrected Data Bit Mask 2 */
/*! @{ */
#define UMCTL2_REGS_ECCBITMASK2_ecc_corr_bit_mask_71_64_MASK (0xFFU)
#define UMCTL2_REGS_ECCBITMASK2_ecc_corr_bit_mask_71_64_SHIFT (0U)
#define UMCTL2_REGS_ECCBITMASK2_ecc_corr_bit_mask_71_64_WIDTH (8U)
#define UMCTL2_REGS_ECCBITMASK2_ecc_corr_bit_mask_71_64(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ECCBITMASK2_ecc_corr_bit_mask_71_64_SHIFT)) & UMCTL2_REGS_ECCBITMASK2_ecc_corr_bit_mask_71_64_MASK)
/*! @} */

/*! @name ECCUADDR0 - ECC Uncorrected Error Address 0 */
/*! @{ */
#define UMCTL2_REGS_ECCUADDR0_ecc_uncorr_row_MASK (0x3FFFFU)
#define UMCTL2_REGS_ECCUADDR0_ecc_uncorr_row_SHIFT (0U)
#define UMCTL2_REGS_ECCUADDR0_ecc_uncorr_row_WIDTH (18U)
#define UMCTL2_REGS_ECCUADDR0_ecc_uncorr_row(x)  (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ECCUADDR0_ecc_uncorr_row_SHIFT)) & UMCTL2_REGS_ECCUADDR0_ecc_uncorr_row_MASK)
#define UMCTL2_REGS_ECCUADDR0_ecc_uncorr_rank_MASK (0x1000000U)
#define UMCTL2_REGS_ECCUADDR0_ecc_uncorr_rank_SHIFT (24U)
#define UMCTL2_REGS_ECCUADDR0_ecc_uncorr_rank_WIDTH (1U)
#define UMCTL2_REGS_ECCUADDR0_ecc_uncorr_rank(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ECCUADDR0_ecc_uncorr_rank_SHIFT)) & UMCTL2_REGS_ECCUADDR0_ecc_uncorr_rank_MASK)
/*! @} */

/*! @name ECCUADDR1 - ECC Uncorrected Error Address 1 */
/*! @{ */
#define UMCTL2_REGS_ECCUADDR1_ecc_uncorr_col_MASK (0xFFFU)
#define UMCTL2_REGS_ECCUADDR1_ecc_uncorr_col_SHIFT (0U)
#define UMCTL2_REGS_ECCUADDR1_ecc_uncorr_col_WIDTH (12U)
#define UMCTL2_REGS_ECCUADDR1_ecc_uncorr_col(x)  (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ECCUADDR1_ecc_uncorr_col_SHIFT)) & UMCTL2_REGS_ECCUADDR1_ecc_uncorr_col_MASK)
#define UMCTL2_REGS_ECCUADDR1_ecc_uncorr_bank_MASK (0x70000U)
#define UMCTL2_REGS_ECCUADDR1_ecc_uncorr_bank_SHIFT (16U)
#define UMCTL2_REGS_ECCUADDR1_ecc_uncorr_bank_WIDTH (3U)
#define UMCTL2_REGS_ECCUADDR1_ecc_uncorr_bank(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ECCUADDR1_ecc_uncorr_bank_SHIFT)) & UMCTL2_REGS_ECCUADDR1_ecc_uncorr_bank_MASK)
#define UMCTL2_REGS_ECCUADDR1_ecc_uncorr_bg_MASK (0x3000000U)
#define UMCTL2_REGS_ECCUADDR1_ecc_uncorr_bg_SHIFT (24U)
#define UMCTL2_REGS_ECCUADDR1_ecc_uncorr_bg_WIDTH (2U)
#define UMCTL2_REGS_ECCUADDR1_ecc_uncorr_bg(x)   (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ECCUADDR1_ecc_uncorr_bg_SHIFT)) & UMCTL2_REGS_ECCUADDR1_ecc_uncorr_bg_MASK)
/*! @} */

/*! @name ECCUSYN0 - ECC Uncorrected Syndrome 0 */
/*! @{ */
#define UMCTL2_REGS_ECCUSYN0_ecc_uncorr_syndromes_31_0_MASK (0xFFFFFFFFU)
#define UMCTL2_REGS_ECCUSYN0_ecc_uncorr_syndromes_31_0_SHIFT (0U)
#define UMCTL2_REGS_ECCUSYN0_ecc_uncorr_syndromes_31_0_WIDTH (32U)
#define UMCTL2_REGS_ECCUSYN0_ecc_uncorr_syndromes_31_0(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ECCUSYN0_ecc_uncorr_syndromes_31_0_SHIFT)) & UMCTL2_REGS_ECCUSYN0_ecc_uncorr_syndromes_31_0_MASK)
/*! @} */

/*! @name ECCUSYN1 - ECC Uncorrected Syndrome 1 */
/*! @{ */
#define UMCTL2_REGS_ECCUSYN1_ecc_uncorr_syndromes_63_32_MASK (0xFFFFFFFFU)
#define UMCTL2_REGS_ECCUSYN1_ecc_uncorr_syndromes_63_32_SHIFT (0U)
#define UMCTL2_REGS_ECCUSYN1_ecc_uncorr_syndromes_63_32_WIDTH (32U)
#define UMCTL2_REGS_ECCUSYN1_ecc_uncorr_syndromes_63_32(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ECCUSYN1_ecc_uncorr_syndromes_63_32_SHIFT)) & UMCTL2_REGS_ECCUSYN1_ecc_uncorr_syndromes_63_32_MASK)
/*! @} */

/*! @name ECCUSYN2 - ECC Uncorrected Syndrome 2 */
/*! @{ */
#define UMCTL2_REGS_ECCUSYN2_ecc_uncorr_syndromes_71_64_MASK (0xFFU)
#define UMCTL2_REGS_ECCUSYN2_ecc_uncorr_syndromes_71_64_SHIFT (0U)
#define UMCTL2_REGS_ECCUSYN2_ecc_uncorr_syndromes_71_64_WIDTH (8U)
#define UMCTL2_REGS_ECCUSYN2_ecc_uncorr_syndromes_71_64(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ECCUSYN2_ecc_uncorr_syndromes_71_64_SHIFT)) & UMCTL2_REGS_ECCUSYN2_ecc_uncorr_syndromes_71_64_MASK)
/*! @} */

/*! @name ECCPOISONADDR0 - ECC Data Poisoning Address 0 */
/*! @{ */
#define UMCTL2_REGS_ECCPOISONADDR0_ecc_poison_col_MASK (0xFFFU)
#define UMCTL2_REGS_ECCPOISONADDR0_ecc_poison_col_SHIFT (0U)
#define UMCTL2_REGS_ECCPOISONADDR0_ecc_poison_col_WIDTH (12U)
#define UMCTL2_REGS_ECCPOISONADDR0_ecc_poison_col(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ECCPOISONADDR0_ecc_poison_col_SHIFT)) & UMCTL2_REGS_ECCPOISONADDR0_ecc_poison_col_MASK)
#define UMCTL2_REGS_ECCPOISONADDR0_ecc_poison_rank_MASK (0x1000000U)
#define UMCTL2_REGS_ECCPOISONADDR0_ecc_poison_rank_SHIFT (24U)
#define UMCTL2_REGS_ECCPOISONADDR0_ecc_poison_rank_WIDTH (1U)
#define UMCTL2_REGS_ECCPOISONADDR0_ecc_poison_rank(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ECCPOISONADDR0_ecc_poison_rank_SHIFT)) & UMCTL2_REGS_ECCPOISONADDR0_ecc_poison_rank_MASK)
/*! @} */

/*! @name ECCPOISONADDR1 - ECC Data Poisoning Address 1 */
/*! @{ */
#define UMCTL2_REGS_ECCPOISONADDR1_ecc_poison_row_MASK (0x3FFFFU)
#define UMCTL2_REGS_ECCPOISONADDR1_ecc_poison_row_SHIFT (0U)
#define UMCTL2_REGS_ECCPOISONADDR1_ecc_poison_row_WIDTH (18U)
#define UMCTL2_REGS_ECCPOISONADDR1_ecc_poison_row(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ECCPOISONADDR1_ecc_poison_row_SHIFT)) & UMCTL2_REGS_ECCPOISONADDR1_ecc_poison_row_MASK)
#define UMCTL2_REGS_ECCPOISONADDR1_ecc_poison_bank_MASK (0x7000000U)
#define UMCTL2_REGS_ECCPOISONADDR1_ecc_poison_bank_SHIFT (24U)
#define UMCTL2_REGS_ECCPOISONADDR1_ecc_poison_bank_WIDTH (3U)
#define UMCTL2_REGS_ECCPOISONADDR1_ecc_poison_bank(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ECCPOISONADDR1_ecc_poison_bank_SHIFT)) & UMCTL2_REGS_ECCPOISONADDR1_ecc_poison_bank_MASK)
#define UMCTL2_REGS_ECCPOISONADDR1_ecc_poison_bg_MASK (0x30000000U)
#define UMCTL2_REGS_ECCPOISONADDR1_ecc_poison_bg_SHIFT (28U)
#define UMCTL2_REGS_ECCPOISONADDR1_ecc_poison_bg_WIDTH (2U)
#define UMCTL2_REGS_ECCPOISONADDR1_ecc_poison_bg(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ECCPOISONADDR1_ecc_poison_bg_SHIFT)) & UMCTL2_REGS_ECCPOISONADDR1_ecc_poison_bg_MASK)
/*! @} */

/*! @name CRCPARCTL0 - CRC Parity Control 0 */
/*! @{ */
#define UMCTL2_REGS_CRCPARCTL0_dfi_alert_err_int_en_MASK (0x1U)
#define UMCTL2_REGS_CRCPARCTL0_dfi_alert_err_int_en_SHIFT (0U)
#define UMCTL2_REGS_CRCPARCTL0_dfi_alert_err_int_en_WIDTH (1U)
#define UMCTL2_REGS_CRCPARCTL0_dfi_alert_err_int_en(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_CRCPARCTL0_dfi_alert_err_int_en_SHIFT)) & UMCTL2_REGS_CRCPARCTL0_dfi_alert_err_int_en_MASK)
#define UMCTL2_REGS_CRCPARCTL0_dfi_alert_err_int_clr_MASK (0x2U)
#define UMCTL2_REGS_CRCPARCTL0_dfi_alert_err_int_clr_SHIFT (1U)
#define UMCTL2_REGS_CRCPARCTL0_dfi_alert_err_int_clr_WIDTH (1U)
#define UMCTL2_REGS_CRCPARCTL0_dfi_alert_err_int_clr(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_CRCPARCTL0_dfi_alert_err_int_clr_SHIFT)) & UMCTL2_REGS_CRCPARCTL0_dfi_alert_err_int_clr_MASK)
#define UMCTL2_REGS_CRCPARCTL0_dfi_alert_err_cnt_clr_MASK (0x4U)
#define UMCTL2_REGS_CRCPARCTL0_dfi_alert_err_cnt_clr_SHIFT (2U)
#define UMCTL2_REGS_CRCPARCTL0_dfi_alert_err_cnt_clr_WIDTH (1U)
#define UMCTL2_REGS_CRCPARCTL0_dfi_alert_err_cnt_clr(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_CRCPARCTL0_dfi_alert_err_cnt_clr_SHIFT)) & UMCTL2_REGS_CRCPARCTL0_dfi_alert_err_cnt_clr_MASK)
/*! @} */

/*! @name CRCPARCTL1 - CRC Parity Control 1 */
/*! @{ */
#define UMCTL2_REGS_CRCPARCTL1_parity_enable_MASK (0x1U)
#define UMCTL2_REGS_CRCPARCTL1_parity_enable_SHIFT (0U)
#define UMCTL2_REGS_CRCPARCTL1_parity_enable_WIDTH (1U)
#define UMCTL2_REGS_CRCPARCTL1_parity_enable(x)  (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_CRCPARCTL1_parity_enable_SHIFT)) & UMCTL2_REGS_CRCPARCTL1_parity_enable_MASK)
#define UMCTL2_REGS_CRCPARCTL1_crc_enable_MASK   (0x10U)
#define UMCTL2_REGS_CRCPARCTL1_crc_enable_SHIFT  (4U)
#define UMCTL2_REGS_CRCPARCTL1_crc_enable_WIDTH  (1U)
#define UMCTL2_REGS_CRCPARCTL1_crc_enable(x)     (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_CRCPARCTL1_crc_enable_SHIFT)) & UMCTL2_REGS_CRCPARCTL1_crc_enable_MASK)
#define UMCTL2_REGS_CRCPARCTL1_crc_inc_dm_MASK   (0x80U)
#define UMCTL2_REGS_CRCPARCTL1_crc_inc_dm_SHIFT  (7U)
#define UMCTL2_REGS_CRCPARCTL1_crc_inc_dm_WIDTH  (1U)
#define UMCTL2_REGS_CRCPARCTL1_crc_inc_dm(x)     (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_CRCPARCTL1_crc_inc_dm_SHIFT)) & UMCTL2_REGS_CRCPARCTL1_crc_inc_dm_MASK)
#define UMCTL2_REGS_CRCPARCTL1_caparity_disable_before_sr_MASK (0x1000U)
#define UMCTL2_REGS_CRCPARCTL1_caparity_disable_before_sr_SHIFT (12U)
#define UMCTL2_REGS_CRCPARCTL1_caparity_disable_before_sr_WIDTH (1U)
#define UMCTL2_REGS_CRCPARCTL1_caparity_disable_before_sr(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_CRCPARCTL1_caparity_disable_before_sr_SHIFT)) & UMCTL2_REGS_CRCPARCTL1_caparity_disable_before_sr_MASK)
/*! @} */

/*! @name CRCPARSTAT - CRC Parity Status */
/*! @{ */
#define UMCTL2_REGS_CRCPARSTAT_dfi_alert_err_cnt_MASK (0xFFFFU)
#define UMCTL2_REGS_CRCPARSTAT_dfi_alert_err_cnt_SHIFT (0U)
#define UMCTL2_REGS_CRCPARSTAT_dfi_alert_err_cnt_WIDTH (16U)
#define UMCTL2_REGS_CRCPARSTAT_dfi_alert_err_cnt(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_CRCPARSTAT_dfi_alert_err_cnt_SHIFT)) & UMCTL2_REGS_CRCPARSTAT_dfi_alert_err_cnt_MASK)
#define UMCTL2_REGS_CRCPARSTAT_dfi_alert_err_int_MASK (0x10000U)
#define UMCTL2_REGS_CRCPARSTAT_dfi_alert_err_int_SHIFT (16U)
#define UMCTL2_REGS_CRCPARSTAT_dfi_alert_err_int_WIDTH (1U)
#define UMCTL2_REGS_CRCPARSTAT_dfi_alert_err_int(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_CRCPARSTAT_dfi_alert_err_int_SHIFT)) & UMCTL2_REGS_CRCPARSTAT_dfi_alert_err_int_MASK)
/*! @} */

/*! @name INIT0 - DRAM Initialization 0 */
/*! @{ */
#define UMCTL2_REGS_INIT0_pre_cke_x1024_MASK     (0xFFFU)
#define UMCTL2_REGS_INIT0_pre_cke_x1024_SHIFT    (0U)
#define UMCTL2_REGS_INIT0_pre_cke_x1024_WIDTH    (12U)
#define UMCTL2_REGS_INIT0_pre_cke_x1024(x)       (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_INIT0_pre_cke_x1024_SHIFT)) & UMCTL2_REGS_INIT0_pre_cke_x1024_MASK)
#define UMCTL2_REGS_INIT0_post_cke_x1024_MASK    (0x3FF0000U)
#define UMCTL2_REGS_INIT0_post_cke_x1024_SHIFT   (16U)
#define UMCTL2_REGS_INIT0_post_cke_x1024_WIDTH   (10U)
#define UMCTL2_REGS_INIT0_post_cke_x1024(x)      (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_INIT0_post_cke_x1024_SHIFT)) & UMCTL2_REGS_INIT0_post_cke_x1024_MASK)
#define UMCTL2_REGS_INIT0_skip_dram_init_MASK    (0xC0000000U)
#define UMCTL2_REGS_INIT0_skip_dram_init_SHIFT   (30U)
#define UMCTL2_REGS_INIT0_skip_dram_init_WIDTH   (2U)
#define UMCTL2_REGS_INIT0_skip_dram_init(x)      (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_INIT0_skip_dram_init_SHIFT)) & UMCTL2_REGS_INIT0_skip_dram_init_MASK)
/*! @} */

/*! @name INIT1 - DRAM Initialization 1 */
/*! @{ */
#define UMCTL2_REGS_INIT1_pre_ocd_x32_MASK       (0xFU)
#define UMCTL2_REGS_INIT1_pre_ocd_x32_SHIFT      (0U)
#define UMCTL2_REGS_INIT1_pre_ocd_x32_WIDTH      (4U)
#define UMCTL2_REGS_INIT1_pre_ocd_x32(x)         (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_INIT1_pre_ocd_x32_SHIFT)) & UMCTL2_REGS_INIT1_pre_ocd_x32_MASK)
#define UMCTL2_REGS_INIT1_dram_rstn_x1024_MASK   (0x1FF0000U)
#define UMCTL2_REGS_INIT1_dram_rstn_x1024_SHIFT  (16U)
#define UMCTL2_REGS_INIT1_dram_rstn_x1024_WIDTH  (9U)
#define UMCTL2_REGS_INIT1_dram_rstn_x1024(x)     (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_INIT1_dram_rstn_x1024_SHIFT)) & UMCTL2_REGS_INIT1_dram_rstn_x1024_MASK)
/*! @} */

/*! @name INIT2 - DRAM Initialization 2 */
/*! @{ */
#define UMCTL2_REGS_INIT2_min_stable_clock_x1_MASK (0xFU)
#define UMCTL2_REGS_INIT2_min_stable_clock_x1_SHIFT (0U)
#define UMCTL2_REGS_INIT2_min_stable_clock_x1_WIDTH (4U)
#define UMCTL2_REGS_INIT2_min_stable_clock_x1(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_INIT2_min_stable_clock_x1_SHIFT)) & UMCTL2_REGS_INIT2_min_stable_clock_x1_MASK)
#define UMCTL2_REGS_INIT2_idle_after_reset_x32_MASK (0xFF00U)
#define UMCTL2_REGS_INIT2_idle_after_reset_x32_SHIFT (8U)
#define UMCTL2_REGS_INIT2_idle_after_reset_x32_WIDTH (8U)
#define UMCTL2_REGS_INIT2_idle_after_reset_x32(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_INIT2_idle_after_reset_x32_SHIFT)) & UMCTL2_REGS_INIT2_idle_after_reset_x32_MASK)
/*! @} */

/*! @name INIT3 - DRAM Initialization 3 */
/*! @{ */
#define UMCTL2_REGS_INIT3_emr_MASK               (0xFFFFU)
#define UMCTL2_REGS_INIT3_emr_SHIFT              (0U)
#define UMCTL2_REGS_INIT3_emr_WIDTH              (16U)
#define UMCTL2_REGS_INIT3_emr(x)                 (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_INIT3_emr_SHIFT)) & UMCTL2_REGS_INIT3_emr_MASK)
#define UMCTL2_REGS_INIT3_mr_MASK                (0xFFFF0000U)
#define UMCTL2_REGS_INIT3_mr_SHIFT               (16U)
#define UMCTL2_REGS_INIT3_mr_WIDTH               (16U)
#define UMCTL2_REGS_INIT3_mr(x)                  (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_INIT3_mr_SHIFT)) & UMCTL2_REGS_INIT3_mr_MASK)
/*! @} */

/*! @name INIT4 - DRAM Initialization 4 */
/*! @{ */
#define UMCTL2_REGS_INIT4_emr3_MASK              (0xFFFFU)
#define UMCTL2_REGS_INIT4_emr3_SHIFT             (0U)
#define UMCTL2_REGS_INIT4_emr3_WIDTH             (16U)
#define UMCTL2_REGS_INIT4_emr3(x)                (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_INIT4_emr3_SHIFT)) & UMCTL2_REGS_INIT4_emr3_MASK)
#define UMCTL2_REGS_INIT4_emr2_MASK              (0xFFFF0000U)
#define UMCTL2_REGS_INIT4_emr2_SHIFT             (16U)
#define UMCTL2_REGS_INIT4_emr2_WIDTH             (16U)
#define UMCTL2_REGS_INIT4_emr2(x)                (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_INIT4_emr2_SHIFT)) & UMCTL2_REGS_INIT4_emr2_MASK)
/*! @} */

/*! @name INIT5 - DRAM Initialization 5 */
/*! @{ */
#define UMCTL2_REGS_INIT5_max_auto_init_x1024_MASK (0x3FFU)
#define UMCTL2_REGS_INIT5_max_auto_init_x1024_SHIFT (0U)
#define UMCTL2_REGS_INIT5_max_auto_init_x1024_WIDTH (10U)
#define UMCTL2_REGS_INIT5_max_auto_init_x1024(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_INIT5_max_auto_init_x1024_SHIFT)) & UMCTL2_REGS_INIT5_max_auto_init_x1024_MASK)
#define UMCTL2_REGS_INIT5_dev_zqinit_x32_MASK    (0xFF0000U)
#define UMCTL2_REGS_INIT5_dev_zqinit_x32_SHIFT   (16U)
#define UMCTL2_REGS_INIT5_dev_zqinit_x32_WIDTH   (8U)
#define UMCTL2_REGS_INIT5_dev_zqinit_x32(x)      (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_INIT5_dev_zqinit_x32_SHIFT)) & UMCTL2_REGS_INIT5_dev_zqinit_x32_MASK)
/*! @} */

/*! @name INIT6 - DRAM Initialization 6 */
/*! @{ */
#define UMCTL2_REGS_INIT6_mr5_MASK               (0xFFFFU)
#define UMCTL2_REGS_INIT6_mr5_SHIFT              (0U)
#define UMCTL2_REGS_INIT6_mr5_WIDTH              (16U)
#define UMCTL2_REGS_INIT6_mr5(x)                 (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_INIT6_mr5_SHIFT)) & UMCTL2_REGS_INIT6_mr5_MASK)
#define UMCTL2_REGS_INIT6_mr4_MASK               (0xFFFF0000U)
#define UMCTL2_REGS_INIT6_mr4_SHIFT              (16U)
#define UMCTL2_REGS_INIT6_mr4_WIDTH              (16U)
#define UMCTL2_REGS_INIT6_mr4(x)                 (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_INIT6_mr4_SHIFT)) & UMCTL2_REGS_INIT6_mr4_MASK)
/*! @} */

/*! @name INIT7 - DRAM Initialization 7 */
/*! @{ */
#define UMCTL2_REGS_INIT7_mr6_MASK               (0xFFFFU)
#define UMCTL2_REGS_INIT7_mr6_SHIFT              (0U)
#define UMCTL2_REGS_INIT7_mr6_WIDTH              (16U)
#define UMCTL2_REGS_INIT7_mr6(x)                 (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_INIT7_mr6_SHIFT)) & UMCTL2_REGS_INIT7_mr6_MASK)
#define UMCTL2_REGS_INIT7_mr22_MASK              (0xFFFF0000U)
#define UMCTL2_REGS_INIT7_mr22_SHIFT             (16U)
#define UMCTL2_REGS_INIT7_mr22_WIDTH             (16U)
#define UMCTL2_REGS_INIT7_mr22(x)                (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_INIT7_mr22_SHIFT)) & UMCTL2_REGS_INIT7_mr22_MASK)
/*! @} */

/*! @name DIMMCTL - DIMM Control */
/*! @{ */
#define UMCTL2_REGS_DIMMCTL_dimm_stagger_cs_en_MASK (0x1U)
#define UMCTL2_REGS_DIMMCTL_dimm_stagger_cs_en_SHIFT (0U)
#define UMCTL2_REGS_DIMMCTL_dimm_stagger_cs_en_WIDTH (1U)
#define UMCTL2_REGS_DIMMCTL_dimm_stagger_cs_en(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DIMMCTL_dimm_stagger_cs_en_SHIFT)) & UMCTL2_REGS_DIMMCTL_dimm_stagger_cs_en_MASK)
#define UMCTL2_REGS_DIMMCTL_dimm_addr_mirr_en_MASK (0x2U)
#define UMCTL2_REGS_DIMMCTL_dimm_addr_mirr_en_SHIFT (1U)
#define UMCTL2_REGS_DIMMCTL_dimm_addr_mirr_en_WIDTH (1U)
#define UMCTL2_REGS_DIMMCTL_dimm_addr_mirr_en(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DIMMCTL_dimm_addr_mirr_en_SHIFT)) & UMCTL2_REGS_DIMMCTL_dimm_addr_mirr_en_MASK)
#define UMCTL2_REGS_DIMMCTL_dimm_output_inv_en_MASK (0x4U)
#define UMCTL2_REGS_DIMMCTL_dimm_output_inv_en_SHIFT (2U)
#define UMCTL2_REGS_DIMMCTL_dimm_output_inv_en_WIDTH (1U)
#define UMCTL2_REGS_DIMMCTL_dimm_output_inv_en(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DIMMCTL_dimm_output_inv_en_SHIFT)) & UMCTL2_REGS_DIMMCTL_dimm_output_inv_en_MASK)
#define UMCTL2_REGS_DIMMCTL_mrs_a17_en_MASK      (0x8U)
#define UMCTL2_REGS_DIMMCTL_mrs_a17_en_SHIFT     (3U)
#define UMCTL2_REGS_DIMMCTL_mrs_a17_en_WIDTH     (1U)
#define UMCTL2_REGS_DIMMCTL_mrs_a17_en(x)        (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DIMMCTL_mrs_a17_en_SHIFT)) & UMCTL2_REGS_DIMMCTL_mrs_a17_en_MASK)
#define UMCTL2_REGS_DIMMCTL_mrs_bg1_en_MASK      (0x10U)
#define UMCTL2_REGS_DIMMCTL_mrs_bg1_en_SHIFT     (4U)
#define UMCTL2_REGS_DIMMCTL_mrs_bg1_en_WIDTH     (1U)
#define UMCTL2_REGS_DIMMCTL_mrs_bg1_en(x)        (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DIMMCTL_mrs_bg1_en_SHIFT)) & UMCTL2_REGS_DIMMCTL_mrs_bg1_en_MASK)
#define UMCTL2_REGS_DIMMCTL_dimm_dis_bg_mirroring_MASK (0x20U)
#define UMCTL2_REGS_DIMMCTL_dimm_dis_bg_mirroring_SHIFT (5U)
#define UMCTL2_REGS_DIMMCTL_dimm_dis_bg_mirroring_WIDTH (1U)
#define UMCTL2_REGS_DIMMCTL_dimm_dis_bg_mirroring(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DIMMCTL_dimm_dis_bg_mirroring_SHIFT)) & UMCTL2_REGS_DIMMCTL_dimm_dis_bg_mirroring_MASK)
#define UMCTL2_REGS_DIMMCTL_lrdimm_bcom_cmd_prot_MASK (0x40U)
#define UMCTL2_REGS_DIMMCTL_lrdimm_bcom_cmd_prot_SHIFT (6U)
#define UMCTL2_REGS_DIMMCTL_lrdimm_bcom_cmd_prot_WIDTH (1U)
#define UMCTL2_REGS_DIMMCTL_lrdimm_bcom_cmd_prot(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DIMMCTL_lrdimm_bcom_cmd_prot_SHIFT)) & UMCTL2_REGS_DIMMCTL_lrdimm_bcom_cmd_prot_MASK)
#define UMCTL2_REGS_DIMMCTL_rcd_weak_drive_MASK  (0x1000U)
#define UMCTL2_REGS_DIMMCTL_rcd_weak_drive_SHIFT (12U)
#define UMCTL2_REGS_DIMMCTL_rcd_weak_drive_WIDTH (1U)
#define UMCTL2_REGS_DIMMCTL_rcd_weak_drive(x)    (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DIMMCTL_rcd_weak_drive_SHIFT)) & UMCTL2_REGS_DIMMCTL_rcd_weak_drive_MASK)
#define UMCTL2_REGS_DIMMCTL_rcd_a_output_disabled_MASK (0x2000U)
#define UMCTL2_REGS_DIMMCTL_rcd_a_output_disabled_SHIFT (13U)
#define UMCTL2_REGS_DIMMCTL_rcd_a_output_disabled_WIDTH (1U)
#define UMCTL2_REGS_DIMMCTL_rcd_a_output_disabled(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DIMMCTL_rcd_a_output_disabled_SHIFT)) & UMCTL2_REGS_DIMMCTL_rcd_a_output_disabled_MASK)
#define UMCTL2_REGS_DIMMCTL_rcd_b_output_disabled_MASK (0x4000U)
#define UMCTL2_REGS_DIMMCTL_rcd_b_output_disabled_SHIFT (14U)
#define UMCTL2_REGS_DIMMCTL_rcd_b_output_disabled_WIDTH (1U)
#define UMCTL2_REGS_DIMMCTL_rcd_b_output_disabled(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DIMMCTL_rcd_b_output_disabled_SHIFT)) & UMCTL2_REGS_DIMMCTL_rcd_b_output_disabled_MASK)
/*! @} */

/*! @name RANKCTL - Rank Control */
/*! @{ */
#define UMCTL2_REGS_RANKCTL_max_rank_rd_MASK     (0xFU)
#define UMCTL2_REGS_RANKCTL_max_rank_rd_SHIFT    (0U)
#define UMCTL2_REGS_RANKCTL_max_rank_rd_WIDTH    (4U)
#define UMCTL2_REGS_RANKCTL_max_rank_rd(x)       (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_RANKCTL_max_rank_rd_SHIFT)) & UMCTL2_REGS_RANKCTL_max_rank_rd_MASK)
#define UMCTL2_REGS_RANKCTL_diff_rank_rd_gap_MASK (0xF0U)
#define UMCTL2_REGS_RANKCTL_diff_rank_rd_gap_SHIFT (4U)
#define UMCTL2_REGS_RANKCTL_diff_rank_rd_gap_WIDTH (4U)
#define UMCTL2_REGS_RANKCTL_diff_rank_rd_gap(x)  (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_RANKCTL_diff_rank_rd_gap_SHIFT)) & UMCTL2_REGS_RANKCTL_diff_rank_rd_gap_MASK)
#define UMCTL2_REGS_RANKCTL_diff_rank_wr_gap_MASK (0xF00U)
#define UMCTL2_REGS_RANKCTL_diff_rank_wr_gap_SHIFT (8U)
#define UMCTL2_REGS_RANKCTL_diff_rank_wr_gap_WIDTH (4U)
#define UMCTL2_REGS_RANKCTL_diff_rank_wr_gap(x)  (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_RANKCTL_diff_rank_wr_gap_SHIFT)) & UMCTL2_REGS_RANKCTL_diff_rank_wr_gap_MASK)
/*! @} */

/*! @name DRAMTMG0 - DRAM Timing 0 */
/*! @{ */
#define UMCTL2_REGS_DRAMTMG0_t_ras_min_MASK      (0x3FU)
#define UMCTL2_REGS_DRAMTMG0_t_ras_min_SHIFT     (0U)
#define UMCTL2_REGS_DRAMTMG0_t_ras_min_WIDTH     (6U)
#define UMCTL2_REGS_DRAMTMG0_t_ras_min(x)        (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DRAMTMG0_t_ras_min_SHIFT)) & UMCTL2_REGS_DRAMTMG0_t_ras_min_MASK)
#define UMCTL2_REGS_DRAMTMG0_t_ras_max_MASK      (0x7F00U)
#define UMCTL2_REGS_DRAMTMG0_t_ras_max_SHIFT     (8U)
#define UMCTL2_REGS_DRAMTMG0_t_ras_max_WIDTH     (7U)
#define UMCTL2_REGS_DRAMTMG0_t_ras_max(x)        (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DRAMTMG0_t_ras_max_SHIFT)) & UMCTL2_REGS_DRAMTMG0_t_ras_max_MASK)
#define UMCTL2_REGS_DRAMTMG0_t_faw_MASK          (0x3F0000U)
#define UMCTL2_REGS_DRAMTMG0_t_faw_SHIFT         (16U)
#define UMCTL2_REGS_DRAMTMG0_t_faw_WIDTH         (6U)
#define UMCTL2_REGS_DRAMTMG0_t_faw(x)            (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DRAMTMG0_t_faw_SHIFT)) & UMCTL2_REGS_DRAMTMG0_t_faw_MASK)
#define UMCTL2_REGS_DRAMTMG0_wr2pre_MASK         (0x7F000000U)
#define UMCTL2_REGS_DRAMTMG0_wr2pre_SHIFT        (24U)
#define UMCTL2_REGS_DRAMTMG0_wr2pre_WIDTH        (7U)
#define UMCTL2_REGS_DRAMTMG0_wr2pre(x)           (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DRAMTMG0_wr2pre_SHIFT)) & UMCTL2_REGS_DRAMTMG0_wr2pre_MASK)
/*! @} */

/*! @name DRAMTMG1 - DRAM Timing 1 */
/*! @{ */
#define UMCTL2_REGS_DRAMTMG1_t_rc_MASK           (0x7FU)
#define UMCTL2_REGS_DRAMTMG1_t_rc_SHIFT          (0U)
#define UMCTL2_REGS_DRAMTMG1_t_rc_WIDTH          (7U)
#define UMCTL2_REGS_DRAMTMG1_t_rc(x)             (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DRAMTMG1_t_rc_SHIFT)) & UMCTL2_REGS_DRAMTMG1_t_rc_MASK)
#define UMCTL2_REGS_DRAMTMG1_rd2pre_MASK         (0x3F00U)
#define UMCTL2_REGS_DRAMTMG1_rd2pre_SHIFT        (8U)
#define UMCTL2_REGS_DRAMTMG1_rd2pre_WIDTH        (6U)
#define UMCTL2_REGS_DRAMTMG1_rd2pre(x)           (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DRAMTMG1_rd2pre_SHIFT)) & UMCTL2_REGS_DRAMTMG1_rd2pre_MASK)
#define UMCTL2_REGS_DRAMTMG1_t_xp_MASK           (0x1F0000U)
#define UMCTL2_REGS_DRAMTMG1_t_xp_SHIFT          (16U)
#define UMCTL2_REGS_DRAMTMG1_t_xp_WIDTH          (5U)
#define UMCTL2_REGS_DRAMTMG1_t_xp(x)             (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DRAMTMG1_t_xp_SHIFT)) & UMCTL2_REGS_DRAMTMG1_t_xp_MASK)
/*! @} */

/*! @name DRAMTMG2 - DRAM Timing 2 */
/*! @{ */
#define UMCTL2_REGS_DRAMTMG2_wr2rd_MASK          (0x3FU)
#define UMCTL2_REGS_DRAMTMG2_wr2rd_SHIFT         (0U)
#define UMCTL2_REGS_DRAMTMG2_wr2rd_WIDTH         (6U)
#define UMCTL2_REGS_DRAMTMG2_wr2rd(x)            (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DRAMTMG2_wr2rd_SHIFT)) & UMCTL2_REGS_DRAMTMG2_wr2rd_MASK)
#define UMCTL2_REGS_DRAMTMG2_rd2wr_MASK          (0x3F00U)
#define UMCTL2_REGS_DRAMTMG2_rd2wr_SHIFT         (8U)
#define UMCTL2_REGS_DRAMTMG2_rd2wr_WIDTH         (6U)
#define UMCTL2_REGS_DRAMTMG2_rd2wr(x)            (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DRAMTMG2_rd2wr_SHIFT)) & UMCTL2_REGS_DRAMTMG2_rd2wr_MASK)
#define UMCTL2_REGS_DRAMTMG2_read_latency_MASK   (0x3F0000U)
#define UMCTL2_REGS_DRAMTMG2_read_latency_SHIFT  (16U)
#define UMCTL2_REGS_DRAMTMG2_read_latency_WIDTH  (6U)
#define UMCTL2_REGS_DRAMTMG2_read_latency(x)     (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DRAMTMG2_read_latency_SHIFT)) & UMCTL2_REGS_DRAMTMG2_read_latency_MASK)
#define UMCTL2_REGS_DRAMTMG2_write_latency_MASK  (0x3F000000U)
#define UMCTL2_REGS_DRAMTMG2_write_latency_SHIFT (24U)
#define UMCTL2_REGS_DRAMTMG2_write_latency_WIDTH (6U)
#define UMCTL2_REGS_DRAMTMG2_write_latency(x)    (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DRAMTMG2_write_latency_SHIFT)) & UMCTL2_REGS_DRAMTMG2_write_latency_MASK)
/*! @} */

/*! @name DRAMTMG3 - DRAM Timing 3 */
/*! @{ */
#define UMCTL2_REGS_DRAMTMG3_t_mod_MASK          (0x3FFU)
#define UMCTL2_REGS_DRAMTMG3_t_mod_SHIFT         (0U)
#define UMCTL2_REGS_DRAMTMG3_t_mod_WIDTH         (10U)
#define UMCTL2_REGS_DRAMTMG3_t_mod(x)            (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DRAMTMG3_t_mod_SHIFT)) & UMCTL2_REGS_DRAMTMG3_t_mod_MASK)
#define UMCTL2_REGS_DRAMTMG3_t_mrd_MASK          (0x3F000U)
#define UMCTL2_REGS_DRAMTMG3_t_mrd_SHIFT         (12U)
#define UMCTL2_REGS_DRAMTMG3_t_mrd_WIDTH         (6U)
#define UMCTL2_REGS_DRAMTMG3_t_mrd(x)            (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DRAMTMG3_t_mrd_SHIFT)) & UMCTL2_REGS_DRAMTMG3_t_mrd_MASK)
#define UMCTL2_REGS_DRAMTMG3_t_mrw_MASK          (0x3FF00000U)
#define UMCTL2_REGS_DRAMTMG3_t_mrw_SHIFT         (20U)
#define UMCTL2_REGS_DRAMTMG3_t_mrw_WIDTH         (10U)
#define UMCTL2_REGS_DRAMTMG3_t_mrw(x)            (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DRAMTMG3_t_mrw_SHIFT)) & UMCTL2_REGS_DRAMTMG3_t_mrw_MASK)
/*! @} */

/*! @name DRAMTMG4 - DRAM Timing 4 */
/*! @{ */
#define UMCTL2_REGS_DRAMTMG4_t_rp_MASK           (0x1FU)
#define UMCTL2_REGS_DRAMTMG4_t_rp_SHIFT          (0U)
#define UMCTL2_REGS_DRAMTMG4_t_rp_WIDTH          (5U)
#define UMCTL2_REGS_DRAMTMG4_t_rp(x)             (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DRAMTMG4_t_rp_SHIFT)) & UMCTL2_REGS_DRAMTMG4_t_rp_MASK)
#define UMCTL2_REGS_DRAMTMG4_t_rrd_MASK          (0xF00U)
#define UMCTL2_REGS_DRAMTMG4_t_rrd_SHIFT         (8U)
#define UMCTL2_REGS_DRAMTMG4_t_rrd_WIDTH         (4U)
#define UMCTL2_REGS_DRAMTMG4_t_rrd(x)            (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DRAMTMG4_t_rrd_SHIFT)) & UMCTL2_REGS_DRAMTMG4_t_rrd_MASK)
#define UMCTL2_REGS_DRAMTMG4_t_ccd_MASK          (0xF0000U)
#define UMCTL2_REGS_DRAMTMG4_t_ccd_SHIFT         (16U)
#define UMCTL2_REGS_DRAMTMG4_t_ccd_WIDTH         (4U)
#define UMCTL2_REGS_DRAMTMG4_t_ccd(x)            (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DRAMTMG4_t_ccd_SHIFT)) & UMCTL2_REGS_DRAMTMG4_t_ccd_MASK)
#define UMCTL2_REGS_DRAMTMG4_t_rcd_MASK          (0x1F000000U)
#define UMCTL2_REGS_DRAMTMG4_t_rcd_SHIFT         (24U)
#define UMCTL2_REGS_DRAMTMG4_t_rcd_WIDTH         (5U)
#define UMCTL2_REGS_DRAMTMG4_t_rcd(x)            (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DRAMTMG4_t_rcd_SHIFT)) & UMCTL2_REGS_DRAMTMG4_t_rcd_MASK)
/*! @} */

/*! @name DRAMTMG5 - DRAM Timing 5 */
/*! @{ */
#define UMCTL2_REGS_DRAMTMG5_t_cke_MASK          (0x1FU)
#define UMCTL2_REGS_DRAMTMG5_t_cke_SHIFT         (0U)
#define UMCTL2_REGS_DRAMTMG5_t_cke_WIDTH         (5U)
#define UMCTL2_REGS_DRAMTMG5_t_cke(x)            (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DRAMTMG5_t_cke_SHIFT)) & UMCTL2_REGS_DRAMTMG5_t_cke_MASK)
#define UMCTL2_REGS_DRAMTMG5_t_ckesr_MASK        (0x3F00U)
#define UMCTL2_REGS_DRAMTMG5_t_ckesr_SHIFT       (8U)
#define UMCTL2_REGS_DRAMTMG5_t_ckesr_WIDTH       (6U)
#define UMCTL2_REGS_DRAMTMG5_t_ckesr(x)          (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DRAMTMG5_t_ckesr_SHIFT)) & UMCTL2_REGS_DRAMTMG5_t_ckesr_MASK)
#define UMCTL2_REGS_DRAMTMG5_t_cksre_MASK        (0xF0000U)
#define UMCTL2_REGS_DRAMTMG5_t_cksre_SHIFT       (16U)
#define UMCTL2_REGS_DRAMTMG5_t_cksre_WIDTH       (4U)
#define UMCTL2_REGS_DRAMTMG5_t_cksre(x)          (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DRAMTMG5_t_cksre_SHIFT)) & UMCTL2_REGS_DRAMTMG5_t_cksre_MASK)
#define UMCTL2_REGS_DRAMTMG5_t_cksrx_MASK        (0xF000000U)
#define UMCTL2_REGS_DRAMTMG5_t_cksrx_SHIFT       (24U)
#define UMCTL2_REGS_DRAMTMG5_t_cksrx_WIDTH       (4U)
#define UMCTL2_REGS_DRAMTMG5_t_cksrx(x)          (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DRAMTMG5_t_cksrx_SHIFT)) & UMCTL2_REGS_DRAMTMG5_t_cksrx_MASK)
/*! @} */

/*! @name DRAMTMG6 - DRAM Timing 6 */
/*! @{ */
#define UMCTL2_REGS_DRAMTMG6_t_ckcsx_MASK        (0xFU)
#define UMCTL2_REGS_DRAMTMG6_t_ckcsx_SHIFT       (0U)
#define UMCTL2_REGS_DRAMTMG6_t_ckcsx_WIDTH       (4U)
#define UMCTL2_REGS_DRAMTMG6_t_ckcsx(x)          (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DRAMTMG6_t_ckcsx_SHIFT)) & UMCTL2_REGS_DRAMTMG6_t_ckcsx_MASK)
#define UMCTL2_REGS_DRAMTMG6_t_ckdpdx_MASK       (0xF0000U)
#define UMCTL2_REGS_DRAMTMG6_t_ckdpdx_SHIFT      (16U)
#define UMCTL2_REGS_DRAMTMG6_t_ckdpdx_WIDTH      (4U)
#define UMCTL2_REGS_DRAMTMG6_t_ckdpdx(x)         (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DRAMTMG6_t_ckdpdx_SHIFT)) & UMCTL2_REGS_DRAMTMG6_t_ckdpdx_MASK)
#define UMCTL2_REGS_DRAMTMG6_t_ckdpde_MASK       (0xF000000U)
#define UMCTL2_REGS_DRAMTMG6_t_ckdpde_SHIFT      (24U)
#define UMCTL2_REGS_DRAMTMG6_t_ckdpde_WIDTH      (4U)
#define UMCTL2_REGS_DRAMTMG6_t_ckdpde(x)         (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DRAMTMG6_t_ckdpde_SHIFT)) & UMCTL2_REGS_DRAMTMG6_t_ckdpde_MASK)
/*! @} */

/*! @name DRAMTMG7 - DRAM Timing 7 */
/*! @{ */
#define UMCTL2_REGS_DRAMTMG7_t_ckpdx_MASK        (0xFU)
#define UMCTL2_REGS_DRAMTMG7_t_ckpdx_SHIFT       (0U)
#define UMCTL2_REGS_DRAMTMG7_t_ckpdx_WIDTH       (4U)
#define UMCTL2_REGS_DRAMTMG7_t_ckpdx(x)          (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DRAMTMG7_t_ckpdx_SHIFT)) & UMCTL2_REGS_DRAMTMG7_t_ckpdx_MASK)
#define UMCTL2_REGS_DRAMTMG7_t_ckpde_MASK        (0xF00U)
#define UMCTL2_REGS_DRAMTMG7_t_ckpde_SHIFT       (8U)
#define UMCTL2_REGS_DRAMTMG7_t_ckpde_WIDTH       (4U)
#define UMCTL2_REGS_DRAMTMG7_t_ckpde(x)          (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DRAMTMG7_t_ckpde_SHIFT)) & UMCTL2_REGS_DRAMTMG7_t_ckpde_MASK)
/*! @} */

/*! @name DRAMTMG8 - DRAM Timing 8 */
/*! @{ */
#define UMCTL2_REGS_DRAMTMG8_t_xs_x32_MASK       (0x7FU)
#define UMCTL2_REGS_DRAMTMG8_t_xs_x32_SHIFT      (0U)
#define UMCTL2_REGS_DRAMTMG8_t_xs_x32_WIDTH      (7U)
#define UMCTL2_REGS_DRAMTMG8_t_xs_x32(x)         (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DRAMTMG8_t_xs_x32_SHIFT)) & UMCTL2_REGS_DRAMTMG8_t_xs_x32_MASK)
#define UMCTL2_REGS_DRAMTMG8_t_xs_dll_x32_MASK   (0x7F00U)
#define UMCTL2_REGS_DRAMTMG8_t_xs_dll_x32_SHIFT  (8U)
#define UMCTL2_REGS_DRAMTMG8_t_xs_dll_x32_WIDTH  (7U)
#define UMCTL2_REGS_DRAMTMG8_t_xs_dll_x32(x)     (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DRAMTMG8_t_xs_dll_x32_SHIFT)) & UMCTL2_REGS_DRAMTMG8_t_xs_dll_x32_MASK)
#define UMCTL2_REGS_DRAMTMG8_t_xs_abort_x32_MASK (0x7F0000U)
#define UMCTL2_REGS_DRAMTMG8_t_xs_abort_x32_SHIFT (16U)
#define UMCTL2_REGS_DRAMTMG8_t_xs_abort_x32_WIDTH (7U)
#define UMCTL2_REGS_DRAMTMG8_t_xs_abort_x32(x)   (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DRAMTMG8_t_xs_abort_x32_SHIFT)) & UMCTL2_REGS_DRAMTMG8_t_xs_abort_x32_MASK)
#define UMCTL2_REGS_DRAMTMG8_t_xs_fast_x32_MASK  (0x7F000000U)
#define UMCTL2_REGS_DRAMTMG8_t_xs_fast_x32_SHIFT (24U)
#define UMCTL2_REGS_DRAMTMG8_t_xs_fast_x32_WIDTH (7U)
#define UMCTL2_REGS_DRAMTMG8_t_xs_fast_x32(x)    (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DRAMTMG8_t_xs_fast_x32_SHIFT)) & UMCTL2_REGS_DRAMTMG8_t_xs_fast_x32_MASK)
/*! @} */

/*! @name DRAMTMG9 - DRAM Timing 9 */
/*! @{ */
#define UMCTL2_REGS_DRAMTMG9_wr2rd_s_MASK        (0x3FU)
#define UMCTL2_REGS_DRAMTMG9_wr2rd_s_SHIFT       (0U)
#define UMCTL2_REGS_DRAMTMG9_wr2rd_s_WIDTH       (6U)
#define UMCTL2_REGS_DRAMTMG9_wr2rd_s(x)          (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DRAMTMG9_wr2rd_s_SHIFT)) & UMCTL2_REGS_DRAMTMG9_wr2rd_s_MASK)
#define UMCTL2_REGS_DRAMTMG9_t_rrd_s_MASK        (0xF00U)
#define UMCTL2_REGS_DRAMTMG9_t_rrd_s_SHIFT       (8U)
#define UMCTL2_REGS_DRAMTMG9_t_rrd_s_WIDTH       (4U)
#define UMCTL2_REGS_DRAMTMG9_t_rrd_s(x)          (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DRAMTMG9_t_rrd_s_SHIFT)) & UMCTL2_REGS_DRAMTMG9_t_rrd_s_MASK)
#define UMCTL2_REGS_DRAMTMG9_t_ccd_s_MASK        (0x70000U)
#define UMCTL2_REGS_DRAMTMG9_t_ccd_s_SHIFT       (16U)
#define UMCTL2_REGS_DRAMTMG9_t_ccd_s_WIDTH       (3U)
#define UMCTL2_REGS_DRAMTMG9_t_ccd_s(x)          (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DRAMTMG9_t_ccd_s_SHIFT)) & UMCTL2_REGS_DRAMTMG9_t_ccd_s_MASK)
#define UMCTL2_REGS_DRAMTMG9_ddr4_wr_preamble_MASK (0x40000000U)
#define UMCTL2_REGS_DRAMTMG9_ddr4_wr_preamble_SHIFT (30U)
#define UMCTL2_REGS_DRAMTMG9_ddr4_wr_preamble_WIDTH (1U)
#define UMCTL2_REGS_DRAMTMG9_ddr4_wr_preamble(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DRAMTMG9_ddr4_wr_preamble_SHIFT)) & UMCTL2_REGS_DRAMTMG9_ddr4_wr_preamble_MASK)
/*! @} */

/*! @name DRAMTMG10 - DRAM Timing 10 */
/*! @{ */
#define UMCTL2_REGS_DRAMTMG10_t_gear_hold_MASK   (0x3U)
#define UMCTL2_REGS_DRAMTMG10_t_gear_hold_SHIFT  (0U)
#define UMCTL2_REGS_DRAMTMG10_t_gear_hold_WIDTH  (2U)
#define UMCTL2_REGS_DRAMTMG10_t_gear_hold(x)     (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DRAMTMG10_t_gear_hold_SHIFT)) & UMCTL2_REGS_DRAMTMG10_t_gear_hold_MASK)
#define UMCTL2_REGS_DRAMTMG10_t_gear_setup_MASK  (0xCU)
#define UMCTL2_REGS_DRAMTMG10_t_gear_setup_SHIFT (2U)
#define UMCTL2_REGS_DRAMTMG10_t_gear_setup_WIDTH (2U)
#define UMCTL2_REGS_DRAMTMG10_t_gear_setup(x)    (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DRAMTMG10_t_gear_setup_SHIFT)) & UMCTL2_REGS_DRAMTMG10_t_gear_setup_MASK)
#define UMCTL2_REGS_DRAMTMG10_t_cmd_gear_MASK    (0x1F00U)
#define UMCTL2_REGS_DRAMTMG10_t_cmd_gear_SHIFT   (8U)
#define UMCTL2_REGS_DRAMTMG10_t_cmd_gear_WIDTH   (5U)
#define UMCTL2_REGS_DRAMTMG10_t_cmd_gear(x)      (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DRAMTMG10_t_cmd_gear_SHIFT)) & UMCTL2_REGS_DRAMTMG10_t_cmd_gear_MASK)
#define UMCTL2_REGS_DRAMTMG10_t_sync_gear_MASK   (0x1F0000U)
#define UMCTL2_REGS_DRAMTMG10_t_sync_gear_SHIFT  (16U)
#define UMCTL2_REGS_DRAMTMG10_t_sync_gear_WIDTH  (5U)
#define UMCTL2_REGS_DRAMTMG10_t_sync_gear(x)     (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DRAMTMG10_t_sync_gear_SHIFT)) & UMCTL2_REGS_DRAMTMG10_t_sync_gear_MASK)
/*! @} */

/*! @name DRAMTMG11 - DRAM Timing 11 */
/*! @{ */
#define UMCTL2_REGS_DRAMTMG11_t_ckmpe_MASK       (0x1FU)
#define UMCTL2_REGS_DRAMTMG11_t_ckmpe_SHIFT      (0U)
#define UMCTL2_REGS_DRAMTMG11_t_ckmpe_WIDTH      (5U)
#define UMCTL2_REGS_DRAMTMG11_t_ckmpe(x)         (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DRAMTMG11_t_ckmpe_SHIFT)) & UMCTL2_REGS_DRAMTMG11_t_ckmpe_MASK)
#define UMCTL2_REGS_DRAMTMG11_t_mpx_s_MASK       (0x300U)
#define UMCTL2_REGS_DRAMTMG11_t_mpx_s_SHIFT      (8U)
#define UMCTL2_REGS_DRAMTMG11_t_mpx_s_WIDTH      (2U)
#define UMCTL2_REGS_DRAMTMG11_t_mpx_s(x)         (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DRAMTMG11_t_mpx_s_SHIFT)) & UMCTL2_REGS_DRAMTMG11_t_mpx_s_MASK)
#define UMCTL2_REGS_DRAMTMG11_t_mpx_lh_MASK      (0x1F0000U)
#define UMCTL2_REGS_DRAMTMG11_t_mpx_lh_SHIFT     (16U)
#define UMCTL2_REGS_DRAMTMG11_t_mpx_lh_WIDTH     (5U)
#define UMCTL2_REGS_DRAMTMG11_t_mpx_lh(x)        (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DRAMTMG11_t_mpx_lh_SHIFT)) & UMCTL2_REGS_DRAMTMG11_t_mpx_lh_MASK)
#define UMCTL2_REGS_DRAMTMG11_post_mpsm_gap_x32_MASK (0x7F000000U)
#define UMCTL2_REGS_DRAMTMG11_post_mpsm_gap_x32_SHIFT (24U)
#define UMCTL2_REGS_DRAMTMG11_post_mpsm_gap_x32_WIDTH (7U)
#define UMCTL2_REGS_DRAMTMG11_post_mpsm_gap_x32(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DRAMTMG11_post_mpsm_gap_x32_SHIFT)) & UMCTL2_REGS_DRAMTMG11_post_mpsm_gap_x32_MASK)
/*! @} */

/*! @name DRAMTMG12 - DRAM Timing 12 */
/*! @{ */
#define UMCTL2_REGS_DRAMTMG12_t_mrd_pda_MASK     (0x1FU)
#define UMCTL2_REGS_DRAMTMG12_t_mrd_pda_SHIFT    (0U)
#define UMCTL2_REGS_DRAMTMG12_t_mrd_pda_WIDTH    (5U)
#define UMCTL2_REGS_DRAMTMG12_t_mrd_pda(x)       (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DRAMTMG12_t_mrd_pda_SHIFT)) & UMCTL2_REGS_DRAMTMG12_t_mrd_pda_MASK)
#define UMCTL2_REGS_DRAMTMG12_t_cmdcke_MASK      (0x30000U)
#define UMCTL2_REGS_DRAMTMG12_t_cmdcke_SHIFT     (16U)
#define UMCTL2_REGS_DRAMTMG12_t_cmdcke_WIDTH     (2U)
#define UMCTL2_REGS_DRAMTMG12_t_cmdcke(x)        (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DRAMTMG12_t_cmdcke_SHIFT)) & UMCTL2_REGS_DRAMTMG12_t_cmdcke_MASK)
/*! @} */

/*! @name DRAMTMG13 - DRAM Timing 13 */
/*! @{ */
#define UMCTL2_REGS_DRAMTMG13_t_ppd_MASK         (0x7U)
#define UMCTL2_REGS_DRAMTMG13_t_ppd_SHIFT        (0U)
#define UMCTL2_REGS_DRAMTMG13_t_ppd_WIDTH        (3U)
#define UMCTL2_REGS_DRAMTMG13_t_ppd(x)           (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DRAMTMG13_t_ppd_SHIFT)) & UMCTL2_REGS_DRAMTMG13_t_ppd_MASK)
#define UMCTL2_REGS_DRAMTMG13_t_ccd_mw_MASK      (0x3F0000U)
#define UMCTL2_REGS_DRAMTMG13_t_ccd_mw_SHIFT     (16U)
#define UMCTL2_REGS_DRAMTMG13_t_ccd_mw_WIDTH     (6U)
#define UMCTL2_REGS_DRAMTMG13_t_ccd_mw(x)        (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DRAMTMG13_t_ccd_mw_SHIFT)) & UMCTL2_REGS_DRAMTMG13_t_ccd_mw_MASK)
#define UMCTL2_REGS_DRAMTMG13_odtloff_MASK       (0x7F000000U)
#define UMCTL2_REGS_DRAMTMG13_odtloff_SHIFT      (24U)
#define UMCTL2_REGS_DRAMTMG13_odtloff_WIDTH      (7U)
#define UMCTL2_REGS_DRAMTMG13_odtloff(x)         (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DRAMTMG13_odtloff_SHIFT)) & UMCTL2_REGS_DRAMTMG13_odtloff_MASK)
/*! @} */

/*! @name DRAMTMG14 - DRAM Timing 14 */
/*! @{ */
#define UMCTL2_REGS_DRAMTMG14_t_xsr_MASK         (0xFFFU)
#define UMCTL2_REGS_DRAMTMG14_t_xsr_SHIFT        (0U)
#define UMCTL2_REGS_DRAMTMG14_t_xsr_WIDTH        (12U)
#define UMCTL2_REGS_DRAMTMG14_t_xsr(x)           (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DRAMTMG14_t_xsr_SHIFT)) & UMCTL2_REGS_DRAMTMG14_t_xsr_MASK)
/*! @} */

/*! @name DRAMTMG15 - DRAM Timing 15 */
/*! @{ */
#define UMCTL2_REGS_DRAMTMG15_t_stab_x32_MASK    (0xFFU)
#define UMCTL2_REGS_DRAMTMG15_t_stab_x32_SHIFT   (0U)
#define UMCTL2_REGS_DRAMTMG15_t_stab_x32_WIDTH   (8U)
#define UMCTL2_REGS_DRAMTMG15_t_stab_x32(x)      (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DRAMTMG15_t_stab_x32_SHIFT)) & UMCTL2_REGS_DRAMTMG15_t_stab_x32_MASK)
#define UMCTL2_REGS_DRAMTMG15_en_dfi_lp_t_stab_MASK (0x80000000U)
#define UMCTL2_REGS_DRAMTMG15_en_dfi_lp_t_stab_SHIFT (31U)
#define UMCTL2_REGS_DRAMTMG15_en_dfi_lp_t_stab_WIDTH (1U)
#define UMCTL2_REGS_DRAMTMG15_en_dfi_lp_t_stab(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DRAMTMG15_en_dfi_lp_t_stab_SHIFT)) & UMCTL2_REGS_DRAMTMG15_en_dfi_lp_t_stab_MASK)
/*! @} */

/*! @name ZQCTL0 - ZQ Control 0 */
/*! @{ */
#define UMCTL2_REGS_ZQCTL0_t_zq_short_nop_MASK   (0x3FFU)
#define UMCTL2_REGS_ZQCTL0_t_zq_short_nop_SHIFT  (0U)
#define UMCTL2_REGS_ZQCTL0_t_zq_short_nop_WIDTH  (10U)
#define UMCTL2_REGS_ZQCTL0_t_zq_short_nop(x)     (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ZQCTL0_t_zq_short_nop_SHIFT)) & UMCTL2_REGS_ZQCTL0_t_zq_short_nop_MASK)
#define UMCTL2_REGS_ZQCTL0_t_zq_long_nop_MASK    (0x7FF0000U)
#define UMCTL2_REGS_ZQCTL0_t_zq_long_nop_SHIFT   (16U)
#define UMCTL2_REGS_ZQCTL0_t_zq_long_nop_WIDTH   (11U)
#define UMCTL2_REGS_ZQCTL0_t_zq_long_nop(x)      (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ZQCTL0_t_zq_long_nop_SHIFT)) & UMCTL2_REGS_ZQCTL0_t_zq_long_nop_MASK)
#define UMCTL2_REGS_ZQCTL0_dis_mpsmx_zqcl_MASK   (0x10000000U)
#define UMCTL2_REGS_ZQCTL0_dis_mpsmx_zqcl_SHIFT  (28U)
#define UMCTL2_REGS_ZQCTL0_dis_mpsmx_zqcl_WIDTH  (1U)
#define UMCTL2_REGS_ZQCTL0_dis_mpsmx_zqcl(x)     (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ZQCTL0_dis_mpsmx_zqcl_SHIFT)) & UMCTL2_REGS_ZQCTL0_dis_mpsmx_zqcl_MASK)
#define UMCTL2_REGS_ZQCTL0_zq_resistor_shared_MASK (0x20000000U)
#define UMCTL2_REGS_ZQCTL0_zq_resistor_shared_SHIFT (29U)
#define UMCTL2_REGS_ZQCTL0_zq_resistor_shared_WIDTH (1U)
#define UMCTL2_REGS_ZQCTL0_zq_resistor_shared(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ZQCTL0_zq_resistor_shared_SHIFT)) & UMCTL2_REGS_ZQCTL0_zq_resistor_shared_MASK)
#define UMCTL2_REGS_ZQCTL0_dis_srx_zqcl_MASK     (0x40000000U)
#define UMCTL2_REGS_ZQCTL0_dis_srx_zqcl_SHIFT    (30U)
#define UMCTL2_REGS_ZQCTL0_dis_srx_zqcl_WIDTH    (1U)
#define UMCTL2_REGS_ZQCTL0_dis_srx_zqcl(x)       (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ZQCTL0_dis_srx_zqcl_SHIFT)) & UMCTL2_REGS_ZQCTL0_dis_srx_zqcl_MASK)
#define UMCTL2_REGS_ZQCTL0_dis_auto_zq_MASK      (0x80000000U)
#define UMCTL2_REGS_ZQCTL0_dis_auto_zq_SHIFT     (31U)
#define UMCTL2_REGS_ZQCTL0_dis_auto_zq_WIDTH     (1U)
#define UMCTL2_REGS_ZQCTL0_dis_auto_zq(x)        (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ZQCTL0_dis_auto_zq_SHIFT)) & UMCTL2_REGS_ZQCTL0_dis_auto_zq_MASK)
/*! @} */

/*! @name ZQCTL1 - ZQ Control 1 */
/*! @{ */
#define UMCTL2_REGS_ZQCTL1_t_zq_short_interval_x1024_MASK (0xFFFFFU)
#define UMCTL2_REGS_ZQCTL1_t_zq_short_interval_x1024_SHIFT (0U)
#define UMCTL2_REGS_ZQCTL1_t_zq_short_interval_x1024_WIDTH (20U)
#define UMCTL2_REGS_ZQCTL1_t_zq_short_interval_x1024(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ZQCTL1_t_zq_short_interval_x1024_SHIFT)) & UMCTL2_REGS_ZQCTL1_t_zq_short_interval_x1024_MASK)
#define UMCTL2_REGS_ZQCTL1_t_zq_reset_nop_MASK   (0x3FF00000U)
#define UMCTL2_REGS_ZQCTL1_t_zq_reset_nop_SHIFT  (20U)
#define UMCTL2_REGS_ZQCTL1_t_zq_reset_nop_WIDTH  (10U)
#define UMCTL2_REGS_ZQCTL1_t_zq_reset_nop(x)     (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ZQCTL1_t_zq_reset_nop_SHIFT)) & UMCTL2_REGS_ZQCTL1_t_zq_reset_nop_MASK)
/*! @} */

/*! @name ZQCTL2 - ZQ Control 2 */
/*! @{ */
#define UMCTL2_REGS_ZQCTL2_zq_reset_MASK         (0x1U)
#define UMCTL2_REGS_ZQCTL2_zq_reset_SHIFT        (0U)
#define UMCTL2_REGS_ZQCTL2_zq_reset_WIDTH        (1U)
#define UMCTL2_REGS_ZQCTL2_zq_reset(x)           (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ZQCTL2_zq_reset_SHIFT)) & UMCTL2_REGS_ZQCTL2_zq_reset_MASK)
/*! @} */

/*! @name ZQSTAT - ZQ Status */
/*! @{ */
#define UMCTL2_REGS_ZQSTAT_zq_reset_busy_MASK    (0x1U)
#define UMCTL2_REGS_ZQSTAT_zq_reset_busy_SHIFT   (0U)
#define UMCTL2_REGS_ZQSTAT_zq_reset_busy_WIDTH   (1U)
#define UMCTL2_REGS_ZQSTAT_zq_reset_busy(x)      (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ZQSTAT_zq_reset_busy_SHIFT)) & UMCTL2_REGS_ZQSTAT_zq_reset_busy_MASK)
/*! @} */

/*! @name DFITMG0 - DFI Timing 0 */
/*! @{ */
#define UMCTL2_REGS_DFITMG0_dfi_tphy_wrlat_MASK  (0x3FU)
#define UMCTL2_REGS_DFITMG0_dfi_tphy_wrlat_SHIFT (0U)
#define UMCTL2_REGS_DFITMG0_dfi_tphy_wrlat_WIDTH (6U)
#define UMCTL2_REGS_DFITMG0_dfi_tphy_wrlat(x)    (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DFITMG0_dfi_tphy_wrlat_SHIFT)) & UMCTL2_REGS_DFITMG0_dfi_tphy_wrlat_MASK)
#define UMCTL2_REGS_DFITMG0_dfi_tphy_wrdata_MASK (0x3F00U)
#define UMCTL2_REGS_DFITMG0_dfi_tphy_wrdata_SHIFT (8U)
#define UMCTL2_REGS_DFITMG0_dfi_tphy_wrdata_WIDTH (6U)
#define UMCTL2_REGS_DFITMG0_dfi_tphy_wrdata(x)   (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DFITMG0_dfi_tphy_wrdata_SHIFT)) & UMCTL2_REGS_DFITMG0_dfi_tphy_wrdata_MASK)
#define UMCTL2_REGS_DFITMG0_dfi_wrdata_use_dfi_phy_clk_MASK (0x8000U)
#define UMCTL2_REGS_DFITMG0_dfi_wrdata_use_dfi_phy_clk_SHIFT (15U)
#define UMCTL2_REGS_DFITMG0_dfi_wrdata_use_dfi_phy_clk_WIDTH (1U)
#define UMCTL2_REGS_DFITMG0_dfi_wrdata_use_dfi_phy_clk(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DFITMG0_dfi_wrdata_use_dfi_phy_clk_SHIFT)) & UMCTL2_REGS_DFITMG0_dfi_wrdata_use_dfi_phy_clk_MASK)
#define UMCTL2_REGS_DFITMG0_dfi_t_rddata_en_MASK (0x7F0000U)
#define UMCTL2_REGS_DFITMG0_dfi_t_rddata_en_SHIFT (16U)
#define UMCTL2_REGS_DFITMG0_dfi_t_rddata_en_WIDTH (7U)
#define UMCTL2_REGS_DFITMG0_dfi_t_rddata_en(x)   (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DFITMG0_dfi_t_rddata_en_SHIFT)) & UMCTL2_REGS_DFITMG0_dfi_t_rddata_en_MASK)
#define UMCTL2_REGS_DFITMG0_dfi_rddata_use_dfi_phy_clk_MASK (0x800000U)
#define UMCTL2_REGS_DFITMG0_dfi_rddata_use_dfi_phy_clk_SHIFT (23U)
#define UMCTL2_REGS_DFITMG0_dfi_rddata_use_dfi_phy_clk_WIDTH (1U)
#define UMCTL2_REGS_DFITMG0_dfi_rddata_use_dfi_phy_clk(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DFITMG0_dfi_rddata_use_dfi_phy_clk_SHIFT)) & UMCTL2_REGS_DFITMG0_dfi_rddata_use_dfi_phy_clk_MASK)
#define UMCTL2_REGS_DFITMG0_dfi_t_ctrl_delay_MASK (0x1F000000U)
#define UMCTL2_REGS_DFITMG0_dfi_t_ctrl_delay_SHIFT (24U)
#define UMCTL2_REGS_DFITMG0_dfi_t_ctrl_delay_WIDTH (5U)
#define UMCTL2_REGS_DFITMG0_dfi_t_ctrl_delay(x)  (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DFITMG0_dfi_t_ctrl_delay_SHIFT)) & UMCTL2_REGS_DFITMG0_dfi_t_ctrl_delay_MASK)
/*! @} */

/*! @name DFITMG1 - DFI Timing 1 */
/*! @{ */
#define UMCTL2_REGS_DFITMG1_dfi_t_dram_clk_enable_MASK (0x1FU)
#define UMCTL2_REGS_DFITMG1_dfi_t_dram_clk_enable_SHIFT (0U)
#define UMCTL2_REGS_DFITMG1_dfi_t_dram_clk_enable_WIDTH (5U)
#define UMCTL2_REGS_DFITMG1_dfi_t_dram_clk_enable(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DFITMG1_dfi_t_dram_clk_enable_SHIFT)) & UMCTL2_REGS_DFITMG1_dfi_t_dram_clk_enable_MASK)
#define UMCTL2_REGS_DFITMG1_dfi_t_dram_clk_disable_MASK (0x1F00U)
#define UMCTL2_REGS_DFITMG1_dfi_t_dram_clk_disable_SHIFT (8U)
#define UMCTL2_REGS_DFITMG1_dfi_t_dram_clk_disable_WIDTH (5U)
#define UMCTL2_REGS_DFITMG1_dfi_t_dram_clk_disable(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DFITMG1_dfi_t_dram_clk_disable_SHIFT)) & UMCTL2_REGS_DFITMG1_dfi_t_dram_clk_disable_MASK)
#define UMCTL2_REGS_DFITMG1_dfi_t_wrdata_delay_MASK (0x1F0000U)
#define UMCTL2_REGS_DFITMG1_dfi_t_wrdata_delay_SHIFT (16U)
#define UMCTL2_REGS_DFITMG1_dfi_t_wrdata_delay_WIDTH (5U)
#define UMCTL2_REGS_DFITMG1_dfi_t_wrdata_delay(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DFITMG1_dfi_t_wrdata_delay_SHIFT)) & UMCTL2_REGS_DFITMG1_dfi_t_wrdata_delay_MASK)
#define UMCTL2_REGS_DFITMG1_dfi_t_parin_lat_MASK (0x3000000U)
#define UMCTL2_REGS_DFITMG1_dfi_t_parin_lat_SHIFT (24U)
#define UMCTL2_REGS_DFITMG1_dfi_t_parin_lat_WIDTH (2U)
#define UMCTL2_REGS_DFITMG1_dfi_t_parin_lat(x)   (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DFITMG1_dfi_t_parin_lat_SHIFT)) & UMCTL2_REGS_DFITMG1_dfi_t_parin_lat_MASK)
#define UMCTL2_REGS_DFITMG1_dfi_t_cmd_lat_MASK   (0xF0000000U)
#define UMCTL2_REGS_DFITMG1_dfi_t_cmd_lat_SHIFT  (28U)
#define UMCTL2_REGS_DFITMG1_dfi_t_cmd_lat_WIDTH  (4U)
#define UMCTL2_REGS_DFITMG1_dfi_t_cmd_lat(x)     (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DFITMG1_dfi_t_cmd_lat_SHIFT)) & UMCTL2_REGS_DFITMG1_dfi_t_cmd_lat_MASK)
/*! @} */

/*! @name DFILPCFG0 - DFI Low Power Configuration 0 */
/*! @{ */
#define UMCTL2_REGS_DFILPCFG0_dfi_lp_en_pd_MASK  (0x1U)
#define UMCTL2_REGS_DFILPCFG0_dfi_lp_en_pd_SHIFT (0U)
#define UMCTL2_REGS_DFILPCFG0_dfi_lp_en_pd_WIDTH (1U)
#define UMCTL2_REGS_DFILPCFG0_dfi_lp_en_pd(x)    (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DFILPCFG0_dfi_lp_en_pd_SHIFT)) & UMCTL2_REGS_DFILPCFG0_dfi_lp_en_pd_MASK)
#define UMCTL2_REGS_DFILPCFG0_dfi_lp_wakeup_pd_MASK (0xF0U)
#define UMCTL2_REGS_DFILPCFG0_dfi_lp_wakeup_pd_SHIFT (4U)
#define UMCTL2_REGS_DFILPCFG0_dfi_lp_wakeup_pd_WIDTH (4U)
#define UMCTL2_REGS_DFILPCFG0_dfi_lp_wakeup_pd(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DFILPCFG0_dfi_lp_wakeup_pd_SHIFT)) & UMCTL2_REGS_DFILPCFG0_dfi_lp_wakeup_pd_MASK)
#define UMCTL2_REGS_DFILPCFG0_dfi_lp_en_sr_MASK  (0x100U)
#define UMCTL2_REGS_DFILPCFG0_dfi_lp_en_sr_SHIFT (8U)
#define UMCTL2_REGS_DFILPCFG0_dfi_lp_en_sr_WIDTH (1U)
#define UMCTL2_REGS_DFILPCFG0_dfi_lp_en_sr(x)    (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DFILPCFG0_dfi_lp_en_sr_SHIFT)) & UMCTL2_REGS_DFILPCFG0_dfi_lp_en_sr_MASK)
#define UMCTL2_REGS_DFILPCFG0_dfi_lp_wakeup_sr_MASK (0xF000U)
#define UMCTL2_REGS_DFILPCFG0_dfi_lp_wakeup_sr_SHIFT (12U)
#define UMCTL2_REGS_DFILPCFG0_dfi_lp_wakeup_sr_WIDTH (4U)
#define UMCTL2_REGS_DFILPCFG0_dfi_lp_wakeup_sr(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DFILPCFG0_dfi_lp_wakeup_sr_SHIFT)) & UMCTL2_REGS_DFILPCFG0_dfi_lp_wakeup_sr_MASK)
#define UMCTL2_REGS_DFILPCFG0_dfi_lp_en_dpd_MASK (0x10000U)
#define UMCTL2_REGS_DFILPCFG0_dfi_lp_en_dpd_SHIFT (16U)
#define UMCTL2_REGS_DFILPCFG0_dfi_lp_en_dpd_WIDTH (1U)
#define UMCTL2_REGS_DFILPCFG0_dfi_lp_en_dpd(x)   (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DFILPCFG0_dfi_lp_en_dpd_SHIFT)) & UMCTL2_REGS_DFILPCFG0_dfi_lp_en_dpd_MASK)
#define UMCTL2_REGS_DFILPCFG0_dfi_lp_wakeup_dpd_MASK (0xF00000U)
#define UMCTL2_REGS_DFILPCFG0_dfi_lp_wakeup_dpd_SHIFT (20U)
#define UMCTL2_REGS_DFILPCFG0_dfi_lp_wakeup_dpd_WIDTH (4U)
#define UMCTL2_REGS_DFILPCFG0_dfi_lp_wakeup_dpd(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DFILPCFG0_dfi_lp_wakeup_dpd_SHIFT)) & UMCTL2_REGS_DFILPCFG0_dfi_lp_wakeup_dpd_MASK)
#define UMCTL2_REGS_DFILPCFG0_dfi_tlp_resp_MASK  (0x1F000000U)
#define UMCTL2_REGS_DFILPCFG0_dfi_tlp_resp_SHIFT (24U)
#define UMCTL2_REGS_DFILPCFG0_dfi_tlp_resp_WIDTH (5U)
#define UMCTL2_REGS_DFILPCFG0_dfi_tlp_resp(x)    (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DFILPCFG0_dfi_tlp_resp_SHIFT)) & UMCTL2_REGS_DFILPCFG0_dfi_tlp_resp_MASK)
/*! @} */

/*! @name DFILPCFG1 - DFI Low Power Configuration 1 */
/*! @{ */
#define UMCTL2_REGS_DFILPCFG1_dfi_lp_en_mpsm_MASK (0x1U)
#define UMCTL2_REGS_DFILPCFG1_dfi_lp_en_mpsm_SHIFT (0U)
#define UMCTL2_REGS_DFILPCFG1_dfi_lp_en_mpsm_WIDTH (1U)
#define UMCTL2_REGS_DFILPCFG1_dfi_lp_en_mpsm(x)  (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DFILPCFG1_dfi_lp_en_mpsm_SHIFT)) & UMCTL2_REGS_DFILPCFG1_dfi_lp_en_mpsm_MASK)
#define UMCTL2_REGS_DFILPCFG1_dfi_lp_wakeup_mpsm_MASK (0xF0U)
#define UMCTL2_REGS_DFILPCFG1_dfi_lp_wakeup_mpsm_SHIFT (4U)
#define UMCTL2_REGS_DFILPCFG1_dfi_lp_wakeup_mpsm_WIDTH (4U)
#define UMCTL2_REGS_DFILPCFG1_dfi_lp_wakeup_mpsm(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DFILPCFG1_dfi_lp_wakeup_mpsm_SHIFT)) & UMCTL2_REGS_DFILPCFG1_dfi_lp_wakeup_mpsm_MASK)
/*! @} */

/*! @name DFIUPD0 - DFI Update 0 */
/*! @{ */
#define UMCTL2_REGS_DFIUPD0_dfi_t_ctrlup_min_MASK (0x3FFU)
#define UMCTL2_REGS_DFIUPD0_dfi_t_ctrlup_min_SHIFT (0U)
#define UMCTL2_REGS_DFIUPD0_dfi_t_ctrlup_min_WIDTH (10U)
#define UMCTL2_REGS_DFIUPD0_dfi_t_ctrlup_min(x)  (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DFIUPD0_dfi_t_ctrlup_min_SHIFT)) & UMCTL2_REGS_DFIUPD0_dfi_t_ctrlup_min_MASK)
#define UMCTL2_REGS_DFIUPD0_dfi_t_ctrlup_max_MASK (0x3FF0000U)
#define UMCTL2_REGS_DFIUPD0_dfi_t_ctrlup_max_SHIFT (16U)
#define UMCTL2_REGS_DFIUPD0_dfi_t_ctrlup_max_WIDTH (10U)
#define UMCTL2_REGS_DFIUPD0_dfi_t_ctrlup_max(x)  (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DFIUPD0_dfi_t_ctrlup_max_SHIFT)) & UMCTL2_REGS_DFIUPD0_dfi_t_ctrlup_max_MASK)
#define UMCTL2_REGS_DFIUPD0_ctrlupd_pre_srx_MASK (0x20000000U)
#define UMCTL2_REGS_DFIUPD0_ctrlupd_pre_srx_SHIFT (29U)
#define UMCTL2_REGS_DFIUPD0_ctrlupd_pre_srx_WIDTH (1U)
#define UMCTL2_REGS_DFIUPD0_ctrlupd_pre_srx(x)   (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DFIUPD0_ctrlupd_pre_srx_SHIFT)) & UMCTL2_REGS_DFIUPD0_ctrlupd_pre_srx_MASK)
#define UMCTL2_REGS_DFIUPD0_dis_auto_ctrlupd_srx_MASK (0x40000000U)
#define UMCTL2_REGS_DFIUPD0_dis_auto_ctrlupd_srx_SHIFT (30U)
#define UMCTL2_REGS_DFIUPD0_dis_auto_ctrlupd_srx_WIDTH (1U)
#define UMCTL2_REGS_DFIUPD0_dis_auto_ctrlupd_srx(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DFIUPD0_dis_auto_ctrlupd_srx_SHIFT)) & UMCTL2_REGS_DFIUPD0_dis_auto_ctrlupd_srx_MASK)
#define UMCTL2_REGS_DFIUPD0_dis_auto_ctrlupd_MASK (0x80000000U)
#define UMCTL2_REGS_DFIUPD0_dis_auto_ctrlupd_SHIFT (31U)
#define UMCTL2_REGS_DFIUPD0_dis_auto_ctrlupd_WIDTH (1U)
#define UMCTL2_REGS_DFIUPD0_dis_auto_ctrlupd(x)  (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DFIUPD0_dis_auto_ctrlupd_SHIFT)) & UMCTL2_REGS_DFIUPD0_dis_auto_ctrlupd_MASK)
/*! @} */

/*! @name DFIUPD1 - DFI Update 1 */
/*! @{ */
#define UMCTL2_REGS_DFIUPD1_dfi_t_ctrlupd_interval_max_x1024_MASK (0xFFU)
#define UMCTL2_REGS_DFIUPD1_dfi_t_ctrlupd_interval_max_x1024_SHIFT (0U)
#define UMCTL2_REGS_DFIUPD1_dfi_t_ctrlupd_interval_max_x1024_WIDTH (8U)
#define UMCTL2_REGS_DFIUPD1_dfi_t_ctrlupd_interval_max_x1024(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DFIUPD1_dfi_t_ctrlupd_interval_max_x1024_SHIFT)) & UMCTL2_REGS_DFIUPD1_dfi_t_ctrlupd_interval_max_x1024_MASK)
#define UMCTL2_REGS_DFIUPD1_dfi_t_ctrlupd_interval_min_x1024_MASK (0xFF0000U)
#define UMCTL2_REGS_DFIUPD1_dfi_t_ctrlupd_interval_min_x1024_SHIFT (16U)
#define UMCTL2_REGS_DFIUPD1_dfi_t_ctrlupd_interval_min_x1024_WIDTH (8U)
#define UMCTL2_REGS_DFIUPD1_dfi_t_ctrlupd_interval_min_x1024(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DFIUPD1_dfi_t_ctrlupd_interval_min_x1024_SHIFT)) & UMCTL2_REGS_DFIUPD1_dfi_t_ctrlupd_interval_min_x1024_MASK)
/*! @} */

/*! @name DFIUPD2 - DFI Update 2 */
/*! @{ */
#define UMCTL2_REGS_DFIUPD2_dfi_phyupd_en_MASK   (0x80000000U)
#define UMCTL2_REGS_DFIUPD2_dfi_phyupd_en_SHIFT  (31U)
#define UMCTL2_REGS_DFIUPD2_dfi_phyupd_en_WIDTH  (1U)
#define UMCTL2_REGS_DFIUPD2_dfi_phyupd_en(x)     (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DFIUPD2_dfi_phyupd_en_SHIFT)) & UMCTL2_REGS_DFIUPD2_dfi_phyupd_en_MASK)
/*! @} */

/*! @name DFIMISC - DFI Miscellaneous Control */
/*! @{ */
#define UMCTL2_REGS_DFIMISC_dfi_init_complete_en_MASK (0x1U)
#define UMCTL2_REGS_DFIMISC_dfi_init_complete_en_SHIFT (0U)
#define UMCTL2_REGS_DFIMISC_dfi_init_complete_en_WIDTH (1U)
#define UMCTL2_REGS_DFIMISC_dfi_init_complete_en(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DFIMISC_dfi_init_complete_en_SHIFT)) & UMCTL2_REGS_DFIMISC_dfi_init_complete_en_MASK)
#define UMCTL2_REGS_DFIMISC_phy_dbi_mode_MASK    (0x2U)
#define UMCTL2_REGS_DFIMISC_phy_dbi_mode_SHIFT   (1U)
#define UMCTL2_REGS_DFIMISC_phy_dbi_mode_WIDTH   (1U)
#define UMCTL2_REGS_DFIMISC_phy_dbi_mode(x)      (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DFIMISC_phy_dbi_mode_SHIFT)) & UMCTL2_REGS_DFIMISC_phy_dbi_mode_MASK)
#define UMCTL2_REGS_DFIMISC_dfi_data_cs_polarity_MASK (0x4U)
#define UMCTL2_REGS_DFIMISC_dfi_data_cs_polarity_SHIFT (2U)
#define UMCTL2_REGS_DFIMISC_dfi_data_cs_polarity_WIDTH (1U)
#define UMCTL2_REGS_DFIMISC_dfi_data_cs_polarity(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DFIMISC_dfi_data_cs_polarity_SHIFT)) & UMCTL2_REGS_DFIMISC_dfi_data_cs_polarity_MASK)
#define UMCTL2_REGS_DFIMISC_dfi_init_start_MASK  (0x20U)
#define UMCTL2_REGS_DFIMISC_dfi_init_start_SHIFT (5U)
#define UMCTL2_REGS_DFIMISC_dfi_init_start_WIDTH (1U)
#define UMCTL2_REGS_DFIMISC_dfi_init_start(x)    (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DFIMISC_dfi_init_start_SHIFT)) & UMCTL2_REGS_DFIMISC_dfi_init_start_MASK)
#define UMCTL2_REGS_DFIMISC_dis_dyn_adr_tri_MASK (0x40U)
#define UMCTL2_REGS_DFIMISC_dis_dyn_adr_tri_SHIFT (6U)
#define UMCTL2_REGS_DFIMISC_dis_dyn_adr_tri_WIDTH (1U)
#define UMCTL2_REGS_DFIMISC_dis_dyn_adr_tri(x)   (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DFIMISC_dis_dyn_adr_tri_SHIFT)) & UMCTL2_REGS_DFIMISC_dis_dyn_adr_tri_MASK)
#define UMCTL2_REGS_DFIMISC_dfi_frequency_MASK   (0x1F00U)
#define UMCTL2_REGS_DFIMISC_dfi_frequency_SHIFT  (8U)
#define UMCTL2_REGS_DFIMISC_dfi_frequency_WIDTH  (5U)
#define UMCTL2_REGS_DFIMISC_dfi_frequency(x)     (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DFIMISC_dfi_frequency_SHIFT)) & UMCTL2_REGS_DFIMISC_dfi_frequency_MASK)
/*! @} */

/*! @name DFITMG2 - DFI Timing 2 */
/*! @{ */
#define UMCTL2_REGS_DFITMG2_dfi_tphy_wrcslat_MASK (0x3FU)
#define UMCTL2_REGS_DFITMG2_dfi_tphy_wrcslat_SHIFT (0U)
#define UMCTL2_REGS_DFITMG2_dfi_tphy_wrcslat_WIDTH (6U)
#define UMCTL2_REGS_DFITMG2_dfi_tphy_wrcslat(x)  (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DFITMG2_dfi_tphy_wrcslat_SHIFT)) & UMCTL2_REGS_DFITMG2_dfi_tphy_wrcslat_MASK)
#define UMCTL2_REGS_DFITMG2_dfi_tphy_rdcslat_MASK (0x7F00U)
#define UMCTL2_REGS_DFITMG2_dfi_tphy_rdcslat_SHIFT (8U)
#define UMCTL2_REGS_DFITMG2_dfi_tphy_rdcslat_WIDTH (7U)
#define UMCTL2_REGS_DFITMG2_dfi_tphy_rdcslat(x)  (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DFITMG2_dfi_tphy_rdcslat_SHIFT)) & UMCTL2_REGS_DFITMG2_dfi_tphy_rdcslat_MASK)
/*! @} */

/*! @name DFITMG3 - DFI Timing 3 */
/*! @{ */
#define UMCTL2_REGS_DFITMG3_dfi_t_geardown_delay_MASK (0x1FU)
#define UMCTL2_REGS_DFITMG3_dfi_t_geardown_delay_SHIFT (0U)
#define UMCTL2_REGS_DFITMG3_dfi_t_geardown_delay_WIDTH (5U)
#define UMCTL2_REGS_DFITMG3_dfi_t_geardown_delay(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DFITMG3_dfi_t_geardown_delay_SHIFT)) & UMCTL2_REGS_DFITMG3_dfi_t_geardown_delay_MASK)
/*! @} */

/*! @name DFISTAT - DFI Status */
/*! @{ */
#define UMCTL2_REGS_DFISTAT_dfi_init_complete_MASK (0x1U)
#define UMCTL2_REGS_DFISTAT_dfi_init_complete_SHIFT (0U)
#define UMCTL2_REGS_DFISTAT_dfi_init_complete_WIDTH (1U)
#define UMCTL2_REGS_DFISTAT_dfi_init_complete(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DFISTAT_dfi_init_complete_SHIFT)) & UMCTL2_REGS_DFISTAT_dfi_init_complete_MASK)
#define UMCTL2_REGS_DFISTAT_dfi_lp_ack_MASK      (0x2U)
#define UMCTL2_REGS_DFISTAT_dfi_lp_ack_SHIFT     (1U)
#define UMCTL2_REGS_DFISTAT_dfi_lp_ack_WIDTH     (1U)
#define UMCTL2_REGS_DFISTAT_dfi_lp_ack(x)        (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DFISTAT_dfi_lp_ack_SHIFT)) & UMCTL2_REGS_DFISTAT_dfi_lp_ack_MASK)
/*! @} */

/*! @name DBICTL - DM/DBI Control */
/*! @{ */
#define UMCTL2_REGS_DBICTL_dm_en_MASK            (0x1U)
#define UMCTL2_REGS_DBICTL_dm_en_SHIFT           (0U)
#define UMCTL2_REGS_DBICTL_dm_en_WIDTH           (1U)
#define UMCTL2_REGS_DBICTL_dm_en(x)              (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DBICTL_dm_en_SHIFT)) & UMCTL2_REGS_DBICTL_dm_en_MASK)
#define UMCTL2_REGS_DBICTL_wr_dbi_en_MASK        (0x2U)
#define UMCTL2_REGS_DBICTL_wr_dbi_en_SHIFT       (1U)
#define UMCTL2_REGS_DBICTL_wr_dbi_en_WIDTH       (1U)
#define UMCTL2_REGS_DBICTL_wr_dbi_en(x)          (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DBICTL_wr_dbi_en_SHIFT)) & UMCTL2_REGS_DBICTL_wr_dbi_en_MASK)
#define UMCTL2_REGS_DBICTL_rd_dbi_en_MASK        (0x4U)
#define UMCTL2_REGS_DBICTL_rd_dbi_en_SHIFT       (2U)
#define UMCTL2_REGS_DBICTL_rd_dbi_en_WIDTH       (1U)
#define UMCTL2_REGS_DBICTL_rd_dbi_en(x)          (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DBICTL_rd_dbi_en_SHIFT)) & UMCTL2_REGS_DBICTL_rd_dbi_en_MASK)
/*! @} */

/*! @name DFIPHYMSTR - DFI PHY Master */
/*! @{ */
#define UMCTL2_REGS_DFIPHYMSTR_dfi_phymstr_en_MASK (0x1U)
#define UMCTL2_REGS_DFIPHYMSTR_dfi_phymstr_en_SHIFT (0U)
#define UMCTL2_REGS_DFIPHYMSTR_dfi_phymstr_en_WIDTH (1U)
#define UMCTL2_REGS_DFIPHYMSTR_dfi_phymstr_en(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DFIPHYMSTR_dfi_phymstr_en_SHIFT)) & UMCTL2_REGS_DFIPHYMSTR_dfi_phymstr_en_MASK)
/*! @} */

/*! @name ADDRMAP0 - Address Map 0 */
/*! @{ */
#define UMCTL2_REGS_ADDRMAP0_addrmap_cs_bit0_MASK (0x1FU)
#define UMCTL2_REGS_ADDRMAP0_addrmap_cs_bit0_SHIFT (0U)
#define UMCTL2_REGS_ADDRMAP0_addrmap_cs_bit0_WIDTH (5U)
#define UMCTL2_REGS_ADDRMAP0_addrmap_cs_bit0(x)  (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ADDRMAP0_addrmap_cs_bit0_SHIFT)) & UMCTL2_REGS_ADDRMAP0_addrmap_cs_bit0_MASK)
/*! @} */

/*! @name ADDRMAP1 - Address Map 1 */
/*! @{ */
#define UMCTL2_REGS_ADDRMAP1_addrmap_bank_b0_MASK (0x3FU)
#define UMCTL2_REGS_ADDRMAP1_addrmap_bank_b0_SHIFT (0U)
#define UMCTL2_REGS_ADDRMAP1_addrmap_bank_b0_WIDTH (6U)
#define UMCTL2_REGS_ADDRMAP1_addrmap_bank_b0(x)  (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ADDRMAP1_addrmap_bank_b0_SHIFT)) & UMCTL2_REGS_ADDRMAP1_addrmap_bank_b0_MASK)
#define UMCTL2_REGS_ADDRMAP1_addrmap_bank_b1_MASK (0x3F00U)
#define UMCTL2_REGS_ADDRMAP1_addrmap_bank_b1_SHIFT (8U)
#define UMCTL2_REGS_ADDRMAP1_addrmap_bank_b1_WIDTH (6U)
#define UMCTL2_REGS_ADDRMAP1_addrmap_bank_b1(x)  (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ADDRMAP1_addrmap_bank_b1_SHIFT)) & UMCTL2_REGS_ADDRMAP1_addrmap_bank_b1_MASK)
#define UMCTL2_REGS_ADDRMAP1_addrmap_bank_b2_MASK (0x3F0000U)
#define UMCTL2_REGS_ADDRMAP1_addrmap_bank_b2_SHIFT (16U)
#define UMCTL2_REGS_ADDRMAP1_addrmap_bank_b2_WIDTH (6U)
#define UMCTL2_REGS_ADDRMAP1_addrmap_bank_b2(x)  (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ADDRMAP1_addrmap_bank_b2_SHIFT)) & UMCTL2_REGS_ADDRMAP1_addrmap_bank_b2_MASK)
/*! @} */

/*! @name ADDRMAP2 - Address Map 2 */
/*! @{ */
#define UMCTL2_REGS_ADDRMAP2_addrmap_col_b2_MASK (0xFU)
#define UMCTL2_REGS_ADDRMAP2_addrmap_col_b2_SHIFT (0U)
#define UMCTL2_REGS_ADDRMAP2_addrmap_col_b2_WIDTH (4U)
#define UMCTL2_REGS_ADDRMAP2_addrmap_col_b2(x)   (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ADDRMAP2_addrmap_col_b2_SHIFT)) & UMCTL2_REGS_ADDRMAP2_addrmap_col_b2_MASK)
#define UMCTL2_REGS_ADDRMAP2_addrmap_col_b3_MASK (0x1F00U)
#define UMCTL2_REGS_ADDRMAP2_addrmap_col_b3_SHIFT (8U)
#define UMCTL2_REGS_ADDRMAP2_addrmap_col_b3_WIDTH (5U)
#define UMCTL2_REGS_ADDRMAP2_addrmap_col_b3(x)   (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ADDRMAP2_addrmap_col_b3_SHIFT)) & UMCTL2_REGS_ADDRMAP2_addrmap_col_b3_MASK)
#define UMCTL2_REGS_ADDRMAP2_addrmap_col_b4_MASK (0xF0000U)
#define UMCTL2_REGS_ADDRMAP2_addrmap_col_b4_SHIFT (16U)
#define UMCTL2_REGS_ADDRMAP2_addrmap_col_b4_WIDTH (4U)
#define UMCTL2_REGS_ADDRMAP2_addrmap_col_b4(x)   (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ADDRMAP2_addrmap_col_b4_SHIFT)) & UMCTL2_REGS_ADDRMAP2_addrmap_col_b4_MASK)
#define UMCTL2_REGS_ADDRMAP2_addrmap_col_b5_MASK (0xF000000U)
#define UMCTL2_REGS_ADDRMAP2_addrmap_col_b5_SHIFT (24U)
#define UMCTL2_REGS_ADDRMAP2_addrmap_col_b5_WIDTH (4U)
#define UMCTL2_REGS_ADDRMAP2_addrmap_col_b5(x)   (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ADDRMAP2_addrmap_col_b5_SHIFT)) & UMCTL2_REGS_ADDRMAP2_addrmap_col_b5_MASK)
/*! @} */

/*! @name ADDRMAP3 - Address Map 3 */
/*! @{ */
#define UMCTL2_REGS_ADDRMAP3_addrmap_col_b6_MASK (0x1FU)
#define UMCTL2_REGS_ADDRMAP3_addrmap_col_b6_SHIFT (0U)
#define UMCTL2_REGS_ADDRMAP3_addrmap_col_b6_WIDTH (5U)
#define UMCTL2_REGS_ADDRMAP3_addrmap_col_b6(x)   (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ADDRMAP3_addrmap_col_b6_SHIFT)) & UMCTL2_REGS_ADDRMAP3_addrmap_col_b6_MASK)
#define UMCTL2_REGS_ADDRMAP3_addrmap_col_b7_MASK (0x1F00U)
#define UMCTL2_REGS_ADDRMAP3_addrmap_col_b7_SHIFT (8U)
#define UMCTL2_REGS_ADDRMAP3_addrmap_col_b7_WIDTH (5U)
#define UMCTL2_REGS_ADDRMAP3_addrmap_col_b7(x)   (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ADDRMAP3_addrmap_col_b7_SHIFT)) & UMCTL2_REGS_ADDRMAP3_addrmap_col_b7_MASK)
#define UMCTL2_REGS_ADDRMAP3_addrmap_col_b8_MASK (0x1F0000U)
#define UMCTL2_REGS_ADDRMAP3_addrmap_col_b8_SHIFT (16U)
#define UMCTL2_REGS_ADDRMAP3_addrmap_col_b8_WIDTH (5U)
#define UMCTL2_REGS_ADDRMAP3_addrmap_col_b8(x)   (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ADDRMAP3_addrmap_col_b8_SHIFT)) & UMCTL2_REGS_ADDRMAP3_addrmap_col_b8_MASK)
#define UMCTL2_REGS_ADDRMAP3_addrmap_col_b9_MASK (0x1F000000U)
#define UMCTL2_REGS_ADDRMAP3_addrmap_col_b9_SHIFT (24U)
#define UMCTL2_REGS_ADDRMAP3_addrmap_col_b9_WIDTH (5U)
#define UMCTL2_REGS_ADDRMAP3_addrmap_col_b9(x)   (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ADDRMAP3_addrmap_col_b9_SHIFT)) & UMCTL2_REGS_ADDRMAP3_addrmap_col_b9_MASK)
/*! @} */

/*! @name ADDRMAP4 - Address Map 4 */
/*! @{ */
#define UMCTL2_REGS_ADDRMAP4_addrmap_col_b10_MASK (0x1FU)
#define UMCTL2_REGS_ADDRMAP4_addrmap_col_b10_SHIFT (0U)
#define UMCTL2_REGS_ADDRMAP4_addrmap_col_b10_WIDTH (5U)
#define UMCTL2_REGS_ADDRMAP4_addrmap_col_b10(x)  (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ADDRMAP4_addrmap_col_b10_SHIFT)) & UMCTL2_REGS_ADDRMAP4_addrmap_col_b10_MASK)
#define UMCTL2_REGS_ADDRMAP4_addrmap_col_b11_MASK (0x1F00U)
#define UMCTL2_REGS_ADDRMAP4_addrmap_col_b11_SHIFT (8U)
#define UMCTL2_REGS_ADDRMAP4_addrmap_col_b11_WIDTH (5U)
#define UMCTL2_REGS_ADDRMAP4_addrmap_col_b11(x)  (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ADDRMAP4_addrmap_col_b11_SHIFT)) & UMCTL2_REGS_ADDRMAP4_addrmap_col_b11_MASK)
#define UMCTL2_REGS_ADDRMAP4_col_addr_shift_MASK (0x80000000U)
#define UMCTL2_REGS_ADDRMAP4_col_addr_shift_SHIFT (31U)
#define UMCTL2_REGS_ADDRMAP4_col_addr_shift_WIDTH (1U)
#define UMCTL2_REGS_ADDRMAP4_col_addr_shift(x)   (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ADDRMAP4_col_addr_shift_SHIFT)) & UMCTL2_REGS_ADDRMAP4_col_addr_shift_MASK)
/*! @} */

/*! @name ADDRMAP5 - Address Map 5 */
/*! @{ */
#define UMCTL2_REGS_ADDRMAP5_addrmap_row_b0_MASK (0xFU)
#define UMCTL2_REGS_ADDRMAP5_addrmap_row_b0_SHIFT (0U)
#define UMCTL2_REGS_ADDRMAP5_addrmap_row_b0_WIDTH (4U)
#define UMCTL2_REGS_ADDRMAP5_addrmap_row_b0(x)   (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ADDRMAP5_addrmap_row_b0_SHIFT)) & UMCTL2_REGS_ADDRMAP5_addrmap_row_b0_MASK)
#define UMCTL2_REGS_ADDRMAP5_addrmap_row_b1_MASK (0xF00U)
#define UMCTL2_REGS_ADDRMAP5_addrmap_row_b1_SHIFT (8U)
#define UMCTL2_REGS_ADDRMAP5_addrmap_row_b1_WIDTH (4U)
#define UMCTL2_REGS_ADDRMAP5_addrmap_row_b1(x)   (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ADDRMAP5_addrmap_row_b1_SHIFT)) & UMCTL2_REGS_ADDRMAP5_addrmap_row_b1_MASK)
#define UMCTL2_REGS_ADDRMAP5_addrmap_row_b2_10_MASK (0xF0000U)
#define UMCTL2_REGS_ADDRMAP5_addrmap_row_b2_10_SHIFT (16U)
#define UMCTL2_REGS_ADDRMAP5_addrmap_row_b2_10_WIDTH (4U)
#define UMCTL2_REGS_ADDRMAP5_addrmap_row_b2_10(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ADDRMAP5_addrmap_row_b2_10_SHIFT)) & UMCTL2_REGS_ADDRMAP5_addrmap_row_b2_10_MASK)
#define UMCTL2_REGS_ADDRMAP5_addrmap_row_b11_MASK (0xF000000U)
#define UMCTL2_REGS_ADDRMAP5_addrmap_row_b11_SHIFT (24U)
#define UMCTL2_REGS_ADDRMAP5_addrmap_row_b11_WIDTH (4U)
#define UMCTL2_REGS_ADDRMAP5_addrmap_row_b11(x)  (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ADDRMAP5_addrmap_row_b11_SHIFT)) & UMCTL2_REGS_ADDRMAP5_addrmap_row_b11_MASK)
/*! @} */

/*! @name ADDRMAP6 - Address Map 6 */
/*! @{ */
#define UMCTL2_REGS_ADDRMAP6_addrmap_row_b12_MASK (0xFU)
#define UMCTL2_REGS_ADDRMAP6_addrmap_row_b12_SHIFT (0U)
#define UMCTL2_REGS_ADDRMAP6_addrmap_row_b12_WIDTH (4U)
#define UMCTL2_REGS_ADDRMAP6_addrmap_row_b12(x)  (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ADDRMAP6_addrmap_row_b12_SHIFT)) & UMCTL2_REGS_ADDRMAP6_addrmap_row_b12_MASK)
#define UMCTL2_REGS_ADDRMAP6_addrmap_row_b13_MASK (0xF00U)
#define UMCTL2_REGS_ADDRMAP6_addrmap_row_b13_SHIFT (8U)
#define UMCTL2_REGS_ADDRMAP6_addrmap_row_b13_WIDTH (4U)
#define UMCTL2_REGS_ADDRMAP6_addrmap_row_b13(x)  (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ADDRMAP6_addrmap_row_b13_SHIFT)) & UMCTL2_REGS_ADDRMAP6_addrmap_row_b13_MASK)
#define UMCTL2_REGS_ADDRMAP6_addrmap_row_b14_MASK (0xF0000U)
#define UMCTL2_REGS_ADDRMAP6_addrmap_row_b14_SHIFT (16U)
#define UMCTL2_REGS_ADDRMAP6_addrmap_row_b14_WIDTH (4U)
#define UMCTL2_REGS_ADDRMAP6_addrmap_row_b14(x)  (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ADDRMAP6_addrmap_row_b14_SHIFT)) & UMCTL2_REGS_ADDRMAP6_addrmap_row_b14_MASK)
#define UMCTL2_REGS_ADDRMAP6_addrmap_row_b15_MASK (0xF000000U)
#define UMCTL2_REGS_ADDRMAP6_addrmap_row_b15_SHIFT (24U)
#define UMCTL2_REGS_ADDRMAP6_addrmap_row_b15_WIDTH (4U)
#define UMCTL2_REGS_ADDRMAP6_addrmap_row_b15(x)  (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ADDRMAP6_addrmap_row_b15_SHIFT)) & UMCTL2_REGS_ADDRMAP6_addrmap_row_b15_MASK)
#define UMCTL2_REGS_ADDRMAP6_lpddr4_6gb_12gb_24gb_MASK (0x60000000U)
#define UMCTL2_REGS_ADDRMAP6_lpddr4_6gb_12gb_24gb_SHIFT (29U)
#define UMCTL2_REGS_ADDRMAP6_lpddr4_6gb_12gb_24gb_WIDTH (2U)
#define UMCTL2_REGS_ADDRMAP6_lpddr4_6gb_12gb_24gb(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ADDRMAP6_lpddr4_6gb_12gb_24gb_SHIFT)) & UMCTL2_REGS_ADDRMAP6_lpddr4_6gb_12gb_24gb_MASK)
#define UMCTL2_REGS_ADDRMAP6_lpddr3_6gb_12gb_MASK (0x80000000U)
#define UMCTL2_REGS_ADDRMAP6_lpddr3_6gb_12gb_SHIFT (31U)
#define UMCTL2_REGS_ADDRMAP6_lpddr3_6gb_12gb_WIDTH (1U)
#define UMCTL2_REGS_ADDRMAP6_lpddr3_6gb_12gb(x)  (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ADDRMAP6_lpddr3_6gb_12gb_SHIFT)) & UMCTL2_REGS_ADDRMAP6_lpddr3_6gb_12gb_MASK)
/*! @} */

/*! @name ADDRMAP7 - Address Map 7 */
/*! @{ */
#define UMCTL2_REGS_ADDRMAP7_addrmap_row_b16_MASK (0xFU)
#define UMCTL2_REGS_ADDRMAP7_addrmap_row_b16_SHIFT (0U)
#define UMCTL2_REGS_ADDRMAP7_addrmap_row_b16_WIDTH (4U)
#define UMCTL2_REGS_ADDRMAP7_addrmap_row_b16(x)  (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ADDRMAP7_addrmap_row_b16_SHIFT)) & UMCTL2_REGS_ADDRMAP7_addrmap_row_b16_MASK)
#define UMCTL2_REGS_ADDRMAP7_addrmap_row_b17_MASK (0xF00U)
#define UMCTL2_REGS_ADDRMAP7_addrmap_row_b17_SHIFT (8U)
#define UMCTL2_REGS_ADDRMAP7_addrmap_row_b17_WIDTH (4U)
#define UMCTL2_REGS_ADDRMAP7_addrmap_row_b17(x)  (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ADDRMAP7_addrmap_row_b17_SHIFT)) & UMCTL2_REGS_ADDRMAP7_addrmap_row_b17_MASK)
/*! @} */

/*! @name ADDRMAP8 - Address Map 8 */
/*! @{ */
#define UMCTL2_REGS_ADDRMAP8_addrmap_bg_b0_MASK  (0x3FU)
#define UMCTL2_REGS_ADDRMAP8_addrmap_bg_b0_SHIFT (0U)
#define UMCTL2_REGS_ADDRMAP8_addrmap_bg_b0_WIDTH (6U)
#define UMCTL2_REGS_ADDRMAP8_addrmap_bg_b0(x)    (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ADDRMAP8_addrmap_bg_b0_SHIFT)) & UMCTL2_REGS_ADDRMAP8_addrmap_bg_b0_MASK)
#define UMCTL2_REGS_ADDRMAP8_addrmap_bg_b1_MASK  (0x3F00U)
#define UMCTL2_REGS_ADDRMAP8_addrmap_bg_b1_SHIFT (8U)
#define UMCTL2_REGS_ADDRMAP8_addrmap_bg_b1_WIDTH (6U)
#define UMCTL2_REGS_ADDRMAP8_addrmap_bg_b1(x)    (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ADDRMAP8_addrmap_bg_b1_SHIFT)) & UMCTL2_REGS_ADDRMAP8_addrmap_bg_b1_MASK)
/*! @} */

/*! @name ADDRMAP9 - Address Map 9 */
/*! @{ */
#define UMCTL2_REGS_ADDRMAP9_addrmap_row_b2_MASK (0xFU)
#define UMCTL2_REGS_ADDRMAP9_addrmap_row_b2_SHIFT (0U)
#define UMCTL2_REGS_ADDRMAP9_addrmap_row_b2_WIDTH (4U)
#define UMCTL2_REGS_ADDRMAP9_addrmap_row_b2(x)   (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ADDRMAP9_addrmap_row_b2_SHIFT)) & UMCTL2_REGS_ADDRMAP9_addrmap_row_b2_MASK)
#define UMCTL2_REGS_ADDRMAP9_addrmap_row_b3_MASK (0xF00U)
#define UMCTL2_REGS_ADDRMAP9_addrmap_row_b3_SHIFT (8U)
#define UMCTL2_REGS_ADDRMAP9_addrmap_row_b3_WIDTH (4U)
#define UMCTL2_REGS_ADDRMAP9_addrmap_row_b3(x)   (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ADDRMAP9_addrmap_row_b3_SHIFT)) & UMCTL2_REGS_ADDRMAP9_addrmap_row_b3_MASK)
#define UMCTL2_REGS_ADDRMAP9_addrmap_row_b4_MASK (0xF0000U)
#define UMCTL2_REGS_ADDRMAP9_addrmap_row_b4_SHIFT (16U)
#define UMCTL2_REGS_ADDRMAP9_addrmap_row_b4_WIDTH (4U)
#define UMCTL2_REGS_ADDRMAP9_addrmap_row_b4(x)   (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ADDRMAP9_addrmap_row_b4_SHIFT)) & UMCTL2_REGS_ADDRMAP9_addrmap_row_b4_MASK)
#define UMCTL2_REGS_ADDRMAP9_addrmap_row_b5_MASK (0xF000000U)
#define UMCTL2_REGS_ADDRMAP9_addrmap_row_b5_SHIFT (24U)
#define UMCTL2_REGS_ADDRMAP9_addrmap_row_b5_WIDTH (4U)
#define UMCTL2_REGS_ADDRMAP9_addrmap_row_b5(x)   (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ADDRMAP9_addrmap_row_b5_SHIFT)) & UMCTL2_REGS_ADDRMAP9_addrmap_row_b5_MASK)
/*! @} */

/*! @name ADDRMAP10 - Address Map 10 */
/*! @{ */
#define UMCTL2_REGS_ADDRMAP10_addrmap_row_b6_MASK (0xFU)
#define UMCTL2_REGS_ADDRMAP10_addrmap_row_b6_SHIFT (0U)
#define UMCTL2_REGS_ADDRMAP10_addrmap_row_b6_WIDTH (4U)
#define UMCTL2_REGS_ADDRMAP10_addrmap_row_b6(x)  (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ADDRMAP10_addrmap_row_b6_SHIFT)) & UMCTL2_REGS_ADDRMAP10_addrmap_row_b6_MASK)
#define UMCTL2_REGS_ADDRMAP10_addrmap_row_b7_MASK (0xF00U)
#define UMCTL2_REGS_ADDRMAP10_addrmap_row_b7_SHIFT (8U)
#define UMCTL2_REGS_ADDRMAP10_addrmap_row_b7_WIDTH (4U)
#define UMCTL2_REGS_ADDRMAP10_addrmap_row_b7(x)  (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ADDRMAP10_addrmap_row_b7_SHIFT)) & UMCTL2_REGS_ADDRMAP10_addrmap_row_b7_MASK)
#define UMCTL2_REGS_ADDRMAP10_addrmap_row_b8_MASK (0xF0000U)
#define UMCTL2_REGS_ADDRMAP10_addrmap_row_b8_SHIFT (16U)
#define UMCTL2_REGS_ADDRMAP10_addrmap_row_b8_WIDTH (4U)
#define UMCTL2_REGS_ADDRMAP10_addrmap_row_b8(x)  (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ADDRMAP10_addrmap_row_b8_SHIFT)) & UMCTL2_REGS_ADDRMAP10_addrmap_row_b8_MASK)
#define UMCTL2_REGS_ADDRMAP10_addrmap_row_b9_MASK (0xF000000U)
#define UMCTL2_REGS_ADDRMAP10_addrmap_row_b9_SHIFT (24U)
#define UMCTL2_REGS_ADDRMAP10_addrmap_row_b9_WIDTH (4U)
#define UMCTL2_REGS_ADDRMAP10_addrmap_row_b9(x)  (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ADDRMAP10_addrmap_row_b9_SHIFT)) & UMCTL2_REGS_ADDRMAP10_addrmap_row_b9_MASK)
/*! @} */

/*! @name ADDRMAP11 - Address Map 11 */
/*! @{ */
#define UMCTL2_REGS_ADDRMAP11_addrmap_row_b10_MASK (0xFU)
#define UMCTL2_REGS_ADDRMAP11_addrmap_row_b10_SHIFT (0U)
#define UMCTL2_REGS_ADDRMAP11_addrmap_row_b10_WIDTH (4U)
#define UMCTL2_REGS_ADDRMAP11_addrmap_row_b10(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ADDRMAP11_addrmap_row_b10_SHIFT)) & UMCTL2_REGS_ADDRMAP11_addrmap_row_b10_MASK)
/*! @} */

/*! @name ODTCFG - ODT Configuration */
/*! @{ */
#define UMCTL2_REGS_ODTCFG_rd_odt_delay_MASK     (0x7CU)
#define UMCTL2_REGS_ODTCFG_rd_odt_delay_SHIFT    (2U)
#define UMCTL2_REGS_ODTCFG_rd_odt_delay_WIDTH    (5U)
#define UMCTL2_REGS_ODTCFG_rd_odt_delay(x)       (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ODTCFG_rd_odt_delay_SHIFT)) & UMCTL2_REGS_ODTCFG_rd_odt_delay_MASK)
#define UMCTL2_REGS_ODTCFG_rd_odt_hold_MASK      (0xF00U)
#define UMCTL2_REGS_ODTCFG_rd_odt_hold_SHIFT     (8U)
#define UMCTL2_REGS_ODTCFG_rd_odt_hold_WIDTH     (4U)
#define UMCTL2_REGS_ODTCFG_rd_odt_hold(x)        (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ODTCFG_rd_odt_hold_SHIFT)) & UMCTL2_REGS_ODTCFG_rd_odt_hold_MASK)
#define UMCTL2_REGS_ODTCFG_wr_odt_delay_MASK     (0x1F0000U)
#define UMCTL2_REGS_ODTCFG_wr_odt_delay_SHIFT    (16U)
#define UMCTL2_REGS_ODTCFG_wr_odt_delay_WIDTH    (5U)
#define UMCTL2_REGS_ODTCFG_wr_odt_delay(x)       (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ODTCFG_wr_odt_delay_SHIFT)) & UMCTL2_REGS_ODTCFG_wr_odt_delay_MASK)
#define UMCTL2_REGS_ODTCFG_wr_odt_hold_MASK      (0xF000000U)
#define UMCTL2_REGS_ODTCFG_wr_odt_hold_SHIFT     (24U)
#define UMCTL2_REGS_ODTCFG_wr_odt_hold_WIDTH     (4U)
#define UMCTL2_REGS_ODTCFG_wr_odt_hold(x)        (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ODTCFG_wr_odt_hold_SHIFT)) & UMCTL2_REGS_ODTCFG_wr_odt_hold_MASK)
/*! @} */

/*! @name ODTMAP - ODT/Rank Map */
/*! @{ */
#define UMCTL2_REGS_ODTMAP_rank0_wr_odt_MASK     (0x3U)
#define UMCTL2_REGS_ODTMAP_rank0_wr_odt_SHIFT    (0U)
#define UMCTL2_REGS_ODTMAP_rank0_wr_odt_WIDTH    (2U)
#define UMCTL2_REGS_ODTMAP_rank0_wr_odt(x)       (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ODTMAP_rank0_wr_odt_SHIFT)) & UMCTL2_REGS_ODTMAP_rank0_wr_odt_MASK)
#define UMCTL2_REGS_ODTMAP_rank0_rd_odt_MASK     (0x30U)
#define UMCTL2_REGS_ODTMAP_rank0_rd_odt_SHIFT    (4U)
#define UMCTL2_REGS_ODTMAP_rank0_rd_odt_WIDTH    (2U)
#define UMCTL2_REGS_ODTMAP_rank0_rd_odt(x)       (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ODTMAP_rank0_rd_odt_SHIFT)) & UMCTL2_REGS_ODTMAP_rank0_rd_odt_MASK)
#define UMCTL2_REGS_ODTMAP_rank1_wr_odt_MASK     (0x300U)
#define UMCTL2_REGS_ODTMAP_rank1_wr_odt_SHIFT    (8U)
#define UMCTL2_REGS_ODTMAP_rank1_wr_odt_WIDTH    (2U)
#define UMCTL2_REGS_ODTMAP_rank1_wr_odt(x)       (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ODTMAP_rank1_wr_odt_SHIFT)) & UMCTL2_REGS_ODTMAP_rank1_wr_odt_MASK)
#define UMCTL2_REGS_ODTMAP_rank1_rd_odt_MASK     (0x3000U)
#define UMCTL2_REGS_ODTMAP_rank1_rd_odt_SHIFT    (12U)
#define UMCTL2_REGS_ODTMAP_rank1_rd_odt_WIDTH    (2U)
#define UMCTL2_REGS_ODTMAP_rank1_rd_odt(x)       (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ODTMAP_rank1_rd_odt_SHIFT)) & UMCTL2_REGS_ODTMAP_rank1_rd_odt_MASK)
/*! @} */

/*! @name SCHED - Scheduler Control */
/*! @{ */
#define UMCTL2_REGS_SCHED_force_low_pri_n_MASK   (0x1U)
#define UMCTL2_REGS_SCHED_force_low_pri_n_SHIFT  (0U)
#define UMCTL2_REGS_SCHED_force_low_pri_n_WIDTH  (1U)
#define UMCTL2_REGS_SCHED_force_low_pri_n(x)     (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_SCHED_force_low_pri_n_SHIFT)) & UMCTL2_REGS_SCHED_force_low_pri_n_MASK)
#define UMCTL2_REGS_SCHED_prefer_write_MASK      (0x2U)
#define UMCTL2_REGS_SCHED_prefer_write_SHIFT     (1U)
#define UMCTL2_REGS_SCHED_prefer_write_WIDTH     (1U)
#define UMCTL2_REGS_SCHED_prefer_write(x)        (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_SCHED_prefer_write_SHIFT)) & UMCTL2_REGS_SCHED_prefer_write_MASK)
#define UMCTL2_REGS_SCHED_pageclose_MASK         (0x4U)
#define UMCTL2_REGS_SCHED_pageclose_SHIFT        (2U)
#define UMCTL2_REGS_SCHED_pageclose_WIDTH        (1U)
#define UMCTL2_REGS_SCHED_pageclose(x)           (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_SCHED_pageclose_SHIFT)) & UMCTL2_REGS_SCHED_pageclose_MASK)
#define UMCTL2_REGS_SCHED_lpr_num_entries_MASK   (0x1F00U)
#define UMCTL2_REGS_SCHED_lpr_num_entries_SHIFT  (8U)
#define UMCTL2_REGS_SCHED_lpr_num_entries_WIDTH  (5U)
#define UMCTL2_REGS_SCHED_lpr_num_entries(x)     (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_SCHED_lpr_num_entries_SHIFT)) & UMCTL2_REGS_SCHED_lpr_num_entries_MASK)
#define UMCTL2_REGS_SCHED_rdwr_idle_gap_MASK     (0x7F000000U)
#define UMCTL2_REGS_SCHED_rdwr_idle_gap_SHIFT    (24U)
#define UMCTL2_REGS_SCHED_rdwr_idle_gap_WIDTH    (7U)
#define UMCTL2_REGS_SCHED_rdwr_idle_gap(x)       (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_SCHED_rdwr_idle_gap_SHIFT)) & UMCTL2_REGS_SCHED_rdwr_idle_gap_MASK)
/*! @} */

/*! @name SCHED1 - Scheduler Control 1 */
/*! @{ */
#define UMCTL2_REGS_SCHED1_pageclose_timer_MASK  (0xFFU)
#define UMCTL2_REGS_SCHED1_pageclose_timer_SHIFT (0U)
#define UMCTL2_REGS_SCHED1_pageclose_timer_WIDTH (8U)
#define UMCTL2_REGS_SCHED1_pageclose_timer(x)    (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_SCHED1_pageclose_timer_SHIFT)) & UMCTL2_REGS_SCHED1_pageclose_timer_MASK)
/*! @} */

/*! @name PERFHPR1 - High Priority Read CAM 1 */
/*! @{ */
#define UMCTL2_REGS_PERFHPR1_hpr_max_starve_MASK (0xFFFFU)
#define UMCTL2_REGS_PERFHPR1_hpr_max_starve_SHIFT (0U)
#define UMCTL2_REGS_PERFHPR1_hpr_max_starve_WIDTH (16U)
#define UMCTL2_REGS_PERFHPR1_hpr_max_starve(x)   (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_PERFHPR1_hpr_max_starve_SHIFT)) & UMCTL2_REGS_PERFHPR1_hpr_max_starve_MASK)
#define UMCTL2_REGS_PERFHPR1_hpr_xact_run_length_MASK (0xFF000000U)
#define UMCTL2_REGS_PERFHPR1_hpr_xact_run_length_SHIFT (24U)
#define UMCTL2_REGS_PERFHPR1_hpr_xact_run_length_WIDTH (8U)
#define UMCTL2_REGS_PERFHPR1_hpr_xact_run_length(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_PERFHPR1_hpr_xact_run_length_SHIFT)) & UMCTL2_REGS_PERFHPR1_hpr_xact_run_length_MASK)
/*! @} */

/*! @name PERFLPR1 - Low Priority Read CAM 1 */
/*! @{ */
#define UMCTL2_REGS_PERFLPR1_lpr_max_starve_MASK (0xFFFFU)
#define UMCTL2_REGS_PERFLPR1_lpr_max_starve_SHIFT (0U)
#define UMCTL2_REGS_PERFLPR1_lpr_max_starve_WIDTH (16U)
#define UMCTL2_REGS_PERFLPR1_lpr_max_starve(x)   (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_PERFLPR1_lpr_max_starve_SHIFT)) & UMCTL2_REGS_PERFLPR1_lpr_max_starve_MASK)
#define UMCTL2_REGS_PERFLPR1_lpr_xact_run_length_MASK (0xFF000000U)
#define UMCTL2_REGS_PERFLPR1_lpr_xact_run_length_SHIFT (24U)
#define UMCTL2_REGS_PERFLPR1_lpr_xact_run_length_WIDTH (8U)
#define UMCTL2_REGS_PERFLPR1_lpr_xact_run_length(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_PERFLPR1_lpr_xact_run_length_SHIFT)) & UMCTL2_REGS_PERFLPR1_lpr_xact_run_length_MASK)
/*! @} */

/*! @name PERFWR1 - Write CAM 1 */
/*! @{ */
#define UMCTL2_REGS_PERFWR1_w_max_starve_MASK    (0xFFFFU)
#define UMCTL2_REGS_PERFWR1_w_max_starve_SHIFT   (0U)
#define UMCTL2_REGS_PERFWR1_w_max_starve_WIDTH   (16U)
#define UMCTL2_REGS_PERFWR1_w_max_starve(x)      (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_PERFWR1_w_max_starve_SHIFT)) & UMCTL2_REGS_PERFWR1_w_max_starve_MASK)
#define UMCTL2_REGS_PERFWR1_w_xact_run_length_MASK (0xFF000000U)
#define UMCTL2_REGS_PERFWR1_w_xact_run_length_SHIFT (24U)
#define UMCTL2_REGS_PERFWR1_w_xact_run_length_WIDTH (8U)
#define UMCTL2_REGS_PERFWR1_w_xact_run_length(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_PERFWR1_w_xact_run_length_SHIFT)) & UMCTL2_REGS_PERFWR1_w_xact_run_length_MASK)
/*! @} */

/*! @name DBG0 - Debug 0 */
/*! @{ */
#define UMCTL2_REGS_DBG0_dis_wc_MASK             (0x1U)
#define UMCTL2_REGS_DBG0_dis_wc_SHIFT            (0U)
#define UMCTL2_REGS_DBG0_dis_wc_WIDTH            (1U)
#define UMCTL2_REGS_DBG0_dis_wc(x)               (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DBG0_dis_wc_SHIFT)) & UMCTL2_REGS_DBG0_dis_wc_MASK)
#define UMCTL2_REGS_DBG0_dis_collision_page_opt_MASK (0x10U)
#define UMCTL2_REGS_DBG0_dis_collision_page_opt_SHIFT (4U)
#define UMCTL2_REGS_DBG0_dis_collision_page_opt_WIDTH (1U)
#define UMCTL2_REGS_DBG0_dis_collision_page_opt(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DBG0_dis_collision_page_opt_SHIFT)) & UMCTL2_REGS_DBG0_dis_collision_page_opt_MASK)
/*! @} */

/*! @name DBG1 - Debug 1 */
/*! @{ */
#define UMCTL2_REGS_DBG1_dis_dq_MASK             (0x1U)
#define UMCTL2_REGS_DBG1_dis_dq_SHIFT            (0U)
#define UMCTL2_REGS_DBG1_dis_dq_WIDTH            (1U)
#define UMCTL2_REGS_DBG1_dis_dq(x)               (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DBG1_dis_dq_SHIFT)) & UMCTL2_REGS_DBG1_dis_dq_MASK)
#define UMCTL2_REGS_DBG1_dis_hif_MASK            (0x2U)
#define UMCTL2_REGS_DBG1_dis_hif_SHIFT           (1U)
#define UMCTL2_REGS_DBG1_dis_hif_WIDTH           (1U)
#define UMCTL2_REGS_DBG1_dis_hif(x)              (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DBG1_dis_hif_SHIFT)) & UMCTL2_REGS_DBG1_dis_hif_MASK)
/*! @} */

/*! @name DBGCAM - CAM Debug */
/*! @{ */
#define UMCTL2_REGS_DBGCAM_dbg_hpr_q_depth_MASK  (0x3FU)
#define UMCTL2_REGS_DBGCAM_dbg_hpr_q_depth_SHIFT (0U)
#define UMCTL2_REGS_DBGCAM_dbg_hpr_q_depth_WIDTH (6U)
#define UMCTL2_REGS_DBGCAM_dbg_hpr_q_depth(x)    (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DBGCAM_dbg_hpr_q_depth_SHIFT)) & UMCTL2_REGS_DBGCAM_dbg_hpr_q_depth_MASK)
#define UMCTL2_REGS_DBGCAM_dbg_lpr_q_depth_MASK  (0x3F00U)
#define UMCTL2_REGS_DBGCAM_dbg_lpr_q_depth_SHIFT (8U)
#define UMCTL2_REGS_DBGCAM_dbg_lpr_q_depth_WIDTH (6U)
#define UMCTL2_REGS_DBGCAM_dbg_lpr_q_depth(x)    (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DBGCAM_dbg_lpr_q_depth_SHIFT)) & UMCTL2_REGS_DBGCAM_dbg_lpr_q_depth_MASK)
#define UMCTL2_REGS_DBGCAM_dbg_w_q_depth_MASK    (0x3F0000U)
#define UMCTL2_REGS_DBGCAM_dbg_w_q_depth_SHIFT   (16U)
#define UMCTL2_REGS_DBGCAM_dbg_w_q_depth_WIDTH   (6U)
#define UMCTL2_REGS_DBGCAM_dbg_w_q_depth(x)      (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DBGCAM_dbg_w_q_depth_SHIFT)) & UMCTL2_REGS_DBGCAM_dbg_w_q_depth_MASK)
#define UMCTL2_REGS_DBGCAM_dbg_stall_MASK        (0x1000000U)
#define UMCTL2_REGS_DBGCAM_dbg_stall_SHIFT       (24U)
#define UMCTL2_REGS_DBGCAM_dbg_stall_WIDTH       (1U)
#define UMCTL2_REGS_DBGCAM_dbg_stall(x)          (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DBGCAM_dbg_stall_SHIFT)) & UMCTL2_REGS_DBGCAM_dbg_stall_MASK)
#define UMCTL2_REGS_DBGCAM_dbg_rd_q_empty_MASK   (0x2000000U)
#define UMCTL2_REGS_DBGCAM_dbg_rd_q_empty_SHIFT  (25U)
#define UMCTL2_REGS_DBGCAM_dbg_rd_q_empty_WIDTH  (1U)
#define UMCTL2_REGS_DBGCAM_dbg_rd_q_empty(x)     (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DBGCAM_dbg_rd_q_empty_SHIFT)) & UMCTL2_REGS_DBGCAM_dbg_rd_q_empty_MASK)
#define UMCTL2_REGS_DBGCAM_dbg_wr_q_empty_MASK   (0x4000000U)
#define UMCTL2_REGS_DBGCAM_dbg_wr_q_empty_SHIFT  (26U)
#define UMCTL2_REGS_DBGCAM_dbg_wr_q_empty_WIDTH  (1U)
#define UMCTL2_REGS_DBGCAM_dbg_wr_q_empty(x)     (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DBGCAM_dbg_wr_q_empty_SHIFT)) & UMCTL2_REGS_DBGCAM_dbg_wr_q_empty_MASK)
#define UMCTL2_REGS_DBGCAM_rd_data_pipeline_empty_MASK (0x10000000U)
#define UMCTL2_REGS_DBGCAM_rd_data_pipeline_empty_SHIFT (28U)
#define UMCTL2_REGS_DBGCAM_rd_data_pipeline_empty_WIDTH (1U)
#define UMCTL2_REGS_DBGCAM_rd_data_pipeline_empty(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DBGCAM_rd_data_pipeline_empty_SHIFT)) & UMCTL2_REGS_DBGCAM_rd_data_pipeline_empty_MASK)
#define UMCTL2_REGS_DBGCAM_wr_data_pipeline_empty_MASK (0x20000000U)
#define UMCTL2_REGS_DBGCAM_wr_data_pipeline_empty_SHIFT (29U)
#define UMCTL2_REGS_DBGCAM_wr_data_pipeline_empty_WIDTH (1U)
#define UMCTL2_REGS_DBGCAM_wr_data_pipeline_empty(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DBGCAM_wr_data_pipeline_empty_SHIFT)) & UMCTL2_REGS_DBGCAM_wr_data_pipeline_empty_MASK)
/*! @} */

/*! @name DBGCMD - Command Debug */
/*! @{ */
#define UMCTL2_REGS_DBGCMD_rank0_refresh_MASK    (0x1U)
#define UMCTL2_REGS_DBGCMD_rank0_refresh_SHIFT   (0U)
#define UMCTL2_REGS_DBGCMD_rank0_refresh_WIDTH   (1U)
#define UMCTL2_REGS_DBGCMD_rank0_refresh(x)      (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DBGCMD_rank0_refresh_SHIFT)) & UMCTL2_REGS_DBGCMD_rank0_refresh_MASK)
#define UMCTL2_REGS_DBGCMD_rank1_refresh_MASK    (0x2U)
#define UMCTL2_REGS_DBGCMD_rank1_refresh_SHIFT   (1U)
#define UMCTL2_REGS_DBGCMD_rank1_refresh_WIDTH   (1U)
#define UMCTL2_REGS_DBGCMD_rank1_refresh(x)      (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DBGCMD_rank1_refresh_SHIFT)) & UMCTL2_REGS_DBGCMD_rank1_refresh_MASK)
#define UMCTL2_REGS_DBGCMD_zq_calib_short_MASK   (0x10U)
#define UMCTL2_REGS_DBGCMD_zq_calib_short_SHIFT  (4U)
#define UMCTL2_REGS_DBGCMD_zq_calib_short_WIDTH  (1U)
#define UMCTL2_REGS_DBGCMD_zq_calib_short(x)     (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DBGCMD_zq_calib_short_SHIFT)) & UMCTL2_REGS_DBGCMD_zq_calib_short_MASK)
#define UMCTL2_REGS_DBGCMD_ctrlupd_MASK          (0x20U)
#define UMCTL2_REGS_DBGCMD_ctrlupd_SHIFT         (5U)
#define UMCTL2_REGS_DBGCMD_ctrlupd_WIDTH         (1U)
#define UMCTL2_REGS_DBGCMD_ctrlupd(x)            (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DBGCMD_ctrlupd_SHIFT)) & UMCTL2_REGS_DBGCMD_ctrlupd_MASK)
/*! @} */

/*! @name DBGSTAT - Status Debug */
/*! @{ */
#define UMCTL2_REGS_DBGSTAT_rank0_refresh_busy_MASK (0x1U)
#define UMCTL2_REGS_DBGSTAT_rank0_refresh_busy_SHIFT (0U)
#define UMCTL2_REGS_DBGSTAT_rank0_refresh_busy_WIDTH (1U)
#define UMCTL2_REGS_DBGSTAT_rank0_refresh_busy(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DBGSTAT_rank0_refresh_busy_SHIFT)) & UMCTL2_REGS_DBGSTAT_rank0_refresh_busy_MASK)
#define UMCTL2_REGS_DBGSTAT_rank1_refresh_busy_MASK (0x2U)
#define UMCTL2_REGS_DBGSTAT_rank1_refresh_busy_SHIFT (1U)
#define UMCTL2_REGS_DBGSTAT_rank1_refresh_busy_WIDTH (1U)
#define UMCTL2_REGS_DBGSTAT_rank1_refresh_busy(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DBGSTAT_rank1_refresh_busy_SHIFT)) & UMCTL2_REGS_DBGSTAT_rank1_refresh_busy_MASK)
#define UMCTL2_REGS_DBGSTAT_zq_calib_short_busy_MASK (0x10U)
#define UMCTL2_REGS_DBGSTAT_zq_calib_short_busy_SHIFT (4U)
#define UMCTL2_REGS_DBGSTAT_zq_calib_short_busy_WIDTH (1U)
#define UMCTL2_REGS_DBGSTAT_zq_calib_short_busy(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DBGSTAT_zq_calib_short_busy_SHIFT)) & UMCTL2_REGS_DBGSTAT_zq_calib_short_busy_MASK)
#define UMCTL2_REGS_DBGSTAT_ctrlupd_busy_MASK    (0x20U)
#define UMCTL2_REGS_DBGSTAT_ctrlupd_busy_SHIFT   (5U)
#define UMCTL2_REGS_DBGSTAT_ctrlupd_busy_WIDTH   (1U)
#define UMCTL2_REGS_DBGSTAT_ctrlupd_busy(x)      (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DBGSTAT_ctrlupd_busy_SHIFT)) & UMCTL2_REGS_DBGSTAT_ctrlupd_busy_MASK)
/*! @} */

/*! @name DBGCAM1 - CAM Debug 1 */
/*! @{ */
#define UMCTL2_REGS_DBGCAM1_dbg_wrecc_q_depth_MASK (0x3FU)
#define UMCTL2_REGS_DBGCAM1_dbg_wrecc_q_depth_SHIFT (0U)
#define UMCTL2_REGS_DBGCAM1_dbg_wrecc_q_depth_WIDTH (6U)
#define UMCTL2_REGS_DBGCAM1_dbg_wrecc_q_depth(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DBGCAM1_dbg_wrecc_q_depth_SHIFT)) & UMCTL2_REGS_DBGCAM1_dbg_wrecc_q_depth_MASK)
/*! @} */

/*! @name SWCTL - Software Register Programming Control Enable */
/*! @{ */
#define UMCTL2_REGS_SWCTL_sw_done_MASK           (0x1U)
#define UMCTL2_REGS_SWCTL_sw_done_SHIFT          (0U)
#define UMCTL2_REGS_SWCTL_sw_done_WIDTH          (1U)
#define UMCTL2_REGS_SWCTL_sw_done(x)             (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_SWCTL_sw_done_SHIFT)) & UMCTL2_REGS_SWCTL_sw_done_MASK)
/*! @} */

/*! @name SWSTAT - Software Register Programming Control Status */
/*! @{ */
#define UMCTL2_REGS_SWSTAT_sw_done_ack_MASK      (0x1U)
#define UMCTL2_REGS_SWSTAT_sw_done_ack_SHIFT     (0U)
#define UMCTL2_REGS_SWSTAT_sw_done_ack_WIDTH     (1U)
#define UMCTL2_REGS_SWSTAT_sw_done_ack(x)        (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_SWSTAT_sw_done_ack_SHIFT)) & UMCTL2_REGS_SWSTAT_sw_done_ack_MASK)
/*! @} */

/*! @name OCPARCFG0 - On-Chip Parity Configuration 0 */
/*! @{ */
#define UMCTL2_REGS_OCPARCFG0_oc_parity_en_MASK  (0x1U)
#define UMCTL2_REGS_OCPARCFG0_oc_parity_en_SHIFT (0U)
#define UMCTL2_REGS_OCPARCFG0_oc_parity_en_WIDTH (1U)
#define UMCTL2_REGS_OCPARCFG0_oc_parity_en(x)    (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_OCPARCFG0_oc_parity_en_SHIFT)) & UMCTL2_REGS_OCPARCFG0_oc_parity_en_MASK)
#define UMCTL2_REGS_OCPARCFG0_oc_parity_type_MASK (0x2U)
#define UMCTL2_REGS_OCPARCFG0_oc_parity_type_SHIFT (1U)
#define UMCTL2_REGS_OCPARCFG0_oc_parity_type_WIDTH (1U)
#define UMCTL2_REGS_OCPARCFG0_oc_parity_type(x)  (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_OCPARCFG0_oc_parity_type_SHIFT)) & UMCTL2_REGS_OCPARCFG0_oc_parity_type_MASK)
#define UMCTL2_REGS_OCPARCFG0_par_wdata_err_intr_en_MASK (0x10U)
#define UMCTL2_REGS_OCPARCFG0_par_wdata_err_intr_en_SHIFT (4U)
#define UMCTL2_REGS_OCPARCFG0_par_wdata_err_intr_en_WIDTH (1U)
#define UMCTL2_REGS_OCPARCFG0_par_wdata_err_intr_en(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_OCPARCFG0_par_wdata_err_intr_en_SHIFT)) & UMCTL2_REGS_OCPARCFG0_par_wdata_err_intr_en_MASK)
#define UMCTL2_REGS_OCPARCFG0_par_wdata_slverr_en_MASK (0x20U)
#define UMCTL2_REGS_OCPARCFG0_par_wdata_slverr_en_SHIFT (5U)
#define UMCTL2_REGS_OCPARCFG0_par_wdata_slverr_en_WIDTH (1U)
#define UMCTL2_REGS_OCPARCFG0_par_wdata_slverr_en(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_OCPARCFG0_par_wdata_slverr_en_SHIFT)) & UMCTL2_REGS_OCPARCFG0_par_wdata_slverr_en_MASK)
#define UMCTL2_REGS_OCPARCFG0_par_wdata_err_intr_clr_MASK (0x40U)
#define UMCTL2_REGS_OCPARCFG0_par_wdata_err_intr_clr_SHIFT (6U)
#define UMCTL2_REGS_OCPARCFG0_par_wdata_err_intr_clr_WIDTH (1U)
#define UMCTL2_REGS_OCPARCFG0_par_wdata_err_intr_clr(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_OCPARCFG0_par_wdata_err_intr_clr_SHIFT)) & UMCTL2_REGS_OCPARCFG0_par_wdata_err_intr_clr_MASK)
#define UMCTL2_REGS_OCPARCFG0_par_wdata_err_intr_force_MASK (0x80U)
#define UMCTL2_REGS_OCPARCFG0_par_wdata_err_intr_force_SHIFT (7U)
#define UMCTL2_REGS_OCPARCFG0_par_wdata_err_intr_force_WIDTH (1U)
#define UMCTL2_REGS_OCPARCFG0_par_wdata_err_intr_force(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_OCPARCFG0_par_wdata_err_intr_force_SHIFT)) & UMCTL2_REGS_OCPARCFG0_par_wdata_err_intr_force_MASK)
#define UMCTL2_REGS_OCPARCFG0_par_rdata_slverr_en_MASK (0x1000U)
#define UMCTL2_REGS_OCPARCFG0_par_rdata_slverr_en_SHIFT (12U)
#define UMCTL2_REGS_OCPARCFG0_par_rdata_slverr_en_WIDTH (1U)
#define UMCTL2_REGS_OCPARCFG0_par_rdata_slverr_en(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_OCPARCFG0_par_rdata_slverr_en_SHIFT)) & UMCTL2_REGS_OCPARCFG0_par_rdata_slverr_en_MASK)
#define UMCTL2_REGS_OCPARCFG0_par_rdata_err_intr_en_MASK (0x2000U)
#define UMCTL2_REGS_OCPARCFG0_par_rdata_err_intr_en_SHIFT (13U)
#define UMCTL2_REGS_OCPARCFG0_par_rdata_err_intr_en_WIDTH (1U)
#define UMCTL2_REGS_OCPARCFG0_par_rdata_err_intr_en(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_OCPARCFG0_par_rdata_err_intr_en_SHIFT)) & UMCTL2_REGS_OCPARCFG0_par_rdata_err_intr_en_MASK)
#define UMCTL2_REGS_OCPARCFG0_par_rdata_err_intr_clr_MASK (0x4000U)
#define UMCTL2_REGS_OCPARCFG0_par_rdata_err_intr_clr_SHIFT (14U)
#define UMCTL2_REGS_OCPARCFG0_par_rdata_err_intr_clr_WIDTH (1U)
#define UMCTL2_REGS_OCPARCFG0_par_rdata_err_intr_clr(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_OCPARCFG0_par_rdata_err_intr_clr_SHIFT)) & UMCTL2_REGS_OCPARCFG0_par_rdata_err_intr_clr_MASK)
#define UMCTL2_REGS_OCPARCFG0_par_rdata_err_intr_force_MASK (0x8000U)
#define UMCTL2_REGS_OCPARCFG0_par_rdata_err_intr_force_SHIFT (15U)
#define UMCTL2_REGS_OCPARCFG0_par_rdata_err_intr_force_WIDTH (1U)
#define UMCTL2_REGS_OCPARCFG0_par_rdata_err_intr_force(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_OCPARCFG0_par_rdata_err_intr_force_SHIFT)) & UMCTL2_REGS_OCPARCFG0_par_rdata_err_intr_force_MASK)
#define UMCTL2_REGS_OCPARCFG0_par_addr_slverr_en_MASK (0x100000U)
#define UMCTL2_REGS_OCPARCFG0_par_addr_slverr_en_SHIFT (20U)
#define UMCTL2_REGS_OCPARCFG0_par_addr_slverr_en_WIDTH (1U)
#define UMCTL2_REGS_OCPARCFG0_par_addr_slverr_en(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_OCPARCFG0_par_addr_slverr_en_SHIFT)) & UMCTL2_REGS_OCPARCFG0_par_addr_slverr_en_MASK)
#define UMCTL2_REGS_OCPARCFG0_par_waddr_err_intr_en_MASK (0x200000U)
#define UMCTL2_REGS_OCPARCFG0_par_waddr_err_intr_en_SHIFT (21U)
#define UMCTL2_REGS_OCPARCFG0_par_waddr_err_intr_en_WIDTH (1U)
#define UMCTL2_REGS_OCPARCFG0_par_waddr_err_intr_en(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_OCPARCFG0_par_waddr_err_intr_en_SHIFT)) & UMCTL2_REGS_OCPARCFG0_par_waddr_err_intr_en_MASK)
#define UMCTL2_REGS_OCPARCFG0_par_waddr_err_intr_clr_MASK (0x400000U)
#define UMCTL2_REGS_OCPARCFG0_par_waddr_err_intr_clr_SHIFT (22U)
#define UMCTL2_REGS_OCPARCFG0_par_waddr_err_intr_clr_WIDTH (1U)
#define UMCTL2_REGS_OCPARCFG0_par_waddr_err_intr_clr(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_OCPARCFG0_par_waddr_err_intr_clr_SHIFT)) & UMCTL2_REGS_OCPARCFG0_par_waddr_err_intr_clr_MASK)
#define UMCTL2_REGS_OCPARCFG0_par_raddr_err_intr_en_MASK (0x800000U)
#define UMCTL2_REGS_OCPARCFG0_par_raddr_err_intr_en_SHIFT (23U)
#define UMCTL2_REGS_OCPARCFG0_par_raddr_err_intr_en_WIDTH (1U)
#define UMCTL2_REGS_OCPARCFG0_par_raddr_err_intr_en(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_OCPARCFG0_par_raddr_err_intr_en_SHIFT)) & UMCTL2_REGS_OCPARCFG0_par_raddr_err_intr_en_MASK)
#define UMCTL2_REGS_OCPARCFG0_par_raddr_err_intr_clr_MASK (0x1000000U)
#define UMCTL2_REGS_OCPARCFG0_par_raddr_err_intr_clr_SHIFT (24U)
#define UMCTL2_REGS_OCPARCFG0_par_raddr_err_intr_clr_WIDTH (1U)
#define UMCTL2_REGS_OCPARCFG0_par_raddr_err_intr_clr(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_OCPARCFG0_par_raddr_err_intr_clr_SHIFT)) & UMCTL2_REGS_OCPARCFG0_par_raddr_err_intr_clr_MASK)
#define UMCTL2_REGS_OCPARCFG0_par_waddr_err_intr_force_MASK (0x2000000U)
#define UMCTL2_REGS_OCPARCFG0_par_waddr_err_intr_force_SHIFT (25U)
#define UMCTL2_REGS_OCPARCFG0_par_waddr_err_intr_force_WIDTH (1U)
#define UMCTL2_REGS_OCPARCFG0_par_waddr_err_intr_force(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_OCPARCFG0_par_waddr_err_intr_force_SHIFT)) & UMCTL2_REGS_OCPARCFG0_par_waddr_err_intr_force_MASK)
#define UMCTL2_REGS_OCPARCFG0_par_raddr_err_intr_force_MASK (0x4000000U)
#define UMCTL2_REGS_OCPARCFG0_par_raddr_err_intr_force_SHIFT (26U)
#define UMCTL2_REGS_OCPARCFG0_par_raddr_err_intr_force_WIDTH (1U)
#define UMCTL2_REGS_OCPARCFG0_par_raddr_err_intr_force(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_OCPARCFG0_par_raddr_err_intr_force_SHIFT)) & UMCTL2_REGS_OCPARCFG0_par_raddr_err_intr_force_MASK)
/*! @} */

/*! @name OCPARCFG1 - On-Chip Parity Configuration 1 */
/*! @{ */
#define UMCTL2_REGS_OCPARCFG1_par_poison_en_MASK (0x1U)
#define UMCTL2_REGS_OCPARCFG1_par_poison_en_SHIFT (0U)
#define UMCTL2_REGS_OCPARCFG1_par_poison_en_WIDTH (1U)
#define UMCTL2_REGS_OCPARCFG1_par_poison_en(x)   (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_OCPARCFG1_par_poison_en_SHIFT)) & UMCTL2_REGS_OCPARCFG1_par_poison_en_MASK)
#define UMCTL2_REGS_OCPARCFG1_par_poison_loc_rd_dfi_MASK (0x4U)
#define UMCTL2_REGS_OCPARCFG1_par_poison_loc_rd_dfi_SHIFT (2U)
#define UMCTL2_REGS_OCPARCFG1_par_poison_loc_rd_dfi_WIDTH (1U)
#define UMCTL2_REGS_OCPARCFG1_par_poison_loc_rd_dfi(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_OCPARCFG1_par_poison_loc_rd_dfi_SHIFT)) & UMCTL2_REGS_OCPARCFG1_par_poison_loc_rd_dfi_MASK)
#define UMCTL2_REGS_OCPARCFG1_par_poison_loc_rd_iecc_type_MASK (0x8U)
#define UMCTL2_REGS_OCPARCFG1_par_poison_loc_rd_iecc_type_SHIFT (3U)
#define UMCTL2_REGS_OCPARCFG1_par_poison_loc_rd_iecc_type_WIDTH (1U)
#define UMCTL2_REGS_OCPARCFG1_par_poison_loc_rd_iecc_type(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_OCPARCFG1_par_poison_loc_rd_iecc_type_SHIFT)) & UMCTL2_REGS_OCPARCFG1_par_poison_loc_rd_iecc_type_MASK)
#define UMCTL2_REGS_OCPARCFG1_par_poison_loc_rd_port_MASK (0xF0U)
#define UMCTL2_REGS_OCPARCFG1_par_poison_loc_rd_port_SHIFT (4U)
#define UMCTL2_REGS_OCPARCFG1_par_poison_loc_rd_port_WIDTH (4U)
#define UMCTL2_REGS_OCPARCFG1_par_poison_loc_rd_port(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_OCPARCFG1_par_poison_loc_rd_port_SHIFT)) & UMCTL2_REGS_OCPARCFG1_par_poison_loc_rd_port_MASK)
#define UMCTL2_REGS_OCPARCFG1_par_poison_loc_wr_port_MASK (0xF00U)
#define UMCTL2_REGS_OCPARCFG1_par_poison_loc_wr_port_SHIFT (8U)
#define UMCTL2_REGS_OCPARCFG1_par_poison_loc_wr_port_WIDTH (4U)
#define UMCTL2_REGS_OCPARCFG1_par_poison_loc_wr_port(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_OCPARCFG1_par_poison_loc_wr_port_SHIFT)) & UMCTL2_REGS_OCPARCFG1_par_poison_loc_wr_port_MASK)
/*! @} */

/*! @name OCPARSTAT0 - On-Chip Parity Status 0 */
/*! @{ */
#define UMCTL2_REGS_OCPARSTAT0_par_waddr_err_intr_0_MASK (0x1U)
#define UMCTL2_REGS_OCPARSTAT0_par_waddr_err_intr_0_SHIFT (0U)
#define UMCTL2_REGS_OCPARSTAT0_par_waddr_err_intr_0_WIDTH (1U)
#define UMCTL2_REGS_OCPARSTAT0_par_waddr_err_intr_0(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_OCPARSTAT0_par_waddr_err_intr_0_SHIFT)) & UMCTL2_REGS_OCPARSTAT0_par_waddr_err_intr_0_MASK)
#define UMCTL2_REGS_OCPARSTAT0_par_waddr_err_intr_1_MASK (0x2U)
#define UMCTL2_REGS_OCPARSTAT0_par_waddr_err_intr_1_SHIFT (1U)
#define UMCTL2_REGS_OCPARSTAT0_par_waddr_err_intr_1_WIDTH (1U)
#define UMCTL2_REGS_OCPARSTAT0_par_waddr_err_intr_1(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_OCPARSTAT0_par_waddr_err_intr_1_SHIFT)) & UMCTL2_REGS_OCPARSTAT0_par_waddr_err_intr_1_MASK)
#define UMCTL2_REGS_OCPARSTAT0_par_waddr_err_intr_2_MASK (0x4U)
#define UMCTL2_REGS_OCPARSTAT0_par_waddr_err_intr_2_SHIFT (2U)
#define UMCTL2_REGS_OCPARSTAT0_par_waddr_err_intr_2_WIDTH (1U)
#define UMCTL2_REGS_OCPARSTAT0_par_waddr_err_intr_2(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_OCPARSTAT0_par_waddr_err_intr_2_SHIFT)) & UMCTL2_REGS_OCPARSTAT0_par_waddr_err_intr_2_MASK)
#define UMCTL2_REGS_OCPARSTAT0_par_raddr_err_intr_0_MASK (0x10000U)
#define UMCTL2_REGS_OCPARSTAT0_par_raddr_err_intr_0_SHIFT (16U)
#define UMCTL2_REGS_OCPARSTAT0_par_raddr_err_intr_0_WIDTH (1U)
#define UMCTL2_REGS_OCPARSTAT0_par_raddr_err_intr_0(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_OCPARSTAT0_par_raddr_err_intr_0_SHIFT)) & UMCTL2_REGS_OCPARSTAT0_par_raddr_err_intr_0_MASK)
#define UMCTL2_REGS_OCPARSTAT0_par_raddr_err_intr_1_MASK (0x20000U)
#define UMCTL2_REGS_OCPARSTAT0_par_raddr_err_intr_1_SHIFT (17U)
#define UMCTL2_REGS_OCPARSTAT0_par_raddr_err_intr_1_WIDTH (1U)
#define UMCTL2_REGS_OCPARSTAT0_par_raddr_err_intr_1(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_OCPARSTAT0_par_raddr_err_intr_1_SHIFT)) & UMCTL2_REGS_OCPARSTAT0_par_raddr_err_intr_1_MASK)
#define UMCTL2_REGS_OCPARSTAT0_par_raddr_err_intr_2_MASK (0x40000U)
#define UMCTL2_REGS_OCPARSTAT0_par_raddr_err_intr_2_SHIFT (18U)
#define UMCTL2_REGS_OCPARSTAT0_par_raddr_err_intr_2_WIDTH (1U)
#define UMCTL2_REGS_OCPARSTAT0_par_raddr_err_intr_2(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_OCPARSTAT0_par_raddr_err_intr_2_SHIFT)) & UMCTL2_REGS_OCPARSTAT0_par_raddr_err_intr_2_MASK)
/*! @} */

/*! @name OCPARSTAT1 - On-Chip Parity Status 1 */
/*! @{ */
#define UMCTL2_REGS_OCPARSTAT1_par_wdata_in_err_intr_0_MASK (0x1U)
#define UMCTL2_REGS_OCPARSTAT1_par_wdata_in_err_intr_0_SHIFT (0U)
#define UMCTL2_REGS_OCPARSTAT1_par_wdata_in_err_intr_0_WIDTH (1U)
#define UMCTL2_REGS_OCPARSTAT1_par_wdata_in_err_intr_0(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_OCPARSTAT1_par_wdata_in_err_intr_0_SHIFT)) & UMCTL2_REGS_OCPARSTAT1_par_wdata_in_err_intr_0_MASK)
#define UMCTL2_REGS_OCPARSTAT1_par_wdata_in_err_intr_1_MASK (0x2U)
#define UMCTL2_REGS_OCPARSTAT1_par_wdata_in_err_intr_1_SHIFT (1U)
#define UMCTL2_REGS_OCPARSTAT1_par_wdata_in_err_intr_1_WIDTH (1U)
#define UMCTL2_REGS_OCPARSTAT1_par_wdata_in_err_intr_1(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_OCPARSTAT1_par_wdata_in_err_intr_1_SHIFT)) & UMCTL2_REGS_OCPARSTAT1_par_wdata_in_err_intr_1_MASK)
#define UMCTL2_REGS_OCPARSTAT1_par_wdata_in_err_intr_2_MASK (0x4U)
#define UMCTL2_REGS_OCPARSTAT1_par_wdata_in_err_intr_2_SHIFT (2U)
#define UMCTL2_REGS_OCPARSTAT1_par_wdata_in_err_intr_2_WIDTH (1U)
#define UMCTL2_REGS_OCPARSTAT1_par_wdata_in_err_intr_2(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_OCPARSTAT1_par_wdata_in_err_intr_2_SHIFT)) & UMCTL2_REGS_OCPARSTAT1_par_wdata_in_err_intr_2_MASK)
#define UMCTL2_REGS_OCPARSTAT1_par_rdata_err_intr_0_MASK (0x10000U)
#define UMCTL2_REGS_OCPARSTAT1_par_rdata_err_intr_0_SHIFT (16U)
#define UMCTL2_REGS_OCPARSTAT1_par_rdata_err_intr_0_WIDTH (1U)
#define UMCTL2_REGS_OCPARSTAT1_par_rdata_err_intr_0(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_OCPARSTAT1_par_rdata_err_intr_0_SHIFT)) & UMCTL2_REGS_OCPARSTAT1_par_rdata_err_intr_0_MASK)
#define UMCTL2_REGS_OCPARSTAT1_par_rdata_err_intr_1_MASK (0x20000U)
#define UMCTL2_REGS_OCPARSTAT1_par_rdata_err_intr_1_SHIFT (17U)
#define UMCTL2_REGS_OCPARSTAT1_par_rdata_err_intr_1_WIDTH (1U)
#define UMCTL2_REGS_OCPARSTAT1_par_rdata_err_intr_1(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_OCPARSTAT1_par_rdata_err_intr_1_SHIFT)) & UMCTL2_REGS_OCPARSTAT1_par_rdata_err_intr_1_MASK)
#define UMCTL2_REGS_OCPARSTAT1_par_rdata_err_intr_2_MASK (0x40000U)
#define UMCTL2_REGS_OCPARSTAT1_par_rdata_err_intr_2_SHIFT (18U)
#define UMCTL2_REGS_OCPARSTAT1_par_rdata_err_intr_2_WIDTH (1U)
#define UMCTL2_REGS_OCPARSTAT1_par_rdata_err_intr_2(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_OCPARSTAT1_par_rdata_err_intr_2_SHIFT)) & UMCTL2_REGS_OCPARSTAT1_par_rdata_err_intr_2_MASK)
/*! @} */

/*! @name OCPARSTAT2 - On-Chip Parity Status 2 */
/*! @{ */
#define UMCTL2_REGS_OCPARSTAT2_par_wdata_out_err_intr_MASK (0x3U)
#define UMCTL2_REGS_OCPARSTAT2_par_wdata_out_err_intr_SHIFT (0U)
#define UMCTL2_REGS_OCPARSTAT2_par_wdata_out_err_intr_WIDTH (2U)
#define UMCTL2_REGS_OCPARSTAT2_par_wdata_out_err_intr(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_OCPARSTAT2_par_wdata_out_err_intr_SHIFT)) & UMCTL2_REGS_OCPARSTAT2_par_wdata_out_err_intr_MASK)
#define UMCTL2_REGS_OCPARSTAT2_par_rdata_in_err_ecc_intr_MASK (0x10U)
#define UMCTL2_REGS_OCPARSTAT2_par_rdata_in_err_ecc_intr_SHIFT (4U)
#define UMCTL2_REGS_OCPARSTAT2_par_rdata_in_err_ecc_intr_WIDTH (1U)
#define UMCTL2_REGS_OCPARSTAT2_par_rdata_in_err_ecc_intr(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_OCPARSTAT2_par_rdata_in_err_ecc_intr_SHIFT)) & UMCTL2_REGS_OCPARSTAT2_par_rdata_in_err_ecc_intr_MASK)
/*! @} */

/*! @name POISONCFG - AXI Poison Configuration */
/*! @{ */
#define UMCTL2_REGS_POISONCFG_wr_poison_slverr_en_MASK (0x1U)
#define UMCTL2_REGS_POISONCFG_wr_poison_slverr_en_SHIFT (0U)
#define UMCTL2_REGS_POISONCFG_wr_poison_slverr_en_WIDTH (1U)
#define UMCTL2_REGS_POISONCFG_wr_poison_slverr_en(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_POISONCFG_wr_poison_slverr_en_SHIFT)) & UMCTL2_REGS_POISONCFG_wr_poison_slverr_en_MASK)
#define UMCTL2_REGS_POISONCFG_wr_poison_intr_en_MASK (0x10U)
#define UMCTL2_REGS_POISONCFG_wr_poison_intr_en_SHIFT (4U)
#define UMCTL2_REGS_POISONCFG_wr_poison_intr_en_WIDTH (1U)
#define UMCTL2_REGS_POISONCFG_wr_poison_intr_en(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_POISONCFG_wr_poison_intr_en_SHIFT)) & UMCTL2_REGS_POISONCFG_wr_poison_intr_en_MASK)
#define UMCTL2_REGS_POISONCFG_wr_poison_intr_clr_MASK (0x100U)
#define UMCTL2_REGS_POISONCFG_wr_poison_intr_clr_SHIFT (8U)
#define UMCTL2_REGS_POISONCFG_wr_poison_intr_clr_WIDTH (1U)
#define UMCTL2_REGS_POISONCFG_wr_poison_intr_clr(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_POISONCFG_wr_poison_intr_clr_SHIFT)) & UMCTL2_REGS_POISONCFG_wr_poison_intr_clr_MASK)
#define UMCTL2_REGS_POISONCFG_rd_poison_slverr_en_MASK (0x10000U)
#define UMCTL2_REGS_POISONCFG_rd_poison_slverr_en_SHIFT (16U)
#define UMCTL2_REGS_POISONCFG_rd_poison_slverr_en_WIDTH (1U)
#define UMCTL2_REGS_POISONCFG_rd_poison_slverr_en(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_POISONCFG_rd_poison_slverr_en_SHIFT)) & UMCTL2_REGS_POISONCFG_rd_poison_slverr_en_MASK)
#define UMCTL2_REGS_POISONCFG_rd_poison_intr_en_MASK (0x100000U)
#define UMCTL2_REGS_POISONCFG_rd_poison_intr_en_SHIFT (20U)
#define UMCTL2_REGS_POISONCFG_rd_poison_intr_en_WIDTH (1U)
#define UMCTL2_REGS_POISONCFG_rd_poison_intr_en(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_POISONCFG_rd_poison_intr_en_SHIFT)) & UMCTL2_REGS_POISONCFG_rd_poison_intr_en_MASK)
#define UMCTL2_REGS_POISONCFG_rd_poison_intr_clr_MASK (0x1000000U)
#define UMCTL2_REGS_POISONCFG_rd_poison_intr_clr_SHIFT (24U)
#define UMCTL2_REGS_POISONCFG_rd_poison_intr_clr_WIDTH (1U)
#define UMCTL2_REGS_POISONCFG_rd_poison_intr_clr(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_POISONCFG_rd_poison_intr_clr_SHIFT)) & UMCTL2_REGS_POISONCFG_rd_poison_intr_clr_MASK)
/*! @} */

/*! @name POISONSTAT - AXI Poison Status */
/*! @{ */
#define UMCTL2_REGS_POISONSTAT_wr_poison_intr_0_MASK (0x1U)
#define UMCTL2_REGS_POISONSTAT_wr_poison_intr_0_SHIFT (0U)
#define UMCTL2_REGS_POISONSTAT_wr_poison_intr_0_WIDTH (1U)
#define UMCTL2_REGS_POISONSTAT_wr_poison_intr_0(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_POISONSTAT_wr_poison_intr_0_SHIFT)) & UMCTL2_REGS_POISONSTAT_wr_poison_intr_0_MASK)
#define UMCTL2_REGS_POISONSTAT_wr_poison_intr_1_MASK (0x2U)
#define UMCTL2_REGS_POISONSTAT_wr_poison_intr_1_SHIFT (1U)
#define UMCTL2_REGS_POISONSTAT_wr_poison_intr_1_WIDTH (1U)
#define UMCTL2_REGS_POISONSTAT_wr_poison_intr_1(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_POISONSTAT_wr_poison_intr_1_SHIFT)) & UMCTL2_REGS_POISONSTAT_wr_poison_intr_1_MASK)
#define UMCTL2_REGS_POISONSTAT_wr_poison_intr_2_MASK (0x4U)
#define UMCTL2_REGS_POISONSTAT_wr_poison_intr_2_SHIFT (2U)
#define UMCTL2_REGS_POISONSTAT_wr_poison_intr_2_WIDTH (1U)
#define UMCTL2_REGS_POISONSTAT_wr_poison_intr_2(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_POISONSTAT_wr_poison_intr_2_SHIFT)) & UMCTL2_REGS_POISONSTAT_wr_poison_intr_2_MASK)
#define UMCTL2_REGS_POISONSTAT_rd_poison_intr_0_MASK (0x10000U)
#define UMCTL2_REGS_POISONSTAT_rd_poison_intr_0_SHIFT (16U)
#define UMCTL2_REGS_POISONSTAT_rd_poison_intr_0_WIDTH (1U)
#define UMCTL2_REGS_POISONSTAT_rd_poison_intr_0(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_POISONSTAT_rd_poison_intr_0_SHIFT)) & UMCTL2_REGS_POISONSTAT_rd_poison_intr_0_MASK)
#define UMCTL2_REGS_POISONSTAT_rd_poison_intr_1_MASK (0x20000U)
#define UMCTL2_REGS_POISONSTAT_rd_poison_intr_1_SHIFT (17U)
#define UMCTL2_REGS_POISONSTAT_rd_poison_intr_1_WIDTH (1U)
#define UMCTL2_REGS_POISONSTAT_rd_poison_intr_1(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_POISONSTAT_rd_poison_intr_1_SHIFT)) & UMCTL2_REGS_POISONSTAT_rd_poison_intr_1_MASK)
#define UMCTL2_REGS_POISONSTAT_rd_poison_intr_2_MASK (0x40000U)
#define UMCTL2_REGS_POISONSTAT_rd_poison_intr_2_SHIFT (18U)
#define UMCTL2_REGS_POISONSTAT_rd_poison_intr_2_WIDTH (1U)
#define UMCTL2_REGS_POISONSTAT_rd_poison_intr_2(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_POISONSTAT_rd_poison_intr_2_SHIFT)) & UMCTL2_REGS_POISONSTAT_rd_poison_intr_2_MASK)
/*! @} */

/*! @name ADVECCINDEX - Advanced ECC Index */
/*! @{ */
#define UMCTL2_REGS_ADVECCINDEX_ecc_syndrome_sel_MASK (0x7U)
#define UMCTL2_REGS_ADVECCINDEX_ecc_syndrome_sel_SHIFT (0U)
#define UMCTL2_REGS_ADVECCINDEX_ecc_syndrome_sel_WIDTH (3U)
#define UMCTL2_REGS_ADVECCINDEX_ecc_syndrome_sel(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ADVECCINDEX_ecc_syndrome_sel_SHIFT)) & UMCTL2_REGS_ADVECCINDEX_ecc_syndrome_sel_MASK)
#define UMCTL2_REGS_ADVECCINDEX_ecc_err_symbol_sel_MASK (0x18U)
#define UMCTL2_REGS_ADVECCINDEX_ecc_err_symbol_sel_SHIFT (3U)
#define UMCTL2_REGS_ADVECCINDEX_ecc_err_symbol_sel_WIDTH (2U)
#define UMCTL2_REGS_ADVECCINDEX_ecc_err_symbol_sel(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ADVECCINDEX_ecc_err_symbol_sel_SHIFT)) & UMCTL2_REGS_ADVECCINDEX_ecc_err_symbol_sel_MASK)
#define UMCTL2_REGS_ADVECCINDEX_ecc_poison_beats_sel_MASK (0x1E0U)
#define UMCTL2_REGS_ADVECCINDEX_ecc_poison_beats_sel_SHIFT (5U)
#define UMCTL2_REGS_ADVECCINDEX_ecc_poison_beats_sel_WIDTH (4U)
#define UMCTL2_REGS_ADVECCINDEX_ecc_poison_beats_sel(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ADVECCINDEX_ecc_poison_beats_sel_SHIFT)) & UMCTL2_REGS_ADVECCINDEX_ecc_poison_beats_sel_MASK)
/*! @} */

/*! @name ECCPOISONPAT0 - ECC Poison Pattern 0 */
/*! @{ */
#define UMCTL2_REGS_ECCPOISONPAT0_ecc_poison_data_31_0_MASK (0xFFFFFFFFU)
#define UMCTL2_REGS_ECCPOISONPAT0_ecc_poison_data_31_0_SHIFT (0U)
#define UMCTL2_REGS_ECCPOISONPAT0_ecc_poison_data_31_0_WIDTH (32U)
#define UMCTL2_REGS_ECCPOISONPAT0_ecc_poison_data_31_0(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ECCPOISONPAT0_ecc_poison_data_31_0_SHIFT)) & UMCTL2_REGS_ECCPOISONPAT0_ecc_poison_data_31_0_MASK)
/*! @} */

/*! @name ECCPOISONPAT2 - ECC Poison Pattern 2 */
/*! @{ */
#define UMCTL2_REGS_ECCPOISONPAT2_ecc_poison_data_71_64_MASK (0xFFU)
#define UMCTL2_REGS_ECCPOISONPAT2_ecc_poison_data_71_64_SHIFT (0U)
#define UMCTL2_REGS_ECCPOISONPAT2_ecc_poison_data_71_64_WIDTH (8U)
#define UMCTL2_REGS_ECCPOISONPAT2_ecc_poison_data_71_64(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ECCPOISONPAT2_ecc_poison_data_71_64_SHIFT)) & UMCTL2_REGS_ECCPOISONPAT2_ecc_poison_data_71_64_MASK)
/*! @} */

/*! @name ECCAPSTAT - Address protection within ECC Status */
/*! @{ */
#define UMCTL2_REGS_ECCAPSTAT_ecc_ap_err_MASK    (0x1U)
#define UMCTL2_REGS_ECCAPSTAT_ecc_ap_err_SHIFT   (0U)
#define UMCTL2_REGS_ECCAPSTAT_ecc_ap_err_WIDTH   (1U)
#define UMCTL2_REGS_ECCAPSTAT_ecc_ap_err(x)      (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_ECCAPSTAT_ecc_ap_err_SHIFT)) & UMCTL2_REGS_ECCAPSTAT_ecc_ap_err_MASK)
/*! @} */

/*! @name REGPARCFG - Register Parity Configuration */
/*! @{ */
#define UMCTL2_REGS_REGPARCFG_reg_par_en_MASK    (0x1U)
#define UMCTL2_REGS_REGPARCFG_reg_par_en_SHIFT   (0U)
#define UMCTL2_REGS_REGPARCFG_reg_par_en_WIDTH   (1U)
#define UMCTL2_REGS_REGPARCFG_reg_par_en(x)      (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_REGPARCFG_reg_par_en_SHIFT)) & UMCTL2_REGS_REGPARCFG_reg_par_en_MASK)
#define UMCTL2_REGS_REGPARCFG_reg_par_err_intr_en_MASK (0x2U)
#define UMCTL2_REGS_REGPARCFG_reg_par_err_intr_en_SHIFT (1U)
#define UMCTL2_REGS_REGPARCFG_reg_par_err_intr_en_WIDTH (1U)
#define UMCTL2_REGS_REGPARCFG_reg_par_err_intr_en(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_REGPARCFG_reg_par_err_intr_en_SHIFT)) & UMCTL2_REGS_REGPARCFG_reg_par_err_intr_en_MASK)
#define UMCTL2_REGS_REGPARCFG_reg_par_err_intr_clr_MASK (0x4U)
#define UMCTL2_REGS_REGPARCFG_reg_par_err_intr_clr_SHIFT (2U)
#define UMCTL2_REGS_REGPARCFG_reg_par_err_intr_clr_WIDTH (1U)
#define UMCTL2_REGS_REGPARCFG_reg_par_err_intr_clr(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_REGPARCFG_reg_par_err_intr_clr_SHIFT)) & UMCTL2_REGS_REGPARCFG_reg_par_err_intr_clr_MASK)
#define UMCTL2_REGS_REGPARCFG_reg_par_err_intr_force_MASK (0x8U)
#define UMCTL2_REGS_REGPARCFG_reg_par_err_intr_force_SHIFT (3U)
#define UMCTL2_REGS_REGPARCFG_reg_par_err_intr_force_WIDTH (1U)
#define UMCTL2_REGS_REGPARCFG_reg_par_err_intr_force(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_REGPARCFG_reg_par_err_intr_force_SHIFT)) & UMCTL2_REGS_REGPARCFG_reg_par_err_intr_force_MASK)
#define UMCTL2_REGS_REGPARCFG_reg_par_poison_en_MASK (0x100U)
#define UMCTL2_REGS_REGPARCFG_reg_par_poison_en_SHIFT (8U)
#define UMCTL2_REGS_REGPARCFG_reg_par_poison_en_WIDTH (1U)
#define UMCTL2_REGS_REGPARCFG_reg_par_poison_en(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_REGPARCFG_reg_par_poison_en_SHIFT)) & UMCTL2_REGS_REGPARCFG_reg_par_poison_en_MASK)
/*! @} */

/*! @name REGPARSTAT - Register Parity Status */
/*! @{ */
#define UMCTL2_REGS_REGPARSTAT_reg_par_err_intr_MASK (0x1U)
#define UMCTL2_REGS_REGPARSTAT_reg_par_err_intr_SHIFT (0U)
#define UMCTL2_REGS_REGPARSTAT_reg_par_err_intr_WIDTH (1U)
#define UMCTL2_REGS_REGPARSTAT_reg_par_err_intr(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_REGPARSTAT_reg_par_err_intr_SHIFT)) & UMCTL2_REGS_REGPARSTAT_reg_par_err_intr_MASK)
/*! @} */

/*! @name OCCAPCFG - On-Chip command/Address Protection Configuration */
/*! @{ */
#define UMCTL2_REGS_OCCAPCFG_occap_en_MASK       (0x1U)
#define UMCTL2_REGS_OCCAPCFG_occap_en_SHIFT      (0U)
#define UMCTL2_REGS_OCCAPCFG_occap_en_WIDTH      (1U)
#define UMCTL2_REGS_OCCAPCFG_occap_en(x)         (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_OCCAPCFG_occap_en_SHIFT)) & UMCTL2_REGS_OCCAPCFG_occap_en_MASK)
#define UMCTL2_REGS_OCCAPCFG_occap_arb_intr_en_MASK (0x10000U)
#define UMCTL2_REGS_OCCAPCFG_occap_arb_intr_en_SHIFT (16U)
#define UMCTL2_REGS_OCCAPCFG_occap_arb_intr_en_WIDTH (1U)
#define UMCTL2_REGS_OCCAPCFG_occap_arb_intr_en(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_OCCAPCFG_occap_arb_intr_en_SHIFT)) & UMCTL2_REGS_OCCAPCFG_occap_arb_intr_en_MASK)
#define UMCTL2_REGS_OCCAPCFG_occap_arb_intr_clr_MASK (0x20000U)
#define UMCTL2_REGS_OCCAPCFG_occap_arb_intr_clr_SHIFT (17U)
#define UMCTL2_REGS_OCCAPCFG_occap_arb_intr_clr_WIDTH (1U)
#define UMCTL2_REGS_OCCAPCFG_occap_arb_intr_clr(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_OCCAPCFG_occap_arb_intr_clr_SHIFT)) & UMCTL2_REGS_OCCAPCFG_occap_arb_intr_clr_MASK)
#define UMCTL2_REGS_OCCAPCFG_occap_arb_intr_force_MASK (0x40000U)
#define UMCTL2_REGS_OCCAPCFG_occap_arb_intr_force_SHIFT (18U)
#define UMCTL2_REGS_OCCAPCFG_occap_arb_intr_force_WIDTH (1U)
#define UMCTL2_REGS_OCCAPCFG_occap_arb_intr_force(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_OCCAPCFG_occap_arb_intr_force_SHIFT)) & UMCTL2_REGS_OCCAPCFG_occap_arb_intr_force_MASK)
#define UMCTL2_REGS_OCCAPCFG_occap_arb_cmp_poison_seq_MASK (0x1000000U)
#define UMCTL2_REGS_OCCAPCFG_occap_arb_cmp_poison_seq_SHIFT (24U)
#define UMCTL2_REGS_OCCAPCFG_occap_arb_cmp_poison_seq_WIDTH (1U)
#define UMCTL2_REGS_OCCAPCFG_occap_arb_cmp_poison_seq(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_OCCAPCFG_occap_arb_cmp_poison_seq_SHIFT)) & UMCTL2_REGS_OCCAPCFG_occap_arb_cmp_poison_seq_MASK)
#define UMCTL2_REGS_OCCAPCFG_occap_arb_cmp_poison_parallel_MASK (0x2000000U)
#define UMCTL2_REGS_OCCAPCFG_occap_arb_cmp_poison_parallel_SHIFT (25U)
#define UMCTL2_REGS_OCCAPCFG_occap_arb_cmp_poison_parallel_WIDTH (1U)
#define UMCTL2_REGS_OCCAPCFG_occap_arb_cmp_poison_parallel(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_OCCAPCFG_occap_arb_cmp_poison_parallel_SHIFT)) & UMCTL2_REGS_OCCAPCFG_occap_arb_cmp_poison_parallel_MASK)
#define UMCTL2_REGS_OCCAPCFG_occap_arb_cmp_poison_err_inj_MASK (0x4000000U)
#define UMCTL2_REGS_OCCAPCFG_occap_arb_cmp_poison_err_inj_SHIFT (26U)
#define UMCTL2_REGS_OCCAPCFG_occap_arb_cmp_poison_err_inj_WIDTH (1U)
#define UMCTL2_REGS_OCCAPCFG_occap_arb_cmp_poison_err_inj(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_OCCAPCFG_occap_arb_cmp_poison_err_inj_SHIFT)) & UMCTL2_REGS_OCCAPCFG_occap_arb_cmp_poison_err_inj_MASK)
#define UMCTL2_REGS_OCCAPCFG_occap_arb_raq_poison_en_MASK (0x8000000U)
#define UMCTL2_REGS_OCCAPCFG_occap_arb_raq_poison_en_SHIFT (27U)
#define UMCTL2_REGS_OCCAPCFG_occap_arb_raq_poison_en_WIDTH (1U)
#define UMCTL2_REGS_OCCAPCFG_occap_arb_raq_poison_en(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_OCCAPCFG_occap_arb_raq_poison_en_SHIFT)) & UMCTL2_REGS_OCCAPCFG_occap_arb_raq_poison_en_MASK)
/*! @} */

/*! @name OCCAPSTAT - On-Chip command/Address Protection Status */
/*! @{ */
#define UMCTL2_REGS_OCCAPSTAT_occap_arb_err_intr_MASK (0x10000U)
#define UMCTL2_REGS_OCCAPSTAT_occap_arb_err_intr_SHIFT (16U)
#define UMCTL2_REGS_OCCAPSTAT_occap_arb_err_intr_WIDTH (1U)
#define UMCTL2_REGS_OCCAPSTAT_occap_arb_err_intr(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_OCCAPSTAT_occap_arb_err_intr_SHIFT)) & UMCTL2_REGS_OCCAPSTAT_occap_arb_err_intr_MASK)
#define UMCTL2_REGS_OCCAPSTAT_occap_arb_cmp_poison_complete_MASK (0x20000U)
#define UMCTL2_REGS_OCCAPSTAT_occap_arb_cmp_poison_complete_SHIFT (17U)
#define UMCTL2_REGS_OCCAPSTAT_occap_arb_cmp_poison_complete_WIDTH (1U)
#define UMCTL2_REGS_OCCAPSTAT_occap_arb_cmp_poison_complete(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_OCCAPSTAT_occap_arb_cmp_poison_complete_SHIFT)) & UMCTL2_REGS_OCCAPSTAT_occap_arb_cmp_poison_complete_MASK)
#define UMCTL2_REGS_OCCAPSTAT_occap_arb_cmp_poison_seq_err_MASK (0x1000000U)
#define UMCTL2_REGS_OCCAPSTAT_occap_arb_cmp_poison_seq_err_SHIFT (24U)
#define UMCTL2_REGS_OCCAPSTAT_occap_arb_cmp_poison_seq_err_WIDTH (1U)
#define UMCTL2_REGS_OCCAPSTAT_occap_arb_cmp_poison_seq_err(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_OCCAPSTAT_occap_arb_cmp_poison_seq_err_SHIFT)) & UMCTL2_REGS_OCCAPSTAT_occap_arb_cmp_poison_seq_err_MASK)
#define UMCTL2_REGS_OCCAPSTAT_occap_arb_cmp_poison_parallel_err_MASK (0x2000000U)
#define UMCTL2_REGS_OCCAPSTAT_occap_arb_cmp_poison_parallel_err_SHIFT (25U)
#define UMCTL2_REGS_OCCAPSTAT_occap_arb_cmp_poison_parallel_err_WIDTH (1U)
#define UMCTL2_REGS_OCCAPSTAT_occap_arb_cmp_poison_parallel_err(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_OCCAPSTAT_occap_arb_cmp_poison_parallel_err_SHIFT)) & UMCTL2_REGS_OCCAPSTAT_occap_arb_cmp_poison_parallel_err_MASK)
/*! @} */

/*! @name OCCAPCFG1 - On-Chip command/Address Protection Configuration 1 */
/*! @{ */
#define UMCTL2_REGS_OCCAPCFG1_occap_ddrc_data_intr_en_MASK (0x1U)
#define UMCTL2_REGS_OCCAPCFG1_occap_ddrc_data_intr_en_SHIFT (0U)
#define UMCTL2_REGS_OCCAPCFG1_occap_ddrc_data_intr_en_WIDTH (1U)
#define UMCTL2_REGS_OCCAPCFG1_occap_ddrc_data_intr_en(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_OCCAPCFG1_occap_ddrc_data_intr_en_SHIFT)) & UMCTL2_REGS_OCCAPCFG1_occap_ddrc_data_intr_en_MASK)
#define UMCTL2_REGS_OCCAPCFG1_occap_ddrc_data_intr_clr_MASK (0x2U)
#define UMCTL2_REGS_OCCAPCFG1_occap_ddrc_data_intr_clr_SHIFT (1U)
#define UMCTL2_REGS_OCCAPCFG1_occap_ddrc_data_intr_clr_WIDTH (1U)
#define UMCTL2_REGS_OCCAPCFG1_occap_ddrc_data_intr_clr(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_OCCAPCFG1_occap_ddrc_data_intr_clr_SHIFT)) & UMCTL2_REGS_OCCAPCFG1_occap_ddrc_data_intr_clr_MASK)
#define UMCTL2_REGS_OCCAPCFG1_occap_ddrc_data_intr_force_MASK (0x4U)
#define UMCTL2_REGS_OCCAPCFG1_occap_ddrc_data_intr_force_SHIFT (2U)
#define UMCTL2_REGS_OCCAPCFG1_occap_ddrc_data_intr_force_WIDTH (1U)
#define UMCTL2_REGS_OCCAPCFG1_occap_ddrc_data_intr_force(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_OCCAPCFG1_occap_ddrc_data_intr_force_SHIFT)) & UMCTL2_REGS_OCCAPCFG1_occap_ddrc_data_intr_force_MASK)
#define UMCTL2_REGS_OCCAPCFG1_occap_ddrc_data_poison_seq_MASK (0x100U)
#define UMCTL2_REGS_OCCAPCFG1_occap_ddrc_data_poison_seq_SHIFT (8U)
#define UMCTL2_REGS_OCCAPCFG1_occap_ddrc_data_poison_seq_WIDTH (1U)
#define UMCTL2_REGS_OCCAPCFG1_occap_ddrc_data_poison_seq(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_OCCAPCFG1_occap_ddrc_data_poison_seq_SHIFT)) & UMCTL2_REGS_OCCAPCFG1_occap_ddrc_data_poison_seq_MASK)
#define UMCTL2_REGS_OCCAPCFG1_occap_ddrc_data_poison_parallel_MASK (0x200U)
#define UMCTL2_REGS_OCCAPCFG1_occap_ddrc_data_poison_parallel_SHIFT (9U)
#define UMCTL2_REGS_OCCAPCFG1_occap_ddrc_data_poison_parallel_WIDTH (1U)
#define UMCTL2_REGS_OCCAPCFG1_occap_ddrc_data_poison_parallel(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_OCCAPCFG1_occap_ddrc_data_poison_parallel_SHIFT)) & UMCTL2_REGS_OCCAPCFG1_occap_ddrc_data_poison_parallel_MASK)
#define UMCTL2_REGS_OCCAPCFG1_occap_ddrc_data_poison_err_inj_MASK (0x400U)
#define UMCTL2_REGS_OCCAPCFG1_occap_ddrc_data_poison_err_inj_SHIFT (10U)
#define UMCTL2_REGS_OCCAPCFG1_occap_ddrc_data_poison_err_inj_WIDTH (1U)
#define UMCTL2_REGS_OCCAPCFG1_occap_ddrc_data_poison_err_inj(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_OCCAPCFG1_occap_ddrc_data_poison_err_inj_SHIFT)) & UMCTL2_REGS_OCCAPCFG1_occap_ddrc_data_poison_err_inj_MASK)
#define UMCTL2_REGS_OCCAPCFG1_occap_ddrc_ctrl_intr_en_MASK (0x10000U)
#define UMCTL2_REGS_OCCAPCFG1_occap_ddrc_ctrl_intr_en_SHIFT (16U)
#define UMCTL2_REGS_OCCAPCFG1_occap_ddrc_ctrl_intr_en_WIDTH (1U)
#define UMCTL2_REGS_OCCAPCFG1_occap_ddrc_ctrl_intr_en(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_OCCAPCFG1_occap_ddrc_ctrl_intr_en_SHIFT)) & UMCTL2_REGS_OCCAPCFG1_occap_ddrc_ctrl_intr_en_MASK)
#define UMCTL2_REGS_OCCAPCFG1_occap_ddrc_ctrl_intr_clr_MASK (0x20000U)
#define UMCTL2_REGS_OCCAPCFG1_occap_ddrc_ctrl_intr_clr_SHIFT (17U)
#define UMCTL2_REGS_OCCAPCFG1_occap_ddrc_ctrl_intr_clr_WIDTH (1U)
#define UMCTL2_REGS_OCCAPCFG1_occap_ddrc_ctrl_intr_clr(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_OCCAPCFG1_occap_ddrc_ctrl_intr_clr_SHIFT)) & UMCTL2_REGS_OCCAPCFG1_occap_ddrc_ctrl_intr_clr_MASK)
#define UMCTL2_REGS_OCCAPCFG1_occap_ddrc_ctrl_intr_force_MASK (0x40000U)
#define UMCTL2_REGS_OCCAPCFG1_occap_ddrc_ctrl_intr_force_SHIFT (18U)
#define UMCTL2_REGS_OCCAPCFG1_occap_ddrc_ctrl_intr_force_WIDTH (1U)
#define UMCTL2_REGS_OCCAPCFG1_occap_ddrc_ctrl_intr_force(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_OCCAPCFG1_occap_ddrc_ctrl_intr_force_SHIFT)) & UMCTL2_REGS_OCCAPCFG1_occap_ddrc_ctrl_intr_force_MASK)
#define UMCTL2_REGS_OCCAPCFG1_occap_ddrc_ctrl_poison_seq_MASK (0x1000000U)
#define UMCTL2_REGS_OCCAPCFG1_occap_ddrc_ctrl_poison_seq_SHIFT (24U)
#define UMCTL2_REGS_OCCAPCFG1_occap_ddrc_ctrl_poison_seq_WIDTH (1U)
#define UMCTL2_REGS_OCCAPCFG1_occap_ddrc_ctrl_poison_seq(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_OCCAPCFG1_occap_ddrc_ctrl_poison_seq_SHIFT)) & UMCTL2_REGS_OCCAPCFG1_occap_ddrc_ctrl_poison_seq_MASK)
#define UMCTL2_REGS_OCCAPCFG1_occap_ddrc_ctrl_poison_parallel_MASK (0x2000000U)
#define UMCTL2_REGS_OCCAPCFG1_occap_ddrc_ctrl_poison_parallel_SHIFT (25U)
#define UMCTL2_REGS_OCCAPCFG1_occap_ddrc_ctrl_poison_parallel_WIDTH (1U)
#define UMCTL2_REGS_OCCAPCFG1_occap_ddrc_ctrl_poison_parallel(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_OCCAPCFG1_occap_ddrc_ctrl_poison_parallel_SHIFT)) & UMCTL2_REGS_OCCAPCFG1_occap_ddrc_ctrl_poison_parallel_MASK)
#define UMCTL2_REGS_OCCAPCFG1_occap_ddrc_ctrl_poison_err_inj_MASK (0x4000000U)
#define UMCTL2_REGS_OCCAPCFG1_occap_ddrc_ctrl_poison_err_inj_SHIFT (26U)
#define UMCTL2_REGS_OCCAPCFG1_occap_ddrc_ctrl_poison_err_inj_WIDTH (1U)
#define UMCTL2_REGS_OCCAPCFG1_occap_ddrc_ctrl_poison_err_inj(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_OCCAPCFG1_occap_ddrc_ctrl_poison_err_inj_SHIFT)) & UMCTL2_REGS_OCCAPCFG1_occap_ddrc_ctrl_poison_err_inj_MASK)
/*! @} */

/*! @name OCCAPSTAT1 - On-Chip command/Address Protection Status 1 */
/*! @{ */
#define UMCTL2_REGS_OCCAPSTAT1_occap_ddrc_data_err_intr_MASK (0x1U)
#define UMCTL2_REGS_OCCAPSTAT1_occap_ddrc_data_err_intr_SHIFT (0U)
#define UMCTL2_REGS_OCCAPSTAT1_occap_ddrc_data_err_intr_WIDTH (1U)
#define UMCTL2_REGS_OCCAPSTAT1_occap_ddrc_data_err_intr(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_OCCAPSTAT1_occap_ddrc_data_err_intr_SHIFT)) & UMCTL2_REGS_OCCAPSTAT1_occap_ddrc_data_err_intr_MASK)
#define UMCTL2_REGS_OCCAPSTAT1_occap_ddrc_data_poison_complete_MASK (0x2U)
#define UMCTL2_REGS_OCCAPSTAT1_occap_ddrc_data_poison_complete_SHIFT (1U)
#define UMCTL2_REGS_OCCAPSTAT1_occap_ddrc_data_poison_complete_WIDTH (1U)
#define UMCTL2_REGS_OCCAPSTAT1_occap_ddrc_data_poison_complete(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_OCCAPSTAT1_occap_ddrc_data_poison_complete_SHIFT)) & UMCTL2_REGS_OCCAPSTAT1_occap_ddrc_data_poison_complete_MASK)
#define UMCTL2_REGS_OCCAPSTAT1_occap_ddrc_data_poison_seq_err_MASK (0x100U)
#define UMCTL2_REGS_OCCAPSTAT1_occap_ddrc_data_poison_seq_err_SHIFT (8U)
#define UMCTL2_REGS_OCCAPSTAT1_occap_ddrc_data_poison_seq_err_WIDTH (1U)
#define UMCTL2_REGS_OCCAPSTAT1_occap_ddrc_data_poison_seq_err(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_OCCAPSTAT1_occap_ddrc_data_poison_seq_err_SHIFT)) & UMCTL2_REGS_OCCAPSTAT1_occap_ddrc_data_poison_seq_err_MASK)
#define UMCTL2_REGS_OCCAPSTAT1_occap_ddrc_data_poison_parallel_err_MASK (0x200U)
#define UMCTL2_REGS_OCCAPSTAT1_occap_ddrc_data_poison_parallel_err_SHIFT (9U)
#define UMCTL2_REGS_OCCAPSTAT1_occap_ddrc_data_poison_parallel_err_WIDTH (1U)
#define UMCTL2_REGS_OCCAPSTAT1_occap_ddrc_data_poison_parallel_err(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_OCCAPSTAT1_occap_ddrc_data_poison_parallel_err_SHIFT)) & UMCTL2_REGS_OCCAPSTAT1_occap_ddrc_data_poison_parallel_err_MASK)
#define UMCTL2_REGS_OCCAPSTAT1_occap_ddrc_ctrl_err_intr_MASK (0x10000U)
#define UMCTL2_REGS_OCCAPSTAT1_occap_ddrc_ctrl_err_intr_SHIFT (16U)
#define UMCTL2_REGS_OCCAPSTAT1_occap_ddrc_ctrl_err_intr_WIDTH (1U)
#define UMCTL2_REGS_OCCAPSTAT1_occap_ddrc_ctrl_err_intr(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_OCCAPSTAT1_occap_ddrc_ctrl_err_intr_SHIFT)) & UMCTL2_REGS_OCCAPSTAT1_occap_ddrc_ctrl_err_intr_MASK)
#define UMCTL2_REGS_OCCAPSTAT1_occap_ddrc_ctrl_poison_complete_MASK (0x20000U)
#define UMCTL2_REGS_OCCAPSTAT1_occap_ddrc_ctrl_poison_complete_SHIFT (17U)
#define UMCTL2_REGS_OCCAPSTAT1_occap_ddrc_ctrl_poison_complete_WIDTH (1U)
#define UMCTL2_REGS_OCCAPSTAT1_occap_ddrc_ctrl_poison_complete(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_OCCAPSTAT1_occap_ddrc_ctrl_poison_complete_SHIFT)) & UMCTL2_REGS_OCCAPSTAT1_occap_ddrc_ctrl_poison_complete_MASK)
#define UMCTL2_REGS_OCCAPSTAT1_occap_ddrc_ctrl_poison_seq_err_MASK (0x1000000U)
#define UMCTL2_REGS_OCCAPSTAT1_occap_ddrc_ctrl_poison_seq_err_SHIFT (24U)
#define UMCTL2_REGS_OCCAPSTAT1_occap_ddrc_ctrl_poison_seq_err_WIDTH (1U)
#define UMCTL2_REGS_OCCAPSTAT1_occap_ddrc_ctrl_poison_seq_err(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_OCCAPSTAT1_occap_ddrc_ctrl_poison_seq_err_SHIFT)) & UMCTL2_REGS_OCCAPSTAT1_occap_ddrc_ctrl_poison_seq_err_MASK)
#define UMCTL2_REGS_OCCAPSTAT1_occap_ddrc_ctrl_poison_parallel_err_MASK (0x2000000U)
#define UMCTL2_REGS_OCCAPSTAT1_occap_ddrc_ctrl_poison_parallel_err_SHIFT (25U)
#define UMCTL2_REGS_OCCAPSTAT1_occap_ddrc_ctrl_poison_parallel_err_WIDTH (1U)
#define UMCTL2_REGS_OCCAPSTAT1_occap_ddrc_ctrl_poison_parallel_err(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_OCCAPSTAT1_occap_ddrc_ctrl_poison_parallel_err_SHIFT)) & UMCTL2_REGS_OCCAPSTAT1_occap_ddrc_ctrl_poison_parallel_err_MASK)
/*! @} */

/*! @name DERATESTAT - Temperature Derate Status */
/*! @{ */
#define UMCTL2_REGS_DERATESTAT_derate_temp_limit_intr_MASK (0x1U)
#define UMCTL2_REGS_DERATESTAT_derate_temp_limit_intr_SHIFT (0U)
#define UMCTL2_REGS_DERATESTAT_derate_temp_limit_intr_WIDTH (1U)
#define UMCTL2_REGS_DERATESTAT_derate_temp_limit_intr(x) (((uint32_t)(((uint32_t)(x)) << UMCTL2_REGS_DERATESTAT_derate_temp_limit_intr_SHIFT)) & UMCTL2_REGS_DERATESTAT_derate_temp_limit_intr_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group UMCTL2_REGS_Register_Masks */


/*!
 * @}
 */ /* end of group UMCTL2_REGS_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- UOTG Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup UOTG_Peripheral_Access_Layer UOTG Peripheral Access Layer
 * @{
 */

/** UOTG - Size of Registers Arrays */
#define UOTG_GPTIMER_COUNT                        2u

/** UOTG - Register Layout Typedef */
typedef struct {
  __I  uint32_t ID;                                /**< Identification Register, offset: 0x0 */
  __I  uint32_t HWGENERAL;                         /**< General Hardware Parameters, offset: 0x4 */
  __I  uint32_t HWHOST;                            /**< Host Hardware Parameters, offset: 0x8 */
  __I  uint32_t HWDEVICE;                          /**< Device Hardware Parameters, offset: 0xC */
  __I  uint32_t HWTXBUF;                           /**< TX Buffer Hardware Parameters, offset: 0x10 */
  __I  uint32_t HWRXBUF;                           /**< RX Buffer Hardware Parameters, offset: 0x14 */
  uint8_t RESERVED_0[104];
  struct {                                         /* offset: 0x80, array step: 0x8 */
    __IO uint32_t GPTIMERLD;                         /**< General Purpose Timer Load, array offset: 0x80, array step: 0x8 */
    __IO uint32_t GPTIMERCTRL;                       /**< General Purpose Timer Controller, array offset: 0x84, array step: 0x8 */
  } GPTIMER[UOTG_GPTIMER_COUNT];
  __IO uint32_t SBUSCFG;                           /**< System Bus Configuration, offset: 0x90 */
  uint8_t RESERVED_1[108];
  __I  uint8_t CAPLENGTH;                          /**< Capability Register Length, offset: 0x100 */
  uint8_t RESERVED_2[1];
  __I  uint16_t HCIVERSION;                        /**< Host Controller Interface Version, offset: 0x102 */
  __I  uint32_t HCSPARAMS;                         /**< Host Controller Structural Parameters, offset: 0x104 */
  __I  uint32_t HCCPARAMS;                         /**< Host Controller Capability Parameters, offset: 0x108 */
  uint8_t RESERVED_3[20];
  __I  uint16_t DCIVERSION;                        /**< Device Controller Interface Version, offset: 0x120 */
  uint8_t RESERVED_4[2];
  __I  uint32_t DCCPARAMS;                         /**< Device Controller Capability Parameters, offset: 0x124 */
  uint8_t RESERVED_5[24];
  __IO uint32_t USBCMD;                            /**< USB Command Register, offset: 0x140 */
  __IO uint32_t USBSTS;                            /**< USB Status Register, offset: 0x144 */
  __IO uint32_t USBINTR;                           /**< Interrupt Enable Register, offset: 0x148 */
  __IO uint32_t FRINDEX;                           /**< USB Frame Index, offset: 0x14C */
  uint8_t RESERVED_6[4];
  __IO uint32_t PERIODICLISTBASE_OR_DEVICEADDR;    /**< Frame List Base Address or Device Address, offset: 0x154 */
  __IO uint32_t ASYNCLISTADDR_OR_ENDPOINTLISTADDR; /**< Next Asynch. Address or Endpoint List Address), offset: 0x158 */
  uint8_t RESERVED_7[4];
  __IO uint32_t BURSTSIZE;                         /**< Programmable Burst Size, offset: 0x160 */
  __IO uint32_t TXFILLTUNING;                      /**< TX FIFO Fill Tuning, offset: 0x164 */
  uint8_t RESERVED_8[4];
  __IO uint32_t IC_USB;                            /**< IC_USB enable and voltage negotiation, offset: 0x16C */
  __IO uint32_t ULPI_VIEWPORT;                     /**< ULPI Register Access, offset: 0x170 */
  uint8_t RESERVED_9[4];
  __IO uint32_t ENDPTNAK;                          /**< Endpoint NAK, offset: 0x178 */
  __IO uint32_t ENDPTNAKEN;                        /**< Endpoint NAK Enable, offset: 0x17C */
       uint32_t CONFIGFLAG;                        /**< Configure Flag Register, offset: 0x180 */
  __IO uint32_t PORTSC1;                           /**< Port Status and Control, offset: 0x184 */
  uint8_t RESERVED_10[28];
  __IO uint32_t OTGSC;                             /**< On-The-Go Status Control, offset: 0x1A4 */
  __IO uint32_t USBMODE;                           /**< USB Device Mode, offset: 0x1A8 */
  __IO uint32_t ENDPTSETUPSTAT;                    /**< Endpoint Setup Status, offset: 0x1AC */
  __IO uint32_t ENDPTPRIME;                        /**< Endpoint Initialization, offset: 0x1B0 */
  __IO uint32_t ENDPTFLUSH;                        /**< Endpoint De-Initialize, offset: 0x1B4 */
  __I  uint32_t ENDPTSTAT;                         /**< Endpoint Status, offset: 0x1B8 */
  __IO uint32_t ENDPTCOMPLETE;                     /**< Endpoint Complete, offset: 0x1BC */
  __IO uint32_t ENDPTCTRL0;                        /**< Endpoint Control 0, offset: 0x1C0 */
  __IO uint32_t ENDPTCTRL1;                        /**< Endpoint Control, offset: 0x1C4 */
  __IO uint32_t ENDPTCTRL2;                        /**< Endpoint Control, offset: 0x1C8 */
  __IO uint32_t ENDPTCTRL3;                        /**< Endpoint Control, offset: 0x1CC */
  __IO uint32_t ENDPTCTRL4;                        /**< Endpoint Control, offset: 0x1D0 */
  __IO uint32_t ENDPTCTRL5;                        /**< Endpoint Control, offset: 0x1D4 */
} UOTG_Type, *UOTG_MemMapPtr;

/** Number of instances of the UOTG module. */
#define UOTG_INSTANCE_COUNT                      (1u)

/* UOTG - Peripheral instance base addresses */
/** Peripheral UOTG base address */
#define UOTG_BASE                                (0x44064000u)
/** Peripheral UOTG base pointer */
#define UOTG                                     ((UOTG_Type *)UOTG_BASE)
/** Array initializer of UOTG peripheral base addresses */
#define UOTG_BASE_ADDRS                          { UOTG_BASE }
/** Array initializer of UOTG peripheral base pointers */
#define UOTG_BASE_PTRS                           { UOTG }

/* ----------------------------------------------------------------------------
   -- UOTG Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup UOTG_Register_Masks UOTG Register Masks
 * @{
 */

/*! @name ID - Identification Register */
/*! @{ */
#define UOTG_ID_ID_MASK                          (0x3FU)
#define UOTG_ID_ID_SHIFT                         (0U)
#define UOTG_ID_ID_WIDTH                         (6U)
#define UOTG_ID_ID(x)                            (((uint32_t)(((uint32_t)(x)) << UOTG_ID_ID_SHIFT)) & UOTG_ID_ID_MASK)
#define UOTG_ID_NID_MASK                         (0x3F00U)
#define UOTG_ID_NID_SHIFT                        (8U)
#define UOTG_ID_NID_WIDTH                        (6U)
#define UOTG_ID_NID(x)                           (((uint32_t)(((uint32_t)(x)) << UOTG_ID_NID_SHIFT)) & UOTG_ID_NID_MASK)
#define UOTG_ID_REVISION_MASK                    (0x1E00000U)
#define UOTG_ID_REVISION_SHIFT                   (21U)
#define UOTG_ID_REVISION_WIDTH                   (4U)
#define UOTG_ID_REVISION(x)                      (((uint32_t)(((uint32_t)(x)) << UOTG_ID_REVISION_SHIFT)) & UOTG_ID_REVISION_MASK)
/*! @} */

/*! @name HWGENERAL - General Hardware Parameters */
/*! @{ */
#define UOTG_HWGENERAL_PHYW_MASK                 (0x30U)
#define UOTG_HWGENERAL_PHYW_SHIFT                (4U)
#define UOTG_HWGENERAL_PHYW_WIDTH                (2U)
#define UOTG_HWGENERAL_PHYW(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_HWGENERAL_PHYW_SHIFT)) & UOTG_HWGENERAL_PHYW_MASK)
#define UOTG_HWGENERAL_PHYM_MASK                 (0x3C0U)
#define UOTG_HWGENERAL_PHYM_SHIFT                (6U)
#define UOTG_HWGENERAL_PHYM_WIDTH                (4U)
#define UOTG_HWGENERAL_PHYM(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_HWGENERAL_PHYM_SHIFT)) & UOTG_HWGENERAL_PHYM_MASK)
#define UOTG_HWGENERAL_SM_MASK                   (0xC00U)
#define UOTG_HWGENERAL_SM_SHIFT                  (10U)
#define UOTG_HWGENERAL_SM_WIDTH                  (2U)
#define UOTG_HWGENERAL_SM(x)                     (((uint32_t)(((uint32_t)(x)) << UOTG_HWGENERAL_SM_SHIFT)) & UOTG_HWGENERAL_SM_MASK)
/*! @} */

/*! @name HWHOST - Host Hardware Parameters */
/*! @{ */
#define UOTG_HWHOST_HC_MASK                      (0x1U)
#define UOTG_HWHOST_HC_SHIFT                     (0U)
#define UOTG_HWHOST_HC_WIDTH                     (1U)
#define UOTG_HWHOST_HC(x)                        (((uint32_t)(((uint32_t)(x)) << UOTG_HWHOST_HC_SHIFT)) & UOTG_HWHOST_HC_MASK)
#define UOTG_HWHOST_NPORT_MASK                   (0xEU)
#define UOTG_HWHOST_NPORT_SHIFT                  (1U)
#define UOTG_HWHOST_NPORT_WIDTH                  (3U)
#define UOTG_HWHOST_NPORT(x)                     (((uint32_t)(((uint32_t)(x)) << UOTG_HWHOST_NPORT_SHIFT)) & UOTG_HWHOST_NPORT_MASK)
/*! @} */

/*! @name HWDEVICE - Device Hardware Parameters */
/*! @{ */
#define UOTG_HWDEVICE_DC_MASK                    (0x1U)
#define UOTG_HWDEVICE_DC_SHIFT                   (0U)
#define UOTG_HWDEVICE_DC_WIDTH                   (1U)
#define UOTG_HWDEVICE_DC(x)                      (((uint32_t)(((uint32_t)(x)) << UOTG_HWDEVICE_DC_SHIFT)) & UOTG_HWDEVICE_DC_MASK)
#define UOTG_HWDEVICE_DEVEP_MASK                 (0x7EU)
#define UOTG_HWDEVICE_DEVEP_SHIFT                (1U)
#define UOTG_HWDEVICE_DEVEP_WIDTH                (6U)
#define UOTG_HWDEVICE_DEVEP(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_HWDEVICE_DEVEP_SHIFT)) & UOTG_HWDEVICE_DEVEP_MASK)
/*! @} */

/*! @name HWTXBUF - TX Buffer Hardware Parameters */
/*! @{ */
#define UOTG_HWTXBUF_TXBURST_MASK                (0xFFU)
#define UOTG_HWTXBUF_TXBURST_SHIFT               (0U)
#define UOTG_HWTXBUF_TXBURST_WIDTH               (8U)
#define UOTG_HWTXBUF_TXBURST(x)                  (((uint32_t)(((uint32_t)(x)) << UOTG_HWTXBUF_TXBURST_SHIFT)) & UOTG_HWTXBUF_TXBURST_MASK)
#define UOTG_HWTXBUF_TXADD_MASK                  (0xFF00U)
#define UOTG_HWTXBUF_TXADD_SHIFT                 (8U)
#define UOTG_HWTXBUF_TXADD_WIDTH                 (8U)
#define UOTG_HWTXBUF_TXADD(x)                    (((uint32_t)(((uint32_t)(x)) << UOTG_HWTXBUF_TXADD_SHIFT)) & UOTG_HWTXBUF_TXADD_MASK)
#define UOTG_HWTXBUF_TXCHANADD_MASK              (0xFF0000U)
#define UOTG_HWTXBUF_TXCHANADD_SHIFT             (16U)
#define UOTG_HWTXBUF_TXCHANADD_WIDTH             (8U)
#define UOTG_HWTXBUF_TXCHANADD(x)                (((uint32_t)(((uint32_t)(x)) << UOTG_HWTXBUF_TXCHANADD_SHIFT)) & UOTG_HWTXBUF_TXCHANADD_MASK)
/*! @} */

/*! @name HWRXBUF - RX Buffer Hardware Parameters */
/*! @{ */
#define UOTG_HWRXBUF_RXBURST_MASK                (0xFFU)
#define UOTG_HWRXBUF_RXBURST_SHIFT               (0U)
#define UOTG_HWRXBUF_RXBURST_WIDTH               (8U)
#define UOTG_HWRXBUF_RXBURST(x)                  (((uint32_t)(((uint32_t)(x)) << UOTG_HWRXBUF_RXBURST_SHIFT)) & UOTG_HWRXBUF_RXBURST_MASK)
#define UOTG_HWRXBUF_RXADD_MASK                  (0xFF00U)
#define UOTG_HWRXBUF_RXADD_SHIFT                 (8U)
#define UOTG_HWRXBUF_RXADD_WIDTH                 (8U)
#define UOTG_HWRXBUF_RXADD(x)                    (((uint32_t)(((uint32_t)(x)) << UOTG_HWRXBUF_RXADD_SHIFT)) & UOTG_HWRXBUF_RXADD_MASK)
/*! @} */

/*! @name GPTIMERLD - General Purpose Timer Load */
/*! @{ */
#define UOTG_GPTIMERLD_GPTLD_MASK                (0xFFFFFFU)
#define UOTG_GPTIMERLD_GPTLD_SHIFT               (0U)
#define UOTG_GPTIMERLD_GPTLD_WIDTH               (24U)
#define UOTG_GPTIMERLD_GPTLD(x)                  (((uint32_t)(((uint32_t)(x)) << UOTG_GPTIMERLD_GPTLD_SHIFT)) & UOTG_GPTIMERLD_GPTLD_MASK)
/*! @} */

/*! @name GPTIMERCTRL - General Purpose Timer Controller */
/*! @{ */
#define UOTG_GPTIMERCTRL_GPTCNT_MASK             (0xFFFFFFU)
#define UOTG_GPTIMERCTRL_GPTCNT_SHIFT            (0U)
#define UOTG_GPTIMERCTRL_GPTCNT_WIDTH            (24U)
#define UOTG_GPTIMERCTRL_GPTCNT(x)               (((uint32_t)(((uint32_t)(x)) << UOTG_GPTIMERCTRL_GPTCNT_SHIFT)) & UOTG_GPTIMERCTRL_GPTCNT_MASK)
#define UOTG_GPTIMERCTRL_GPTMODE_MASK            (0x1000000U)
#define UOTG_GPTIMERCTRL_GPTMODE_SHIFT           (24U)
#define UOTG_GPTIMERCTRL_GPTMODE_WIDTH           (1U)
#define UOTG_GPTIMERCTRL_GPTMODE(x)              (((uint32_t)(((uint32_t)(x)) << UOTG_GPTIMERCTRL_GPTMODE_SHIFT)) & UOTG_GPTIMERCTRL_GPTMODE_MASK)
#define UOTG_GPTIMERCTRL_GPTRST_MASK             (0x40000000U)
#define UOTG_GPTIMERCTRL_GPTRST_SHIFT            (30U)
#define UOTG_GPTIMERCTRL_GPTRST_WIDTH            (1U)
#define UOTG_GPTIMERCTRL_GPTRST(x)               (((uint32_t)(((uint32_t)(x)) << UOTG_GPTIMERCTRL_GPTRST_SHIFT)) & UOTG_GPTIMERCTRL_GPTRST_MASK)
#define UOTG_GPTIMERCTRL_GPTRUN_MASK             (0x80000000U)
#define UOTG_GPTIMERCTRL_GPTRUN_SHIFT            (31U)
#define UOTG_GPTIMERCTRL_GPTRUN_WIDTH            (1U)
#define UOTG_GPTIMERCTRL_GPTRUN(x)               (((uint32_t)(((uint32_t)(x)) << UOTG_GPTIMERCTRL_GPTRUN_SHIFT)) & UOTG_GPTIMERCTRL_GPTRUN_MASK)
/*! @} */

/*! @name SBUSCFG - System Bus Configuration */
/*! @{ */
#define UOTG_SBUSCFG_AHBBRST_MASK                (0x7U)
#define UOTG_SBUSCFG_AHBBRST_SHIFT               (0U)
#define UOTG_SBUSCFG_AHBBRST_WIDTH               (3U)
#define UOTG_SBUSCFG_AHBBRST(x)                  (((uint32_t)(((uint32_t)(x)) << UOTG_SBUSCFG_AHBBRST_SHIFT)) & UOTG_SBUSCFG_AHBBRST_MASK)
#define UOTG_SBUSCFG_BARD_MASK                   (0x38U)
#define UOTG_SBUSCFG_BARD_SHIFT                  (3U)
#define UOTG_SBUSCFG_BARD_WIDTH                  (3U)
#define UOTG_SBUSCFG_BARD(x)                     (((uint32_t)(((uint32_t)(x)) << UOTG_SBUSCFG_BARD_SHIFT)) & UOTG_SBUSCFG_BARD_MASK)
#define UOTG_SBUSCFG_BAWR_MASK                   (0x1C0U)
#define UOTG_SBUSCFG_BAWR_SHIFT                  (6U)
#define UOTG_SBUSCFG_BAWR_WIDTH                  (3U)
#define UOTG_SBUSCFG_BAWR(x)                     (((uint32_t)(((uint32_t)(x)) << UOTG_SBUSCFG_BAWR_SHIFT)) & UOTG_SBUSCFG_BAWR_MASK)
/*! @} */

/*! @name CAPLENGTH - Capability Register Length */
/*! @{ */
#define UOTG_CAPLENGTH_CAPLENGTH_MASK            (0xFFU)
#define UOTG_CAPLENGTH_CAPLENGTH_SHIFT           (0U)
#define UOTG_CAPLENGTH_CAPLENGTH_WIDTH           (8U)
#define UOTG_CAPLENGTH_CAPLENGTH(x)              (((uint8_t)(((uint8_t)(x)) << UOTG_CAPLENGTH_CAPLENGTH_SHIFT)) & UOTG_CAPLENGTH_CAPLENGTH_MASK)
/*! @} */

/*! @name HCIVERSION - Host Controller Interface Version */
/*! @{ */
#define UOTG_HCIVERSION_HCIVERSION_MASK          (0xFFFFU)
#define UOTG_HCIVERSION_HCIVERSION_SHIFT         (0U)
#define UOTG_HCIVERSION_HCIVERSION_WIDTH         (16U)
#define UOTG_HCIVERSION_HCIVERSION(x)            (((uint16_t)(((uint16_t)(x)) << UOTG_HCIVERSION_HCIVERSION_SHIFT)) & UOTG_HCIVERSION_HCIVERSION_MASK)
/*! @} */

/*! @name HCSPARAMS - Host Controller Structural Parameters */
/*! @{ */
#define UOTG_HCSPARAMS_N_PORTS_MASK              (0xFU)
#define UOTG_HCSPARAMS_N_PORTS_SHIFT             (0U)
#define UOTG_HCSPARAMS_N_PORTS_WIDTH             (4U)
#define UOTG_HCSPARAMS_N_PORTS(x)                (((uint32_t)(((uint32_t)(x)) << UOTG_HCSPARAMS_N_PORTS_SHIFT)) & UOTG_HCSPARAMS_N_PORTS_MASK)
#define UOTG_HCSPARAMS_PPC_MASK                  (0x10U)
#define UOTG_HCSPARAMS_PPC_SHIFT                 (4U)
#define UOTG_HCSPARAMS_PPC_WIDTH                 (1U)
#define UOTG_HCSPARAMS_PPC(x)                    (((uint32_t)(((uint32_t)(x)) << UOTG_HCSPARAMS_PPC_SHIFT)) & UOTG_HCSPARAMS_PPC_MASK)
#define UOTG_HCSPARAMS_N_PCC_MASK                (0xF00U)
#define UOTG_HCSPARAMS_N_PCC_SHIFT               (8U)
#define UOTG_HCSPARAMS_N_PCC_WIDTH               (4U)
#define UOTG_HCSPARAMS_N_PCC(x)                  (((uint32_t)(((uint32_t)(x)) << UOTG_HCSPARAMS_N_PCC_SHIFT)) & UOTG_HCSPARAMS_N_PCC_MASK)
#define UOTG_HCSPARAMS_N_CC_MASK                 (0xF000U)
#define UOTG_HCSPARAMS_N_CC_SHIFT                (12U)
#define UOTG_HCSPARAMS_N_CC_WIDTH                (4U)
#define UOTG_HCSPARAMS_N_CC(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_HCSPARAMS_N_CC_SHIFT)) & UOTG_HCSPARAMS_N_CC_MASK)
#define UOTG_HCSPARAMS_PI_MASK                   (0x10000U)
#define UOTG_HCSPARAMS_PI_SHIFT                  (16U)
#define UOTG_HCSPARAMS_PI_WIDTH                  (1U)
#define UOTG_HCSPARAMS_PI(x)                     (((uint32_t)(((uint32_t)(x)) << UOTG_HCSPARAMS_PI_SHIFT)) & UOTG_HCSPARAMS_PI_MASK)
#define UOTG_HCSPARAMS_N_PTT_MASK                (0xF00000U)
#define UOTG_HCSPARAMS_N_PTT_SHIFT               (20U)
#define UOTG_HCSPARAMS_N_PTT_WIDTH               (4U)
#define UOTG_HCSPARAMS_N_PTT(x)                  (((uint32_t)(((uint32_t)(x)) << UOTG_HCSPARAMS_N_PTT_SHIFT)) & UOTG_HCSPARAMS_N_PTT_MASK)
#define UOTG_HCSPARAMS_N_TT_MASK                 (0xF000000U)
#define UOTG_HCSPARAMS_N_TT_SHIFT                (24U)
#define UOTG_HCSPARAMS_N_TT_WIDTH                (4U)
#define UOTG_HCSPARAMS_N_TT(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_HCSPARAMS_N_TT_SHIFT)) & UOTG_HCSPARAMS_N_TT_MASK)
/*! @} */

/*! @name HCCPARAMS - Host Controller Capability Parameters */
/*! @{ */
#define UOTG_HCCPARAMS_ADC_MASK                  (0x1U)
#define UOTG_HCCPARAMS_ADC_SHIFT                 (0U)
#define UOTG_HCCPARAMS_ADC_WIDTH                 (1U)
#define UOTG_HCCPARAMS_ADC(x)                    (((uint32_t)(((uint32_t)(x)) << UOTG_HCCPARAMS_ADC_SHIFT)) & UOTG_HCCPARAMS_ADC_MASK)
#define UOTG_HCCPARAMS_PFL_MASK                  (0x2U)
#define UOTG_HCCPARAMS_PFL_SHIFT                 (1U)
#define UOTG_HCCPARAMS_PFL_WIDTH                 (1U)
#define UOTG_HCCPARAMS_PFL(x)                    (((uint32_t)(((uint32_t)(x)) << UOTG_HCCPARAMS_PFL_SHIFT)) & UOTG_HCCPARAMS_PFL_MASK)
#define UOTG_HCCPARAMS_ASP_MASK                  (0x4U)
#define UOTG_HCCPARAMS_ASP_SHIFT                 (2U)
#define UOTG_HCCPARAMS_ASP_WIDTH                 (1U)
#define UOTG_HCCPARAMS_ASP(x)                    (((uint32_t)(((uint32_t)(x)) << UOTG_HCCPARAMS_ASP_SHIFT)) & UOTG_HCCPARAMS_ASP_MASK)
#define UOTG_HCCPARAMS_IST_MASK                  (0xF0U)
#define UOTG_HCCPARAMS_IST_SHIFT                 (4U)
#define UOTG_HCCPARAMS_IST_WIDTH                 (4U)
#define UOTG_HCCPARAMS_IST(x)                    (((uint32_t)(((uint32_t)(x)) << UOTG_HCCPARAMS_IST_SHIFT)) & UOTG_HCCPARAMS_IST_MASK)
#define UOTG_HCCPARAMS_EECP_MASK                 (0xFF00U)
#define UOTG_HCCPARAMS_EECP_SHIFT                (8U)
#define UOTG_HCCPARAMS_EECP_WIDTH                (8U)
#define UOTG_HCCPARAMS_EECP(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_HCCPARAMS_EECP_SHIFT)) & UOTG_HCCPARAMS_EECP_MASK)
/*! @} */

/*! @name DCIVERSION - Device Controller Interface Version */
/*! @{ */
#define UOTG_DCIVERSION_DCIFVER_MASK             (0xFFFFU)
#define UOTG_DCIVERSION_DCIFVER_SHIFT            (0U)
#define UOTG_DCIVERSION_DCIFVER_WIDTH            (16U)
#define UOTG_DCIVERSION_DCIFVER(x)               (((uint16_t)(((uint16_t)(x)) << UOTG_DCIVERSION_DCIFVER_SHIFT)) & UOTG_DCIVERSION_DCIFVER_MASK)
/*! @} */

/*! @name DCCPARAMS - Device Controller Capability Parameters */
/*! @{ */
#define UOTG_DCCPARAMS_DEN_MASK                  (0x3FU)
#define UOTG_DCCPARAMS_DEN_SHIFT                 (0U)
#define UOTG_DCCPARAMS_DEN_WIDTH                 (6U)
#define UOTG_DCCPARAMS_DEN(x)                    (((uint32_t)(((uint32_t)(x)) << UOTG_DCCPARAMS_DEN_SHIFT)) & UOTG_DCCPARAMS_DEN_MASK)
#define UOTG_DCCPARAMS_DC_MASK                   (0x80U)
#define UOTG_DCCPARAMS_DC_SHIFT                  (7U)
#define UOTG_DCCPARAMS_DC_WIDTH                  (1U)
#define UOTG_DCCPARAMS_DC(x)                     (((uint32_t)(((uint32_t)(x)) << UOTG_DCCPARAMS_DC_SHIFT)) & UOTG_DCCPARAMS_DC_MASK)
#define UOTG_DCCPARAMS_HC_MASK                   (0x100U)
#define UOTG_DCCPARAMS_HC_SHIFT                  (8U)
#define UOTG_DCCPARAMS_HC_WIDTH                  (1U)
#define UOTG_DCCPARAMS_HC(x)                     (((uint32_t)(((uint32_t)(x)) << UOTG_DCCPARAMS_HC_SHIFT)) & UOTG_DCCPARAMS_HC_MASK)
/*! @} */

/*! @name USBCMD - USB Command Register */
/*! @{ */
#define UOTG_USBCMD_RS_MASK                      (0x1U)
#define UOTG_USBCMD_RS_SHIFT                     (0U)
#define UOTG_USBCMD_RS_WIDTH                     (1U)
#define UOTG_USBCMD_RS(x)                        (((uint32_t)(((uint32_t)(x)) << UOTG_USBCMD_RS_SHIFT)) & UOTG_USBCMD_RS_MASK)
#define UOTG_USBCMD_RST_MASK                     (0x2U)
#define UOTG_USBCMD_RST_SHIFT                    (1U)
#define UOTG_USBCMD_RST_WIDTH                    (1U)
#define UOTG_USBCMD_RST(x)                       (((uint32_t)(((uint32_t)(x)) << UOTG_USBCMD_RST_SHIFT)) & UOTG_USBCMD_RST_MASK)
#define UOTG_USBCMD_FS0_MASK                     (0xCU)
#define UOTG_USBCMD_FS0_SHIFT                    (2U)
#define UOTG_USBCMD_FS0_WIDTH                    (2U)
#define UOTG_USBCMD_FS0(x)                       (((uint32_t)(((uint32_t)(x)) << UOTG_USBCMD_FS0_SHIFT)) & UOTG_USBCMD_FS0_MASK)
#define UOTG_USBCMD_PSE_MASK                     (0x10U)
#define UOTG_USBCMD_PSE_SHIFT                    (4U)
#define UOTG_USBCMD_PSE_WIDTH                    (1U)
#define UOTG_USBCMD_PSE(x)                       (((uint32_t)(((uint32_t)(x)) << UOTG_USBCMD_PSE_SHIFT)) & UOTG_USBCMD_PSE_MASK)
#define UOTG_USBCMD_ASE_MASK                     (0x20U)
#define UOTG_USBCMD_ASE_SHIFT                    (5U)
#define UOTG_USBCMD_ASE_WIDTH                    (1U)
#define UOTG_USBCMD_ASE(x)                       (((uint32_t)(((uint32_t)(x)) << UOTG_USBCMD_ASE_SHIFT)) & UOTG_USBCMD_ASE_MASK)
#define UOTG_USBCMD_IAA_MASK                     (0x40U)
#define UOTG_USBCMD_IAA_SHIFT                    (6U)
#define UOTG_USBCMD_IAA_WIDTH                    (1U)
#define UOTG_USBCMD_IAA(x)                       (((uint32_t)(((uint32_t)(x)) << UOTG_USBCMD_IAA_SHIFT)) & UOTG_USBCMD_IAA_MASK)
#define UOTG_USBCMD_ASP_MASK                     (0x300U)
#define UOTG_USBCMD_ASP_SHIFT                    (8U)
#define UOTG_USBCMD_ASP_WIDTH                    (2U)
#define UOTG_USBCMD_ASP(x)                       (((uint32_t)(((uint32_t)(x)) << UOTG_USBCMD_ASP_SHIFT)) & UOTG_USBCMD_ASP_MASK)
#define UOTG_USBCMD_ASPE_MASK                    (0x800U)
#define UOTG_USBCMD_ASPE_SHIFT                   (11U)
#define UOTG_USBCMD_ASPE_WIDTH                   (1U)
#define UOTG_USBCMD_ASPE(x)                      (((uint32_t)(((uint32_t)(x)) << UOTG_USBCMD_ASPE_SHIFT)) & UOTG_USBCMD_ASPE_MASK)
#define UOTG_USBCMD_SUTW_MASK                    (0x2000U)
#define UOTG_USBCMD_SUTW_SHIFT                   (13U)
#define UOTG_USBCMD_SUTW_WIDTH                   (1U)
#define UOTG_USBCMD_SUTW(x)                      (((uint32_t)(((uint32_t)(x)) << UOTG_USBCMD_SUTW_SHIFT)) & UOTG_USBCMD_SUTW_MASK)
#define UOTG_USBCMD_ATDTW_MASK                   (0x4000U)
#define UOTG_USBCMD_ATDTW_SHIFT                  (14U)
#define UOTG_USBCMD_ATDTW_WIDTH                  (1U)
#define UOTG_USBCMD_ATDTW(x)                     (((uint32_t)(((uint32_t)(x)) << UOTG_USBCMD_ATDTW_SHIFT)) & UOTG_USBCMD_ATDTW_MASK)
#define UOTG_USBCMD_FS1_MASK                     (0x8000U)
#define UOTG_USBCMD_FS1_SHIFT                    (15U)
#define UOTG_USBCMD_FS1_WIDTH                    (1U)
#define UOTG_USBCMD_FS1(x)                       (((uint32_t)(((uint32_t)(x)) << UOTG_USBCMD_FS1_SHIFT)) & UOTG_USBCMD_FS1_MASK)
#define UOTG_USBCMD_ITC_MASK                     (0xFF0000U)
#define UOTG_USBCMD_ITC_SHIFT                    (16U)
#define UOTG_USBCMD_ITC_WIDTH                    (8U)
#define UOTG_USBCMD_ITC(x)                       (((uint32_t)(((uint32_t)(x)) << UOTG_USBCMD_ITC_SHIFT)) & UOTG_USBCMD_ITC_MASK)
/*! @} */

/*! @name USBSTS - USB Status Register */
/*! @{ */
#define UOTG_USBSTS_UI_MASK                      (0x1U)
#define UOTG_USBSTS_UI_SHIFT                     (0U)
#define UOTG_USBSTS_UI_WIDTH                     (1U)
#define UOTG_USBSTS_UI(x)                        (((uint32_t)(((uint32_t)(x)) << UOTG_USBSTS_UI_SHIFT)) & UOTG_USBSTS_UI_MASK)
#define UOTG_USBSTS_UEI_MASK                     (0x2U)
#define UOTG_USBSTS_UEI_SHIFT                    (1U)
#define UOTG_USBSTS_UEI_WIDTH                    (1U)
#define UOTG_USBSTS_UEI(x)                       (((uint32_t)(((uint32_t)(x)) << UOTG_USBSTS_UEI_SHIFT)) & UOTG_USBSTS_UEI_MASK)
#define UOTG_USBSTS_PCI_MASK                     (0x4U)
#define UOTG_USBSTS_PCI_SHIFT                    (2U)
#define UOTG_USBSTS_PCI_WIDTH                    (1U)
#define UOTG_USBSTS_PCI(x)                       (((uint32_t)(((uint32_t)(x)) << UOTG_USBSTS_PCI_SHIFT)) & UOTG_USBSTS_PCI_MASK)
#define UOTG_USBSTS_FRI_MASK                     (0x8U)
#define UOTG_USBSTS_FRI_SHIFT                    (3U)
#define UOTG_USBSTS_FRI_WIDTH                    (1U)
#define UOTG_USBSTS_FRI(x)                       (((uint32_t)(((uint32_t)(x)) << UOTG_USBSTS_FRI_SHIFT)) & UOTG_USBSTS_FRI_MASK)
#define UOTG_USBSTS_SEI_MASK                     (0x10U)
#define UOTG_USBSTS_SEI_SHIFT                    (4U)
#define UOTG_USBSTS_SEI_WIDTH                    (1U)
#define UOTG_USBSTS_SEI(x)                       (((uint32_t)(((uint32_t)(x)) << UOTG_USBSTS_SEI_SHIFT)) & UOTG_USBSTS_SEI_MASK)
#define UOTG_USBSTS_AAI_MASK                     (0x20U)
#define UOTG_USBSTS_AAI_SHIFT                    (5U)
#define UOTG_USBSTS_AAI_WIDTH                    (1U)
#define UOTG_USBSTS_AAI(x)                       (((uint32_t)(((uint32_t)(x)) << UOTG_USBSTS_AAI_SHIFT)) & UOTG_USBSTS_AAI_MASK)
#define UOTG_USBSTS_URI_MASK                     (0x40U)
#define UOTG_USBSTS_URI_SHIFT                    (6U)
#define UOTG_USBSTS_URI_WIDTH                    (1U)
#define UOTG_USBSTS_URI(x)                       (((uint32_t)(((uint32_t)(x)) << UOTG_USBSTS_URI_SHIFT)) & UOTG_USBSTS_URI_MASK)
#define UOTG_USBSTS_SRI_MASK                     (0x80U)
#define UOTG_USBSTS_SRI_SHIFT                    (7U)
#define UOTG_USBSTS_SRI_WIDTH                    (1U)
#define UOTG_USBSTS_SRI(x)                       (((uint32_t)(((uint32_t)(x)) << UOTG_USBSTS_SRI_SHIFT)) & UOTG_USBSTS_SRI_MASK)
#define UOTG_USBSTS_SLI_MASK                     (0x100U)
#define UOTG_USBSTS_SLI_SHIFT                    (8U)
#define UOTG_USBSTS_SLI_WIDTH                    (1U)
#define UOTG_USBSTS_SLI(x)                       (((uint32_t)(((uint32_t)(x)) << UOTG_USBSTS_SLI_SHIFT)) & UOTG_USBSTS_SLI_MASK)
#define UOTG_USBSTS_ULPII_MASK                   (0x400U)
#define UOTG_USBSTS_ULPII_SHIFT                  (10U)
#define UOTG_USBSTS_ULPII_WIDTH                  (1U)
#define UOTG_USBSTS_ULPII(x)                     (((uint32_t)(((uint32_t)(x)) << UOTG_USBSTS_ULPII_SHIFT)) & UOTG_USBSTS_ULPII_MASK)
#define UOTG_USBSTS_UALTI_MASK                   (0x800U)
#define UOTG_USBSTS_UALTI_SHIFT                  (11U)
#define UOTG_USBSTS_UALTI_WIDTH                  (1U)
#define UOTG_USBSTS_UALTI(x)                     (((uint32_t)(((uint32_t)(x)) << UOTG_USBSTS_UALTI_SHIFT)) & UOTG_USBSTS_UALTI_MASK)
#define UOTG_USBSTS_HCH_MASK                     (0x1000U)
#define UOTG_USBSTS_HCH_SHIFT                    (12U)
#define UOTG_USBSTS_HCH_WIDTH                    (1U)
#define UOTG_USBSTS_HCH(x)                       (((uint32_t)(((uint32_t)(x)) << UOTG_USBSTS_HCH_SHIFT)) & UOTG_USBSTS_HCH_MASK)
#define UOTG_USBSTS_RCL_MASK                     (0x2000U)
#define UOTG_USBSTS_RCL_SHIFT                    (13U)
#define UOTG_USBSTS_RCL_WIDTH                    (1U)
#define UOTG_USBSTS_RCL(x)                       (((uint32_t)(((uint32_t)(x)) << UOTG_USBSTS_RCL_SHIFT)) & UOTG_USBSTS_RCL_MASK)
#define UOTG_USBSTS_PS_MASK                      (0x4000U)
#define UOTG_USBSTS_PS_SHIFT                     (14U)
#define UOTG_USBSTS_PS_WIDTH                     (1U)
#define UOTG_USBSTS_PS(x)                        (((uint32_t)(((uint32_t)(x)) << UOTG_USBSTS_PS_SHIFT)) & UOTG_USBSTS_PS_MASK)
#define UOTG_USBSTS_AS_MASK                      (0x8000U)
#define UOTG_USBSTS_AS_SHIFT                     (15U)
#define UOTG_USBSTS_AS_WIDTH                     (1U)
#define UOTG_USBSTS_AS(x)                        (((uint32_t)(((uint32_t)(x)) << UOTG_USBSTS_AS_SHIFT)) & UOTG_USBSTS_AS_MASK)
#define UOTG_USBSTS_NAKI_MASK                    (0x10000U)
#define UOTG_USBSTS_NAKI_SHIFT                   (16U)
#define UOTG_USBSTS_NAKI_WIDTH                   (1U)
#define UOTG_USBSTS_NAKI(x)                      (((uint32_t)(((uint32_t)(x)) << UOTG_USBSTS_NAKI_SHIFT)) & UOTG_USBSTS_NAKI_MASK)
#define UOTG_USBSTS_UAI_MASK                     (0x40000U)
#define UOTG_USBSTS_UAI_SHIFT                    (18U)
#define UOTG_USBSTS_UAI_WIDTH                    (1U)
#define UOTG_USBSTS_UAI(x)                       (((uint32_t)(((uint32_t)(x)) << UOTG_USBSTS_UAI_SHIFT)) & UOTG_USBSTS_UAI_MASK)
#define UOTG_USBSTS_UPI_MASK                     (0x80000U)
#define UOTG_USBSTS_UPI_SHIFT                    (19U)
#define UOTG_USBSTS_UPI_WIDTH                    (1U)
#define UOTG_USBSTS_UPI(x)                       (((uint32_t)(((uint32_t)(x)) << UOTG_USBSTS_UPI_SHIFT)) & UOTG_USBSTS_UPI_MASK)
#define UOTG_USBSTS_TI0_MASK                     (0x1000000U)
#define UOTG_USBSTS_TI0_SHIFT                    (24U)
#define UOTG_USBSTS_TI0_WIDTH                    (1U)
#define UOTG_USBSTS_TI0(x)                       (((uint32_t)(((uint32_t)(x)) << UOTG_USBSTS_TI0_SHIFT)) & UOTG_USBSTS_TI0_MASK)
#define UOTG_USBSTS_TI1_MASK                     (0x2000000U)
#define UOTG_USBSTS_TI1_SHIFT                    (25U)
#define UOTG_USBSTS_TI1_WIDTH                    (1U)
#define UOTG_USBSTS_TI1(x)                       (((uint32_t)(((uint32_t)(x)) << UOTG_USBSTS_TI1_SHIFT)) & UOTG_USBSTS_TI1_MASK)
/*! @} */

/*! @name USBINTR - Interrupt Enable Register */
/*! @{ */
#define UOTG_USBINTR_UE_MASK                     (0x1U)
#define UOTG_USBINTR_UE_SHIFT                    (0U)
#define UOTG_USBINTR_UE_WIDTH                    (1U)
#define UOTG_USBINTR_UE(x)                       (((uint32_t)(((uint32_t)(x)) << UOTG_USBINTR_UE_SHIFT)) & UOTG_USBINTR_UE_MASK)
#define UOTG_USBINTR_UEE_MASK                    (0x2U)
#define UOTG_USBINTR_UEE_SHIFT                   (1U)
#define UOTG_USBINTR_UEE_WIDTH                   (1U)
#define UOTG_USBINTR_UEE(x)                      (((uint32_t)(((uint32_t)(x)) << UOTG_USBINTR_UEE_SHIFT)) & UOTG_USBINTR_UEE_MASK)
#define UOTG_USBINTR_PCE_MASK                    (0x4U)
#define UOTG_USBINTR_PCE_SHIFT                   (2U)
#define UOTG_USBINTR_PCE_WIDTH                   (1U)
#define UOTG_USBINTR_PCE(x)                      (((uint32_t)(((uint32_t)(x)) << UOTG_USBINTR_PCE_SHIFT)) & UOTG_USBINTR_PCE_MASK)
#define UOTG_USBINTR_FRE_MASK                    (0x8U)
#define UOTG_USBINTR_FRE_SHIFT                   (3U)
#define UOTG_USBINTR_FRE_WIDTH                   (1U)
#define UOTG_USBINTR_FRE(x)                      (((uint32_t)(((uint32_t)(x)) << UOTG_USBINTR_FRE_SHIFT)) & UOTG_USBINTR_FRE_MASK)
#define UOTG_USBINTR_SEE_MASK                    (0x10U)
#define UOTG_USBINTR_SEE_SHIFT                   (4U)
#define UOTG_USBINTR_SEE_WIDTH                   (1U)
#define UOTG_USBINTR_SEE(x)                      (((uint32_t)(((uint32_t)(x)) << UOTG_USBINTR_SEE_SHIFT)) & UOTG_USBINTR_SEE_MASK)
#define UOTG_USBINTR_AAE_MASK                    (0x20U)
#define UOTG_USBINTR_AAE_SHIFT                   (5U)
#define UOTG_USBINTR_AAE_WIDTH                   (1U)
#define UOTG_USBINTR_AAE(x)                      (((uint32_t)(((uint32_t)(x)) << UOTG_USBINTR_AAE_SHIFT)) & UOTG_USBINTR_AAE_MASK)
#define UOTG_USBINTR_URE_MASK                    (0x40U)
#define UOTG_USBINTR_URE_SHIFT                   (6U)
#define UOTG_USBINTR_URE_WIDTH                   (1U)
#define UOTG_USBINTR_URE(x)                      (((uint32_t)(((uint32_t)(x)) << UOTG_USBINTR_URE_SHIFT)) & UOTG_USBINTR_URE_MASK)
#define UOTG_USBINTR_SRE_MASK                    (0x80U)
#define UOTG_USBINTR_SRE_SHIFT                   (7U)
#define UOTG_USBINTR_SRE_WIDTH                   (1U)
#define UOTG_USBINTR_SRE(x)                      (((uint32_t)(((uint32_t)(x)) << UOTG_USBINTR_SRE_SHIFT)) & UOTG_USBINTR_SRE_MASK)
#define UOTG_USBINTR_SLE_MASK                    (0x100U)
#define UOTG_USBINTR_SLE_SHIFT                   (8U)
#define UOTG_USBINTR_SLE_WIDTH                   (1U)
#define UOTG_USBINTR_SLE(x)                      (((uint32_t)(((uint32_t)(x)) << UOTG_USBINTR_SLE_SHIFT)) & UOTG_USBINTR_SLE_MASK)
#define UOTG_USBINTR_ULPIE_MASK                  (0x400U)
#define UOTG_USBINTR_ULPIE_SHIFT                 (10U)
#define UOTG_USBINTR_ULPIE_WIDTH                 (1U)
#define UOTG_USBINTR_ULPIE(x)                    (((uint32_t)(((uint32_t)(x)) << UOTG_USBINTR_ULPIE_SHIFT)) & UOTG_USBINTR_ULPIE_MASK)
#define UOTG_USBINTR_NAKE_MASK                   (0x10000U)
#define UOTG_USBINTR_NAKE_SHIFT                  (16U)
#define UOTG_USBINTR_NAKE_WIDTH                  (1U)
#define UOTG_USBINTR_NAKE(x)                     (((uint32_t)(((uint32_t)(x)) << UOTG_USBINTR_NAKE_SHIFT)) & UOTG_USBINTR_NAKE_MASK)
#define UOTG_USBINTR_UAIE_MASK                   (0x40000U)
#define UOTG_USBINTR_UAIE_SHIFT                  (18U)
#define UOTG_USBINTR_UAIE_WIDTH                  (1U)
#define UOTG_USBINTR_UAIE(x)                     (((uint32_t)(((uint32_t)(x)) << UOTG_USBINTR_UAIE_SHIFT)) & UOTG_USBINTR_UAIE_MASK)
#define UOTG_USBINTR_UPIE_MASK                   (0x80000U)
#define UOTG_USBINTR_UPIE_SHIFT                  (19U)
#define UOTG_USBINTR_UPIE_WIDTH                  (1U)
#define UOTG_USBINTR_UPIE(x)                     (((uint32_t)(((uint32_t)(x)) << UOTG_USBINTR_UPIE_SHIFT)) & UOTG_USBINTR_UPIE_MASK)
#define UOTG_USBINTR_TIE0_MASK                   (0x1000000U)
#define UOTG_USBINTR_TIE0_SHIFT                  (24U)
#define UOTG_USBINTR_TIE0_WIDTH                  (1U)
#define UOTG_USBINTR_TIE0(x)                     (((uint32_t)(((uint32_t)(x)) << UOTG_USBINTR_TIE0_SHIFT)) & UOTG_USBINTR_TIE0_MASK)
#define UOTG_USBINTR_TIE1_MASK                   (0x2000000U)
#define UOTG_USBINTR_TIE1_SHIFT                  (25U)
#define UOTG_USBINTR_TIE1_WIDTH                  (1U)
#define UOTG_USBINTR_TIE1(x)                     (((uint32_t)(((uint32_t)(x)) << UOTG_USBINTR_TIE1_SHIFT)) & UOTG_USBINTR_TIE1_MASK)
/*! @} */

/*! @name FRINDEX - USB Frame Index */
/*! @{ */
#define UOTG_FRINDEX_FRINDEX_MASK                (0x3FFFU)
#define UOTG_FRINDEX_FRINDEX_SHIFT               (0U)
#define UOTG_FRINDEX_FRINDEX_WIDTH               (14U)
#define UOTG_FRINDEX_FRINDEX(x)                  (((uint32_t)(((uint32_t)(x)) << UOTG_FRINDEX_FRINDEX_SHIFT)) & UOTG_FRINDEX_FRINDEX_MASK)
/*! @} */

/*! @name PERIODICLISTBASE_OR_DEVICEADDR - Frame List Base Address or Device Address */
/*! @{ */
#define UOTG_PERIODICLISTBASE_OR_DEVICEADDR_PERBASE_MASK (0xFFF000U)
#define UOTG_PERIODICLISTBASE_OR_DEVICEADDR_PERBASE_SHIFT (12U)
#define UOTG_PERIODICLISTBASE_OR_DEVICEADDR_PERBASE_WIDTH (12U)
#define UOTG_PERIODICLISTBASE_OR_DEVICEADDR_PERBASE(x) (((uint32_t)(((uint32_t)(x)) << UOTG_PERIODICLISTBASE_OR_DEVICEADDR_PERBASE_SHIFT)) & UOTG_PERIODICLISTBASE_OR_DEVICEADDR_PERBASE_MASK)
#define UOTG_PERIODICLISTBASE_OR_DEVICEADDR_USBADDRA_MASK (0x1000000U)
#define UOTG_PERIODICLISTBASE_OR_DEVICEADDR_USBADDRA_SHIFT (24U)
#define UOTG_PERIODICLISTBASE_OR_DEVICEADDR_USBADDRA_WIDTH (1U)
#define UOTG_PERIODICLISTBASE_OR_DEVICEADDR_USBADDRA(x) (((uint32_t)(((uint32_t)(x)) << UOTG_PERIODICLISTBASE_OR_DEVICEADDR_USBADDRA_SHIFT)) & UOTG_PERIODICLISTBASE_OR_DEVICEADDR_USBADDRA_MASK)
#define UOTG_PERIODICLISTBASE_OR_DEVICEADDR_USBADR_or_PERBASE_MASK (0xFE000000U)
#define UOTG_PERIODICLISTBASE_OR_DEVICEADDR_USBADR_or_PERBASE_SHIFT (25U)
#define UOTG_PERIODICLISTBASE_OR_DEVICEADDR_USBADR_or_PERBASE_WIDTH (7U)
#define UOTG_PERIODICLISTBASE_OR_DEVICEADDR_USBADR_or_PERBASE(x) (((uint32_t)(((uint32_t)(x)) << UOTG_PERIODICLISTBASE_OR_DEVICEADDR_USBADR_or_PERBASE_SHIFT)) & UOTG_PERIODICLISTBASE_OR_DEVICEADDR_USBADR_or_PERBASE_MASK)
/*! @} */

/*! @name ASYNCLISTADDR_OR_ENDPOINTLISTADDR - Next Asynch. Address or Endpoint List Address) */
/*! @{ */
#define UOTG_ASYNCLISTADDR_OR_ENDPOINTLISTADDR_ASYBASE_or_RESERVED_MASK (0x7E0U)
#define UOTG_ASYNCLISTADDR_OR_ENDPOINTLISTADDR_ASYBASE_or_RESERVED_SHIFT (5U)
#define UOTG_ASYNCLISTADDR_OR_ENDPOINTLISTADDR_ASYBASE_or_RESERVED_WIDTH (6U)
#define UOTG_ASYNCLISTADDR_OR_ENDPOINTLISTADDR_ASYBASE_or_RESERVED(x) (((uint32_t)(((uint32_t)(x)) << UOTG_ASYNCLISTADDR_OR_ENDPOINTLISTADDR_ASYBASE_or_RESERVED_SHIFT)) & UOTG_ASYNCLISTADDR_OR_ENDPOINTLISTADDR_ASYBASE_or_RESERVED_MASK)
#define UOTG_ASYNCLISTADDR_OR_ENDPOINTLISTADDR_EPBASE_or_ASYBASE_MASK (0xFFFFF800U)
#define UOTG_ASYNCLISTADDR_OR_ENDPOINTLISTADDR_EPBASE_or_ASYBASE_SHIFT (11U)
#define UOTG_ASYNCLISTADDR_OR_ENDPOINTLISTADDR_EPBASE_or_ASYBASE_WIDTH (21U)
#define UOTG_ASYNCLISTADDR_OR_ENDPOINTLISTADDR_EPBASE_or_ASYBASE(x) (((uint32_t)(((uint32_t)(x)) << UOTG_ASYNCLISTADDR_OR_ENDPOINTLISTADDR_EPBASE_or_ASYBASE_SHIFT)) & UOTG_ASYNCLISTADDR_OR_ENDPOINTLISTADDR_EPBASE_or_ASYBASE_MASK)
/*! @} */

/*! @name BURSTSIZE - Programmable Burst Size */
/*! @{ */
#define UOTG_BURSTSIZE_RXPBURST_MASK             (0xFFU)
#define UOTG_BURSTSIZE_RXPBURST_SHIFT            (0U)
#define UOTG_BURSTSIZE_RXPBURST_WIDTH            (8U)
#define UOTG_BURSTSIZE_RXPBURST(x)               (((uint32_t)(((uint32_t)(x)) << UOTG_BURSTSIZE_RXPBURST_SHIFT)) & UOTG_BURSTSIZE_RXPBURST_MASK)
#define UOTG_BURSTSIZE_TXPBURST_MASK             (0xFF00U)
#define UOTG_BURSTSIZE_TXPBURST_SHIFT            (8U)
#define UOTG_BURSTSIZE_TXPBURST_WIDTH            (8U)
#define UOTG_BURSTSIZE_TXPBURST(x)               (((uint32_t)(((uint32_t)(x)) << UOTG_BURSTSIZE_TXPBURST_SHIFT)) & UOTG_BURSTSIZE_TXPBURST_MASK)
/*! @} */

/*! @name TXFILLTUNING - TX FIFO Fill Tuning */
/*! @{ */
#define UOTG_TXFILLTUNING_TXSCHOH_MASK           (0x7FU)
#define UOTG_TXFILLTUNING_TXSCHOH_SHIFT          (0U)
#define UOTG_TXFILLTUNING_TXSCHOH_WIDTH          (7U)
#define UOTG_TXFILLTUNING_TXSCHOH(x)             (((uint32_t)(((uint32_t)(x)) << UOTG_TXFILLTUNING_TXSCHOH_SHIFT)) & UOTG_TXFILLTUNING_TXSCHOH_MASK)
#define UOTG_TXFILLTUNING_TXSCHHEALTH_MASK       (0x1F00U)
#define UOTG_TXFILLTUNING_TXSCHHEALTH_SHIFT      (8U)
#define UOTG_TXFILLTUNING_TXSCHHEALTH_WIDTH      (5U)
#define UOTG_TXFILLTUNING_TXSCHHEALTH(x)         (((uint32_t)(((uint32_t)(x)) << UOTG_TXFILLTUNING_TXSCHHEALTH_SHIFT)) & UOTG_TXFILLTUNING_TXSCHHEALTH_MASK)
#define UOTG_TXFILLTUNING_TXFIFOTHRES_MASK       (0x3F0000U)
#define UOTG_TXFILLTUNING_TXFIFOTHRES_SHIFT      (16U)
#define UOTG_TXFILLTUNING_TXFIFOTHRES_WIDTH      (6U)
#define UOTG_TXFILLTUNING_TXFIFOTHRES(x)         (((uint32_t)(((uint32_t)(x)) << UOTG_TXFILLTUNING_TXFIFOTHRES_SHIFT)) & UOTG_TXFILLTUNING_TXFIFOTHRES_MASK)
/*! @} */

/*! @name IC_USB - IC_USB enable and voltage negotiation */
/*! @{ */
#define UOTG_IC_USB_IC_VDD1_MASK                 (0x7U)
#define UOTG_IC_USB_IC_VDD1_SHIFT                (0U)
#define UOTG_IC_USB_IC_VDD1_WIDTH                (3U)
#define UOTG_IC_USB_IC_VDD1(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_IC_USB_IC_VDD1_SHIFT)) & UOTG_IC_USB_IC_VDD1_MASK)
#define UOTG_IC_USB_IC1_MASK                     (0x8U)
#define UOTG_IC_USB_IC1_SHIFT                    (3U)
#define UOTG_IC_USB_IC1_WIDTH                    (1U)
#define UOTG_IC_USB_IC1(x)                       (((uint32_t)(((uint32_t)(x)) << UOTG_IC_USB_IC1_SHIFT)) & UOTG_IC_USB_IC1_MASK)
/*! @} */

/*! @name ULPI_VIEWPORT - ULPI Register Access */
/*! @{ */
#define UOTG_ULPI_VIEWPORT_ULPI_DATWR_MASK       (0xFFU)
#define UOTG_ULPI_VIEWPORT_ULPI_DATWR_SHIFT      (0U)
#define UOTG_ULPI_VIEWPORT_ULPI_DATWR_WIDTH      (8U)
#define UOTG_ULPI_VIEWPORT_ULPI_DATWR(x)         (((uint32_t)(((uint32_t)(x)) << UOTG_ULPI_VIEWPORT_ULPI_DATWR_SHIFT)) & UOTG_ULPI_VIEWPORT_ULPI_DATWR_MASK)
#define UOTG_ULPI_VIEWPORT_ULPI_DATRD_MASK       (0xFF00U)
#define UOTG_ULPI_VIEWPORT_ULPI_DATRD_SHIFT      (8U)
#define UOTG_ULPI_VIEWPORT_ULPI_DATRD_WIDTH      (8U)
#define UOTG_ULPI_VIEWPORT_ULPI_DATRD(x)         (((uint32_t)(((uint32_t)(x)) << UOTG_ULPI_VIEWPORT_ULPI_DATRD_SHIFT)) & UOTG_ULPI_VIEWPORT_ULPI_DATRD_MASK)
#define UOTG_ULPI_VIEWPORT_ULPI_ADDR_MASK        (0xFF0000U)
#define UOTG_ULPI_VIEWPORT_ULPI_ADDR_SHIFT       (16U)
#define UOTG_ULPI_VIEWPORT_ULPI_ADDR_WIDTH       (8U)
#define UOTG_ULPI_VIEWPORT_ULPI_ADDR(x)          (((uint32_t)(((uint32_t)(x)) << UOTG_ULPI_VIEWPORT_ULPI_ADDR_SHIFT)) & UOTG_ULPI_VIEWPORT_ULPI_ADDR_MASK)
#define UOTG_ULPI_VIEWPORT_ULPI_PORT_MASK        (0x7000000U)
#define UOTG_ULPI_VIEWPORT_ULPI_PORT_SHIFT       (24U)
#define UOTG_ULPI_VIEWPORT_ULPI_PORT_WIDTH       (3U)
#define UOTG_ULPI_VIEWPORT_ULPI_PORT(x)          (((uint32_t)(((uint32_t)(x)) << UOTG_ULPI_VIEWPORT_ULPI_PORT_SHIFT)) & UOTG_ULPI_VIEWPORT_ULPI_PORT_MASK)
#define UOTG_ULPI_VIEWPORT_ULPI_SS_MASK          (0x8000000U)
#define UOTG_ULPI_VIEWPORT_ULPI_SS_SHIFT         (27U)
#define UOTG_ULPI_VIEWPORT_ULPI_SS_WIDTH         (1U)
#define UOTG_ULPI_VIEWPORT_ULPI_SS(x)            (((uint32_t)(((uint32_t)(x)) << UOTG_ULPI_VIEWPORT_ULPI_SS_SHIFT)) & UOTG_ULPI_VIEWPORT_ULPI_SS_MASK)
#define UOTG_ULPI_VIEWPORT_ULPI_RW_MASK          (0x20000000U)
#define UOTG_ULPI_VIEWPORT_ULPI_RW_SHIFT         (29U)
#define UOTG_ULPI_VIEWPORT_ULPI_RW_WIDTH         (1U)
#define UOTG_ULPI_VIEWPORT_ULPI_RW(x)            (((uint32_t)(((uint32_t)(x)) << UOTG_ULPI_VIEWPORT_ULPI_RW_SHIFT)) & UOTG_ULPI_VIEWPORT_ULPI_RW_MASK)
#define UOTG_ULPI_VIEWPORT_ULPI_RUN_MASK         (0x40000000U)
#define UOTG_ULPI_VIEWPORT_ULPI_RUN_SHIFT        (30U)
#define UOTG_ULPI_VIEWPORT_ULPI_RUN_WIDTH        (1U)
#define UOTG_ULPI_VIEWPORT_ULPI_RUN(x)           (((uint32_t)(((uint32_t)(x)) << UOTG_ULPI_VIEWPORT_ULPI_RUN_SHIFT)) & UOTG_ULPI_VIEWPORT_ULPI_RUN_MASK)
#define UOTG_ULPI_VIEWPORT_ULPI_WU_MASK          (0x80000000U)
#define UOTG_ULPI_VIEWPORT_ULPI_WU_SHIFT         (31U)
#define UOTG_ULPI_VIEWPORT_ULPI_WU_WIDTH         (1U)
#define UOTG_ULPI_VIEWPORT_ULPI_WU(x)            (((uint32_t)(((uint32_t)(x)) << UOTG_ULPI_VIEWPORT_ULPI_WU_SHIFT)) & UOTG_ULPI_VIEWPORT_ULPI_WU_MASK)
/*! @} */

/*! @name ENDPTNAK - Endpoint NAK */
/*! @{ */
#define UOTG_ENDPTNAK_EPRN_MASK                  (0x3FU)
#define UOTG_ENDPTNAK_EPRN_SHIFT                 (0U)
#define UOTG_ENDPTNAK_EPRN_WIDTH                 (6U)
#define UOTG_ENDPTNAK_EPRN(x)                    (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTNAK_EPRN_SHIFT)) & UOTG_ENDPTNAK_EPRN_MASK)
#define UOTG_ENDPTNAK_EPTN_MASK                  (0x3F0000U)
#define UOTG_ENDPTNAK_EPTN_SHIFT                 (16U)
#define UOTG_ENDPTNAK_EPTN_WIDTH                 (6U)
#define UOTG_ENDPTNAK_EPTN(x)                    (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTNAK_EPTN_SHIFT)) & UOTG_ENDPTNAK_EPTN_MASK)
/*! @} */

/*! @name ENDPTNAKEN - Endpoint NAK Enable */
/*! @{ */
#define UOTG_ENDPTNAKEN_EPRNE_MASK               (0x3FU)
#define UOTG_ENDPTNAKEN_EPRNE_SHIFT              (0U)
#define UOTG_ENDPTNAKEN_EPRNE_WIDTH              (6U)
#define UOTG_ENDPTNAKEN_EPRNE(x)                 (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTNAKEN_EPRNE_SHIFT)) & UOTG_ENDPTNAKEN_EPRNE_MASK)
#define UOTG_ENDPTNAKEN_EPTNE_MASK               (0x3F0000U)
#define UOTG_ENDPTNAKEN_EPTNE_SHIFT              (16U)
#define UOTG_ENDPTNAKEN_EPTNE_WIDTH              (6U)
#define UOTG_ENDPTNAKEN_EPTNE(x)                 (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTNAKEN_EPTNE_SHIFT)) & UOTG_ENDPTNAKEN_EPTNE_MASK)
/*! @} */

/*! @name PORTSC1 - Port Status and Control */
/*! @{ */
#define UOTG_PORTSC1_CCS_MASK                    (0x1U)
#define UOTG_PORTSC1_CCS_SHIFT                   (0U)
#define UOTG_PORTSC1_CCS_WIDTH                   (1U)
#define UOTG_PORTSC1_CCS(x)                      (((uint32_t)(((uint32_t)(x)) << UOTG_PORTSC1_CCS_SHIFT)) & UOTG_PORTSC1_CCS_MASK)
#define UOTG_PORTSC1_CSC_MASK                    (0x2U)
#define UOTG_PORTSC1_CSC_SHIFT                   (1U)
#define UOTG_PORTSC1_CSC_WIDTH                   (1U)
#define UOTG_PORTSC1_CSC(x)                      (((uint32_t)(((uint32_t)(x)) << UOTG_PORTSC1_CSC_SHIFT)) & UOTG_PORTSC1_CSC_MASK)
#define UOTG_PORTSC1_PE_MASK                     (0x4U)
#define UOTG_PORTSC1_PE_SHIFT                    (2U)
#define UOTG_PORTSC1_PE_WIDTH                    (1U)
#define UOTG_PORTSC1_PE(x)                       (((uint32_t)(((uint32_t)(x)) << UOTG_PORTSC1_PE_SHIFT)) & UOTG_PORTSC1_PE_MASK)
#define UOTG_PORTSC1_PEC_MASK                    (0x8U)
#define UOTG_PORTSC1_PEC_SHIFT                   (3U)
#define UOTG_PORTSC1_PEC_WIDTH                   (1U)
#define UOTG_PORTSC1_PEC(x)                      (((uint32_t)(((uint32_t)(x)) << UOTG_PORTSC1_PEC_SHIFT)) & UOTG_PORTSC1_PEC_MASK)
#define UOTG_PORTSC1_OCA_MASK                    (0x10U)
#define UOTG_PORTSC1_OCA_SHIFT                   (4U)
#define UOTG_PORTSC1_OCA_WIDTH                   (1U)
#define UOTG_PORTSC1_OCA(x)                      (((uint32_t)(((uint32_t)(x)) << UOTG_PORTSC1_OCA_SHIFT)) & UOTG_PORTSC1_OCA_MASK)
#define UOTG_PORTSC1_OCC_MASK                    (0x20U)
#define UOTG_PORTSC1_OCC_SHIFT                   (5U)
#define UOTG_PORTSC1_OCC_WIDTH                   (1U)
#define UOTG_PORTSC1_OCC(x)                      (((uint32_t)(((uint32_t)(x)) << UOTG_PORTSC1_OCC_SHIFT)) & UOTG_PORTSC1_OCC_MASK)
#define UOTG_PORTSC1_FPR_MASK                    (0x40U)
#define UOTG_PORTSC1_FPR_SHIFT                   (6U)
#define UOTG_PORTSC1_FPR_WIDTH                   (1U)
#define UOTG_PORTSC1_FPR(x)                      (((uint32_t)(((uint32_t)(x)) << UOTG_PORTSC1_FPR_SHIFT)) & UOTG_PORTSC1_FPR_MASK)
#define UOTG_PORTSC1_SUSP_MASK                   (0x80U)
#define UOTG_PORTSC1_SUSP_SHIFT                  (7U)
#define UOTG_PORTSC1_SUSP_WIDTH                  (1U)
#define UOTG_PORTSC1_SUSP(x)                     (((uint32_t)(((uint32_t)(x)) << UOTG_PORTSC1_SUSP_SHIFT)) & UOTG_PORTSC1_SUSP_MASK)
#define UOTG_PORTSC1_PR_MASK                     (0x100U)
#define UOTG_PORTSC1_PR_SHIFT                    (8U)
#define UOTG_PORTSC1_PR_WIDTH                    (1U)
#define UOTG_PORTSC1_PR(x)                       (((uint32_t)(((uint32_t)(x)) << UOTG_PORTSC1_PR_SHIFT)) & UOTG_PORTSC1_PR_MASK)
#define UOTG_PORTSC1_HSP_MASK                    (0x200U)
#define UOTG_PORTSC1_HSP_SHIFT                   (9U)
#define UOTG_PORTSC1_HSP_WIDTH                   (1U)
#define UOTG_PORTSC1_HSP(x)                      (((uint32_t)(((uint32_t)(x)) << UOTG_PORTSC1_HSP_SHIFT)) & UOTG_PORTSC1_HSP_MASK)
#define UOTG_PORTSC1_LS_MASK                     (0xC00U)
#define UOTG_PORTSC1_LS_SHIFT                    (10U)
#define UOTG_PORTSC1_LS_WIDTH                    (2U)
#define UOTG_PORTSC1_LS(x)                       (((uint32_t)(((uint32_t)(x)) << UOTG_PORTSC1_LS_SHIFT)) & UOTG_PORTSC1_LS_MASK)
#define UOTG_PORTSC1_PP_MASK                     (0x1000U)
#define UOTG_PORTSC1_PP_SHIFT                    (12U)
#define UOTG_PORTSC1_PP_WIDTH                    (1U)
#define UOTG_PORTSC1_PP(x)                       (((uint32_t)(((uint32_t)(x)) << UOTG_PORTSC1_PP_SHIFT)) & UOTG_PORTSC1_PP_MASK)
#define UOTG_PORTSC1_PO_MASK                     (0x2000U)
#define UOTG_PORTSC1_PO_SHIFT                    (13U)
#define UOTG_PORTSC1_PO_WIDTH                    (1U)
#define UOTG_PORTSC1_PO(x)                       (((uint32_t)(((uint32_t)(x)) << UOTG_PORTSC1_PO_SHIFT)) & UOTG_PORTSC1_PO_MASK)
#define UOTG_PORTSC1_PIC_MASK                    (0xC000U)
#define UOTG_PORTSC1_PIC_SHIFT                   (14U)
#define UOTG_PORTSC1_PIC_WIDTH                   (2U)
#define UOTG_PORTSC1_PIC(x)                      (((uint32_t)(((uint32_t)(x)) << UOTG_PORTSC1_PIC_SHIFT)) & UOTG_PORTSC1_PIC_MASK)
#define UOTG_PORTSC1_PTC_MASK                    (0xF0000U)
#define UOTG_PORTSC1_PTC_SHIFT                   (16U)
#define UOTG_PORTSC1_PTC_WIDTH                   (4U)
#define UOTG_PORTSC1_PTC(x)                      (((uint32_t)(((uint32_t)(x)) << UOTG_PORTSC1_PTC_SHIFT)) & UOTG_PORTSC1_PTC_MASK)
#define UOTG_PORTSC1_WKCN_MASK                   (0x100000U)
#define UOTG_PORTSC1_WKCN_SHIFT                  (20U)
#define UOTG_PORTSC1_WKCN_WIDTH                  (1U)
#define UOTG_PORTSC1_WKCN(x)                     (((uint32_t)(((uint32_t)(x)) << UOTG_PORTSC1_WKCN_SHIFT)) & UOTG_PORTSC1_WKCN_MASK)
#define UOTG_PORTSC1_WKDS_MASK                   (0x200000U)
#define UOTG_PORTSC1_WKDS_SHIFT                  (21U)
#define UOTG_PORTSC1_WKDS_WIDTH                  (1U)
#define UOTG_PORTSC1_WKDS(x)                     (((uint32_t)(((uint32_t)(x)) << UOTG_PORTSC1_WKDS_SHIFT)) & UOTG_PORTSC1_WKDS_MASK)
#define UOTG_PORTSC1_WKOC_MASK                   (0x400000U)
#define UOTG_PORTSC1_WKOC_SHIFT                  (22U)
#define UOTG_PORTSC1_WKOC_WIDTH                  (1U)
#define UOTG_PORTSC1_WKOC(x)                     (((uint32_t)(((uint32_t)(x)) << UOTG_PORTSC1_WKOC_SHIFT)) & UOTG_PORTSC1_WKOC_MASK)
#define UOTG_PORTSC1_PHCD_MASK                   (0x800000U)
#define UOTG_PORTSC1_PHCD_SHIFT                  (23U)
#define UOTG_PORTSC1_PHCD_WIDTH                  (1U)
#define UOTG_PORTSC1_PHCD(x)                     (((uint32_t)(((uint32_t)(x)) << UOTG_PORTSC1_PHCD_SHIFT)) & UOTG_PORTSC1_PHCD_MASK)
#define UOTG_PORTSC1_PFSC_MASK                   (0x1000000U)
#define UOTG_PORTSC1_PFSC_SHIFT                  (24U)
#define UOTG_PORTSC1_PFSC_WIDTH                  (1U)
#define UOTG_PORTSC1_PFSC(x)                     (((uint32_t)(((uint32_t)(x)) << UOTG_PORTSC1_PFSC_SHIFT)) & UOTG_PORTSC1_PFSC_MASK)
#define UOTG_PORTSC1_PTS0_MASK                   (0x2000000U)
#define UOTG_PORTSC1_PTS0_SHIFT                  (25U)
#define UOTG_PORTSC1_PTS0_WIDTH                  (1U)
#define UOTG_PORTSC1_PTS0(x)                     (((uint32_t)(((uint32_t)(x)) << UOTG_PORTSC1_PTS0_SHIFT)) & UOTG_PORTSC1_PTS0_MASK)
#define UOTG_PORTSC1_PSPD_MASK                   (0xC000000U)
#define UOTG_PORTSC1_PSPD_SHIFT                  (26U)
#define UOTG_PORTSC1_PSPD_WIDTH                  (2U)
#define UOTG_PORTSC1_PSPD(x)                     (((uint32_t)(((uint32_t)(x)) << UOTG_PORTSC1_PSPD_SHIFT)) & UOTG_PORTSC1_PSPD_MASK)
#define UOTG_PORTSC1_PTW_MASK                    (0x10000000U)
#define UOTG_PORTSC1_PTW_SHIFT                   (28U)
#define UOTG_PORTSC1_PTW_WIDTH                   (1U)
#define UOTG_PORTSC1_PTW(x)                      (((uint32_t)(((uint32_t)(x)) << UOTG_PORTSC1_PTW_SHIFT)) & UOTG_PORTSC1_PTW_MASK)
#define UOTG_PORTSC1_STS_MASK                    (0x20000000U)
#define UOTG_PORTSC1_STS_SHIFT                   (29U)
#define UOTG_PORTSC1_STS_WIDTH                   (1U)
#define UOTG_PORTSC1_STS(x)                      (((uint32_t)(((uint32_t)(x)) << UOTG_PORTSC1_STS_SHIFT)) & UOTG_PORTSC1_STS_MASK)
#define UOTG_PORTSC1_PTS1_MASK                   (0xC0000000U)
#define UOTG_PORTSC1_PTS1_SHIFT                  (30U)
#define UOTG_PORTSC1_PTS1_WIDTH                  (2U)
#define UOTG_PORTSC1_PTS1(x)                     (((uint32_t)(((uint32_t)(x)) << UOTG_PORTSC1_PTS1_SHIFT)) & UOTG_PORTSC1_PTS1_MASK)
/*! @} */

/*! @name OTGSC - On-The-Go Status Control */
/*! @{ */
#define UOTG_OTGSC_VD_MASK                       (0x1U)
#define UOTG_OTGSC_VD_SHIFT                      (0U)
#define UOTG_OTGSC_VD_WIDTH                      (1U)
#define UOTG_OTGSC_VD(x)                         (((uint32_t)(((uint32_t)(x)) << UOTG_OTGSC_VD_SHIFT)) & UOTG_OTGSC_VD_MASK)
#define UOTG_OTGSC_VC_MASK                       (0x2U)
#define UOTG_OTGSC_VC_SHIFT                      (1U)
#define UOTG_OTGSC_VC_WIDTH                      (1U)
#define UOTG_OTGSC_VC(x)                         (((uint32_t)(((uint32_t)(x)) << UOTG_OTGSC_VC_SHIFT)) & UOTG_OTGSC_VC_MASK)
#define UOTG_OTGSC_HAAR_MASK                     (0x4U)
#define UOTG_OTGSC_HAAR_SHIFT                    (2U)
#define UOTG_OTGSC_HAAR_WIDTH                    (1U)
#define UOTG_OTGSC_HAAR(x)                       (((uint32_t)(((uint32_t)(x)) << UOTG_OTGSC_HAAR_SHIFT)) & UOTG_OTGSC_HAAR_MASK)
#define UOTG_OTGSC_OT_MASK                       (0x8U)
#define UOTG_OTGSC_OT_SHIFT                      (3U)
#define UOTG_OTGSC_OT_WIDTH                      (1U)
#define UOTG_OTGSC_OT(x)                         (((uint32_t)(((uint32_t)(x)) << UOTG_OTGSC_OT_SHIFT)) & UOTG_OTGSC_OT_MASK)
#define UOTG_OTGSC_DP_MASK                       (0x10U)
#define UOTG_OTGSC_DP_SHIFT                      (4U)
#define UOTG_OTGSC_DP_WIDTH                      (1U)
#define UOTG_OTGSC_DP(x)                         (((uint32_t)(((uint32_t)(x)) << UOTG_OTGSC_DP_SHIFT)) & UOTG_OTGSC_DP_MASK)
#define UOTG_OTGSC_IDPU_MASK                     (0x20U)
#define UOTG_OTGSC_IDPU_SHIFT                    (5U)
#define UOTG_OTGSC_IDPU_WIDTH                    (1U)
#define UOTG_OTGSC_IDPU(x)                       (((uint32_t)(((uint32_t)(x)) << UOTG_OTGSC_IDPU_SHIFT)) & UOTG_OTGSC_IDPU_MASK)
#define UOTG_OTGSC_HADP_MASK                     (0x40U)
#define UOTG_OTGSC_HADP_SHIFT                    (6U)
#define UOTG_OTGSC_HADP_WIDTH                    (1U)
#define UOTG_OTGSC_HADP(x)                       (((uint32_t)(((uint32_t)(x)) << UOTG_OTGSC_HADP_SHIFT)) & UOTG_OTGSC_HADP_MASK)
#define UOTG_OTGSC_HABA_MASK                     (0x80U)
#define UOTG_OTGSC_HABA_SHIFT                    (7U)
#define UOTG_OTGSC_HABA_WIDTH                    (1U)
#define UOTG_OTGSC_HABA(x)                       (((uint32_t)(((uint32_t)(x)) << UOTG_OTGSC_HABA_SHIFT)) & UOTG_OTGSC_HABA_MASK)
#define UOTG_OTGSC_ID_MASK                       (0x100U)
#define UOTG_OTGSC_ID_SHIFT                      (8U)
#define UOTG_OTGSC_ID_WIDTH                      (1U)
#define UOTG_OTGSC_ID(x)                         (((uint32_t)(((uint32_t)(x)) << UOTG_OTGSC_ID_SHIFT)) & UOTG_OTGSC_ID_MASK)
#define UOTG_OTGSC_AVV_MASK                      (0x200U)
#define UOTG_OTGSC_AVV_SHIFT                     (9U)
#define UOTG_OTGSC_AVV_WIDTH                     (1U)
#define UOTG_OTGSC_AVV(x)                        (((uint32_t)(((uint32_t)(x)) << UOTG_OTGSC_AVV_SHIFT)) & UOTG_OTGSC_AVV_MASK)
#define UOTG_OTGSC_ASV_MASK                      (0x400U)
#define UOTG_OTGSC_ASV_SHIFT                     (10U)
#define UOTG_OTGSC_ASV_WIDTH                     (1U)
#define UOTG_OTGSC_ASV(x)                        (((uint32_t)(((uint32_t)(x)) << UOTG_OTGSC_ASV_SHIFT)) & UOTG_OTGSC_ASV_MASK)
#define UOTG_OTGSC_BSV_MASK                      (0x800U)
#define UOTG_OTGSC_BSV_SHIFT                     (11U)
#define UOTG_OTGSC_BSV_WIDTH                     (1U)
#define UOTG_OTGSC_BSV(x)                        (((uint32_t)(((uint32_t)(x)) << UOTG_OTGSC_BSV_SHIFT)) & UOTG_OTGSC_BSV_MASK)
#define UOTG_OTGSC_BSE_MASK                      (0x1000U)
#define UOTG_OTGSC_BSE_SHIFT                     (12U)
#define UOTG_OTGSC_BSE_WIDTH                     (1U)
#define UOTG_OTGSC_BSE(x)                        (((uint32_t)(((uint32_t)(x)) << UOTG_OTGSC_BSE_SHIFT)) & UOTG_OTGSC_BSE_MASK)
#define UOTG_OTGSC_TIM_TOG_MASK                  (0x2000U)
#define UOTG_OTGSC_TIM_TOG_SHIFT                 (13U)
#define UOTG_OTGSC_TIM_TOG_WIDTH                 (1U)
#define UOTG_OTGSC_TIM_TOG(x)                    (((uint32_t)(((uint32_t)(x)) << UOTG_OTGSC_TIM_TOG_SHIFT)) & UOTG_OTGSC_TIM_TOG_MASK)
#define UOTG_OTGSC_DPS_MASK                      (0x4000U)
#define UOTG_OTGSC_DPS_SHIFT                     (14U)
#define UOTG_OTGSC_DPS_WIDTH                     (1U)
#define UOTG_OTGSC_DPS(x)                        (((uint32_t)(((uint32_t)(x)) << UOTG_OTGSC_DPS_SHIFT)) & UOTG_OTGSC_DPS_MASK)
#define UOTG_OTGSC_IDIS_MASK                     (0x10000U)
#define UOTG_OTGSC_IDIS_SHIFT                    (16U)
#define UOTG_OTGSC_IDIS_WIDTH                    (1U)
#define UOTG_OTGSC_IDIS(x)                       (((uint32_t)(((uint32_t)(x)) << UOTG_OTGSC_IDIS_SHIFT)) & UOTG_OTGSC_IDIS_MASK)
#define UOTG_OTGSC_AVVIS_MASK                    (0x20000U)
#define UOTG_OTGSC_AVVIS_SHIFT                   (17U)
#define UOTG_OTGSC_AVVIS_WIDTH                   (1U)
#define UOTG_OTGSC_AVVIS(x)                      (((uint32_t)(((uint32_t)(x)) << UOTG_OTGSC_AVVIS_SHIFT)) & UOTG_OTGSC_AVVIS_MASK)
#define UOTG_OTGSC_ASVIS_MASK                    (0x40000U)
#define UOTG_OTGSC_ASVIS_SHIFT                   (18U)
#define UOTG_OTGSC_ASVIS_WIDTH                   (1U)
#define UOTG_OTGSC_ASVIS(x)                      (((uint32_t)(((uint32_t)(x)) << UOTG_OTGSC_ASVIS_SHIFT)) & UOTG_OTGSC_ASVIS_MASK)
#define UOTG_OTGSC_BSVIS_MASK                    (0x80000U)
#define UOTG_OTGSC_BSVIS_SHIFT                   (19U)
#define UOTG_OTGSC_BSVIS_WIDTH                   (1U)
#define UOTG_OTGSC_BSVIS(x)                      (((uint32_t)(((uint32_t)(x)) << UOTG_OTGSC_BSVIS_SHIFT)) & UOTG_OTGSC_BSVIS_MASK)
#define UOTG_OTGSC_BSEIS_MASK                    (0x100000U)
#define UOTG_OTGSC_BSEIS_SHIFT                   (20U)
#define UOTG_OTGSC_BSEIS_WIDTH                   (1U)
#define UOTG_OTGSC_BSEIS(x)                      (((uint32_t)(((uint32_t)(x)) << UOTG_OTGSC_BSEIS_SHIFT)) & UOTG_OTGSC_BSEIS_MASK)
#define UOTG_OTGSC_TIMIS_MASK                    (0x200000U)
#define UOTG_OTGSC_TIMIS_SHIFT                   (21U)
#define UOTG_OTGSC_TIMIS_WIDTH                   (1U)
#define UOTG_OTGSC_TIMIS(x)                      (((uint32_t)(((uint32_t)(x)) << UOTG_OTGSC_TIMIS_SHIFT)) & UOTG_OTGSC_TIMIS_MASK)
#define UOTG_OTGSC_DPIS_MASK                     (0x400000U)
#define UOTG_OTGSC_DPIS_SHIFT                    (22U)
#define UOTG_OTGSC_DPIS_WIDTH                    (1U)
#define UOTG_OTGSC_DPIS(x)                       (((uint32_t)(((uint32_t)(x)) << UOTG_OTGSC_DPIS_SHIFT)) & UOTG_OTGSC_DPIS_MASK)
#define UOTG_OTGSC_IDIE_MASK                     (0x1000000U)
#define UOTG_OTGSC_IDIE_SHIFT                    (24U)
#define UOTG_OTGSC_IDIE_WIDTH                    (1U)
#define UOTG_OTGSC_IDIE(x)                       (((uint32_t)(((uint32_t)(x)) << UOTG_OTGSC_IDIE_SHIFT)) & UOTG_OTGSC_IDIE_MASK)
#define UOTG_OTGSC_AVVIE_MASK                    (0x2000000U)
#define UOTG_OTGSC_AVVIE_SHIFT                   (25U)
#define UOTG_OTGSC_AVVIE_WIDTH                   (1U)
#define UOTG_OTGSC_AVVIE(x)                      (((uint32_t)(((uint32_t)(x)) << UOTG_OTGSC_AVVIE_SHIFT)) & UOTG_OTGSC_AVVIE_MASK)
#define UOTG_OTGSC_ASVIE_MASK                    (0x4000000U)
#define UOTG_OTGSC_ASVIE_SHIFT                   (26U)
#define UOTG_OTGSC_ASVIE_WIDTH                   (1U)
#define UOTG_OTGSC_ASVIE(x)                      (((uint32_t)(((uint32_t)(x)) << UOTG_OTGSC_ASVIE_SHIFT)) & UOTG_OTGSC_ASVIE_MASK)
#define UOTG_OTGSC_BSVIE_MASK                    (0x8000000U)
#define UOTG_OTGSC_BSVIE_SHIFT                   (27U)
#define UOTG_OTGSC_BSVIE_WIDTH                   (1U)
#define UOTG_OTGSC_BSVIE(x)                      (((uint32_t)(((uint32_t)(x)) << UOTG_OTGSC_BSVIE_SHIFT)) & UOTG_OTGSC_BSVIE_MASK)
#define UOTG_OTGSC_BSEIE_MASK                    (0x10000000U)
#define UOTG_OTGSC_BSEIE_SHIFT                   (28U)
#define UOTG_OTGSC_BSEIE_WIDTH                   (1U)
#define UOTG_OTGSC_BSEIE(x)                      (((uint32_t)(((uint32_t)(x)) << UOTG_OTGSC_BSEIE_SHIFT)) & UOTG_OTGSC_BSEIE_MASK)
#define UOTG_OTGSC_TIMIE_MASK                    (0x20000000U)
#define UOTG_OTGSC_TIMIE_SHIFT                   (29U)
#define UOTG_OTGSC_TIMIE_WIDTH                   (1U)
#define UOTG_OTGSC_TIMIE(x)                      (((uint32_t)(((uint32_t)(x)) << UOTG_OTGSC_TIMIE_SHIFT)) & UOTG_OTGSC_TIMIE_MASK)
#define UOTG_OTGSC_DPIE_MASK                     (0x40000000U)
#define UOTG_OTGSC_DPIE_SHIFT                    (30U)
#define UOTG_OTGSC_DPIE_WIDTH                    (1U)
#define UOTG_OTGSC_DPIE(x)                       (((uint32_t)(((uint32_t)(x)) << UOTG_OTGSC_DPIE_SHIFT)) & UOTG_OTGSC_DPIE_MASK)
/*! @} */

/*! @name USBMODE - USB Device Mode */
/*! @{ */
#define UOTG_USBMODE_CM_MASK                     (0x3U)
#define UOTG_USBMODE_CM_SHIFT                    (0U)
#define UOTG_USBMODE_CM_WIDTH                    (2U)
#define UOTG_USBMODE_CM(x)                       (((uint32_t)(((uint32_t)(x)) << UOTG_USBMODE_CM_SHIFT)) & UOTG_USBMODE_CM_MASK)
#define UOTG_USBMODE_ES_MASK                     (0x4U)
#define UOTG_USBMODE_ES_SHIFT                    (2U)
#define UOTG_USBMODE_ES_WIDTH                    (1U)
#define UOTG_USBMODE_ES(x)                       (((uint32_t)(((uint32_t)(x)) << UOTG_USBMODE_ES_SHIFT)) & UOTG_USBMODE_ES_MASK)
#define UOTG_USBMODE_SLOM_MASK                   (0x8U)
#define UOTG_USBMODE_SLOM_SHIFT                  (3U)
#define UOTG_USBMODE_SLOM_WIDTH                  (1U)
#define UOTG_USBMODE_SLOM(x)                     (((uint32_t)(((uint32_t)(x)) << UOTG_USBMODE_SLOM_SHIFT)) & UOTG_USBMODE_SLOM_MASK)
#define UOTG_USBMODE_SDIS_MASK                   (0x10U)
#define UOTG_USBMODE_SDIS_SHIFT                  (4U)
#define UOTG_USBMODE_SDIS_WIDTH                  (1U)
#define UOTG_USBMODE_SDIS(x)                     (((uint32_t)(((uint32_t)(x)) << UOTG_USBMODE_SDIS_SHIFT)) & UOTG_USBMODE_SDIS_MASK)
#define UOTG_USBMODE_TXHSD_MASK                  (0x7000U)
#define UOTG_USBMODE_TXHSD_SHIFT                 (12U)
#define UOTG_USBMODE_TXHSD_WIDTH                 (3U)
#define UOTG_USBMODE_TXHSD(x)                    (((uint32_t)(((uint32_t)(x)) << UOTG_USBMODE_TXHSD_SHIFT)) & UOTG_USBMODE_TXHSD_MASK)
#define UOTG_USBMODE_SRT_MASK                    (0x8000U)
#define UOTG_USBMODE_SRT_SHIFT                   (15U)
#define UOTG_USBMODE_SRT_WIDTH                   (1U)
#define UOTG_USBMODE_SRT(x)                      (((uint32_t)(((uint32_t)(x)) << UOTG_USBMODE_SRT_SHIFT)) & UOTG_USBMODE_SRT_MASK)
#define UOTG_USBMODE_ALP_MASK                    (0xFF0000U)
#define UOTG_USBMODE_ALP_SHIFT                   (16U)
#define UOTG_USBMODE_ALP_WIDTH                   (8U)
#define UOTG_USBMODE_ALP(x)                      (((uint32_t)(((uint32_t)(x)) << UOTG_USBMODE_ALP_SHIFT)) & UOTG_USBMODE_ALP_MASK)
/*! @} */

/*! @name ENDPTSETUPSTAT - Endpoint Setup Status */
/*! @{ */
#define UOTG_ENDPTSETUPSTAT_ENDPTSETUPSTAT_MASK  (0xFFFFU)
#define UOTG_ENDPTSETUPSTAT_ENDPTSETUPSTAT_SHIFT (0U)
#define UOTG_ENDPTSETUPSTAT_ENDPTSETUPSTAT_WIDTH (16U)
#define UOTG_ENDPTSETUPSTAT_ENDPTSETUPSTAT(x)    (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTSETUPSTAT_ENDPTSETUPSTAT_SHIFT)) & UOTG_ENDPTSETUPSTAT_ENDPTSETUPSTAT_MASK)
/*! @} */

/*! @name ENDPTPRIME - Endpoint Initialization */
/*! @{ */
#define UOTG_ENDPTPRIME_PERB_MASK                (0x3FU)
#define UOTG_ENDPTPRIME_PERB_SHIFT               (0U)
#define UOTG_ENDPTPRIME_PERB_WIDTH               (6U)
#define UOTG_ENDPTPRIME_PERB(x)                  (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTPRIME_PERB_SHIFT)) & UOTG_ENDPTPRIME_PERB_MASK)
#define UOTG_ENDPTPRIME_PETB_MASK                (0x3F0000U)
#define UOTG_ENDPTPRIME_PETB_SHIFT               (16U)
#define UOTG_ENDPTPRIME_PETB_WIDTH               (6U)
#define UOTG_ENDPTPRIME_PETB(x)                  (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTPRIME_PETB_SHIFT)) & UOTG_ENDPTPRIME_PETB_MASK)
/*! @} */

/*! @name ENDPTFLUSH - Endpoint De-Initialize */
/*! @{ */
#define UOTG_ENDPTFLUSH_FERB_MASK                (0x3FU)
#define UOTG_ENDPTFLUSH_FERB_SHIFT               (0U)
#define UOTG_ENDPTFLUSH_FERB_WIDTH               (6U)
#define UOTG_ENDPTFLUSH_FERB(x)                  (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTFLUSH_FERB_SHIFT)) & UOTG_ENDPTFLUSH_FERB_MASK)
#define UOTG_ENDPTFLUSH_FETB_MASK                (0x3F0000U)
#define UOTG_ENDPTFLUSH_FETB_SHIFT               (16U)
#define UOTG_ENDPTFLUSH_FETB_WIDTH               (6U)
#define UOTG_ENDPTFLUSH_FETB(x)                  (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTFLUSH_FETB_SHIFT)) & UOTG_ENDPTFLUSH_FETB_MASK)
/*! @} */

/*! @name ENDPTSTAT - Endpoint Status */
/*! @{ */
#define UOTG_ENDPTSTAT_ERBR_MASK                 (0x3FU)
#define UOTG_ENDPTSTAT_ERBR_SHIFT                (0U)
#define UOTG_ENDPTSTAT_ERBR_WIDTH                (6U)
#define UOTG_ENDPTSTAT_ERBR(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTSTAT_ERBR_SHIFT)) & UOTG_ENDPTSTAT_ERBR_MASK)
#define UOTG_ENDPTSTAT_ETBR_MASK                 (0x3F0000U)
#define UOTG_ENDPTSTAT_ETBR_SHIFT                (16U)
#define UOTG_ENDPTSTAT_ETBR_WIDTH                (6U)
#define UOTG_ENDPTSTAT_ETBR(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTSTAT_ETBR_SHIFT)) & UOTG_ENDPTSTAT_ETBR_MASK)
/*! @} */

/*! @name ENDPTCOMPLETE - Endpoint Complete */
/*! @{ */
#define UOTG_ENDPTCOMPLETE_ERCE_MASK             (0x3FU)
#define UOTG_ENDPTCOMPLETE_ERCE_SHIFT            (0U)
#define UOTG_ENDPTCOMPLETE_ERCE_WIDTH            (6U)
#define UOTG_ENDPTCOMPLETE_ERCE(x)               (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTCOMPLETE_ERCE_SHIFT)) & UOTG_ENDPTCOMPLETE_ERCE_MASK)
#define UOTG_ENDPTCOMPLETE_ETCE_MASK             (0x3F0000U)
#define UOTG_ENDPTCOMPLETE_ETCE_SHIFT            (16U)
#define UOTG_ENDPTCOMPLETE_ETCE_WIDTH            (6U)
#define UOTG_ENDPTCOMPLETE_ETCE(x)               (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTCOMPLETE_ETCE_SHIFT)) & UOTG_ENDPTCOMPLETE_ETCE_MASK)
/*! @} */

/*! @name ENDPTCTRL0 - Endpoint Control 0 */
/*! @{ */
#define UOTG_ENDPTCTRL0_RXS_MASK                 (0x1U)
#define UOTG_ENDPTCTRL0_RXS_SHIFT                (0U)
#define UOTG_ENDPTCTRL0_RXS_WIDTH                (1U)
#define UOTG_ENDPTCTRL0_RXS(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTCTRL0_RXS_SHIFT)) & UOTG_ENDPTCTRL0_RXS_MASK)
#define UOTG_ENDPTCTRL0_RXT_MASK                 (0xCU)
#define UOTG_ENDPTCTRL0_RXT_SHIFT                (2U)
#define UOTG_ENDPTCTRL0_RXT_WIDTH                (2U)
#define UOTG_ENDPTCTRL0_RXT(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTCTRL0_RXT_SHIFT)) & UOTG_ENDPTCTRL0_RXT_MASK)
#define UOTG_ENDPTCTRL0_RXE_MASK                 (0x80U)
#define UOTG_ENDPTCTRL0_RXE_SHIFT                (7U)
#define UOTG_ENDPTCTRL0_RXE_WIDTH                (1U)
#define UOTG_ENDPTCTRL0_RXE(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTCTRL0_RXE_SHIFT)) & UOTG_ENDPTCTRL0_RXE_MASK)
#define UOTG_ENDPTCTRL0_TXS_MASK                 (0x10000U)
#define UOTG_ENDPTCTRL0_TXS_SHIFT                (16U)
#define UOTG_ENDPTCTRL0_TXS_WIDTH                (1U)
#define UOTG_ENDPTCTRL0_TXS(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTCTRL0_TXS_SHIFT)) & UOTG_ENDPTCTRL0_TXS_MASK)
#define UOTG_ENDPTCTRL0_TXT_MASK                 (0xC0000U)
#define UOTG_ENDPTCTRL0_TXT_SHIFT                (18U)
#define UOTG_ENDPTCTRL0_TXT_WIDTH                (2U)
#define UOTG_ENDPTCTRL0_TXT(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTCTRL0_TXT_SHIFT)) & UOTG_ENDPTCTRL0_TXT_MASK)
#define UOTG_ENDPTCTRL0_TXE_MASK                 (0x800000U)
#define UOTG_ENDPTCTRL0_TXE_SHIFT                (23U)
#define UOTG_ENDPTCTRL0_TXE_WIDTH                (1U)
#define UOTG_ENDPTCTRL0_TXE(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTCTRL0_TXE_SHIFT)) & UOTG_ENDPTCTRL0_TXE_MASK)
/*! @} */

/*! @name ENDPTCTRL1 - Endpoint Control */
/*! @{ */
#define UOTG_ENDPTCTRL1_RXS_MASK                 (0x1U)
#define UOTG_ENDPTCTRL1_RXS_SHIFT                (0U)
#define UOTG_ENDPTCTRL1_RXS_WIDTH                (1U)
#define UOTG_ENDPTCTRL1_RXS(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTCTRL1_RXS_SHIFT)) & UOTG_ENDPTCTRL1_RXS_MASK)
#define UOTG_ENDPTCTRL1_RXD_MASK                 (0x2U)
#define UOTG_ENDPTCTRL1_RXD_SHIFT                (1U)
#define UOTG_ENDPTCTRL1_RXD_WIDTH                (1U)
#define UOTG_ENDPTCTRL1_RXD(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTCTRL1_RXD_SHIFT)) & UOTG_ENDPTCTRL1_RXD_MASK)
#define UOTG_ENDPTCTRL1_RXT_MASK                 (0xCU)
#define UOTG_ENDPTCTRL1_RXT_SHIFT                (2U)
#define UOTG_ENDPTCTRL1_RXT_WIDTH                (2U)
#define UOTG_ENDPTCTRL1_RXT(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTCTRL1_RXT_SHIFT)) & UOTG_ENDPTCTRL1_RXT_MASK)
#define UOTG_ENDPTCTRL1_RXI_MASK                 (0x20U)
#define UOTG_ENDPTCTRL1_RXI_SHIFT                (5U)
#define UOTG_ENDPTCTRL1_RXI_WIDTH                (1U)
#define UOTG_ENDPTCTRL1_RXI(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTCTRL1_RXI_SHIFT)) & UOTG_ENDPTCTRL1_RXI_MASK)
#define UOTG_ENDPTCTRL1_RXR_MASK                 (0x40U)
#define UOTG_ENDPTCTRL1_RXR_SHIFT                (6U)
#define UOTG_ENDPTCTRL1_RXR_WIDTH                (1U)
#define UOTG_ENDPTCTRL1_RXR(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTCTRL1_RXR_SHIFT)) & UOTG_ENDPTCTRL1_RXR_MASK)
#define UOTG_ENDPTCTRL1_RXE_MASK                 (0x80U)
#define UOTG_ENDPTCTRL1_RXE_SHIFT                (7U)
#define UOTG_ENDPTCTRL1_RXE_WIDTH                (1U)
#define UOTG_ENDPTCTRL1_RXE(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTCTRL1_RXE_SHIFT)) & UOTG_ENDPTCTRL1_RXE_MASK)
#define UOTG_ENDPTCTRL1_TXS_MASK                 (0x10000U)
#define UOTG_ENDPTCTRL1_TXS_SHIFT                (16U)
#define UOTG_ENDPTCTRL1_TXS_WIDTH                (1U)
#define UOTG_ENDPTCTRL1_TXS(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTCTRL1_TXS_SHIFT)) & UOTG_ENDPTCTRL1_TXS_MASK)
#define UOTG_ENDPTCTRL1_TXD_MASK                 (0x20000U)
#define UOTG_ENDPTCTRL1_TXD_SHIFT                (17U)
#define UOTG_ENDPTCTRL1_TXD_WIDTH                (1U)
#define UOTG_ENDPTCTRL1_TXD(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTCTRL1_TXD_SHIFT)) & UOTG_ENDPTCTRL1_TXD_MASK)
#define UOTG_ENDPTCTRL1_TXT_MASK                 (0xC0000U)
#define UOTG_ENDPTCTRL1_TXT_SHIFT                (18U)
#define UOTG_ENDPTCTRL1_TXT_WIDTH                (2U)
#define UOTG_ENDPTCTRL1_TXT(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTCTRL1_TXT_SHIFT)) & UOTG_ENDPTCTRL1_TXT_MASK)
#define UOTG_ENDPTCTRL1_TXI_MASK                 (0x200000U)
#define UOTG_ENDPTCTRL1_TXI_SHIFT                (21U)
#define UOTG_ENDPTCTRL1_TXI_WIDTH                (1U)
#define UOTG_ENDPTCTRL1_TXI(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTCTRL1_TXI_SHIFT)) & UOTG_ENDPTCTRL1_TXI_MASK)
#define UOTG_ENDPTCTRL1_TXR_MASK                 (0x400000U)
#define UOTG_ENDPTCTRL1_TXR_SHIFT                (22U)
#define UOTG_ENDPTCTRL1_TXR_WIDTH                (1U)
#define UOTG_ENDPTCTRL1_TXR(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTCTRL1_TXR_SHIFT)) & UOTG_ENDPTCTRL1_TXR_MASK)
#define UOTG_ENDPTCTRL1_TXE_MASK                 (0x800000U)
#define UOTG_ENDPTCTRL1_TXE_SHIFT                (23U)
#define UOTG_ENDPTCTRL1_TXE_WIDTH                (1U)
#define UOTG_ENDPTCTRL1_TXE(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTCTRL1_TXE_SHIFT)) & UOTG_ENDPTCTRL1_TXE_MASK)
/*! @} */

/*! @name ENDPTCTRL2 - Endpoint Control */
/*! @{ */
#define UOTG_ENDPTCTRL2_RXS_MASK                 (0x1U)
#define UOTG_ENDPTCTRL2_RXS_SHIFT                (0U)
#define UOTG_ENDPTCTRL2_RXS_WIDTH                (1U)
#define UOTG_ENDPTCTRL2_RXS(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTCTRL2_RXS_SHIFT)) & UOTG_ENDPTCTRL2_RXS_MASK)
#define UOTG_ENDPTCTRL2_RXD_MASK                 (0x2U)
#define UOTG_ENDPTCTRL2_RXD_SHIFT                (1U)
#define UOTG_ENDPTCTRL2_RXD_WIDTH                (1U)
#define UOTG_ENDPTCTRL2_RXD(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTCTRL2_RXD_SHIFT)) & UOTG_ENDPTCTRL2_RXD_MASK)
#define UOTG_ENDPTCTRL2_RXT_MASK                 (0xCU)
#define UOTG_ENDPTCTRL2_RXT_SHIFT                (2U)
#define UOTG_ENDPTCTRL2_RXT_WIDTH                (2U)
#define UOTG_ENDPTCTRL2_RXT(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTCTRL2_RXT_SHIFT)) & UOTG_ENDPTCTRL2_RXT_MASK)
#define UOTG_ENDPTCTRL2_RXI_MASK                 (0x20U)
#define UOTG_ENDPTCTRL2_RXI_SHIFT                (5U)
#define UOTG_ENDPTCTRL2_RXI_WIDTH                (1U)
#define UOTG_ENDPTCTRL2_RXI(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTCTRL2_RXI_SHIFT)) & UOTG_ENDPTCTRL2_RXI_MASK)
#define UOTG_ENDPTCTRL2_RXR_MASK                 (0x40U)
#define UOTG_ENDPTCTRL2_RXR_SHIFT                (6U)
#define UOTG_ENDPTCTRL2_RXR_WIDTH                (1U)
#define UOTG_ENDPTCTRL2_RXR(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTCTRL2_RXR_SHIFT)) & UOTG_ENDPTCTRL2_RXR_MASK)
#define UOTG_ENDPTCTRL2_RXE_MASK                 (0x80U)
#define UOTG_ENDPTCTRL2_RXE_SHIFT                (7U)
#define UOTG_ENDPTCTRL2_RXE_WIDTH                (1U)
#define UOTG_ENDPTCTRL2_RXE(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTCTRL2_RXE_SHIFT)) & UOTG_ENDPTCTRL2_RXE_MASK)
#define UOTG_ENDPTCTRL2_TXS_MASK                 (0x10000U)
#define UOTG_ENDPTCTRL2_TXS_SHIFT                (16U)
#define UOTG_ENDPTCTRL2_TXS_WIDTH                (1U)
#define UOTG_ENDPTCTRL2_TXS(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTCTRL2_TXS_SHIFT)) & UOTG_ENDPTCTRL2_TXS_MASK)
#define UOTG_ENDPTCTRL2_TXD_MASK                 (0x20000U)
#define UOTG_ENDPTCTRL2_TXD_SHIFT                (17U)
#define UOTG_ENDPTCTRL2_TXD_WIDTH                (1U)
#define UOTG_ENDPTCTRL2_TXD(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTCTRL2_TXD_SHIFT)) & UOTG_ENDPTCTRL2_TXD_MASK)
#define UOTG_ENDPTCTRL2_TXT_MASK                 (0xC0000U)
#define UOTG_ENDPTCTRL2_TXT_SHIFT                (18U)
#define UOTG_ENDPTCTRL2_TXT_WIDTH                (2U)
#define UOTG_ENDPTCTRL2_TXT(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTCTRL2_TXT_SHIFT)) & UOTG_ENDPTCTRL2_TXT_MASK)
#define UOTG_ENDPTCTRL2_TXI_MASK                 (0x200000U)
#define UOTG_ENDPTCTRL2_TXI_SHIFT                (21U)
#define UOTG_ENDPTCTRL2_TXI_WIDTH                (1U)
#define UOTG_ENDPTCTRL2_TXI(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTCTRL2_TXI_SHIFT)) & UOTG_ENDPTCTRL2_TXI_MASK)
#define UOTG_ENDPTCTRL2_TXR_MASK                 (0x400000U)
#define UOTG_ENDPTCTRL2_TXR_SHIFT                (22U)
#define UOTG_ENDPTCTRL2_TXR_WIDTH                (1U)
#define UOTG_ENDPTCTRL2_TXR(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTCTRL2_TXR_SHIFT)) & UOTG_ENDPTCTRL2_TXR_MASK)
#define UOTG_ENDPTCTRL2_TXE_MASK                 (0x800000U)
#define UOTG_ENDPTCTRL2_TXE_SHIFT                (23U)
#define UOTG_ENDPTCTRL2_TXE_WIDTH                (1U)
#define UOTG_ENDPTCTRL2_TXE(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTCTRL2_TXE_SHIFT)) & UOTG_ENDPTCTRL2_TXE_MASK)
/*! @} */

/*! @name ENDPTCTRL3 - Endpoint Control */
/*! @{ */
#define UOTG_ENDPTCTRL3_RXS_MASK                 (0x1U)
#define UOTG_ENDPTCTRL3_RXS_SHIFT                (0U)
#define UOTG_ENDPTCTRL3_RXS_WIDTH                (1U)
#define UOTG_ENDPTCTRL3_RXS(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTCTRL3_RXS_SHIFT)) & UOTG_ENDPTCTRL3_RXS_MASK)
#define UOTG_ENDPTCTRL3_RXD_MASK                 (0x2U)
#define UOTG_ENDPTCTRL3_RXD_SHIFT                (1U)
#define UOTG_ENDPTCTRL3_RXD_WIDTH                (1U)
#define UOTG_ENDPTCTRL3_RXD(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTCTRL3_RXD_SHIFT)) & UOTG_ENDPTCTRL3_RXD_MASK)
#define UOTG_ENDPTCTRL3_RXT_MASK                 (0xCU)
#define UOTG_ENDPTCTRL3_RXT_SHIFT                (2U)
#define UOTG_ENDPTCTRL3_RXT_WIDTH                (2U)
#define UOTG_ENDPTCTRL3_RXT(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTCTRL3_RXT_SHIFT)) & UOTG_ENDPTCTRL3_RXT_MASK)
#define UOTG_ENDPTCTRL3_RXI_MASK                 (0x20U)
#define UOTG_ENDPTCTRL3_RXI_SHIFT                (5U)
#define UOTG_ENDPTCTRL3_RXI_WIDTH                (1U)
#define UOTG_ENDPTCTRL3_RXI(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTCTRL3_RXI_SHIFT)) & UOTG_ENDPTCTRL3_RXI_MASK)
#define UOTG_ENDPTCTRL3_RXR_MASK                 (0x40U)
#define UOTG_ENDPTCTRL3_RXR_SHIFT                (6U)
#define UOTG_ENDPTCTRL3_RXR_WIDTH                (1U)
#define UOTG_ENDPTCTRL3_RXR(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTCTRL3_RXR_SHIFT)) & UOTG_ENDPTCTRL3_RXR_MASK)
#define UOTG_ENDPTCTRL3_RXE_MASK                 (0x80U)
#define UOTG_ENDPTCTRL3_RXE_SHIFT                (7U)
#define UOTG_ENDPTCTRL3_RXE_WIDTH                (1U)
#define UOTG_ENDPTCTRL3_RXE(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTCTRL3_RXE_SHIFT)) & UOTG_ENDPTCTRL3_RXE_MASK)
#define UOTG_ENDPTCTRL3_TXS_MASK                 (0x10000U)
#define UOTG_ENDPTCTRL3_TXS_SHIFT                (16U)
#define UOTG_ENDPTCTRL3_TXS_WIDTH                (1U)
#define UOTG_ENDPTCTRL3_TXS(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTCTRL3_TXS_SHIFT)) & UOTG_ENDPTCTRL3_TXS_MASK)
#define UOTG_ENDPTCTRL3_TXD_MASK                 (0x20000U)
#define UOTG_ENDPTCTRL3_TXD_SHIFT                (17U)
#define UOTG_ENDPTCTRL3_TXD_WIDTH                (1U)
#define UOTG_ENDPTCTRL3_TXD(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTCTRL3_TXD_SHIFT)) & UOTG_ENDPTCTRL3_TXD_MASK)
#define UOTG_ENDPTCTRL3_TXT_MASK                 (0xC0000U)
#define UOTG_ENDPTCTRL3_TXT_SHIFT                (18U)
#define UOTG_ENDPTCTRL3_TXT_WIDTH                (2U)
#define UOTG_ENDPTCTRL3_TXT(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTCTRL3_TXT_SHIFT)) & UOTG_ENDPTCTRL3_TXT_MASK)
#define UOTG_ENDPTCTRL3_TXI_MASK                 (0x200000U)
#define UOTG_ENDPTCTRL3_TXI_SHIFT                (21U)
#define UOTG_ENDPTCTRL3_TXI_WIDTH                (1U)
#define UOTG_ENDPTCTRL3_TXI(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTCTRL3_TXI_SHIFT)) & UOTG_ENDPTCTRL3_TXI_MASK)
#define UOTG_ENDPTCTRL3_TXR_MASK                 (0x400000U)
#define UOTG_ENDPTCTRL3_TXR_SHIFT                (22U)
#define UOTG_ENDPTCTRL3_TXR_WIDTH                (1U)
#define UOTG_ENDPTCTRL3_TXR(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTCTRL3_TXR_SHIFT)) & UOTG_ENDPTCTRL3_TXR_MASK)
#define UOTG_ENDPTCTRL3_TXE_MASK                 (0x800000U)
#define UOTG_ENDPTCTRL3_TXE_SHIFT                (23U)
#define UOTG_ENDPTCTRL3_TXE_WIDTH                (1U)
#define UOTG_ENDPTCTRL3_TXE(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTCTRL3_TXE_SHIFT)) & UOTG_ENDPTCTRL3_TXE_MASK)
/*! @} */

/*! @name ENDPTCTRL4 - Endpoint Control */
/*! @{ */
#define UOTG_ENDPTCTRL4_RXS_MASK                 (0x1U)
#define UOTG_ENDPTCTRL4_RXS_SHIFT                (0U)
#define UOTG_ENDPTCTRL4_RXS_WIDTH                (1U)
#define UOTG_ENDPTCTRL4_RXS(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTCTRL4_RXS_SHIFT)) & UOTG_ENDPTCTRL4_RXS_MASK)
#define UOTG_ENDPTCTRL4_RXD_MASK                 (0x2U)
#define UOTG_ENDPTCTRL4_RXD_SHIFT                (1U)
#define UOTG_ENDPTCTRL4_RXD_WIDTH                (1U)
#define UOTG_ENDPTCTRL4_RXD(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTCTRL4_RXD_SHIFT)) & UOTG_ENDPTCTRL4_RXD_MASK)
#define UOTG_ENDPTCTRL4_RXT_MASK                 (0xCU)
#define UOTG_ENDPTCTRL4_RXT_SHIFT                (2U)
#define UOTG_ENDPTCTRL4_RXT_WIDTH                (2U)
#define UOTG_ENDPTCTRL4_RXT(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTCTRL4_RXT_SHIFT)) & UOTG_ENDPTCTRL4_RXT_MASK)
#define UOTG_ENDPTCTRL4_RXI_MASK                 (0x20U)
#define UOTG_ENDPTCTRL4_RXI_SHIFT                (5U)
#define UOTG_ENDPTCTRL4_RXI_WIDTH                (1U)
#define UOTG_ENDPTCTRL4_RXI(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTCTRL4_RXI_SHIFT)) & UOTG_ENDPTCTRL4_RXI_MASK)
#define UOTG_ENDPTCTRL4_RXR_MASK                 (0x40U)
#define UOTG_ENDPTCTRL4_RXR_SHIFT                (6U)
#define UOTG_ENDPTCTRL4_RXR_WIDTH                (1U)
#define UOTG_ENDPTCTRL4_RXR(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTCTRL4_RXR_SHIFT)) & UOTG_ENDPTCTRL4_RXR_MASK)
#define UOTG_ENDPTCTRL4_RXE_MASK                 (0x80U)
#define UOTG_ENDPTCTRL4_RXE_SHIFT                (7U)
#define UOTG_ENDPTCTRL4_RXE_WIDTH                (1U)
#define UOTG_ENDPTCTRL4_RXE(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTCTRL4_RXE_SHIFT)) & UOTG_ENDPTCTRL4_RXE_MASK)
#define UOTG_ENDPTCTRL4_TXS_MASK                 (0x10000U)
#define UOTG_ENDPTCTRL4_TXS_SHIFT                (16U)
#define UOTG_ENDPTCTRL4_TXS_WIDTH                (1U)
#define UOTG_ENDPTCTRL4_TXS(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTCTRL4_TXS_SHIFT)) & UOTG_ENDPTCTRL4_TXS_MASK)
#define UOTG_ENDPTCTRL4_TXD_MASK                 (0x20000U)
#define UOTG_ENDPTCTRL4_TXD_SHIFT                (17U)
#define UOTG_ENDPTCTRL4_TXD_WIDTH                (1U)
#define UOTG_ENDPTCTRL4_TXD(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTCTRL4_TXD_SHIFT)) & UOTG_ENDPTCTRL4_TXD_MASK)
#define UOTG_ENDPTCTRL4_TXT_MASK                 (0xC0000U)
#define UOTG_ENDPTCTRL4_TXT_SHIFT                (18U)
#define UOTG_ENDPTCTRL4_TXT_WIDTH                (2U)
#define UOTG_ENDPTCTRL4_TXT(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTCTRL4_TXT_SHIFT)) & UOTG_ENDPTCTRL4_TXT_MASK)
#define UOTG_ENDPTCTRL4_TXI_MASK                 (0x200000U)
#define UOTG_ENDPTCTRL4_TXI_SHIFT                (21U)
#define UOTG_ENDPTCTRL4_TXI_WIDTH                (1U)
#define UOTG_ENDPTCTRL4_TXI(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTCTRL4_TXI_SHIFT)) & UOTG_ENDPTCTRL4_TXI_MASK)
#define UOTG_ENDPTCTRL4_TXR_MASK                 (0x400000U)
#define UOTG_ENDPTCTRL4_TXR_SHIFT                (22U)
#define UOTG_ENDPTCTRL4_TXR_WIDTH                (1U)
#define UOTG_ENDPTCTRL4_TXR(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTCTRL4_TXR_SHIFT)) & UOTG_ENDPTCTRL4_TXR_MASK)
#define UOTG_ENDPTCTRL4_TXE_MASK                 (0x800000U)
#define UOTG_ENDPTCTRL4_TXE_SHIFT                (23U)
#define UOTG_ENDPTCTRL4_TXE_WIDTH                (1U)
#define UOTG_ENDPTCTRL4_TXE(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTCTRL4_TXE_SHIFT)) & UOTG_ENDPTCTRL4_TXE_MASK)
/*! @} */

/*! @name ENDPTCTRL5 - Endpoint Control */
/*! @{ */
#define UOTG_ENDPTCTRL5_RXS_MASK                 (0x1U)
#define UOTG_ENDPTCTRL5_RXS_SHIFT                (0U)
#define UOTG_ENDPTCTRL5_RXS_WIDTH                (1U)
#define UOTG_ENDPTCTRL5_RXS(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTCTRL5_RXS_SHIFT)) & UOTG_ENDPTCTRL5_RXS_MASK)
#define UOTG_ENDPTCTRL5_RXD_MASK                 (0x2U)
#define UOTG_ENDPTCTRL5_RXD_SHIFT                (1U)
#define UOTG_ENDPTCTRL5_RXD_WIDTH                (1U)
#define UOTG_ENDPTCTRL5_RXD(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTCTRL5_RXD_SHIFT)) & UOTG_ENDPTCTRL5_RXD_MASK)
#define UOTG_ENDPTCTRL5_RXT_MASK                 (0xCU)
#define UOTG_ENDPTCTRL5_RXT_SHIFT                (2U)
#define UOTG_ENDPTCTRL5_RXT_WIDTH                (2U)
#define UOTG_ENDPTCTRL5_RXT(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTCTRL5_RXT_SHIFT)) & UOTG_ENDPTCTRL5_RXT_MASK)
#define UOTG_ENDPTCTRL5_RXI_MASK                 (0x20U)
#define UOTG_ENDPTCTRL5_RXI_SHIFT                (5U)
#define UOTG_ENDPTCTRL5_RXI_WIDTH                (1U)
#define UOTG_ENDPTCTRL5_RXI(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTCTRL5_RXI_SHIFT)) & UOTG_ENDPTCTRL5_RXI_MASK)
#define UOTG_ENDPTCTRL5_RXR_MASK                 (0x40U)
#define UOTG_ENDPTCTRL5_RXR_SHIFT                (6U)
#define UOTG_ENDPTCTRL5_RXR_WIDTH                (1U)
#define UOTG_ENDPTCTRL5_RXR(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTCTRL5_RXR_SHIFT)) & UOTG_ENDPTCTRL5_RXR_MASK)
#define UOTG_ENDPTCTRL5_RXE_MASK                 (0x80U)
#define UOTG_ENDPTCTRL5_RXE_SHIFT                (7U)
#define UOTG_ENDPTCTRL5_RXE_WIDTH                (1U)
#define UOTG_ENDPTCTRL5_RXE(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTCTRL5_RXE_SHIFT)) & UOTG_ENDPTCTRL5_RXE_MASK)
#define UOTG_ENDPTCTRL5_TXS_MASK                 (0x10000U)
#define UOTG_ENDPTCTRL5_TXS_SHIFT                (16U)
#define UOTG_ENDPTCTRL5_TXS_WIDTH                (1U)
#define UOTG_ENDPTCTRL5_TXS(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTCTRL5_TXS_SHIFT)) & UOTG_ENDPTCTRL5_TXS_MASK)
#define UOTG_ENDPTCTRL5_TXD_MASK                 (0x20000U)
#define UOTG_ENDPTCTRL5_TXD_SHIFT                (17U)
#define UOTG_ENDPTCTRL5_TXD_WIDTH                (1U)
#define UOTG_ENDPTCTRL5_TXD(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTCTRL5_TXD_SHIFT)) & UOTG_ENDPTCTRL5_TXD_MASK)
#define UOTG_ENDPTCTRL5_TXT_MASK                 (0xC0000U)
#define UOTG_ENDPTCTRL5_TXT_SHIFT                (18U)
#define UOTG_ENDPTCTRL5_TXT_WIDTH                (2U)
#define UOTG_ENDPTCTRL5_TXT(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTCTRL5_TXT_SHIFT)) & UOTG_ENDPTCTRL5_TXT_MASK)
#define UOTG_ENDPTCTRL5_TXI_MASK                 (0x200000U)
#define UOTG_ENDPTCTRL5_TXI_SHIFT                (21U)
#define UOTG_ENDPTCTRL5_TXI_WIDTH                (1U)
#define UOTG_ENDPTCTRL5_TXI(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTCTRL5_TXI_SHIFT)) & UOTG_ENDPTCTRL5_TXI_MASK)
#define UOTG_ENDPTCTRL5_TXR_MASK                 (0x400000U)
#define UOTG_ENDPTCTRL5_TXR_SHIFT                (22U)
#define UOTG_ENDPTCTRL5_TXR_WIDTH                (1U)
#define UOTG_ENDPTCTRL5_TXR(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTCTRL5_TXR_SHIFT)) & UOTG_ENDPTCTRL5_TXR_MASK)
#define UOTG_ENDPTCTRL5_TXE_MASK                 (0x800000U)
#define UOTG_ENDPTCTRL5_TXE_SHIFT                (23U)
#define UOTG_ENDPTCTRL5_TXE_WIDTH                (1U)
#define UOTG_ENDPTCTRL5_TXE(x)                   (((uint32_t)(((uint32_t)(x)) << UOTG_ENDPTCTRL5_TXE_SHIFT)) & UOTG_ENDPTCTRL5_TXE_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group UOTG_Register_Masks */


/*!
 * @}
 */ /* end of group UOTG_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- UOTGNC Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup UOTGNC_Peripheral_Access_Layer UOTGNC Peripheral Access Layer
 * @{
 */

/** UOTGNC - Register Layout Typedef */
typedef struct {
  __IO uint32_t CR;                                /**< Control register, offset: 0x0 */
} UOTGNC_Type, *UOTGNC_MemMapPtr;

/** Number of instances of the UOTGNC module. */
#define UOTGNC_INSTANCE_COUNT                    (1u)

/* UOTGNC - Peripheral instance base addresses */
/** Peripheral UOTGNC base address */
#define UOTGNC_BASE                              (0x44064200u)
/** Peripheral UOTGNC base pointer */
#define UOTGNC                                   ((UOTGNC_Type *)UOTGNC_BASE)
/** Array initializer of UOTGNC peripheral base addresses */
#define UOTGNC_BASE_ADDRS                        { UOTGNC_BASE }
/** Array initializer of UOTGNC peripheral base pointers */
#define UOTGNC_BASE_PTRS                         { UOTGNC }

/* ----------------------------------------------------------------------------
   -- UOTGNC Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup UOTGNC_Register_Masks UOTGNC Register Masks
 * @{
 */

/*! @name CR - Control register */
/*! @{ */
#define UOTGNC_CR_WAKEUP_IE_MASK                 (0x1U)
#define UOTGNC_CR_WAKEUP_IE_SHIFT                (0U)
#define UOTGNC_CR_WAKEUP_IE_WIDTH                (1U)
#define UOTGNC_CR_WAKEUP_IE(x)                   (((uint32_t)(((uint32_t)(x)) << UOTGNC_CR_WAKEUP_IE_SHIFT)) & UOTGNC_CR_WAKEUP_IE_MASK)
#define UOTGNC_CR_CORE_IE_MASK                   (0x2U)
#define UOTGNC_CR_CORE_IE_SHIFT                  (1U)
#define UOTGNC_CR_CORE_IE_WIDTH                  (1U)
#define UOTGNC_CR_CORE_IE(x)                     (((uint32_t)(((uint32_t)(x)) << UOTGNC_CR_CORE_IE_SHIFT)) & UOTGNC_CR_CORE_IE_MASK)
#define UOTGNC_CR_PWRFLT_MASK                    (0x4U)
#define UOTGNC_CR_PWRFLT_SHIFT                   (2U)
#define UOTGNC_CR_PWRFLT_WIDTH                   (1U)
#define UOTGNC_CR_PWRFLT(x)                      (((uint32_t)(((uint32_t)(x)) << UOTGNC_CR_PWRFLT_SHIFT)) & UOTGNC_CR_PWRFLT_MASK)
#define UOTGNC_CR_WAKEUPIC_MASK                  (0x20U)
#define UOTGNC_CR_WAKEUPIC_SHIFT                 (5U)
#define UOTGNC_CR_WAKEUPIC_WIDTH                 (1U)
#define UOTGNC_CR_WAKEUPIC(x)                    (((uint32_t)(((uint32_t)(x)) << UOTGNC_CR_WAKEUPIC_SHIFT)) & UOTGNC_CR_WAKEUPIC_MASK)
#define UOTGNC_CR_PWRFLTEN_MASK                  (0x80U)
#define UOTGNC_CR_PWRFLTEN_SHIFT                 (7U)
#define UOTGNC_CR_PWRFLTEN_WIDTH                 (1U)
#define UOTGNC_CR_PWRFLTEN(x)                    (((uint32_t)(((uint32_t)(x)) << UOTGNC_CR_PWRFLTEN_SHIFT)) & UOTGNC_CR_PWRFLTEN_MASK)
#define UOTGNC_CR_PWRFLTDF_MASK                  (0x100U)
#define UOTGNC_CR_PWRFLTDF_SHIFT                 (8U)
#define UOTGNC_CR_PWRFLTDF_WIDTH                 (1U)
#define UOTGNC_CR_PWRFLTDF(x)                    (((uint32_t)(((uint32_t)(x)) << UOTGNC_CR_PWRFLTDF_SHIFT)) & UOTGNC_CR_PWRFLTDF_MASK)
#define UOTGNC_CR_WAKEUPIS_MASK                  (0x200U)
#define UOTGNC_CR_WAKEUPIS_SHIFT                 (9U)
#define UOTGNC_CR_WAKEUPIS_WIDTH                 (1U)
#define UOTGNC_CR_WAKEUPIS(x)                    (((uint32_t)(((uint32_t)(x)) << UOTGNC_CR_WAKEUPIS_SHIFT)) & UOTGNC_CR_WAKEUPIS_MASK)
#define UOTGNC_CR_WAKEUPCTRL_MASK                (0x400U)
#define UOTGNC_CR_WAKEUPCTRL_SHIFT               (10U)
#define UOTGNC_CR_WAKEUPCTRL_WIDTH               (1U)
#define UOTGNC_CR_WAKEUPCTRL(x)                  (((uint32_t)(((uint32_t)(x)) << UOTGNC_CR_WAKEUPCTRL_SHIFT)) & UOTGNC_CR_WAKEUPCTRL_MASK)
#define UOTGNC_CR_WAKEUPEN_MASK                  (0x800U)
#define UOTGNC_CR_WAKEUPEN_SHIFT                 (11U)
#define UOTGNC_CR_WAKEUPEN_WIDTH                 (1U)
#define UOTGNC_CR_WAKEUPEN(x)                    (((uint32_t)(((uint32_t)(x)) << UOTGNC_CR_WAKEUPEN_SHIFT)) & UOTGNC_CR_WAKEUPEN_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group UOTGNC_Register_Masks */


/*!
 * @}
 */ /* end of group UOTGNC_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- uSDHC Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup uSDHC_Peripheral_Access_Layer uSDHC Peripheral Access Layer
 * @{
 */

/** uSDHC - Register Layout Typedef */
typedef struct {
  __IO uint32_t S_ADDR;                            /**< DMA System Address, offset: 0x0 */
  __IO uint32_t BLK_ATT;                           /**< Block Attributes, offset: 0x4 */
  __IO uint32_t CMD_ARG;                           /**< Command Argument, offset: 0x8 */
  __IO uint32_t CMD_XFR_TYP;                       /**< Command Transfer Type, offset: 0xC */
  __I  uint32_t CMD_RSP0;                          /**< Command Response0, offset: 0x10 */
  __I  uint32_t CMD_RSP1;                          /**< Command Response1, offset: 0x14 */
  __I  uint32_t CMD_RSP2;                          /**< Command Response2, offset: 0x18 */
  __I  uint32_t CMD_RSP3;                          /**< Command Response3, offset: 0x1C */
  __IO uint32_t DATA_BUFF_ACC_PORT;                /**< Data Buffer Access Port, offset: 0x20 */
  __I  uint32_t PRES_STATE;                        /**< Present State, offset: 0x24 */
  __IO uint32_t PROT_CTRL;                         /**< Protocol Control, offset: 0x28 */
  __IO uint32_t SYS_CTRL;                          /**< System Control, offset: 0x2C */
  __IO uint32_t INT_STATUS;                        /**< Interrupt Status, offset: 0x30 */
  __IO uint32_t INT_STATUS_EN;                     /**< Interrupt Status Enable, offset: 0x34 */
  __IO uint32_t INT_SIGNAL_EN;                     /**< Interrupt Signal Enable, offset: 0x38 */
  __IO uint32_t AUTOCMD12_ERR_STATUS;              /**< Auto CMD12 Error Status, offset: 0x3C */
  __IO uint32_t HOST_CTRL_CAP;                     /**< Host Controller Capabilities, offset: 0x40 */
  __IO uint32_t WTMK_LVL;                          /**< Watermark Level, offset: 0x44 */
  __IO uint32_t MIX_CTRL;                          /**< Mixer Control, offset: 0x48 */
  uint8_t RESERVED_0[4];
  __O  uint32_t FORCE_EVENT;                       /**< Force Event, offset: 0x50 */
  __I  uint32_t ADMA_ERR_STATUS;                   /**< ADMA Error Status, offset: 0x54 */
  __IO uint32_t ADMA_SYS_ADDR;                     /**< ADMA System Address, offset: 0x58 */
  uint8_t RESERVED_1[4];
  __IO uint32_t DLL_CTRL;                          /**< DLL (Delay Line) Control, offset: 0x60 */
  __I  uint32_t DLL_STATUS;                        /**< DLL Status, offset: 0x64 */
  __IO uint32_t CLK_TUNE_CTRL_STATUS;              /**< CLK Tuning Control and Status, offset: 0x68 */
  uint8_t RESERVED_2[4];
  __IO uint32_t STROBE_DLL_CTRL;                   /**< Strobe DLL control, offset: 0x70 */
  __I  uint32_t STROBE_DLL_STATUS;                 /**< Strobe DLL status, offset: 0x74 */
  uint8_t RESERVED_3[72];
  __IO uint32_t VEND_SPEC;                         /**< Vendor Specific Register, offset: 0xC0 */
  __IO uint32_t MMC_BOOT;                          /**< MMC Boot, offset: 0xC4 */
  __IO uint32_t VEND_SPEC2;                        /**< Vendor Specific 2 Register, offset: 0xC8 */
  __IO uint32_t TUNING_CTRL;                       /**< Tuning Control, offset: 0xCC */
  uint8_t RESERVED_4[48];
       uint32_t CQE;                               /**< Command Queue, offset: 0x100 */
} uSDHC_Type, *uSDHC_MemMapPtr;

/** Number of instances of the uSDHC module. */
#define uSDHC_INSTANCE_COUNT                     (1u)

/* uSDHC - Peripheral instance base addresses */
/** Peripheral uSDHC base address */
#define uSDHC_BASE                               (0x402F0000u)
/** Peripheral uSDHC base pointer */
#define uSDHC                                    ((uSDHC_Type *)uSDHC_BASE)
/** Array initializer of uSDHC peripheral base addresses */
#define uSDHC_BASE_ADDRS                         { uSDHC_BASE }
/** Array initializer of uSDHC peripheral base pointers */
#define uSDHC_BASE_PTRS                          { uSDHC }
/** Interrupt vectors for the uSDHC peripheral type */
#define uSDHC_IRQS                               { USDHC_IRQn }

/* ----------------------------------------------------------------------------
   -- uSDHC Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup uSDHC_Register_Masks uSDHC Register Masks
 * @{
 */

/*! @name DS_ADDR - DMA System Address */
/*! @{ */
#define uSDHC_DS_ADDR_DS_ADDR_MASK               (0xFFFFFFFFU)
#define uSDHC_DS_ADDR_DS_ADDR_SHIFT              (0U)
#define uSDHC_DS_ADDR_DS_ADDR_WIDTH              (32U)
#define uSDHC_DS_ADDR_DS_ADDR(x)                 (((uint32_t)(((uint32_t)(x)) << uSDHC_DS_ADDR_DS_ADDR_SHIFT)) & uSDHC_DS_ADDR_DS_ADDR_MASK)
/*! @} */

/*! @name BLK_ATT - Block Attributes */
/*! @{ */
#define uSDHC_BLK_ATT_BLKSIZE_MASK               (0x1FFFU)
#define uSDHC_BLK_ATT_BLKSIZE_SHIFT              (0U)
#define uSDHC_BLK_ATT_BLKSIZE_WIDTH              (13U)
#define uSDHC_BLK_ATT_BLKSIZE(x)                 (((uint32_t)(((uint32_t)(x)) << uSDHC_BLK_ATT_BLKSIZE_SHIFT)) & uSDHC_BLK_ATT_BLKSIZE_MASK)
#define uSDHC_BLK_ATT_BLKCNT_MASK                (0xFFFF0000U)
#define uSDHC_BLK_ATT_BLKCNT_SHIFT               (16U)
#define uSDHC_BLK_ATT_BLKCNT_WIDTH               (16U)
#define uSDHC_BLK_ATT_BLKCNT(x)                  (((uint32_t)(((uint32_t)(x)) << uSDHC_BLK_ATT_BLKCNT_SHIFT)) & uSDHC_BLK_ATT_BLKCNT_MASK)
/*! @} */

/*! @name CMD_ARG - Command Argument */
/*! @{ */
#define uSDHC_CMD_ARG_CMDARG_MASK                (0xFFFFFFFFU)
#define uSDHC_CMD_ARG_CMDARG_SHIFT               (0U)
#define uSDHC_CMD_ARG_CMDARG_WIDTH               (32U)
#define uSDHC_CMD_ARG_CMDARG(x)                  (((uint32_t)(((uint32_t)(x)) << uSDHC_CMD_ARG_CMDARG_SHIFT)) & uSDHC_CMD_ARG_CMDARG_MASK)
/*! @} */

/*! @name CMD_XFR_TYP - Command Transfer Type */
/*! @{ */
#define uSDHC_CMD_XFR_TYP_RSPTYP_MASK            (0x30000U)
#define uSDHC_CMD_XFR_TYP_RSPTYP_SHIFT           (16U)
#define uSDHC_CMD_XFR_TYP_RSPTYP_WIDTH           (2U)
#define uSDHC_CMD_XFR_TYP_RSPTYP(x)              (((uint32_t)(((uint32_t)(x)) << uSDHC_CMD_XFR_TYP_RSPTYP_SHIFT)) & uSDHC_CMD_XFR_TYP_RSPTYP_MASK)
#define uSDHC_CMD_XFR_TYP_CCCEN_MASK             (0x80000U)
#define uSDHC_CMD_XFR_TYP_CCCEN_SHIFT            (19U)
#define uSDHC_CMD_XFR_TYP_CCCEN_WIDTH            (1U)
#define uSDHC_CMD_XFR_TYP_CCCEN(x)               (((uint32_t)(((uint32_t)(x)) << uSDHC_CMD_XFR_TYP_CCCEN_SHIFT)) & uSDHC_CMD_XFR_TYP_CCCEN_MASK)
#define uSDHC_CMD_XFR_TYP_CICEN_MASK             (0x100000U)
#define uSDHC_CMD_XFR_TYP_CICEN_SHIFT            (20U)
#define uSDHC_CMD_XFR_TYP_CICEN_WIDTH            (1U)
#define uSDHC_CMD_XFR_TYP_CICEN(x)               (((uint32_t)(((uint32_t)(x)) << uSDHC_CMD_XFR_TYP_CICEN_SHIFT)) & uSDHC_CMD_XFR_TYP_CICEN_MASK)
#define uSDHC_CMD_XFR_TYP_DPSEL_MASK             (0x200000U)
#define uSDHC_CMD_XFR_TYP_DPSEL_SHIFT            (21U)
#define uSDHC_CMD_XFR_TYP_DPSEL_WIDTH            (1U)
#define uSDHC_CMD_XFR_TYP_DPSEL(x)               (((uint32_t)(((uint32_t)(x)) << uSDHC_CMD_XFR_TYP_DPSEL_SHIFT)) & uSDHC_CMD_XFR_TYP_DPSEL_MASK)
#define uSDHC_CMD_XFR_TYP_CMDTYP_MASK            (0xC00000U)
#define uSDHC_CMD_XFR_TYP_CMDTYP_SHIFT           (22U)
#define uSDHC_CMD_XFR_TYP_CMDTYP_WIDTH           (2U)
#define uSDHC_CMD_XFR_TYP_CMDTYP(x)              (((uint32_t)(((uint32_t)(x)) << uSDHC_CMD_XFR_TYP_CMDTYP_SHIFT)) & uSDHC_CMD_XFR_TYP_CMDTYP_MASK)
#define uSDHC_CMD_XFR_TYP_CMDINX_MASK            (0x3F000000U)
#define uSDHC_CMD_XFR_TYP_CMDINX_SHIFT           (24U)
#define uSDHC_CMD_XFR_TYP_CMDINX_WIDTH           (6U)
#define uSDHC_CMD_XFR_TYP_CMDINX(x)              (((uint32_t)(((uint32_t)(x)) << uSDHC_CMD_XFR_TYP_CMDINX_SHIFT)) & uSDHC_CMD_XFR_TYP_CMDINX_MASK)
/*! @} */

/*! @name CMD_RSP0 - Command Response0 */
/*! @{ */
#define uSDHC_CMD_RSP0_CMDRSP0_MASK              (0xFFFFFFFFU)
#define uSDHC_CMD_RSP0_CMDRSP0_SHIFT             (0U)
#define uSDHC_CMD_RSP0_CMDRSP0_WIDTH             (32U)
#define uSDHC_CMD_RSP0_CMDRSP0(x)                (((uint32_t)(((uint32_t)(x)) << uSDHC_CMD_RSP0_CMDRSP0_SHIFT)) & uSDHC_CMD_RSP0_CMDRSP0_MASK)
/*! @} */

/*! @name CMD_RSP1 - Command Response1 */
/*! @{ */
#define uSDHC_CMD_RSP1_CMDRSP1_MASK              (0xFFFFFFFFU)
#define uSDHC_CMD_RSP1_CMDRSP1_SHIFT             (0U)
#define uSDHC_CMD_RSP1_CMDRSP1_WIDTH             (32U)
#define uSDHC_CMD_RSP1_CMDRSP1(x)                (((uint32_t)(((uint32_t)(x)) << uSDHC_CMD_RSP1_CMDRSP1_SHIFT)) & uSDHC_CMD_RSP1_CMDRSP1_MASK)
/*! @} */

/*! @name CMD_RSP2 - Command Response2 */
/*! @{ */
#define uSDHC_CMD_RSP2_CMDRSP2_MASK              (0xFFFFFFFFU)
#define uSDHC_CMD_RSP2_CMDRSP2_SHIFT             (0U)
#define uSDHC_CMD_RSP2_CMDRSP2_WIDTH             (32U)
#define uSDHC_CMD_RSP2_CMDRSP2(x)                (((uint32_t)(((uint32_t)(x)) << uSDHC_CMD_RSP2_CMDRSP2_SHIFT)) & uSDHC_CMD_RSP2_CMDRSP2_MASK)
/*! @} */

/*! @name CMD_RSP3 - Command Response3 */
/*! @{ */
#define uSDHC_CMD_RSP3_CMDRSP3_MASK              (0xFFFFFFFFU)
#define uSDHC_CMD_RSP3_CMDRSP3_SHIFT             (0U)
#define uSDHC_CMD_RSP3_CMDRSP3_WIDTH             (32U)
#define uSDHC_CMD_RSP3_CMDRSP3(x)                (((uint32_t)(((uint32_t)(x)) << uSDHC_CMD_RSP3_CMDRSP3_SHIFT)) & uSDHC_CMD_RSP3_CMDRSP3_MASK)
/*! @} */

/*! @name DATA_BUFF_ACC_PORT - Data Buffer Access Port */
/*! @{ */
#define uSDHC_DATA_BUFF_ACC_PORT_DATCONT_MASK    (0xFFFFFFFFU)
#define uSDHC_DATA_BUFF_ACC_PORT_DATCONT_SHIFT   (0U)
#define uSDHC_DATA_BUFF_ACC_PORT_DATCONT_WIDTH   (32U)
#define uSDHC_DATA_BUFF_ACC_PORT_DATCONT(x)      (((uint32_t)(((uint32_t)(x)) << uSDHC_DATA_BUFF_ACC_PORT_DATCONT_SHIFT)) & uSDHC_DATA_BUFF_ACC_PORT_DATCONT_MASK)
/*! @} */

/*! @name PRES_STATE - Present State */
/*! @{ */
#define uSDHC_PRES_STATE_CIHB_MASK               (0x1U)
#define uSDHC_PRES_STATE_CIHB_SHIFT              (0U)
#define uSDHC_PRES_STATE_CIHB_WIDTH              (1U)
#define uSDHC_PRES_STATE_CIHB(x)                 (((uint32_t)(((uint32_t)(x)) << uSDHC_PRES_STATE_CIHB_SHIFT)) & uSDHC_PRES_STATE_CIHB_MASK)
#define uSDHC_PRES_STATE_CDIHB_MASK              (0x2U)
#define uSDHC_PRES_STATE_CDIHB_SHIFT             (1U)
#define uSDHC_PRES_STATE_CDIHB_WIDTH             (1U)
#define uSDHC_PRES_STATE_CDIHB(x)                (((uint32_t)(((uint32_t)(x)) << uSDHC_PRES_STATE_CDIHB_SHIFT)) & uSDHC_PRES_STATE_CDIHB_MASK)
#define uSDHC_PRES_STATE_DLA_MASK                (0x4U)
#define uSDHC_PRES_STATE_DLA_SHIFT               (2U)
#define uSDHC_PRES_STATE_DLA_WIDTH               (1U)
#define uSDHC_PRES_STATE_DLA(x)                  (((uint32_t)(((uint32_t)(x)) << uSDHC_PRES_STATE_DLA_SHIFT)) & uSDHC_PRES_STATE_DLA_MASK)
#define uSDHC_PRES_STATE_SDSTB_MASK              (0x8U)
#define uSDHC_PRES_STATE_SDSTB_SHIFT             (3U)
#define uSDHC_PRES_STATE_SDSTB_WIDTH             (1U)
#define uSDHC_PRES_STATE_SDSTB(x)                (((uint32_t)(((uint32_t)(x)) << uSDHC_PRES_STATE_SDSTB_SHIFT)) & uSDHC_PRES_STATE_SDSTB_MASK)
#define uSDHC_PRES_STATE_IPGOFF_MASK             (0x10U)
#define uSDHC_PRES_STATE_IPGOFF_SHIFT            (4U)
#define uSDHC_PRES_STATE_IPGOFF_WIDTH            (1U)
#define uSDHC_PRES_STATE_IPGOFF(x)               (((uint32_t)(((uint32_t)(x)) << uSDHC_PRES_STATE_IPGOFF_SHIFT)) & uSDHC_PRES_STATE_IPGOFF_MASK)
#define uSDHC_PRES_STATE_HCKOFF_MASK             (0x20U)
#define uSDHC_PRES_STATE_HCKOFF_SHIFT            (5U)
#define uSDHC_PRES_STATE_HCKOFF_WIDTH            (1U)
#define uSDHC_PRES_STATE_HCKOFF(x)               (((uint32_t)(((uint32_t)(x)) << uSDHC_PRES_STATE_HCKOFF_SHIFT)) & uSDHC_PRES_STATE_HCKOFF_MASK)
#define uSDHC_PRES_STATE_PEROFF_MASK             (0x40U)
#define uSDHC_PRES_STATE_PEROFF_SHIFT            (6U)
#define uSDHC_PRES_STATE_PEROFF_WIDTH            (1U)
#define uSDHC_PRES_STATE_PEROFF(x)               (((uint32_t)(((uint32_t)(x)) << uSDHC_PRES_STATE_PEROFF_SHIFT)) & uSDHC_PRES_STATE_PEROFF_MASK)
#define uSDHC_PRES_STATE_SDOFF_MASK              (0x80U)
#define uSDHC_PRES_STATE_SDOFF_SHIFT             (7U)
#define uSDHC_PRES_STATE_SDOFF_WIDTH             (1U)
#define uSDHC_PRES_STATE_SDOFF(x)                (((uint32_t)(((uint32_t)(x)) << uSDHC_PRES_STATE_SDOFF_SHIFT)) & uSDHC_PRES_STATE_SDOFF_MASK)
#define uSDHC_PRES_STATE_WTA_MASK                (0x100U)
#define uSDHC_PRES_STATE_WTA_SHIFT               (8U)
#define uSDHC_PRES_STATE_WTA_WIDTH               (1U)
#define uSDHC_PRES_STATE_WTA(x)                  (((uint32_t)(((uint32_t)(x)) << uSDHC_PRES_STATE_WTA_SHIFT)) & uSDHC_PRES_STATE_WTA_MASK)
#define uSDHC_PRES_STATE_RTA_MASK                (0x200U)
#define uSDHC_PRES_STATE_RTA_SHIFT               (9U)
#define uSDHC_PRES_STATE_RTA_WIDTH               (1U)
#define uSDHC_PRES_STATE_RTA(x)                  (((uint32_t)(((uint32_t)(x)) << uSDHC_PRES_STATE_RTA_SHIFT)) & uSDHC_PRES_STATE_RTA_MASK)
#define uSDHC_PRES_STATE_BWEN_MASK               (0x400U)
#define uSDHC_PRES_STATE_BWEN_SHIFT              (10U)
#define uSDHC_PRES_STATE_BWEN_WIDTH              (1U)
#define uSDHC_PRES_STATE_BWEN(x)                 (((uint32_t)(((uint32_t)(x)) << uSDHC_PRES_STATE_BWEN_SHIFT)) & uSDHC_PRES_STATE_BWEN_MASK)
#define uSDHC_PRES_STATE_BREN_MASK               (0x800U)
#define uSDHC_PRES_STATE_BREN_SHIFT              (11U)
#define uSDHC_PRES_STATE_BREN_WIDTH              (1U)
#define uSDHC_PRES_STATE_BREN(x)                 (((uint32_t)(((uint32_t)(x)) << uSDHC_PRES_STATE_BREN_SHIFT)) & uSDHC_PRES_STATE_BREN_MASK)
#define uSDHC_PRES_STATE_RTR_MASK                (0x1000U)
#define uSDHC_PRES_STATE_RTR_SHIFT               (12U)
#define uSDHC_PRES_STATE_RTR_WIDTH               (1U)
#define uSDHC_PRES_STATE_RTR(x)                  (((uint32_t)(((uint32_t)(x)) << uSDHC_PRES_STATE_RTR_SHIFT)) & uSDHC_PRES_STATE_RTR_MASK)
#define uSDHC_PRES_STATE_TSCD_MASK               (0x8000U)
#define uSDHC_PRES_STATE_TSCD_SHIFT              (15U)
#define uSDHC_PRES_STATE_TSCD_WIDTH              (1U)
#define uSDHC_PRES_STATE_TSCD(x)                 (((uint32_t)(((uint32_t)(x)) << uSDHC_PRES_STATE_TSCD_SHIFT)) & uSDHC_PRES_STATE_TSCD_MASK)
#define uSDHC_PRES_STATE_CINST_MASK              (0x10000U)
#define uSDHC_PRES_STATE_CINST_SHIFT             (16U)
#define uSDHC_PRES_STATE_CINST_WIDTH             (1U)
#define uSDHC_PRES_STATE_CINST(x)                (((uint32_t)(((uint32_t)(x)) << uSDHC_PRES_STATE_CINST_SHIFT)) & uSDHC_PRES_STATE_CINST_MASK)
#define uSDHC_PRES_STATE_CDPL_MASK               (0x40000U)
#define uSDHC_PRES_STATE_CDPL_SHIFT              (18U)
#define uSDHC_PRES_STATE_CDPL_WIDTH              (1U)
#define uSDHC_PRES_STATE_CDPL(x)                 (((uint32_t)(((uint32_t)(x)) << uSDHC_PRES_STATE_CDPL_SHIFT)) & uSDHC_PRES_STATE_CDPL_MASK)
#define uSDHC_PRES_STATE_WPSPL_MASK              (0x80000U)
#define uSDHC_PRES_STATE_WPSPL_SHIFT             (19U)
#define uSDHC_PRES_STATE_WPSPL_WIDTH             (1U)
#define uSDHC_PRES_STATE_WPSPL(x)                (((uint32_t)(((uint32_t)(x)) << uSDHC_PRES_STATE_WPSPL_SHIFT)) & uSDHC_PRES_STATE_WPSPL_MASK)
#define uSDHC_PRES_STATE_CLSL_MASK               (0x800000U)
#define uSDHC_PRES_STATE_CLSL_SHIFT              (23U)
#define uSDHC_PRES_STATE_CLSL_WIDTH              (1U)
#define uSDHC_PRES_STATE_CLSL(x)                 (((uint32_t)(((uint32_t)(x)) << uSDHC_PRES_STATE_CLSL_SHIFT)) & uSDHC_PRES_STATE_CLSL_MASK)
#define uSDHC_PRES_STATE_DLSL_MASK               (0xFF000000U)
#define uSDHC_PRES_STATE_DLSL_SHIFT              (24U)
#define uSDHC_PRES_STATE_DLSL_WIDTH              (8U)
#define uSDHC_PRES_STATE_DLSL(x)                 (((uint32_t)(((uint32_t)(x)) << uSDHC_PRES_STATE_DLSL_SHIFT)) & uSDHC_PRES_STATE_DLSL_MASK)
/*! @} */

/*! @name PROT_CTRL - Protocol Control */
/*! @{ */
#define uSDHC_PROT_CTRL_LCTL_MASK                (0x1U)
#define uSDHC_PROT_CTRL_LCTL_SHIFT               (0U)
#define uSDHC_PROT_CTRL_LCTL_WIDTH               (1U)
#define uSDHC_PROT_CTRL_LCTL(x)                  (((uint32_t)(((uint32_t)(x)) << uSDHC_PROT_CTRL_LCTL_SHIFT)) & uSDHC_PROT_CTRL_LCTL_MASK)
#define uSDHC_PROT_CTRL_DTW_MASK                 (0x6U)
#define uSDHC_PROT_CTRL_DTW_SHIFT                (1U)
#define uSDHC_PROT_CTRL_DTW_WIDTH                (2U)
#define uSDHC_PROT_CTRL_DTW(x)                   (((uint32_t)(((uint32_t)(x)) << uSDHC_PROT_CTRL_DTW_SHIFT)) & uSDHC_PROT_CTRL_DTW_MASK)
#define uSDHC_PROT_CTRL_D3CD_MASK                (0x8U)
#define uSDHC_PROT_CTRL_D3CD_SHIFT               (3U)
#define uSDHC_PROT_CTRL_D3CD_WIDTH               (1U)
#define uSDHC_PROT_CTRL_D3CD(x)                  (((uint32_t)(((uint32_t)(x)) << uSDHC_PROT_CTRL_D3CD_SHIFT)) & uSDHC_PROT_CTRL_D3CD_MASK)
#define uSDHC_PROT_CTRL_EMODE_MASK               (0x30U)
#define uSDHC_PROT_CTRL_EMODE_SHIFT              (4U)
#define uSDHC_PROT_CTRL_EMODE_WIDTH              (2U)
#define uSDHC_PROT_CTRL_EMODE(x)                 (((uint32_t)(((uint32_t)(x)) << uSDHC_PROT_CTRL_EMODE_SHIFT)) & uSDHC_PROT_CTRL_EMODE_MASK)
#define uSDHC_PROT_CTRL_CDTL_MASK                (0x40U)
#define uSDHC_PROT_CTRL_CDTL_SHIFT               (6U)
#define uSDHC_PROT_CTRL_CDTL_WIDTH               (1U)
#define uSDHC_PROT_CTRL_CDTL(x)                  (((uint32_t)(((uint32_t)(x)) << uSDHC_PROT_CTRL_CDTL_SHIFT)) & uSDHC_PROT_CTRL_CDTL_MASK)
#define uSDHC_PROT_CTRL_CDSS_MASK                (0x80U)
#define uSDHC_PROT_CTRL_CDSS_SHIFT               (7U)
#define uSDHC_PROT_CTRL_CDSS_WIDTH               (1U)
#define uSDHC_PROT_CTRL_CDSS(x)                  (((uint32_t)(((uint32_t)(x)) << uSDHC_PROT_CTRL_CDSS_SHIFT)) & uSDHC_PROT_CTRL_CDSS_MASK)
#define uSDHC_PROT_CTRL_DMASEL_MASK              (0x300U)
#define uSDHC_PROT_CTRL_DMASEL_SHIFT             (8U)
#define uSDHC_PROT_CTRL_DMASEL_WIDTH             (2U)
#define uSDHC_PROT_CTRL_DMASEL(x)                (((uint32_t)(((uint32_t)(x)) << uSDHC_PROT_CTRL_DMASEL_SHIFT)) & uSDHC_PROT_CTRL_DMASEL_MASK)
#define uSDHC_PROT_CTRL_SABGREQ_MASK             (0x10000U)
#define uSDHC_PROT_CTRL_SABGREQ_SHIFT            (16U)
#define uSDHC_PROT_CTRL_SABGREQ_WIDTH            (1U)
#define uSDHC_PROT_CTRL_SABGREQ(x)               (((uint32_t)(((uint32_t)(x)) << uSDHC_PROT_CTRL_SABGREQ_SHIFT)) & uSDHC_PROT_CTRL_SABGREQ_MASK)
#define uSDHC_PROT_CTRL_CREQ_MASK                (0x20000U)
#define uSDHC_PROT_CTRL_CREQ_SHIFT               (17U)
#define uSDHC_PROT_CTRL_CREQ_WIDTH               (1U)
#define uSDHC_PROT_CTRL_CREQ(x)                  (((uint32_t)(((uint32_t)(x)) << uSDHC_PROT_CTRL_CREQ_SHIFT)) & uSDHC_PROT_CTRL_CREQ_MASK)
#define uSDHC_PROT_CTRL_RWCTL_MASK               (0x40000U)
#define uSDHC_PROT_CTRL_RWCTL_SHIFT              (18U)
#define uSDHC_PROT_CTRL_RWCTL_WIDTH              (1U)
#define uSDHC_PROT_CTRL_RWCTL(x)                 (((uint32_t)(((uint32_t)(x)) << uSDHC_PROT_CTRL_RWCTL_SHIFT)) & uSDHC_PROT_CTRL_RWCTL_MASK)
#define uSDHC_PROT_CTRL_IABG_MASK                (0x80000U)
#define uSDHC_PROT_CTRL_IABG_SHIFT               (19U)
#define uSDHC_PROT_CTRL_IABG_WIDTH               (1U)
#define uSDHC_PROT_CTRL_IABG(x)                  (((uint32_t)(((uint32_t)(x)) << uSDHC_PROT_CTRL_IABG_SHIFT)) & uSDHC_PROT_CTRL_IABG_MASK)
#define uSDHC_PROT_CTRL_RD_DONE_NO_8CLK_MASK     (0x100000U)
#define uSDHC_PROT_CTRL_RD_DONE_NO_8CLK_SHIFT    (20U)
#define uSDHC_PROT_CTRL_RD_DONE_NO_8CLK_WIDTH    (1U)
#define uSDHC_PROT_CTRL_RD_DONE_NO_8CLK(x)       (((uint32_t)(((uint32_t)(x)) << uSDHC_PROT_CTRL_RD_DONE_NO_8CLK_SHIFT)) & uSDHC_PROT_CTRL_RD_DONE_NO_8CLK_MASK)
#define uSDHC_PROT_CTRL_WECINT_MASK              (0x1000000U)
#define uSDHC_PROT_CTRL_WECINT_SHIFT             (24U)
#define uSDHC_PROT_CTRL_WECINT_WIDTH             (1U)
#define uSDHC_PROT_CTRL_WECINT(x)                (((uint32_t)(((uint32_t)(x)) << uSDHC_PROT_CTRL_WECINT_SHIFT)) & uSDHC_PROT_CTRL_WECINT_MASK)
#define uSDHC_PROT_CTRL_WECINS_MASK              (0x2000000U)
#define uSDHC_PROT_CTRL_WECINS_SHIFT             (25U)
#define uSDHC_PROT_CTRL_WECINS_WIDTH             (1U)
#define uSDHC_PROT_CTRL_WECINS(x)                (((uint32_t)(((uint32_t)(x)) << uSDHC_PROT_CTRL_WECINS_SHIFT)) & uSDHC_PROT_CTRL_WECINS_MASK)
#define uSDHC_PROT_CTRL_WECRM_MASK               (0x4000000U)
#define uSDHC_PROT_CTRL_WECRM_SHIFT              (26U)
#define uSDHC_PROT_CTRL_WECRM_WIDTH              (1U)
#define uSDHC_PROT_CTRL_WECRM(x)                 (((uint32_t)(((uint32_t)(x)) << uSDHC_PROT_CTRL_WECRM_SHIFT)) & uSDHC_PROT_CTRL_WECRM_MASK)
#define uSDHC_PROT_CTRL_NON_EXACT_BLK_RD_MASK    (0x40000000U)
#define uSDHC_PROT_CTRL_NON_EXACT_BLK_RD_SHIFT   (30U)
#define uSDHC_PROT_CTRL_NON_EXACT_BLK_RD_WIDTH   (1U)
#define uSDHC_PROT_CTRL_NON_EXACT_BLK_RD(x)      (((uint32_t)(((uint32_t)(x)) << uSDHC_PROT_CTRL_NON_EXACT_BLK_RD_SHIFT)) & uSDHC_PROT_CTRL_NON_EXACT_BLK_RD_MASK)
/*! @} */

/*! @name SYS_CTRL - System Control */
/*! @{ */
#define uSDHC_SYS_CTRL_DVS_MASK                  (0xF0U)
#define uSDHC_SYS_CTRL_DVS_SHIFT                 (4U)
#define uSDHC_SYS_CTRL_DVS_WIDTH                 (4U)
#define uSDHC_SYS_CTRL_DVS(x)                    (((uint32_t)(((uint32_t)(x)) << uSDHC_SYS_CTRL_DVS_SHIFT)) & uSDHC_SYS_CTRL_DVS_MASK)
#define uSDHC_SYS_CTRL_SDCLKFS_MASK              (0xFF00U)
#define uSDHC_SYS_CTRL_SDCLKFS_SHIFT             (8U)
#define uSDHC_SYS_CTRL_SDCLKFS_WIDTH             (8U)
#define uSDHC_SYS_CTRL_SDCLKFS(x)                (((uint32_t)(((uint32_t)(x)) << uSDHC_SYS_CTRL_SDCLKFS_SHIFT)) & uSDHC_SYS_CTRL_SDCLKFS_MASK)
#define uSDHC_SYS_CTRL_DTOCV_MASK                (0xF0000U)
#define uSDHC_SYS_CTRL_DTOCV_SHIFT               (16U)
#define uSDHC_SYS_CTRL_DTOCV_WIDTH               (4U)
#define uSDHC_SYS_CTRL_DTOCV(x)                  (((uint32_t)(((uint32_t)(x)) << uSDHC_SYS_CTRL_DTOCV_SHIFT)) & uSDHC_SYS_CTRL_DTOCV_MASK)
#define uSDHC_SYS_CTRL_IPP_RST_N_MASK            (0x800000U)
#define uSDHC_SYS_CTRL_IPP_RST_N_SHIFT           (23U)
#define uSDHC_SYS_CTRL_IPP_RST_N_WIDTH           (1U)
#define uSDHC_SYS_CTRL_IPP_RST_N(x)              (((uint32_t)(((uint32_t)(x)) << uSDHC_SYS_CTRL_IPP_RST_N_SHIFT)) & uSDHC_SYS_CTRL_IPP_RST_N_MASK)
#define uSDHC_SYS_CTRL_RSTA_MASK                 (0x1000000U)
#define uSDHC_SYS_CTRL_RSTA_SHIFT                (24U)
#define uSDHC_SYS_CTRL_RSTA_WIDTH                (1U)
#define uSDHC_SYS_CTRL_RSTA(x)                   (((uint32_t)(((uint32_t)(x)) << uSDHC_SYS_CTRL_RSTA_SHIFT)) & uSDHC_SYS_CTRL_RSTA_MASK)
#define uSDHC_SYS_CTRL_RSTC_MASK                 (0x2000000U)
#define uSDHC_SYS_CTRL_RSTC_SHIFT                (25U)
#define uSDHC_SYS_CTRL_RSTC_WIDTH                (1U)
#define uSDHC_SYS_CTRL_RSTC(x)                   (((uint32_t)(((uint32_t)(x)) << uSDHC_SYS_CTRL_RSTC_SHIFT)) & uSDHC_SYS_CTRL_RSTC_MASK)
#define uSDHC_SYS_CTRL_RSTD_MASK                 (0x4000000U)
#define uSDHC_SYS_CTRL_RSTD_SHIFT                (26U)
#define uSDHC_SYS_CTRL_RSTD_WIDTH                (1U)
#define uSDHC_SYS_CTRL_RSTD(x)                   (((uint32_t)(((uint32_t)(x)) << uSDHC_SYS_CTRL_RSTD_SHIFT)) & uSDHC_SYS_CTRL_RSTD_MASK)
#define uSDHC_SYS_CTRL_INITA_MASK                (0x8000000U)
#define uSDHC_SYS_CTRL_INITA_SHIFT               (27U)
#define uSDHC_SYS_CTRL_INITA_WIDTH               (1U)
#define uSDHC_SYS_CTRL_INITA(x)                  (((uint32_t)(((uint32_t)(x)) << uSDHC_SYS_CTRL_INITA_SHIFT)) & uSDHC_SYS_CTRL_INITA_MASK)
#define uSDHC_SYS_CTRL_RSTT_MASK                 (0x10000000U)
#define uSDHC_SYS_CTRL_RSTT_SHIFT                (28U)
#define uSDHC_SYS_CTRL_RSTT_WIDTH                (1U)
#define uSDHC_SYS_CTRL_RSTT(x)                   (((uint32_t)(((uint32_t)(x)) << uSDHC_SYS_CTRL_RSTT_SHIFT)) & uSDHC_SYS_CTRL_RSTT_MASK)
/*! @} */

/*! @name INT_STATUS - Interrupt Status */
/*! @{ */
#define uSDHC_INT_STATUS_CC_MASK                 (0x1U)
#define uSDHC_INT_STATUS_CC_SHIFT                (0U)
#define uSDHC_INT_STATUS_CC_WIDTH                (1U)
#define uSDHC_INT_STATUS_CC(x)                   (((uint32_t)(((uint32_t)(x)) << uSDHC_INT_STATUS_CC_SHIFT)) & uSDHC_INT_STATUS_CC_MASK)
#define uSDHC_INT_STATUS_TC_MASK                 (0x2U)
#define uSDHC_INT_STATUS_TC_SHIFT                (1U)
#define uSDHC_INT_STATUS_TC_WIDTH                (1U)
#define uSDHC_INT_STATUS_TC(x)                   (((uint32_t)(((uint32_t)(x)) << uSDHC_INT_STATUS_TC_SHIFT)) & uSDHC_INT_STATUS_TC_MASK)
#define uSDHC_INT_STATUS_BGE_MASK                (0x4U)
#define uSDHC_INT_STATUS_BGE_SHIFT               (2U)
#define uSDHC_INT_STATUS_BGE_WIDTH               (1U)
#define uSDHC_INT_STATUS_BGE(x)                  (((uint32_t)(((uint32_t)(x)) << uSDHC_INT_STATUS_BGE_SHIFT)) & uSDHC_INT_STATUS_BGE_MASK)
#define uSDHC_INT_STATUS_DINT_MASK               (0x8U)
#define uSDHC_INT_STATUS_DINT_SHIFT              (3U)
#define uSDHC_INT_STATUS_DINT_WIDTH              (1U)
#define uSDHC_INT_STATUS_DINT(x)                 (((uint32_t)(((uint32_t)(x)) << uSDHC_INT_STATUS_DINT_SHIFT)) & uSDHC_INT_STATUS_DINT_MASK)
#define uSDHC_INT_STATUS_BWR_MASK                (0x10U)
#define uSDHC_INT_STATUS_BWR_SHIFT               (4U)
#define uSDHC_INT_STATUS_BWR_WIDTH               (1U)
#define uSDHC_INT_STATUS_BWR(x)                  (((uint32_t)(((uint32_t)(x)) << uSDHC_INT_STATUS_BWR_SHIFT)) & uSDHC_INT_STATUS_BWR_MASK)
#define uSDHC_INT_STATUS_BRR_MASK                (0x20U)
#define uSDHC_INT_STATUS_BRR_SHIFT               (5U)
#define uSDHC_INT_STATUS_BRR_WIDTH               (1U)
#define uSDHC_INT_STATUS_BRR(x)                  (((uint32_t)(((uint32_t)(x)) << uSDHC_INT_STATUS_BRR_SHIFT)) & uSDHC_INT_STATUS_BRR_MASK)
#define uSDHC_INT_STATUS_CINS_MASK               (0x40U)
#define uSDHC_INT_STATUS_CINS_SHIFT              (6U)
#define uSDHC_INT_STATUS_CINS_WIDTH              (1U)
#define uSDHC_INT_STATUS_CINS(x)                 (((uint32_t)(((uint32_t)(x)) << uSDHC_INT_STATUS_CINS_SHIFT)) & uSDHC_INT_STATUS_CINS_MASK)
#define uSDHC_INT_STATUS_CRM_MASK                (0x80U)
#define uSDHC_INT_STATUS_CRM_SHIFT               (7U)
#define uSDHC_INT_STATUS_CRM_WIDTH               (1U)
#define uSDHC_INT_STATUS_CRM(x)                  (((uint32_t)(((uint32_t)(x)) << uSDHC_INT_STATUS_CRM_SHIFT)) & uSDHC_INT_STATUS_CRM_MASK)
#define uSDHC_INT_STATUS_CINT_MASK               (0x100U)
#define uSDHC_INT_STATUS_CINT_SHIFT              (8U)
#define uSDHC_INT_STATUS_CINT_WIDTH              (1U)
#define uSDHC_INT_STATUS_CINT(x)                 (((uint32_t)(((uint32_t)(x)) << uSDHC_INT_STATUS_CINT_SHIFT)) & uSDHC_INT_STATUS_CINT_MASK)
#define uSDHC_INT_STATUS_RTE_MASK                (0x1000U)
#define uSDHC_INT_STATUS_RTE_SHIFT               (12U)
#define uSDHC_INT_STATUS_RTE_WIDTH               (1U)
#define uSDHC_INT_STATUS_RTE(x)                  (((uint32_t)(((uint32_t)(x)) << uSDHC_INT_STATUS_RTE_SHIFT)) & uSDHC_INT_STATUS_RTE_MASK)
#define uSDHC_INT_STATUS_TP_MASK                 (0x2000U)
#define uSDHC_INT_STATUS_TP_SHIFT                (13U)
#define uSDHC_INT_STATUS_TP_WIDTH                (1U)
#define uSDHC_INT_STATUS_TP(x)                   (((uint32_t)(((uint32_t)(x)) << uSDHC_INT_STATUS_TP_SHIFT)) & uSDHC_INT_STATUS_TP_MASK)
#define uSDHC_INT_STATUS_CQI_MASK                (0x4000U)
#define uSDHC_INT_STATUS_CQI_SHIFT               (14U)
#define uSDHC_INT_STATUS_CQI_WIDTH               (1U)
#define uSDHC_INT_STATUS_CQI(x)                  (((uint32_t)(((uint32_t)(x)) << uSDHC_INT_STATUS_CQI_SHIFT)) & uSDHC_INT_STATUS_CQI_MASK)
#define uSDHC_INT_STATUS_CTOE_MASK               (0x10000U)
#define uSDHC_INT_STATUS_CTOE_SHIFT              (16U)
#define uSDHC_INT_STATUS_CTOE_WIDTH              (1U)
#define uSDHC_INT_STATUS_CTOE(x)                 (((uint32_t)(((uint32_t)(x)) << uSDHC_INT_STATUS_CTOE_SHIFT)) & uSDHC_INT_STATUS_CTOE_MASK)
#define uSDHC_INT_STATUS_CCE_MASK                (0x20000U)
#define uSDHC_INT_STATUS_CCE_SHIFT               (17U)
#define uSDHC_INT_STATUS_CCE_WIDTH               (1U)
#define uSDHC_INT_STATUS_CCE(x)                  (((uint32_t)(((uint32_t)(x)) << uSDHC_INT_STATUS_CCE_SHIFT)) & uSDHC_INT_STATUS_CCE_MASK)
#define uSDHC_INT_STATUS_CEBE_MASK               (0x40000U)
#define uSDHC_INT_STATUS_CEBE_SHIFT              (18U)
#define uSDHC_INT_STATUS_CEBE_WIDTH              (1U)
#define uSDHC_INT_STATUS_CEBE(x)                 (((uint32_t)(((uint32_t)(x)) << uSDHC_INT_STATUS_CEBE_SHIFT)) & uSDHC_INT_STATUS_CEBE_MASK)
#define uSDHC_INT_STATUS_CIE_MASK                (0x80000U)
#define uSDHC_INT_STATUS_CIE_SHIFT               (19U)
#define uSDHC_INT_STATUS_CIE_WIDTH               (1U)
#define uSDHC_INT_STATUS_CIE(x)                  (((uint32_t)(((uint32_t)(x)) << uSDHC_INT_STATUS_CIE_SHIFT)) & uSDHC_INT_STATUS_CIE_MASK)
#define uSDHC_INT_STATUS_DTOE_MASK               (0x100000U)
#define uSDHC_INT_STATUS_DTOE_SHIFT              (20U)
#define uSDHC_INT_STATUS_DTOE_WIDTH              (1U)
#define uSDHC_INT_STATUS_DTOE(x)                 (((uint32_t)(((uint32_t)(x)) << uSDHC_INT_STATUS_DTOE_SHIFT)) & uSDHC_INT_STATUS_DTOE_MASK)
#define uSDHC_INT_STATUS_DCE_MASK                (0x200000U)
#define uSDHC_INT_STATUS_DCE_SHIFT               (21U)
#define uSDHC_INT_STATUS_DCE_WIDTH               (1U)
#define uSDHC_INT_STATUS_DCE(x)                  (((uint32_t)(((uint32_t)(x)) << uSDHC_INT_STATUS_DCE_SHIFT)) & uSDHC_INT_STATUS_DCE_MASK)
#define uSDHC_INT_STATUS_DEBE_MASK               (0x400000U)
#define uSDHC_INT_STATUS_DEBE_SHIFT              (22U)
#define uSDHC_INT_STATUS_DEBE_WIDTH              (1U)
#define uSDHC_INT_STATUS_DEBE(x)                 (((uint32_t)(((uint32_t)(x)) << uSDHC_INT_STATUS_DEBE_SHIFT)) & uSDHC_INT_STATUS_DEBE_MASK)
#define uSDHC_INT_STATUS_AC12E_MASK              (0x1000000U)
#define uSDHC_INT_STATUS_AC12E_SHIFT             (24U)
#define uSDHC_INT_STATUS_AC12E_WIDTH             (1U)
#define uSDHC_INT_STATUS_AC12E(x)                (((uint32_t)(((uint32_t)(x)) << uSDHC_INT_STATUS_AC12E_SHIFT)) & uSDHC_INT_STATUS_AC12E_MASK)
#define uSDHC_INT_STATUS_TNE_MASK                (0x4000000U)
#define uSDHC_INT_STATUS_TNE_SHIFT               (26U)
#define uSDHC_INT_STATUS_TNE_WIDTH               (1U)
#define uSDHC_INT_STATUS_TNE(x)                  (((uint32_t)(((uint32_t)(x)) << uSDHC_INT_STATUS_TNE_SHIFT)) & uSDHC_INT_STATUS_TNE_MASK)
#define uSDHC_INT_STATUS_DMAE_MASK               (0x10000000U)
#define uSDHC_INT_STATUS_DMAE_SHIFT              (28U)
#define uSDHC_INT_STATUS_DMAE_WIDTH              (1U)
#define uSDHC_INT_STATUS_DMAE(x)                 (((uint32_t)(((uint32_t)(x)) << uSDHC_INT_STATUS_DMAE_SHIFT)) & uSDHC_INT_STATUS_DMAE_MASK)
/*! @} */

/*! @name INT_STATUS_EN - Interrupt Status Enable */
/*! @{ */
#define uSDHC_INT_STATUS_EN_CCSEN_MASK           (0x1U)
#define uSDHC_INT_STATUS_EN_CCSEN_SHIFT          (0U)
#define uSDHC_INT_STATUS_EN_CCSEN_WIDTH          (1U)
#define uSDHC_INT_STATUS_EN_CCSEN(x)             (((uint32_t)(((uint32_t)(x)) << uSDHC_INT_STATUS_EN_CCSEN_SHIFT)) & uSDHC_INT_STATUS_EN_CCSEN_MASK)
#define uSDHC_INT_STATUS_EN_TCSEN_MASK           (0x2U)
#define uSDHC_INT_STATUS_EN_TCSEN_SHIFT          (1U)
#define uSDHC_INT_STATUS_EN_TCSEN_WIDTH          (1U)
#define uSDHC_INT_STATUS_EN_TCSEN(x)             (((uint32_t)(((uint32_t)(x)) << uSDHC_INT_STATUS_EN_TCSEN_SHIFT)) & uSDHC_INT_STATUS_EN_TCSEN_MASK)
#define uSDHC_INT_STATUS_EN_BGESEN_MASK          (0x4U)
#define uSDHC_INT_STATUS_EN_BGESEN_SHIFT         (2U)
#define uSDHC_INT_STATUS_EN_BGESEN_WIDTH         (1U)
#define uSDHC_INT_STATUS_EN_BGESEN(x)            (((uint32_t)(((uint32_t)(x)) << uSDHC_INT_STATUS_EN_BGESEN_SHIFT)) & uSDHC_INT_STATUS_EN_BGESEN_MASK)
#define uSDHC_INT_STATUS_EN_DINTSEN_MASK         (0x8U)
#define uSDHC_INT_STATUS_EN_DINTSEN_SHIFT        (3U)
#define uSDHC_INT_STATUS_EN_DINTSEN_WIDTH        (1U)
#define uSDHC_INT_STATUS_EN_DINTSEN(x)           (((uint32_t)(((uint32_t)(x)) << uSDHC_INT_STATUS_EN_DINTSEN_SHIFT)) & uSDHC_INT_STATUS_EN_DINTSEN_MASK)
#define uSDHC_INT_STATUS_EN_BWRSEN_MASK          (0x10U)
#define uSDHC_INT_STATUS_EN_BWRSEN_SHIFT         (4U)
#define uSDHC_INT_STATUS_EN_BWRSEN_WIDTH         (1U)
#define uSDHC_INT_STATUS_EN_BWRSEN(x)            (((uint32_t)(((uint32_t)(x)) << uSDHC_INT_STATUS_EN_BWRSEN_SHIFT)) & uSDHC_INT_STATUS_EN_BWRSEN_MASK)
#define uSDHC_INT_STATUS_EN_BRRSEN_MASK          (0x20U)
#define uSDHC_INT_STATUS_EN_BRRSEN_SHIFT         (5U)
#define uSDHC_INT_STATUS_EN_BRRSEN_WIDTH         (1U)
#define uSDHC_INT_STATUS_EN_BRRSEN(x)            (((uint32_t)(((uint32_t)(x)) << uSDHC_INT_STATUS_EN_BRRSEN_SHIFT)) & uSDHC_INT_STATUS_EN_BRRSEN_MASK)
#define uSDHC_INT_STATUS_EN_CINSSEN_MASK         (0x40U)
#define uSDHC_INT_STATUS_EN_CINSSEN_SHIFT        (6U)
#define uSDHC_INT_STATUS_EN_CINSSEN_WIDTH        (1U)
#define uSDHC_INT_STATUS_EN_CINSSEN(x)           (((uint32_t)(((uint32_t)(x)) << uSDHC_INT_STATUS_EN_CINSSEN_SHIFT)) & uSDHC_INT_STATUS_EN_CINSSEN_MASK)
#define uSDHC_INT_STATUS_EN_CRMSEN_MASK          (0x80U)
#define uSDHC_INT_STATUS_EN_CRMSEN_SHIFT         (7U)
#define uSDHC_INT_STATUS_EN_CRMSEN_WIDTH         (1U)
#define uSDHC_INT_STATUS_EN_CRMSEN(x)            (((uint32_t)(((uint32_t)(x)) << uSDHC_INT_STATUS_EN_CRMSEN_SHIFT)) & uSDHC_INT_STATUS_EN_CRMSEN_MASK)
#define uSDHC_INT_STATUS_EN_CINTSEN_MASK         (0x100U)
#define uSDHC_INT_STATUS_EN_CINTSEN_SHIFT        (8U)
#define uSDHC_INT_STATUS_EN_CINTSEN_WIDTH        (1U)
#define uSDHC_INT_STATUS_EN_CINTSEN(x)           (((uint32_t)(((uint32_t)(x)) << uSDHC_INT_STATUS_EN_CINTSEN_SHIFT)) & uSDHC_INT_STATUS_EN_CINTSEN_MASK)
#define uSDHC_INT_STATUS_EN_RTESEN_MASK          (0x1000U)
#define uSDHC_INT_STATUS_EN_RTESEN_SHIFT         (12U)
#define uSDHC_INT_STATUS_EN_RTESEN_WIDTH         (1U)
#define uSDHC_INT_STATUS_EN_RTESEN(x)            (((uint32_t)(((uint32_t)(x)) << uSDHC_INT_STATUS_EN_RTESEN_SHIFT)) & uSDHC_INT_STATUS_EN_RTESEN_MASK)
#define uSDHC_INT_STATUS_EN_TPSEN_MASK           (0x2000U)
#define uSDHC_INT_STATUS_EN_TPSEN_SHIFT          (13U)
#define uSDHC_INT_STATUS_EN_TPSEN_WIDTH          (1U)
#define uSDHC_INT_STATUS_EN_TPSEN(x)             (((uint32_t)(((uint32_t)(x)) << uSDHC_INT_STATUS_EN_TPSEN_SHIFT)) & uSDHC_INT_STATUS_EN_TPSEN_MASK)
#define uSDHC_INT_STATUS_EN_CQISEN_MASK          (0x4000U)
#define uSDHC_INT_STATUS_EN_CQISEN_SHIFT         (14U)
#define uSDHC_INT_STATUS_EN_CQISEN_WIDTH         (1U)
#define uSDHC_INT_STATUS_EN_CQISEN(x)            (((uint32_t)(((uint32_t)(x)) << uSDHC_INT_STATUS_EN_CQISEN_SHIFT)) & uSDHC_INT_STATUS_EN_CQISEN_MASK)
#define uSDHC_INT_STATUS_EN_CTOESEN_MASK         (0x10000U)
#define uSDHC_INT_STATUS_EN_CTOESEN_SHIFT        (16U)
#define uSDHC_INT_STATUS_EN_CTOESEN_WIDTH        (1U)
#define uSDHC_INT_STATUS_EN_CTOESEN(x)           (((uint32_t)(((uint32_t)(x)) << uSDHC_INT_STATUS_EN_CTOESEN_SHIFT)) & uSDHC_INT_STATUS_EN_CTOESEN_MASK)
#define uSDHC_INT_STATUS_EN_CCESEN_MASK          (0x20000U)
#define uSDHC_INT_STATUS_EN_CCESEN_SHIFT         (17U)
#define uSDHC_INT_STATUS_EN_CCESEN_WIDTH         (1U)
#define uSDHC_INT_STATUS_EN_CCESEN(x)            (((uint32_t)(((uint32_t)(x)) << uSDHC_INT_STATUS_EN_CCESEN_SHIFT)) & uSDHC_INT_STATUS_EN_CCESEN_MASK)
#define uSDHC_INT_STATUS_EN_CEBESEN_MASK         (0x40000U)
#define uSDHC_INT_STATUS_EN_CEBESEN_SHIFT        (18U)
#define uSDHC_INT_STATUS_EN_CEBESEN_WIDTH        (1U)
#define uSDHC_INT_STATUS_EN_CEBESEN(x)           (((uint32_t)(((uint32_t)(x)) << uSDHC_INT_STATUS_EN_CEBESEN_SHIFT)) & uSDHC_INT_STATUS_EN_CEBESEN_MASK)
#define uSDHC_INT_STATUS_EN_CIESEN_MASK          (0x80000U)
#define uSDHC_INT_STATUS_EN_CIESEN_SHIFT         (19U)
#define uSDHC_INT_STATUS_EN_CIESEN_WIDTH         (1U)
#define uSDHC_INT_STATUS_EN_CIESEN(x)            (((uint32_t)(((uint32_t)(x)) << uSDHC_INT_STATUS_EN_CIESEN_SHIFT)) & uSDHC_INT_STATUS_EN_CIESEN_MASK)
#define uSDHC_INT_STATUS_EN_DTOESEN_MASK         (0x100000U)
#define uSDHC_INT_STATUS_EN_DTOESEN_SHIFT        (20U)
#define uSDHC_INT_STATUS_EN_DTOESEN_WIDTH        (1U)
#define uSDHC_INT_STATUS_EN_DTOESEN(x)           (((uint32_t)(((uint32_t)(x)) << uSDHC_INT_STATUS_EN_DTOESEN_SHIFT)) & uSDHC_INT_STATUS_EN_DTOESEN_MASK)
#define uSDHC_INT_STATUS_EN_DCESEN_MASK          (0x200000U)
#define uSDHC_INT_STATUS_EN_DCESEN_SHIFT         (21U)
#define uSDHC_INT_STATUS_EN_DCESEN_WIDTH         (1U)
#define uSDHC_INT_STATUS_EN_DCESEN(x)            (((uint32_t)(((uint32_t)(x)) << uSDHC_INT_STATUS_EN_DCESEN_SHIFT)) & uSDHC_INT_STATUS_EN_DCESEN_MASK)
#define uSDHC_INT_STATUS_EN_DEBESEN_MASK         (0x400000U)
#define uSDHC_INT_STATUS_EN_DEBESEN_SHIFT        (22U)
#define uSDHC_INT_STATUS_EN_DEBESEN_WIDTH        (1U)
#define uSDHC_INT_STATUS_EN_DEBESEN(x)           (((uint32_t)(((uint32_t)(x)) << uSDHC_INT_STATUS_EN_DEBESEN_SHIFT)) & uSDHC_INT_STATUS_EN_DEBESEN_MASK)
#define uSDHC_INT_STATUS_EN_AC12ESEN_MASK        (0x1000000U)
#define uSDHC_INT_STATUS_EN_AC12ESEN_SHIFT       (24U)
#define uSDHC_INT_STATUS_EN_AC12ESEN_WIDTH       (1U)
#define uSDHC_INT_STATUS_EN_AC12ESEN(x)          (((uint32_t)(((uint32_t)(x)) << uSDHC_INT_STATUS_EN_AC12ESEN_SHIFT)) & uSDHC_INT_STATUS_EN_AC12ESEN_MASK)
#define uSDHC_INT_STATUS_EN_TNESEN_MASK          (0x4000000U)
#define uSDHC_INT_STATUS_EN_TNESEN_SHIFT         (26U)
#define uSDHC_INT_STATUS_EN_TNESEN_WIDTH         (1U)
#define uSDHC_INT_STATUS_EN_TNESEN(x)            (((uint32_t)(((uint32_t)(x)) << uSDHC_INT_STATUS_EN_TNESEN_SHIFT)) & uSDHC_INT_STATUS_EN_TNESEN_MASK)
#define uSDHC_INT_STATUS_EN_DMAESEN_MASK         (0x10000000U)
#define uSDHC_INT_STATUS_EN_DMAESEN_SHIFT        (28U)
#define uSDHC_INT_STATUS_EN_DMAESEN_WIDTH        (1U)
#define uSDHC_INT_STATUS_EN_DMAESEN(x)           (((uint32_t)(((uint32_t)(x)) << uSDHC_INT_STATUS_EN_DMAESEN_SHIFT)) & uSDHC_INT_STATUS_EN_DMAESEN_MASK)
/*! @} */

/*! @name INT_SIGNAL_EN - Interrupt Signal Enable */
/*! @{ */
#define uSDHC_INT_SIGNAL_EN_CCIEN_MASK           (0x1U)
#define uSDHC_INT_SIGNAL_EN_CCIEN_SHIFT          (0U)
#define uSDHC_INT_SIGNAL_EN_CCIEN_WIDTH          (1U)
#define uSDHC_INT_SIGNAL_EN_CCIEN(x)             (((uint32_t)(((uint32_t)(x)) << uSDHC_INT_SIGNAL_EN_CCIEN_SHIFT)) & uSDHC_INT_SIGNAL_EN_CCIEN_MASK)
#define uSDHC_INT_SIGNAL_EN_TCIEN_MASK           (0x2U)
#define uSDHC_INT_SIGNAL_EN_TCIEN_SHIFT          (1U)
#define uSDHC_INT_SIGNAL_EN_TCIEN_WIDTH          (1U)
#define uSDHC_INT_SIGNAL_EN_TCIEN(x)             (((uint32_t)(((uint32_t)(x)) << uSDHC_INT_SIGNAL_EN_TCIEN_SHIFT)) & uSDHC_INT_SIGNAL_EN_TCIEN_MASK)
#define uSDHC_INT_SIGNAL_EN_BGEIEN_MASK          (0x4U)
#define uSDHC_INT_SIGNAL_EN_BGEIEN_SHIFT         (2U)
#define uSDHC_INT_SIGNAL_EN_BGEIEN_WIDTH         (1U)
#define uSDHC_INT_SIGNAL_EN_BGEIEN(x)            (((uint32_t)(((uint32_t)(x)) << uSDHC_INT_SIGNAL_EN_BGEIEN_SHIFT)) & uSDHC_INT_SIGNAL_EN_BGEIEN_MASK)
#define uSDHC_INT_SIGNAL_EN_DINTIEN_MASK         (0x8U)
#define uSDHC_INT_SIGNAL_EN_DINTIEN_SHIFT        (3U)
#define uSDHC_INT_SIGNAL_EN_DINTIEN_WIDTH        (1U)
#define uSDHC_INT_SIGNAL_EN_DINTIEN(x)           (((uint32_t)(((uint32_t)(x)) << uSDHC_INT_SIGNAL_EN_DINTIEN_SHIFT)) & uSDHC_INT_SIGNAL_EN_DINTIEN_MASK)
#define uSDHC_INT_SIGNAL_EN_BWRIEN_MASK          (0x10U)
#define uSDHC_INT_SIGNAL_EN_BWRIEN_SHIFT         (4U)
#define uSDHC_INT_SIGNAL_EN_BWRIEN_WIDTH         (1U)
#define uSDHC_INT_SIGNAL_EN_BWRIEN(x)            (((uint32_t)(((uint32_t)(x)) << uSDHC_INT_SIGNAL_EN_BWRIEN_SHIFT)) & uSDHC_INT_SIGNAL_EN_BWRIEN_MASK)
#define uSDHC_INT_SIGNAL_EN_BRRIEN_MASK          (0x20U)
#define uSDHC_INT_SIGNAL_EN_BRRIEN_SHIFT         (5U)
#define uSDHC_INT_SIGNAL_EN_BRRIEN_WIDTH         (1U)
#define uSDHC_INT_SIGNAL_EN_BRRIEN(x)            (((uint32_t)(((uint32_t)(x)) << uSDHC_INT_SIGNAL_EN_BRRIEN_SHIFT)) & uSDHC_INT_SIGNAL_EN_BRRIEN_MASK)
#define uSDHC_INT_SIGNAL_EN_CINSIEN_MASK         (0x40U)
#define uSDHC_INT_SIGNAL_EN_CINSIEN_SHIFT        (6U)
#define uSDHC_INT_SIGNAL_EN_CINSIEN_WIDTH        (1U)
#define uSDHC_INT_SIGNAL_EN_CINSIEN(x)           (((uint32_t)(((uint32_t)(x)) << uSDHC_INT_SIGNAL_EN_CINSIEN_SHIFT)) & uSDHC_INT_SIGNAL_EN_CINSIEN_MASK)
#define uSDHC_INT_SIGNAL_EN_CRMIEN_MASK          (0x80U)
#define uSDHC_INT_SIGNAL_EN_CRMIEN_SHIFT         (7U)
#define uSDHC_INT_SIGNAL_EN_CRMIEN_WIDTH         (1U)
#define uSDHC_INT_SIGNAL_EN_CRMIEN(x)            (((uint32_t)(((uint32_t)(x)) << uSDHC_INT_SIGNAL_EN_CRMIEN_SHIFT)) & uSDHC_INT_SIGNAL_EN_CRMIEN_MASK)
#define uSDHC_INT_SIGNAL_EN_CINTIEN_MASK         (0x100U)
#define uSDHC_INT_SIGNAL_EN_CINTIEN_SHIFT        (8U)
#define uSDHC_INT_SIGNAL_EN_CINTIEN_WIDTH        (1U)
#define uSDHC_INT_SIGNAL_EN_CINTIEN(x)           (((uint32_t)(((uint32_t)(x)) << uSDHC_INT_SIGNAL_EN_CINTIEN_SHIFT)) & uSDHC_INT_SIGNAL_EN_CINTIEN_MASK)
#define uSDHC_INT_SIGNAL_EN_RTEIEN_MASK          (0x1000U)
#define uSDHC_INT_SIGNAL_EN_RTEIEN_SHIFT         (12U)
#define uSDHC_INT_SIGNAL_EN_RTEIEN_WIDTH         (1U)
#define uSDHC_INT_SIGNAL_EN_RTEIEN(x)            (((uint32_t)(((uint32_t)(x)) << uSDHC_INT_SIGNAL_EN_RTEIEN_SHIFT)) & uSDHC_INT_SIGNAL_EN_RTEIEN_MASK)
#define uSDHC_INT_SIGNAL_EN_TPIEN_MASK           (0x2000U)
#define uSDHC_INT_SIGNAL_EN_TPIEN_SHIFT          (13U)
#define uSDHC_INT_SIGNAL_EN_TPIEN_WIDTH          (1U)
#define uSDHC_INT_SIGNAL_EN_TPIEN(x)             (((uint32_t)(((uint32_t)(x)) << uSDHC_INT_SIGNAL_EN_TPIEN_SHIFT)) & uSDHC_INT_SIGNAL_EN_TPIEN_MASK)
#define uSDHC_INT_SIGNAL_EN_CQIIEN_MASK          (0x4000U)
#define uSDHC_INT_SIGNAL_EN_CQIIEN_SHIFT         (14U)
#define uSDHC_INT_SIGNAL_EN_CQIIEN_WIDTH         (1U)
#define uSDHC_INT_SIGNAL_EN_CQIIEN(x)            (((uint32_t)(((uint32_t)(x)) << uSDHC_INT_SIGNAL_EN_CQIIEN_SHIFT)) & uSDHC_INT_SIGNAL_EN_CQIIEN_MASK)
#define uSDHC_INT_SIGNAL_EN_CTOEIEN_MASK         (0x10000U)
#define uSDHC_INT_SIGNAL_EN_CTOEIEN_SHIFT        (16U)
#define uSDHC_INT_SIGNAL_EN_CTOEIEN_WIDTH        (1U)
#define uSDHC_INT_SIGNAL_EN_CTOEIEN(x)           (((uint32_t)(((uint32_t)(x)) << uSDHC_INT_SIGNAL_EN_CTOEIEN_SHIFT)) & uSDHC_INT_SIGNAL_EN_CTOEIEN_MASK)
#define uSDHC_INT_SIGNAL_EN_CCEIEN_MASK          (0x20000U)
#define uSDHC_INT_SIGNAL_EN_CCEIEN_SHIFT         (17U)
#define uSDHC_INT_SIGNAL_EN_CCEIEN_WIDTH         (1U)
#define uSDHC_INT_SIGNAL_EN_CCEIEN(x)            (((uint32_t)(((uint32_t)(x)) << uSDHC_INT_SIGNAL_EN_CCEIEN_SHIFT)) & uSDHC_INT_SIGNAL_EN_CCEIEN_MASK)
#define uSDHC_INT_SIGNAL_EN_CEBEIEN_MASK         (0x40000U)
#define uSDHC_INT_SIGNAL_EN_CEBEIEN_SHIFT        (18U)
#define uSDHC_INT_SIGNAL_EN_CEBEIEN_WIDTH        (1U)
#define uSDHC_INT_SIGNAL_EN_CEBEIEN(x)           (((uint32_t)(((uint32_t)(x)) << uSDHC_INT_SIGNAL_EN_CEBEIEN_SHIFT)) & uSDHC_INT_SIGNAL_EN_CEBEIEN_MASK)
#define uSDHC_INT_SIGNAL_EN_CIEIEN_MASK          (0x80000U)
#define uSDHC_INT_SIGNAL_EN_CIEIEN_SHIFT         (19U)
#define uSDHC_INT_SIGNAL_EN_CIEIEN_WIDTH         (1U)
#define uSDHC_INT_SIGNAL_EN_CIEIEN(x)            (((uint32_t)(((uint32_t)(x)) << uSDHC_INT_SIGNAL_EN_CIEIEN_SHIFT)) & uSDHC_INT_SIGNAL_EN_CIEIEN_MASK)
#define uSDHC_INT_SIGNAL_EN_DTOEIEN_MASK         (0x100000U)
#define uSDHC_INT_SIGNAL_EN_DTOEIEN_SHIFT        (20U)
#define uSDHC_INT_SIGNAL_EN_DTOEIEN_WIDTH        (1U)
#define uSDHC_INT_SIGNAL_EN_DTOEIEN(x)           (((uint32_t)(((uint32_t)(x)) << uSDHC_INT_SIGNAL_EN_DTOEIEN_SHIFT)) & uSDHC_INT_SIGNAL_EN_DTOEIEN_MASK)
#define uSDHC_INT_SIGNAL_EN_DCEIEN_MASK          (0x200000U)
#define uSDHC_INT_SIGNAL_EN_DCEIEN_SHIFT         (21U)
#define uSDHC_INT_SIGNAL_EN_DCEIEN_WIDTH         (1U)
#define uSDHC_INT_SIGNAL_EN_DCEIEN(x)            (((uint32_t)(((uint32_t)(x)) << uSDHC_INT_SIGNAL_EN_DCEIEN_SHIFT)) & uSDHC_INT_SIGNAL_EN_DCEIEN_MASK)
#define uSDHC_INT_SIGNAL_EN_DEBEIEN_MASK         (0x400000U)
#define uSDHC_INT_SIGNAL_EN_DEBEIEN_SHIFT        (22U)
#define uSDHC_INT_SIGNAL_EN_DEBEIEN_WIDTH        (1U)
#define uSDHC_INT_SIGNAL_EN_DEBEIEN(x)           (((uint32_t)(((uint32_t)(x)) << uSDHC_INT_SIGNAL_EN_DEBEIEN_SHIFT)) & uSDHC_INT_SIGNAL_EN_DEBEIEN_MASK)
#define uSDHC_INT_SIGNAL_EN_AC12EIEN_MASK        (0x1000000U)
#define uSDHC_INT_SIGNAL_EN_AC12EIEN_SHIFT       (24U)
#define uSDHC_INT_SIGNAL_EN_AC12EIEN_WIDTH       (1U)
#define uSDHC_INT_SIGNAL_EN_AC12EIEN(x)          (((uint32_t)(((uint32_t)(x)) << uSDHC_INT_SIGNAL_EN_AC12EIEN_SHIFT)) & uSDHC_INT_SIGNAL_EN_AC12EIEN_MASK)
#define uSDHC_INT_SIGNAL_EN_TNEIEN_MASK          (0x4000000U)
#define uSDHC_INT_SIGNAL_EN_TNEIEN_SHIFT         (26U)
#define uSDHC_INT_SIGNAL_EN_TNEIEN_WIDTH         (1U)
#define uSDHC_INT_SIGNAL_EN_TNEIEN(x)            (((uint32_t)(((uint32_t)(x)) << uSDHC_INT_SIGNAL_EN_TNEIEN_SHIFT)) & uSDHC_INT_SIGNAL_EN_TNEIEN_MASK)
#define uSDHC_INT_SIGNAL_EN_DMAEIEN_MASK         (0x10000000U)
#define uSDHC_INT_SIGNAL_EN_DMAEIEN_SHIFT        (28U)
#define uSDHC_INT_SIGNAL_EN_DMAEIEN_WIDTH        (1U)
#define uSDHC_INT_SIGNAL_EN_DMAEIEN(x)           (((uint32_t)(((uint32_t)(x)) << uSDHC_INT_SIGNAL_EN_DMAEIEN_SHIFT)) & uSDHC_INT_SIGNAL_EN_DMAEIEN_MASK)
/*! @} */

/*! @name AUTOCMD12_ERR_STATUS - Auto CMD12 Error Status */
/*! @{ */
#define uSDHC_AUTOCMD12_ERR_STATUS_AC12NE_MASK   (0x1U)
#define uSDHC_AUTOCMD12_ERR_STATUS_AC12NE_SHIFT  (0U)
#define uSDHC_AUTOCMD12_ERR_STATUS_AC12NE_WIDTH  (1U)
#define uSDHC_AUTOCMD12_ERR_STATUS_AC12NE(x)     (((uint32_t)(((uint32_t)(x)) << uSDHC_AUTOCMD12_ERR_STATUS_AC12NE_SHIFT)) & uSDHC_AUTOCMD12_ERR_STATUS_AC12NE_MASK)
#define uSDHC_AUTOCMD12_ERR_STATUS_AC12TOE_MASK  (0x2U)
#define uSDHC_AUTOCMD12_ERR_STATUS_AC12TOE_SHIFT (1U)
#define uSDHC_AUTOCMD12_ERR_STATUS_AC12TOE_WIDTH (1U)
#define uSDHC_AUTOCMD12_ERR_STATUS_AC12TOE(x)    (((uint32_t)(((uint32_t)(x)) << uSDHC_AUTOCMD12_ERR_STATUS_AC12TOE_SHIFT)) & uSDHC_AUTOCMD12_ERR_STATUS_AC12TOE_MASK)
#define uSDHC_AUTOCMD12_ERR_STATUS_AC12EBE_MASK  (0x4U)
#define uSDHC_AUTOCMD12_ERR_STATUS_AC12EBE_SHIFT (2U)
#define uSDHC_AUTOCMD12_ERR_STATUS_AC12EBE_WIDTH (1U)
#define uSDHC_AUTOCMD12_ERR_STATUS_AC12EBE(x)    (((uint32_t)(((uint32_t)(x)) << uSDHC_AUTOCMD12_ERR_STATUS_AC12EBE_SHIFT)) & uSDHC_AUTOCMD12_ERR_STATUS_AC12EBE_MASK)
#define uSDHC_AUTOCMD12_ERR_STATUS_AC12CE_MASK   (0x8U)
#define uSDHC_AUTOCMD12_ERR_STATUS_AC12CE_SHIFT  (3U)
#define uSDHC_AUTOCMD12_ERR_STATUS_AC12CE_WIDTH  (1U)
#define uSDHC_AUTOCMD12_ERR_STATUS_AC12CE(x)     (((uint32_t)(((uint32_t)(x)) << uSDHC_AUTOCMD12_ERR_STATUS_AC12CE_SHIFT)) & uSDHC_AUTOCMD12_ERR_STATUS_AC12CE_MASK)
#define uSDHC_AUTOCMD12_ERR_STATUS_AC12IE_MASK   (0x10U)
#define uSDHC_AUTOCMD12_ERR_STATUS_AC12IE_SHIFT  (4U)
#define uSDHC_AUTOCMD12_ERR_STATUS_AC12IE_WIDTH  (1U)
#define uSDHC_AUTOCMD12_ERR_STATUS_AC12IE(x)     (((uint32_t)(((uint32_t)(x)) << uSDHC_AUTOCMD12_ERR_STATUS_AC12IE_SHIFT)) & uSDHC_AUTOCMD12_ERR_STATUS_AC12IE_MASK)
#define uSDHC_AUTOCMD12_ERR_STATUS_CNIBAC12E_MASK (0x80U)
#define uSDHC_AUTOCMD12_ERR_STATUS_CNIBAC12E_SHIFT (7U)
#define uSDHC_AUTOCMD12_ERR_STATUS_CNIBAC12E_WIDTH (1U)
#define uSDHC_AUTOCMD12_ERR_STATUS_CNIBAC12E(x)  (((uint32_t)(((uint32_t)(x)) << uSDHC_AUTOCMD12_ERR_STATUS_CNIBAC12E_SHIFT)) & uSDHC_AUTOCMD12_ERR_STATUS_CNIBAC12E_MASK)
#define uSDHC_AUTOCMD12_ERR_STATUS_EXECUTE_TUNING_MASK (0x400000U)
#define uSDHC_AUTOCMD12_ERR_STATUS_EXECUTE_TUNING_SHIFT (22U)
#define uSDHC_AUTOCMD12_ERR_STATUS_EXECUTE_TUNING_WIDTH (1U)
#define uSDHC_AUTOCMD12_ERR_STATUS_EXECUTE_TUNING(x) (((uint32_t)(((uint32_t)(x)) << uSDHC_AUTOCMD12_ERR_STATUS_EXECUTE_TUNING_SHIFT)) & uSDHC_AUTOCMD12_ERR_STATUS_EXECUTE_TUNING_MASK)
#define uSDHC_AUTOCMD12_ERR_STATUS_SMP_CLK_SEL_MASK (0x800000U)
#define uSDHC_AUTOCMD12_ERR_STATUS_SMP_CLK_SEL_SHIFT (23U)
#define uSDHC_AUTOCMD12_ERR_STATUS_SMP_CLK_SEL_WIDTH (1U)
#define uSDHC_AUTOCMD12_ERR_STATUS_SMP_CLK_SEL(x) (((uint32_t)(((uint32_t)(x)) << uSDHC_AUTOCMD12_ERR_STATUS_SMP_CLK_SEL_SHIFT)) & uSDHC_AUTOCMD12_ERR_STATUS_SMP_CLK_SEL_MASK)
/*! @} */

/*! @name HOST_CTRL_CAP - Host Controller Capabilities */
/*! @{ */
#define uSDHC_HOST_CTRL_CAP_SDR50_SUPPORT_MASK   (0x1U)
#define uSDHC_HOST_CTRL_CAP_SDR50_SUPPORT_SHIFT  (0U)
#define uSDHC_HOST_CTRL_CAP_SDR50_SUPPORT_WIDTH  (1U)
#define uSDHC_HOST_CTRL_CAP_SDR50_SUPPORT(x)     (((uint32_t)(((uint32_t)(x)) << uSDHC_HOST_CTRL_CAP_SDR50_SUPPORT_SHIFT)) & uSDHC_HOST_CTRL_CAP_SDR50_SUPPORT_MASK)
#define uSDHC_HOST_CTRL_CAP_SDR104_SUPPORT_MASK  (0x2U)
#define uSDHC_HOST_CTRL_CAP_SDR104_SUPPORT_SHIFT (1U)
#define uSDHC_HOST_CTRL_CAP_SDR104_SUPPORT_WIDTH (1U)
#define uSDHC_HOST_CTRL_CAP_SDR104_SUPPORT(x)    (((uint32_t)(((uint32_t)(x)) << uSDHC_HOST_CTRL_CAP_SDR104_SUPPORT_SHIFT)) & uSDHC_HOST_CTRL_CAP_SDR104_SUPPORT_MASK)
#define uSDHC_HOST_CTRL_CAP_DDR50_SUPPORT_MASK   (0x4U)
#define uSDHC_HOST_CTRL_CAP_DDR50_SUPPORT_SHIFT  (2U)
#define uSDHC_HOST_CTRL_CAP_DDR50_SUPPORT_WIDTH  (1U)
#define uSDHC_HOST_CTRL_CAP_DDR50_SUPPORT(x)     (((uint32_t)(((uint32_t)(x)) << uSDHC_HOST_CTRL_CAP_DDR50_SUPPORT_SHIFT)) & uSDHC_HOST_CTRL_CAP_DDR50_SUPPORT_MASK)
#define uSDHC_HOST_CTRL_CAP_TIME_COUNT_RETUNING_MASK (0xF00U)
#define uSDHC_HOST_CTRL_CAP_TIME_COUNT_RETUNING_SHIFT (8U)
#define uSDHC_HOST_CTRL_CAP_TIME_COUNT_RETUNING_WIDTH (4U)
#define uSDHC_HOST_CTRL_CAP_TIME_COUNT_RETUNING(x) (((uint32_t)(((uint32_t)(x)) << uSDHC_HOST_CTRL_CAP_TIME_COUNT_RETUNING_SHIFT)) & uSDHC_HOST_CTRL_CAP_TIME_COUNT_RETUNING_MASK)
#define uSDHC_HOST_CTRL_CAP_USE_TUNING_SDR50_MASK (0x2000U)
#define uSDHC_HOST_CTRL_CAP_USE_TUNING_SDR50_SHIFT (13U)
#define uSDHC_HOST_CTRL_CAP_USE_TUNING_SDR50_WIDTH (1U)
#define uSDHC_HOST_CTRL_CAP_USE_TUNING_SDR50(x)  (((uint32_t)(((uint32_t)(x)) << uSDHC_HOST_CTRL_CAP_USE_TUNING_SDR50_SHIFT)) & uSDHC_HOST_CTRL_CAP_USE_TUNING_SDR50_MASK)
#define uSDHC_HOST_CTRL_CAP_RETUNING_MODE_MASK   (0xC000U)
#define uSDHC_HOST_CTRL_CAP_RETUNING_MODE_SHIFT  (14U)
#define uSDHC_HOST_CTRL_CAP_RETUNING_MODE_WIDTH  (2U)
#define uSDHC_HOST_CTRL_CAP_RETUNING_MODE(x)     (((uint32_t)(((uint32_t)(x)) << uSDHC_HOST_CTRL_CAP_RETUNING_MODE_SHIFT)) & uSDHC_HOST_CTRL_CAP_RETUNING_MODE_MASK)
#define uSDHC_HOST_CTRL_CAP_MBL_MASK             (0x70000U)
#define uSDHC_HOST_CTRL_CAP_MBL_SHIFT            (16U)
#define uSDHC_HOST_CTRL_CAP_MBL_WIDTH            (3U)
#define uSDHC_HOST_CTRL_CAP_MBL(x)               (((uint32_t)(((uint32_t)(x)) << uSDHC_HOST_CTRL_CAP_MBL_SHIFT)) & uSDHC_HOST_CTRL_CAP_MBL_MASK)
#define uSDHC_HOST_CTRL_CAP_ADMAS_MASK           (0x100000U)
#define uSDHC_HOST_CTRL_CAP_ADMAS_SHIFT          (20U)
#define uSDHC_HOST_CTRL_CAP_ADMAS_WIDTH          (1U)
#define uSDHC_HOST_CTRL_CAP_ADMAS(x)             (((uint32_t)(((uint32_t)(x)) << uSDHC_HOST_CTRL_CAP_ADMAS_SHIFT)) & uSDHC_HOST_CTRL_CAP_ADMAS_MASK)
#define uSDHC_HOST_CTRL_CAP_HSS_MASK             (0x200000U)
#define uSDHC_HOST_CTRL_CAP_HSS_SHIFT            (21U)
#define uSDHC_HOST_CTRL_CAP_HSS_WIDTH            (1U)
#define uSDHC_HOST_CTRL_CAP_HSS(x)               (((uint32_t)(((uint32_t)(x)) << uSDHC_HOST_CTRL_CAP_HSS_SHIFT)) & uSDHC_HOST_CTRL_CAP_HSS_MASK)
#define uSDHC_HOST_CTRL_CAP_DMAS_MASK            (0x400000U)
#define uSDHC_HOST_CTRL_CAP_DMAS_SHIFT           (22U)
#define uSDHC_HOST_CTRL_CAP_DMAS_WIDTH           (1U)
#define uSDHC_HOST_CTRL_CAP_DMAS(x)              (((uint32_t)(((uint32_t)(x)) << uSDHC_HOST_CTRL_CAP_DMAS_SHIFT)) & uSDHC_HOST_CTRL_CAP_DMAS_MASK)
#define uSDHC_HOST_CTRL_CAP_SRS_MASK             (0x800000U)
#define uSDHC_HOST_CTRL_CAP_SRS_SHIFT            (23U)
#define uSDHC_HOST_CTRL_CAP_SRS_WIDTH            (1U)
#define uSDHC_HOST_CTRL_CAP_SRS(x)               (((uint32_t)(((uint32_t)(x)) << uSDHC_HOST_CTRL_CAP_SRS_SHIFT)) & uSDHC_HOST_CTRL_CAP_SRS_MASK)
#define uSDHC_HOST_CTRL_CAP_VS33_MASK            (0x1000000U)
#define uSDHC_HOST_CTRL_CAP_VS33_SHIFT           (24U)
#define uSDHC_HOST_CTRL_CAP_VS33_WIDTH           (1U)
#define uSDHC_HOST_CTRL_CAP_VS33(x)              (((uint32_t)(((uint32_t)(x)) << uSDHC_HOST_CTRL_CAP_VS33_SHIFT)) & uSDHC_HOST_CTRL_CAP_VS33_MASK)
#define uSDHC_HOST_CTRL_CAP_VS30_MASK            (0x2000000U)
#define uSDHC_HOST_CTRL_CAP_VS30_SHIFT           (25U)
#define uSDHC_HOST_CTRL_CAP_VS30_WIDTH           (1U)
#define uSDHC_HOST_CTRL_CAP_VS30(x)              (((uint32_t)(((uint32_t)(x)) << uSDHC_HOST_CTRL_CAP_VS30_SHIFT)) & uSDHC_HOST_CTRL_CAP_VS30_MASK)
#define uSDHC_HOST_CTRL_CAP_VS18_MASK            (0x4000000U)
#define uSDHC_HOST_CTRL_CAP_VS18_SHIFT           (26U)
#define uSDHC_HOST_CTRL_CAP_VS18_WIDTH           (1U)
#define uSDHC_HOST_CTRL_CAP_VS18(x)              (((uint32_t)(((uint32_t)(x)) << uSDHC_HOST_CTRL_CAP_VS18_SHIFT)) & uSDHC_HOST_CTRL_CAP_VS18_MASK)
/*! @} */

/*! @name WTMK_LVL - Watermark Level */
/*! @{ */
#define uSDHC_WTMK_LVL_RD_WML_MASK               (0xFFU)
#define uSDHC_WTMK_LVL_RD_WML_SHIFT              (0U)
#define uSDHC_WTMK_LVL_RD_WML_WIDTH              (8U)
#define uSDHC_WTMK_LVL_RD_WML(x)                 (((uint32_t)(((uint32_t)(x)) << uSDHC_WTMK_LVL_RD_WML_SHIFT)) & uSDHC_WTMK_LVL_RD_WML_MASK)
#define uSDHC_WTMK_LVL_WR_WML_MASK               (0xFF0000U)
#define uSDHC_WTMK_LVL_WR_WML_SHIFT              (16U)
#define uSDHC_WTMK_LVL_WR_WML_WIDTH              (8U)
#define uSDHC_WTMK_LVL_WR_WML(x)                 (((uint32_t)(((uint32_t)(x)) << uSDHC_WTMK_LVL_WR_WML_SHIFT)) & uSDHC_WTMK_LVL_WR_WML_MASK)
/*! @} */

/*! @name MIX_CTRL - Mixer Control */
/*! @{ */
#define uSDHC_MIX_CTRL_DMAEN_MASK                (0x1U)
#define uSDHC_MIX_CTRL_DMAEN_SHIFT               (0U)
#define uSDHC_MIX_CTRL_DMAEN_WIDTH               (1U)
#define uSDHC_MIX_CTRL_DMAEN(x)                  (((uint32_t)(((uint32_t)(x)) << uSDHC_MIX_CTRL_DMAEN_SHIFT)) & uSDHC_MIX_CTRL_DMAEN_MASK)
#define uSDHC_MIX_CTRL_BCEN_MASK                 (0x2U)
#define uSDHC_MIX_CTRL_BCEN_SHIFT                (1U)
#define uSDHC_MIX_CTRL_BCEN_WIDTH                (1U)
#define uSDHC_MIX_CTRL_BCEN(x)                   (((uint32_t)(((uint32_t)(x)) << uSDHC_MIX_CTRL_BCEN_SHIFT)) & uSDHC_MIX_CTRL_BCEN_MASK)
#define uSDHC_MIX_CTRL_AC12EN_MASK               (0x4U)
#define uSDHC_MIX_CTRL_AC12EN_SHIFT              (2U)
#define uSDHC_MIX_CTRL_AC12EN_WIDTH              (1U)
#define uSDHC_MIX_CTRL_AC12EN(x)                 (((uint32_t)(((uint32_t)(x)) << uSDHC_MIX_CTRL_AC12EN_SHIFT)) & uSDHC_MIX_CTRL_AC12EN_MASK)
#define uSDHC_MIX_CTRL_DDR_EN_MASK               (0x8U)
#define uSDHC_MIX_CTRL_DDR_EN_SHIFT              (3U)
#define uSDHC_MIX_CTRL_DDR_EN_WIDTH              (1U)
#define uSDHC_MIX_CTRL_DDR_EN(x)                 (((uint32_t)(((uint32_t)(x)) << uSDHC_MIX_CTRL_DDR_EN_SHIFT)) & uSDHC_MIX_CTRL_DDR_EN_MASK)
#define uSDHC_MIX_CTRL_DTDSEL_MASK               (0x10U)
#define uSDHC_MIX_CTRL_DTDSEL_SHIFT              (4U)
#define uSDHC_MIX_CTRL_DTDSEL_WIDTH              (1U)
#define uSDHC_MIX_CTRL_DTDSEL(x)                 (((uint32_t)(((uint32_t)(x)) << uSDHC_MIX_CTRL_DTDSEL_SHIFT)) & uSDHC_MIX_CTRL_DTDSEL_MASK)
#define uSDHC_MIX_CTRL_MSBSEL_MASK               (0x20U)
#define uSDHC_MIX_CTRL_MSBSEL_SHIFT              (5U)
#define uSDHC_MIX_CTRL_MSBSEL_WIDTH              (1U)
#define uSDHC_MIX_CTRL_MSBSEL(x)                 (((uint32_t)(((uint32_t)(x)) << uSDHC_MIX_CTRL_MSBSEL_SHIFT)) & uSDHC_MIX_CTRL_MSBSEL_MASK)
#define uSDHC_MIX_CTRL_NIBBLE_POS_MASK           (0x40U)
#define uSDHC_MIX_CTRL_NIBBLE_POS_SHIFT          (6U)
#define uSDHC_MIX_CTRL_NIBBLE_POS_WIDTH          (1U)
#define uSDHC_MIX_CTRL_NIBBLE_POS(x)             (((uint32_t)(((uint32_t)(x)) << uSDHC_MIX_CTRL_NIBBLE_POS_SHIFT)) & uSDHC_MIX_CTRL_NIBBLE_POS_MASK)
#define uSDHC_MIX_CTRL_AC23EN_MASK               (0x80U)
#define uSDHC_MIX_CTRL_AC23EN_SHIFT              (7U)
#define uSDHC_MIX_CTRL_AC23EN_WIDTH              (1U)
#define uSDHC_MIX_CTRL_AC23EN(x)                 (((uint32_t)(((uint32_t)(x)) << uSDHC_MIX_CTRL_AC23EN_SHIFT)) & uSDHC_MIX_CTRL_AC23EN_MASK)
#define uSDHC_MIX_CTRL_EXE_TUNE_MASK             (0x400000U)
#define uSDHC_MIX_CTRL_EXE_TUNE_SHIFT            (22U)
#define uSDHC_MIX_CTRL_EXE_TUNE_WIDTH            (1U)
#define uSDHC_MIX_CTRL_EXE_TUNE(x)               (((uint32_t)(((uint32_t)(x)) << uSDHC_MIX_CTRL_EXE_TUNE_SHIFT)) & uSDHC_MIX_CTRL_EXE_TUNE_MASK)
#define uSDHC_MIX_CTRL_SMP_CLK_SEL_MASK          (0x800000U)
#define uSDHC_MIX_CTRL_SMP_CLK_SEL_SHIFT         (23U)
#define uSDHC_MIX_CTRL_SMP_CLK_SEL_WIDTH         (1U)
#define uSDHC_MIX_CTRL_SMP_CLK_SEL(x)            (((uint32_t)(((uint32_t)(x)) << uSDHC_MIX_CTRL_SMP_CLK_SEL_SHIFT)) & uSDHC_MIX_CTRL_SMP_CLK_SEL_MASK)
#define uSDHC_MIX_CTRL_AUTO_TUNE_EN_MASK         (0x1000000U)
#define uSDHC_MIX_CTRL_AUTO_TUNE_EN_SHIFT        (24U)
#define uSDHC_MIX_CTRL_AUTO_TUNE_EN_WIDTH        (1U)
#define uSDHC_MIX_CTRL_AUTO_TUNE_EN(x)           (((uint32_t)(((uint32_t)(x)) << uSDHC_MIX_CTRL_AUTO_TUNE_EN_SHIFT)) & uSDHC_MIX_CTRL_AUTO_TUNE_EN_MASK)
#define uSDHC_MIX_CTRL_FBCLK_SEL_MASK            (0x2000000U)
#define uSDHC_MIX_CTRL_FBCLK_SEL_SHIFT           (25U)
#define uSDHC_MIX_CTRL_FBCLK_SEL_WIDTH           (1U)
#define uSDHC_MIX_CTRL_FBCLK_SEL(x)              (((uint32_t)(((uint32_t)(x)) << uSDHC_MIX_CTRL_FBCLK_SEL_SHIFT)) & uSDHC_MIX_CTRL_FBCLK_SEL_MASK)
#define uSDHC_MIX_CTRL_HS400_MODE_MASK           (0x4000000U)
#define uSDHC_MIX_CTRL_HS400_MODE_SHIFT          (26U)
#define uSDHC_MIX_CTRL_HS400_MODE_WIDTH          (1U)
#define uSDHC_MIX_CTRL_HS400_MODE(x)             (((uint32_t)(((uint32_t)(x)) << uSDHC_MIX_CTRL_HS400_MODE_SHIFT)) & uSDHC_MIX_CTRL_HS400_MODE_MASK)
#define uSDHC_MIX_CTRL_EN_HS400_MODE_MASK        (0x8000000U)
#define uSDHC_MIX_CTRL_EN_HS400_MODE_SHIFT       (27U)
#define uSDHC_MIX_CTRL_EN_HS400_MODE_WIDTH       (1U)
#define uSDHC_MIX_CTRL_EN_HS400_MODE(x)          (((uint32_t)(((uint32_t)(x)) << uSDHC_MIX_CTRL_EN_HS400_MODE_SHIFT)) & uSDHC_MIX_CTRL_EN_HS400_MODE_MASK)
/*! @} */

/*! @name FORCE_EVENT - Force Event */
/*! @{ */
#define uSDHC_FORCE_EVENT_FEVTAC12NE_MASK        (0x1U)
#define uSDHC_FORCE_EVENT_FEVTAC12NE_SHIFT       (0U)
#define uSDHC_FORCE_EVENT_FEVTAC12NE_WIDTH       (1U)
#define uSDHC_FORCE_EVENT_FEVTAC12NE(x)          (((uint32_t)(((uint32_t)(x)) << uSDHC_FORCE_EVENT_FEVTAC12NE_SHIFT)) & uSDHC_FORCE_EVENT_FEVTAC12NE_MASK)
#define uSDHC_FORCE_EVENT_FEVTAC12TOE_MASK       (0x2U)
#define uSDHC_FORCE_EVENT_FEVTAC12TOE_SHIFT      (1U)
#define uSDHC_FORCE_EVENT_FEVTAC12TOE_WIDTH      (1U)
#define uSDHC_FORCE_EVENT_FEVTAC12TOE(x)         (((uint32_t)(((uint32_t)(x)) << uSDHC_FORCE_EVENT_FEVTAC12TOE_SHIFT)) & uSDHC_FORCE_EVENT_FEVTAC12TOE_MASK)
#define uSDHC_FORCE_EVENT_FEVTAC12CE_MASK        (0x4U)
#define uSDHC_FORCE_EVENT_FEVTAC12CE_SHIFT       (2U)
#define uSDHC_FORCE_EVENT_FEVTAC12CE_WIDTH       (1U)
#define uSDHC_FORCE_EVENT_FEVTAC12CE(x)          (((uint32_t)(((uint32_t)(x)) << uSDHC_FORCE_EVENT_FEVTAC12CE_SHIFT)) & uSDHC_FORCE_EVENT_FEVTAC12CE_MASK)
#define uSDHC_FORCE_EVENT_FEVTAC12EBE_MASK       (0x8U)
#define uSDHC_FORCE_EVENT_FEVTAC12EBE_SHIFT      (3U)
#define uSDHC_FORCE_EVENT_FEVTAC12EBE_WIDTH      (1U)
#define uSDHC_FORCE_EVENT_FEVTAC12EBE(x)         (((uint32_t)(((uint32_t)(x)) << uSDHC_FORCE_EVENT_FEVTAC12EBE_SHIFT)) & uSDHC_FORCE_EVENT_FEVTAC12EBE_MASK)
#define uSDHC_FORCE_EVENT_FEVTAC12IE_MASK        (0x10U)
#define uSDHC_FORCE_EVENT_FEVTAC12IE_SHIFT       (4U)
#define uSDHC_FORCE_EVENT_FEVTAC12IE_WIDTH       (1U)
#define uSDHC_FORCE_EVENT_FEVTAC12IE(x)          (((uint32_t)(((uint32_t)(x)) << uSDHC_FORCE_EVENT_FEVTAC12IE_SHIFT)) & uSDHC_FORCE_EVENT_FEVTAC12IE_MASK)
#define uSDHC_FORCE_EVENT_FEVTCNIBAC12E_MASK     (0x80U)
#define uSDHC_FORCE_EVENT_FEVTCNIBAC12E_SHIFT    (7U)
#define uSDHC_FORCE_EVENT_FEVTCNIBAC12E_WIDTH    (1U)
#define uSDHC_FORCE_EVENT_FEVTCNIBAC12E(x)       (((uint32_t)(((uint32_t)(x)) << uSDHC_FORCE_EVENT_FEVTCNIBAC12E_SHIFT)) & uSDHC_FORCE_EVENT_FEVTCNIBAC12E_MASK)
#define uSDHC_FORCE_EVENT_FEVTCTOE_MASK          (0x10000U)
#define uSDHC_FORCE_EVENT_FEVTCTOE_SHIFT         (16U)
#define uSDHC_FORCE_EVENT_FEVTCTOE_WIDTH         (1U)
#define uSDHC_FORCE_EVENT_FEVTCTOE(x)            (((uint32_t)(((uint32_t)(x)) << uSDHC_FORCE_EVENT_FEVTCTOE_SHIFT)) & uSDHC_FORCE_EVENT_FEVTCTOE_MASK)
#define uSDHC_FORCE_EVENT_FEVTCCE_MASK           (0x20000U)
#define uSDHC_FORCE_EVENT_FEVTCCE_SHIFT          (17U)
#define uSDHC_FORCE_EVENT_FEVTCCE_WIDTH          (1U)
#define uSDHC_FORCE_EVENT_FEVTCCE(x)             (((uint32_t)(((uint32_t)(x)) << uSDHC_FORCE_EVENT_FEVTCCE_SHIFT)) & uSDHC_FORCE_EVENT_FEVTCCE_MASK)
#define uSDHC_FORCE_EVENT_FEVTCEBE_MASK          (0x40000U)
#define uSDHC_FORCE_EVENT_FEVTCEBE_SHIFT         (18U)
#define uSDHC_FORCE_EVENT_FEVTCEBE_WIDTH         (1U)
#define uSDHC_FORCE_EVENT_FEVTCEBE(x)            (((uint32_t)(((uint32_t)(x)) << uSDHC_FORCE_EVENT_FEVTCEBE_SHIFT)) & uSDHC_FORCE_EVENT_FEVTCEBE_MASK)
#define uSDHC_FORCE_EVENT_FEVTCIE_MASK           (0x80000U)
#define uSDHC_FORCE_EVENT_FEVTCIE_SHIFT          (19U)
#define uSDHC_FORCE_EVENT_FEVTCIE_WIDTH          (1U)
#define uSDHC_FORCE_EVENT_FEVTCIE(x)             (((uint32_t)(((uint32_t)(x)) << uSDHC_FORCE_EVENT_FEVTCIE_SHIFT)) & uSDHC_FORCE_EVENT_FEVTCIE_MASK)
#define uSDHC_FORCE_EVENT_FEVTDTOE_MASK          (0x100000U)
#define uSDHC_FORCE_EVENT_FEVTDTOE_SHIFT         (20U)
#define uSDHC_FORCE_EVENT_FEVTDTOE_WIDTH         (1U)
#define uSDHC_FORCE_EVENT_FEVTDTOE(x)            (((uint32_t)(((uint32_t)(x)) << uSDHC_FORCE_EVENT_FEVTDTOE_SHIFT)) & uSDHC_FORCE_EVENT_FEVTDTOE_MASK)
#define uSDHC_FORCE_EVENT_FEVTDCE_MASK           (0x200000U)
#define uSDHC_FORCE_EVENT_FEVTDCE_SHIFT          (21U)
#define uSDHC_FORCE_EVENT_FEVTDCE_WIDTH          (1U)
#define uSDHC_FORCE_EVENT_FEVTDCE(x)             (((uint32_t)(((uint32_t)(x)) << uSDHC_FORCE_EVENT_FEVTDCE_SHIFT)) & uSDHC_FORCE_EVENT_FEVTDCE_MASK)
#define uSDHC_FORCE_EVENT_FEVTDEBE_MASK          (0x400000U)
#define uSDHC_FORCE_EVENT_FEVTDEBE_SHIFT         (22U)
#define uSDHC_FORCE_EVENT_FEVTDEBE_WIDTH         (1U)
#define uSDHC_FORCE_EVENT_FEVTDEBE(x)            (((uint32_t)(((uint32_t)(x)) << uSDHC_FORCE_EVENT_FEVTDEBE_SHIFT)) & uSDHC_FORCE_EVENT_FEVTDEBE_MASK)
#define uSDHC_FORCE_EVENT_FEVTAC12E_MASK         (0x1000000U)
#define uSDHC_FORCE_EVENT_FEVTAC12E_SHIFT        (24U)
#define uSDHC_FORCE_EVENT_FEVTAC12E_WIDTH        (1U)
#define uSDHC_FORCE_EVENT_FEVTAC12E(x)           (((uint32_t)(((uint32_t)(x)) << uSDHC_FORCE_EVENT_FEVTAC12E_SHIFT)) & uSDHC_FORCE_EVENT_FEVTAC12E_MASK)
#define uSDHC_FORCE_EVENT_FEVTTNE_MASK           (0x4000000U)
#define uSDHC_FORCE_EVENT_FEVTTNE_SHIFT          (26U)
#define uSDHC_FORCE_EVENT_FEVTTNE_WIDTH          (1U)
#define uSDHC_FORCE_EVENT_FEVTTNE(x)             (((uint32_t)(((uint32_t)(x)) << uSDHC_FORCE_EVENT_FEVTTNE_SHIFT)) & uSDHC_FORCE_EVENT_FEVTTNE_MASK)
#define uSDHC_FORCE_EVENT_FEVTDMAE_MASK          (0x10000000U)
#define uSDHC_FORCE_EVENT_FEVTDMAE_SHIFT         (28U)
#define uSDHC_FORCE_EVENT_FEVTDMAE_WIDTH         (1U)
#define uSDHC_FORCE_EVENT_FEVTDMAE(x)            (((uint32_t)(((uint32_t)(x)) << uSDHC_FORCE_EVENT_FEVTDMAE_SHIFT)) & uSDHC_FORCE_EVENT_FEVTDMAE_MASK)
#define uSDHC_FORCE_EVENT_FEVTCINT_MASK          (0x80000000U)
#define uSDHC_FORCE_EVENT_FEVTCINT_SHIFT         (31U)
#define uSDHC_FORCE_EVENT_FEVTCINT_WIDTH         (1U)
#define uSDHC_FORCE_EVENT_FEVTCINT(x)            (((uint32_t)(((uint32_t)(x)) << uSDHC_FORCE_EVENT_FEVTCINT_SHIFT)) & uSDHC_FORCE_EVENT_FEVTCINT_MASK)
/*! @} */

/*! @name ADMA_ERR_STATUS - ADMA Error Status */
/*! @{ */
#define uSDHC_ADMA_ERR_STATUS_ADMAES_MASK        (0x3U)
#define uSDHC_ADMA_ERR_STATUS_ADMAES_SHIFT       (0U)
#define uSDHC_ADMA_ERR_STATUS_ADMAES_WIDTH       (2U)
#define uSDHC_ADMA_ERR_STATUS_ADMAES(x)          (((uint32_t)(((uint32_t)(x)) << uSDHC_ADMA_ERR_STATUS_ADMAES_SHIFT)) & uSDHC_ADMA_ERR_STATUS_ADMAES_MASK)
#define uSDHC_ADMA_ERR_STATUS_ADMALME_MASK       (0x4U)
#define uSDHC_ADMA_ERR_STATUS_ADMALME_SHIFT      (2U)
#define uSDHC_ADMA_ERR_STATUS_ADMALME_WIDTH      (1U)
#define uSDHC_ADMA_ERR_STATUS_ADMALME(x)         (((uint32_t)(((uint32_t)(x)) << uSDHC_ADMA_ERR_STATUS_ADMALME_SHIFT)) & uSDHC_ADMA_ERR_STATUS_ADMALME_MASK)
#define uSDHC_ADMA_ERR_STATUS_ADMADCE_MASK       (0x8U)
#define uSDHC_ADMA_ERR_STATUS_ADMADCE_SHIFT      (3U)
#define uSDHC_ADMA_ERR_STATUS_ADMADCE_WIDTH      (1U)
#define uSDHC_ADMA_ERR_STATUS_ADMADCE(x)         (((uint32_t)(((uint32_t)(x)) << uSDHC_ADMA_ERR_STATUS_ADMADCE_SHIFT)) & uSDHC_ADMA_ERR_STATUS_ADMADCE_MASK)
/*! @} */

/*! @name ADMA_SYS_ADDR - ADMA System Address */
/*! @{ */
#define uSDHC_ADMA_SYS_ADDR_ADS_ADDR_MASK        (0xFFFFFFFCU)
#define uSDHC_ADMA_SYS_ADDR_ADS_ADDR_SHIFT       (2U)
#define uSDHC_ADMA_SYS_ADDR_ADS_ADDR_WIDTH       (30U)
#define uSDHC_ADMA_SYS_ADDR_ADS_ADDR(x)          (((uint32_t)(((uint32_t)(x)) << uSDHC_ADMA_SYS_ADDR_ADS_ADDR_SHIFT)) & uSDHC_ADMA_SYS_ADDR_ADS_ADDR_MASK)
/*! @} */

/*! @name DLL_CTRL - DLL (Delay Line) Control */
/*! @{ */
#define uSDHC_DLL_CTRL_DLL_CTRL_ENABLE_MASK      (0x1U)
#define uSDHC_DLL_CTRL_DLL_CTRL_ENABLE_SHIFT     (0U)
#define uSDHC_DLL_CTRL_DLL_CTRL_ENABLE_WIDTH     (1U)
#define uSDHC_DLL_CTRL_DLL_CTRL_ENABLE(x)        (((uint32_t)(((uint32_t)(x)) << uSDHC_DLL_CTRL_DLL_CTRL_ENABLE_SHIFT)) & uSDHC_DLL_CTRL_DLL_CTRL_ENABLE_MASK)
#define uSDHC_DLL_CTRL_DLL_CTRL_RESET_MASK       (0x2U)
#define uSDHC_DLL_CTRL_DLL_CTRL_RESET_SHIFT      (1U)
#define uSDHC_DLL_CTRL_DLL_CTRL_RESET_WIDTH      (1U)
#define uSDHC_DLL_CTRL_DLL_CTRL_RESET(x)         (((uint32_t)(((uint32_t)(x)) << uSDHC_DLL_CTRL_DLL_CTRL_RESET_SHIFT)) & uSDHC_DLL_CTRL_DLL_CTRL_RESET_MASK)
#define uSDHC_DLL_CTRL_DLL_CTRL_SLV_FORCE_UPD_MASK (0x4U)
#define uSDHC_DLL_CTRL_DLL_CTRL_SLV_FORCE_UPD_SHIFT (2U)
#define uSDHC_DLL_CTRL_DLL_CTRL_SLV_FORCE_UPD_WIDTH (1U)
#define uSDHC_DLL_CTRL_DLL_CTRL_SLV_FORCE_UPD(x) (((uint32_t)(((uint32_t)(x)) << uSDHC_DLL_CTRL_DLL_CTRL_SLV_FORCE_UPD_SHIFT)) & uSDHC_DLL_CTRL_DLL_CTRL_SLV_FORCE_UPD_MASK)
#define uSDHC_DLL_CTRL_DLL_CTRL_SLV_DLY_TARGET0_MASK (0x78U)
#define uSDHC_DLL_CTRL_DLL_CTRL_SLV_DLY_TARGET0_SHIFT (3U)
#define uSDHC_DLL_CTRL_DLL_CTRL_SLV_DLY_TARGET0_WIDTH (4U)
#define uSDHC_DLL_CTRL_DLL_CTRL_SLV_DLY_TARGET0(x) (((uint32_t)(((uint32_t)(x)) << uSDHC_DLL_CTRL_DLL_CTRL_SLV_DLY_TARGET0_SHIFT)) & uSDHC_DLL_CTRL_DLL_CTRL_SLV_DLY_TARGET0_MASK)
#define uSDHC_DLL_CTRL_DLL_CTRL_GATE_UPDATE_MASK (0x80U)
#define uSDHC_DLL_CTRL_DLL_CTRL_GATE_UPDATE_SHIFT (7U)
#define uSDHC_DLL_CTRL_DLL_CTRL_GATE_UPDATE_WIDTH (1U)
#define uSDHC_DLL_CTRL_DLL_CTRL_GATE_UPDATE(x)   (((uint32_t)(((uint32_t)(x)) << uSDHC_DLL_CTRL_DLL_CTRL_GATE_UPDATE_SHIFT)) & uSDHC_DLL_CTRL_DLL_CTRL_GATE_UPDATE_MASK)
#define uSDHC_DLL_CTRL_DLL_CTRL_SLV_OVERRIDE_MASK (0x100U)
#define uSDHC_DLL_CTRL_DLL_CTRL_SLV_OVERRIDE_SHIFT (8U)
#define uSDHC_DLL_CTRL_DLL_CTRL_SLV_OVERRIDE_WIDTH (1U)
#define uSDHC_DLL_CTRL_DLL_CTRL_SLV_OVERRIDE(x)  (((uint32_t)(((uint32_t)(x)) << uSDHC_DLL_CTRL_DLL_CTRL_SLV_OVERRIDE_SHIFT)) & uSDHC_DLL_CTRL_DLL_CTRL_SLV_OVERRIDE_MASK)
#define uSDHC_DLL_CTRL_DLL_CTRL_SLV_OVERRIDE_VAL_MASK (0xFE00U)
#define uSDHC_DLL_CTRL_DLL_CTRL_SLV_OVERRIDE_VAL_SHIFT (9U)
#define uSDHC_DLL_CTRL_DLL_CTRL_SLV_OVERRIDE_VAL_WIDTH (7U)
#define uSDHC_DLL_CTRL_DLL_CTRL_SLV_OVERRIDE_VAL(x) (((uint32_t)(((uint32_t)(x)) << uSDHC_DLL_CTRL_DLL_CTRL_SLV_OVERRIDE_VAL_SHIFT)) & uSDHC_DLL_CTRL_DLL_CTRL_SLV_OVERRIDE_VAL_MASK)
#define uSDHC_DLL_CTRL_DLL_CTRL_SLV_DLY_TARGET1_MASK (0x70000U)
#define uSDHC_DLL_CTRL_DLL_CTRL_SLV_DLY_TARGET1_SHIFT (16U)
#define uSDHC_DLL_CTRL_DLL_CTRL_SLV_DLY_TARGET1_WIDTH (3U)
#define uSDHC_DLL_CTRL_DLL_CTRL_SLV_DLY_TARGET1(x) (((uint32_t)(((uint32_t)(x)) << uSDHC_DLL_CTRL_DLL_CTRL_SLV_DLY_TARGET1_SHIFT)) & uSDHC_DLL_CTRL_DLL_CTRL_SLV_DLY_TARGET1_MASK)
#define uSDHC_DLL_CTRL_DLL_CTRL_SLV_UPDATE_INT_MASK (0xFF00000U)
#define uSDHC_DLL_CTRL_DLL_CTRL_SLV_UPDATE_INT_SHIFT (20U)
#define uSDHC_DLL_CTRL_DLL_CTRL_SLV_UPDATE_INT_WIDTH (8U)
#define uSDHC_DLL_CTRL_DLL_CTRL_SLV_UPDATE_INT(x) (((uint32_t)(((uint32_t)(x)) << uSDHC_DLL_CTRL_DLL_CTRL_SLV_UPDATE_INT_SHIFT)) & uSDHC_DLL_CTRL_DLL_CTRL_SLV_UPDATE_INT_MASK)
#define uSDHC_DLL_CTRL_DLL_CTRL_REF_UPDATE_INT_MASK (0xF0000000U)
#define uSDHC_DLL_CTRL_DLL_CTRL_REF_UPDATE_INT_SHIFT (28U)
#define uSDHC_DLL_CTRL_DLL_CTRL_REF_UPDATE_INT_WIDTH (4U)
#define uSDHC_DLL_CTRL_DLL_CTRL_REF_UPDATE_INT(x) (((uint32_t)(((uint32_t)(x)) << uSDHC_DLL_CTRL_DLL_CTRL_REF_UPDATE_INT_SHIFT)) & uSDHC_DLL_CTRL_DLL_CTRL_REF_UPDATE_INT_MASK)
/*! @} */

/*! @name DLL_STATUS - DLL Status */
/*! @{ */
#define uSDHC_DLL_STATUS_DLL_STS_SLV_LOCK_MASK   (0x1U)
#define uSDHC_DLL_STATUS_DLL_STS_SLV_LOCK_SHIFT  (0U)
#define uSDHC_DLL_STATUS_DLL_STS_SLV_LOCK_WIDTH  (1U)
#define uSDHC_DLL_STATUS_DLL_STS_SLV_LOCK(x)     (((uint32_t)(((uint32_t)(x)) << uSDHC_DLL_STATUS_DLL_STS_SLV_LOCK_SHIFT)) & uSDHC_DLL_STATUS_DLL_STS_SLV_LOCK_MASK)
#define uSDHC_DLL_STATUS_DLL_STS_REF_LOCK_MASK   (0x2U)
#define uSDHC_DLL_STATUS_DLL_STS_REF_LOCK_SHIFT  (1U)
#define uSDHC_DLL_STATUS_DLL_STS_REF_LOCK_WIDTH  (1U)
#define uSDHC_DLL_STATUS_DLL_STS_REF_LOCK(x)     (((uint32_t)(((uint32_t)(x)) << uSDHC_DLL_STATUS_DLL_STS_REF_LOCK_SHIFT)) & uSDHC_DLL_STATUS_DLL_STS_REF_LOCK_MASK)
#define uSDHC_DLL_STATUS_DLL_STS_SLV_SEL_MASK    (0x1FCU)
#define uSDHC_DLL_STATUS_DLL_STS_SLV_SEL_SHIFT   (2U)
#define uSDHC_DLL_STATUS_DLL_STS_SLV_SEL_WIDTH   (7U)
#define uSDHC_DLL_STATUS_DLL_STS_SLV_SEL(x)      (((uint32_t)(((uint32_t)(x)) << uSDHC_DLL_STATUS_DLL_STS_SLV_SEL_SHIFT)) & uSDHC_DLL_STATUS_DLL_STS_SLV_SEL_MASK)
#define uSDHC_DLL_STATUS_DLL_STS_REF_SEL_MASK    (0xFE00U)
#define uSDHC_DLL_STATUS_DLL_STS_REF_SEL_SHIFT   (9U)
#define uSDHC_DLL_STATUS_DLL_STS_REF_SEL_WIDTH   (7U)
#define uSDHC_DLL_STATUS_DLL_STS_REF_SEL(x)      (((uint32_t)(((uint32_t)(x)) << uSDHC_DLL_STATUS_DLL_STS_REF_SEL_SHIFT)) & uSDHC_DLL_STATUS_DLL_STS_REF_SEL_MASK)
/*! @} */

/*! @name CLK_TUNE_CTRL_STATUS - CLK Tuning Control and Status */
/*! @{ */
#define uSDHC_CLK_TUNE_CTRL_STATUS_DLY_CELL_SET_POST_MASK (0xFU)
#define uSDHC_CLK_TUNE_CTRL_STATUS_DLY_CELL_SET_POST_SHIFT (0U)
#define uSDHC_CLK_TUNE_CTRL_STATUS_DLY_CELL_SET_POST_WIDTH (4U)
#define uSDHC_CLK_TUNE_CTRL_STATUS_DLY_CELL_SET_POST(x) (((uint32_t)(((uint32_t)(x)) << uSDHC_CLK_TUNE_CTRL_STATUS_DLY_CELL_SET_POST_SHIFT)) & uSDHC_CLK_TUNE_CTRL_STATUS_DLY_CELL_SET_POST_MASK)
#define uSDHC_CLK_TUNE_CTRL_STATUS_DLY_CELL_SET_OUT_MASK (0xF0U)
#define uSDHC_CLK_TUNE_CTRL_STATUS_DLY_CELL_SET_OUT_SHIFT (4U)
#define uSDHC_CLK_TUNE_CTRL_STATUS_DLY_CELL_SET_OUT_WIDTH (4U)
#define uSDHC_CLK_TUNE_CTRL_STATUS_DLY_CELL_SET_OUT(x) (((uint32_t)(((uint32_t)(x)) << uSDHC_CLK_TUNE_CTRL_STATUS_DLY_CELL_SET_OUT_SHIFT)) & uSDHC_CLK_TUNE_CTRL_STATUS_DLY_CELL_SET_OUT_MASK)
#define uSDHC_CLK_TUNE_CTRL_STATUS_DLY_CELL_SET_PRE_MASK (0x7F00U)
#define uSDHC_CLK_TUNE_CTRL_STATUS_DLY_CELL_SET_PRE_SHIFT (8U)
#define uSDHC_CLK_TUNE_CTRL_STATUS_DLY_CELL_SET_PRE_WIDTH (7U)
#define uSDHC_CLK_TUNE_CTRL_STATUS_DLY_CELL_SET_PRE(x) (((uint32_t)(((uint32_t)(x)) << uSDHC_CLK_TUNE_CTRL_STATUS_DLY_CELL_SET_PRE_SHIFT)) & uSDHC_CLK_TUNE_CTRL_STATUS_DLY_CELL_SET_PRE_MASK)
#define uSDHC_CLK_TUNE_CTRL_STATUS_NXT_ERR_MASK  (0x8000U)
#define uSDHC_CLK_TUNE_CTRL_STATUS_NXT_ERR_SHIFT (15U)
#define uSDHC_CLK_TUNE_CTRL_STATUS_NXT_ERR_WIDTH (1U)
#define uSDHC_CLK_TUNE_CTRL_STATUS_NXT_ERR(x)    (((uint32_t)(((uint32_t)(x)) << uSDHC_CLK_TUNE_CTRL_STATUS_NXT_ERR_SHIFT)) & uSDHC_CLK_TUNE_CTRL_STATUS_NXT_ERR_MASK)
#define uSDHC_CLK_TUNE_CTRL_STATUS_TAP_SEL_POST_MASK (0xF0000U)
#define uSDHC_CLK_TUNE_CTRL_STATUS_TAP_SEL_POST_SHIFT (16U)
#define uSDHC_CLK_TUNE_CTRL_STATUS_TAP_SEL_POST_WIDTH (4U)
#define uSDHC_CLK_TUNE_CTRL_STATUS_TAP_SEL_POST(x) (((uint32_t)(((uint32_t)(x)) << uSDHC_CLK_TUNE_CTRL_STATUS_TAP_SEL_POST_SHIFT)) & uSDHC_CLK_TUNE_CTRL_STATUS_TAP_SEL_POST_MASK)
#define uSDHC_CLK_TUNE_CTRL_STATUS_TAP_SEL_OUT_MASK (0xF00000U)
#define uSDHC_CLK_TUNE_CTRL_STATUS_TAP_SEL_OUT_SHIFT (20U)
#define uSDHC_CLK_TUNE_CTRL_STATUS_TAP_SEL_OUT_WIDTH (4U)
#define uSDHC_CLK_TUNE_CTRL_STATUS_TAP_SEL_OUT(x) (((uint32_t)(((uint32_t)(x)) << uSDHC_CLK_TUNE_CTRL_STATUS_TAP_SEL_OUT_SHIFT)) & uSDHC_CLK_TUNE_CTRL_STATUS_TAP_SEL_OUT_MASK)
#define uSDHC_CLK_TUNE_CTRL_STATUS_TAP_SEL_PRE_MASK (0x7F000000U)
#define uSDHC_CLK_TUNE_CTRL_STATUS_TAP_SEL_PRE_SHIFT (24U)
#define uSDHC_CLK_TUNE_CTRL_STATUS_TAP_SEL_PRE_WIDTH (7U)
#define uSDHC_CLK_TUNE_CTRL_STATUS_TAP_SEL_PRE(x) (((uint32_t)(((uint32_t)(x)) << uSDHC_CLK_TUNE_CTRL_STATUS_TAP_SEL_PRE_SHIFT)) & uSDHC_CLK_TUNE_CTRL_STATUS_TAP_SEL_PRE_MASK)
#define uSDHC_CLK_TUNE_CTRL_STATUS_PRE_ERR_MASK  (0x80000000U)
#define uSDHC_CLK_TUNE_CTRL_STATUS_PRE_ERR_SHIFT (31U)
#define uSDHC_CLK_TUNE_CTRL_STATUS_PRE_ERR_WIDTH (1U)
#define uSDHC_CLK_TUNE_CTRL_STATUS_PRE_ERR(x)    (((uint32_t)(((uint32_t)(x)) << uSDHC_CLK_TUNE_CTRL_STATUS_PRE_ERR_SHIFT)) & uSDHC_CLK_TUNE_CTRL_STATUS_PRE_ERR_MASK)
/*! @} */

/*! @name STROBE_DLL_CTRL - Strobe DLL control */
/*! @{ */
#define uSDHC_STROBE_DLL_CTRL_STROBE_DLL_CTRL_ENABLE_MASK (0x1U)
#define uSDHC_STROBE_DLL_CTRL_STROBE_DLL_CTRL_ENABLE_SHIFT (0U)
#define uSDHC_STROBE_DLL_CTRL_STROBE_DLL_CTRL_ENABLE_WIDTH (1U)
#define uSDHC_STROBE_DLL_CTRL_STROBE_DLL_CTRL_ENABLE(x) (((uint32_t)(((uint32_t)(x)) << uSDHC_STROBE_DLL_CTRL_STROBE_DLL_CTRL_ENABLE_SHIFT)) & uSDHC_STROBE_DLL_CTRL_STROBE_DLL_CTRL_ENABLE_MASK)
#define uSDHC_STROBE_DLL_CTRL_STROBE_DLL_CTRL_RESET_MASK (0x2U)
#define uSDHC_STROBE_DLL_CTRL_STROBE_DLL_CTRL_RESET_SHIFT (1U)
#define uSDHC_STROBE_DLL_CTRL_STROBE_DLL_CTRL_RESET_WIDTH (1U)
#define uSDHC_STROBE_DLL_CTRL_STROBE_DLL_CTRL_RESET(x) (((uint32_t)(((uint32_t)(x)) << uSDHC_STROBE_DLL_CTRL_STROBE_DLL_CTRL_RESET_SHIFT)) & uSDHC_STROBE_DLL_CTRL_STROBE_DLL_CTRL_RESET_MASK)
#define uSDHC_STROBE_DLL_CTRL_STROBE_DLL_CTRL_SLV_FORCE_UPD_MASK (0x4U)
#define uSDHC_STROBE_DLL_CTRL_STROBE_DLL_CTRL_SLV_FORCE_UPD_SHIFT (2U)
#define uSDHC_STROBE_DLL_CTRL_STROBE_DLL_CTRL_SLV_FORCE_UPD_WIDTH (1U)
#define uSDHC_STROBE_DLL_CTRL_STROBE_DLL_CTRL_SLV_FORCE_UPD(x) (((uint32_t)(((uint32_t)(x)) << uSDHC_STROBE_DLL_CTRL_STROBE_DLL_CTRL_SLV_FORCE_UPD_SHIFT)) & uSDHC_STROBE_DLL_CTRL_STROBE_DLL_CTRL_SLV_FORCE_UPD_MASK)
#define uSDHC_STROBE_DLL_CTRL_STROBE_DLL_CTRL_SLV_DLY_TARGET_MASK (0x38U)
#define uSDHC_STROBE_DLL_CTRL_STROBE_DLL_CTRL_SLV_DLY_TARGET_SHIFT (3U)
#define uSDHC_STROBE_DLL_CTRL_STROBE_DLL_CTRL_SLV_DLY_TARGET_WIDTH (3U)
#define uSDHC_STROBE_DLL_CTRL_STROBE_DLL_CTRL_SLV_DLY_TARGET(x) (((uint32_t)(((uint32_t)(x)) << uSDHC_STROBE_DLL_CTRL_STROBE_DLL_CTRL_SLV_DLY_TARGET_SHIFT)) & uSDHC_STROBE_DLL_CTRL_STROBE_DLL_CTRL_SLV_DLY_TARGET_MASK)
#define uSDHC_STROBE_DLL_CTRL_STROBE_DLL_CTRL_GATE_UPDATE_0_MASK (0x40U)
#define uSDHC_STROBE_DLL_CTRL_STROBE_DLL_CTRL_GATE_UPDATE_0_SHIFT (6U)
#define uSDHC_STROBE_DLL_CTRL_STROBE_DLL_CTRL_GATE_UPDATE_0_WIDTH (1U)
#define uSDHC_STROBE_DLL_CTRL_STROBE_DLL_CTRL_GATE_UPDATE_0(x) (((uint32_t)(((uint32_t)(x)) << uSDHC_STROBE_DLL_CTRL_STROBE_DLL_CTRL_GATE_UPDATE_0_SHIFT)) & uSDHC_STROBE_DLL_CTRL_STROBE_DLL_CTRL_GATE_UPDATE_0_MASK)
#define uSDHC_STROBE_DLL_CTRL_STROBE_DLL_CTRL_GATE_UPDATE_1_MASK (0x80U)
#define uSDHC_STROBE_DLL_CTRL_STROBE_DLL_CTRL_GATE_UPDATE_1_SHIFT (7U)
#define uSDHC_STROBE_DLL_CTRL_STROBE_DLL_CTRL_GATE_UPDATE_1_WIDTH (1U)
#define uSDHC_STROBE_DLL_CTRL_STROBE_DLL_CTRL_GATE_UPDATE_1(x) (((uint32_t)(((uint32_t)(x)) << uSDHC_STROBE_DLL_CTRL_STROBE_DLL_CTRL_GATE_UPDATE_1_SHIFT)) & uSDHC_STROBE_DLL_CTRL_STROBE_DLL_CTRL_GATE_UPDATE_1_MASK)
#define uSDHC_STROBE_DLL_CTRL_STROBE_DLL_CTRL_SLV_OVERRIDE_MASK (0x100U)
#define uSDHC_STROBE_DLL_CTRL_STROBE_DLL_CTRL_SLV_OVERRIDE_SHIFT (8U)
#define uSDHC_STROBE_DLL_CTRL_STROBE_DLL_CTRL_SLV_OVERRIDE_WIDTH (1U)
#define uSDHC_STROBE_DLL_CTRL_STROBE_DLL_CTRL_SLV_OVERRIDE(x) (((uint32_t)(((uint32_t)(x)) << uSDHC_STROBE_DLL_CTRL_STROBE_DLL_CTRL_SLV_OVERRIDE_SHIFT)) & uSDHC_STROBE_DLL_CTRL_STROBE_DLL_CTRL_SLV_OVERRIDE_MASK)
#define uSDHC_STROBE_DLL_CTRL_STROBE_DLL_CTRL_SLV_OVERRIDE_VAL_MASK (0xFE00U)
#define uSDHC_STROBE_DLL_CTRL_STROBE_DLL_CTRL_SLV_OVERRIDE_VAL_SHIFT (9U)
#define uSDHC_STROBE_DLL_CTRL_STROBE_DLL_CTRL_SLV_OVERRIDE_VAL_WIDTH (7U)
#define uSDHC_STROBE_DLL_CTRL_STROBE_DLL_CTRL_SLV_OVERRIDE_VAL(x) (((uint32_t)(((uint32_t)(x)) << uSDHC_STROBE_DLL_CTRL_STROBE_DLL_CTRL_SLV_OVERRIDE_VAL_SHIFT)) & uSDHC_STROBE_DLL_CTRL_STROBE_DLL_CTRL_SLV_OVERRIDE_VAL_MASK)
#define uSDHC_STROBE_DLL_CTRL_STROBE_DLL_CTRL_SLV_UPDATE_INT_MASK (0xFF00000U)
#define uSDHC_STROBE_DLL_CTRL_STROBE_DLL_CTRL_SLV_UPDATE_INT_SHIFT (20U)
#define uSDHC_STROBE_DLL_CTRL_STROBE_DLL_CTRL_SLV_UPDATE_INT_WIDTH (8U)
#define uSDHC_STROBE_DLL_CTRL_STROBE_DLL_CTRL_SLV_UPDATE_INT(x) (((uint32_t)(((uint32_t)(x)) << uSDHC_STROBE_DLL_CTRL_STROBE_DLL_CTRL_SLV_UPDATE_INT_SHIFT)) & uSDHC_STROBE_DLL_CTRL_STROBE_DLL_CTRL_SLV_UPDATE_INT_MASK)
#define uSDHC_STROBE_DLL_CTRL_STROBE_DLL_CTRL_REF_UPDATE_INT_MASK (0xF0000000U)
#define uSDHC_STROBE_DLL_CTRL_STROBE_DLL_CTRL_REF_UPDATE_INT_SHIFT (28U)
#define uSDHC_STROBE_DLL_CTRL_STROBE_DLL_CTRL_REF_UPDATE_INT_WIDTH (4U)
#define uSDHC_STROBE_DLL_CTRL_STROBE_DLL_CTRL_REF_UPDATE_INT(x) (((uint32_t)(((uint32_t)(x)) << uSDHC_STROBE_DLL_CTRL_STROBE_DLL_CTRL_REF_UPDATE_INT_SHIFT)) & uSDHC_STROBE_DLL_CTRL_STROBE_DLL_CTRL_REF_UPDATE_INT_MASK)
/*! @} */

/*! @name STROBE_DLL_STATUS - Strobe DLL status */
/*! @{ */
#define uSDHC_STROBE_DLL_STATUS_STROBE_DLL_STS_SLV_LOCK_MASK (0x1U)
#define uSDHC_STROBE_DLL_STATUS_STROBE_DLL_STS_SLV_LOCK_SHIFT (0U)
#define uSDHC_STROBE_DLL_STATUS_STROBE_DLL_STS_SLV_LOCK_WIDTH (1U)
#define uSDHC_STROBE_DLL_STATUS_STROBE_DLL_STS_SLV_LOCK(x) (((uint32_t)(((uint32_t)(x)) << uSDHC_STROBE_DLL_STATUS_STROBE_DLL_STS_SLV_LOCK_SHIFT)) & uSDHC_STROBE_DLL_STATUS_STROBE_DLL_STS_SLV_LOCK_MASK)
#define uSDHC_STROBE_DLL_STATUS_STROBE_DLL_STS_REF_LOCK_MASK (0x2U)
#define uSDHC_STROBE_DLL_STATUS_STROBE_DLL_STS_REF_LOCK_SHIFT (1U)
#define uSDHC_STROBE_DLL_STATUS_STROBE_DLL_STS_REF_LOCK_WIDTH (1U)
#define uSDHC_STROBE_DLL_STATUS_STROBE_DLL_STS_REF_LOCK(x) (((uint32_t)(((uint32_t)(x)) << uSDHC_STROBE_DLL_STATUS_STROBE_DLL_STS_REF_LOCK_SHIFT)) & uSDHC_STROBE_DLL_STATUS_STROBE_DLL_STS_REF_LOCK_MASK)
#define uSDHC_STROBE_DLL_STATUS_STROBE_DLL_STS_SLV_SEL_MASK (0x1FCU)
#define uSDHC_STROBE_DLL_STATUS_STROBE_DLL_STS_SLV_SEL_SHIFT (2U)
#define uSDHC_STROBE_DLL_STATUS_STROBE_DLL_STS_SLV_SEL_WIDTH (7U)
#define uSDHC_STROBE_DLL_STATUS_STROBE_DLL_STS_SLV_SEL(x) (((uint32_t)(((uint32_t)(x)) << uSDHC_STROBE_DLL_STATUS_STROBE_DLL_STS_SLV_SEL_SHIFT)) & uSDHC_STROBE_DLL_STATUS_STROBE_DLL_STS_SLV_SEL_MASK)
#define uSDHC_STROBE_DLL_STATUS_STROBE_DLL_STS_REF_SEL_MASK (0xFE00U)
#define uSDHC_STROBE_DLL_STATUS_STROBE_DLL_STS_REF_SEL_SHIFT (9U)
#define uSDHC_STROBE_DLL_STATUS_STROBE_DLL_STS_REF_SEL_WIDTH (7U)
#define uSDHC_STROBE_DLL_STATUS_STROBE_DLL_STS_REF_SEL(x) (((uint32_t)(((uint32_t)(x)) << uSDHC_STROBE_DLL_STATUS_STROBE_DLL_STS_REF_SEL_SHIFT)) & uSDHC_STROBE_DLL_STATUS_STROBE_DLL_STS_REF_SEL_MASK)
/*! @} */

/*! @name VEND_SPEC - Vendor Specific Register */
/*! @{ */
#define uSDHC_VEND_SPEC_VSELECT_MASK             (0x2U)
#define uSDHC_VEND_SPEC_VSELECT_SHIFT            (1U)
#define uSDHC_VEND_SPEC_VSELECT_WIDTH            (1U)
#define uSDHC_VEND_SPEC_VSELECT(x)               (((uint32_t)(((uint32_t)(x)) << uSDHC_VEND_SPEC_VSELECT_SHIFT)) & uSDHC_VEND_SPEC_VSELECT_MASK)
#define uSDHC_VEND_SPEC_CONFLICT_CHK_EN_MASK     (0x4U)
#define uSDHC_VEND_SPEC_CONFLICT_CHK_EN_SHIFT    (2U)
#define uSDHC_VEND_SPEC_CONFLICT_CHK_EN_WIDTH    (1U)
#define uSDHC_VEND_SPEC_CONFLICT_CHK_EN(x)       (((uint32_t)(((uint32_t)(x)) << uSDHC_VEND_SPEC_CONFLICT_CHK_EN_SHIFT)) & uSDHC_VEND_SPEC_CONFLICT_CHK_EN_MASK)
#define uSDHC_VEND_SPEC_AC12_WR_CHKBUSY_EN_MASK  (0x8U)
#define uSDHC_VEND_SPEC_AC12_WR_CHKBUSY_EN_SHIFT (3U)
#define uSDHC_VEND_SPEC_AC12_WR_CHKBUSY_EN_WIDTH (1U)
#define uSDHC_VEND_SPEC_AC12_WR_CHKBUSY_EN(x)    (((uint32_t)(((uint32_t)(x)) << uSDHC_VEND_SPEC_AC12_WR_CHKBUSY_EN_SHIFT)) & uSDHC_VEND_SPEC_AC12_WR_CHKBUSY_EN_MASK)
#define uSDHC_VEND_SPEC_FRC_SDCLK_ON_MASK        (0x100U)
#define uSDHC_VEND_SPEC_FRC_SDCLK_ON_SHIFT       (8U)
#define uSDHC_VEND_SPEC_FRC_SDCLK_ON_WIDTH       (1U)
#define uSDHC_VEND_SPEC_FRC_SDCLK_ON(x)          (((uint32_t)(((uint32_t)(x)) << uSDHC_VEND_SPEC_FRC_SDCLK_ON_SHIFT)) & uSDHC_VEND_SPEC_FRC_SDCLK_ON_MASK)
#define uSDHC_VEND_SPEC_CRC_CHK_DIS_MASK         (0x8000U)
#define uSDHC_VEND_SPEC_CRC_CHK_DIS_SHIFT        (15U)
#define uSDHC_VEND_SPEC_CRC_CHK_DIS_WIDTH        (1U)
#define uSDHC_VEND_SPEC_CRC_CHK_DIS(x)           (((uint32_t)(((uint32_t)(x)) << uSDHC_VEND_SPEC_CRC_CHK_DIS_SHIFT)) & uSDHC_VEND_SPEC_CRC_CHK_DIS_MASK)
#define uSDHC_VEND_SPEC_CMD_BYTE_EN_MASK         (0x80000000U)
#define uSDHC_VEND_SPEC_CMD_BYTE_EN_SHIFT        (31U)
#define uSDHC_VEND_SPEC_CMD_BYTE_EN_WIDTH        (1U)
#define uSDHC_VEND_SPEC_CMD_BYTE_EN(x)           (((uint32_t)(((uint32_t)(x)) << uSDHC_VEND_SPEC_CMD_BYTE_EN_SHIFT)) & uSDHC_VEND_SPEC_CMD_BYTE_EN_MASK)
/*! @} */

/*! @name MMC_BOOT - MMC Boot */
/*! @{ */
#define uSDHC_MMC_BOOT_DTOCV_ACK_MASK            (0xFU)
#define uSDHC_MMC_BOOT_DTOCV_ACK_SHIFT           (0U)
#define uSDHC_MMC_BOOT_DTOCV_ACK_WIDTH           (4U)
#define uSDHC_MMC_BOOT_DTOCV_ACK(x)              (((uint32_t)(((uint32_t)(x)) << uSDHC_MMC_BOOT_DTOCV_ACK_SHIFT)) & uSDHC_MMC_BOOT_DTOCV_ACK_MASK)
#define uSDHC_MMC_BOOT_BOOT_ACK_MASK             (0x10U)
#define uSDHC_MMC_BOOT_BOOT_ACK_SHIFT            (4U)
#define uSDHC_MMC_BOOT_BOOT_ACK_WIDTH            (1U)
#define uSDHC_MMC_BOOT_BOOT_ACK(x)               (((uint32_t)(((uint32_t)(x)) << uSDHC_MMC_BOOT_BOOT_ACK_SHIFT)) & uSDHC_MMC_BOOT_BOOT_ACK_MASK)
#define uSDHC_MMC_BOOT_BOOT_MODE_MASK            (0x20U)
#define uSDHC_MMC_BOOT_BOOT_MODE_SHIFT           (5U)
#define uSDHC_MMC_BOOT_BOOT_MODE_WIDTH           (1U)
#define uSDHC_MMC_BOOT_BOOT_MODE(x)              (((uint32_t)(((uint32_t)(x)) << uSDHC_MMC_BOOT_BOOT_MODE_SHIFT)) & uSDHC_MMC_BOOT_BOOT_MODE_MASK)
#define uSDHC_MMC_BOOT_BOOT_EN_MASK              (0x40U)
#define uSDHC_MMC_BOOT_BOOT_EN_SHIFT             (6U)
#define uSDHC_MMC_BOOT_BOOT_EN_WIDTH             (1U)
#define uSDHC_MMC_BOOT_BOOT_EN(x)                (((uint32_t)(((uint32_t)(x)) << uSDHC_MMC_BOOT_BOOT_EN_SHIFT)) & uSDHC_MMC_BOOT_BOOT_EN_MASK)
#define uSDHC_MMC_BOOT_AUTO_SABG_EN_MASK         (0x80U)
#define uSDHC_MMC_BOOT_AUTO_SABG_EN_SHIFT        (7U)
#define uSDHC_MMC_BOOT_AUTO_SABG_EN_WIDTH        (1U)
#define uSDHC_MMC_BOOT_AUTO_SABG_EN(x)           (((uint32_t)(((uint32_t)(x)) << uSDHC_MMC_BOOT_AUTO_SABG_EN_SHIFT)) & uSDHC_MMC_BOOT_AUTO_SABG_EN_MASK)
#define uSDHC_MMC_BOOT_DISABLE_TIME_OUT_MASK     (0x100U)
#define uSDHC_MMC_BOOT_DISABLE_TIME_OUT_SHIFT    (8U)
#define uSDHC_MMC_BOOT_DISABLE_TIME_OUT_WIDTH    (1U)
#define uSDHC_MMC_BOOT_DISABLE_TIME_OUT(x)       (((uint32_t)(((uint32_t)(x)) << uSDHC_MMC_BOOT_DISABLE_TIME_OUT_SHIFT)) & uSDHC_MMC_BOOT_DISABLE_TIME_OUT_MASK)
#define uSDHC_MMC_BOOT_BOOT_BLK_CNT_MASK         (0xFFFF0000U)
#define uSDHC_MMC_BOOT_BOOT_BLK_CNT_SHIFT        (16U)
#define uSDHC_MMC_BOOT_BOOT_BLK_CNT_WIDTH        (16U)
#define uSDHC_MMC_BOOT_BOOT_BLK_CNT(x)           (((uint32_t)(((uint32_t)(x)) << uSDHC_MMC_BOOT_BOOT_BLK_CNT_SHIFT)) & uSDHC_MMC_BOOT_BOOT_BLK_CNT_MASK)
/*! @} */

/*! @name VEND_SPEC2 - Vendor Specific 2 Register */
/*! @{ */
#define uSDHC_VEND_SPEC2_CARD_INT_D3_TEST_MASK   (0x8U)
#define uSDHC_VEND_SPEC2_CARD_INT_D3_TEST_SHIFT  (3U)
#define uSDHC_VEND_SPEC2_CARD_INT_D3_TEST_WIDTH  (1U)
#define uSDHC_VEND_SPEC2_CARD_INT_D3_TEST(x)     (((uint32_t)(((uint32_t)(x)) << uSDHC_VEND_SPEC2_CARD_INT_D3_TEST_SHIFT)) & uSDHC_VEND_SPEC2_CARD_INT_D3_TEST_MASK)
#define uSDHC_VEND_SPEC2_TUNING_8bit_EN_MASK     (0x10U)
#define uSDHC_VEND_SPEC2_TUNING_8bit_EN_SHIFT    (4U)
#define uSDHC_VEND_SPEC2_TUNING_8bit_EN_WIDTH    (1U)
#define uSDHC_VEND_SPEC2_TUNING_8bit_EN(x)       (((uint32_t)(((uint32_t)(x)) << uSDHC_VEND_SPEC2_TUNING_8bit_EN_SHIFT)) & uSDHC_VEND_SPEC2_TUNING_8bit_EN_MASK)
#define uSDHC_VEND_SPEC2_TUNING_1bit_EN_MASK     (0x20U)
#define uSDHC_VEND_SPEC2_TUNING_1bit_EN_SHIFT    (5U)
#define uSDHC_VEND_SPEC2_TUNING_1bit_EN_WIDTH    (1U)
#define uSDHC_VEND_SPEC2_TUNING_1bit_EN(x)       (((uint32_t)(((uint32_t)(x)) << uSDHC_VEND_SPEC2_TUNING_1bit_EN_SHIFT)) & uSDHC_VEND_SPEC2_TUNING_1bit_EN_MASK)
#define uSDHC_VEND_SPEC2_TUNING_CMD_EN_MASK      (0x40U)
#define uSDHC_VEND_SPEC2_TUNING_CMD_EN_SHIFT     (6U)
#define uSDHC_VEND_SPEC2_TUNING_CMD_EN_WIDTH     (1U)
#define uSDHC_VEND_SPEC2_TUNING_CMD_EN(x)        (((uint32_t)(((uint32_t)(x)) << uSDHC_VEND_SPEC2_TUNING_CMD_EN_SHIFT)) & uSDHC_VEND_SPEC2_TUNING_CMD_EN_MASK)
#define uSDHC_VEND_SPEC2_HS400_WR_CLK_STOP_EN_MASK (0x400U)
#define uSDHC_VEND_SPEC2_HS400_WR_CLK_STOP_EN_SHIFT (10U)
#define uSDHC_VEND_SPEC2_HS400_WR_CLK_STOP_EN_WIDTH (1U)
#define uSDHC_VEND_SPEC2_HS400_WR_CLK_STOP_EN(x) (((uint32_t)(((uint32_t)(x)) << uSDHC_VEND_SPEC2_HS400_WR_CLK_STOP_EN_SHIFT)) & uSDHC_VEND_SPEC2_HS400_WR_CLK_STOP_EN_MASK)
#define uSDHC_VEND_SPEC2_HS400_RD_CLK_STOP_EN_MASK (0x800U)
#define uSDHC_VEND_SPEC2_HS400_RD_CLK_STOP_EN_SHIFT (11U)
#define uSDHC_VEND_SPEC2_HS400_RD_CLK_STOP_EN_WIDTH (1U)
#define uSDHC_VEND_SPEC2_HS400_RD_CLK_STOP_EN(x) (((uint32_t)(((uint32_t)(x)) << uSDHC_VEND_SPEC2_HS400_RD_CLK_STOP_EN_SHIFT)) & uSDHC_VEND_SPEC2_HS400_RD_CLK_STOP_EN_MASK)
#define uSDHC_VEND_SPEC2_ACMD23_ARGU2_EN_MASK    (0x1000U)
#define uSDHC_VEND_SPEC2_ACMD23_ARGU2_EN_SHIFT   (12U)
#define uSDHC_VEND_SPEC2_ACMD23_ARGU2_EN_WIDTH   (1U)
#define uSDHC_VEND_SPEC2_ACMD23_ARGU2_EN(x)      (((uint32_t)(((uint32_t)(x)) << uSDHC_VEND_SPEC2_ACMD23_ARGU2_EN_SHIFT)) & uSDHC_VEND_SPEC2_ACMD23_ARGU2_EN_MASK)
#define uSDHC_VEND_SPEC2_EN_32K_CLK_MASK         (0x8000U)
#define uSDHC_VEND_SPEC2_EN_32K_CLK_SHIFT        (15U)
#define uSDHC_VEND_SPEC2_EN_32K_CLK_WIDTH        (1U)
#define uSDHC_VEND_SPEC2_EN_32K_CLK(x)           (((uint32_t)(((uint32_t)(x)) << uSDHC_VEND_SPEC2_EN_32K_CLK_SHIFT)) & uSDHC_VEND_SPEC2_EN_32K_CLK_MASK)
#define uSDHC_VEND_SPEC2_FBCLK_TAP_SEL_MASK      (0xFFFF0000U)
#define uSDHC_VEND_SPEC2_FBCLK_TAP_SEL_SHIFT     (16U)
#define uSDHC_VEND_SPEC2_FBCLK_TAP_SEL_WIDTH     (16U)
#define uSDHC_VEND_SPEC2_FBCLK_TAP_SEL(x)        (((uint32_t)(((uint32_t)(x)) << uSDHC_VEND_SPEC2_FBCLK_TAP_SEL_SHIFT)) & uSDHC_VEND_SPEC2_FBCLK_TAP_SEL_MASK)
/*! @} */

/*! @name TUNING_CTRL - Tuning Control */
/*! @{ */
#define uSDHC_TUNING_CTRL_TUNING_START_TAP_MASK  (0xFFU)
#define uSDHC_TUNING_CTRL_TUNING_START_TAP_SHIFT (0U)
#define uSDHC_TUNING_CTRL_TUNING_START_TAP_WIDTH (8U)
#define uSDHC_TUNING_CTRL_TUNING_START_TAP(x)    (((uint32_t)(((uint32_t)(x)) << uSDHC_TUNING_CTRL_TUNING_START_TAP_SHIFT)) & uSDHC_TUNING_CTRL_TUNING_START_TAP_MASK)
#define uSDHC_TUNING_CTRL_TUNING_COUNTER_MASK    (0xFF00U)
#define uSDHC_TUNING_CTRL_TUNING_COUNTER_SHIFT   (8U)
#define uSDHC_TUNING_CTRL_TUNING_COUNTER_WIDTH   (8U)
#define uSDHC_TUNING_CTRL_TUNING_COUNTER(x)      (((uint32_t)(((uint32_t)(x)) << uSDHC_TUNING_CTRL_TUNING_COUNTER_SHIFT)) & uSDHC_TUNING_CTRL_TUNING_COUNTER_MASK)
#define uSDHC_TUNING_CTRL_TUNING_STEP_MASK       (0x70000U)
#define uSDHC_TUNING_CTRL_TUNING_STEP_SHIFT      (16U)
#define uSDHC_TUNING_CTRL_TUNING_STEP_WIDTH      (3U)
#define uSDHC_TUNING_CTRL_TUNING_STEP(x)         (((uint32_t)(((uint32_t)(x)) << uSDHC_TUNING_CTRL_TUNING_STEP_SHIFT)) & uSDHC_TUNING_CTRL_TUNING_STEP_MASK)
#define uSDHC_TUNING_CTRL_TUNING_WINDOW_MASK     (0x700000U)
#define uSDHC_TUNING_CTRL_TUNING_WINDOW_SHIFT    (20U)
#define uSDHC_TUNING_CTRL_TUNING_WINDOW_WIDTH    (3U)
#define uSDHC_TUNING_CTRL_TUNING_WINDOW(x)       (((uint32_t)(((uint32_t)(x)) << uSDHC_TUNING_CTRL_TUNING_WINDOW_SHIFT)) & uSDHC_TUNING_CTRL_TUNING_WINDOW_MASK)
#define uSDHC_TUNING_CTRL_STD_TUNING_EN_MASK     (0x1000000U)
#define uSDHC_TUNING_CTRL_STD_TUNING_EN_SHIFT    (24U)
#define uSDHC_TUNING_CTRL_STD_TUNING_EN_WIDTH    (1U)
#define uSDHC_TUNING_CTRL_STD_TUNING_EN(x)       (((uint32_t)(((uint32_t)(x)) << uSDHC_TUNING_CTRL_STD_TUNING_EN_SHIFT)) & uSDHC_TUNING_CTRL_STD_TUNING_EN_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group uSDHC_Register_Masks */


/*!
 * @}
 */ /* end of group uSDHC_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- WKPU Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup WKPU_Peripheral_Access_Layer WKPU Peripheral Access Layer
 * @{
 */

/** WKPU - Register Layout Typedef */
typedef struct {
  __IO uint32_t NSR;                               /**< NMI Status Flag Register, offset: 0x0 */
  uint8_t RESERVED_0[4];
  __IO uint32_t NCR;                               /**< NMI Configuration Register, offset: 0x8 */
  uint8_t RESERVED_1[4];
  __IO uint32_t WBMSR;                             /**< Wakeup Boot Mode Select Register, offset: 0x10 */
  __IO uint32_t WISR;                              /**< Wakeup/Interrupt Status Flag Register, offset: 0x14 */
  __IO uint32_t IRER;                              /**< Interrupt Request Enable Register, offset: 0x18 */
  __IO uint32_t WRER;                              /**< Wakeup Request Enable Register, offset: 0x1C */
  uint8_t RESERVED_2[8];
  __IO uint32_t WIREER;                            /**< Wakeup/Interrupt Rising-Edge Event Enable Register, offset: 0x28 */
  __IO uint32_t WIFEER;                            /**< Wakeup/Interrupt Falling-Edge Event Enable Register, offset: 0x2C */
  __IO uint32_t WIFER;                             /**< Wakeup/Interrupt Filter Enable Register, offset: 0x30 */
  __IO uint32_t WIPER;                             /**< Wakeup/Interrupt Pull Enable Register, offset: 0x34 */
} WKPU_Type, *WKPU_MemMapPtr;

/** Number of instances of the WKPU module. */
#define WKPU_INSTANCE_COUNT                      (1u)

/* WKPU - Peripheral instance base addresses */
/** Peripheral WKPU base address */
#define WKPU_BASE                                (0x40090000u)
/** Peripheral WKPU base pointer */
#define WKPU                                     ((WKPU_Type *)WKPU_BASE)
/** Array initializer of WKPU peripheral base addresses */
#define WKPU_BASE_ADDRS                          { WKPU_BASE }
/** Array initializer of WKPU peripheral base pointers */
#define WKPU_BASE_PTRS                           { WKPU }

/* ----------------------------------------------------------------------------
   -- WKPU Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup WKPU_Register_Masks WKPU Register Masks
 * @{
 */

/*! @name NSR - NMI Status Flag Register */
/*! @{ */
#define WKPU_NSR_NOVF0_MASK                      (0x40000000U)
#define WKPU_NSR_NOVF0_SHIFT                     (30U)
#define WKPU_NSR_NOVF0_WIDTH                     (1U)
#define WKPU_NSR_NOVF0(x)                        (((uint32_t)(((uint32_t)(x)) << WKPU_NSR_NOVF0_SHIFT)) & WKPU_NSR_NOVF0_MASK)
#define WKPU_NSR_NIF0_MASK                       (0x80000000U)
#define WKPU_NSR_NIF0_SHIFT                      (31U)
#define WKPU_NSR_NIF0_WIDTH                      (1U)
#define WKPU_NSR_NIF0(x)                         (((uint32_t)(((uint32_t)(x)) << WKPU_NSR_NIF0_SHIFT)) & WKPU_NSR_NIF0_MASK)
/*! @} */

/*! @name NCR - NMI Configuration Register */
/*! @{ */
#define WKPU_NCR_NFE0_MASK                       (0x1000000U)
#define WKPU_NCR_NFE0_SHIFT                      (24U)
#define WKPU_NCR_NFE0_WIDTH                      (1U)
#define WKPU_NCR_NFE0(x)                         (((uint32_t)(((uint32_t)(x)) << WKPU_NCR_NFE0_SHIFT)) & WKPU_NCR_NFE0_MASK)
#define WKPU_NCR_NFEE0_MASK                      (0x2000000U)
#define WKPU_NCR_NFEE0_SHIFT                     (25U)
#define WKPU_NCR_NFEE0_WIDTH                     (1U)
#define WKPU_NCR_NFEE0(x)                        (((uint32_t)(((uint32_t)(x)) << WKPU_NCR_NFEE0_SHIFT)) & WKPU_NCR_NFEE0_MASK)
#define WKPU_NCR_NREE0_MASK                      (0x4000000U)
#define WKPU_NCR_NREE0_SHIFT                     (26U)
#define WKPU_NCR_NREE0_WIDTH                     (1U)
#define WKPU_NCR_NREE0(x)                        (((uint32_t)(((uint32_t)(x)) << WKPU_NCR_NREE0_SHIFT)) & WKPU_NCR_NREE0_MASK)
#define WKPU_NCR_NWRE0_MASK                      (0x10000000U)
#define WKPU_NCR_NWRE0_SHIFT                     (28U)
#define WKPU_NCR_NWRE0_WIDTH                     (1U)
#define WKPU_NCR_NWRE0(x)                        (((uint32_t)(((uint32_t)(x)) << WKPU_NCR_NWRE0_SHIFT)) & WKPU_NCR_NWRE0_MASK)
#define WKPU_NCR_NDSS0_MASK                      (0x60000000U)
#define WKPU_NCR_NDSS0_SHIFT                     (29U)
#define WKPU_NCR_NDSS0_WIDTH                     (2U)
#define WKPU_NCR_NDSS0(x)                        (((uint32_t)(((uint32_t)(x)) << WKPU_NCR_NDSS0_SHIFT)) & WKPU_NCR_NDSS0_MASK)
#define WKPU_NCR_NLOCK0_MASK                     (0x80000000U)
#define WKPU_NCR_NLOCK0_SHIFT                    (31U)
#define WKPU_NCR_NLOCK0_WIDTH                    (1U)
#define WKPU_NCR_NLOCK0(x)                       (((uint32_t)(((uint32_t)(x)) << WKPU_NCR_NLOCK0_SHIFT)) & WKPU_NCR_NLOCK0_MASK)
/*! @} */

/*! @name WBMSR - Wakeup Boot Mode Select Register */
/*! @{ */
#define WKPU_WBMSR_WBMS_32_MASK                  (0xFFFFFFFFU)
#define WKPU_WBMSR_WBMS_32_SHIFT                 (0U)
#define WKPU_WBMSR_WBMS_32_WIDTH                 (32U)
#define WKPU_WBMSR_WBMS_32(x)                    (((uint32_t)(((uint32_t)(x)) << WKPU_WBMSR_WBMS_32_SHIFT)) & WKPU_WBMSR_WBMS_32_MASK)
/*! @} */

/*! @name WISR - Wakeup/Interrupt Status Flag Register */
/*! @{ */
#define WKPU_WISR_EIF_MASK                       (0xFFFFFFFFU)
#define WKPU_WISR_EIF_SHIFT                      (0U)
#define WKPU_WISR_EIF_WIDTH                      (32U)
#define WKPU_WISR_EIF(x)                         (((uint32_t)(((uint32_t)(x)) << WKPU_WISR_EIF_SHIFT)) & WKPU_WISR_EIF_MASK)
/*! @} */

/*! @name IRER - Interrupt Request Enable Register */
/*! @{ */
#define WKPU_IRER_EIRE_MASK                      (0xFFFFFFFFU)
#define WKPU_IRER_EIRE_SHIFT                     (0U)
#define WKPU_IRER_EIRE_WIDTH                     (32U)
#define WKPU_IRER_EIRE(x)                        (((uint32_t)(((uint32_t)(x)) << WKPU_IRER_EIRE_SHIFT)) & WKPU_IRER_EIRE_MASK)
/*! @} */

/*! @name WRER - Wakeup Request Enable Register */
/*! @{ */
#define WKPU_WRER_WRE_MASK                       (0xFFFFFFFFU)
#define WKPU_WRER_WRE_SHIFT                      (0U)
#define WKPU_WRER_WRE_WIDTH                      (32U)
#define WKPU_WRER_WRE(x)                         (((uint32_t)(((uint32_t)(x)) << WKPU_WRER_WRE_SHIFT)) & WKPU_WRER_WRE_MASK)
/*! @} */

/*! @name WIREER - Wakeup/Interrupt Rising-Edge Event Enable Register */
/*! @{ */
#define WKPU_WIREER_IREE_MASK                    (0xFFFFFFFFU)
#define WKPU_WIREER_IREE_SHIFT                   (0U)
#define WKPU_WIREER_IREE_WIDTH                   (32U)
#define WKPU_WIREER_IREE(x)                      (((uint32_t)(((uint32_t)(x)) << WKPU_WIREER_IREE_SHIFT)) & WKPU_WIREER_IREE_MASK)
/*! @} */

/*! @name WIFEER - Wakeup/Interrupt Falling-Edge Event Enable Register */
/*! @{ */
#define WKPU_WIFEER_IFEEx_MASK                   (0xFFFFFFFFU)
#define WKPU_WIFEER_IFEEx_SHIFT                  (0U)
#define WKPU_WIFEER_IFEEx_WIDTH                  (32U)
#define WKPU_WIFEER_IFEEx(x)                     (((uint32_t)(((uint32_t)(x)) << WKPU_WIFEER_IFEEx_SHIFT)) & WKPU_WIFEER_IFEEx_MASK)
/*! @} */

/*! @name WIFER - Wakeup/Interrupt Filter Enable Register */
/*! @{ */
#define WKPU_WIFER_IFE_MASK                      (0x7FFFFFFFU)
#define WKPU_WIFER_IFE_SHIFT                     (0U)
#define WKPU_WIFER_IFE_WIDTH                     (31U)
#define WKPU_WIFER_IFE(x)                        (((uint32_t)(((uint32_t)(x)) << WKPU_WIFER_IFE_SHIFT)) & WKPU_WIFER_IFE_MASK)
/*! @} */

/*! @name WIPER - Wakeup/Interrupt Pull Enable Register */
/*! @{ */
#define WKPU_WIPER_IPUE_MASK                     (0x7FFFFFFFU)
#define WKPU_WIPER_IPUE_SHIFT                    (0U)
#define WKPU_WIPER_IPUE_WIDTH                    (31U)
#define WKPU_WIPER_IPUE(x)                       (((uint32_t)(((uint32_t)(x)) << WKPU_WIPER_IPUE_SHIFT)) & WKPU_WIPER_IPUE_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group WKPU_Register_Masks */


/*!
 * @}
 */ /* end of group WKPU_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- XRDC Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup XRDC_Peripheral_Access_Layer XRDC Peripheral Access Layer
 * @{
 */

/** XRDC - Size of Registers Arrays */
#define XRDC_MDACFG_COUNT                         22u
#define XRDC_MRCFG_COUNT                          14u
#define XRDC_DERRLOC_COUNT                        8u
#define XRDC_DERR_COUNT                           20u
#define XRDC_PID_COUNT                            19u
#define XRDC_MDA_Wm_COUNT                         22u
#define XRDC_PDAC_COUNT                           512u
#define XRDC_MRGD_COUNT                           256u

/** XRDC - Register Layout Typedef */
typedef struct {
  __IO uint32_t CR;                                /**< Control Register, offset: 0x0 */
  __IO uint8_t RESERVED_0[236];
  __I  uint32_t HWCFG0;                            /**< Hardware Configuration Register 0, offset: 0xF0 */
  __I  uint32_t HWCFG1;                            /**< Hardware Configuration Register 1, offset: 0xF4 */
  __I  uint32_t HWCFG2;                            /**< Hardware Configuration Register 2, offset: 0xF8 */
  __IO uint8_t RESERVED_1[4];
  __I  uint8_t MDACFG[XRDC_MDACFG_COUNT];          /**< Master Domain Assignment Configuration Register, array offset: 0x100, array step: 0x1 */
  __IO uint8_t RESERVED_2[42];
  __I  uint8_t MRCFG[XRDC_MRCFG_COUNT];            /**< Memory Region Configuration Register, array offset: 0x140, array step: 0x1 */
  __IO uint8_t RESERVED_3[178];
  __I  uint32_t DERRLOC[XRDC_DERRLOC_COUNT];       /**< Domain Error Location Register, array offset: 0x200, array step: 0x4 */
  __IO uint8_t RESERVED_4[480];
  struct {                                         /* offset: 0x400, array step: 0x10 */
    __I  uint32_t W0;                              /**< Domain Error Word0 Register, array offset: 0x400, array step: 0x10 */
    __I  uint32_t W1;                              /**< Domain Error Word1 Register, array offset: 0x404, array step: 0x10 */
    __I  uint32_t W2;                              /**< Domain Error Word2 Register, array offset: 0x408, array step: 0x10 */
    __IO uint32_t W3;                              /**< Domain Error Word3 Register, array offset: 0x40C, array step: 0x10 */
  } DERR[XRDC_DERR_COUNT];
  __IO uint8_t RESERVED_5[448];
  __IO uint32_t PID[XRDC_PID_COUNT];               /**< Process Identifier, array offset: 0x700, array step: 0x4 */
  __IO uint8_t RESERVED_6[180];
  struct {                                         /* offset: 0x800, array step: 0x20 */
    __IO uint32_t MDA_Wm;                          /**< Master Domain Assignment Wm,n (DFMT=0), array offset: 0x800, array step: 0x20 */
    __IO uint8_t RESERVED_0[28];
  } MDA_Wm[XRDC_MDA_Wm_COUNT];
  __IO uint8_t RESERVED_7[1344];
  struct {                                         /* offset: 0x1000, array step: 0x8 */
    __IO uint32_t W0;                              /**< Peripheral Domain Access Control W0, array offset: 0x1000, array step: 0x8 */
    __IO uint32_t W1;                              /**< Peripheral Domain Access Control W1, array offset: 0x1004, array step: 0x8 */
  } PDAC[XRDC_PDAC_COUNT];
  struct {                                         /* offset: 0x2000, array step: 0x20 */
    __IO uint32_t W0;                              /**< Memory Region Descriptor W0, array offset: 0x2000, array step: 0x20 */
    __IO uint32_t W1;                              /**< Memory Region Descriptor W1, array offset: 0x2004, array step: 0x20 */
    __IO uint32_t W2;                              /**< Memory Region Descriptor W2, array offset: 0x2008, array step: 0x20 */
    __IO uint32_t W3;                              /**< Memory Region Descriptor W3, array offset: 0x200C, array step: 0x20 */
    __IO uint8_t RESERVED_0[16];
  } MRGD[XRDC_MRGD_COUNT];
} XRDC_Type, *XRDC_MemMapPtr;

/** Number of instances of the XRDC module. */
#define XRDC_INSTANCE_COUNT                      (2u)

/* XRDC - Peripheral instance base addresses */
/** Peripheral XRDC_0 base address */
#define XRDC_0_BASE                              (0x401A4000u)
/** Peripheral XRDC_1 base address */
#define XRDC_1_BASE                              (0x44004000u)
/** Peripheral XRDC_0 base pointer */
#define XRDC_0                                   ((XRDC_Type *)XRDC_0_BASE)
/** Peripheral XRDC_1 base pointer */
#define XRDC_1                                   ((XRDC_Type *)XRDC_1_BASE)
/** Array initializer of XRDC peripheral base addresses */
#define XRDC_BASE_ADDRS                          { XRDC_0_BASE, XRDC_1_BASE }
/** Array initializer of XRDC peripheral base pointers */
#define XRDC_BASE_PTRS                           { XRDC_0, XRDC_1 }

/* ----------------------------------------------------------------------------
   -- XRDC Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup XRDC_Register_Masks XRDC Register Masks
 * @{
 */

/* CR Bit Fields */
#define XRDC_CR_GVLD_MASK                        0x1u
#define XRDC_CR_GVLD_SHIFT                       0u
#define XRDC_CR_GVLD_WIDTH                       1u
#define XRDC_CR_GVLD(x)                          (((uint32_t)(((uint32_t)(x))<<XRDC_CR_GVLD_SHIFT))&XRDC_CR_GVLD_MASK)
#define XRDC_CR_HRL_MASK                         0x1Eu
#define XRDC_CR_HRL_SHIFT                        1u
#define XRDC_CR_HRL_WIDTH                        4u
#define XRDC_CR_HRL(x)                           (((uint32_t)(((uint32_t)(x))<<XRDC_CR_HRL_SHIFT))&XRDC_CR_HRL_MASK)
#define XRDC_CR_MRF_MASK                         0x80u
#define XRDC_CR_MRF_SHIFT                        7u
#define XRDC_CR_MRF_WIDTH                        1u
#define XRDC_CR_MRF(x)                           (((uint32_t)(((uint32_t)(x))<<XRDC_CR_MRF_SHIFT))&XRDC_CR_MRF_MASK)
#define XRDC_CR_VAW_MASK                         0x100u
#define XRDC_CR_VAW_SHIFT                        8u
#define XRDC_CR_VAW_WIDTH                        1u
#define XRDC_CR_VAW(x)                           (((uint32_t)(((uint32_t)(x))<<XRDC_CR_VAW_SHIFT))&XRDC_CR_VAW_MASK)
#define XRDC_CR_LK1_MASK                         0x40000000u
#define XRDC_CR_LK1_SHIFT                        30u
#define XRDC_CR_LK1_WIDTH                        1u
#define XRDC_CR_LK1(x)                           (((uint32_t)(((uint32_t)(x))<<XRDC_CR_LK1_SHIFT))&XRDC_CR_LK1_MASK)
/* HWCFG0 Bit Fields */
#define XRDC_HWCFG0_NDID_MASK                    0xFFu
#define XRDC_HWCFG0_NDID_SHIFT                   0u
#define XRDC_HWCFG0_NDID_WIDTH                   8u
#define XRDC_HWCFG0_NDID(x)                      (((uint32_t)(((uint32_t)(x))<<XRDC_HWCFG0_NDID_SHIFT))&XRDC_HWCFG0_NDID_MASK)
#define XRDC_HWCFG0_NMSTR_MASK                   0xFF00u
#define XRDC_HWCFG0_NMSTR_SHIFT                  8u
#define XRDC_HWCFG0_NMSTR_WIDTH                  8u
#define XRDC_HWCFG0_NMSTR(x)                     (((uint32_t)(((uint32_t)(x))<<XRDC_HWCFG0_NMSTR_SHIFT))&XRDC_HWCFG0_NMSTR_MASK)
#define XRDC_HWCFG0_NMRC_MASK                    0xFF0000u
#define XRDC_HWCFG0_NMRC_SHIFT                   16u
#define XRDC_HWCFG0_NMRC_WIDTH                   8u
#define XRDC_HWCFG0_NMRC(x)                      (((uint32_t)(((uint32_t)(x))<<XRDC_HWCFG0_NMRC_SHIFT))&XRDC_HWCFG0_NMRC_MASK)
#define XRDC_HWCFG0_NPAC_MASK                    0xF000000u
#define XRDC_HWCFG0_NPAC_SHIFT                   24u
#define XRDC_HWCFG0_NPAC_WIDTH                   4u
#define XRDC_HWCFG0_NPAC(x)                      (((uint32_t)(((uint32_t)(x))<<XRDC_HWCFG0_NPAC_SHIFT))&XRDC_HWCFG0_NPAC_MASK)
#define XRDC_HWCFG0_MID_MASK                     0xF0000000u
#define XRDC_HWCFG0_MID_SHIFT                    28u
#define XRDC_HWCFG0_MID_WIDTH                    4u
#define XRDC_HWCFG0_MID(x)                       (((uint32_t)(((uint32_t)(x))<<XRDC_HWCFG0_MID_SHIFT))&XRDC_HWCFG0_MID_MASK)
/* HWCFG1 Bit Fields */
#define XRDC_HWCFG1_DID_MASK                     0xFu
#define XRDC_HWCFG1_DID_SHIFT                    0u
#define XRDC_HWCFG1_DID_WIDTH                    4u
#define XRDC_HWCFG1_DID(x)                       (((uint32_t)(((uint32_t)(x))<<XRDC_HWCFG1_DID_SHIFT))&XRDC_HWCFG1_DID_MASK)
/* HWCFG2 Bit Fields */
#define XRDC_HWCFG2_PIDP0_MASK                   0x1u
#define XRDC_HWCFG2_PIDP0_SHIFT                  0u
#define XRDC_HWCFG2_PIDP0_WIDTH                  1u
#define XRDC_HWCFG2_PIDP0(x)                     (((uint32_t)(((uint32_t)(x))<<XRDC_HWCFG2_PIDP0_SHIFT))&XRDC_HWCFG2_PIDP0_MASK)
#define XRDC_HWCFG2_PIDP1_MASK                   0x2u
#define XRDC_HWCFG2_PIDP1_SHIFT                  1u
#define XRDC_HWCFG2_PIDP1_WIDTH                  1u
#define XRDC_HWCFG2_PIDP1(x)                     (((uint32_t)(((uint32_t)(x))<<XRDC_HWCFG2_PIDP1_SHIFT))&XRDC_HWCFG2_PIDP1_MASK)
#define XRDC_HWCFG2_PIDP2_MASK                   0x4u
#define XRDC_HWCFG2_PIDP2_SHIFT                  2u
#define XRDC_HWCFG2_PIDP2_WIDTH                  1u
#define XRDC_HWCFG2_PIDP2(x)                     (((uint32_t)(((uint32_t)(x))<<XRDC_HWCFG2_PIDP2_SHIFT))&XRDC_HWCFG2_PIDP2_MASK)
#define XRDC_HWCFG2_PIDP3_MASK                   0x8u
#define XRDC_HWCFG2_PIDP3_SHIFT                  3u
#define XRDC_HWCFG2_PIDP3_WIDTH                  1u
#define XRDC_HWCFG2_PIDP3(x)                     (((uint32_t)(((uint32_t)(x))<<XRDC_HWCFG2_PIDP3_SHIFT))&XRDC_HWCFG2_PIDP3_MASK)
#define XRDC_HWCFG2_PIDP4_MASK                   0x10u
#define XRDC_HWCFG2_PIDP4_SHIFT                  4u
#define XRDC_HWCFG2_PIDP4_WIDTH                  1u
#define XRDC_HWCFG2_PIDP4(x)                     (((uint32_t)(((uint32_t)(x))<<XRDC_HWCFG2_PIDP4_SHIFT))&XRDC_HWCFG2_PIDP4_MASK)
#define XRDC_HWCFG2_PIDP5_MASK                   0x20u
#define XRDC_HWCFG2_PIDP5_SHIFT                  5u
#define XRDC_HWCFG2_PIDP5_WIDTH                  1u
#define XRDC_HWCFG2_PIDP5(x)                     (((uint32_t)(((uint32_t)(x))<<XRDC_HWCFG2_PIDP5_SHIFT))&XRDC_HWCFG2_PIDP5_MASK)
#define XRDC_HWCFG2_PIDP6_MASK                   0x40u
#define XRDC_HWCFG2_PIDP6_SHIFT                  6u
#define XRDC_HWCFG2_PIDP6_WIDTH                  1u
#define XRDC_HWCFG2_PIDP6(x)                     (((uint32_t)(((uint32_t)(x))<<XRDC_HWCFG2_PIDP6_SHIFT))&XRDC_HWCFG2_PIDP6_MASK)
#define XRDC_HWCFG2_PIDP7_MASK                   0x80u
#define XRDC_HWCFG2_PIDP7_SHIFT                  7u
#define XRDC_HWCFG2_PIDP7_WIDTH                  1u
#define XRDC_HWCFG2_PIDP7(x)                     (((uint32_t)(((uint32_t)(x))<<XRDC_HWCFG2_PIDP7_SHIFT))&XRDC_HWCFG2_PIDP7_MASK)
#define XRDC_HWCFG2_PIDP8_MASK                   0x100u
#define XRDC_HWCFG2_PIDP8_SHIFT                  8u
#define XRDC_HWCFG2_PIDP8_WIDTH                  1u
#define XRDC_HWCFG2_PIDP8(x)                     (((uint32_t)(((uint32_t)(x))<<XRDC_HWCFG2_PIDP8_SHIFT))&XRDC_HWCFG2_PIDP8_MASK)
#define XRDC_HWCFG2_PIDP9_MASK                   0x200u
#define XRDC_HWCFG2_PIDP9_SHIFT                  9u
#define XRDC_HWCFG2_PIDP9_WIDTH                  1u
#define XRDC_HWCFG2_PIDP9(x)                     (((uint32_t)(((uint32_t)(x))<<XRDC_HWCFG2_PIDP9_SHIFT))&XRDC_HWCFG2_PIDP9_MASK)
#define XRDC_HWCFG2_PIDP10_MASK                  0x400u
#define XRDC_HWCFG2_PIDP10_SHIFT                 10u
#define XRDC_HWCFG2_PIDP10_WIDTH                 1u
#define XRDC_HWCFG2_PIDP10(x)                    (((uint32_t)(((uint32_t)(x))<<XRDC_HWCFG2_PIDP10_SHIFT))&XRDC_HWCFG2_PIDP10_MASK)
#define XRDC_HWCFG2_PIDP11_MASK                  0x800u
#define XRDC_HWCFG2_PIDP11_SHIFT                 11u
#define XRDC_HWCFG2_PIDP11_WIDTH                 1u
#define XRDC_HWCFG2_PIDP11(x)                    (((uint32_t)(((uint32_t)(x))<<XRDC_HWCFG2_PIDP11_SHIFT))&XRDC_HWCFG2_PIDP11_MASK)
#define XRDC_HWCFG2_PIDP12_MASK                  0x1000u
#define XRDC_HWCFG2_PIDP12_SHIFT                 12u
#define XRDC_HWCFG2_PIDP12_WIDTH                 1u
#define XRDC_HWCFG2_PIDP12(x)                    (((uint32_t)(((uint32_t)(x))<<XRDC_HWCFG2_PIDP12_SHIFT))&XRDC_HWCFG2_PIDP12_MASK)
#define XRDC_HWCFG2_PIDP13_MASK                  0x2000u
#define XRDC_HWCFG2_PIDP13_SHIFT                 13u
#define XRDC_HWCFG2_PIDP13_WIDTH                 1u
#define XRDC_HWCFG2_PIDP13(x)                    (((uint32_t)(((uint32_t)(x))<<XRDC_HWCFG2_PIDP13_SHIFT))&XRDC_HWCFG2_PIDP13_MASK)
#define XRDC_HWCFG2_PIDP14_MASK                  0x4000u
#define XRDC_HWCFG2_PIDP14_SHIFT                 14u
#define XRDC_HWCFG2_PIDP14_WIDTH                 1u
#define XRDC_HWCFG2_PIDP14(x)                    (((uint32_t)(((uint32_t)(x))<<XRDC_HWCFG2_PIDP14_SHIFT))&XRDC_HWCFG2_PIDP14_MASK)
#define XRDC_HWCFG2_PIDP15_MASK                  0x8000u
#define XRDC_HWCFG2_PIDP15_SHIFT                 15u
#define XRDC_HWCFG2_PIDP15_WIDTH                 1u
#define XRDC_HWCFG2_PIDP15(x)                    (((uint32_t)(((uint32_t)(x))<<XRDC_HWCFG2_PIDP15_SHIFT))&XRDC_HWCFG2_PIDP15_MASK)
#define XRDC_HWCFG2_PIDP16_MASK                  0x10000u
#define XRDC_HWCFG2_PIDP16_SHIFT                 16u
#define XRDC_HWCFG2_PIDP16_WIDTH                 1u
#define XRDC_HWCFG2_PIDP16(x)                    (((uint32_t)(((uint32_t)(x))<<XRDC_HWCFG2_PIDP16_SHIFT))&XRDC_HWCFG2_PIDP16_MASK)
#define XRDC_HWCFG2_PIDP17_MASK                  0x20000u
#define XRDC_HWCFG2_PIDP17_SHIFT                 17u
#define XRDC_HWCFG2_PIDP17_WIDTH                 1u
#define XRDC_HWCFG2_PIDP17(x)                    (((uint32_t)(((uint32_t)(x))<<XRDC_HWCFG2_PIDP17_SHIFT))&XRDC_HWCFG2_PIDP17_MASK)
#define XRDC_HWCFG2_PIDP18_MASK                  0x40000u
#define XRDC_HWCFG2_PIDP18_SHIFT                 18u
#define XRDC_HWCFG2_PIDP18_WIDTH                 1u
#define XRDC_HWCFG2_PIDP18(x)                    (((uint32_t)(((uint32_t)(x))<<XRDC_HWCFG2_PIDP18_SHIFT))&XRDC_HWCFG2_PIDP18_MASK)
#define XRDC_HWCFG2_PIDP19_MASK                  0x80000u
#define XRDC_HWCFG2_PIDP19_SHIFT                 19u
#define XRDC_HWCFG2_PIDP19_WIDTH                 1u
#define XRDC_HWCFG2_PIDP19(x)                    (((uint32_t)(((uint32_t)(x))<<XRDC_HWCFG2_PIDP19_SHIFT))&XRDC_HWCFG2_PIDP19_MASK)
#define XRDC_HWCFG2_PIDP20_MASK                  0x100000u
#define XRDC_HWCFG2_PIDP20_SHIFT                 20u
#define XRDC_HWCFG2_PIDP20_WIDTH                 1u
#define XRDC_HWCFG2_PIDP20(x)                    (((uint32_t)(((uint32_t)(x))<<XRDC_HWCFG2_PIDP20_SHIFT))&XRDC_HWCFG2_PIDP20_MASK)
#define XRDC_HWCFG2_PIDP21_MASK                  0x200000u
#define XRDC_HWCFG2_PIDP21_SHIFT                 21u
#define XRDC_HWCFG2_PIDP21_WIDTH                 1u
#define XRDC_HWCFG2_PIDP21(x)                    (((uint32_t)(((uint32_t)(x))<<XRDC_HWCFG2_PIDP21_SHIFT))&XRDC_HWCFG2_PIDP21_MASK)
#define XRDC_HWCFG2_PIDP22_MASK                  0x400000u
#define XRDC_HWCFG2_PIDP22_SHIFT                 22u
#define XRDC_HWCFG2_PIDP22_WIDTH                 1u
#define XRDC_HWCFG2_PIDP22(x)                    (((uint32_t)(((uint32_t)(x))<<XRDC_HWCFG2_PIDP22_SHIFT))&XRDC_HWCFG2_PIDP22_MASK)
#define XRDC_HWCFG2_PIDP23_MASK                  0x800000u
#define XRDC_HWCFG2_PIDP23_SHIFT                 23u
#define XRDC_HWCFG2_PIDP23_WIDTH                 1u
#define XRDC_HWCFG2_PIDP23(x)                    (((uint32_t)(((uint32_t)(x))<<XRDC_HWCFG2_PIDP23_SHIFT))&XRDC_HWCFG2_PIDP23_MASK)
#define XRDC_HWCFG2_PIDP24_MASK                  0x1000000u
#define XRDC_HWCFG2_PIDP24_SHIFT                 24u
#define XRDC_HWCFG2_PIDP24_WIDTH                 1u
#define XRDC_HWCFG2_PIDP24(x)                    (((uint32_t)(((uint32_t)(x))<<XRDC_HWCFG2_PIDP24_SHIFT))&XRDC_HWCFG2_PIDP24_MASK)
#define XRDC_HWCFG2_PIDP25_MASK                  0x2000000u
#define XRDC_HWCFG2_PIDP25_SHIFT                 25u
#define XRDC_HWCFG2_PIDP25_WIDTH                 1u
#define XRDC_HWCFG2_PIDP25(x)                    (((uint32_t)(((uint32_t)(x))<<XRDC_HWCFG2_PIDP25_SHIFT))&XRDC_HWCFG2_PIDP25_MASK)
#define XRDC_HWCFG2_PIDP26_MASK                  0x4000000u
#define XRDC_HWCFG2_PIDP26_SHIFT                 26u
#define XRDC_HWCFG2_PIDP26_WIDTH                 1u
#define XRDC_HWCFG2_PIDP26(x)                    (((uint32_t)(((uint32_t)(x))<<XRDC_HWCFG2_PIDP26_SHIFT))&XRDC_HWCFG2_PIDP26_MASK)
#define XRDC_HWCFG2_PIDP27_MASK                  0x8000000u
#define XRDC_HWCFG2_PIDP27_SHIFT                 27u
#define XRDC_HWCFG2_PIDP27_WIDTH                 1u
#define XRDC_HWCFG2_PIDP27(x)                    (((uint32_t)(((uint32_t)(x))<<XRDC_HWCFG2_PIDP27_SHIFT))&XRDC_HWCFG2_PIDP27_MASK)
#define XRDC_HWCFG2_PIDP28_MASK                  0x10000000u
#define XRDC_HWCFG2_PIDP28_SHIFT                 28u
#define XRDC_HWCFG2_PIDP28_WIDTH                 1u
#define XRDC_HWCFG2_PIDP28(x)                    (((uint32_t)(((uint32_t)(x))<<XRDC_HWCFG2_PIDP28_SHIFT))&XRDC_HWCFG2_PIDP28_MASK)
#define XRDC_HWCFG2_PIDP29_MASK                  0x20000000u
#define XRDC_HWCFG2_PIDP29_SHIFT                 29u
#define XRDC_HWCFG2_PIDP29_WIDTH                 1u
#define XRDC_HWCFG2_PIDP29(x)                    (((uint32_t)(((uint32_t)(x))<<XRDC_HWCFG2_PIDP29_SHIFT))&XRDC_HWCFG2_PIDP29_MASK)
#define XRDC_HWCFG2_PIDP30_MASK                  0x40000000u
#define XRDC_HWCFG2_PIDP30_SHIFT                 30u
#define XRDC_HWCFG2_PIDP30_WIDTH                 1u
#define XRDC_HWCFG2_PIDP30(x)                    (((uint32_t)(((uint32_t)(x))<<XRDC_HWCFG2_PIDP30_SHIFT))&XRDC_HWCFG2_PIDP30_MASK)
#define XRDC_HWCFG2_PIDP31_MASK                  0x80000000u
#define XRDC_HWCFG2_PIDP31_SHIFT                 31u
#define XRDC_HWCFG2_PIDP31_WIDTH                 1u
#define XRDC_HWCFG2_PIDP31(x)                    (((uint32_t)(((uint32_t)(x))<<XRDC_HWCFG2_PIDP31_SHIFT))&XRDC_HWCFG2_PIDP31_MASK)
/* MDACFG Bit Fields */
#define XRDC_MDACFG_NMDAR_MASK                   0xFu
#define XRDC_MDACFG_NMDAR_SHIFT                  0u
#define XRDC_MDACFG_NMDAR_WIDTH                  4u
#define XRDC_MDACFG_NMDAR(x)                     (((uint8_t)(((uint8_t)(x))<<XRDC_MDACFG_NMDAR_SHIFT))&XRDC_MDACFG_NMDAR_MASK)
#define XRDC_MDACFG_NCM_MASK                     0x80u
#define XRDC_MDACFG_NCM_SHIFT                    7u
#define XRDC_MDACFG_NCM_WIDTH                    1u
#define XRDC_MDACFG_NCM(x)                       (((uint8_t)(((uint8_t)(x))<<XRDC_MDACFG_NCM_SHIFT))&XRDC_MDACFG_NCM_MASK)
/* MRCFG Bit Fields */
#define XRDC_MRCFG_NMGD_MASK                     0x1Fu
#define XRDC_MRCFG_NMGD_SHIFT                    0u
#define XRDC_MRCFG_NMGD_WIDTH                    5u
#define XRDC_MRCFG_NMGD(x)                       (((uint8_t)(((uint8_t)(x))<<XRDC_MRCFG_NMGD_SHIFT))&XRDC_MRCFG_NMGD_MASK)
/* DERRLOC Bit Fields */
#define XRDC_DERRLOC_MRCINST_MASK                0xFFFFu
#define XRDC_DERRLOC_MRCINST_SHIFT               0u
#define XRDC_DERRLOC_MRCINST_WIDTH               16u
#define XRDC_DERRLOC_MRCINST(x)                  (((uint32_t)(((uint32_t)(x))<<XRDC_DERRLOC_MRCINST_SHIFT))&XRDC_DERRLOC_MRCINST_MASK)
#define XRDC_DERRLOC_PACINST_MASK                0xF0000u
#define XRDC_DERRLOC_PACINST_SHIFT               16u
#define XRDC_DERRLOC_PACINST_WIDTH               4u
#define XRDC_DERRLOC_PACINST(x)                  (((uint32_t)(((uint32_t)(x))<<XRDC_DERRLOC_PACINST_SHIFT))&XRDC_DERRLOC_PACINST_MASK)
/* DERR_W0 Bit Fields */
#define XRDC_DERR_W0_EADDR_MASK                  0xFFFFFFFFu
#define XRDC_DERR_W0_EADDR_SHIFT                 0u
#define XRDC_DERR_W0_EADDR_WIDTH                 32u
#define XRDC_DERR_W0_EADDR(x)                    (((uint32_t)(((uint32_t)(x))<<XRDC_DERR_W0_EADDR_SHIFT))&XRDC_DERR_W0_EADDR_MASK)
/* DERR_W1 Bit Fields */
#define XRDC_DERR_W1_EDID_MASK                   0xFu
#define XRDC_DERR_W1_EDID_SHIFT                  0u
#define XRDC_DERR_W1_EDID_WIDTH                  4u
#define XRDC_DERR_W1_EDID(x)                     (((uint32_t)(((uint32_t)(x))<<XRDC_DERR_W1_EDID_SHIFT))&XRDC_DERR_W1_EDID_MASK)
#define XRDC_DERR_W1_EATR_MASK                   0x700u
#define XRDC_DERR_W1_EATR_SHIFT                  8u
#define XRDC_DERR_W1_EATR_WIDTH                  3u
#define XRDC_DERR_W1_EATR(x)                     (((uint32_t)(((uint32_t)(x))<<XRDC_DERR_W1_EATR_SHIFT))&XRDC_DERR_W1_EATR_MASK)
#define XRDC_DERR_W1_ERW_MASK                    0x800u
#define XRDC_DERR_W1_ERW_SHIFT                   11u
#define XRDC_DERR_W1_ERW_WIDTH                   1u
#define XRDC_DERR_W1_ERW(x)                      (((uint32_t)(((uint32_t)(x))<<XRDC_DERR_W1_ERW_SHIFT))&XRDC_DERR_W1_ERW_MASK)
#define XRDC_DERR_W1_EA40FMT_MASK                0x10000u
#define XRDC_DERR_W1_EA40FMT_SHIFT               16u
#define XRDC_DERR_W1_EA40FMT_WIDTH               1u
#define XRDC_DERR_W1_EA40FMT(x)                  (((uint32_t)(((uint32_t)(x))<<XRDC_DERR_W1_EA40FMT_SHIFT))&XRDC_DERR_W1_EA40FMT_MASK)
#define XRDC_DERR_W1_EPORT_MASK                  0x7000000u
#define XRDC_DERR_W1_EPORT_SHIFT                 24u
#define XRDC_DERR_W1_EPORT_WIDTH                 3u
#define XRDC_DERR_W1_EPORT(x)                    (((uint32_t)(((uint32_t)(x))<<XRDC_DERR_W1_EPORT_SHIFT))&XRDC_DERR_W1_EPORT_MASK)
#define XRDC_DERR_W1_EST_MASK                    0xC0000000u
#define XRDC_DERR_W1_EST_SHIFT                   30u
#define XRDC_DERR_W1_EST_WIDTH                   2u
#define XRDC_DERR_W1_EST(x)                      (((uint32_t)(((uint32_t)(x))<<XRDC_DERR_W1_EST_SHIFT))&XRDC_DERR_W1_EST_MASK)
/* DERR_W2 Bit Fields */
#define XRDC_DERR_W2_EADDR39_32_MASK             0xFFu
#define XRDC_DERR_W2_EADDR39_32_SHIFT            0u
#define XRDC_DERR_W2_EADDR39_32_WIDTH            8u
#define XRDC_DERR_W2_EADDR39_32(x)               (((uint32_t)(((uint32_t)(x))<<XRDC_DERR_W3_EADDR39_32_SHIFT))&XRDC_DERR_W3_EADDR39_32_MASK)
/* DERR_W3 Bit Fields */
#define XRDC_DERR_W3_RECR_MASK                   0xC0000000u
#define XRDC_DERR_W3_RECR_SHIFT                  30u
#define XRDC_DERR_W3_RECR_WIDTH                  2u
#define XRDC_DERR_W3_RECR(x)                     (((uint32_t)(((uint32_t)(x))<<XRDC_DERR_W3_RECR_SHIFT))&XRDC_DERR_W3_RECR_MASK)
/* PID Bit Fields */
#define XRDC_PID_PID_MASK                        0x3Fu
#define XRDC_PID_PID_SHIFT                       0u
#define XRDC_PID_PID_WIDTH                       6u
#define XRDC_PID_PID(x)                          (((uint32_t)(((uint32_t)(x))<<XRDC_PID_PID_SHIFT))&XRDC_PID_PID_MASK)
#define XRDC_PID_LMNUM_MASK                      0x3F0000u
#define XRDC_PID_LMNUM_SHIFT                     16u
#define XRDC_PID_LMNUM_WIDTH                     6u
#define XRDC_PID_LMNUM(x)                        (((uint32_t)(((uint32_t)(x))<<XRDC_PID_LMNUM_SHIFT))&XRDC_PID_LMNUM_MASK)
#define XRDC_PID_ELK22H_MASK                     0x1000000u
#define XRDC_PID_ELK22H_SHIFT                    24u
#define XRDC_PID_ELK22H_WIDTH                    1u
#define XRDC_PID_ELK22H(x)                       (((uint32_t)(((uint32_t)(x))<<XRDC_PID_ELK22H_SHIFT))&XRDC_PID_ELK22H_MASK)
#define XRDC_PID_TSM_MASK                        0x10000000u
#define XRDC_PID_TSM_SHIFT                       28u
#define XRDC_PID_TSM_WIDTH                       1u
#define XRDC_PID_TSM(x)                          (((uint32_t)(((uint32_t)(x))<<XRDC_PID_TSM_SHIFT))&XRDC_PID_TSM_MASK)
#define XRDC_PID_LK2_MASK                        0x60000000u
#define XRDC_PID_LK2_SHIFT                       29u
#define XRDC_PID_LK2_WIDTH                       2u
#define XRDC_PID_LK2(x)                          (((uint32_t)(((uint32_t)(x))<<XRDC_PID_LK2_SHIFT))&XRDC_PID_LK2_MASK)
/* MDA_Wm Bit Fields */
#define XRDC_MDA_Wm_DID_MASK                     0x7u
#define XRDC_MDA_Wm_DID_SHIFT                    0u
#define XRDC_MDA_Wm_DID_WIDTH                    3u
#define XRDC_MDA_Wm_DID(x)                       (((uint32_t)(((uint32_t)(x))<<XRDC_MDA_Wm_DID_SHIFT))&XRDC_MDA_Wm_DID_MASK)
#define XRDC_MDA_Wm_DIDS_MASK                    0x30u
#define XRDC_MDA_Wm_DIDS_SHIFT                   4u
#define XRDC_MDA_Wm_DIDS_WIDTH                   2u
#define XRDC_MDA_Wm_DIDS(x)                      (((uint32_t)(((uint32_t)(x))<<XRDC_MDA_Wm_DIDS_SHIFT))&XRDC_MDA_Wm_DIDS_MASK)
#define XRDC_MDA_Wm_PE_MASK                      0xC0u
#define XRDC_MDA_Wm_PE_SHIFT                     6u
#define XRDC_MDA_Wm_PE_WIDTH                     2u
#define XRDC_MDA_Wm_PE(x)                        (((uint32_t)(((uint32_t)(x))<<XRDC_MDA_Wm_PE_SHIFT))&XRDC_MDA_Wm_PE_MASK)
#define XRDC_MDA_Wm_PIDM_MASK                    0x3F00u
#define XRDC_MDA_Wm_PIDM_SHIFT                   8u
#define XRDC_MDA_Wm_PIDM_WIDTH                   6u
#define XRDC_MDA_Wm_PIDM(x)                      (((uint32_t)(((uint32_t)(x))<<XRDC_MDA_Wm_PIDM_SHIFT))&XRDC_MDA_Wm_PIDM_MASK)
#define XRDC_MDA_Wm_PID_MASK                     0x3F0000u
#define XRDC_MDA_Wm_PID_SHIFT                    16u
#define XRDC_MDA_Wm_PID_WIDTH                    6u
#define XRDC_MDA_Wm_PID(x)                       (((uint32_t)(((uint32_t)(x))<<XRDC_MDA_Wm_PID_SHIFT))&XRDC_MDA_Wm_PID_MASK)
#define XRDC_MDA_Wm_LPID_MASK                    0xF000000u
#define XRDC_MDA_Wm_LPID_SHIFT                   24u
#define XRDC_MDA_Wm_LPID_WIDTH                   4u
#define XRDC_MDA_Wm_LPID(x)                      (((uint32_t)(((uint32_t)(x))<<XRDC_MDA_Wm_LPID_SHIFT))&XRDC_MDA_Wm_LPID_MASK)
#define XRDC_MDA_Wm_DFMT_MASK                    0x20000000u
#define XRDC_MDA_Wm_DFMT_SHIFT                   29u
#define XRDC_MDA_Wm_DFMT_WIDTH                   1u
#define XRDC_MDA_Wm_DFMT(x)                      (((uint32_t)(((uint32_t)(x))<<XRDC_MDA_Wm_DFMT_SHIFT))&XRDC_MDA_Wm_DFMT_MASK)
#define XRDC_MDA_Wm_LK1_MASK                     0x40000000u
#define XRDC_MDA_Wm_LK1_SHIFT                    30u
#define XRDC_MDA_Wm_LK1_WIDTH                    1u
#define XRDC_MDA_Wm_LK1(x)                       (((uint32_t)(((uint32_t)(x))<<XRDC_MDA_Wm_LK1_SHIFT))&XRDC_MDA_Wm_LK1_MASK)
#define XRDC_MDA_Wm_VLD_MASK                     0x80000000u
#define XRDC_MDA_Wm_VLD_SHIFT                    31u
#define XRDC_MDA_Wm_VLD_WIDTH                    1u
#define XRDC_MDA_Wm_VLD(x)                       (((uint32_t)(((uint32_t)(x))<<XRDC_MDA_Wm_VLD_SHIFT))&XRDC_MDA_Wm_VLD_MASK)
/* PDAC_W0 Bit Fields */
#define XRDC_PDAC_W0_D0ACP_MASK                  0x7u
#define XRDC_PDAC_W0_D0ACP_SHIFT                 0u
#define XRDC_PDAC_W0_D0ACP_WIDTH                 3u
#define XRDC_PDAC_W0_D0ACP(x)                    (((uint32_t)(((uint32_t)(x))<<XRDC_PDAC_W0_D0ACP_SHIFT))&XRDC_PDAC_W0_D0ACP_MASK)
#define XRDC_PDAC_W0_D1ACP_MASK                  0x38u
#define XRDC_PDAC_W0_D1ACP_SHIFT                 3u
#define XRDC_PDAC_W0_D1ACP_WIDTH                 3u
#define XRDC_PDAC_W0_D1ACP(x)                    (((uint32_t)(((uint32_t)(x))<<XRDC_PDAC_W0_D1ACP_SHIFT))&XRDC_PDAC_W0_D1ACP_MASK)
#define XRDC_PDAC_W0_D2ACP_MASK                  0x1C0u
#define XRDC_PDAC_W0_D2ACP_SHIFT                 6u
#define XRDC_PDAC_W0_D2ACP_WIDTH                 3u
#define XRDC_PDAC_W0_D2ACP(x)                    (((uint32_t)(((uint32_t)(x))<<XRDC_PDAC_W0_D2ACP_SHIFT))&XRDC_PDAC_W0_D2ACP_MASK)
#define XRDC_PDAC_W0_D3ACP_MASK                  0xE00u
#define XRDC_PDAC_W0_D3ACP_SHIFT                 9u
#define XRDC_PDAC_W0_D3ACP_WIDTH                 3u
#define XRDC_PDAC_W0_D3ACP(x)                    (((uint32_t)(((uint32_t)(x))<<XRDC_PDAC_W0_D3ACP_SHIFT))&XRDC_PDAC_W0_D3ACP_MASK)
#define XRDC_PDAC_W0_D4ACP_MASK                  0x7000u
#define XRDC_PDAC_W0_D4ACP_SHIFT                 12u
#define XRDC_PDAC_W0_D4ACP_WIDTH                 3u
#define XRDC_PDAC_W0_D4ACP(x)                    (((uint32_t)(((uint32_t)(x))<<XRDC_PDAC_W0_D4ACP_SHIFT))&XRDC_PDAC_W0_D4ACP_MASK)
#define XRDC_PDAC_W0_D5ACP_MASK                  0x38000u
#define XRDC_PDAC_W0_D5ACP_SHIFT                 15u
#define XRDC_PDAC_W0_D5ACP_WIDTH                 3u
#define XRDC_PDAC_W0_D5ACP(x)                    (((uint32_t)(((uint32_t)(x))<<XRDC_PDAC_W0_D5ACP_SHIFT))&XRDC_PDAC_W0_D5ACP_MASK)
#define XRDC_PDAC_W0_D6ACP_MASK                  0x1C0000u
#define XRDC_PDAC_W0_D6ACP_SHIFT                 18u
#define XRDC_PDAC_W0_D6ACP_WIDTH                 3u
#define XRDC_PDAC_W0_D6ACP(x)                    (((uint32_t)(((uint32_t)(x))<<XRDC_PDAC_W0_D6ACP_SHIFT))&XRDC_PDAC_W0_D6ACP_MASK)
#define XRDC_PDAC_W0_D7ACP_MASK                  0xE00000u
#define XRDC_PDAC_W0_D7ACP_SHIFT                 21u
#define XRDC_PDAC_W0_D7ACP_WIDTH                 3u
#define XRDC_PDAC_W0_D7ACP(x)                    (((uint32_t)(((uint32_t)(x))<<XRDC_PDAC_W0_D7ACP_SHIFT))&XRDC_PDAC_W0_D7ACP_MASK)
#define XRDC_PDAC_W0_SNUM_MASK                   0xF000000u
#define XRDC_PDAC_W0_SNUM_SHIFT                  24u
#define XRDC_PDAC_W0_SNUM_WIDTH                  4u
#define XRDC_PDAC_W0_SNUM(x)                     (((uint32_t)(((uint32_t)(x))<<XRDC_PDAC_W0_SNUM_SHIFT))&XRDC_PDAC_W0_SNUM_MASK)
#define XRDC_PDAC_W0_SE_MASK                     0x40000000u
#define XRDC_PDAC_W0_SE_SHIFT                    30u
#define XRDC_PDAC_W0_SE_WIDTH                    1u
#define XRDC_PDAC_W0_SE(x)                       (((uint32_t)(((uint32_t)(x))<<XRDC_PDAC_W0_SE_SHIFT))&XRDC_PDAC_W0_SE_MASK)
/* PDAC_W1 Bit Fields */
#define XRDC_PDAC_W1_LK2_MASK                    0x60000000u
#define XRDC_PDAC_W1_LK2_SHIFT                   29u
#define XRDC_PDAC_W1_LK2_WIDTH                   2u
#define XRDC_PDAC_W1_LK2(x)                      (((uint32_t)(((uint32_t)(x))<<XRDC_PDAC_W1_LK2_SHIFT))&XRDC_PDAC_W1_LK2_MASK)
#define XRDC_PDAC_W1_VLD_MASK                    0x80000000u
#define XRDC_PDAC_W1_VLD_SHIFT                   31u
#define XRDC_PDAC_W1_VLD_WIDTH                   1u
#define XRDC_PDAC_W1_VLD(x)                      (((uint32_t)(((uint32_t)(x))<<XRDC_PDAC_W1_VLD_SHIFT))&XRDC_PDAC_W1_VLD_MASK)
/* MRGD_W0 Bit Fields */
#define XRDC_MRGD_W0_SRTADDR_MASK                0xFFFFFFFEu
#define XRDC_MRGD_W0_SRTADDR_SHIFT               1u
#define XRDC_MRGD_W0_SRTADDR_WIDTH               31u
#define XRDC_MRGD_W0_SRTADDR(x)                  (((uint32_t)(((uint32_t)(x))<<XRDC_MRGD_W0_SRTADDR_SHIFT))&XRDC_MRGD_W0_SRTADDR_MASK)
/* MRGD_W1 Bit Fields */
#define XRDC_MRGD_W1_ENDADDR_MASK                0xFFFFFFFEu
#define XRDC_MRGD_W1_ENDADDR_SHIFT               1u
#define XRDC_MRGD_W1_ENDADDR_WIDTH               31u
#define XRDC_MRGD_W1_ENDADDR(x)                  (((uint32_t)(((uint32_t)(x))<<XRDC_MRGD_W1_ENDADDR_SHIFT))&XRDC_MRGD_W1_ENDADDR_MASK)
/* MRGD_W2 Bit Fields */
#define XRDC_MRGD_W2_D0ACP_MASK                  0x7u
#define XRDC_MRGD_W2_D0ACP_SHIFT                 0u
#define XRDC_MRGD_W2_D0ACP_WIDTH                 3u
#define XRDC_MRGD_W2_D0ACP(x)                    (((uint32_t)(((uint32_t)(x))<<XRDC_MRGD_W2_D0ACP_SHIFT))&XRDC_MRGD_W2_D0ACP_MASK)
#define XRDC_MRGD_W2_D1ACP_MASK                  0x38u
#define XRDC_MRGD_W2_D1ACP_SHIFT                 3u
#define XRDC_MRGD_W2_D1ACP_WIDTH                 3u
#define XRDC_MRGD_W2_D1ACP(x)                    (((uint32_t)(((uint32_t)(x))<<XRDC_MRGD_W2_D1ACP_SHIFT))&XRDC_MRGD_W2_D1ACP_MASK)
#define XRDC_MRGD_W2_D2ACP_MASK                  0x1C0u
#define XRDC_MRGD_W2_D2ACP_SHIFT                 6u
#define XRDC_MRGD_W2_D2ACP_WIDTH                 3u
#define XRDC_MRGD_W2_D2ACP(x)                    (((uint32_t)(((uint32_t)(x))<<XRDC_MRGD_W2_D2ACP_SHIFT))&XRDC_MRGD_W2_D2ACP_MASK)
#define XRDC_MRGD_W2_D3ACP_MASK                  0xE00u
#define XRDC_MRGD_W2_D3ACP_SHIFT                 9u
#define XRDC_MRGD_W2_D3ACP_WIDTH                 3u
#define XRDC_MRGD_W2_D3ACP(x)                    (((uint32_t)(((uint32_t)(x))<<XRDC_MRGD_W2_D3ACP_SHIFT))&XRDC_MRGD_W2_D3ACP_MASK)
#define XRDC_MRGD_W2_D4ACP_MASK                  0x7000u
#define XRDC_MRGD_W2_D4ACP_SHIFT                 12u
#define XRDC_MRGD_W2_D4ACP_WIDTH                 3u
#define XRDC_MRGD_W2_D4ACP(x)                    (((uint32_t)(((uint32_t)(x))<<XRDC_MRGD_W2_D4ACP_SHIFT))&XRDC_MRGD_W2_D4ACP_MASK)
#define XRDC_MRGD_W2_D5ACP_MASK                  0x38000u
#define XRDC_MRGD_W2_D5ACP_SHIFT                 15u
#define XRDC_MRGD_W2_D5ACP_WIDTH                 3u
#define XRDC_MRGD_W2_D5ACP(x)                    (((uint32_t)(((uint32_t)(x))<<XRDC_MRGD_W2_D5ACP_SHIFT))&XRDC_MRGD_W2_D5ACP_MASK)
#define XRDC_MRGD_W2_D6ACP_MASK                  0x1C0000u
#define XRDC_MRGD_W2_D6ACP_SHIFT                 18u
#define XRDC_MRGD_W2_D6ACP_WIDTH                 3u
#define XRDC_MRGD_W2_D6ACP(x)                    (((uint32_t)(((uint32_t)(x))<<XRDC_MRGD_W2_D6ACP_SHIFT))&XRDC_MRGD_W2_D6ACP_MASK)
#define XRDC_MRGD_W2_D7ACP_MASK                  0xE00000u
#define XRDC_MRGD_W2_D7ACP_SHIFT                 21u
#define XRDC_MRGD_W2_D7ACP_WIDTH                 3u
#define XRDC_MRGD_W2_D7ACP(x)                    (((uint32_t)(((uint32_t)(x))<<XRDC_MRGD_W2_D7ACP_SHIFT))&XRDC_MRGD_W2_D7ACP_MASK)
#define XRDC_MRGD_W2_SNUM_MASK                   0xF000000u
#define XRDC_MRGD_W2_SNUM_SHIFT                  24u
#define XRDC_MRGD_W2_SNUM_WIDTH                  4u
#define XRDC_MRGD_W2_SNUM(x)                     (((uint32_t)(((uint32_t)(x))<<XRDC_MRGD_W2_SNUM_SHIFT))&XRDC_MRGD_W2_SNUM_MASK)
#define XRDC_MRGD_W2_SE_MASK                     0x40000000u
#define XRDC_MRGD_W2_SE_SHIFT                    30u
#define XRDC_MRGD_W2_SE_WIDTH                    1u
#define XRDC_MRGD_W2_SE(x)                       (((uint32_t)(((uint32_t)(x))<<XRDC_MRGD_W2_SE_SHIFT))&XRDC_MRGD_W2_SE_MASK)
/* MRGD_W3 Bit Fields */
#define XRDC_MRGD_W3_LK2_MASK                    0x60000000u
#define XRDC_MRGD_W3_LK2_SHIFT                   29u
#define XRDC_MRGD_W3_LK2_WIDTH                   2u
#define XRDC_MRGD_W3_LK2(x)                      (((uint32_t)(((uint32_t)(x))<<XRDC_MRGD_W3_LK2_SHIFT))&XRDC_MRGD_W3_LK2_MASK)
#define XRDC_MRGD_W3_VLD_MASK                    0x80000000u
#define XRDC_MRGD_W3_VLD_SHIFT                   31u
#define XRDC_MRGD_W3_VLD_WIDTH                   1u
#define XRDC_MRGD_W3_VLD(x)                      (((uint32_t)(((uint32_t)(x))<<XRDC_MRGD_W3_VLD_SHIFT))&XRDC_MRGD_W3_VLD_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group XRDC_Register_Masks */


/*!
 * @}
 */ /* end of group XRDC_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- ddr_subsystem Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup ddr_subsystem_Peripheral_Access_Layer ddr_subsystem Peripheral Access Layer
 * @{
 */

/** ddr_subsystem - Register Layout Typedef */
typedef struct {
  __IO uint32_t REG_GRP0;                          /**< DDR SS Reg, offset: 0x0 */
} ddr_subsystem_Type, *ddr_subsystem_MemMapPtr;

/** Number of instances of the ddr_subsystem module. */
#define ddr_subsystem_INSTANCE_COUNT             (1u)

/* ddr_subsystem - Peripheral instance base addresses */
/** Peripheral DDR_SUBSYSTEM base address */
#define DDR_SUBSYSTEM_BASE                       (0x403D0000u)
/** Peripheral DDR_SUBSYSTEM base pointer */
#define DDR_SUBSYSTEM                            ((ddr_subsystem_Type *)DDR_SUBSYSTEM_BASE)
/** Array initializer of ddr_subsystem peripheral base addresses */
#define ddr_subsystem_BASE_ADDRS                 { DDR_SUBSYSTEM_BASE }
/** Array initializer of ddr_subsystem peripheral base pointers */
#define ddr_subsystem_BASE_PTRS                  { DDR_SUBSYSTEM }

/* ----------------------------------------------------------------------------
   -- ddr_subsystem Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup ddr_subsystem_Register_Masks ddr_subsystem Register Masks
 * @{
 */

/*! @name REG_GRP0 - DDR SS Reg */
/*! @{ */
#define ddr_subsystem_REG_GRP0_dfi1_enabled_MASK (0x1U)
#define ddr_subsystem_REG_GRP0_dfi1_enabled_SHIFT (0U)
#define ddr_subsystem_REG_GRP0_dfi1_enabled_WIDTH (1U)
#define ddr_subsystem_REG_GRP0_dfi1_enabled(x)   (((uint32_t)(((uint32_t)(x)) << ddr_subsystem_REG_GRP0_dfi1_enabled_SHIFT)) & ddr_subsystem_REG_GRP0_dfi1_enabled_MASK)
#define ddr_subsystem_REG_GRP0_axi_parity_en_MASK (0x1FF0U)
#define ddr_subsystem_REG_GRP0_axi_parity_en_SHIFT (4U)
#define ddr_subsystem_REG_GRP0_axi_parity_en_WIDTH (9U)
#define ddr_subsystem_REG_GRP0_axi_parity_en(x)  (((uint32_t)(((uint32_t)(x)) << ddr_subsystem_REG_GRP0_axi_parity_en_SHIFT)) & ddr_subsystem_REG_GRP0_axi_parity_en_MASK)
#define ddr_subsystem_REG_GRP0_axi_parity_type_MASK (0x1FF0000U)
#define ddr_subsystem_REG_GRP0_axi_parity_type_SHIFT (16U)
#define ddr_subsystem_REG_GRP0_axi_parity_type_WIDTH (9U)
#define ddr_subsystem_REG_GRP0_axi_parity_type(x) (((uint32_t)(((uint32_t)(x)) << ddr_subsystem_REG_GRP0_axi_parity_type_SHIFT)) & ddr_subsystem_REG_GRP0_axi_parity_type_MASK)
#define ddr_subsystem_REG_GRP0_core_clk_disable_MASK (0x8000000U)
#define ddr_subsystem_REG_GRP0_core_clk_disable_SHIFT (27U)
#define ddr_subsystem_REG_GRP0_core_clk_disable_WIDTH (1U)
#define ddr_subsystem_REG_GRP0_core_clk_disable(x) (((uint32_t)(((uint32_t)(x)) << ddr_subsystem_REG_GRP0_core_clk_disable_SHIFT)) & ddr_subsystem_REG_GRP0_core_clk_disable_MASK)
#define ddr_subsystem_REG_GRP0_aclk_0_disable_MASK (0x10000000U)
#define ddr_subsystem_REG_GRP0_aclk_0_disable_SHIFT (28U)
#define ddr_subsystem_REG_GRP0_aclk_0_disable_WIDTH (1U)
#define ddr_subsystem_REG_GRP0_aclk_0_disable(x) (((uint32_t)(((uint32_t)(x)) << ddr_subsystem_REG_GRP0_aclk_0_disable_SHIFT)) & ddr_subsystem_REG_GRP0_aclk_0_disable_MASK)
#define ddr_subsystem_REG_GRP0_aclk_1_disable_MASK (0x20000000U)
#define ddr_subsystem_REG_GRP0_aclk_1_disable_SHIFT (29U)
#define ddr_subsystem_REG_GRP0_aclk_1_disable_WIDTH (1U)
#define ddr_subsystem_REG_GRP0_aclk_1_disable(x) (((uint32_t)(((uint32_t)(x)) << ddr_subsystem_REG_GRP0_aclk_1_disable_SHIFT)) & ddr_subsystem_REG_GRP0_aclk_1_disable_MASK)
#define ddr_subsystem_REG_GRP0_aclk_2_disable_MASK (0x40000000U)
#define ddr_subsystem_REG_GRP0_aclk_2_disable_SHIFT (30U)
#define ddr_subsystem_REG_GRP0_aclk_2_disable_WIDTH (1U)
#define ddr_subsystem_REG_GRP0_aclk_2_disable(x) (((uint32_t)(((uint32_t)(x)) << ddr_subsystem_REG_GRP0_aclk_2_disable_SHIFT)) & ddr_subsystem_REG_GRP0_aclk_2_disable_MASK)
#define ddr_subsystem_REG_GRP0_ddr_ss_pub_reg_deco_int_en_MASK (0x80000000U)
#define ddr_subsystem_REG_GRP0_ddr_ss_pub_reg_deco_int_en_SHIFT (31U)
#define ddr_subsystem_REG_GRP0_ddr_ss_pub_reg_deco_int_en_WIDTH (1U)
#define ddr_subsystem_REG_GRP0_ddr_ss_pub_reg_deco_int_en(x) (((uint32_t)(((uint32_t)(x)) << ddr_subsystem_REG_GRP0_ddr_ss_pub_reg_deco_int_en_SHIFT)) & ddr_subsystem_REG_GRP0_ddr_ss_pub_reg_deco_int_en_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group ddr_subsystem_Register_Masks */


/*!
 * @}
 */ /* end of group ddr_subsystem_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- ocotp_gpr Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup ocotp_gpr_Peripheral_Access_Layer ocotp_gpr Peripheral Access Layer
 * @{
 */

/** ocotp_gpr - Register Layout Typedef */
typedef struct {
       uint32_t OCOTP_GPR_0;                       /**< Boot Configuration Register 1, offset: 0x0 */
       uint32_t OCOTP_GPR_1;                       /**< Boot Configuration Register 1, offset: 0x4 */
} ocotp_gpr_Type, *ocotp_gpr_MemMapPtr;

/** Number of instances of the ocotp_gpr module. */
#define ocotp_gpr_INSTANCE_COUNT                 (1u)

/* ocotp_gpr - Peripheral instance base addresses */
/** Peripheral OCOTP_GPR base address */
#define OCOTP_GPR_BASE                           (0x400A040u)
/** Peripheral OCOTP_GPR base pointer */
#define OCOTP_GPR                                ((ocotp_gpr_Type *)OCOTP_GPR_BASE)
/** Array initializer of ocotp_gpr peripheral base addresses */
#define ocotp_gpr_BASE_ADDRS                     { OCOTP_GPR_BASE }
/** Array initializer of ocotp_gpr peripheral base pointers */
#define ocotp_gpr_BASE_PTRS                      { OCOTP_GPR }

/* ----------------------------------------------------------------------------
   -- ocotp_gpr Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup ocotp_gpr_Register_Masks ocotp_gpr Register Masks
 * @{
 */


/*!
 * @}
 */ /* end of group ocotp_gpr_Register_Masks */


/*!
 * @}
 */ /* end of group ocotp_gpr_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- PLLDIG Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup PLLDIG_Peripheral_Access_Layer PLLDIG Peripheral Access Layer
 * @{
 */

/** PLLDIG - Size of Registers Arrays */
#define PLLDIG_PLLODIV_COUNT                      8u

/** PLLDIG - Register Layout Typedef */
typedef struct {
  __IO uint32_t PLLCR;                             /**< PLL Control Register, offset: 0x0 */
  __IO uint32_t PLLSR;                             /**< PLL status register, offset: 0x4 */
  __IO uint32_t PLLDV;                             /**< PLL Divider, offset: 0x8 */
  __IO uint32_t PLLFM;                             /**< PLL Frequency Modulation, offset: 0xC */
  __IO uint32_t PLLFD;                             /**< PLL Fractional Divider, offset: 0x10 */
  uint8_t RESERVED_0[12];
  __IO uint32_t PLLCLKMUX;                         /**< PLL Clock Multiplexer, offset: 0x20 */
  uint8_t RESERVED_1[92];
  __IO uint32_t PLLODIV[PLLDIG_PLLODIV_COUNT];     /**< PLL Output Divider, array offset: 0x80, array step: 0x4 */
} PLLDIG_Type, *PLLDIG_MemMapPtr;

/** Number of instances of the PLLDIG module. */
#define PLLDIG_INSTANCE_COUNT                    (4u)

/* PLLDIG - Peripheral instance base addresses */
/** Peripheral ACCEL_PLL base address */
#define ACCEL_PLL_BASE                           (0x40040000u)
/** Peripheral ACCEL_PLL base pointer */
#define ACCEL_PLL                                ((PLLDIG_Type *)ACCEL_PLL_BASE)
/** Peripheral CORE_PLL base address */
#define CORE_PLL_BASE                            (0x40038000u)
/** Peripheral CORE_PLL base pointer */
#define CORE_PLL                                 ((PLLDIG_Type *)CORE_PLL_BASE)
/** Peripheral DDR_PLL base address */
#define DDR_PLL_BASE                             (0x40044000u)
/** Peripheral DDR_PLL base pointer */
#define DDR_PLL                                  ((PLLDIG_Type *)DDR_PLL_BASE)
/** Peripheral PERIPH_PLL base address */
#define PERIPH_PLL_BASE                          (0x4003C000u)
/** Peripheral PERIPH_PLL base pointer */
#define PERIPH_PLL                               ((PLLDIG_Type *)PERIPH_PLL_BASE)
/** Array initializer of PLLDIG peripheral base addresses */
#define PLLDIG_BASE_ADDRS                        { ACCEL_PLL_BASE, CORE_PLL_BASE, DDR_PLL_BASE, PERIPH_PLL_BASE }
/** Array initializer of PLLDIG peripheral base pointers */
#define PLLDIG_BASE_PTRS                         { ACCEL_PLL, CORE_PLL, DDR_PLL, PERIPH_PLL }

/* ----------------------------------------------------------------------------
   -- PLLDIG Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup PLLDIG_Register_Masks PLLDIG Register Masks
 * @{
 */

/*! @name PLLCR - PLL Control Register */
/*! @{ */
#define PLLDIG_PLLCR_PLLPD_MASK                  (0x80000000U)
#define PLLDIG_PLLCR_PLLPD_SHIFT                 (31U)
#define PLLDIG_PLLCR_PLLPD_WIDTH                 (1U)
#define PLLDIG_PLLCR_PLLPD(x)                    (((uint32_t)(((uint32_t)(x)) << PLLDIG_PLLCR_PLLPD_SHIFT)) & PLLDIG_PLLCR_PLLPD_MASK)
/*! @} */

/*! @name PLLSR - PLL status register */
/*! @{ */
#define PLLDIG_PLLSR_LOCK_MASK                   (0x4U)
#define PLLDIG_PLLSR_LOCK_SHIFT                  (2U)
#define PLLDIG_PLLSR_LOCK_WIDTH                  (1U)
#define PLLDIG_PLLSR_LOCK(x)                     (((uint32_t)(((uint32_t)(x)) << PLLDIG_PLLSR_LOCK_SHIFT)) & PLLDIG_PLLSR_LOCK_MASK)
#define PLLDIG_PLLSR_LOL_MASK                    (0x8U)
#define PLLDIG_PLLSR_LOL_SHIFT                   (3U)
#define PLLDIG_PLLSR_LOL_WIDTH                   (1U)
#define PLLDIG_PLLSR_LOL(x)                      (((uint32_t)(((uint32_t)(x)) << PLLDIG_PLLSR_LOL_SHIFT)) & PLLDIG_PLLSR_LOL_MASK)
/*! @} */

/*! @name PLLDV - PLL Divider */
/*! @{ */
#define PLLDIG_PLLDV_MFI_MASK                    (0xFFU)
#define PLLDIG_PLLDV_MFI_SHIFT                   (0U)
#define PLLDIG_PLLDV_MFI_WIDTH                   (8U)
#define PLLDIG_PLLDV_MFI(x)                      (((uint32_t)(((uint32_t)(x)) << PLLDIG_PLLDV_MFI_SHIFT)) & PLLDIG_PLLDV_MFI_MASK)
#define PLLDIG_PLLDV_RDIV_MASK                   (0x7000U)
#define PLLDIG_PLLDV_RDIV_SHIFT                  (12U)
#define PLLDIG_PLLDV_RDIV_WIDTH                  (3U)
#define PLLDIG_PLLDV_RDIV(x)                     (((uint32_t)(((uint32_t)(x)) << PLLDIG_PLLDV_RDIV_SHIFT)) & PLLDIG_PLLDV_RDIV_MASK)
/*! @} */

/*! @name PLLFM - PLL Frequency Modulation */
/*! @{ */
#define PLLDIG_PLLFM_STEPNO_MASK                 (0x7FFU)
#define PLLDIG_PLLFM_STEPNO_SHIFT                (0U)
#define PLLDIG_PLLFM_STEPNO_WIDTH                (11U)
#define PLLDIG_PLLFM_STEPNO(x)                   (((uint32_t)(((uint32_t)(x)) << PLLDIG_PLLFM_STEPNO_SHIFT)) & PLLDIG_PLLFM_STEPNO_MASK)
#define PLLDIG_PLLFM_STEPSIZE_MASK               (0x3FF0000U)
#define PLLDIG_PLLFM_STEPSIZE_SHIFT              (16U)
#define PLLDIG_PLLFM_STEPSIZE_WIDTH              (10U)
#define PLLDIG_PLLFM_STEPSIZE(x)                 (((uint32_t)(((uint32_t)(x)) << PLLDIG_PLLFM_STEPSIZE_SHIFT)) & PLLDIG_PLLFM_STEPSIZE_MASK)
#define PLLDIG_PLLFM_SPREADCTL_MASK              (0x20000000U)
#define PLLDIG_PLLFM_SPREADCTL_SHIFT             (29U)
#define PLLDIG_PLLFM_SPREADCTL_WIDTH             (1U)
#define PLLDIG_PLLFM_SPREADCTL(x)                (((uint32_t)(((uint32_t)(x)) << PLLDIG_PLLFM_SPREADCTL_SHIFT)) & PLLDIG_PLLFM_SPREADCTL_MASK)
#define PLLDIG_PLLFM_SSCGBYP_MASK                (0x40000000U)
#define PLLDIG_PLLFM_SSCGBYP_SHIFT               (30U)
#define PLLDIG_PLLFM_SSCGBYP_WIDTH               (1U)
#define PLLDIG_PLLFM_SSCGBYP(x)                  (((uint32_t)(((uint32_t)(x)) << PLLDIG_PLLFM_SSCGBYP_SHIFT)) & PLLDIG_PLLFM_SSCGBYP_MASK)
/*! @} */

/*! @name PLLFD - PLL Fractional Divider */
/*! @{ */
#define PLLDIG_PLLFD_MFN_MASK                    (0x7FFFU)
#define PLLDIG_PLLFD_MFN_SHIFT                   (0U)
#define PLLDIG_PLLFD_MFN_WIDTH                   (15U)
#define PLLDIG_PLLFD_MFN(x)                      (((uint32_t)(((uint32_t)(x)) << PLLDIG_PLLFD_MFN_SHIFT)) & PLLDIG_PLLFD_MFN_MASK)
#define PLLDIG_PLLFD_DITHER_EN_MASK              (0x10000U)
#define PLLDIG_PLLFD_DITHER_EN_SHIFT             (16U)
#define PLLDIG_PLLFD_DITHER_EN_WIDTH             (1U)
#define PLLDIG_PLLFD_DITHER_EN(x)                (((uint32_t)(((uint32_t)(x)) << PLLDIG_PLLFD_DITHER_EN_SHIFT)) & PLLDIG_PLLFD_DITHER_EN_MASK)
#define PLLDIG_PLLFD_DTHRCTL_MASK                (0x3C0000U)
#define PLLDIG_PLLFD_DTHRCTL_SHIFT               (18U)
#define PLLDIG_PLLFD_DTHRCTL_WIDTH               (4U)
#define PLLDIG_PLLFD_DTHRCTL(x)                  (((uint32_t)(((uint32_t)(x)) << PLLDIG_PLLFD_DTHRCTL_SHIFT)) & PLLDIG_PLLFD_DTHRCTL_MASK)
#define PLLDIG_PLLFD_SDMEN_MASK                  (0x40000000U)
#define PLLDIG_PLLFD_SDMEN_SHIFT                 (30U)
#define PLLDIG_PLLFD_SDMEN_WIDTH                 (1U)
#define PLLDIG_PLLFD_SDMEN(x)                    (((uint32_t)(((uint32_t)(x)) << PLLDIG_PLLFD_SDMEN_SHIFT)) & PLLDIG_PLLFD_SDMEN_MASK)
/*! @} */

/*! @name PLLCLKMUX - PLL Clock Multiplexer */
/*! @{ */
#define PLLDIG_PLLCLKMUX_REFCLKSEL_MASK          (0x1U)
#define PLLDIG_PLLCLKMUX_REFCLKSEL_SHIFT         (0U)
#define PLLDIG_PLLCLKMUX_REFCLKSEL_WIDTH         (1U)
#define PLLDIG_PLLCLKMUX_REFCLKSEL(x)            (((uint32_t)(((uint32_t)(x)) << PLLDIG_PLLCLKMUX_REFCLKSEL_SHIFT)) & PLLDIG_PLLCLKMUX_REFCLKSEL_MASK)
/*! @} */

/*! @name PLLODIV - PLL Output Divider */
/*! @{ */
#define PLLDIG_PLLODIV_DIV_MASK                  (0xFF0000U)
#define PLLDIG_PLLODIV_DIV_SHIFT                 (16U)
#define PLLDIG_PLLODIV_DIV_WIDTH                 (8U)
#define PLLDIG_PLLODIV_DIV(x)                    (((uint32_t)(((uint32_t)(x)) << PLLDIG_PLLODIV_DIV_SHIFT)) & PLLDIG_PLLODIV_DIV_MASK)
#define PLLDIG_PLLODIV_DE_MASK                   (0x80000000U)
#define PLLDIG_PLLODIV_DE_SHIFT                  (31U)
#define PLLDIG_PLLODIV_DE_WIDTH                  (1U)
#define PLLDIG_PLLODIV_DE(x)                     (((uint32_t)(((uint32_t)(x)) << PLLDIG_PLLODIV_DE_SHIFT)) & PLLDIG_PLLODIV_DE_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group PLLDIG_Register_Masks */


/*!
 * @}
 */ /* end of group PLLDIG_Peripheral_Access_Layer */

 /* ----------------------------------------------------------------------------
   -- S32_MPU Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup S32_MPU_Peripheral_Access_Layer S32_MPU Peripheral Access Layer
 * @{
 */


/** S32_MPU - Size of Registers Arrays */
#define S32_MPU_A_COUNT                          3u

/** S32_MPU - Register Layout Typedef */
typedef struct {
       uint8_t RESERVED_0[3472];
  __I  uint32_t TYPE;                              /**< MPU Type Register, offset: 0xD90 */
  __IO uint32_t CTRL;                              /**< MPU Control Register, offset: 0xD94 */
  __IO uint32_t RNR;                               /**< MPU Region Number Register, offset: 0xD98 */
  __IO uint32_t RBAR;                              /**< MPU Region Base Address Register, offset: 0xD9C */
  __IO uint32_t RASR;                              /**< MPU Region Attribute and Size Register, offset: 0xDA0 */
  struct {                                         /* offset: 0xDA4, array step: 0x8 */
    __IO uint32_t RBAR;                              /**< Alias of RBAR0..Alias of RBAR2, array offset: 0xDA4, array step: 0x8 */
    __IO uint32_t RASR;                              /**< Alias of RASR0..Alias of RASR2, array offset: 0xDA8, array step: 0x8 */
  } A[S32_MPU_A_COUNT];
} S32_MPU_Type, *S32_MPU_MemMapPtr;

 /** Number of instances of the S32_MPU module. */
#define S32_MPU_INSTANCE_COUNT                   (1u)


/* S32_MPU - Peripheral instance base addresses */
/** Peripheral S32_MPU base address */
#define S32_MPU_BASE                             (0xE000E000u)
/** Peripheral S32_MPU base pointer */
#define S32_MPU                                  ((S32_MPU_Type *)S32_MPU_BASE)
/** Array initializer of S32_MPU peripheral base addresses */
#define S32_MPU_BASE_ADDRS                       { S32_MPU_BASE }
/** Array initializer of S32_MPU peripheral base pointers */
#define S32_MPU_BASE_PTRS                        { S32_MPU }

/* ----------------------------------------------------------------------------
   -- S32_MPU Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup S32_MPU_Register_Masks S32_MPU Register Masks
 * @{
 */

/* TYPE Bit Fields */
#define S32_MPU_TYPE_SEPARATE_MASK               0x1u
#define S32_MPU_TYPE_SEPARATE_SHIFT              0u
#define S32_MPU_TYPE_SEPARATE_WIDTH              1u
#define S32_MPU_TYPE_SEPARATE(x)                 (((uint32_t)(((uint32_t)(x))<<S32_MPU_TYPE_SEPARATE_SHIFT))&S32_MPU_TYPE_SEPARATE_MASK)
#define S32_MPU_TYPE_DREGION_MASK                0xFF00u
#define S32_MPU_TYPE_DREGION_SHIFT               8u
#define S32_MPU_TYPE_DREGION_WIDTH               8u
#define S32_MPU_TYPE_DREGION(x)                  (((uint32_t)(((uint32_t)(x))<<S32_MPU_TYPE_DREGION_SHIFT))&S32_MPU_TYPE_DREGION_MASK)
#define S32_MPU_TYPE_IREGION_MASK                0xFF0000u
#define S32_MPU_TYPE_IREGION_SHIFT               16u
#define S32_MPU_TYPE_IREGION_WIDTH               8u
#define S32_MPU_TYPE_IREGION(x)                  (((uint32_t)(((uint32_t)(x))<<S32_MPU_TYPE_IREGION_SHIFT))&S32_MPU_TYPE_IREGION_MASK)
/* CTRL Bit Fields */
#define S32_MPU_CTRL_ENABLE_MASK                 0x1u
#define S32_MPU_CTRL_ENABLE_SHIFT                0u
#define S32_MPU_CTRL_ENABLE_WIDTH                1u
#define S32_MPU_CTRL_ENABLE(x)                   (((uint32_t)(((uint32_t)(x))<<S32_MPU_CTRL_ENABLE_SHIFT))&S32_MPU_CTRL_ENABLE_MASK)
#define S32_MPU_CTRL_HFNMIENA_MASK               0x2u
#define S32_MPU_CTRL_HFNMIENA_SHIFT              1u
#define S32_MPU_CTRL_HFNMIENA_WIDTH              1u
#define S32_MPU_CTRL_HFNMIENA(x)                 (((uint32_t)(((uint32_t)(x))<<S32_MPU_CTRL_HFNMIENA_SHIFT))&S32_MPU_CTRL_HFNMIENA_MASK)
#define S32_MPU_CTRL_PRIVDEFENA_MASK             0x4u
#define S32_MPU_CTRL_PRIVDEFENA_SHIFT            2u
#define S32_MPU_CTRL_PRIVDEFENA_WIDTH            1u
#define S32_MPU_CTRL_PRIVDEFENA(x)               (((uint32_t)(((uint32_t)(x))<<S32_MPU_CTRL_PRIVDEFENA_SHIFT))&S32_MPU_CTRL_PRIVDEFENA_MASK)
/* RNR Bit Fields */
#define S32_MPU_RNR_REGION_MASK                  0xFFu
#define S32_MPU_RNR_REGION_SHIFT                 0u
#define S32_MPU_RNR_REGION_WIDTH                 8u
#define S32_MPU_RNR_REGION(x)                    (((uint32_t)(((uint32_t)(x))<<S32_MPU_RNR_REGION_SHIFT))&S32_MPU_RNR_REGION_MASK)
/* RBAR Bit Fields */
#define S32_MPU_RBAR_REGION_MASK                 0xFu
#define S32_MPU_RBAR_REGION_SHIFT                0u
#define S32_MPU_RBAR_REGION_WIDTH                4u
#define S32_MPU_RBAR_REGION(x)                   (((uint32_t)(((uint32_t)(x))<<S32_MPU_RBAR_REGION_SHIFT))&S32_MPU_RBAR_REGION_MASK)
#define S32_MPU_RBAR_VALID_MASK                  0x10u
#define S32_MPU_RBAR_VALID_SHIFT                 4u
#define S32_MPU_RBAR_VALID_WIDTH                 1u
#define S32_MPU_RBAR_VALID(x)                    (((uint32_t)(((uint32_t)(x))<<S32_MPU_RBAR_VALID_SHIFT))&S32_MPU_RBAR_VALID_MASK)
#define S32_MPU_RBAR_ADDR_MASK                   0xFFFFFFE0u
#define S32_MPU_RBAR_ADDR_SHIFT                  5u
#define S32_MPU_RBAR_ADDR_WIDTH                  27u
#define S32_MPU_RBAR_ADDR(x)                     (((uint32_t)(((uint32_t)(x))<<S32_MPU_RBAR_ADDR_SHIFT))&S32_MPU_RBAR_ADDR_MASK)
/* RASR Bit Fields */
#define S32_MPU_RASR_ENABLE_MASK                 0x1u
#define S32_MPU_RASR_ENABLE_SHIFT                0u
#define S32_MPU_RASR_ENABLE_WIDTH                1u
#define S32_MPU_RASR_ENABLE(x)                   (((uint32_t)(((uint32_t)(x))<<S32_MPU_RASR_ENABLE_SHIFT))&S32_MPU_RASR_ENABLE_MASK)
#define S32_MPU_RASR_SIZE_MASK                   0x3Eu
#define S32_MPU_RASR_SIZE_SHIFT                  1u
#define S32_MPU_RASR_SIZE_WIDTH                  5u
#define S32_MPU_RASR_SIZE(x)                     (((uint32_t)(((uint32_t)(x))<<S32_MPU_RASR_SIZE_SHIFT))&S32_MPU_RASR_SIZE_MASK)
#define S32_MPU_RASR_SRD_MASK                    0xFF00u
#define S32_MPU_RASR_SRD_SHIFT                   8u
#define S32_MPU_RASR_SRD_WIDTH                   8u
#define S32_MPU_RASR_SRD(x)                      (((uint32_t)(((uint32_t)(x))<<S32_MPU_RASR_SRD_SHIFT))&S32_MPU_RASR_SRD_MASK)
#define S32_MPU_RASR_B_MASK                      0x10000u
#define S32_MPU_RASR_B_SHIFT                     16u
#define S32_MPU_RASR_B_WIDTH                     1u
#define S32_MPU_RASR_B(x)                        (((uint32_t)(((uint32_t)(x))<<S32_MPU_RASR_B_SHIFT))&S32_MPU_RASR_B_MASK)
#define S32_MPU_RASR_C_MASK                      0x20000u
#define S32_MPU_RASR_C_SHIFT                     17u
#define S32_MPU_RASR_C_WIDTH                     1u
#define S32_MPU_RASR_C(x)                        (((uint32_t)(((uint32_t)(x))<<S32_MPU_RASR_C_SHIFT))&S32_MPU_RASR_C_MASK)
#define S32_MPU_RASR_S_MASK                      0x40000u
#define S32_MPU_RASR_S_SHIFT                     18u
#define S32_MPU_RASR_S_WIDTH                     1u
#define S32_MPU_RASR_S(x)                        (((uint32_t)(((uint32_t)(x))<<S32_MPU_RASR_S_SHIFT))&S32_MPU_RASR_S_MASK)
#define S32_MPU_RASR_TEX_MASK                    0x380000u
#define S32_MPU_RASR_TEX_SHIFT                   19u
#define S32_MPU_RASR_TEX_WIDTH                   3u
#define S32_MPU_RASR_TEX(x)                      (((uint32_t)(((uint32_t)(x))<<S32_MPU_RASR_TEX_SHIFT))&S32_MPU_RASR_TEX_MASK)
#define S32_MPU_RASR_AP_MASK                     0x7000000u
#define S32_MPU_RASR_AP_SHIFT                    24u
#define S32_MPU_RASR_AP_WIDTH                    3u
#define S32_MPU_RASR_AP(x)                       (((uint32_t)(((uint32_t)(x))<<S32_MPU_RASR_AP_SHIFT))&S32_MPU_RASR_AP_MASK)
#define S32_MPU_RASR_XN_MASK                     0x10000000u
#define S32_MPU_RASR_XN_SHIFT                    28u
#define S32_MPU_RASR_XN_WIDTH                    1u
#define S32_MPU_RASR_XN(x)                       (((uint32_t)(((uint32_t)(x))<<S32_MPU_RASR_XN_SHIFT))&S32_MPU_RASR_XN_MASK)
/* A_RBAR Bit Fields */
#define S32_MPU_A_RBAR_REGION_MASK               0xFu
#define S32_MPU_A_RBAR_REGION_SHIFT              0u
#define S32_MPU_A_RBAR_REGION_WIDTH              4u
#define S32_MPU_A_RBAR_REGION(x)                 (((uint32_t)(((uint32_t)(x))<<S32_MPU_A_RBAR_REGION_SHIFT))&S32_MPU_A_RBAR_REGION_MASK)
#define S32_MPU_A_RBAR_VALID_MASK                0x10u
#define S32_MPU_A_RBAR_VALID_SHIFT               4u
#define S32_MPU_A_RBAR_VALID_WIDTH               1u
#define S32_MPU_A_RBAR_VALID(x)                  (((uint32_t)(((uint32_t)(x))<<S32_MPU_A_RBAR_VALID_SHIFT))&S32_MPU_A_RBAR_VALID_MASK)
#define S32_MPU_A_RBAR_ADDR_MASK                 0xFFFFFFE0u
#define S32_MPU_A_RBAR_ADDR_SHIFT                5u
#define S32_MPU_A_RBAR_ADDR_WIDTH                27u
#define S32_MPU_A_RBAR_ADDR(x)                   (((uint32_t)(((uint32_t)(x))<<S32_MPU_A_RBAR_ADDR_SHIFT))&S32_MPU_A_RBAR_ADDR_MASK)
/* A_RASR Bit Fields */
#define S32_MPU_A_RASR_ENABLE_MASK               0x1u
#define S32_MPU_A_RASR_ENABLE_SHIFT              0u
#define S32_MPU_A_RASR_ENABLE_WIDTH              1u
#define S32_MPU_A_RASR_ENABLE(x)                 (((uint32_t)(((uint32_t)(x))<<S32_MPU_A_RASR_ENABLE_SHIFT))&S32_MPU_A_RASR_ENABLE_MASK)
#define S32_MPU_A_RASR_SIZE_MASK                 0x3Eu
#define S32_MPU_A_RASR_SIZE_SHIFT                1u
#define S32_MPU_A_RASR_SIZE_WIDTH                5u
#define S32_MPU_A_RASR_SIZE(x)                   (((uint32_t)(((uint32_t)(x))<<S32_MPU_A_RASR_SIZE_SHIFT))&S32_MPU_A_RASR_SIZE_MASK)
#define S32_MPU_A_RASR_SRD_MASK                  0xFF00u
#define S32_MPU_A_RASR_SRD_SHIFT                 8u
#define S32_MPU_A_RASR_SRD_WIDTH                 8u
#define S32_MPU_A_RASR_SRD(x)                    (((uint32_t)(((uint32_t)(x))<<S32_MPU_A_RASR_SRD_SHIFT))&S32_MPU_A_RASR_SRD_MASK)
#define S32_MPU_A_RASR_B_MASK                    0x10000u
#define S32_MPU_A_RASR_B_SHIFT                   16u
#define S32_MPU_A_RASR_B_WIDTH                   1u
#define S32_MPU_A_RASR_B(x)                      (((uint32_t)(((uint32_t)(x))<<S32_MPU_A_RASR_B_SHIFT))&S32_MPU_A_RASR_B_MASK)
#define S32_MPU_A_RASR_C_MASK                    0x20000u
#define S32_MPU_A_RASR_C_SHIFT                   17u
#define S32_MPU_A_RASR_C_WIDTH                   1u
#define S32_MPU_A_RASR_C(x)                      (((uint32_t)(((uint32_t)(x))<<S32_MPU_A_RASR_C_SHIFT))&S32_MPU_A_RASR_C_MASK)
#define S32_MPU_A_RASR_S_MASK                    0x40000u
#define S32_MPU_A_RASR_S_SHIFT                   18u
#define S32_MPU_A_RASR_S_WIDTH                   1u
#define S32_MPU_A_RASR_S(x)                      (((uint32_t)(((uint32_t)(x))<<S32_MPU_A_RASR_S_SHIFT))&S32_MPU_A_RASR_S_MASK)
#define S32_MPU_A_RASR_TEX_MASK                  0x380000u
#define S32_MPU_A_RASR_TEX_SHIFT                 19u
#define S32_MPU_A_RASR_TEX_WIDTH                 3u
#define S32_MPU_A_RASR_TEX(x)                    (((uint32_t)(((uint32_t)(x))<<S32_MPU_A_RASR_TEX_SHIFT))&S32_MPU_A_RASR_TEX_MASK)
#define S32_MPU_A_RASR_AP_MASK                   0x7000000u
#define S32_MPU_A_RASR_AP_SHIFT                  24u
#define S32_MPU_A_RASR_AP_WIDTH                  3u
#define S32_MPU_A_RASR_AP(x)                     (((uint32_t)(((uint32_t)(x))<<S32_MPU_A_RASR_AP_SHIFT))&S32_MPU_A_RASR_AP_MASK)
#define S32_MPU_A_RASR_XN_MASK                   0x10000000u
#define S32_MPU_A_RASR_XN_SHIFT                  28u
#define S32_MPU_A_RASR_XN_WIDTH                  1u
#define S32_MPU_A_RASR_XN(x)                     (((uint32_t)(((uint32_t)(x))<<S32_MPU_A_RASR_XN_SHIFT))&S32_MPU_A_RASR_XN_MASK)

/*!
 * @}
 */ /* end of group S32_MPU_Register_Masks */


/*!
 * @}
 */ /* end of group S32_MPU_Peripheral_Access_Layer */


/*!
 * @}
 */ /* end of group Peripheral_access_layer */


/* ----------------------------------------------------------------------------
   -- SDK Compatibility
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SDK_Compatibility_Symbols SDK Compatibility
 * @{
 */

/* No SDK compatibility issues. */

/*!
 * @}
 */ /* end of group SDK_Compatibility_Symbols */


#endif  /* #if !defined(S32G274A_H_) */

